{
    "docs": [
        {
            "location": "/ToDo/", 
            "text": "http://playground.tensorflow.org/\n\n\nhttps://www.jiqizhixin.com\n\n\n\u63a8\u8350\u5b9e\u73b0\n\nhttps://www.jiqizhixin.com/articles/2017-12-28-20\n\n\nhttps://www.jiqizhixin.com/articles/alibaba-pku-ATRank\n\n\n\u5176\u4ed6\n\nhttp://blog.csdn.net/c9Yv2cf9I06K2A9E/article/details/79155896\n\n\nhttps://www.jiqizhixin.com/articles/2017-12-05-2\n\n\nhttp://blog.csdn.net/aliceyangxi1987/article/details/71079448\n\n\nhttps://github.com/ujjwalkarn/Machine-Learning-Tutorials\n\n\n\u5927\u6570\u636e/\u6570\u636e\u6316\u6398/\u63a8\u8350\u7cfb\u7edf/\u673a\u5668\u5b66\u4e60\u76f8\u5173\u8d44\u6e90\n\n\nhttps://github.com/weiweifan/Big-Data-Resources\n\n\nhttps://github.com/search?o=desc\nq=%E6%9C%BA%E5%99%A8%E5%AD%A6%E4%B9%A0\ns=stars\ntype=Repositories\nutf8=%E2%9C%93\n\n\nhttps://github.com/Kivy-CN/Stanford-CS-229-CN\n\n\n\u63a8\u8350\u7cfb\u7edf\u76f8\u5173\u7684Paper\n\nhttp://blog.csdn.net/mycafe_/article/details/79123757", 
            "title": "Home"
        }, 
        {
            "location": "/ToDo/#_1", 
            "text": "https://github.com/weiweifan/Big-Data-Resources  https://github.com/search?o=desc q=%E6%9C%BA%E5%99%A8%E5%AD%A6%E4%B9%A0 s=stars type=Repositories utf8=%E2%9C%93  https://github.com/Kivy-CN/Stanford-CS-229-CN  \u63a8\u8350\u7cfb\u7edf\u76f8\u5173\u7684Paper http://blog.csdn.net/mycafe_/article/details/79123757", 
            "title": "\u5927\u6570\u636e/\u6570\u636e\u6316\u6398/\u63a8\u8350\u7cfb\u7edf/\u673a\u5668\u5b66\u4e60\u76f8\u5173\u8d44\u6e90"
        }, 
        {
            "location": "/AboutMe/", 
            "text": "\u5173\u4e8e\u6211\n\n\n\n\n\n\u5c31\u804c\u4e8e\u65e0\u7ebf\u751f\u6d3b(\u5fae\u5e97)\uff0c\u7b97\u6cd5\u5de5\u7a0b\u5e08\u3002\n\n\n\n\n2015.10-       \u65e0\u7ebf\u751f\u6d3b(\u5fae\u5e97) \u7b97\u6cd5\u5de5\u7a0b\u5e08\n\n\n2015.1-2017.9  \u6d59\u6c5f\u8fdc\u4f20\u4fe1\u606f\u6280\u672f\u80a1\u4efd\u6709\u9650\u516c\u53f8 \u7b97\u6cd5\u5de5\u7a0b\u5e08\n\n\n2011.9-2015.6  \u4e2d\u56fd\u8ba1\u91cf\u5b66\u9662 \u7406\u5b66\u9662 \u6570\u5b66\u4e0e\u5e94\u7528\u6570\u5b66\n\n\n2009\n\n\n\n\n\u8054\u7cfb\u6211\n\n\n\n\nGitHub\n\n\nemail\n\n\nWeibo\n\n\nTel\n\n\n\n\n\u5173\u4e8e\u672c\u7ad9\n\n\n\u611f\u8c22 \nGaohaoyang", 
            "title": "About"
        }, 
        {
            "location": "/AboutMe/#_1", 
            "text": "\u5c31\u804c\u4e8e\u65e0\u7ebf\u751f\u6d3b(\u5fae\u5e97)\uff0c\u7b97\u6cd5\u5de5\u7a0b\u5e08\u3002   2015.10-       \u65e0\u7ebf\u751f\u6d3b(\u5fae\u5e97) \u7b97\u6cd5\u5de5\u7a0b\u5e08  2015.1-2017.9  \u6d59\u6c5f\u8fdc\u4f20\u4fe1\u606f\u6280\u672f\u80a1\u4efd\u6709\u9650\u516c\u53f8 \u7b97\u6cd5\u5de5\u7a0b\u5e08  2011.9-2015.6  \u4e2d\u56fd\u8ba1\u91cf\u5b66\u9662 \u7406\u5b66\u9662 \u6570\u5b66\u4e0e\u5e94\u7528\u6570\u5b66  2009", 
            "title": "\u5173\u4e8e\u6211"
        }, 
        {
            "location": "/AboutMe/#_2", 
            "text": "GitHub  email  Weibo  Tel", 
            "title": "\u8054\u7cfb\u6211"
        }, 
        {
            "location": "/AboutMe/#_3", 
            "text": "\u611f\u8c22  Gaohaoyang", 
            "title": "\u5173\u4e8e\u672c\u7ad9"
        }, 
        {
            "location": "/", 
            "text": "Welcome to My Data Lab\n\n\n0. Requirements\n\n\n\n\nconda\n\n\nJupyter\n\n\nMkDocs\n\n\n\n\n1. Setup Env\n\n\nconda update conda\nconda env create --name data --clone root\nsource active data\npip install mkdocs\n\n\n\n\n2. Start Jupyter\n\n\njupyter notebook --config config/jupyter_notebook_config.py\n\n\n\n\n3. Deploy to GitHub Pages\n\n\nmkdocs gh-deploy --clean", 
            "title": "Home"
        }, 
        {
            "location": "/#welcome-to-my-data-lab", 
            "text": "", 
            "title": "Welcome to My Data Lab"
        }, 
        {
            "location": "/#0-requirements", 
            "text": "conda  Jupyter  MkDocs", 
            "title": "0. Requirements"
        }, 
        {
            "location": "/#1-setup-env", 
            "text": "conda update conda\nconda env create --name data --clone root\nsource active data\npip install mkdocs", 
            "title": "1. Setup Env"
        }, 
        {
            "location": "/#2-start-jupyter", 
            "text": "jupyter notebook --config config/jupyter_notebook_config.py", 
            "title": "2. Start Jupyter"
        }, 
        {
            "location": "/#3-deploy-to-github-pages", 
            "text": "mkdocs gh-deploy --clean", 
            "title": "3. Deploy to GitHub Pages"
        }, 
        {
            "location": "/ToDo/", 
            "text": "http://playground.tensorflow.org/\n\n\nhttps://www.jiqizhixin.com\n\n\n\u63a8\u8350\u5b9e\u73b0\n\nhttps://www.jiqizhixin.com/articles/2017-12-28-20\n\n\nhttps://www.jiqizhixin.com/articles/alibaba-pku-ATRank\n\n\n\u5176\u4ed6\n\nhttp://blog.csdn.net/c9Yv2cf9I06K2A9E/article/details/79155896\n\n\nhttps://www.jiqizhixin.com/articles/2017-12-05-2\n\n\nhttp://blog.csdn.net/aliceyangxi1987/article/details/71079448\n\n\nhttps://github.com/ujjwalkarn/Machine-Learning-Tutorials\n\n\n\u5927\u6570\u636e/\u6570\u636e\u6316\u6398/\u63a8\u8350\u7cfb\u7edf/\u673a\u5668\u5b66\u4e60\u76f8\u5173\u8d44\u6e90\n\n\nhttps://github.com/weiweifan/Big-Data-Resources\n\n\nhttps://github.com/search?o=desc\nq=%E6%9C%BA%E5%99%A8%E5%AD%A6%E4%B9%A0\ns=stars\ntype=Repositories\nutf8=%E2%9C%93\n\n\nhttps://github.com/Kivy-CN/Stanford-CS-229-CN\n\n\n\u63a8\u8350\u7cfb\u7edf\u76f8\u5173\u7684Paper\n\nhttp://blog.csdn.net/mycafe_/article/details/79123757", 
            "title": "\u8981\u505a\u7684"
        }, 
        {
            "location": "/ToDo/#_1", 
            "text": "https://github.com/weiweifan/Big-Data-Resources  https://github.com/search?o=desc q=%E6%9C%BA%E5%99%A8%E5%AD%A6%E4%B9%A0 s=stars type=Repositories utf8=%E2%9C%93  https://github.com/Kivy-CN/Stanford-CS-229-CN  \u63a8\u8350\u7cfb\u7edf\u76f8\u5173\u7684Paper http://blog.csdn.net/mycafe_/article/details/79123757", 
            "title": "\u5927\u6570\u636e/\u6570\u636e\u6316\u6398/\u63a8\u8350\u7cfb\u7edf/\u673a\u5668\u5b66\u4e60\u76f8\u5173\u8d44\u6e90"
        }, 
        {
            "location": "/\u4e66\u7c4d/\u673a\u5668\u5b66\u4e60\u5b9e\u6218/00naive-bayes-discuss/", 
            "text": "\u6734\u7d20\u8d1d\u53f6\u65af\u8ba8\u8bba\n\n\n\n\n@Time\u6e10\u884c\u6e10\u8fdc\n \n@\u90a3\u4f0a\u62b9\u5fae\u7b11\n \n@\u5c0f\u7476\n \n@\u5982\u679c\u8fce\u7740\u98ce\u5c31\u98de\n\n\n\n\n\u6734\u7d20\u8d1d\u53f6\u65af\u5c31\u662f\u7528\u6765\u6c42\u9006\u5411\u6982\u7387\u7684\uff08\u5df2\u77e5\uff09\u3002\n\n\n\n\n\u6839\u636e\u8bad\u7ec3\u6570\u636e\u96c6\u6c42\uff08\u6b63\u5411\uff09\u6982\u7387\u3002\n\n\n\u6839\u636e\u6d4b\u8bd5\u6570\u636e\u96c6\u6c42\uff08\u9006\u5411\uff09\u6982\u7387\uff08\u6839\u636e \u8d1d\u53f6\u65af\u516c\u5f0f\uff09\u3002\n\n\n\u6c42\u51fa\u7684\u9006\u5411\u6982\u7387\uff0c\u54ea\u4e2a\u5927\uff0c\u5c31\u5c5e\u4e8e\u54ea\u4e2a\u7c7b\u522b\u3002\n\n\n\n\n\u7591\u95ee 1\n\n\n\u901a\u8fc7\u8bad\u7ec3\u96c6\u6c42\u51fa\u4e86\u5404\u4e2a\u7279\u5f81\u7684\u6982\u7387, \u7136\u540e\u6d4b\u8bd5\u96c6\u7684\u7279\u5f81\u548c\u4e4b\u524d\u6c42\u51fa\u6765\u7684\u6982\u7387\u76f8\u4e58, \u8fd9\u4e2a\u5c31\u4ee3\u8868\u8fd9\u4e2a\u6d4b\u8bd5\u96c6\u7684\u7279\u5f81\u7684\u6982\u7387\u4e86.\n\u6709\u4e86\u8fd9\u4e2a\u57fa\u7840\u540e, \u901a\u8fc7\u8d1d\u53f6\u65af\u516c\u5f0f, \u5c31\u53ef\u4ee5\u5f97\u5230\u8fd9\u4e2a\u6d4b\u8bd5\u96c6\u7684\u7279\u5f81\u5c5e\u4e8e\u54ea\u4e2a\u7c7b\u522b\u4e86, \u4ed6\u4eec\u76f8\u4e58\u7684\u4f9d\u636e\u662f\u4ec0\u4e48\uff1f\n\n\n\u6734\u7d20\u8d1d\u53f6\u65af\uff1f\n\u6761\u4ef6\u72ec\u7acb\u6027\u554a\n\u6734\u7d20\u8d1d\u53f6\u65af\u4e0d\u662f\u57fa\u4e8e\u4e24\u4e2a\u5b9a\u7406\u5417\n\u4e00\u4e2a\u662f\u5047\u8bbe \u6761\u4ef6\u72ec\u7acb\u6027\n\u4e00\u4e2a\u662f \u8d1d\u53f6\u65af\u5b9a\u7406\n\u6761\u4ef6\u72ec\u7acb\u6027  \u6240\u4ee5\u6bcf\u4e2a\u7279\u5f81\u76f8\u4e58\u5f97\u5230\u7684\u6982\u7387 \u5c31\u662f\u8fd9\u4e2a\u6570\u636e\u7684\u6982\u7387\n\n\n\n\n\u7591\u95ee 2\n\n\n\u51ed\u5565\u6d4b\u8bd5\u96c6\u7684\u7279\u5f81\u4e58\u4ee5\u8bad\u7ec3\u96c6\u7684\u6982\u7387\u5c31\u662f\u6d4b\u8bd5\u96c6\u7684\u6982\u7387\u4e86.\u8fd9\u4e48\u505a\u7684\u7406\u8bba\u4f9d\u636e\u662f\u4ec0\u4e48\uff1f\n\n\n\u6734\u7d20\u8d1d\u53f6\u65af\u5c31\u662f\u5229\u7528\u5148\u9a8c\u77e5\u8bc6\u6765\u89e3\u51b3\u540e\u9a8c\u6982\u7387\uff0c\u56e0\u4e3a\u8bad\u7ec3\u96c6\u4e2d\u6211\u4eec\u5df2\u7ecf\u77e5\u9053\u4e86\u6bcf\u4e2a\u5355\u8bcd\u5728\u7c7b\u522b0\u548c1\u4e2d\u7684\u6982\u7387\uff0c\u5373p(w|c).\n\u6211\u4eec\u5c31\u662f\u8981\u5229\u7528\u8fd9\u4e2a\u77e5\u8bc6\u53bb\u89e3\u51b3\u5728\u51fa\u73b0\u8fd9\u4e9b\u5355\u8bcd\u7684\u7ec4\u5408\u60c5\u51b5\u4e0b\uff0c\u7c7b\u522b\u66f4\u53ef\u80fd\u662f0\u8fd8\u662f1,\u5373p(c|w).\n\u5982\u679c\u8bf4\u4e4b\u524d\u7684\u8bad\u7ec3\u6837\u672c\u5c11, \u90a3\u4e48\u8fd9\u4e2a p(w|c) \u5c31\u66f4\u53ef\u80fd\u4e0d\u51c6\u786e, \u6240\u4ee5\u6837\u672c\u8d8a\u591a\u6211\u4eec\u4f1a\u89c9\u5f97\u8fd9\u4e2a p(w|c) \u8d8a\u53ef\u4fe1.", 
            "title": "naive-bayes-discuss"
        }, 
        {
            "location": "/\u4e66\u7c4d/\u673a\u5668\u5b66\u4e60\u5b9e\u6218/00naive-bayes-discuss/#_1", 
            "text": "@Time\u6e10\u884c\u6e10\u8fdc   @\u90a3\u4f0a\u62b9\u5fae\u7b11   @\u5c0f\u7476   @\u5982\u679c\u8fce\u7740\u98ce\u5c31\u98de   \u6734\u7d20\u8d1d\u53f6\u65af\u5c31\u662f\u7528\u6765\u6c42\u9006\u5411\u6982\u7387\u7684\uff08\u5df2\u77e5\uff09\u3002   \u6839\u636e\u8bad\u7ec3\u6570\u636e\u96c6\u6c42\uff08\u6b63\u5411\uff09\u6982\u7387\u3002  \u6839\u636e\u6d4b\u8bd5\u6570\u636e\u96c6\u6c42\uff08\u9006\u5411\uff09\u6982\u7387\uff08\u6839\u636e \u8d1d\u53f6\u65af\u516c\u5f0f\uff09\u3002  \u6c42\u51fa\u7684\u9006\u5411\u6982\u7387\uff0c\u54ea\u4e2a\u5927\uff0c\u5c31\u5c5e\u4e8e\u54ea\u4e2a\u7c7b\u522b\u3002", 
            "title": "\u6734\u7d20\u8d1d\u53f6\u65af\u8ba8\u8bba"
        }, 
        {
            "location": "/\u4e66\u7c4d/\u673a\u5668\u5b66\u4e60\u5b9e\u6218/00naive-bayes-discuss/#1", 
            "text": "\u901a\u8fc7\u8bad\u7ec3\u96c6\u6c42\u51fa\u4e86\u5404\u4e2a\u7279\u5f81\u7684\u6982\u7387, \u7136\u540e\u6d4b\u8bd5\u96c6\u7684\u7279\u5f81\u548c\u4e4b\u524d\u6c42\u51fa\u6765\u7684\u6982\u7387\u76f8\u4e58, \u8fd9\u4e2a\u5c31\u4ee3\u8868\u8fd9\u4e2a\u6d4b\u8bd5\u96c6\u7684\u7279\u5f81\u7684\u6982\u7387\u4e86.\n\u6709\u4e86\u8fd9\u4e2a\u57fa\u7840\u540e, \u901a\u8fc7\u8d1d\u53f6\u65af\u516c\u5f0f, \u5c31\u53ef\u4ee5\u5f97\u5230\u8fd9\u4e2a\u6d4b\u8bd5\u96c6\u7684\u7279\u5f81\u5c5e\u4e8e\u54ea\u4e2a\u7c7b\u522b\u4e86, \u4ed6\u4eec\u76f8\u4e58\u7684\u4f9d\u636e\u662f\u4ec0\u4e48\uff1f  \u6734\u7d20\u8d1d\u53f6\u65af\uff1f\n\u6761\u4ef6\u72ec\u7acb\u6027\u554a\n\u6734\u7d20\u8d1d\u53f6\u65af\u4e0d\u662f\u57fa\u4e8e\u4e24\u4e2a\u5b9a\u7406\u5417\n\u4e00\u4e2a\u662f\u5047\u8bbe \u6761\u4ef6\u72ec\u7acb\u6027\n\u4e00\u4e2a\u662f \u8d1d\u53f6\u65af\u5b9a\u7406\n\u6761\u4ef6\u72ec\u7acb\u6027  \u6240\u4ee5\u6bcf\u4e2a\u7279\u5f81\u76f8\u4e58\u5f97\u5230\u7684\u6982\u7387 \u5c31\u662f\u8fd9\u4e2a\u6570\u636e\u7684\u6982\u7387", 
            "title": "\u7591\u95ee 1"
        }, 
        {
            "location": "/\u4e66\u7c4d/\u673a\u5668\u5b66\u4e60\u5b9e\u6218/00naive-bayes-discuss/#2", 
            "text": "\u51ed\u5565\u6d4b\u8bd5\u96c6\u7684\u7279\u5f81\u4e58\u4ee5\u8bad\u7ec3\u96c6\u7684\u6982\u7387\u5c31\u662f\u6d4b\u8bd5\u96c6\u7684\u6982\u7387\u4e86.\u8fd9\u4e48\u505a\u7684\u7406\u8bba\u4f9d\u636e\u662f\u4ec0\u4e48\uff1f  \u6734\u7d20\u8d1d\u53f6\u65af\u5c31\u662f\u5229\u7528\u5148\u9a8c\u77e5\u8bc6\u6765\u89e3\u51b3\u540e\u9a8c\u6982\u7387\uff0c\u56e0\u4e3a\u8bad\u7ec3\u96c6\u4e2d\u6211\u4eec\u5df2\u7ecf\u77e5\u9053\u4e86\u6bcf\u4e2a\u5355\u8bcd\u5728\u7c7b\u522b0\u548c1\u4e2d\u7684\u6982\u7387\uff0c\u5373p(w|c).\n\u6211\u4eec\u5c31\u662f\u8981\u5229\u7528\u8fd9\u4e2a\u77e5\u8bc6\u53bb\u89e3\u51b3\u5728\u51fa\u73b0\u8fd9\u4e9b\u5355\u8bcd\u7684\u7ec4\u5408\u60c5\u51b5\u4e0b\uff0c\u7c7b\u522b\u66f4\u53ef\u80fd\u662f0\u8fd8\u662f1,\u5373p(c|w).\n\u5982\u679c\u8bf4\u4e4b\u524d\u7684\u8bad\u7ec3\u6837\u672c\u5c11, \u90a3\u4e48\u8fd9\u4e2a p(w|c) \u5c31\u66f4\u53ef\u80fd\u4e0d\u51c6\u786e, \u6240\u4ee5\u6837\u672c\u8d8a\u591a\u6211\u4eec\u4f1a\u89c9\u5f97\u8fd9\u4e2a p(w|c) \u8d8a\u53ef\u4fe1.", 
            "title": "\u7591\u95ee 2"
        }, 
        {
            "location": "/\u4e66\u7c4d/\u673a\u5668\u5b66\u4e60\u5b9e\u6218/01.\u673a\u5668\u5b66\u4e60\u57fa\u7840/", 
            "text": "\u7b2c1\u7ae0 \u673a\u5668\u5b66\u4e60\u57fa\u7840\n\n\n\u673a\u5668\u5b66\u4e60 \u6982\u8ff0\n\n\n\u673a\u5668\u5b66\u4e60(Machine Learning,ML)\n \u662f\u4f7f\u7528\u8ba1\u7b97\u673a\u6765\u5f70\u663e\u6570\u636e\u80cc\u540e\u7684\u771f\u5b9e\u542b\u4e49\uff0c\u5b83\u4e3a\u4e86\u628a\u65e0\u5e8f\u7684\u6570\u636e\u8f6c\u6362\u6210\u6709\u7528\u7684\u4fe1\u606f\u3002\u662f\u4e00\u95e8\u591a\u9886\u57df\u4ea4\u53c9\u5b66\u79d1\uff0c\u6d89\u53ca\u6982\u7387\u8bba\u3001\u7edf\u8ba1\u5b66\u3001\u903c\u8fd1\u8bba\u3001\u51f8\u5206\u6790\u3001\u7b97\u6cd5\u590d\u6742\u5ea6\u7406\u8bba\u7b49\u591a\u95e8\u5b66\u79d1\u3002\u4e13\u95e8\u7814\u7a76\u8ba1\u7b97\u673a\u600e\u6837\u6a21\u62df\u6216\u5b9e\u73b0\u4eba\u7c7b\u7684\u5b66\u4e60\u884c\u4e3a\uff0c\u4ee5\u83b7\u53d6\u65b0\u7684\u77e5\u8bc6\u6216\u6280\u80fd\uff0c\u91cd\u65b0\u7ec4\u7ec7\u5df2\u6709\u7684\u77e5\u8bc6\u7ed3\u6784\u4f7f\u4e4b\u4e0d\u65ad\u6539\u5584\u81ea\u8eab\u7684\u6027\u80fd\u3002\n\u5b83\u662f\u4eba\u5de5\u667a\u80fd\u7684\u6838\u5fc3\uff0c\u662f\u4f7f\u8ba1\u7b97\u673a\u5177\u6709\u667a\u80fd\u7684\u6839\u672c\u9014\u5f84\uff0c\u5176\u5e94\u7528\u904d\u53ca\u4eba\u5de5\u667a\u80fd\u7684\u5404\u4e2a\u9886\u57df\uff0c\u5b83\u4e3b\u8981\u4f7f\u7528\u5f52\u7eb3\u3001\u7efc\u5408\u800c\u4e0d\u662f\u6f14\u7ece\u3002\n\n\n\n\n\u6d77\u91cf\u7684\u6570\u636e\n\n\n\u83b7\u53d6\u6709\u7528\u7684\u4fe1\u606f\n\n\n\n\n\u673a\u5668\u5b66\u4e60 \u7814\u7a76\u610f\u4e49\n\n\n\u673a\u5668\u5b66\u4e60\u662f\u4e00\u95e8\u4eba\u5de5\u667a\u80fd\u7684\u79d1\u5b66\uff0c\u8be5\u9886\u57df\u7684\u4e3b\u8981\u7814\u7a76\u5bf9\u8c61\u662f\u4eba\u5de5\u667a\u80fd\uff0c\u7279\u522b\u662f\u5982\u4f55\u5728\u7ecf\u9a8c\u5b66\u4e60\u4e2d\u6539\u5584\u5177\u4f53\u7b97\u6cd5\u7684\u6027\u80fd\u201d\u3002 \u201c\u673a\u5668\u5b66\u4e60\u662f\u5bf9\u80fd\u901a\u8fc7\u7ecf\u9a8c\u81ea\u52a8\u6539\u8fdb\u7684\u8ba1\u7b97\u673a\u7b97\u6cd5\u7684\u7814\u7a76\u201d\u3002 \u201c\u673a\u5668\u5b66\u4e60\u662f\u7528\u6570\u636e\u6216\u4ee5\u5f80\u7684\u7ecf\u9a8c\uff0c\u4ee5\u6b64\u4f18\u5316\u8ba1\u7b97\u673a\u7a0b\u5e8f\u7684\u6027\u80fd\u6807\u51c6\u3002\u201d \u4e00\u79cd\u7ecf\u5e38\u5f15\u7528\u7684\u82f1\u6587\u5b9a\u4e49\u662f\uff1aA computer program is said to learn from experience E with respect to some class of tasks T and performance measure P, if its performance at tasks in T, as measured by P, improves with experience E.\n\n\n\u673a\u5668\u5b66\u4e60\u5df2\u7ecf\u6709\u4e86\u5341\u5206\u5e7f\u6cdb\u7684\u5e94\u7528\uff0c\u4f8b\u5982\uff1a\u6570\u636e\u6316\u6398\u3001\u8ba1\u7b97\u673a\u89c6\u89c9\u3001\u81ea\u7136\u8bed\u8a00\u5904\u7406\u3001\u751f\u7269\u7279\u5f81\u8bc6\u522b\u3001\u641c\u7d22\u5f15\u64ce\u3001\u533b\u5b66\u8bca\u65ad\u3001\u68c0\u6d4b\u4fe1\u7528\u5361\u6b3a\u8bc8\u3001\u8bc1\u5238\u5e02\u573a\u5206\u6790\u3001DNA\u5e8f\u5217\u6d4b\u5e8f\u3001\u8bed\u97f3\u548c\u624b\u5199\u8bc6\u522b\u3001\u6218\u7565\u6e38\u620f\u548c\u673a\u5668\u4eba\u8fd0\u7528\u3002\n\n\n\u673a\u5668\u5b66\u4e60 \u573a\u666f\n\n\n\n\n\u4f8b\u5982\uff1a\u8bc6\u522b\u52a8\u7269\u732b\n\n\n\u6a21\u5f0f\u8bc6\u522b\uff08\u5b98\u65b9\u6807\u51c6\uff09\uff1a\u4eba\u4eec\u901a\u8fc7\u5927\u91cf\u7684\u7ecf\u9a8c\uff0c\u5f97\u5230\u7ed3\u8bba\uff0c\u4ece\u800c\u5224\u65ad\u5b83\u5c31\u662f\u732b\u3002\n\n\n\u673a\u5668\u5b66\u4e60\uff08\u6570\u636e\u5b66\u4e60\uff09\uff1a\u4eba\u4eec\u901a\u8fc7\u9605\u8bfb\u8fdb\u884c\u5b66\u4e60\uff0c\u89c2\u5bdf\u5b83\u4f1a\u53eb\u3001\u5c0f\u773c\u775b\u3001\u4e24\u53ea\u8033\u6735\u3001\u56db\u6761\u817f\u3001\u4e00\u6761\u5c3e\u5df4\uff0c\u5f97\u5230\u7ed3\u8bba\uff0c\u4ece\u800c\u5224\u65ad\u5b83\u5c31\u662f\u732b\u3002\n\n\n\n\n\u6df1\u5ea6\u5b66\u4e60\uff08\u6df1\u5165\u6570\u636e\uff09\uff1a\u4eba\u4eec\u901a\u8fc7\u6df1\u5165\u4e86\u89e3\u5b83\uff0c\u53d1\u73b0\u5b83\u4f1a'\u55b5\u55b5'\u7684\u53eb\u3001\u4e0e\u540c\u7c7b\u7684\u732b\u79d1\u52a8\u7269\u5f88\u7c7b\u4f3c\uff0c\u5f97\u5230\u7ed3\u8bba\uff0c\u4ece\u800c\u5224\u65ad\u5b83\u5c31\u662f\u732b\u3002\uff08\u6df1\u5ea6\u5b66\u4e60\u5e38\u7528\u9886\u57df\uff1a\u8bed\u97f3\u8bc6\u522b\u3001\u56fe\u50cf\u8bc6\u522b\uff09\n\n\n\n\n\n\n\u6a21\u5f0f\u8bc6\u522b\uff08pattern recognition\uff09: \u6a21\u5f0f\u8bc6\u522b\u662f\u6700\u53e4\u8001\u7684\uff08\u4f5c\u4e3a\u4e00\u4e2a\u672f\u8bed\u800c\u8a00\uff0c\u53ef\u4ee5\u8bf4\u662f\u5f88\u8fc7\u65f6\u7684\uff09\u3002\n\n\n\n\n\u6211\u4eec\u628a\u73af\u5883\u4e0e\u5ba2\u4f53\u7edf\u79f0\u4e3a\u201c\u6a21\u5f0f\u201d\uff0c\u8bc6\u522b\u662f\u5bf9\u6a21\u5f0f\u7684\u4e00\u79cd\u8ba4\u77e5\uff0c\u662f\u5982\u4f55\u8ba9\u4e00\u4e2a\u8ba1\u7b97\u673a\u7a0b\u5e8f\u53bb\u505a\u4e00\u4e9b\u770b\u8d77\u6765\u5f88\u201c\u667a\u80fd\u201d\u7684\u4e8b\u60c5\u3002\n\n\n\u901a\u8fc7\u878d\u4e8e\u667a\u6167\u548c\u76f4\u89c9\u540e\uff0c\u901a\u8fc7\u6784\u5efa\u7a0b\u5e8f\uff0c\u8bc6\u522b\u4e00\u4e9b\u4e8b\u7269\uff0c\u800c\u4e0d\u662f\u4eba\uff0c\u4f8b\u5982: \u8bc6\u522b\u6570\u5b57\u3002\n\n\n\n\n\n\n\u673a\u5668\u5b66\u4e60\uff08machine learning\uff09: \u673a\u5668\u5b66\u4e60\u662f\u6700\u57fa\u7840\u7684\uff08\u5f53\u4e0b\u521d\u521b\u516c\u53f8\u548c\u7814\u7a76\u5b9e\u9a8c\u5ba4\u7684\u70ed\u70b9\u9886\u57df\u4e4b\u4e00\uff09\u3002\n\n\n\u572890\u5e74\u4ee3\u521d\uff0c\u4eba\u4eec\u5f00\u59cb\u610f\u8bc6\u5230\u4e00\u79cd\u53ef\u4ee5\u66f4\u6709\u6548\u5730\u6784\u5efa\u6a21\u5f0f\u8bc6\u522b\u7b97\u6cd5\u7684\u65b9\u6cd5\uff0c\u90a3\u5c31\u662f\u7528\u6570\u636e\uff08\u53ef\u4ee5\u901a\u8fc7\u5ec9\u4ef7\u52b3\u52a8\u529b\u91c7\u96c6\u83b7\u5f97\uff09\u53bb\u66ff\u6362\u4e13\u5bb6\uff08\u5177\u6709\u5f88\u591a\u56fe\u50cf\u65b9\u9762\u77e5\u8bc6\u7684\u4eba\uff09\u3002\n\n\n\u201c\u673a\u5668\u5b66\u4e60\u201d\u5f3a\u8c03\u7684\u662f\uff0c\u5728\u7ed9\u8ba1\u7b97\u673a\u7a0b\u5e8f\uff08\u6216\u8005\u673a\u5668\uff09\u8f93\u5165\u4e00\u4e9b\u6570\u636e\u540e\uff0c\u5b83\u5fc5\u987b\u505a\u4e00\u4e9b\u4e8b\u60c5\uff0c\u90a3\u5c31\u662f\u5b66\u4e60\u8fd9\u4e9b\u6570\u636e\uff0c\u800c\u8fd9\u4e2a\u5b66\u4e60\u7684\u6b65\u9aa4\u662f\u660e\u786e\u7684\u3002\n\n\n\u673a\u5668\u5b66\u4e60\uff08Machine Learning\uff09\u662f\u4e00\u95e8\u4e13\u95e8\u7814\u7a76\u8ba1\u7b97\u673a\u600e\u6837\u6a21\u62df\u6216\u5b9e\u73b0\u4eba\u7c7b\u7684\u5b66\u4e60\u884c\u4e3a\uff0c\u4ee5\u83b7\u53d6\u65b0\u7684\u77e5\u8bc6\u6216\u6280\u80fd\uff0c\u91cd\u65b0\u7ec4\u7ec7\u5df2\u6709\u7684\u77e5\u8bc6\u7ed3\u6784\u4f7f\u4e4b\u4e0d\u65ad\u6539\u5584\u81ea\u8eab\u6027\u80fd\u7684\u5b66\u79d1\u3002\n\n\n\n\n\n\n\n\n\u6df1\u5ea6\u5b66\u4e60\uff08deep learning\uff09: \u6df1\u5ea6\u5b66\u4e60\u662f\u975e\u5e38\u5d2d\u65b0\u548c\u6709\u5f71\u54cd\u529b\u7684\u524d\u6cbf\u9886\u57df\uff0c\u6211\u4eec\u751a\u81f3\u4e0d\u4f1a\u53bb\u601d\u8003-\u540e\u6df1\u5ea6\u5b66\u4e60\u65f6\u4ee3\u3002\n\n\n\n\n\u6df1\u5ea6\u5b66\u4e60\u662f\u673a\u5668\u5b66\u4e60\u7814\u7a76\u4e2d\u7684\u4e00\u4e2a\u65b0\u7684\u9886\u57df\uff0c\u5176\u52a8\u673a\u5728\u4e8e\u5efa\u7acb\u3001\u6a21\u62df\u4eba\u8111\u8fdb\u884c\u5206\u6790\u5b66\u4e60\u7684\u795e\u7ecf\u7f51\u7edc\uff0c\u5b83\u6a21\u4eff\u4eba\u8111\u7684\u673a\u5236\u6765\u89e3\u91ca\u6570\u636e\uff0c\u4f8b\u5982\u56fe\u50cf\uff0c\u58f0\u97f3\u548c\u6587\u672c\u3002\n\n\n\n\n\n\n\n\n\u53c2\u8003\u5730\u5740\uff1a \n\n\n\n\n\u6df1\u5ea6\u5b66\u4e60 vs \u673a\u5668\u5b66\u4e60 vs \u6a21\u5f0f\u8bc6\u522b\n\n\n\u6df1\u5ea6\u5b66\u4e60 \u767e\u79d1\u8d44\u6599\n\n\n\n\n\n\n\n\n\n\n\u673a\u5668\u5b66\u4e60\u5df2\u5e94\u7528\u4e8e\u591a\u4e2a\u9886\u57df\uff0c\u8fdc\u8fdc\u8d85\u51fa\u5927\u591a\u6570\u4eba\u7684\u60f3\u8c61\uff0c\u6a2a\u8de8\uff1a\u8ba1\u7b97\u673a\u79d1\u5b66\u3001\u5de5\u7a0b\u6280\u672f\u548c\u7edf\u8ba1\u5b66\u7b49\u591a\u4e2a\u5b66\u79d1\u3002\n\n\n\n\n\n\n\u641c\u7d22\u5f15\u64ce: \u6839\u636e\u4f60\u7684\u641c\u7d22\u70b9\u51fb\uff0c\u4f18\u5316\u4f60\u4e0b\u6b21\u7684\u641c\u7d22\u7ed3\u679c,\u662f\u673a\u5668\u5b66\u4e60\u6765\u5e2e\u52a9\u641c\u7d22\u5f15\u64ce\u5224\u65ad\u54ea\u4e2a\u7ed3\u679c\u66f4\u9002\u5408\u4f60\uff08\u4e5f\u5224\u65ad\u54ea\u4e2a\u5e7f\u544a\u66f4\u9002\u5408\u4f60\uff09\u3002\n\n\n\u5783\u573e\u90ae\u4ef6: \u4f1a\u81ea\u52a8\u7684\u8fc7\u6ee4\u5783\u573e\u5e7f\u544a\u90ae\u4ef6\u5230\u5783\u573e\u7bb1\u5185\u3002\n\n\n\u8d85\u5e02\u4f18\u60e0\u5238: \u4f60\u4f1a\u53d1\u73b0\uff0c\u4f60\u5728\u8d2d\u4e70\u5c0f\u5b69\u5b50\u5c3f\u5e03\u7684\u65f6\u5019\uff0c\u552e\u8d27\u5458\u4f1a\u8d60\u9001\u4f60\u4e00\u5f20\u4f18\u60e0\u5238\u53ef\u4ee5\u5151\u63626\u7f50\u5564\u9152\u3002\n\n\n\u90ae\u5c40\u90ae\u5bc4: \u624b\u5199\u8f6f\u4ef6\u81ea\u52a8\u8bc6\u522b\u5bc4\u9001\u8d3a\u5361\u7684\u5730\u5740\u3002\n\n\n\u7533\u8bf7\u8d37\u6b3e: \u901a\u8fc7\u4f60\u6700\u8fd1\u7684\u91d1\u878d\u6d3b\u52a8\u4fe1\u606f\u8fdb\u884c\u7efc\u5408\u8bc4\u5b9a\uff0c\u51b3\u5b9a\u4f60\u662f\u5426\u5408\u683c\u3002\n\n\n\n\n\u673a\u5668\u5b66\u4e60 \u7ec4\u6210\n\n\n\u4e3b\u8981\u4efb\u52a1\n\n\n\n\n\u5206\u7c7b\uff08classification\uff09\uff1a\u5c06\u5b9e\u4f8b\u6570\u636e\u5212\u5206\u5230\u5408\u9002\u7684\u7c7b\u522b\u4e2d\u3002\n\n\n\u5e94\u7528\u5b9e\u4f8b\uff1a\u5224\u65ad\u7f51\u7ad9\u662f\u5426\u88ab\u9ed1\u5ba2\u5165\u4fb5\uff08\u4e8c\u5206\u7c7b \uff09\uff0c\u624b\u5199\u6570\u5b57\u7684\u81ea\u52a8\u8bc6\u522b\uff08\u591a\u5206\u7c7b\uff09\n\n\n\u56de\u5f52\uff08regression\uff09\uff1a\u4e3b\u8981\u7528\u4e8e\u9884\u6d4b\u6570\u503c\u578b\u6570\u636e\u3002\n\n\n\u5e94\u7528\u5b9e\u4f8b\uff1a\u80a1\u7968\u4ef7\u683c\u6ce2\u52a8\u7684\u9884\u6d4b\uff0c\u623f\u5c4b\u4ef7\u683c\u7684\u9884\u6d4b\u7b49\u3002\n\n\n\n\n\u76d1\u7763\u5b66\u4e60\uff08supervised learning\uff09\n\n\n\n\n\u5fc5\u987b\u786e\u5b9a\u76ee\u6807\u53d8\u91cf\u7684\u503c\uff0c\u4ee5\u4fbf\u673a\u5668\u5b66\u4e60\u7b97\u6cd5\u53ef\u4ee5\u53d1\u73b0\u7279\u5f81\u548c\u76ee\u6807\u53d8\u91cf\u4e4b\u95f4\u7684\u5173\u7cfb\u3002\u5728\u76d1\u7763\u5b66\u4e60\u4e2d\uff0c\u7ed9\u5b9a\u4e00\u7ec4\u6570\u636e\uff0c\u6211\u4eec\u77e5\u9053\u6b63\u786e\u7684\u8f93\u51fa\u7ed3\u679c\u5e94\u8be5\u662f\u4ec0\u4e48\u6837\u5b50\uff0c\u5e76\u4e14\u77e5\u9053\u5728\u8f93\u5165\u548c\u8f93\u51fa\u4e4b\u95f4\u6709\u7740\u4e00\u4e2a\u7279\u5b9a\u7684\u5173\u7cfb\u3002 (\u5305\u62ec\uff1a\u5206\u7c7b\u548c\u56de\u5f52)\n\n\n\u6837\u672c\u96c6\uff1a\u8bad\u7ec3\u6570\u636e + \u6d4b\u8bd5\u6570\u636e\n\n\n\u8bad\u7ec3\u6837\u672c = \u7279\u5f81(feature) + \u76ee\u6807\u53d8\u91cf(label: \u5206\u7c7b-\u79bb\u6563\u503c/\u56de\u5f52-\u8fde\u7eed\u503c)\n\n\n\u7279\u5f81\u901a\u5e38\u662f\u8bad\u7ec3\u6837\u672c\u96c6\u7684\u5217\uff0c\u5b83\u4eec\u662f\u72ec\u7acb\u6d4b\u91cf\u5f97\u5230\u7684\u3002\n\n\n\u76ee\u6807\u53d8\u91cf: \u76ee\u6807\u53d8\u91cf\u662f\u673a\u5668\u5b66\u4e60\u9884\u6d4b\u7b97\u6cd5\u7684\u6d4b\u8bd5\u7ed3\u679c\u3002\n\n\n\u5728\u5206\u7c7b\u7b97\u6cd5\u4e2d\u76ee\u6807\u53d8\u91cf\u7684\u7c7b\u578b\u901a\u5e38\u662f\u6807\u79f0\u578b(\u5982\uff1a\u771f\u4e0e\u5047)\uff0c\u800c\u5728\u56de\u5f52\u7b97\u6cd5\u4e2d\u901a\u5e38\u662f\u8fde\u7eed\u578b(\u5982\uff1a1~100)\u3002\n\n\n\n\n\n\n\n\n\n\n\u76d1\u7763\u5b66\u4e60\u9700\u8981\u6ce8\u610f\u7684\u95ee\u9898\uff1a\n\n\n\u504f\u7f6e\u65b9\u5dee\u6743\u8861\n\n\n\u529f\u80fd\u7684\u590d\u6742\u6027\u548c\u6570\u91cf\u7684\u8bad\u7ec3\u6570\u636e\n\n\n\u8f93\u5165\u7a7a\u95f4\u7684\u7ef4\u6570\n\n\n\u566a\u58f0\u4e2d\u7684\u8f93\u51fa\u503c\n\n\n\n\n\n\n\u77e5\u8bc6\u8868\u793a\n\uff1a\n\n\n\u53ef\u4ee5\u91c7\u7528\u89c4\u5219\u96c6\u7684\u5f62\u5f0f\u3010\u4f8b\u5982\uff1a\u6570\u5b66\u6210\u7ee9\u5927\u4e8e90\u5206\u4e3a\u4f18\u79c0\u3011\n\n\n\u53ef\u4ee5\u91c7\u7528\u6982\u7387\u5206\u5e03\u7684\u5f62\u5f0f\u3010\u4f8b\u5982\uff1a\u901a\u8fc7\u7edf\u8ba1\u5206\u5e03\u53d1\u73b0\uff0c90%\u7684\u540c\u5b66\u6570\u5b66\u6210\u7ee9\uff0c\u572870\u5206\u4ee5\u4e0b\uff0c\u90a3\u4e48\u5927\u4e8e70\u5206\u5b9a\u4e3a\u4f18\u79c0\u3011\n\n\n\u53ef\u4ee5\u4f7f\u7528\u8bad\u7ec3\u6837\u672c\u96c6\u4e2d\u7684\u4e00\u4e2a\u5b9e\u4f8b\u3010\u4f8b\u5982\uff1a\u901a\u8fc7\u6837\u672c\u96c6\u5408\uff0c\u6211\u4eec\u8bad\u7ec3\u51fa\u4e00\u4e2a\u6a21\u578b\u5b9e\u4f8b\uff0c\u5f97\u51fa \u5e74\u8f7b\uff0c\u6570\u5b66\u6210\u7ee9\u4e2d\u9ad8\u7b49\uff0c\u8c08\u5410\u4f18\u96c5\uff0c\u6211\u4eec\u8ba4\u4e3a\u662f\u4f18\u79c0\u3011\n\n\n\n\n\n\n\n\n\u975e\u76d1\u7763\u5b66\u4e60\uff08unsupervised learing\uff09\n\n\n\n\n\u5728\u673a\u5668\u5b66\u4e60\uff0c\u65e0\u76d1\u7763\u5b66\u4e60\u7684\u95ee\u9898\u662f\uff0c\u5728\u672a\u52a0\u6807\u7b7e\u7684\u6570\u636e\u4e2d\uff0c\u8bd5\u56fe\u627e\u5230\u9690\u85cf\u7684\u7ed3\u6784\u3002\u56e0\u4e3a\u63d0\u4f9b\u7ed9\u5b66\u4e60\u8005\u7684\u5b9e\u4f8b\u662f\u672a\u6807\u8bb0\u7684\uff0c\u56e0\u6b64\u6ca1\u6709\u9519\u8bef\u6216\u62a5\u916c\u4fe1\u53f7\u6765\u8bc4\u4f30\u6f5c\u5728\u7684\u89e3\u51b3\u65b9\u6848\u3002\n\n\n\u65e0\u76d1\u7763\u5b66\u4e60\u662f\u5bc6\u5207\u76f8\u5173\u7684\u7edf\u8ba1\u6570\u636e\u5bc6\u5ea6\u4f30\u8ba1\u7684\u95ee\u9898\u3002\u7136\u800c\u65e0\u76d1\u7763\u5b66\u4e60\u8fd8\u5305\u62ec\u5bfb\u6c42\uff0c\u603b\u7ed3\u548c\u89e3\u91ca\u6570\u636e\u7684\u4e3b\u8981\u7279\u70b9\u7b49\u8bf8\u591a\u6280\u672f\u3002\u5728\u65e0\u76d1\u7763\u5b66\u4e60\u4f7f\u7528\u7684\u8bb8\u591a\u65b9\u6cd5\u662f\u57fa\u4e8e\u7528\u4e8e\u5904\u7406\u6570\u636e\u7684\u6570\u636e\u6316\u6398\u65b9\u6cd5\u3002\n\n\n\u6570\u636e\u6ca1\u6709\u7c7b\u522b\u4fe1\u606f\uff0c\u4e5f\u4e0d\u4f1a\u7ed9\u5b9a\u76ee\u6807\u503c\u3002\n\n\n\u975e\u76d1\u7763\u5b66\u4e60\u5305\u62ec\u7684\u7c7b\u578b\uff1a\n\n\n\u805a\u7c7b\uff1a\u5728\u65e0\u76d1\u7763\u5b66\u4e60\u4e2d\uff0c\u5c06\u6570\u636e\u96c6\u5206\u6210\u7531\u7c7b\u4f3c\u7684\u5bf9\u8c61\u7ec4\u6210\u591a\u4e2a\u7c7b\u7684\u8fc7\u7a0b\u79f0\u4e3a\u805a\u7c7b\u3002\n\n\n\u5bc6\u5ea6\u4f30\u8ba1\uff1a\u901a\u8fc7\u6837\u672c\u5206\u5e03\u7684\u7d27\u5bc6\u7a0b\u5ea6\uff0c\u6765\u4f30\u8ba1\u4e0e\u5206\u7ec4\u7684\u76f8\u4f3c\u6027\u3002\n\n\n\u6b64\u5916\uff0c\u65e0\u76d1\u7763\u5b66\u4e60\u8fd8\u53ef\u4ee5\u51cf\u5c11\u6570\u636e\u7279\u5f81\u7684\u7ef4\u5ea6\uff0c\u4ee5\u4fbf\u6211\u4eec\u53ef\u4ee5\u4f7f\u7528\u4e8c\u7ef4\u6216\u4e09\u7ef4\u56fe\u5f62\u66f4\u52a0\u76f4\u89c2\u5730\u5c55\u793a\u6570\u636e\u4fe1\u606f\u3002\n\n\n\n\n\u5f3a\u5316\u5b66\u4e60\n\n\n\u8fd9\u4e2a\u7b97\u6cd5\u53ef\u4ee5\u8bad\u7ec3\u7a0b\u5e8f\u505a\u51fa\u67d0\u4e00\u51b3\u5b9a\u3002\u7a0b\u5e8f\u5728\u67d0\u4e00\u60c5\u51b5\u4e0b\u5c1d\u8bd5\u6240\u6709\u7684\u53ef\u80fd\u884c\u52a8\uff0c\u8bb0\u5f55\u4e0d\u540c\u884c\u52a8\u7684\u7ed3\u679c\u5e76\u8bd5\u7740\u627e\u51fa\u6700\u597d\u7684\u4e00\u6b21\u5c1d\u8bd5\u6765\u505a\u51b3\u5b9a\u3002 \u5c5e\u4e8e\u8fd9\u4e00\u7c7b\u7b97\u6cd5\u7684\u6709\u9a6c\u5c14\u53ef\u592b\u51b3\u7b56\u8fc7\u7a0b\u3002\n\n\n\u8bad\u7ec3\u8fc7\u7a0b\n\n\n\n\n\u7b97\u6cd5\u6c47\u603b\n\n\n\n\n\u673a\u5668\u5b66\u4e60 \u4f7f\u7528\n\n\n\n\n\u9009\u62e9\u7b97\u6cd5\u9700\u8981\u8003\u8651\u7684\u4e24\u4e2a\u95ee\u9898\n\n\n\n\n\n\n\u7b97\u6cd5\u573a\u666f\n\n\n\u9884\u6d4b\u660e\u5929\u662f\u5426\u4e0b\u96e8\uff0c\u56e0\u4e3a\u53ef\u4ee5\u7528\u5386\u53f2\u7684\u5929\u6c14\u60c5\u51b5\u505a\u9884\u6d4b\uff0c\u6240\u4ee5\u9009\u62e9\u76d1\u7763\u5b66\u4e60\u7b97\u6cd5\n\n\n\u7ed9\u4e00\u7fa4\u964c\u751f\u7684\u4eba\u8fdb\u884c\u5206\u7ec4\uff0c\u4f46\u662f\u6211\u4eec\u5e76\u6ca1\u6709\u8fd9\u4e9b\u4eba\u7684\u7c7b\u522b\u4fe1\u606f\uff0c\u6240\u4ee5\u9009\u62e9\u65e0\u76d1\u7763\u5b66\u4e60\u7b97\u6cd5\u3001\u901a\u8fc7\u4ed6\u4eec\u8eab\u9ad8\u3001\u4f53\u91cd\u7b49\u7279\u5f81\u8fdb\u884c\u5904\u7406\u3002\n\n\n\n\n\n\n\u9700\u8981\u6536\u96c6\u6216\u5206\u6790\u7684\u6570\u636e\u662f\u4ec0\u4e48\n\n\n\n\n\n\n\u4e3e\u4f8b\n\n\n\n\n\n\n\n\n\u673a\u5668\u5b66\u4e60 \u5f00\u53d1\u6d41\u7a0b\n\n\n\n\n\n\n\u6536\u96c6\u6570\u636e: \u6536\u96c6\u6837\u672c\u6570\u636e\n\n\n\u51c6\u5907\u6570\u636e: \u6ce8\u610f\u6570\u636e\u7684\u683c\u5f0f\n\n\n\u5206\u6790\u6570\u636e: \u4e3a\u4e86\u786e\u4fdd\u6570\u636e\u96c6\u4e2d\u6ca1\u6709\u5783\u573e\u6570\u636e\uff1b\n\n\n\u5982\u679c\u662f\u7b97\u6cd5\u53ef\u4ee5\u5904\u7406\u7684\u6570\u636e\u683c\u5f0f\u6216\u53ef\u4fe1\u4efb\u7684\u6570\u636e\u6e90\uff0c\u5219\u53ef\u4ee5\u8df3\u8fc7\u8be5\u6b65\u9aa4\uff1b\n\n\n\u53e6\u5916\u8be5\u6b65\u9aa4\u9700\u8981\u4eba\u5de5\u5e72\u9884\uff0c\u4f1a\u964d\u4f4e\u81ea\u52a8\u5316\u7cfb\u7edf\u7684\u4ef7\u503c\u3002\n\n\n\n\n\n\n\u8bad\u7ec3\u7b97\u6cd5: [\u673a\u5668\u5b66\u4e60\u7b97\u6cd5\u6838\u5fc3]\u5982\u679c\u4f7f\u7528\u65e0\u76d1\u7763\u5b66\u4e60\u7b97\u6cd5\uff0c\u7531\u4e8e\u4e0d\u5b58\u5728\u76ee\u6807\u53d8\u91cf\u503c\uff0c\u5219\u53ef\u4ee5\u8df3\u8fc7\u8be5\u6b65\u9aa4\n\n\n\u6d4b\u8bd5\u7b97\u6cd5: [\u673a\u5668\u5b66\u4e60\u7b97\u6cd5\u6838\u5fc3]\u8bc4\u4f30\u7b97\u6cd5\u6548\u679c\n\n\n\u4f7f\u7528\u7b97\u6cd5: \u5c06\u673a\u5668\u5b66\u4e60\u7b97\u6cd5\u8f6c\u4e3a\u5e94\u7528\u7a0b\u5e8f\n\n\n\n\n\u673a\u5668\u5b66\u4e60 \u6570\u5b66\u57fa\u7840\n\n\n\n\n\u5fae\u79ef\u5206\n\n\n\u7edf\u8ba1\u5b66/\u6982\u7387\u8bba\n\n\n\u7ebf\u6027\u4ee3\u6570\n\n\n\n\n\u673a\u5668\u5b66\u4e60 \u5de5\u5177\n\n\nPython\u8bed\u8a00\n\n\n\n\n\u53ef\u6267\u884c\u4f2a\u4ee3\u7801\n\n\nPython\u6bd4\u8f83\u6d41\u884c\uff1a\u4f7f\u7528\u5e7f\u6cdb\u3001\u4ee3\u7801\u8303\u4f8b\u591a\u3001\u4e30\u5bcc\u6a21\u5757\u5e93\uff0c\u5f00\u53d1\u5468\u671f\u77ed\n\n\nPython\u8bed\u8a00\u7684\u7279\u8272\uff1a\u6e05\u6670\u7b80\u7ec3\u3001\u6613\u4e8e\u7406\u89e3\n\n\nPython\u8bed\u8a00\u7684\u7f3a\u70b9\uff1a\u552f\u4e00\u4e0d\u8db3\u7684\u662f\u6027\u80fd\u95ee\u9898\n\n\nPython\u76f8\u5173\u7684\u5e93\n\n\n\u79d1\u5b66\u51fd\u6570\u5e93\uff1a\nSciPy\n\u3001\nNumPy\n(\u5e95\u5c42\u8bed\u8a00\uff1aC\u548cFortran)\n\n\n\u7ed8\u56fe\u5de5\u5177\u5e93\uff1a\nMatplotlib\n\n\n\u6570\u636e\u5206\u6790\u5e93 \nPandas\n\n\n\n\n\n\n\n\n\u6570\u5b66\u5de5\u5177\n\n\n\n\nMatlab\n\n\n\n\n\u9644\uff1a\u673a\u5668\u5b66\u4e60\u4e13\u4e1a\u672f\u8bed\n\n\n\n\n\u6a21\u578b\uff08model\uff09\uff1a\u8ba1\u7b97\u673a\u5c42\u9762\u7684\u8ba4\u77e5\n\n\n\u5b66\u4e60\u7b97\u6cd5\uff08learning algorithm\uff09\uff0c\u4ece\u6570\u636e\u4e2d\u4ea7\u751f\u6a21\u578b\u7684\u65b9\u6cd5\n\n\n\u6570\u636e\u96c6\uff08data set\uff09\uff1a\u4e00\u7ec4\u8bb0\u5f55\u7684\u5408\u96c6\n\n\n\u793a\u4f8b\uff08instance\uff09\uff1a\u5bf9\u4e8e\u67d0\u4e2a\u5bf9\u8c61\u7684\u63cf\u8ff0\n\n\n\u6837\u672c\uff08sample\uff09\uff1a\u4e5f\u53eb\u793a\u4f8b\n\n\n\u5c5e\u6027\uff08attribute\uff09\uff1a\u5bf9\u8c61\u7684\u67d0\u65b9\u4fbf\u8868\u73b0\u6216\u7279\u5f81\n\n\n\u7279\u5f81\uff08feature\uff09\uff1a\u540c\u5c5e\u6027\n\n\n\u5c5e\u6027\u503c\uff08attribute value\uff09\uff1a\u5c5e\u6027\u4e0a\u7684\u53d6\u503c\n\n\n\u5c5e\u6027\u7a7a\u95f4\uff08attribute space\uff09\uff1a\u5c5e\u6027\u5f20\u6210\u7684\u7a7a\u95f4\n\n\n\u6837\u672c\u7a7a\u95f4/\u8f93\u5165\u7a7a\u95f4\uff08samplespace\uff09\uff1a\u540c\u5c5e\u6027\u7a7a\u95f4\n\n\n\u7279\u5f81\u5411\u91cf\uff08feature vector\uff09\uff1a\u5728\u5c5e\u6027\u7a7a\u95f4\u91cc\u6bcf\u4e2a\u70b9\u5bf9\u5e94\u4e00\u4e2a\u5750\u6807\u5411\u91cf\uff0c\u628a\u4e00\u4e2a\u793a\u4f8b\u79f0\u4f5c\u7279\u5f81\u5411\u91cf\n\n\n\u7ef4\u6570\uff08dimensionality\uff09\uff1a\u63cf\u8ff0\u6837\u672c\u53c2\u6570\u7684\u4e2a\u6570\uff08\u4e5f\u5c31\u662f\u7a7a\u95f4\u662f\u51e0\u7ef4\u7684\n\n\n\u5b66\u4e60\uff08learning\uff09/\u8bad\u7ec3\uff08training\uff09\uff1a\u4ece\u6570\u636e\u4e2d\u5b66\u5f97\u6a21\u578b\n\n\n\u8bad\u7ec3\u6570\u636e\uff08training data\uff09\uff1a\u8bad\u7ec3\u8fc7\u7a0b\u4e2d\u7528\u5230\u7684\u6570\u636e\n\n\n\u8bad\u7ec3\u6837\u672c\uff08training sample\uff09:\u8bad\u7ec3\u7528\u5230\u7684\u6bcf\u4e2a\u6837\u672c\n\n\n\u8bad\u7ec3\u96c6\uff08training set\uff09\uff1a\u8bad\u7ec3\u6837\u672c\u7ec4\u6210\u7684\u96c6\u5408\n\n\n\u5047\u8bbe\uff08hypothesis\uff09\uff1a\u5b66\u4e60\u6a21\u578b\u5bf9\u5e94\u4e86\u5173\u4e8e\u6570\u636e\u7684\u67d0\u79cd\u6f5c\u5728\u89c4\u5219\n\n\n\u771f\u76f8\uff08group-true\uff09:\u771f\u6b63\u5b58\u5728\u7684\u6f5c\u5728\u89c4\u5f8b\n\n\n\u5b66\u4e60\u5668\uff08learner\uff09\uff1a\u6a21\u578b\u7684\u53e6\u4e00\u79cd\u53eb\u6cd5\uff0c\u628a\u5b66\u4e60\u7b97\u6cd5\u5728\u7ed9\u5b9a\u6570\u636e\u548c\u53c2\u6570\u7a7a\u95f4\u7684\u5b9e\u4f8b\u5316\n\n\n\u9884\u6d4b\uff08prediction\uff09\uff1a\u5224\u65ad\u4e00\u4e2a\u4e1c\u897f\u7684\u5c5e\u6027\n\n\n\u6807\u8bb0\uff08label\uff09\uff1a\u5173\u4e8e\u793a\u4f8b\u7684\u7ed3\u679c\u4fe1\u606f\uff0c\u6bd4\u5982\u6211\u662f\u4e00\u4e2a\u201c\u597d\u4eba\u201d\u3002\n\n\n\u6837\u4f8b\uff08example\uff09\uff1a\u62e5\u6709\u6807\u8bb0\u7684\u793a\u4f8b\n\n\n\u6807\u8bb0\u7a7a\u95f4/\u8f93\u51fa\u7a7a\u95f4\uff08label space\uff09\uff1a\u6240\u6709\u6807\u8bb0\u7684\u96c6\u5408\n\n\n\u5206\u7c7b\uff08classification\uff09\uff1a\u9884\u6d4b\u65f6\u79bb\u6563\u503c\uff0c\u6bd4\u5982\u628a\u4eba\u5206\u4e3a\u597d\u4eba\u548c\u574f\u4eba\u4e4b\u7c7b\u7684\u5b66\u4e60\u4efb\u52a1\n\n\n\u56de\u5f52\uff08regression\uff09\uff1a\u9884\u6d4b\u503c\u65f6\u8fde\u7eed\u503c\uff0c\u6bd4\u5982\u4f60\u7684\u597d\u4eba\u7a0b\u5ea6\u8fbe\u5230\u4e860.9\uff0c0.6\u4e4b\u7c7b\u7684\n\n\n\u4e8c\u5206\u7c7b\uff08binary classification\uff09\uff1a\u53ea\u6d89\u53ca\u4e24\u4e2a\u7c7b\u522b\u7684\u5206\u7c7b\u4efb\u52a1\n\n\n\u6b63\u7c7b\uff08positive class\uff09\uff1a\u4e8c\u5206\u7c7b\u91cc\u7684\u4e00\u4e2a\n\n\n\u53cd\u7c7b\uff08negative class\uff09\uff1a\u4e8c\u5206\u7c7b\u91cc\u7684\u53e6\u5916\u4e00\u4e2a\n\n\n\u591a\u5206\u7c7b\uff08multi-class classification\uff09\uff1a\u6d89\u53ca\u591a\u4e2a\u7c7b\u522b\u7684\u5206\u7c7b\n\n\n\u6d4b\u8bd5\uff08testing\uff09\uff1a\u5b66\u4e60\u5230\u6a21\u578b\u4e4b\u540e\u5bf9\u6837\u672c\u8fdb\u884c\u9884\u6d4b\u7684\u8fc7\u7a0b\n\n\n\u6d4b\u8bd5\u6837\u672c\uff08testing sample\uff09\uff1a\u88ab\u9884\u6d4b\u7684\u6837\u672c\n\n\n\u805a\u7c7b\uff08clustering\uff09\uff1a\u628a\u8bad\u7ec3\u96c6\u4e2d\u7684\u5bf9\u8c61\u5206\u4e3a\u82e5\u5e72\u7ec4\n\n\n\u7c07\uff08cluster\uff09\uff1a\u6bcf\u4e00\u4e2a\u7ec4\u53eb\u7c07\n\n\n\u76d1\u7763\u5b66\u4e60\uff08supervised learning\uff09\uff1a\u5178\u8303--\u5206\u7c7b\u548c\u56de\u5f52\n\n\n\u65e0\u76d1\u7763\u5b66\u4e60\uff08unsupervised learning\uff09\uff1a\u5178\u8303--\u805a\u7c7b\n\n\n\u672a\u89c1\u793a\u4f8b\uff08unseen instance\uff09\uff1a\u201c\u65b0\u6837\u672c\u201c\uff0c\u6ca1\u8bad\u7ec3\u8fc7\u7684\u6837\u672c\n\n\n\u6cdb\u5316\uff08generalization\uff09\u80fd\u529b\uff1a\u5b66\u5f97\u7684\u6a21\u578b\u9002\u7528\u4e8e\u65b0\u6837\u672c\u7684\u80fd\u529b\n\n\n\u5206\u5e03\uff08distribution\uff09\uff1a\u6837\u672c\u7a7a\u95f4\u7684\u5168\u4f53\u6837\u672c\u670d\u4ece\u7684\u4e00\u79cd\u89c4\u5f8b\n\n\n\u72ec\u7acb\u540c\u5206\u5e03\uff08independent and identically distributed\uff0c\u7b80\u79f0i,i,d.\uff09:\u83b7\u5f97\u7684\u6bcf\u4e2a\u6837\u672c\u90fd\u662f\u72ec\u7acb\u5730\u4ece\u8fd9\u4e2a\u5206\u5e03\u4e0a\u91c7\u6837\u83b7\u5f97\u7684\u3002\n\n\n\n\n\n\n\n\n\u4f5c\u8005\uff1a\n\u7247\u523b\n \n1988\n\n\nGitHub\u5730\u5740\n: \nhttps://github.com/apachecn/MachineLearning\n\n\n\u7248\u6743\u58f0\u660e\uff1a\u6b22\u8fce\u8f6c\u8f7d\u5b66\u4e60 =\n \u8bf7\u6807\u6ce8\u4fe1\u606f\u6765\u6e90\u4e8e \nApacheCN", 
            "title": "1.\u673a\u5668\u5b66\u4e60\u57fa\u7840"
        }, 
        {
            "location": "/\u4e66\u7c4d/\u673a\u5668\u5b66\u4e60\u5b9e\u6218/01.\u673a\u5668\u5b66\u4e60\u57fa\u7840/#1", 
            "text": "", 
            "title": "\u7b2c1\u7ae0 \u673a\u5668\u5b66\u4e60\u57fa\u7840"
        }, 
        {
            "location": "/\u4e66\u7c4d/\u673a\u5668\u5b66\u4e60\u5b9e\u6218/01.\u673a\u5668\u5b66\u4e60\u57fa\u7840/#_1", 
            "text": "\u673a\u5668\u5b66\u4e60(Machine Learning,ML)  \u662f\u4f7f\u7528\u8ba1\u7b97\u673a\u6765\u5f70\u663e\u6570\u636e\u80cc\u540e\u7684\u771f\u5b9e\u542b\u4e49\uff0c\u5b83\u4e3a\u4e86\u628a\u65e0\u5e8f\u7684\u6570\u636e\u8f6c\u6362\u6210\u6709\u7528\u7684\u4fe1\u606f\u3002\u662f\u4e00\u95e8\u591a\u9886\u57df\u4ea4\u53c9\u5b66\u79d1\uff0c\u6d89\u53ca\u6982\u7387\u8bba\u3001\u7edf\u8ba1\u5b66\u3001\u903c\u8fd1\u8bba\u3001\u51f8\u5206\u6790\u3001\u7b97\u6cd5\u590d\u6742\u5ea6\u7406\u8bba\u7b49\u591a\u95e8\u5b66\u79d1\u3002\u4e13\u95e8\u7814\u7a76\u8ba1\u7b97\u673a\u600e\u6837\u6a21\u62df\u6216\u5b9e\u73b0\u4eba\u7c7b\u7684\u5b66\u4e60\u884c\u4e3a\uff0c\u4ee5\u83b7\u53d6\u65b0\u7684\u77e5\u8bc6\u6216\u6280\u80fd\uff0c\u91cd\u65b0\u7ec4\u7ec7\u5df2\u6709\u7684\u77e5\u8bc6\u7ed3\u6784\u4f7f\u4e4b\u4e0d\u65ad\u6539\u5584\u81ea\u8eab\u7684\u6027\u80fd\u3002\n\u5b83\u662f\u4eba\u5de5\u667a\u80fd\u7684\u6838\u5fc3\uff0c\u662f\u4f7f\u8ba1\u7b97\u673a\u5177\u6709\u667a\u80fd\u7684\u6839\u672c\u9014\u5f84\uff0c\u5176\u5e94\u7528\u904d\u53ca\u4eba\u5de5\u667a\u80fd\u7684\u5404\u4e2a\u9886\u57df\uff0c\u5b83\u4e3b\u8981\u4f7f\u7528\u5f52\u7eb3\u3001\u7efc\u5408\u800c\u4e0d\u662f\u6f14\u7ece\u3002   \u6d77\u91cf\u7684\u6570\u636e  \u83b7\u53d6\u6709\u7528\u7684\u4fe1\u606f", 
            "title": "\u673a\u5668\u5b66\u4e60 \u6982\u8ff0"
        }, 
        {
            "location": "/\u4e66\u7c4d/\u673a\u5668\u5b66\u4e60\u5b9e\u6218/01.\u673a\u5668\u5b66\u4e60\u57fa\u7840/#_2", 
            "text": "\u673a\u5668\u5b66\u4e60\u662f\u4e00\u95e8\u4eba\u5de5\u667a\u80fd\u7684\u79d1\u5b66\uff0c\u8be5\u9886\u57df\u7684\u4e3b\u8981\u7814\u7a76\u5bf9\u8c61\u662f\u4eba\u5de5\u667a\u80fd\uff0c\u7279\u522b\u662f\u5982\u4f55\u5728\u7ecf\u9a8c\u5b66\u4e60\u4e2d\u6539\u5584\u5177\u4f53\u7b97\u6cd5\u7684\u6027\u80fd\u201d\u3002 \u201c\u673a\u5668\u5b66\u4e60\u662f\u5bf9\u80fd\u901a\u8fc7\u7ecf\u9a8c\u81ea\u52a8\u6539\u8fdb\u7684\u8ba1\u7b97\u673a\u7b97\u6cd5\u7684\u7814\u7a76\u201d\u3002 \u201c\u673a\u5668\u5b66\u4e60\u662f\u7528\u6570\u636e\u6216\u4ee5\u5f80\u7684\u7ecf\u9a8c\uff0c\u4ee5\u6b64\u4f18\u5316\u8ba1\u7b97\u673a\u7a0b\u5e8f\u7684\u6027\u80fd\u6807\u51c6\u3002\u201d \u4e00\u79cd\u7ecf\u5e38\u5f15\u7528\u7684\u82f1\u6587\u5b9a\u4e49\u662f\uff1aA computer program is said to learn from experience E with respect to some class of tasks T and performance measure P, if its performance at tasks in T, as measured by P, improves with experience E.  \u673a\u5668\u5b66\u4e60\u5df2\u7ecf\u6709\u4e86\u5341\u5206\u5e7f\u6cdb\u7684\u5e94\u7528\uff0c\u4f8b\u5982\uff1a\u6570\u636e\u6316\u6398\u3001\u8ba1\u7b97\u673a\u89c6\u89c9\u3001\u81ea\u7136\u8bed\u8a00\u5904\u7406\u3001\u751f\u7269\u7279\u5f81\u8bc6\u522b\u3001\u641c\u7d22\u5f15\u64ce\u3001\u533b\u5b66\u8bca\u65ad\u3001\u68c0\u6d4b\u4fe1\u7528\u5361\u6b3a\u8bc8\u3001\u8bc1\u5238\u5e02\u573a\u5206\u6790\u3001DNA\u5e8f\u5217\u6d4b\u5e8f\u3001\u8bed\u97f3\u548c\u624b\u5199\u8bc6\u522b\u3001\u6218\u7565\u6e38\u620f\u548c\u673a\u5668\u4eba\u8fd0\u7528\u3002", 
            "title": "\u673a\u5668\u5b66\u4e60 \u7814\u7a76\u610f\u4e49"
        }, 
        {
            "location": "/\u4e66\u7c4d/\u673a\u5668\u5b66\u4e60\u5b9e\u6218/01.\u673a\u5668\u5b66\u4e60\u57fa\u7840/#_3", 
            "text": "\u4f8b\u5982\uff1a\u8bc6\u522b\u52a8\u7269\u732b  \u6a21\u5f0f\u8bc6\u522b\uff08\u5b98\u65b9\u6807\u51c6\uff09\uff1a\u4eba\u4eec\u901a\u8fc7\u5927\u91cf\u7684\u7ecf\u9a8c\uff0c\u5f97\u5230\u7ed3\u8bba\uff0c\u4ece\u800c\u5224\u65ad\u5b83\u5c31\u662f\u732b\u3002  \u673a\u5668\u5b66\u4e60\uff08\u6570\u636e\u5b66\u4e60\uff09\uff1a\u4eba\u4eec\u901a\u8fc7\u9605\u8bfb\u8fdb\u884c\u5b66\u4e60\uff0c\u89c2\u5bdf\u5b83\u4f1a\u53eb\u3001\u5c0f\u773c\u775b\u3001\u4e24\u53ea\u8033\u6735\u3001\u56db\u6761\u817f\u3001\u4e00\u6761\u5c3e\u5df4\uff0c\u5f97\u5230\u7ed3\u8bba\uff0c\u4ece\u800c\u5224\u65ad\u5b83\u5c31\u662f\u732b\u3002   \u6df1\u5ea6\u5b66\u4e60\uff08\u6df1\u5165\u6570\u636e\uff09\uff1a\u4eba\u4eec\u901a\u8fc7\u6df1\u5165\u4e86\u89e3\u5b83\uff0c\u53d1\u73b0\u5b83\u4f1a'\u55b5\u55b5'\u7684\u53eb\u3001\u4e0e\u540c\u7c7b\u7684\u732b\u79d1\u52a8\u7269\u5f88\u7c7b\u4f3c\uff0c\u5f97\u5230\u7ed3\u8bba\uff0c\u4ece\u800c\u5224\u65ad\u5b83\u5c31\u662f\u732b\u3002\uff08\u6df1\u5ea6\u5b66\u4e60\u5e38\u7528\u9886\u57df\uff1a\u8bed\u97f3\u8bc6\u522b\u3001\u56fe\u50cf\u8bc6\u522b\uff09    \u6a21\u5f0f\u8bc6\u522b\uff08pattern recognition\uff09: \u6a21\u5f0f\u8bc6\u522b\u662f\u6700\u53e4\u8001\u7684\uff08\u4f5c\u4e3a\u4e00\u4e2a\u672f\u8bed\u800c\u8a00\uff0c\u53ef\u4ee5\u8bf4\u662f\u5f88\u8fc7\u65f6\u7684\uff09\u3002   \u6211\u4eec\u628a\u73af\u5883\u4e0e\u5ba2\u4f53\u7edf\u79f0\u4e3a\u201c\u6a21\u5f0f\u201d\uff0c\u8bc6\u522b\u662f\u5bf9\u6a21\u5f0f\u7684\u4e00\u79cd\u8ba4\u77e5\uff0c\u662f\u5982\u4f55\u8ba9\u4e00\u4e2a\u8ba1\u7b97\u673a\u7a0b\u5e8f\u53bb\u505a\u4e00\u4e9b\u770b\u8d77\u6765\u5f88\u201c\u667a\u80fd\u201d\u7684\u4e8b\u60c5\u3002  \u901a\u8fc7\u878d\u4e8e\u667a\u6167\u548c\u76f4\u89c9\u540e\uff0c\u901a\u8fc7\u6784\u5efa\u7a0b\u5e8f\uff0c\u8bc6\u522b\u4e00\u4e9b\u4e8b\u7269\uff0c\u800c\u4e0d\u662f\u4eba\uff0c\u4f8b\u5982: \u8bc6\u522b\u6570\u5b57\u3002    \u673a\u5668\u5b66\u4e60\uff08machine learning\uff09: \u673a\u5668\u5b66\u4e60\u662f\u6700\u57fa\u7840\u7684\uff08\u5f53\u4e0b\u521d\u521b\u516c\u53f8\u548c\u7814\u7a76\u5b9e\u9a8c\u5ba4\u7684\u70ed\u70b9\u9886\u57df\u4e4b\u4e00\uff09\u3002  \u572890\u5e74\u4ee3\u521d\uff0c\u4eba\u4eec\u5f00\u59cb\u610f\u8bc6\u5230\u4e00\u79cd\u53ef\u4ee5\u66f4\u6709\u6548\u5730\u6784\u5efa\u6a21\u5f0f\u8bc6\u522b\u7b97\u6cd5\u7684\u65b9\u6cd5\uff0c\u90a3\u5c31\u662f\u7528\u6570\u636e\uff08\u53ef\u4ee5\u901a\u8fc7\u5ec9\u4ef7\u52b3\u52a8\u529b\u91c7\u96c6\u83b7\u5f97\uff09\u53bb\u66ff\u6362\u4e13\u5bb6\uff08\u5177\u6709\u5f88\u591a\u56fe\u50cf\u65b9\u9762\u77e5\u8bc6\u7684\u4eba\uff09\u3002  \u201c\u673a\u5668\u5b66\u4e60\u201d\u5f3a\u8c03\u7684\u662f\uff0c\u5728\u7ed9\u8ba1\u7b97\u673a\u7a0b\u5e8f\uff08\u6216\u8005\u673a\u5668\uff09\u8f93\u5165\u4e00\u4e9b\u6570\u636e\u540e\uff0c\u5b83\u5fc5\u987b\u505a\u4e00\u4e9b\u4e8b\u60c5\uff0c\u90a3\u5c31\u662f\u5b66\u4e60\u8fd9\u4e9b\u6570\u636e\uff0c\u800c\u8fd9\u4e2a\u5b66\u4e60\u7684\u6b65\u9aa4\u662f\u660e\u786e\u7684\u3002  \u673a\u5668\u5b66\u4e60\uff08Machine Learning\uff09\u662f\u4e00\u95e8\u4e13\u95e8\u7814\u7a76\u8ba1\u7b97\u673a\u600e\u6837\u6a21\u62df\u6216\u5b9e\u73b0\u4eba\u7c7b\u7684\u5b66\u4e60\u884c\u4e3a\uff0c\u4ee5\u83b7\u53d6\u65b0\u7684\u77e5\u8bc6\u6216\u6280\u80fd\uff0c\u91cd\u65b0\u7ec4\u7ec7\u5df2\u6709\u7684\u77e5\u8bc6\u7ed3\u6784\u4f7f\u4e4b\u4e0d\u65ad\u6539\u5584\u81ea\u8eab\u6027\u80fd\u7684\u5b66\u79d1\u3002     \u6df1\u5ea6\u5b66\u4e60\uff08deep learning\uff09: \u6df1\u5ea6\u5b66\u4e60\u662f\u975e\u5e38\u5d2d\u65b0\u548c\u6709\u5f71\u54cd\u529b\u7684\u524d\u6cbf\u9886\u57df\uff0c\u6211\u4eec\u751a\u81f3\u4e0d\u4f1a\u53bb\u601d\u8003-\u540e\u6df1\u5ea6\u5b66\u4e60\u65f6\u4ee3\u3002   \u6df1\u5ea6\u5b66\u4e60\u662f\u673a\u5668\u5b66\u4e60\u7814\u7a76\u4e2d\u7684\u4e00\u4e2a\u65b0\u7684\u9886\u57df\uff0c\u5176\u52a8\u673a\u5728\u4e8e\u5efa\u7acb\u3001\u6a21\u62df\u4eba\u8111\u8fdb\u884c\u5206\u6790\u5b66\u4e60\u7684\u795e\u7ecf\u7f51\u7edc\uff0c\u5b83\u6a21\u4eff\u4eba\u8111\u7684\u673a\u5236\u6765\u89e3\u91ca\u6570\u636e\uff0c\u4f8b\u5982\u56fe\u50cf\uff0c\u58f0\u97f3\u548c\u6587\u672c\u3002     \u53c2\u8003\u5730\u5740\uff1a    \u6df1\u5ea6\u5b66\u4e60 vs \u673a\u5668\u5b66\u4e60 vs \u6a21\u5f0f\u8bc6\u522b  \u6df1\u5ea6\u5b66\u4e60 \u767e\u79d1\u8d44\u6599      \u673a\u5668\u5b66\u4e60\u5df2\u5e94\u7528\u4e8e\u591a\u4e2a\u9886\u57df\uff0c\u8fdc\u8fdc\u8d85\u51fa\u5927\u591a\u6570\u4eba\u7684\u60f3\u8c61\uff0c\u6a2a\u8de8\uff1a\u8ba1\u7b97\u673a\u79d1\u5b66\u3001\u5de5\u7a0b\u6280\u672f\u548c\u7edf\u8ba1\u5b66\u7b49\u591a\u4e2a\u5b66\u79d1\u3002    \u641c\u7d22\u5f15\u64ce: \u6839\u636e\u4f60\u7684\u641c\u7d22\u70b9\u51fb\uff0c\u4f18\u5316\u4f60\u4e0b\u6b21\u7684\u641c\u7d22\u7ed3\u679c,\u662f\u673a\u5668\u5b66\u4e60\u6765\u5e2e\u52a9\u641c\u7d22\u5f15\u64ce\u5224\u65ad\u54ea\u4e2a\u7ed3\u679c\u66f4\u9002\u5408\u4f60\uff08\u4e5f\u5224\u65ad\u54ea\u4e2a\u5e7f\u544a\u66f4\u9002\u5408\u4f60\uff09\u3002  \u5783\u573e\u90ae\u4ef6: \u4f1a\u81ea\u52a8\u7684\u8fc7\u6ee4\u5783\u573e\u5e7f\u544a\u90ae\u4ef6\u5230\u5783\u573e\u7bb1\u5185\u3002  \u8d85\u5e02\u4f18\u60e0\u5238: \u4f60\u4f1a\u53d1\u73b0\uff0c\u4f60\u5728\u8d2d\u4e70\u5c0f\u5b69\u5b50\u5c3f\u5e03\u7684\u65f6\u5019\uff0c\u552e\u8d27\u5458\u4f1a\u8d60\u9001\u4f60\u4e00\u5f20\u4f18\u60e0\u5238\u53ef\u4ee5\u5151\u63626\u7f50\u5564\u9152\u3002  \u90ae\u5c40\u90ae\u5bc4: \u624b\u5199\u8f6f\u4ef6\u81ea\u52a8\u8bc6\u522b\u5bc4\u9001\u8d3a\u5361\u7684\u5730\u5740\u3002  \u7533\u8bf7\u8d37\u6b3e: \u901a\u8fc7\u4f60\u6700\u8fd1\u7684\u91d1\u878d\u6d3b\u52a8\u4fe1\u606f\u8fdb\u884c\u7efc\u5408\u8bc4\u5b9a\uff0c\u51b3\u5b9a\u4f60\u662f\u5426\u5408\u683c\u3002", 
            "title": "\u673a\u5668\u5b66\u4e60 \u573a\u666f"
        }, 
        {
            "location": "/\u4e66\u7c4d/\u673a\u5668\u5b66\u4e60\u5b9e\u6218/01.\u673a\u5668\u5b66\u4e60\u57fa\u7840/#_4", 
            "text": "", 
            "title": "\u673a\u5668\u5b66\u4e60 \u7ec4\u6210"
        }, 
        {
            "location": "/\u4e66\u7c4d/\u673a\u5668\u5b66\u4e60\u5b9e\u6218/01.\u673a\u5668\u5b66\u4e60\u57fa\u7840/#_5", 
            "text": "\u5206\u7c7b\uff08classification\uff09\uff1a\u5c06\u5b9e\u4f8b\u6570\u636e\u5212\u5206\u5230\u5408\u9002\u7684\u7c7b\u522b\u4e2d\u3002  \u5e94\u7528\u5b9e\u4f8b\uff1a\u5224\u65ad\u7f51\u7ad9\u662f\u5426\u88ab\u9ed1\u5ba2\u5165\u4fb5\uff08\u4e8c\u5206\u7c7b \uff09\uff0c\u624b\u5199\u6570\u5b57\u7684\u81ea\u52a8\u8bc6\u522b\uff08\u591a\u5206\u7c7b\uff09  \u56de\u5f52\uff08regression\uff09\uff1a\u4e3b\u8981\u7528\u4e8e\u9884\u6d4b\u6570\u503c\u578b\u6570\u636e\u3002  \u5e94\u7528\u5b9e\u4f8b\uff1a\u80a1\u7968\u4ef7\u683c\u6ce2\u52a8\u7684\u9884\u6d4b\uff0c\u623f\u5c4b\u4ef7\u683c\u7684\u9884\u6d4b\u7b49\u3002", 
            "title": "\u4e3b\u8981\u4efb\u52a1"
        }, 
        {
            "location": "/\u4e66\u7c4d/\u673a\u5668\u5b66\u4e60\u5b9e\u6218/01.\u673a\u5668\u5b66\u4e60\u57fa\u7840/#supervised-learning", 
            "text": "\u5fc5\u987b\u786e\u5b9a\u76ee\u6807\u53d8\u91cf\u7684\u503c\uff0c\u4ee5\u4fbf\u673a\u5668\u5b66\u4e60\u7b97\u6cd5\u53ef\u4ee5\u53d1\u73b0\u7279\u5f81\u548c\u76ee\u6807\u53d8\u91cf\u4e4b\u95f4\u7684\u5173\u7cfb\u3002\u5728\u76d1\u7763\u5b66\u4e60\u4e2d\uff0c\u7ed9\u5b9a\u4e00\u7ec4\u6570\u636e\uff0c\u6211\u4eec\u77e5\u9053\u6b63\u786e\u7684\u8f93\u51fa\u7ed3\u679c\u5e94\u8be5\u662f\u4ec0\u4e48\u6837\u5b50\uff0c\u5e76\u4e14\u77e5\u9053\u5728\u8f93\u5165\u548c\u8f93\u51fa\u4e4b\u95f4\u6709\u7740\u4e00\u4e2a\u7279\u5b9a\u7684\u5173\u7cfb\u3002 (\u5305\u62ec\uff1a\u5206\u7c7b\u548c\u56de\u5f52)  \u6837\u672c\u96c6\uff1a\u8bad\u7ec3\u6570\u636e + \u6d4b\u8bd5\u6570\u636e  \u8bad\u7ec3\u6837\u672c = \u7279\u5f81(feature) + \u76ee\u6807\u53d8\u91cf(label: \u5206\u7c7b-\u79bb\u6563\u503c/\u56de\u5f52-\u8fde\u7eed\u503c)  \u7279\u5f81\u901a\u5e38\u662f\u8bad\u7ec3\u6837\u672c\u96c6\u7684\u5217\uff0c\u5b83\u4eec\u662f\u72ec\u7acb\u6d4b\u91cf\u5f97\u5230\u7684\u3002  \u76ee\u6807\u53d8\u91cf: \u76ee\u6807\u53d8\u91cf\u662f\u673a\u5668\u5b66\u4e60\u9884\u6d4b\u7b97\u6cd5\u7684\u6d4b\u8bd5\u7ed3\u679c\u3002  \u5728\u5206\u7c7b\u7b97\u6cd5\u4e2d\u76ee\u6807\u53d8\u91cf\u7684\u7c7b\u578b\u901a\u5e38\u662f\u6807\u79f0\u578b(\u5982\uff1a\u771f\u4e0e\u5047)\uff0c\u800c\u5728\u56de\u5f52\u7b97\u6cd5\u4e2d\u901a\u5e38\u662f\u8fde\u7eed\u578b(\u5982\uff1a1~100)\u3002      \u76d1\u7763\u5b66\u4e60\u9700\u8981\u6ce8\u610f\u7684\u95ee\u9898\uff1a  \u504f\u7f6e\u65b9\u5dee\u6743\u8861  \u529f\u80fd\u7684\u590d\u6742\u6027\u548c\u6570\u91cf\u7684\u8bad\u7ec3\u6570\u636e  \u8f93\u5165\u7a7a\u95f4\u7684\u7ef4\u6570  \u566a\u58f0\u4e2d\u7684\u8f93\u51fa\u503c    \u77e5\u8bc6\u8868\u793a \uff1a  \u53ef\u4ee5\u91c7\u7528\u89c4\u5219\u96c6\u7684\u5f62\u5f0f\u3010\u4f8b\u5982\uff1a\u6570\u5b66\u6210\u7ee9\u5927\u4e8e90\u5206\u4e3a\u4f18\u79c0\u3011  \u53ef\u4ee5\u91c7\u7528\u6982\u7387\u5206\u5e03\u7684\u5f62\u5f0f\u3010\u4f8b\u5982\uff1a\u901a\u8fc7\u7edf\u8ba1\u5206\u5e03\u53d1\u73b0\uff0c90%\u7684\u540c\u5b66\u6570\u5b66\u6210\u7ee9\uff0c\u572870\u5206\u4ee5\u4e0b\uff0c\u90a3\u4e48\u5927\u4e8e70\u5206\u5b9a\u4e3a\u4f18\u79c0\u3011  \u53ef\u4ee5\u4f7f\u7528\u8bad\u7ec3\u6837\u672c\u96c6\u4e2d\u7684\u4e00\u4e2a\u5b9e\u4f8b\u3010\u4f8b\u5982\uff1a\u901a\u8fc7\u6837\u672c\u96c6\u5408\uff0c\u6211\u4eec\u8bad\u7ec3\u51fa\u4e00\u4e2a\u6a21\u578b\u5b9e\u4f8b\uff0c\u5f97\u51fa \u5e74\u8f7b\uff0c\u6570\u5b66\u6210\u7ee9\u4e2d\u9ad8\u7b49\uff0c\u8c08\u5410\u4f18\u96c5\uff0c\u6211\u4eec\u8ba4\u4e3a\u662f\u4f18\u79c0\u3011", 
            "title": "\u76d1\u7763\u5b66\u4e60\uff08supervised learning\uff09"
        }, 
        {
            "location": "/\u4e66\u7c4d/\u673a\u5668\u5b66\u4e60\u5b9e\u6218/01.\u673a\u5668\u5b66\u4e60\u57fa\u7840/#unsupervised-learing", 
            "text": "\u5728\u673a\u5668\u5b66\u4e60\uff0c\u65e0\u76d1\u7763\u5b66\u4e60\u7684\u95ee\u9898\u662f\uff0c\u5728\u672a\u52a0\u6807\u7b7e\u7684\u6570\u636e\u4e2d\uff0c\u8bd5\u56fe\u627e\u5230\u9690\u85cf\u7684\u7ed3\u6784\u3002\u56e0\u4e3a\u63d0\u4f9b\u7ed9\u5b66\u4e60\u8005\u7684\u5b9e\u4f8b\u662f\u672a\u6807\u8bb0\u7684\uff0c\u56e0\u6b64\u6ca1\u6709\u9519\u8bef\u6216\u62a5\u916c\u4fe1\u53f7\u6765\u8bc4\u4f30\u6f5c\u5728\u7684\u89e3\u51b3\u65b9\u6848\u3002  \u65e0\u76d1\u7763\u5b66\u4e60\u662f\u5bc6\u5207\u76f8\u5173\u7684\u7edf\u8ba1\u6570\u636e\u5bc6\u5ea6\u4f30\u8ba1\u7684\u95ee\u9898\u3002\u7136\u800c\u65e0\u76d1\u7763\u5b66\u4e60\u8fd8\u5305\u62ec\u5bfb\u6c42\uff0c\u603b\u7ed3\u548c\u89e3\u91ca\u6570\u636e\u7684\u4e3b\u8981\u7279\u70b9\u7b49\u8bf8\u591a\u6280\u672f\u3002\u5728\u65e0\u76d1\u7763\u5b66\u4e60\u4f7f\u7528\u7684\u8bb8\u591a\u65b9\u6cd5\u662f\u57fa\u4e8e\u7528\u4e8e\u5904\u7406\u6570\u636e\u7684\u6570\u636e\u6316\u6398\u65b9\u6cd5\u3002  \u6570\u636e\u6ca1\u6709\u7c7b\u522b\u4fe1\u606f\uff0c\u4e5f\u4e0d\u4f1a\u7ed9\u5b9a\u76ee\u6807\u503c\u3002  \u975e\u76d1\u7763\u5b66\u4e60\u5305\u62ec\u7684\u7c7b\u578b\uff1a  \u805a\u7c7b\uff1a\u5728\u65e0\u76d1\u7763\u5b66\u4e60\u4e2d\uff0c\u5c06\u6570\u636e\u96c6\u5206\u6210\u7531\u7c7b\u4f3c\u7684\u5bf9\u8c61\u7ec4\u6210\u591a\u4e2a\u7c7b\u7684\u8fc7\u7a0b\u79f0\u4e3a\u805a\u7c7b\u3002  \u5bc6\u5ea6\u4f30\u8ba1\uff1a\u901a\u8fc7\u6837\u672c\u5206\u5e03\u7684\u7d27\u5bc6\u7a0b\u5ea6\uff0c\u6765\u4f30\u8ba1\u4e0e\u5206\u7ec4\u7684\u76f8\u4f3c\u6027\u3002  \u6b64\u5916\uff0c\u65e0\u76d1\u7763\u5b66\u4e60\u8fd8\u53ef\u4ee5\u51cf\u5c11\u6570\u636e\u7279\u5f81\u7684\u7ef4\u5ea6\uff0c\u4ee5\u4fbf\u6211\u4eec\u53ef\u4ee5\u4f7f\u7528\u4e8c\u7ef4\u6216\u4e09\u7ef4\u56fe\u5f62\u66f4\u52a0\u76f4\u89c2\u5730\u5c55\u793a\u6570\u636e\u4fe1\u606f\u3002", 
            "title": "\u975e\u76d1\u7763\u5b66\u4e60\uff08unsupervised learing\uff09"
        }, 
        {
            "location": "/\u4e66\u7c4d/\u673a\u5668\u5b66\u4e60\u5b9e\u6218/01.\u673a\u5668\u5b66\u4e60\u57fa\u7840/#_6", 
            "text": "\u8fd9\u4e2a\u7b97\u6cd5\u53ef\u4ee5\u8bad\u7ec3\u7a0b\u5e8f\u505a\u51fa\u67d0\u4e00\u51b3\u5b9a\u3002\u7a0b\u5e8f\u5728\u67d0\u4e00\u60c5\u51b5\u4e0b\u5c1d\u8bd5\u6240\u6709\u7684\u53ef\u80fd\u884c\u52a8\uff0c\u8bb0\u5f55\u4e0d\u540c\u884c\u52a8\u7684\u7ed3\u679c\u5e76\u8bd5\u7740\u627e\u51fa\u6700\u597d\u7684\u4e00\u6b21\u5c1d\u8bd5\u6765\u505a\u51b3\u5b9a\u3002 \u5c5e\u4e8e\u8fd9\u4e00\u7c7b\u7b97\u6cd5\u7684\u6709\u9a6c\u5c14\u53ef\u592b\u51b3\u7b56\u8fc7\u7a0b\u3002", 
            "title": "\u5f3a\u5316\u5b66\u4e60"
        }, 
        {
            "location": "/\u4e66\u7c4d/\u673a\u5668\u5b66\u4e60\u5b9e\u6218/01.\u673a\u5668\u5b66\u4e60\u57fa\u7840/#_7", 
            "text": "", 
            "title": "\u8bad\u7ec3\u8fc7\u7a0b"
        }, 
        {
            "location": "/\u4e66\u7c4d/\u673a\u5668\u5b66\u4e60\u5b9e\u6218/01.\u673a\u5668\u5b66\u4e60\u57fa\u7840/#_8", 
            "text": "", 
            "title": "\u7b97\u6cd5\u6c47\u603b"
        }, 
        {
            "location": "/\u4e66\u7c4d/\u673a\u5668\u5b66\u4e60\u5b9e\u6218/01.\u673a\u5668\u5b66\u4e60\u57fa\u7840/#_9", 
            "text": "\u9009\u62e9\u7b97\u6cd5\u9700\u8981\u8003\u8651\u7684\u4e24\u4e2a\u95ee\u9898    \u7b97\u6cd5\u573a\u666f  \u9884\u6d4b\u660e\u5929\u662f\u5426\u4e0b\u96e8\uff0c\u56e0\u4e3a\u53ef\u4ee5\u7528\u5386\u53f2\u7684\u5929\u6c14\u60c5\u51b5\u505a\u9884\u6d4b\uff0c\u6240\u4ee5\u9009\u62e9\u76d1\u7763\u5b66\u4e60\u7b97\u6cd5  \u7ed9\u4e00\u7fa4\u964c\u751f\u7684\u4eba\u8fdb\u884c\u5206\u7ec4\uff0c\u4f46\u662f\u6211\u4eec\u5e76\u6ca1\u6709\u8fd9\u4e9b\u4eba\u7684\u7c7b\u522b\u4fe1\u606f\uff0c\u6240\u4ee5\u9009\u62e9\u65e0\u76d1\u7763\u5b66\u4e60\u7b97\u6cd5\u3001\u901a\u8fc7\u4ed6\u4eec\u8eab\u9ad8\u3001\u4f53\u91cd\u7b49\u7279\u5f81\u8fdb\u884c\u5904\u7406\u3002    \u9700\u8981\u6536\u96c6\u6216\u5206\u6790\u7684\u6570\u636e\u662f\u4ec0\u4e48    \u4e3e\u4f8b     \u673a\u5668\u5b66\u4e60 \u5f00\u53d1\u6d41\u7a0b    \u6536\u96c6\u6570\u636e: \u6536\u96c6\u6837\u672c\u6570\u636e  \u51c6\u5907\u6570\u636e: \u6ce8\u610f\u6570\u636e\u7684\u683c\u5f0f  \u5206\u6790\u6570\u636e: \u4e3a\u4e86\u786e\u4fdd\u6570\u636e\u96c6\u4e2d\u6ca1\u6709\u5783\u573e\u6570\u636e\uff1b  \u5982\u679c\u662f\u7b97\u6cd5\u53ef\u4ee5\u5904\u7406\u7684\u6570\u636e\u683c\u5f0f\u6216\u53ef\u4fe1\u4efb\u7684\u6570\u636e\u6e90\uff0c\u5219\u53ef\u4ee5\u8df3\u8fc7\u8be5\u6b65\u9aa4\uff1b  \u53e6\u5916\u8be5\u6b65\u9aa4\u9700\u8981\u4eba\u5de5\u5e72\u9884\uff0c\u4f1a\u964d\u4f4e\u81ea\u52a8\u5316\u7cfb\u7edf\u7684\u4ef7\u503c\u3002    \u8bad\u7ec3\u7b97\u6cd5: [\u673a\u5668\u5b66\u4e60\u7b97\u6cd5\u6838\u5fc3]\u5982\u679c\u4f7f\u7528\u65e0\u76d1\u7763\u5b66\u4e60\u7b97\u6cd5\uff0c\u7531\u4e8e\u4e0d\u5b58\u5728\u76ee\u6807\u53d8\u91cf\u503c\uff0c\u5219\u53ef\u4ee5\u8df3\u8fc7\u8be5\u6b65\u9aa4  \u6d4b\u8bd5\u7b97\u6cd5: [\u673a\u5668\u5b66\u4e60\u7b97\u6cd5\u6838\u5fc3]\u8bc4\u4f30\u7b97\u6cd5\u6548\u679c  \u4f7f\u7528\u7b97\u6cd5: \u5c06\u673a\u5668\u5b66\u4e60\u7b97\u6cd5\u8f6c\u4e3a\u5e94\u7528\u7a0b\u5e8f", 
            "title": "\u673a\u5668\u5b66\u4e60 \u4f7f\u7528"
        }, 
        {
            "location": "/\u4e66\u7c4d/\u673a\u5668\u5b66\u4e60\u5b9e\u6218/01.\u673a\u5668\u5b66\u4e60\u57fa\u7840/#_10", 
            "text": "\u5fae\u79ef\u5206  \u7edf\u8ba1\u5b66/\u6982\u7387\u8bba  \u7ebf\u6027\u4ee3\u6570", 
            "title": "\u673a\u5668\u5b66\u4e60 \u6570\u5b66\u57fa\u7840"
        }, 
        {
            "location": "/\u4e66\u7c4d/\u673a\u5668\u5b66\u4e60\u5b9e\u6218/01.\u673a\u5668\u5b66\u4e60\u57fa\u7840/#_11", 
            "text": "", 
            "title": "\u673a\u5668\u5b66\u4e60 \u5de5\u5177"
        }, 
        {
            "location": "/\u4e66\u7c4d/\u673a\u5668\u5b66\u4e60\u5b9e\u6218/01.\u673a\u5668\u5b66\u4e60\u57fa\u7840/#python", 
            "text": "\u53ef\u6267\u884c\u4f2a\u4ee3\u7801  Python\u6bd4\u8f83\u6d41\u884c\uff1a\u4f7f\u7528\u5e7f\u6cdb\u3001\u4ee3\u7801\u8303\u4f8b\u591a\u3001\u4e30\u5bcc\u6a21\u5757\u5e93\uff0c\u5f00\u53d1\u5468\u671f\u77ed  Python\u8bed\u8a00\u7684\u7279\u8272\uff1a\u6e05\u6670\u7b80\u7ec3\u3001\u6613\u4e8e\u7406\u89e3  Python\u8bed\u8a00\u7684\u7f3a\u70b9\uff1a\u552f\u4e00\u4e0d\u8db3\u7684\u662f\u6027\u80fd\u95ee\u9898  Python\u76f8\u5173\u7684\u5e93  \u79d1\u5b66\u51fd\u6570\u5e93\uff1a SciPy \u3001 NumPy (\u5e95\u5c42\u8bed\u8a00\uff1aC\u548cFortran)  \u7ed8\u56fe\u5de5\u5177\u5e93\uff1a Matplotlib  \u6570\u636e\u5206\u6790\u5e93  Pandas", 
            "title": "Python\u8bed\u8a00"
        }, 
        {
            "location": "/\u4e66\u7c4d/\u673a\u5668\u5b66\u4e60\u5b9e\u6218/01.\u673a\u5668\u5b66\u4e60\u57fa\u7840/#_12", 
            "text": "Matlab", 
            "title": "\u6570\u5b66\u5de5\u5177"
        }, 
        {
            "location": "/\u4e66\u7c4d/\u673a\u5668\u5b66\u4e60\u5b9e\u6218/01.\u673a\u5668\u5b66\u4e60\u57fa\u7840/#_13", 
            "text": "\u6a21\u578b\uff08model\uff09\uff1a\u8ba1\u7b97\u673a\u5c42\u9762\u7684\u8ba4\u77e5  \u5b66\u4e60\u7b97\u6cd5\uff08learning algorithm\uff09\uff0c\u4ece\u6570\u636e\u4e2d\u4ea7\u751f\u6a21\u578b\u7684\u65b9\u6cd5  \u6570\u636e\u96c6\uff08data set\uff09\uff1a\u4e00\u7ec4\u8bb0\u5f55\u7684\u5408\u96c6  \u793a\u4f8b\uff08instance\uff09\uff1a\u5bf9\u4e8e\u67d0\u4e2a\u5bf9\u8c61\u7684\u63cf\u8ff0  \u6837\u672c\uff08sample\uff09\uff1a\u4e5f\u53eb\u793a\u4f8b  \u5c5e\u6027\uff08attribute\uff09\uff1a\u5bf9\u8c61\u7684\u67d0\u65b9\u4fbf\u8868\u73b0\u6216\u7279\u5f81  \u7279\u5f81\uff08feature\uff09\uff1a\u540c\u5c5e\u6027  \u5c5e\u6027\u503c\uff08attribute value\uff09\uff1a\u5c5e\u6027\u4e0a\u7684\u53d6\u503c  \u5c5e\u6027\u7a7a\u95f4\uff08attribute space\uff09\uff1a\u5c5e\u6027\u5f20\u6210\u7684\u7a7a\u95f4  \u6837\u672c\u7a7a\u95f4/\u8f93\u5165\u7a7a\u95f4\uff08samplespace\uff09\uff1a\u540c\u5c5e\u6027\u7a7a\u95f4  \u7279\u5f81\u5411\u91cf\uff08feature vector\uff09\uff1a\u5728\u5c5e\u6027\u7a7a\u95f4\u91cc\u6bcf\u4e2a\u70b9\u5bf9\u5e94\u4e00\u4e2a\u5750\u6807\u5411\u91cf\uff0c\u628a\u4e00\u4e2a\u793a\u4f8b\u79f0\u4f5c\u7279\u5f81\u5411\u91cf  \u7ef4\u6570\uff08dimensionality\uff09\uff1a\u63cf\u8ff0\u6837\u672c\u53c2\u6570\u7684\u4e2a\u6570\uff08\u4e5f\u5c31\u662f\u7a7a\u95f4\u662f\u51e0\u7ef4\u7684  \u5b66\u4e60\uff08learning\uff09/\u8bad\u7ec3\uff08training\uff09\uff1a\u4ece\u6570\u636e\u4e2d\u5b66\u5f97\u6a21\u578b  \u8bad\u7ec3\u6570\u636e\uff08training data\uff09\uff1a\u8bad\u7ec3\u8fc7\u7a0b\u4e2d\u7528\u5230\u7684\u6570\u636e  \u8bad\u7ec3\u6837\u672c\uff08training sample\uff09:\u8bad\u7ec3\u7528\u5230\u7684\u6bcf\u4e2a\u6837\u672c  \u8bad\u7ec3\u96c6\uff08training set\uff09\uff1a\u8bad\u7ec3\u6837\u672c\u7ec4\u6210\u7684\u96c6\u5408  \u5047\u8bbe\uff08hypothesis\uff09\uff1a\u5b66\u4e60\u6a21\u578b\u5bf9\u5e94\u4e86\u5173\u4e8e\u6570\u636e\u7684\u67d0\u79cd\u6f5c\u5728\u89c4\u5219  \u771f\u76f8\uff08group-true\uff09:\u771f\u6b63\u5b58\u5728\u7684\u6f5c\u5728\u89c4\u5f8b  \u5b66\u4e60\u5668\uff08learner\uff09\uff1a\u6a21\u578b\u7684\u53e6\u4e00\u79cd\u53eb\u6cd5\uff0c\u628a\u5b66\u4e60\u7b97\u6cd5\u5728\u7ed9\u5b9a\u6570\u636e\u548c\u53c2\u6570\u7a7a\u95f4\u7684\u5b9e\u4f8b\u5316  \u9884\u6d4b\uff08prediction\uff09\uff1a\u5224\u65ad\u4e00\u4e2a\u4e1c\u897f\u7684\u5c5e\u6027  \u6807\u8bb0\uff08label\uff09\uff1a\u5173\u4e8e\u793a\u4f8b\u7684\u7ed3\u679c\u4fe1\u606f\uff0c\u6bd4\u5982\u6211\u662f\u4e00\u4e2a\u201c\u597d\u4eba\u201d\u3002  \u6837\u4f8b\uff08example\uff09\uff1a\u62e5\u6709\u6807\u8bb0\u7684\u793a\u4f8b  \u6807\u8bb0\u7a7a\u95f4/\u8f93\u51fa\u7a7a\u95f4\uff08label space\uff09\uff1a\u6240\u6709\u6807\u8bb0\u7684\u96c6\u5408  \u5206\u7c7b\uff08classification\uff09\uff1a\u9884\u6d4b\u65f6\u79bb\u6563\u503c\uff0c\u6bd4\u5982\u628a\u4eba\u5206\u4e3a\u597d\u4eba\u548c\u574f\u4eba\u4e4b\u7c7b\u7684\u5b66\u4e60\u4efb\u52a1  \u56de\u5f52\uff08regression\uff09\uff1a\u9884\u6d4b\u503c\u65f6\u8fde\u7eed\u503c\uff0c\u6bd4\u5982\u4f60\u7684\u597d\u4eba\u7a0b\u5ea6\u8fbe\u5230\u4e860.9\uff0c0.6\u4e4b\u7c7b\u7684  \u4e8c\u5206\u7c7b\uff08binary classification\uff09\uff1a\u53ea\u6d89\u53ca\u4e24\u4e2a\u7c7b\u522b\u7684\u5206\u7c7b\u4efb\u52a1  \u6b63\u7c7b\uff08positive class\uff09\uff1a\u4e8c\u5206\u7c7b\u91cc\u7684\u4e00\u4e2a  \u53cd\u7c7b\uff08negative class\uff09\uff1a\u4e8c\u5206\u7c7b\u91cc\u7684\u53e6\u5916\u4e00\u4e2a  \u591a\u5206\u7c7b\uff08multi-class classification\uff09\uff1a\u6d89\u53ca\u591a\u4e2a\u7c7b\u522b\u7684\u5206\u7c7b  \u6d4b\u8bd5\uff08testing\uff09\uff1a\u5b66\u4e60\u5230\u6a21\u578b\u4e4b\u540e\u5bf9\u6837\u672c\u8fdb\u884c\u9884\u6d4b\u7684\u8fc7\u7a0b  \u6d4b\u8bd5\u6837\u672c\uff08testing sample\uff09\uff1a\u88ab\u9884\u6d4b\u7684\u6837\u672c  \u805a\u7c7b\uff08clustering\uff09\uff1a\u628a\u8bad\u7ec3\u96c6\u4e2d\u7684\u5bf9\u8c61\u5206\u4e3a\u82e5\u5e72\u7ec4  \u7c07\uff08cluster\uff09\uff1a\u6bcf\u4e00\u4e2a\u7ec4\u53eb\u7c07  \u76d1\u7763\u5b66\u4e60\uff08supervised learning\uff09\uff1a\u5178\u8303--\u5206\u7c7b\u548c\u56de\u5f52  \u65e0\u76d1\u7763\u5b66\u4e60\uff08unsupervised learning\uff09\uff1a\u5178\u8303--\u805a\u7c7b  \u672a\u89c1\u793a\u4f8b\uff08unseen instance\uff09\uff1a\u201c\u65b0\u6837\u672c\u201c\uff0c\u6ca1\u8bad\u7ec3\u8fc7\u7684\u6837\u672c  \u6cdb\u5316\uff08generalization\uff09\u80fd\u529b\uff1a\u5b66\u5f97\u7684\u6a21\u578b\u9002\u7528\u4e8e\u65b0\u6837\u672c\u7684\u80fd\u529b  \u5206\u5e03\uff08distribution\uff09\uff1a\u6837\u672c\u7a7a\u95f4\u7684\u5168\u4f53\u6837\u672c\u670d\u4ece\u7684\u4e00\u79cd\u89c4\u5f8b  \u72ec\u7acb\u540c\u5206\u5e03\uff08independent and identically distributed\uff0c\u7b80\u79f0i,i,d.\uff09:\u83b7\u5f97\u7684\u6bcf\u4e2a\u6837\u672c\u90fd\u662f\u72ec\u7acb\u5730\u4ece\u8fd9\u4e2a\u5206\u5e03\u4e0a\u91c7\u6837\u83b7\u5f97\u7684\u3002     \u4f5c\u8005\uff1a \u7247\u523b   1988  GitHub\u5730\u5740 :  https://github.com/apachecn/MachineLearning  \u7248\u6743\u58f0\u660e\uff1a\u6b22\u8fce\u8f6c\u8f7d\u5b66\u4e60 =  \u8bf7\u6807\u6ce8\u4fe1\u606f\u6765\u6e90\u4e8e  ApacheCN", 
            "title": "\u9644\uff1a\u673a\u5668\u5b66\u4e60\u4e13\u4e1a\u672f\u8bed"
        }, 
        {
            "location": "/\u4e66\u7c4d/\u673a\u5668\u5b66\u4e60\u5b9e\u6218/02.k-\u8fd1\u90bb\u7b97\u6cd5/", 
            "text": "\u7b2c2\u7ae0 k-\u8fd1\u90bb\u7b97\u6cd5\n\n\n\n\nKNN \u6982\u8ff0\n\n\nk-\u8fd1\u90bb\uff08kNN, k-NearestNeighbor\uff09\u7b97\u6cd5\u662f\u4e00\u79cd\u57fa\u672c\u5206\u7c7b\u4e0e\u56de\u5f52\u65b9\u6cd5\uff0c\u6211\u4eec\u8fd9\u91cc\u53ea\u8ba8\u8bba\u5206\u7c7b\u95ee\u9898\u4e2d\u7684 k-\u8fd1\u90bb\u7b97\u6cd5\u3002\n\n\n\u4e00\u53e5\u8bdd\u603b\u7ed3\uff1a\u8fd1\u6731\u8005\u8d64\u8fd1\u58a8\u8005\u9ed1\uff01\n \n\n\nk \u8fd1\u90bb\u7b97\u6cd5\u7684\u8f93\u5165\u4e3a\u5b9e\u4f8b\u7684\u7279\u5f81\u5411\u91cf\uff0c\u5bf9\u5e94\u4e8e\u7279\u5f81\u7a7a\u95f4\u7684\u70b9\uff1b\u8f93\u51fa\u4e3a\u5b9e\u4f8b\u7684\u7c7b\u522b\uff0c\u53ef\u4ee5\u53d6\u591a\u7c7b\u3002k \u8fd1\u90bb\u7b97\u6cd5\u5047\u8bbe\u7ed9\u5b9a\u4e00\u4e2a\u8bad\u7ec3\u6570\u636e\u96c6\uff0c\u5176\u4e2d\u7684\u5b9e\u4f8b\u7c7b\u522b\u5df2\u5b9a\u3002\u5206\u7c7b\u65f6\uff0c\u5bf9\u65b0\u7684\u5b9e\u4f8b\uff0c\u6839\u636e\u5176 k \u4e2a\u6700\u8fd1\u90bb\u7684\u8bad\u7ec3\u5b9e\u4f8b\u7684\u7c7b\u522b\uff0c\u901a\u8fc7\u591a\u6570\u8868\u51b3\u7b49\u65b9\u5f0f\u8fdb\u884c\u9884\u6d4b\u3002\u56e0\u6b64\uff0ck\u8fd1\u90bb\u7b97\u6cd5\u4e0d\u5177\u6709\u663e\u5f0f\u7684\u5b66\u4e60\u8fc7\u7a0b\u3002\n\n\nk \u8fd1\u90bb\u7b97\u6cd5\u5b9e\u9645\u4e0a\u5229\u7528\u8bad\u7ec3\u6570\u636e\u96c6\u5bf9\u7279\u5f81\u5411\u91cf\u7a7a\u95f4\u8fdb\u884c\u5212\u5206\uff0c\u5e76\u4f5c\u4e3a\u5176\u5206\u7c7b\u7684\u201c\u6a21\u578b\u201d\u3002 k\u503c\u7684\u9009\u62e9\u3001\u8ddd\u79bb\u5ea6\u91cf\u4ee5\u53ca\u5206\u7c7b\u51b3\u7b56\u89c4\u5219\u662fk\u8fd1\u90bb\u7b97\u6cd5\u7684\u4e09\u4e2a\u57fa\u672c\u8981\u7d20\u3002\n\n\nKNN \u573a\u666f\n\n\n\u7535\u5f71\u53ef\u4ee5\u6309\u7167\u9898\u6750\u5206\u7c7b\uff0c\u90a3\u4e48\u5982\u4f55\u533a\u5206 \n\u52a8\u4f5c\u7247\n \u548c \n\u7231\u60c5\u7247\n \u5462\uff1f\n\n1. \u52a8\u4f5c\u7247\uff1a\u6253\u6597\u6b21\u6570\u66f4\u591a\n2. \u7231\u60c5\u7247\uff1a\u4eb2\u543b\u6b21\u6570\u66f4\u591a\n\n\n\u57fa\u4e8e\u7535\u5f71\u4e2d\u7684\u4eb2\u543b\u3001\u6253\u6597\u51fa\u73b0\u7684\u6b21\u6570\uff0c\u4f7f\u7528 k-\u8fd1\u90bb\u7b97\u6cd5\u6784\u9020\u7a0b\u5e8f\uff0c\u5c31\u53ef\u4ee5\u81ea\u52a8\u5212\u5206\u7535\u5f71\u7684\u9898\u6750\u7c7b\u578b\u3002\n\n\n\n\n\u73b0\u5728\u6839\u636e\u4e0a\u9762\u6211\u4eec\u5f97\u5230\u7684\u6837\u672c\u96c6\u4e2d\u6240\u6709\u7535\u5f71\u4e0e\u672a\u77e5\u7535\u5f71\u7684\u8ddd\u79bb\uff0c\u6309\u7167\u8ddd\u79bb\u9012\u589e\u6392\u5e8f\uff0c\u53ef\u4ee5\u627e\u5230 k \u4e2a\u8ddd\u79bb\u6700\u8fd1\u7684\u7535\u5f71\u3002\n\u5047\u5b9a k=3\uff0c\u5219\u4e09\u4e2a\u6700\u9760\u8fd1\u7684\u7535\u5f71\u4f9d\u6b21\u662f\uff0c He\ns Not Really into Dudes \u3001 Beautiful Woman \u548c California Man\u3002\nknn \u7b97\u6cd5\u6309\u7167\u8ddd\u79bb\u6700\u8fd1\u7684\u4e09\u90e8\u7535\u5f71\u7684\u7c7b\u578b\uff0c\u51b3\u5b9a\u672a\u77e5\u7535\u5f71\u7684\u7c7b\u578b\uff0c\u800c\u8fd9\u4e09\u90e8\u7535\u5f71\u5168\u662f\u7231\u60c5\u7247\uff0c\u56e0\u6b64\u6211\u4eec\u5224\u5b9a\u672a\u77e5\u7535\u5f71\u662f\u7231\u60c5\u7247\u3002\n\n\n\n\nKNN \u539f\u7406\n\n\n\n\nKNN \u5de5\u4f5c\u539f\u7406\n\n\n\n\n\n\n\u5047\u8bbe\u6709\u4e00\u4e2a\u5e26\u6709\u6807\u7b7e\u7684\u6837\u672c\u6570\u636e\u96c6\uff08\u8bad\u7ec3\u6837\u672c\u96c6\uff09\uff0c\u5176\u4e2d\u5305\u542b\u6bcf\u6761\u6570\u636e\u4e0e\u6240\u5c5e\u5206\u7c7b\u7684\u5bf9\u5e94\u5173\u7cfb\u3002\n\n\n\u8f93\u5165\u6ca1\u6709\u6807\u7b7e\u7684\u65b0\u6570\u636e\u540e\uff0c\u5c06\u65b0\u6570\u636e\u7684\u6bcf\u4e2a\u7279\u5f81\u4e0e\u6837\u672c\u96c6\u4e2d\u6570\u636e\u5bf9\u5e94\u7684\u7279\u5f81\u8fdb\u884c\u6bd4\u8f83\u3002\n\n\n\u8ba1\u7b97\u65b0\u6570\u636e\u4e0e\u6837\u672c\u6570\u636e\u96c6\u4e2d\u6bcf\u6761\u6570\u636e\u7684\u8ddd\u79bb\u3002\n\n\n\u5bf9\u6c42\u5f97\u7684\u6240\u6709\u8ddd\u79bb\u8fdb\u884c\u6392\u5e8f\uff08\u4ece\u5c0f\u5230\u5927\uff0c\u8d8a\u5c0f\u8868\u793a\u8d8a\u76f8\u4f3c\uff09\u3002\n\n\n\u53d6\u524d k \uff08k \u4e00\u822c\u5c0f\u4e8e\u7b49\u4e8e 20 \uff09\u4e2a\u6837\u672c\u6570\u636e\u5bf9\u5e94\u7684\u5206\u7c7b\u6807\u7b7e\u3002\n\n\n\n\n\n\n\u6c42 k \u4e2a\u6570\u636e\u4e2d\u51fa\u73b0\u6b21\u6570\u6700\u591a\u7684\u5206\u7c7b\u6807\u7b7e\u4f5c\u4e3a\u65b0\u6570\u636e\u7684\u5206\u7c7b\u3002\n\n\n\n\n\n\nKNN \u901a\u4fd7\u7406\u89e3\n\n\n\n\n\u7ed9\u5b9a\u4e00\u4e2a\u8bad\u7ec3\u6570\u636e\u96c6\uff0c\u5bf9\u65b0\u7684\u8f93\u5165\u5b9e\u4f8b\uff0c\u5728\u8bad\u7ec3\u6570\u636e\u96c6\u4e2d\u627e\u5230\u4e0e\u8be5\u5b9e\u4f8b\u6700\u90bb\u8fd1\u7684 k \u4e2a\u5b9e\u4f8b\uff0c\u8fd9 k \u4e2a\u5b9e\u4f8b\u7684\u591a\u6570\u5c5e\u4e8e\u67d0\u4e2a\u7c7b\uff0c\u5c31\u628a\u8be5\u8f93\u5165\u5b9e\u4f8b\u5206\u4e3a\u8fd9\u4e2a\u7c7b\u3002\n\n\n\n\nKNN \u5f00\u53d1\u6d41\u7a0b\n\n\n\n\n\u6536\u96c6\u6570\u636e\uff1a\u4efb\u4f55\u65b9\u6cd5\n\u51c6\u5907\u6570\u636e\uff1a\u8ddd\u79bb\u8ba1\u7b97\u6240\u9700\u8981\u7684\u6570\u503c\uff0c\u6700\u597d\u662f\u7ed3\u6784\u5316\u7684\u6570\u636e\u683c\u5f0f\n\u5206\u6790\u6570\u636e\uff1a\u4efb\u4f55\u65b9\u6cd5\n\u8bad\u7ec3\u7b97\u6cd5\uff1a\u6b64\u6b65\u9aa4\u4e0d\u9002\u7528\u4e8e k-\u8fd1\u90bb\u7b97\u6cd5\n\u6d4b\u8bd5\u7b97\u6cd5\uff1a\u8ba1\u7b97\u9519\u8bef\u7387\n\u4f7f\u7528\u7b97\u6cd5\uff1a\u8f93\u5165\u6837\u672c\u6570\u636e\u548c\u7ed3\u6784\u5316\u7684\u8f93\u51fa\u7ed3\u679c\uff0c\u7136\u540e\u8fd0\u884c k-\u8fd1\u90bb\u7b97\u6cd5\u5224\u65ad\u8f93\u5165\u6570\u636e\u5206\u7c7b\u5c5e\u4e8e\u54ea\u4e2a\u5206\u7c7b\uff0c\u6700\u540e\u5bf9\u8ba1\u7b97\u51fa\u7684\u5206\u7c7b\u6267\u884c\u540e\u7eed\u5904\u7406\n\n\n\n\n\n\nKNN \u7b97\u6cd5\u7279\u70b9\n\n\n\n\n\u4f18\u70b9\uff1a\u7cbe\u5ea6\u9ad8\u3001\u5bf9\u5f02\u5e38\u503c\u4e0d\u654f\u611f\u3001\u65e0\u6570\u636e\u8f93\u5165\u5047\u5b9a\n\u7f3a\u70b9\uff1a\u8ba1\u7b97\u590d\u6742\u5ea6\u9ad8\u3001\u7a7a\u95f4\u590d\u6742\u5ea6\u9ad8\n\u9002\u7528\u6570\u636e\u8303\u56f4\uff1a\u6570\u503c\u578b\u548c\u6807\u79f0\u578b\n\n\n\n\nKNN \u9879\u76ee\u6848\u4f8b\n\n\n\u9879\u76ee\u6848\u4f8b1: \u4f18\u5316\u7ea6\u4f1a\u7f51\u7ad9\u7684\u914d\u5bf9\u6548\u679c\n\n\n\u5b8c\u6574\u4ee3\u7801\u5730\u5740\n: \nhttps://github.com/apachecn/MachineLearning/blob/master/src/python/2.KNN/kNN.py\n\n\n\u9879\u76ee\u6982\u8ff0\n\n\n\u6d77\u4f26\u4f7f\u7528\u7ea6\u4f1a\u7f51\u7ad9\u5bfb\u627e\u7ea6\u4f1a\u5bf9\u8c61\u3002\u7ecf\u8fc7\u4e00\u6bb5\u65f6\u95f4\u4e4b\u540e\uff0c\u5979\u53d1\u73b0\u66fe\u4ea4\u5f80\u8fc7\u4e09\u79cd\u7c7b\u578b\u7684\u4eba:\n* \u4e0d\u559c\u6b22\u7684\u4eba\n* \u9b45\u529b\u4e00\u822c\u7684\u4eba\n* \u6781\u5177\u9b45\u529b\u7684\u4eba\n\n\n\u5979\u5e0c\u671b\uff1a\n1. \u5de5\u4f5c\u65e5\u4e0e\u9b45\u529b\u4e00\u822c\u7684\u4eba\u7ea6\u4f1a\n2. \u5468\u672b\u4e0e\u6781\u5177\u9b45\u529b\u7684\u4eba\u7ea6\u4f1a\n3. \u4e0d\u559c\u6b22\u7684\u4eba\u5219\u76f4\u63a5\u6392\u9664\u6389\n\n\n\u73b0\u5728\u5979\u6536\u96c6\u5230\u4e86\u4e00\u4e9b\u7ea6\u4f1a\u7f51\u7ad9\u672a\u66fe\u8bb0\u5f55\u7684\u6570\u636e\u4fe1\u606f\uff0c\u8fd9\u66f4\u6709\u52a9\u4e8e\u5339\u914d\u5bf9\u8c61\u7684\u5f52\u7c7b\u3002\n\n\n\u5f00\u53d1\u6d41\u7a0b\n\n\n\u6536\u96c6\u6570\u636e\uff1a\u63d0\u4f9b\u6587\u672c\u6587\u4ef6\n\u51c6\u5907\u6570\u636e\uff1a\u4f7f\u7528 Python \u89e3\u6790\u6587\u672c\u6587\u4ef6\n\u5206\u6790\u6570\u636e\uff1a\u4f7f\u7528 Matplotlib \u753b\u4e8c\u7ef4\u6563\u70b9\u56fe\n\u8bad\u7ec3\u7b97\u6cd5\uff1a\u6b64\u6b65\u9aa4\u4e0d\u9002\u7528\u4e8e k-\u8fd1\u90bb\u7b97\u6cd5\n\u6d4b\u8bd5\u7b97\u6cd5\uff1a\u4f7f\u7528\u6d77\u4f26\u63d0\u4f9b\u7684\u90e8\u5206\u6570\u636e\u4f5c\u4e3a\u6d4b\u8bd5\u6837\u672c\u3002\n        \u6d4b\u8bd5\u6837\u672c\u548c\u975e\u6d4b\u8bd5\u6837\u672c\u7684\u533a\u522b\u5728\u4e8e\uff1a\n            \u6d4b\u8bd5\u6837\u672c\u662f\u5df2\u7ecf\u5b8c\u6210\u5206\u7c7b\u7684\u6570\u636e\uff0c\u5982\u679c\u9884\u6d4b\u5206\u7c7b\u4e0e\u5b9e\u9645\u7c7b\u522b\u4e0d\u540c\uff0c\u5219\u6807\u8bb0\u4e3a\u4e00\u4e2a\u9519\u8bef\u3002\n\u4f7f\u7528\u7b97\u6cd5\uff1a\u4ea7\u751f\u7b80\u5355\u7684\u547d\u4ee4\u884c\u7a0b\u5e8f\uff0c\u7136\u540e\u6d77\u4f26\u53ef\u4ee5\u8f93\u5165\u4e00\u4e9b\u7279\u5f81\u6570\u636e\u4ee5\u5224\u65ad\u5bf9\u65b9\u662f\u5426\u4e3a\u81ea\u5df1\u559c\u6b22\u7684\u7c7b\u578b\u3002\n\n\n\n\n\n\n\u6536\u96c6\u6570\u636e\uff1a\u63d0\u4f9b\u6587\u672c\u6587\u4ef6\n\n\n\n\n\u6d77\u4f26\u628a\u8fd9\u4e9b\u7ea6\u4f1a\u5bf9\u8c61\u7684\u6570\u636e\u5b58\u653e\u5728\u6587\u672c\u6587\u4ef6 \ndatingTestSet2.txt\n \u4e2d\uff0c\u603b\u5171\u6709 1000 \u884c\u3002\u6d77\u4f26\u7ea6\u4f1a\u7684\u5bf9\u8c61\u4e3b\u8981\u5305\u542b\u4ee5\u4e0b 3 \u79cd\u7279\u5f81\uff1a\n\n\n\n\n\u6bcf\u5e74\u83b7\u5f97\u7684\u98de\u884c\u5e38\u5ba2\u91cc\u7a0b\u6570\n\n\n\u73a9\u89c6\u9891\u6e38\u620f\u6240\u8017\u65f6\u95f4\u767e\u5206\u6bd4\n\n\n\u6bcf\u5468\u6d88\u8d39\u7684\u51b0\u6dc7\u6dcb\u516c\u5347\u6570\n\n\n\n\n\u6587\u672c\u6587\u4ef6\u6570\u636e\u683c\u5f0f\u5982\u4e0b\uff1a\n\n40920   8.326976    0.953952    3\n14488   7.153469    1.673904    2\n26052   1.441871    0.805124    1\n75136   13.147394   0.428964    1\n38344   1.669788    0.134296    1\n\n\n\n\n\n\u51c6\u5907\u6570\u636e\uff1a\u4f7f\u7528 Python \u89e3\u6790\u6587\u672c\u6587\u4ef6\n\n\n\n\n\u5c06\u6587\u672c\u8bb0\u5f55\u8f6c\u6362\u4e3a NumPy \u7684\u89e3\u6790\u7a0b\u5e8f\n\n\n```python\ndef file2matrix(filename):\n    \"\"\"\n    Desc:\n        \u5bfc\u5165\u8bad\u7ec3\u6570\u636e\n    parameters:\n        filename: \u6570\u636e\u6587\u4ef6\u8def\u5f84\n    return: \n        \u6570\u636e\u77e9\u9635 returnMat \u548c\u5bf9\u5e94\u7684\u7c7b\u522b classLabelVector\n    \"\"\"\n    fr = open(filename)\n    # \u83b7\u5f97\u6587\u4ef6\u4e2d\u7684\u6570\u636e\u884c\u7684\u884c\u6570\n    numberOfLines = len(fr.readlines())\n    # \u751f\u6210\u5bf9\u5e94\u7684\u7a7a\u77e9\u9635\n    # \u4f8b\u5982\uff1azeros(2\uff0c3)\u5c31\u662f\u751f\u6210\u4e00\u4e2a 2*3\u7684\u77e9\u9635\uff0c\u5404\u4e2a\u4f4d\u7f6e\u4e0a\u5168\u662f 0 \n    returnMat = zeros((numberOfLines, 3))  # prepare matrix to return\n    classLabelVector = []  # prepare labels return\n    fr = open(filename)\n    index = 0\n    for line in fr.readlines():\n        # str.strip([chars]) --\u8fd4\u56de\u79fb\u9664\u5b57\u7b26\u4e32\u5934\u5c3e\u6307\u5b9a\u7684\u5b57\u7b26\u751f\u6210\u7684\u65b0\u5b57\u7b26\u4e32\n        line = line.strip()\n        # \u4ee5 '\\t' \u5207\u5272\u5b57\u7b26\u4e32\n        listFromLine = line.split('\\t')\n        # \u6bcf\u5217\u7684\u5c5e\u6027\u6570\u636e\n        returnMat[index, :] = listFromLine[0:3]\n        # \u6bcf\u5217\u7684\u7c7b\u522b\u6570\u636e\uff0c\u5c31\u662f label \u6807\u7b7e\u6570\u636e\n        classLabelVector.append(int(listFromLine[-1]))\n        index += 1\n    # \u8fd4\u56de\u6570\u636e\u77e9\u9635returnMat\u548c\u5bf9\u5e94\u7684\u7c7b\u522bclassLabelVector\n    return returnMat, classLabelVector\n\n \u5206\u6790\u6570\u636e\uff1a\u4f7f\u7528 Matplotlib \u753b\u4e8c\u7ef4\u6563\u70b9\u56fe\n\n```python\nimport matplotlib\nimport matplotlib.pyplot as plt\nfig = plt.figure()\nax = fig.add_subplot(111)\nax.scatter(datingDataMat[:, 0], datingDataMat[:, 1], 15.0*array(datingLabels), 15.0*array(datingLabels))\nplt.show()\n\n\n\n\u4e0b\u56fe\u4e2d\u91c7\u7528\u77e9\u9635\u7684\u7b2c\u4e00\u548c\u7b2c\u4e8c\u5217\u5c5e\u6027\u5f97\u5230\u5f88\u597d\u7684\u5c55\u793a\u6548\u679c\uff0c\u6e05\u6670\u5730\u6807\u8bc6\u4e86\u4e09\u4e2a\u4e0d\u540c\u7684\u6837\u672c\u5206\u7c7b\u533a\u57df\uff0c\u5177\u6709\u4e0d\u540c\u7231\u597d\u7684\u4eba\u5176\u7c7b\u522b\u533a\u57df\u4e5f\u4e0d\u540c\u3002\n\n\n\n\n\n\n\u5f52\u4e00\u5316\u6570\u636e \uff08\u5f52\u4e00\u5316\u662f\u4e00\u4e2a\u8ba9\u6743\u91cd\u53d8\u4e3a\u7edf\u4e00\u7684\u8fc7\u7a0b\uff0c\u66f4\u591a\u7ec6\u8282\u8bf7\u53c2\u8003\uff1a \nhttps://www.zhihu.com/question/19951858\n \uff09\n\n\n\n\n\n\n\n\n\n\n\u5e8f\u53f7\n\n\n\u73a9\u89c6\u9891\u6e38\u620f\u6240\u8017\u65f6\u95f4\u767e\u5206\u6bd4\n\n\n\u6bcf\u5e74\u83b7\u5f97\u7684\u98de\u884c\u5e38\u5ba2\u91cc\u7a0b\u6570\n\n\n\u6bcf\u5468\u6d88\u8d39\u7684\u51b0\u6dc7\u6dcb\u516c\u5347\u6570\n\n\n\u6837\u672c\u5206\u7c7b\n\n\n\n\n\n\n\n\n\n\n1\n\n\n0.8\n\n\n400\n\n\n0.5\n\n\n1\n\n\n\n\n\n\n2\n\n\n12\n\n\n134 000\n\n\n0.9\n\n\n3\n\n\n\n\n\n\n3\n\n\n0\n\n\n20 000\n\n\n1.1\n\n\n2\n\n\n\n\n\n\n4\n\n\n67\n\n\n32 000\n\n\n0.1\n\n\n2\n\n\n\n\n\n\n\n\n\u6837\u672c3\u548c\u6837\u672c4\u7684\u8ddd\u79bb\uff1a\n\n\\sqrt{(0-67)^2 + (20000-32000)^2 + (1.1-0.1)^2 }\n\\sqrt{(0-67)^2 + (20000-32000)^2 + (1.1-0.1)^2 }\n<span><span class=\"MathJax_Preview\">\\sqrt{(0-67)^2 + (20000-32000)^2 + (1.1-0.1)^2 }</span><script type=\"math/tex\">\\sqrt{(0-67)^2 + (20000-32000)^2 + (1.1-0.1)^2 }\n\n\n\u5f52\u4e00\u5316\u7279\u5f81\u503c\uff0c\u6d88\u9664\u7279\u5f81\u4e4b\u95f4\u91cf\u7ea7\u4e0d\u540c\u5bfc\u81f4\u7684\u5f71\u54cd\n\n\n\u5f52\u4e00\u5316\u5b9a\u4e49\uff1a\n \u6211\u662f\u8fd9\u6837\u8ba4\u4e3a\u7684\uff0c\u5f52\u4e00\u5316\u5c31\u662f\u8981\u628a\u4f60\u9700\u8981\u5904\u7406\u7684\u6570\u636e\u7ecf\u8fc7\u5904\u7406\u540e\uff08\u901a\u8fc7\u67d0\u79cd\u7b97\u6cd5\uff09\u9650\u5236\u5728\u4f60\u9700\u8981\u7684\u4e00\u5b9a\u8303\u56f4\u5185\u3002\u9996\u5148\u5f52\u4e00\u5316\u662f\u4e3a\u4e86\u540e\u9762\u6570\u636e\u5904\u7406\u7684\u65b9\u4fbf\uff0c\u5176\u6b21\u662f\u4fdd\u6b63\u7a0b\u5e8f\u8fd0\u884c\u65f6\u6536\u655b\u52a0\u5feb\u3002 \u65b9\u6cd5\u6709\u5982\u4e0b\uff1a\n\n\n1) \u7ebf\u6027\u51fd\u6570\u8f6c\u6362\uff0c\u8868\u8fbe\u5f0f\u5982\u4e0b\uff1a\u3000\u3000\n\n\ny=(x-MinValue)/(MaxValue-MinValue)\n\n\u8bf4\u660e\uff1ax\u3001y\u5206\u522b\u4e3a\u8f6c\u6362\u524d\u3001\u540e\u7684\u503c\uff0cMaxValue\u3001MinValue\u5206\u522b\u4e3a\u6837\u672c\u7684\u6700\u5927\u503c\u548c\u6700\u5c0f\u503c\u3002\n\n\n\n\n\n2) \u5bf9\u6570\u51fd\u6570\u8f6c\u6362\uff0c\u8868\u8fbe\u5f0f\u5982\u4e0b\uff1a\u3000\u3000\n\n\ny=log10(x)\n\n\u8bf4\u660e\uff1a\u4ee510\u4e3a\u5e95\u7684\u5bf9\u6570\u51fd\u6570\u8f6c\u6362\u3002\n\n\u5982\u56fe\uff1a\n\n![\u5bf9\u6570\u51fd\u6570\u56fe\u50cf](resources/2.KNN/knn_1.png)\n\n\n\n\n\n3) \u53cd\u4f59\u5207\u51fd\u6570\u8f6c\u6362\uff0c\u8868\u8fbe\u5f0f\u5982\u4e0b\uff1a\n\n\ny=arctan(x)*2/PI\n\n\u5982\u56fe\uff1a\n\n![\u53cd\u4f59\u5207\u51fd\u6570\u56fe\u50cf](resources/2.KNN/arctan_arccot.gif)\n\n\n\n\n\n4) \u5f0f(1)\u5c06\u8f93\u5165\u503c\u6362\u7b97\u4e3a[-1,1]\u533a\u95f4\u7684\u503c\uff0c\u5728\u8f93\u51fa\u5c42\u7528\u5f0f(2)\u6362\u7b97\u56de\u521d\u59cb\u503c\uff0c\u5176\u4e2d\u548c\u5206\u522b\u8868\u793a\u8bad\u7ec3\u6837\u672c\u96c6\u4e2d\u8d1f\u8377\u7684\u6700\u5927\u503c\u548c\u6700\u5c0f\u503c\u3002\u3000\n\n\n\u5728\u7edf\u8ba1\u5b66\u4e2d\uff0c\u5f52\u4e00\u5316\u7684\u5177\u4f53\u4f5c\u7528\u662f\u5f52\u7eb3\u7edf\u4e00\u6837\u672c\u7684\u7edf\u8ba1\u5206\u5e03\u6027\u3002\u5f52\u4e00\u5316\u57280-1\u4e4b\u95f4\u662f\u7edf\u8ba1\u7684\u6982\u7387\u5206\u5e03\uff0c\u5f52\u4e00\u5316\u5728-1--+1\u4e4b\u95f4\u662f\u7edf\u8ba1\u7684\u5750\u6807\u5206\u5e03\u3002\n\n\ndef\n \nautoNorm\n(\ndataSet\n):\n\n    \n\n\n    Desc:\n\n\n        \u5f52\u4e00\u5316\u7279\u5f81\u503c\uff0c\u6d88\u9664\u7279\u5f81\u4e4b\u95f4\u91cf\u7ea7\u4e0d\u540c\u5bfc\u81f4\u7684\u5f71\u54cd\n\n\n    parameter:\n\n\n        dataSet: \u6570\u636e\u96c6\n\n\n    return:\n\n\n        \u5f52\u4e00\u5316\u540e\u7684\u6570\u636e\u96c6 normDataSet. ranges\u548cminVals\u5373\u6700\u5c0f\u503c\u4e0e\u8303\u56f4\uff0c\u5e76\u6ca1\u6709\u7528\u5230\n\n\n\n    \u5f52\u4e00\u5316\u516c\u5f0f\uff1a\n\n\n        Y = (X-Xmin)/(Xmax-Xmin)\n\n\n        \u5176\u4e2d\u7684 min \u548c max \u5206\u522b\u662f\u6570\u636e\u96c6\u4e2d\u7684\u6700\u5c0f\u7279\u5f81\u503c\u548c\u6700\u5927\u7279\u5f81\u503c\u3002\u8be5\u51fd\u6570\u53ef\u4ee5\u81ea\u52a8\u5c06\u6570\u5b57\u7279\u5f81\u503c\u8f6c\u5316\u4e3a0\u52301\u7684\u533a\u95f4\u3002\n\n\n    \n\n    \n# \u8ba1\u7b97\u6bcf\u79cd\u5c5e\u6027\u7684\u6700\u5927\u503c\u3001\u6700\u5c0f\u503c\u3001\u8303\u56f4\n\n    \nminVals\n \n=\n \ndataSet\n.\nmin\n(\n0\n)\n\n    \nmaxVals\n \n=\n \ndataSet\n.\nmax\n(\n0\n)\n\n    \n# \u6781\u5dee\n\n    \nranges\n \n=\n \nmaxVals\n \n-\n \nminVals\n\n    \nnormDataSet\n \n=\n \nzeros\n(\nshape\n(\ndataSet\n))\n\n    \nm\n \n=\n \ndataSet\n.\nshape\n[\n0\n]\n\n    \n# \u751f\u6210\u4e0e\u6700\u5c0f\u503c\u4e4b\u5dee\u7ec4\u6210\u7684\u77e9\u9635\n\n    \nnormDataSet\n \n=\n \ndataSet\n \n-\n \ntile\n(\nminVals\n,\n \n(\nm\n,\n \n1\n))\n\n    \n# \u5c06\u6700\u5c0f\u503c\u4e4b\u5dee\u9664\u4ee5\u8303\u56f4\u7ec4\u6210\u77e9\u9635\n\n    \nnormDataSet\n \n=\n \nnormDataSet\n \n/\n \ntile\n(\nranges\n,\n \n(\nm\n,\n \n1\n))\n  \n# element wise divide\n\n    \nreturn\n \nnormDataSet\n,\n \nranges\n,\n \nminVals\n\n\n\n\n\n\n\n\u8bad\u7ec3\u7b97\u6cd5\uff1a\u6b64\u6b65\u9aa4\u4e0d\u9002\u7528\u4e8e k-\u8fd1\u90bb\u7b97\u6cd5\n\n\n\n\n\u56e0\u4e3a\u6d4b\u8bd5\u6570\u636e\u6bcf\u4e00\u6b21\u90fd\u8981\u4e0e\u5168\u91cf\u7684\u8bad\u7ec3\u6570\u636e\u8fdb\u884c\u6bd4\u8f83\uff0c\u6240\u4ee5\u8fd9\u4e2a\u8fc7\u7a0b\u662f\u6ca1\u6709\u5fc5\u8981\u7684\u3002\n\n\nkNN \u7b97\u6cd5\u4f2a\u4ee3\u7801\uff1a\n\n\n\u5bf9\u4e8e\u6bcf\u4e00\u4e2a\u5728\u6570\u636e\u96c6\u4e2d\u7684\u6570\u636e\u70b9\uff1a\n    \u8ba1\u7b97\u76ee\u6807\u7684\u6570\u636e\u70b9\uff08\u9700\u8981\u5206\u7c7b\u7684\u6570\u636e\u70b9\uff09\u4e0e\u8be5\u6570\u636e\u70b9\u7684\u8ddd\u79bb\n    \u5c06\u8ddd\u79bb\u6392\u5e8f\uff1a\u4ece\u5c0f\u5230\u5927\n    \u9009\u53d6\u524dK\u4e2a\u6700\u77ed\u8ddd\u79bb\n    \u9009\u53d6\u8fd9K\u4e2a\u4e2d\u6700\u591a\u7684\u5206\u7c7b\u7c7b\u522b\n    \u8fd4\u56de\u8be5\u7c7b\u522b\u6765\u4f5c\u4e3a\u76ee\u6807\u6570\u636e\u70b9\u7684\u9884\u6d4b\u503c\n\n\n\n\n\npython\ndef classify0(inX, dataSet, labels, k):\n    dataSetSize = dataSet.shape[0]\n \u00a0 \u00a0#\u8ddd\u79bb\u5ea6\u91cf \u5ea6\u91cf\u516c\u5f0f\u4e3a\u6b27\u6c0f\u8ddd\u79bb\n \u00a0 \u00a0diffMat = tile(inX, (dataSetSize,1)) \u2013 dataSet\n    sqDiffMat = diffMat**2\n    sqDistances = sqDiffMat.sum(axis=1)\n    distances = sqDistances**0.5\n \u00a0 \u00a0\n    #\u5c06\u8ddd\u79bb\u6392\u5e8f\uff1a\u4ece\u5c0f\u5230\u5927\n    sortedDistIndicies = distances.argsort()\n    #\u9009\u53d6\u524dK\u4e2a\u6700\u77ed\u8ddd\u79bb\uff0c \u9009\u53d6\u8fd9K\u4e2a\u4e2d\u6700\u591a\u7684\u5206\u7c7b\u7c7b\u522b\n    classCount={}\n \u00a0 \u00a0for i in range(k)\uff1a\n \u00a0 \u00a0 \u00a0 \u00a0voteIlabel = labels[sortedDistIndicies[i]]\n        classCount[voteIlabel] = classCount.get(voteIlabel,0) + 1 \n    sortedClassCount = sorted(classCount.iteritems(), key=operator.itemgetter(1), reverse=True)\n    return sortedClassCount[0][0]\n\n\n\n\n\u6d4b\u8bd5\u7b97\u6cd5\uff1a\u4f7f\u7528\u6d77\u4f26\u63d0\u4f9b\u7684\u90e8\u5206\u6570\u636e\u4f5c\u4e3a\u6d4b\u8bd5\u6837\u672c\u3002\u5982\u679c\u9884\u6d4b\u5206\u7c7b\u4e0e\u5b9e\u9645\u7c7b\u522b\u4e0d\u540c\uff0c\u5219\u6807\u8bb0\u4e3a\u4e00\u4e2a\u9519\u8bef\u3002\n\n\n\n\nkNN \u5206\u7c7b\u5668\u9488\u5bf9\u7ea6\u4f1a\u7f51\u7ad9\u7684\u6d4b\u8bd5\u4ee3\u7801\n\n\ndef\n \ndatingClassTest\n():\n\n    \n\n\n    Desc:\n\n\n        \u5bf9\u7ea6\u4f1a\u7f51\u7ad9\u7684\u6d4b\u8bd5\u65b9\u6cd5\n\n\n    parameters:\n\n\n        none\n\n\n    return:\n\n\n        \u9519\u8bef\u6570\n\n\n    \n\n    \n# \u8bbe\u7f6e\u6d4b\u8bd5\u6570\u636e\u7684\u7684\u4e00\u4e2a\u6bd4\u4f8b\uff08\u8bad\u7ec3\u6570\u636e\u96c6\u6bd4\u4f8b=1-hoRatio\uff09\n\n    \nhoRatio\n \n=\n \n0.1\n  \n# \u6d4b\u8bd5\u8303\u56f4,\u4e00\u90e8\u5206\u6d4b\u8bd5\u4e00\u90e8\u5206\u4f5c\u4e3a\u6837\u672c\n\n    \n# \u4ece\u6587\u4ef6\u4e2d\u52a0\u8f7d\u6570\u636e\n\n    \ndatingDataMat\n,\n \ndatingLabels\n \n=\n \nfile2matrix\n(\ninput/2.KNN/datingTestSet2.txt\n)\n  \n# load data setfrom file\n\n    \n# \u5f52\u4e00\u5316\u6570\u636e\n\n    \nnormMat\n,\n \nranges\n,\n \nminVals\n \n=\n \nautoNorm\n(\ndatingDataMat\n)\n\n    \n# m \u8868\u793a\u6570\u636e\u7684\u884c\u6570\uff0c\u5373\u77e9\u9635\u7684\u7b2c\u4e00\u7ef4\n\n    \nm\n \n=\n \nnormMat\n.\nshape\n[\n0\n]\n\n    \n# \u8bbe\u7f6e\u6d4b\u8bd5\u7684\u6837\u672c\u6570\u91cf\uff0c numTestVecs:m\u8868\u793a\u8bad\u7ec3\u6837\u672c\u7684\u6570\u91cf\n\n    \nnumTestVecs\n \n=\n \nint\n(\nm\n \n*\n \nhoRatio\n)\n\n    \nprint\n \nnumTestVecs=\n,\n \nnumTestVecs\n\n    \nerrorCount\n \n=\n \n0.0\n\n    \nfor\n \ni\n \nin\n \nrange\n(\nnumTestVecs\n):\n\n        \n# \u5bf9\u6570\u636e\u6d4b\u8bd5\n\n        \nclassifierResult\n \n=\n \nclassify0\n(\nnormMat\n[\ni\n,\n \n:],\n \nnormMat\n[\nnumTestVecs\n:\nm\n,\n \n:],\n \ndatingLabels\n[\nnumTestVecs\n:\nm\n],\n \n3\n)\n\n        \nprint\n \nthe classifier came back with: \n%d\n, the real answer is: \n%d\n \n%\n \n(\nclassifierResult\n,\n \ndatingLabels\n[\ni\n])\n\n        \nif\n \n(\nclassifierResult\n \n!=\n \ndatingLabels\n[\ni\n]):\n \nerrorCount\n \n+=\n \n1.0\n\n    \nprint\n \nthe total error rate is: \n%f\n \n%\n \n(\nerrorCount\n \n/\n \nfloat\n(\nnumTestVecs\n))\n\n    \nprint\n \nerrorCount\n\n\n\n\n\n\n\n\u4f7f\u7528\u7b97\u6cd5\uff1a\u4ea7\u751f\u7b80\u5355\u7684\u547d\u4ee4\u884c\u7a0b\u5e8f\uff0c\u7136\u540e\u6d77\u4f26\u53ef\u4ee5\u8f93\u5165\u4e00\u4e9b\u7279\u5f81\u6570\u636e\u4ee5\u5224\u65ad\u5bf9\u65b9\u662f\u5426\u4e3a\u81ea\u5df1\u559c\u6b22\u7684\u7c7b\u578b\u3002\n\n\n\n\n\u7ea6\u4f1a\u7f51\u7ad9\u9884\u6d4b\u51fd\u6570\n\n\ndef\n \nclassifyPerson\n():\n\n    \nresultList\n \n=\n \n[\nnot at all\n,\n \nin small doses\n,\n \nin large doses\n]\n\n    \npercentTats\n \n=\n \nfloat\n(\nraw_input\n(\npercentage of time spent playing video games ?\n))\n\n    \nffMiles\n \n=\n \nfloat\n(\nraw_input\n(\nfrequent filer miles earned per year?\n))\n\n    \niceCream\n \n=\n \nfloat\n(\nraw_input\n(\nliters of ice cream consumed per year?\n))\n\n    \ndatingDataMat\n,\n \ndatingLabels\n \n=\n \nfile2matrix\n(\ndatingTestSet2.txt\n)\n\n    \nnormMat\n,\n \nranges\n,\n \nminVals\n \n=\n \nautoNorm\n(\ndatingDataMat\n)\n\n    \ninArr\n \n=\n \narray\n([\nffMiles\n,\n \npercentTats\n,\n \niceCream\n])\n\n    \nclassifierResult\n \n=\n \nclassify0\n((\ninArr\n-\nminVals\n)\n/\nranges\n,\nnormMat\n,\ndatingLabels\n,\n \n3\n)\n\n    \nprint\n \nYou will probably like this person: \n,\n \nresultList\n[\nclassifierResult\n \n-\n \n1\n]\n\n\n\n\n\n\u5b9e\u9645\u8fd0\u884c\u6548\u679c\u5982\u4e0b: \n\n\n \nclassifyPerson\n()\n\n\npercentage\n \nof\n \ntime\n \nspent\n \nplaying\n \nvideo\n \ngames\n?\n10\n\n\nfrequent\n \nflier\n \nmiles\n \nearned\n \nper\n \nyear\n?\n10000\n\n\nliters\n \nof\n \nice\n \ncream\n \nconsumed\n \nper\n \nyear\n?\n0.5\n\n\nYou\n \nwill\n \nprobably\n \nlike\n \nthis\n \nperson\n:\n \nin\n \nsmall\n \ndoses\n\n\n\n\n\n\u9879\u76ee\u6848\u4f8b2: \u624b\u5199\u6570\u5b57\u8bc6\u522b\u7cfb\u7edf\n\n\n\u5b8c\u6574\u4ee3\u7801\u5730\u5740\n: \nhttps://github.com/apachecn/MachineLearning/blob/master/src/python/2.KNN/kNN.py\n\n\n\u9879\u76ee\u6982\u8ff0\n\n\n\u6784\u9020\u4e00\u4e2a\u80fd\u8bc6\u522b\u6570\u5b57 0 \u5230 9 \u7684\u57fa\u4e8e KNN \u5206\u7c7b\u5668\u7684\u624b\u5199\u6570\u5b57\u8bc6\u522b\u7cfb\u7edf\u3002\n\n\n\u9700\u8981\u8bc6\u522b\u7684\u6570\u5b57\u662f\u5b58\u50a8\u5728\u6587\u672c\u6587\u4ef6\u4e2d\u7684\u5177\u6709\u76f8\u540c\u7684\u8272\u5f69\u548c\u5927\u5c0f\uff1a\u5bbd\u9ad8\u662f 32 \u50cf\u7d20 * 32 \u50cf\u7d20\u7684\u9ed1\u767d\u56fe\u50cf\u3002\n\n\n\u5f00\u53d1\u6d41\u7a0b\n\n\n\u6536\u96c6\u6570\u636e\uff1a\u63d0\u4f9b\u6587\u672c\u6587\u4ef6\u3002\n\u51c6\u5907\u6570\u636e\uff1a\u7f16\u5199\u51fd\u6570 img2vector(), \u5c06\u56fe\u50cf\u683c\u5f0f\u8f6c\u6362\u4e3a\u5206\u7c7b\u5668\u4f7f\u7528\u7684\u5411\u91cf\u683c\u5f0f\n\u5206\u6790\u6570\u636e\uff1a\u5728 Python \u547d\u4ee4\u63d0\u793a\u7b26\u4e2d\u68c0\u67e5\u6570\u636e\uff0c\u786e\u4fdd\u5b83\u7b26\u5408\u8981\u6c42\n\u8bad\u7ec3\u7b97\u6cd5\uff1a\u6b64\u6b65\u9aa4\u4e0d\u9002\u7528\u4e8e KNN\n\u6d4b\u8bd5\u7b97\u6cd5\uff1a\u7f16\u5199\u51fd\u6570\u4f7f\u7528\u63d0\u4f9b\u7684\u90e8\u5206\u6570\u636e\u96c6\u4f5c\u4e3a\u6d4b\u8bd5\u6837\u672c\uff0c\u6d4b\u8bd5\u6837\u672c\u4e0e\u975e\u6d4b\u8bd5\u6837\u672c\u7684\n         \u533a\u522b\u5728\u4e8e\u6d4b\u8bd5\u6837\u672c\u662f\u5df2\u7ecf\u5b8c\u6210\u5206\u7c7b\u7684\u6570\u636e\uff0c\u5982\u679c\u9884\u6d4b\u5206\u7c7b\u4e0e\u5b9e\u9645\u7c7b\u522b\u4e0d\u540c\uff0c\n         \u5219\u6807\u8bb0\u4e3a\u4e00\u4e2a\u9519\u8bef\n\u4f7f\u7528\u7b97\u6cd5\uff1a\u672c\u4f8b\u6ca1\u6709\u5b8c\u6210\u6b64\u6b65\u9aa4\uff0c\u82e5\u4f60\u611f\u5174\u8da3\u53ef\u4ee5\u6784\u5efa\u5b8c\u6574\u7684\u5e94\u7528\u7a0b\u5e8f\uff0c\u4ece\u56fe\u50cf\u4e2d\u63d0\u53d6\n         \u6570\u5b57\uff0c\u5e76\u5b8c\u6210\u6570\u5b57\u8bc6\u522b\uff0c\u7f8e\u56fd\u7684\u90ae\u4ef6\u5206\u62e3\u7cfb\u7edf\u5c31\u662f\u4e00\u4e2a\u5b9e\u9645\u8fd0\u884c\u7684\u7c7b\u4f3c\u7cfb\u7edf\n\n\n\n\n\n\n\u6536\u96c6\u6570\u636e: \u63d0\u4f9b\u6587\u672c\u6587\u4ef6\n\n\n\n\n\u76ee\u5f55 \ntrainingDigits\n \u4e2d\u5305\u542b\u4e86\u5927\u7ea6 2000 \u4e2a\u4f8b\u5b50\uff0c\u6bcf\u4e2a\u4f8b\u5b50\u5185\u5bb9\u5982\u4e0b\u56fe\u6240\u793a\uff0c\u6bcf\u4e2a\u6570\u5b57\u5927\u7ea6\u6709 200 \u4e2a\u6837\u672c\uff1b\u76ee\u5f55 \ntestDigits\n \u4e2d\u5305\u542b\u4e86\u5927\u7ea6 900 \u4e2a\u6d4b\u8bd5\u6570\u636e\u3002\n\n\n\n\n\n\n\u51c6\u5907\u6570\u636e: \u7f16\u5199\u51fd\u6570 img2vector(), \u5c06\u56fe\u50cf\u6587\u672c\u6570\u636e\u8f6c\u6362\u4e3a\u5206\u7c7b\u5668\u4f7f\u7528\u7684\u5411\u91cf\n\n\n\n\n\u5c06\u56fe\u50cf\u6587\u672c\u6570\u636e\u8f6c\u6362\u4e3a\u5411\u91cf\n\n\ndef\n \nimg2vector\n(\nfilename\n):\n\n    \nreturnVect\n \n=\n \nzeros\n((\n1\n,\n1024\n))\n\n    \nfr\n \n=\n \nopen\n(\nfilename\n)\n\n    \nfor\n \ni\n \nin\n \nrange\n(\n32\n):\n\n        \nlineStr\n \n=\n \nfr\n.\nreadline\n()\n\n        \nfor\n \nj\n \nin\n \nrange\n(\n32\n):\n\n            \nreturnVect\n[\n0\n,\n32\n*\ni\n+\nj\n]\n \n=\n \nint\n(\nlineStr\n[\nj\n])\n\n    \nreturn\n \nreturnVect\n\n\n\n\n\n\n\n\u5206\u6790\u6570\u636e\uff1a\u5728 Python \u547d\u4ee4\u63d0\u793a\u7b26\u4e2d\u68c0\u67e5\u6570\u636e\uff0c\u786e\u4fdd\u5b83\u7b26\u5408\u8981\u6c42\n\n\n\n\n\u5728 Python \u547d\u4ee4\u884c\u4e2d\u8f93\u5165\u4e0b\u5217\u547d\u4ee4\u6d4b\u8bd5 img2vector \u51fd\u6570\uff0c\u7136\u540e\u4e0e\u6587\u672c\u7f16\u8f91\u5668\u6253\u5f00\u7684\u6587\u4ef6\u8fdb\u884c\u6bd4\u8f83: \n\n\n \ntestVector\n \n=\n \nkNN\n.\nimg2vector\n(\ntestDigits/0_13.txt\n)\n\n\n \ntestVector\n[\n0\n,\n0\n:\n32\n]\n\n\narray\n([\n0.\n,\n \n0.\n,\n \n0.\n,\n \n0.\n,\n \n0.\n,\n \n0.\n,\n \n0.\n,\n \n0.\n,\n \n0.\n,\n \n0.\n,\n \n0.\n,\n \n0.\n,\n \n0.\n,\n \n0.\n,\n \n1.\n,\n \n1.\n,\n \n1.\n,\n \n1.\n,\n \n0.\n,\n \n0.\n,\n \n0.\n,\n \n0.\n,\n \n0.\n,\n \n0.\n,\n \n0.\n,\n \n0.\n,\n \n0.\n,\n \n0.\n,\n \n0.\n,\n \n0.\n,\n \n0.\n])\n\n\n \ntestVector\n[\n0\n,\n32\n:\n64\n]\n\n\narray\n([\n0.\n,\n \n0.\n,\n \n0.\n,\n \n0.\n,\n \n0.\n,\n \n0.\n,\n \n0.\n,\n \n0.\n,\n \n0.\n,\n \n0.\n,\n \n0.\n,\n \n0.\n,\n \n1.\n,\n \n1.\n,\n \n1.\n,\n \n1.\n,\n \n1.\n,\n \n1.\n,\n \n1.\n,\n \n0.\n,\n \n0.\n,\n \n0.\n,\n \n0.\n,\n \n0.\n,\n \n0.\n,\n \n0.\n,\n \n0.\n,\n \n0.\n,\n \n0.\n,\n \n0.\n,\n \n0.\n])\n\n\n\n\n\n\n\n\u8bad\u7ec3\u7b97\u6cd5\uff1a\u6b64\u6b65\u9aa4\u4e0d\u9002\u7528\u4e8e KNN\n\n\n\n\n\u56e0\u4e3a\u6d4b\u8bd5\u6570\u636e\u6bcf\u4e00\u6b21\u90fd\u8981\u4e0e\u5168\u91cf\u7684\u8bad\u7ec3\u6570\u636e\u8fdb\u884c\u6bd4\u8f83\uff0c\u6240\u4ee5\u8fd9\u4e2a\u8fc7\u7a0b\u662f\u6ca1\u6709\u5fc5\u8981\u7684\u3002\n\n\n\n\n\u6d4b\u8bd5\u7b97\u6cd5\uff1a\u7f16\u5199\u51fd\u6570\u4f7f\u7528\u63d0\u4f9b\u7684\u90e8\u5206\u6570\u636e\u96c6\u4f5c\u4e3a\u6d4b\u8bd5\u6837\u672c\uff0c\u5982\u679c\u9884\u6d4b\u5206\u7c7b\u4e0e\u5b9e\u9645\u7c7b\u522b\u4e0d\u540c\uff0c\u5219\u6807\u8bb0\u4e3a\u4e00\u4e2a\u9519\u8bef\n\n\n\n\ndef\n \nhandwritingClassTest\n():\n\n    \n# 1. \u5bfc\u5165\u8bad\u7ec3\u6570\u636e\n\n    \nhwLabels\n \n=\n \n[]\n\n    \ntrainingFileList\n \n=\n \nlistdir\n(\ninput/2.KNN/trainingDigits\n)\n  \n# load the training set\n\n    \nm\n \n=\n \nlen\n(\ntrainingFileList\n)\n\n    \ntrainingMat\n \n=\n \nzeros\n((\nm\n,\n \n1024\n))\n\n    \n# hwLabels\u5b58\u50a80\uff5e9\u5bf9\u5e94\u7684index\u4f4d\u7f6e\uff0c trainingMat\u5b58\u653e\u7684\u6bcf\u4e2a\u4f4d\u7f6e\u5bf9\u5e94\u7684\u56fe\u7247\u5411\u91cf\n\n    \nfor\n \ni\n \nin\n \nrange\n(\nm\n):\n\n        \nfileNameStr\n \n=\n \ntrainingFileList\n[\ni\n]\n\n        \nfileStr\n \n=\n \nfileNameStr\n.\nsplit\n(\n.\n)[\n0\n]\n  \n# take off .txt\n\n        \nclassNumStr\n \n=\n \nint\n(\nfileStr\n.\nsplit\n(\n_\n)[\n0\n])\n\n        \nhwLabels\n.\nappend\n(\nclassNumStr\n)\n\n        \n# \u5c06 32*32\u7684\u77e9\u9635-\n1*1024\u7684\u77e9\u9635\n\n        \ntrainingMat\n[\ni\n,\n \n:]\n \n=\n \nimg2vector\n(\ninput/2.KNN/trainingDigits/\n%s\n \n%\n \nfileNameStr\n)\n\n\n    \n# 2. \u5bfc\u5165\u6d4b\u8bd5\u6570\u636e\n\n    \ntestFileList\n \n=\n \nlistdir\n(\ninput/2.KNN/testDigits\n)\n  \n# iterate through the test set\n\n    \nerrorCount\n \n=\n \n0.0\n\n    \nmTest\n \n=\n \nlen\n(\ntestFileList\n)\n\n    \nfor\n \ni\n \nin\n \nrange\n(\nmTest\n):\n\n        \nfileNameStr\n \n=\n \ntestFileList\n[\ni\n]\n\n        \nfileStr\n \n=\n \nfileNameStr\n.\nsplit\n(\n.\n)[\n0\n]\n  \n# take off .txt\n\n        \nclassNumStr\n \n=\n \nint\n(\nfileStr\n.\nsplit\n(\n_\n)[\n0\n])\n\n        \nvectorUnderTest\n \n=\n \nimg2vector\n(\ninput/2.KNN/testDigits/\n%s\n \n%\n \nfileNameStr\n)\n\n        \nclassifierResult\n \n=\n \nclassify0\n(\nvectorUnderTest\n,\n \ntrainingMat\n,\n \nhwLabels\n,\n \n3\n)\n\n        \nprint\n \nthe classifier came back with: \n%d\n, the real answer is: \n%d\n \n%\n \n(\nclassifierResult\n,\n \nclassNumStr\n)\n\n        \nif\n \n(\nclassifierResult\n \n!=\n \nclassNumStr\n):\n \nerrorCount\n \n+=\n \n1.0\n\n    \nprint\n \n\\n\nthe total number of errors is: \n%d\n \n%\n \nerrorCount\n\n    \nprint\n \n\\n\nthe total error rate is: \n%f\n \n%\n \n(\nerrorCount\n \n/\n \nfloat\n(\nmTest\n))\n\n\n\n\n\n\n\n\u4f7f\u7528\u7b97\u6cd5\uff1a\u672c\u4f8b\u6ca1\u6709\u5b8c\u6210\u6b64\u6b65\u9aa4\uff0c\u82e5\u4f60\u611f\u5174\u8da3\u53ef\u4ee5\u6784\u5efa\u5b8c\u6574\u7684\u5e94\u7528\u7a0b\u5e8f\uff0c\u4ece\u56fe\u50cf\u4e2d\u63d0\u53d6\u6570\u5b57\uff0c\u5e76\u5b8c\u6210\u6570\u5b57\u8bc6\u522b\uff0c\u7f8e\u56fd\u7684\u90ae\u4ef6\u5206\u62e3\u7cfb\u7edf\u5c31\u662f\u4e00\u4e2a\u5b9e\u9645\u8fd0\u884c\u7684\u7c7b\u4f3c\u7cfb\u7edf\n\n\n\n\nKNN \u5c0f\u7ed3\n\n\n\u7ecf\u8fc7\u4e0a\u9762\u7684\u4ecb\u7ecd\u6211\u4eec\u53ef\u4ee5\u77e5\u9053\uff0c k \u8fd1\u90bb\u7b97\u6cd5\u6709 \u4e09\u4e2a\u57fa\u672c\u7684\u8981\u7d20\uff1a\n\n\n\n\n\n\nk \u503c\u7684\u9009\u62e9\n\n\n\n\nk \u503c\u7684\u9009\u62e9\u4f1a\u5bf9 k \u8fd1\u90bb\u7b97\u6cd5\u7684\u7ed3\u679c\u4ea7\u751f\u91cd\u5927\u7684\u5f71\u54cd\u3002\n\n\n\u5982\u679c\u9009\u62e9\u8f83\u5c0f\u7684 k \u503c\uff0c\u5c31\u76f8\u5f53\u4e8e\u7528\u8f83\u5c0f\u7684\u90bb\u57df\u4e2d\u7684\u8bad\u7ec3\u5b9e\u4f8b\u8fdb\u884c\u9884\u6d4b\uff0c\u201c\u5b66\u4e60\u201d\u7684\u8fd1\u4f3c\u8bef\u5dee\uff08approximation error\uff09\u4f1a\u51cf\u5c0f\uff0c\u53ea\u6709\u4e0e\u8f93\u5165\u5b9e\u4f8b\u8f83\u8fd1\u7684\uff08\u76f8\u4f3c\u7684\uff09\u8bad\u7ec3\u5b9e\u4f8b\u624d\u4f1a\u5bf9\u9884\u6d4b\u7ed3\u679c\u8d77\u4f5c\u7528\u3002\u4f46\u7f3a\u70b9\u662f\u201c\u5b66\u4e60\u201d\u7684\u4f30\u8ba1\u8bef\u5dee\uff08estimation error\uff09\u4f1a\u589e\u5927\uff0c\u9884\u6d4b\u7ed3\u679c\u4f1a\u5bf9\u8fd1\u90bb\u7684\u5b9e\u4f8b\u70b9\u975e\u5e38\u654f\u611f\u3002\u5982\u679c\u90bb\u8fd1\u7684\u5b9e\u4f8b\u70b9\u6070\u5de7\u662f\u566a\u58f0\uff0c\u9884\u6d4b\u5c31\u4f1a\u51fa\u9519\u3002\u6362\u53e5\u8bdd\u8bf4\uff0ck \u503c\u7684\u51cf\u5c0f\u5c31\u610f\u5473\u7740\u6574\u4f53\u6a21\u578b\u53d8\u5f97\u590d\u6742\uff0c\u5bb9\u6613\u53d1\u751f\u8fc7\u62df\u5408\u3002\n\n\n\u5982\u679c\u9009\u62e9\u8f83\u5927\u7684 k \u503c\uff0c\u5c31\u76f8\u5f53\u4e8e\u7528\u8f83\u5927\u7684\u90bb\u57df\u4e2d\u7684\u8bad\u7ec3\u5b9e\u4f8b\u8fdb\u884c\u9884\u6d4b\u3002\u5176\u4f18\u70b9\u662f\u53ef\u4ee5\u51cf\u5c11\u5b66\u4e60\u7684\u4f30\u8ba1\u8bef\u5dee\u3002\u4f46\u7f3a\u70b9\u662f\u5b66\u4e60\u7684\u8fd1\u4f3c\u8bef\u5dee\u4f1a\u589e\u5927\u3002\u8fd9\u65f6\u4e0e\u8f93\u5165\u5b9e\u4f8b\u8f83\u8fdc\u7684\uff08\u4e0d\u76f8\u4f3c\u7684\uff09\u8bad\u7ec3\u5b9e\u4f8b\u4e5f\u4f1a\u5bf9\u9884\u6d4b\u8d77\u4f5c\u7528\uff0c\u4f7f\u9884\u6d4b\u53d1\u751f\u9519\u8bef\u3002 k \u503c\u7684\u589e\u5927\u5c31\u610f\u5473\u7740\u6574\u4f53\u7684\u6a21\u578b\u53d8\u5f97\u7b80\u5355\u3002\n\n\n\u8fd1\u4f3c\u8bef\u5dee\u548c\u4f30\u8ba1\u8bef\u5dee\uff0c\u8bf7\u770b\u8fd9\u91cc\uff1a\nhttps://www.zhihu.com/question/60793482\n\n\n\n\n\n\n\n\n\u8ddd\u79bb\u5ea6\u91cf\n\n\n\n\n\u7279\u5f81\u7a7a\u95f4\u4e2d\u4e24\u4e2a\u5b9e\u4f8b\u70b9\u7684\u8ddd\u79bb\u662f\u4e24\u4e2a\u5b9e\u4f8b\u70b9\u76f8\u4f3c\u7a0b\u5ea6\u7684\u53cd\u6620\u3002\n\n\nk \u8fd1\u90bb\u6a21\u578b\u7684\u7279\u5f81\u7a7a\u95f4\u4e00\u822c\u662f n \u7ef4\u5b9e\u6570\u5411\u91cf\u7a7a\u95f4 \n \u3002\u4f7f\u7528\u7684\u8ddd\u79bb\u662f\u6b27\u6c0f\u8ddd\u79bb\uff0c\u4f46\u4e5f\u53ef\u4ee5\u662f\u5176\u4ed6\u8ddd\u79bb\uff0c\u5982\u66f4\u4e00\u822c\u7684 \n \u8ddd\u79bb\uff0c\u6216\u8005 Minkowski \u8ddd\u79bb\u3002\n\n\n\n\n\n\n\n\n\u5206\u7c7b\u51b3\u7b56\u89c4\u5219\n\n\n\n\nk \u8fd1\u90bb\u7b97\u6cd5\u4e2d\u7684\u5206\u7c7b\u51b3\u7b56\u89c4\u5219\u5f80\u5f80\u662f\u591a\u6570\u8868\u51b3\uff0c\u5373\u7531\u8f93\u5165\u5b9e\u4f8b\u7684 k \u4e2a\u90bb\u8fd1\u7684\u8bad\u7ec3\u5b9e\u4f8b\u4e2d\u7684\u591a\u6570\u7c7b\u51b3\u5b9a\u8f93\u5165\u5b9e\u4f8b\u7684\u7c7b\u3002\n\n\n\n\n\n\n\n\n\n\n\n\n\u4f5c\u8005\uff1a\n\u7f8a\u4e09\n \n\u5c0f\u7476\n\n\nGitHub\u5730\u5740\n: \nhttps://github.com/apachecn/MachineLearning\n\n\n\u7248\u6743\u58f0\u660e\uff1a\u6b22\u8fce\u8f6c\u8f7d\u5b66\u4e60 =\n \u8bf7\u6807\u6ce8\u4fe1\u606f\u6765\u6e90\u4e8e \nApacheCN", 
            "title": "2.k-\u8fd1\u90bb\u7b97\u6cd5"
        }, 
        {
            "location": "/\u4e66\u7c4d/\u673a\u5668\u5b66\u4e60\u5b9e\u6218/02.k-\u8fd1\u90bb\u7b97\u6cd5/#2-k-", 
            "text": "", 
            "title": "\u7b2c2\u7ae0 k-\u8fd1\u90bb\u7b97\u6cd5"
        }, 
        {
            "location": "/\u4e66\u7c4d/\u673a\u5668\u5b66\u4e60\u5b9e\u6218/02.k-\u8fd1\u90bb\u7b97\u6cd5/#knn", 
            "text": "k-\u8fd1\u90bb\uff08kNN, k-NearestNeighbor\uff09\u7b97\u6cd5\u662f\u4e00\u79cd\u57fa\u672c\u5206\u7c7b\u4e0e\u56de\u5f52\u65b9\u6cd5\uff0c\u6211\u4eec\u8fd9\u91cc\u53ea\u8ba8\u8bba\u5206\u7c7b\u95ee\u9898\u4e2d\u7684 k-\u8fd1\u90bb\u7b97\u6cd5\u3002  \u4e00\u53e5\u8bdd\u603b\u7ed3\uff1a\u8fd1\u6731\u8005\u8d64\u8fd1\u58a8\u8005\u9ed1\uff01    k \u8fd1\u90bb\u7b97\u6cd5\u7684\u8f93\u5165\u4e3a\u5b9e\u4f8b\u7684\u7279\u5f81\u5411\u91cf\uff0c\u5bf9\u5e94\u4e8e\u7279\u5f81\u7a7a\u95f4\u7684\u70b9\uff1b\u8f93\u51fa\u4e3a\u5b9e\u4f8b\u7684\u7c7b\u522b\uff0c\u53ef\u4ee5\u53d6\u591a\u7c7b\u3002k \u8fd1\u90bb\u7b97\u6cd5\u5047\u8bbe\u7ed9\u5b9a\u4e00\u4e2a\u8bad\u7ec3\u6570\u636e\u96c6\uff0c\u5176\u4e2d\u7684\u5b9e\u4f8b\u7c7b\u522b\u5df2\u5b9a\u3002\u5206\u7c7b\u65f6\uff0c\u5bf9\u65b0\u7684\u5b9e\u4f8b\uff0c\u6839\u636e\u5176 k \u4e2a\u6700\u8fd1\u90bb\u7684\u8bad\u7ec3\u5b9e\u4f8b\u7684\u7c7b\u522b\uff0c\u901a\u8fc7\u591a\u6570\u8868\u51b3\u7b49\u65b9\u5f0f\u8fdb\u884c\u9884\u6d4b\u3002\u56e0\u6b64\uff0ck\u8fd1\u90bb\u7b97\u6cd5\u4e0d\u5177\u6709\u663e\u5f0f\u7684\u5b66\u4e60\u8fc7\u7a0b\u3002  k \u8fd1\u90bb\u7b97\u6cd5\u5b9e\u9645\u4e0a\u5229\u7528\u8bad\u7ec3\u6570\u636e\u96c6\u5bf9\u7279\u5f81\u5411\u91cf\u7a7a\u95f4\u8fdb\u884c\u5212\u5206\uff0c\u5e76\u4f5c\u4e3a\u5176\u5206\u7c7b\u7684\u201c\u6a21\u578b\u201d\u3002 k\u503c\u7684\u9009\u62e9\u3001\u8ddd\u79bb\u5ea6\u91cf\u4ee5\u53ca\u5206\u7c7b\u51b3\u7b56\u89c4\u5219\u662fk\u8fd1\u90bb\u7b97\u6cd5\u7684\u4e09\u4e2a\u57fa\u672c\u8981\u7d20\u3002", 
            "title": "KNN \u6982\u8ff0"
        }, 
        {
            "location": "/\u4e66\u7c4d/\u673a\u5668\u5b66\u4e60\u5b9e\u6218/02.k-\u8fd1\u90bb\u7b97\u6cd5/#knn_1", 
            "text": "\u7535\u5f71\u53ef\u4ee5\u6309\u7167\u9898\u6750\u5206\u7c7b\uff0c\u90a3\u4e48\u5982\u4f55\u533a\u5206  \u52a8\u4f5c\u7247  \u548c  \u7231\u60c5\u7247  \u5462\uff1f \n1. \u52a8\u4f5c\u7247\uff1a\u6253\u6597\u6b21\u6570\u66f4\u591a\n2. \u7231\u60c5\u7247\uff1a\u4eb2\u543b\u6b21\u6570\u66f4\u591a  \u57fa\u4e8e\u7535\u5f71\u4e2d\u7684\u4eb2\u543b\u3001\u6253\u6597\u51fa\u73b0\u7684\u6b21\u6570\uff0c\u4f7f\u7528 k-\u8fd1\u90bb\u7b97\u6cd5\u6784\u9020\u7a0b\u5e8f\uff0c\u5c31\u53ef\u4ee5\u81ea\u52a8\u5212\u5206\u7535\u5f71\u7684\u9898\u6750\u7c7b\u578b\u3002   \u73b0\u5728\u6839\u636e\u4e0a\u9762\u6211\u4eec\u5f97\u5230\u7684\u6837\u672c\u96c6\u4e2d\u6240\u6709\u7535\u5f71\u4e0e\u672a\u77e5\u7535\u5f71\u7684\u8ddd\u79bb\uff0c\u6309\u7167\u8ddd\u79bb\u9012\u589e\u6392\u5e8f\uff0c\u53ef\u4ee5\u627e\u5230 k \u4e2a\u8ddd\u79bb\u6700\u8fd1\u7684\u7535\u5f71\u3002\n\u5047\u5b9a k=3\uff0c\u5219\u4e09\u4e2a\u6700\u9760\u8fd1\u7684\u7535\u5f71\u4f9d\u6b21\u662f\uff0c He s Not Really into Dudes \u3001 Beautiful Woman \u548c California Man\u3002\nknn \u7b97\u6cd5\u6309\u7167\u8ddd\u79bb\u6700\u8fd1\u7684\u4e09\u90e8\u7535\u5f71\u7684\u7c7b\u578b\uff0c\u51b3\u5b9a\u672a\u77e5\u7535\u5f71\u7684\u7c7b\u578b\uff0c\u800c\u8fd9\u4e09\u90e8\u7535\u5f71\u5168\u662f\u7231\u60c5\u7247\uff0c\u56e0\u6b64\u6211\u4eec\u5224\u5b9a\u672a\u77e5\u7535\u5f71\u662f\u7231\u60c5\u7247\u3002", 
            "title": "KNN \u573a\u666f"
        }, 
        {
            "location": "/\u4e66\u7c4d/\u673a\u5668\u5b66\u4e60\u5b9e\u6218/02.k-\u8fd1\u90bb\u7b97\u6cd5/#knn_2", 
            "text": "KNN \u5de5\u4f5c\u539f\u7406    \u5047\u8bbe\u6709\u4e00\u4e2a\u5e26\u6709\u6807\u7b7e\u7684\u6837\u672c\u6570\u636e\u96c6\uff08\u8bad\u7ec3\u6837\u672c\u96c6\uff09\uff0c\u5176\u4e2d\u5305\u542b\u6bcf\u6761\u6570\u636e\u4e0e\u6240\u5c5e\u5206\u7c7b\u7684\u5bf9\u5e94\u5173\u7cfb\u3002  \u8f93\u5165\u6ca1\u6709\u6807\u7b7e\u7684\u65b0\u6570\u636e\u540e\uff0c\u5c06\u65b0\u6570\u636e\u7684\u6bcf\u4e2a\u7279\u5f81\u4e0e\u6837\u672c\u96c6\u4e2d\u6570\u636e\u5bf9\u5e94\u7684\u7279\u5f81\u8fdb\u884c\u6bd4\u8f83\u3002  \u8ba1\u7b97\u65b0\u6570\u636e\u4e0e\u6837\u672c\u6570\u636e\u96c6\u4e2d\u6bcf\u6761\u6570\u636e\u7684\u8ddd\u79bb\u3002  \u5bf9\u6c42\u5f97\u7684\u6240\u6709\u8ddd\u79bb\u8fdb\u884c\u6392\u5e8f\uff08\u4ece\u5c0f\u5230\u5927\uff0c\u8d8a\u5c0f\u8868\u793a\u8d8a\u76f8\u4f3c\uff09\u3002  \u53d6\u524d k \uff08k \u4e00\u822c\u5c0f\u4e8e\u7b49\u4e8e 20 \uff09\u4e2a\u6837\u672c\u6570\u636e\u5bf9\u5e94\u7684\u5206\u7c7b\u6807\u7b7e\u3002    \u6c42 k \u4e2a\u6570\u636e\u4e2d\u51fa\u73b0\u6b21\u6570\u6700\u591a\u7684\u5206\u7c7b\u6807\u7b7e\u4f5c\u4e3a\u65b0\u6570\u636e\u7684\u5206\u7c7b\u3002    KNN \u901a\u4fd7\u7406\u89e3   \u7ed9\u5b9a\u4e00\u4e2a\u8bad\u7ec3\u6570\u636e\u96c6\uff0c\u5bf9\u65b0\u7684\u8f93\u5165\u5b9e\u4f8b\uff0c\u5728\u8bad\u7ec3\u6570\u636e\u96c6\u4e2d\u627e\u5230\u4e0e\u8be5\u5b9e\u4f8b\u6700\u90bb\u8fd1\u7684 k \u4e2a\u5b9e\u4f8b\uff0c\u8fd9 k \u4e2a\u5b9e\u4f8b\u7684\u591a\u6570\u5c5e\u4e8e\u67d0\u4e2a\u7c7b\uff0c\u5c31\u628a\u8be5\u8f93\u5165\u5b9e\u4f8b\u5206\u4e3a\u8fd9\u4e2a\u7c7b\u3002   KNN \u5f00\u53d1\u6d41\u7a0b   \u6536\u96c6\u6570\u636e\uff1a\u4efb\u4f55\u65b9\u6cd5\n\u51c6\u5907\u6570\u636e\uff1a\u8ddd\u79bb\u8ba1\u7b97\u6240\u9700\u8981\u7684\u6570\u503c\uff0c\u6700\u597d\u662f\u7ed3\u6784\u5316\u7684\u6570\u636e\u683c\u5f0f\n\u5206\u6790\u6570\u636e\uff1a\u4efb\u4f55\u65b9\u6cd5\n\u8bad\u7ec3\u7b97\u6cd5\uff1a\u6b64\u6b65\u9aa4\u4e0d\u9002\u7528\u4e8e k-\u8fd1\u90bb\u7b97\u6cd5\n\u6d4b\u8bd5\u7b97\u6cd5\uff1a\u8ba1\u7b97\u9519\u8bef\u7387\n\u4f7f\u7528\u7b97\u6cd5\uff1a\u8f93\u5165\u6837\u672c\u6570\u636e\u548c\u7ed3\u6784\u5316\u7684\u8f93\u51fa\u7ed3\u679c\uff0c\u7136\u540e\u8fd0\u884c k-\u8fd1\u90bb\u7b97\u6cd5\u5224\u65ad\u8f93\u5165\u6570\u636e\u5206\u7c7b\u5c5e\u4e8e\u54ea\u4e2a\u5206\u7c7b\uff0c\u6700\u540e\u5bf9\u8ba1\u7b97\u51fa\u7684\u5206\u7c7b\u6267\u884c\u540e\u7eed\u5904\u7406   KNN \u7b97\u6cd5\u7279\u70b9   \u4f18\u70b9\uff1a\u7cbe\u5ea6\u9ad8\u3001\u5bf9\u5f02\u5e38\u503c\u4e0d\u654f\u611f\u3001\u65e0\u6570\u636e\u8f93\u5165\u5047\u5b9a\n\u7f3a\u70b9\uff1a\u8ba1\u7b97\u590d\u6742\u5ea6\u9ad8\u3001\u7a7a\u95f4\u590d\u6742\u5ea6\u9ad8\n\u9002\u7528\u6570\u636e\u8303\u56f4\uff1a\u6570\u503c\u578b\u548c\u6807\u79f0\u578b", 
            "title": "KNN \u539f\u7406"
        }, 
        {
            "location": "/\u4e66\u7c4d/\u673a\u5668\u5b66\u4e60\u5b9e\u6218/02.k-\u8fd1\u90bb\u7b97\u6cd5/#knn_3", 
            "text": "", 
            "title": "KNN \u9879\u76ee\u6848\u4f8b"
        }, 
        {
            "location": "/\u4e66\u7c4d/\u673a\u5668\u5b66\u4e60\u5b9e\u6218/02.k-\u8fd1\u90bb\u7b97\u6cd5/#1", 
            "text": "\u5b8c\u6574\u4ee3\u7801\u5730\u5740 :  https://github.com/apachecn/MachineLearning/blob/master/src/python/2.KNN/kNN.py", 
            "title": "\u9879\u76ee\u6848\u4f8b1: \u4f18\u5316\u7ea6\u4f1a\u7f51\u7ad9\u7684\u914d\u5bf9\u6548\u679c"
        }, 
        {
            "location": "/\u4e66\u7c4d/\u673a\u5668\u5b66\u4e60\u5b9e\u6218/02.k-\u8fd1\u90bb\u7b97\u6cd5/#_1", 
            "text": "\u6d77\u4f26\u4f7f\u7528\u7ea6\u4f1a\u7f51\u7ad9\u5bfb\u627e\u7ea6\u4f1a\u5bf9\u8c61\u3002\u7ecf\u8fc7\u4e00\u6bb5\u65f6\u95f4\u4e4b\u540e\uff0c\u5979\u53d1\u73b0\u66fe\u4ea4\u5f80\u8fc7\u4e09\u79cd\u7c7b\u578b\u7684\u4eba:\n* \u4e0d\u559c\u6b22\u7684\u4eba\n* \u9b45\u529b\u4e00\u822c\u7684\u4eba\n* \u6781\u5177\u9b45\u529b\u7684\u4eba  \u5979\u5e0c\u671b\uff1a\n1. \u5de5\u4f5c\u65e5\u4e0e\u9b45\u529b\u4e00\u822c\u7684\u4eba\u7ea6\u4f1a\n2. \u5468\u672b\u4e0e\u6781\u5177\u9b45\u529b\u7684\u4eba\u7ea6\u4f1a\n3. \u4e0d\u559c\u6b22\u7684\u4eba\u5219\u76f4\u63a5\u6392\u9664\u6389  \u73b0\u5728\u5979\u6536\u96c6\u5230\u4e86\u4e00\u4e9b\u7ea6\u4f1a\u7f51\u7ad9\u672a\u66fe\u8bb0\u5f55\u7684\u6570\u636e\u4fe1\u606f\uff0c\u8fd9\u66f4\u6709\u52a9\u4e8e\u5339\u914d\u5bf9\u8c61\u7684\u5f52\u7c7b\u3002", 
            "title": "\u9879\u76ee\u6982\u8ff0"
        }, 
        {
            "location": "/\u4e66\u7c4d/\u673a\u5668\u5b66\u4e60\u5b9e\u6218/02.k-\u8fd1\u90bb\u7b97\u6cd5/#_2", 
            "text": "\u6536\u96c6\u6570\u636e\uff1a\u63d0\u4f9b\u6587\u672c\u6587\u4ef6\n\u51c6\u5907\u6570\u636e\uff1a\u4f7f\u7528 Python \u89e3\u6790\u6587\u672c\u6587\u4ef6\n\u5206\u6790\u6570\u636e\uff1a\u4f7f\u7528 Matplotlib \u753b\u4e8c\u7ef4\u6563\u70b9\u56fe\n\u8bad\u7ec3\u7b97\u6cd5\uff1a\u6b64\u6b65\u9aa4\u4e0d\u9002\u7528\u4e8e k-\u8fd1\u90bb\u7b97\u6cd5\n\u6d4b\u8bd5\u7b97\u6cd5\uff1a\u4f7f\u7528\u6d77\u4f26\u63d0\u4f9b\u7684\u90e8\u5206\u6570\u636e\u4f5c\u4e3a\u6d4b\u8bd5\u6837\u672c\u3002\n        \u6d4b\u8bd5\u6837\u672c\u548c\u975e\u6d4b\u8bd5\u6837\u672c\u7684\u533a\u522b\u5728\u4e8e\uff1a\n            \u6d4b\u8bd5\u6837\u672c\u662f\u5df2\u7ecf\u5b8c\u6210\u5206\u7c7b\u7684\u6570\u636e\uff0c\u5982\u679c\u9884\u6d4b\u5206\u7c7b\u4e0e\u5b9e\u9645\u7c7b\u522b\u4e0d\u540c\uff0c\u5219\u6807\u8bb0\u4e3a\u4e00\u4e2a\u9519\u8bef\u3002\n\u4f7f\u7528\u7b97\u6cd5\uff1a\u4ea7\u751f\u7b80\u5355\u7684\u547d\u4ee4\u884c\u7a0b\u5e8f\uff0c\u7136\u540e\u6d77\u4f26\u53ef\u4ee5\u8f93\u5165\u4e00\u4e9b\u7279\u5f81\u6570\u636e\u4ee5\u5224\u65ad\u5bf9\u65b9\u662f\u5426\u4e3a\u81ea\u5df1\u559c\u6b22\u7684\u7c7b\u578b\u3002   \u6536\u96c6\u6570\u636e\uff1a\u63d0\u4f9b\u6587\u672c\u6587\u4ef6   \u6d77\u4f26\u628a\u8fd9\u4e9b\u7ea6\u4f1a\u5bf9\u8c61\u7684\u6570\u636e\u5b58\u653e\u5728\u6587\u672c\u6587\u4ef6  datingTestSet2.txt  \u4e2d\uff0c\u603b\u5171\u6709 1000 \u884c\u3002\u6d77\u4f26\u7ea6\u4f1a\u7684\u5bf9\u8c61\u4e3b\u8981\u5305\u542b\u4ee5\u4e0b 3 \u79cd\u7279\u5f81\uff1a   \u6bcf\u5e74\u83b7\u5f97\u7684\u98de\u884c\u5e38\u5ba2\u91cc\u7a0b\u6570  \u73a9\u89c6\u9891\u6e38\u620f\u6240\u8017\u65f6\u95f4\u767e\u5206\u6bd4  \u6bcf\u5468\u6d88\u8d39\u7684\u51b0\u6dc7\u6dcb\u516c\u5347\u6570   \u6587\u672c\u6587\u4ef6\u6570\u636e\u683c\u5f0f\u5982\u4e0b\uff1a 40920   8.326976    0.953952    3\n14488   7.153469    1.673904    2\n26052   1.441871    0.805124    1\n75136   13.147394   0.428964    1\n38344   1.669788    0.134296    1   \u51c6\u5907\u6570\u636e\uff1a\u4f7f\u7528 Python \u89e3\u6790\u6587\u672c\u6587\u4ef6   \u5c06\u6587\u672c\u8bb0\u5f55\u8f6c\u6362\u4e3a NumPy \u7684\u89e3\u6790\u7a0b\u5e8f  ```python\ndef file2matrix(filename):\n    \"\"\"\n    Desc:\n        \u5bfc\u5165\u8bad\u7ec3\u6570\u636e\n    parameters:\n        filename: \u6570\u636e\u6587\u4ef6\u8def\u5f84\n    return: \n        \u6570\u636e\u77e9\u9635 returnMat \u548c\u5bf9\u5e94\u7684\u7c7b\u522b classLabelVector\n    \"\"\"\n    fr = open(filename)\n    # \u83b7\u5f97\u6587\u4ef6\u4e2d\u7684\u6570\u636e\u884c\u7684\u884c\u6570\n    numberOfLines = len(fr.readlines())\n    # \u751f\u6210\u5bf9\u5e94\u7684\u7a7a\u77e9\u9635\n    # \u4f8b\u5982\uff1azeros(2\uff0c3)\u5c31\u662f\u751f\u6210\u4e00\u4e2a 2*3\u7684\u77e9\u9635\uff0c\u5404\u4e2a\u4f4d\u7f6e\u4e0a\u5168\u662f 0 \n    returnMat = zeros((numberOfLines, 3))  # prepare matrix to return\n    classLabelVector = []  # prepare labels return\n    fr = open(filename)\n    index = 0\n    for line in fr.readlines():\n        # str.strip([chars]) --\u8fd4\u56de\u79fb\u9664\u5b57\u7b26\u4e32\u5934\u5c3e\u6307\u5b9a\u7684\u5b57\u7b26\u751f\u6210\u7684\u65b0\u5b57\u7b26\u4e32\n        line = line.strip()\n        # \u4ee5 '\\t' \u5207\u5272\u5b57\u7b26\u4e32\n        listFromLine = line.split('\\t')\n        # \u6bcf\u5217\u7684\u5c5e\u6027\u6570\u636e\n        returnMat[index, :] = listFromLine[0:3]\n        # \u6bcf\u5217\u7684\u7c7b\u522b\u6570\u636e\uff0c\u5c31\u662f label \u6807\u7b7e\u6570\u636e\n        classLabelVector.append(int(listFromLine[-1]))\n        index += 1\n    # \u8fd4\u56de\u6570\u636e\u77e9\u9635returnMat\u548c\u5bf9\u5e94\u7684\u7c7b\u522bclassLabelVector\n    return returnMat, classLabelVector  \u5206\u6790\u6570\u636e\uff1a\u4f7f\u7528 Matplotlib \u753b\u4e8c\u7ef4\u6563\u70b9\u56fe\n\n```python\nimport matplotlib\nimport matplotlib.pyplot as plt\nfig = plt.figure()\nax = fig.add_subplot(111)\nax.scatter(datingDataMat[:, 0], datingDataMat[:, 1], 15.0*array(datingLabels), 15.0*array(datingLabels))\nplt.show()  \u4e0b\u56fe\u4e2d\u91c7\u7528\u77e9\u9635\u7684\u7b2c\u4e00\u548c\u7b2c\u4e8c\u5217\u5c5e\u6027\u5f97\u5230\u5f88\u597d\u7684\u5c55\u793a\u6548\u679c\uff0c\u6e05\u6670\u5730\u6807\u8bc6\u4e86\u4e09\u4e2a\u4e0d\u540c\u7684\u6837\u672c\u5206\u7c7b\u533a\u57df\uff0c\u5177\u6709\u4e0d\u540c\u7231\u597d\u7684\u4eba\u5176\u7c7b\u522b\u533a\u57df\u4e5f\u4e0d\u540c\u3002    \u5f52\u4e00\u5316\u6570\u636e \uff08\u5f52\u4e00\u5316\u662f\u4e00\u4e2a\u8ba9\u6743\u91cd\u53d8\u4e3a\u7edf\u4e00\u7684\u8fc7\u7a0b\uff0c\u66f4\u591a\u7ec6\u8282\u8bf7\u53c2\u8003\uff1a  https://www.zhihu.com/question/19951858  \uff09      \u5e8f\u53f7  \u73a9\u89c6\u9891\u6e38\u620f\u6240\u8017\u65f6\u95f4\u767e\u5206\u6bd4  \u6bcf\u5e74\u83b7\u5f97\u7684\u98de\u884c\u5e38\u5ba2\u91cc\u7a0b\u6570  \u6bcf\u5468\u6d88\u8d39\u7684\u51b0\u6dc7\u6dcb\u516c\u5347\u6570  \u6837\u672c\u5206\u7c7b      1  0.8  400  0.5  1    2  12  134 000  0.9  3    3  0  20 000  1.1  2    4  67  32 000  0.1  2     \u6837\u672c3\u548c\u6837\u672c4\u7684\u8ddd\u79bb\uff1a \\sqrt{(0-67)^2 + (20000-32000)^2 + (1.1-0.1)^2 } \\sqrt{(0-67)^2 + (20000-32000)^2 + (1.1-0.1)^2 } <span><span class=\"MathJax_Preview\">\\sqrt{(0-67)^2 + (20000-32000)^2 + (1.1-0.1)^2 }</span><script type=\"math/tex\">\\sqrt{(0-67)^2 + (20000-32000)^2 + (1.1-0.1)^2 }  \u5f52\u4e00\u5316\u7279\u5f81\u503c\uff0c\u6d88\u9664\u7279\u5f81\u4e4b\u95f4\u91cf\u7ea7\u4e0d\u540c\u5bfc\u81f4\u7684\u5f71\u54cd  \u5f52\u4e00\u5316\u5b9a\u4e49\uff1a  \u6211\u662f\u8fd9\u6837\u8ba4\u4e3a\u7684\uff0c\u5f52\u4e00\u5316\u5c31\u662f\u8981\u628a\u4f60\u9700\u8981\u5904\u7406\u7684\u6570\u636e\u7ecf\u8fc7\u5904\u7406\u540e\uff08\u901a\u8fc7\u67d0\u79cd\u7b97\u6cd5\uff09\u9650\u5236\u5728\u4f60\u9700\u8981\u7684\u4e00\u5b9a\u8303\u56f4\u5185\u3002\u9996\u5148\u5f52\u4e00\u5316\u662f\u4e3a\u4e86\u540e\u9762\u6570\u636e\u5904\u7406\u7684\u65b9\u4fbf\uff0c\u5176\u6b21\u662f\u4fdd\u6b63\u7a0b\u5e8f\u8fd0\u884c\u65f6\u6536\u655b\u52a0\u5feb\u3002 \u65b9\u6cd5\u6709\u5982\u4e0b\uff1a  1) \u7ebf\u6027\u51fd\u6570\u8f6c\u6362\uff0c\u8868\u8fbe\u5f0f\u5982\u4e0b\uff1a\u3000\u3000  y=(x-MinValue)/(MaxValue-MinValue)\n\n\u8bf4\u660e\uff1ax\u3001y\u5206\u522b\u4e3a\u8f6c\u6362\u524d\u3001\u540e\u7684\u503c\uff0cMaxValue\u3001MinValue\u5206\u522b\u4e3a\u6837\u672c\u7684\u6700\u5927\u503c\u548c\u6700\u5c0f\u503c\u3002  2) \u5bf9\u6570\u51fd\u6570\u8f6c\u6362\uff0c\u8868\u8fbe\u5f0f\u5982\u4e0b\uff1a\u3000\u3000  y=log10(x)\n\n\u8bf4\u660e\uff1a\u4ee510\u4e3a\u5e95\u7684\u5bf9\u6570\u51fd\u6570\u8f6c\u6362\u3002\n\n\u5982\u56fe\uff1a\n\n![\u5bf9\u6570\u51fd\u6570\u56fe\u50cf](resources/2.KNN/knn_1.png)  3) \u53cd\u4f59\u5207\u51fd\u6570\u8f6c\u6362\uff0c\u8868\u8fbe\u5f0f\u5982\u4e0b\uff1a  y=arctan(x)*2/PI\n\n\u5982\u56fe\uff1a\n\n![\u53cd\u4f59\u5207\u51fd\u6570\u56fe\u50cf](resources/2.KNN/arctan_arccot.gif)  4) \u5f0f(1)\u5c06\u8f93\u5165\u503c\u6362\u7b97\u4e3a[-1,1]\u533a\u95f4\u7684\u503c\uff0c\u5728\u8f93\u51fa\u5c42\u7528\u5f0f(2)\u6362\u7b97\u56de\u521d\u59cb\u503c\uff0c\u5176\u4e2d\u548c\u5206\u522b\u8868\u793a\u8bad\u7ec3\u6837\u672c\u96c6\u4e2d\u8d1f\u8377\u7684\u6700\u5927\u503c\u548c\u6700\u5c0f\u503c\u3002\u3000  \u5728\u7edf\u8ba1\u5b66\u4e2d\uff0c\u5f52\u4e00\u5316\u7684\u5177\u4f53\u4f5c\u7528\u662f\u5f52\u7eb3\u7edf\u4e00\u6837\u672c\u7684\u7edf\u8ba1\u5206\u5e03\u6027\u3002\u5f52\u4e00\u5316\u57280-1\u4e4b\u95f4\u662f\u7edf\u8ba1\u7684\u6982\u7387\u5206\u5e03\uff0c\u5f52\u4e00\u5316\u5728-1--+1\u4e4b\u95f4\u662f\u7edf\u8ba1\u7684\u5750\u6807\u5206\u5e03\u3002  def   autoNorm ( dataSet ): \n          Desc:          \u5f52\u4e00\u5316\u7279\u5f81\u503c\uff0c\u6d88\u9664\u7279\u5f81\u4e4b\u95f4\u91cf\u7ea7\u4e0d\u540c\u5bfc\u81f4\u7684\u5f71\u54cd      parameter:          dataSet: \u6570\u636e\u96c6      return:          \u5f52\u4e00\u5316\u540e\u7684\u6570\u636e\u96c6 normDataSet. ranges\u548cminVals\u5373\u6700\u5c0f\u503c\u4e0e\u8303\u56f4\uff0c\u5e76\u6ca1\u6709\u7528\u5230      \u5f52\u4e00\u5316\u516c\u5f0f\uff1a          Y = (X-Xmin)/(Xmax-Xmin)          \u5176\u4e2d\u7684 min \u548c max \u5206\u522b\u662f\u6570\u636e\u96c6\u4e2d\u7684\u6700\u5c0f\u7279\u5f81\u503c\u548c\u6700\u5927\u7279\u5f81\u503c\u3002\u8be5\u51fd\u6570\u53ef\u4ee5\u81ea\u52a8\u5c06\u6570\u5b57\u7279\u5f81\u503c\u8f6c\u5316\u4e3a0\u52301\u7684\u533a\u95f4\u3002       \n     # \u8ba1\u7b97\u6bcf\u79cd\u5c5e\u6027\u7684\u6700\u5927\u503c\u3001\u6700\u5c0f\u503c\u3001\u8303\u56f4 \n     minVals   =   dataSet . min ( 0 ) \n     maxVals   =   dataSet . max ( 0 ) \n     # \u6781\u5dee \n     ranges   =   maxVals   -   minVals \n     normDataSet   =   zeros ( shape ( dataSet )) \n     m   =   dataSet . shape [ 0 ] \n     # \u751f\u6210\u4e0e\u6700\u5c0f\u503c\u4e4b\u5dee\u7ec4\u6210\u7684\u77e9\u9635 \n     normDataSet   =   dataSet   -   tile ( minVals ,   ( m ,   1 )) \n     # \u5c06\u6700\u5c0f\u503c\u4e4b\u5dee\u9664\u4ee5\u8303\u56f4\u7ec4\u6210\u77e9\u9635 \n     normDataSet   =   normDataSet   /   tile ( ranges ,   ( m ,   1 ))    # element wise divide \n     return   normDataSet ,   ranges ,   minVals    \u8bad\u7ec3\u7b97\u6cd5\uff1a\u6b64\u6b65\u9aa4\u4e0d\u9002\u7528\u4e8e k-\u8fd1\u90bb\u7b97\u6cd5   \u56e0\u4e3a\u6d4b\u8bd5\u6570\u636e\u6bcf\u4e00\u6b21\u90fd\u8981\u4e0e\u5168\u91cf\u7684\u8bad\u7ec3\u6570\u636e\u8fdb\u884c\u6bd4\u8f83\uff0c\u6240\u4ee5\u8fd9\u4e2a\u8fc7\u7a0b\u662f\u6ca1\u6709\u5fc5\u8981\u7684\u3002  kNN \u7b97\u6cd5\u4f2a\u4ee3\u7801\uff1a  \u5bf9\u4e8e\u6bcf\u4e00\u4e2a\u5728\u6570\u636e\u96c6\u4e2d\u7684\u6570\u636e\u70b9\uff1a\n    \u8ba1\u7b97\u76ee\u6807\u7684\u6570\u636e\u70b9\uff08\u9700\u8981\u5206\u7c7b\u7684\u6570\u636e\u70b9\uff09\u4e0e\u8be5\u6570\u636e\u70b9\u7684\u8ddd\u79bb\n    \u5c06\u8ddd\u79bb\u6392\u5e8f\uff1a\u4ece\u5c0f\u5230\u5927\n    \u9009\u53d6\u524dK\u4e2a\u6700\u77ed\u8ddd\u79bb\n    \u9009\u53d6\u8fd9K\u4e2a\u4e2d\u6700\u591a\u7684\u5206\u7c7b\u7c7b\u522b\n    \u8fd4\u56de\u8be5\u7c7b\u522b\u6765\u4f5c\u4e3a\u76ee\u6807\u6570\u636e\u70b9\u7684\u9884\u6d4b\u503c  python\ndef classify0(inX, dataSet, labels, k):\n    dataSetSize = dataSet.shape[0]\n \u00a0 \u00a0#\u8ddd\u79bb\u5ea6\u91cf \u5ea6\u91cf\u516c\u5f0f\u4e3a\u6b27\u6c0f\u8ddd\u79bb\n \u00a0 \u00a0diffMat = tile(inX, (dataSetSize,1)) \u2013 dataSet\n    sqDiffMat = diffMat**2\n    sqDistances = sqDiffMat.sum(axis=1)\n    distances = sqDistances**0.5\n \u00a0 \u00a0\n    #\u5c06\u8ddd\u79bb\u6392\u5e8f\uff1a\u4ece\u5c0f\u5230\u5927\n    sortedDistIndicies = distances.argsort()\n    #\u9009\u53d6\u524dK\u4e2a\u6700\u77ed\u8ddd\u79bb\uff0c \u9009\u53d6\u8fd9K\u4e2a\u4e2d\u6700\u591a\u7684\u5206\u7c7b\u7c7b\u522b\n    classCount={}\n \u00a0 \u00a0for i in range(k)\uff1a\n \u00a0 \u00a0 \u00a0 \u00a0voteIlabel = labels[sortedDistIndicies[i]]\n        classCount[voteIlabel] = classCount.get(voteIlabel,0) + 1 \n    sortedClassCount = sorted(classCount.iteritems(), key=operator.itemgetter(1), reverse=True)\n    return sortedClassCount[0][0]   \u6d4b\u8bd5\u7b97\u6cd5\uff1a\u4f7f\u7528\u6d77\u4f26\u63d0\u4f9b\u7684\u90e8\u5206\u6570\u636e\u4f5c\u4e3a\u6d4b\u8bd5\u6837\u672c\u3002\u5982\u679c\u9884\u6d4b\u5206\u7c7b\u4e0e\u5b9e\u9645\u7c7b\u522b\u4e0d\u540c\uff0c\u5219\u6807\u8bb0\u4e3a\u4e00\u4e2a\u9519\u8bef\u3002   kNN \u5206\u7c7b\u5668\u9488\u5bf9\u7ea6\u4f1a\u7f51\u7ad9\u7684\u6d4b\u8bd5\u4ee3\u7801  def   datingClassTest (): \n          Desc:          \u5bf9\u7ea6\u4f1a\u7f51\u7ad9\u7684\u6d4b\u8bd5\u65b9\u6cd5      parameters:          none      return:          \u9519\u8bef\u6570       \n     # \u8bbe\u7f6e\u6d4b\u8bd5\u6570\u636e\u7684\u7684\u4e00\u4e2a\u6bd4\u4f8b\uff08\u8bad\u7ec3\u6570\u636e\u96c6\u6bd4\u4f8b=1-hoRatio\uff09 \n     hoRatio   =   0.1    # \u6d4b\u8bd5\u8303\u56f4,\u4e00\u90e8\u5206\u6d4b\u8bd5\u4e00\u90e8\u5206\u4f5c\u4e3a\u6837\u672c \n     # \u4ece\u6587\u4ef6\u4e2d\u52a0\u8f7d\u6570\u636e \n     datingDataMat ,   datingLabels   =   file2matrix ( input/2.KNN/datingTestSet2.txt )    # load data setfrom file \n     # \u5f52\u4e00\u5316\u6570\u636e \n     normMat ,   ranges ,   minVals   =   autoNorm ( datingDataMat ) \n     # m \u8868\u793a\u6570\u636e\u7684\u884c\u6570\uff0c\u5373\u77e9\u9635\u7684\u7b2c\u4e00\u7ef4 \n     m   =   normMat . shape [ 0 ] \n     # \u8bbe\u7f6e\u6d4b\u8bd5\u7684\u6837\u672c\u6570\u91cf\uff0c numTestVecs:m\u8868\u793a\u8bad\u7ec3\u6837\u672c\u7684\u6570\u91cf \n     numTestVecs   =   int ( m   *   hoRatio ) \n     print   numTestVecs= ,   numTestVecs \n     errorCount   =   0.0 \n     for   i   in   range ( numTestVecs ): \n         # \u5bf9\u6570\u636e\u6d4b\u8bd5 \n         classifierResult   =   classify0 ( normMat [ i ,   :],   normMat [ numTestVecs : m ,   :],   datingLabels [ numTestVecs : m ],   3 ) \n         print   the classifier came back with:  %d , the real answer is:  %d   %   ( classifierResult ,   datingLabels [ i ]) \n         if   ( classifierResult   !=   datingLabels [ i ]):   errorCount   +=   1.0 \n     print   the total error rate is:  %f   %   ( errorCount   /   float ( numTestVecs )) \n     print   errorCount    \u4f7f\u7528\u7b97\u6cd5\uff1a\u4ea7\u751f\u7b80\u5355\u7684\u547d\u4ee4\u884c\u7a0b\u5e8f\uff0c\u7136\u540e\u6d77\u4f26\u53ef\u4ee5\u8f93\u5165\u4e00\u4e9b\u7279\u5f81\u6570\u636e\u4ee5\u5224\u65ad\u5bf9\u65b9\u662f\u5426\u4e3a\u81ea\u5df1\u559c\u6b22\u7684\u7c7b\u578b\u3002   \u7ea6\u4f1a\u7f51\u7ad9\u9884\u6d4b\u51fd\u6570  def   classifyPerson (): \n     resultList   =   [ not at all ,   in small doses ,   in large doses ] \n     percentTats   =   float ( raw_input ( percentage of time spent playing video games ? )) \n     ffMiles   =   float ( raw_input ( frequent filer miles earned per year? )) \n     iceCream   =   float ( raw_input ( liters of ice cream consumed per year? )) \n     datingDataMat ,   datingLabels   =   file2matrix ( datingTestSet2.txt ) \n     normMat ,   ranges ,   minVals   =   autoNorm ( datingDataMat ) \n     inArr   =   array ([ ffMiles ,   percentTats ,   iceCream ]) \n     classifierResult   =   classify0 (( inArr - minVals ) / ranges , normMat , datingLabels ,   3 ) \n     print   You will probably like this person:  ,   resultList [ classifierResult   -   1 ]   \u5b9e\u9645\u8fd0\u884c\u6548\u679c\u5982\u4e0b:     classifyPerson ()  percentage   of   time   spent   playing   video   games ? 10  frequent   flier   miles   earned   per   year ? 10000  liters   of   ice   cream   consumed   per   year ? 0.5  You   will   probably   like   this   person :   in   small   doses", 
            "title": "\u5f00\u53d1\u6d41\u7a0b"
        }, 
        {
            "location": "/\u4e66\u7c4d/\u673a\u5668\u5b66\u4e60\u5b9e\u6218/02.k-\u8fd1\u90bb\u7b97\u6cd5/#2", 
            "text": "\u5b8c\u6574\u4ee3\u7801\u5730\u5740 :  https://github.com/apachecn/MachineLearning/blob/master/src/python/2.KNN/kNN.py", 
            "title": "\u9879\u76ee\u6848\u4f8b2: \u624b\u5199\u6570\u5b57\u8bc6\u522b\u7cfb\u7edf"
        }, 
        {
            "location": "/\u4e66\u7c4d/\u673a\u5668\u5b66\u4e60\u5b9e\u6218/02.k-\u8fd1\u90bb\u7b97\u6cd5/#_3", 
            "text": "\u6784\u9020\u4e00\u4e2a\u80fd\u8bc6\u522b\u6570\u5b57 0 \u5230 9 \u7684\u57fa\u4e8e KNN \u5206\u7c7b\u5668\u7684\u624b\u5199\u6570\u5b57\u8bc6\u522b\u7cfb\u7edf\u3002  \u9700\u8981\u8bc6\u522b\u7684\u6570\u5b57\u662f\u5b58\u50a8\u5728\u6587\u672c\u6587\u4ef6\u4e2d\u7684\u5177\u6709\u76f8\u540c\u7684\u8272\u5f69\u548c\u5927\u5c0f\uff1a\u5bbd\u9ad8\u662f 32 \u50cf\u7d20 * 32 \u50cf\u7d20\u7684\u9ed1\u767d\u56fe\u50cf\u3002", 
            "title": "\u9879\u76ee\u6982\u8ff0"
        }, 
        {
            "location": "/\u4e66\u7c4d/\u673a\u5668\u5b66\u4e60\u5b9e\u6218/02.k-\u8fd1\u90bb\u7b97\u6cd5/#_4", 
            "text": "\u6536\u96c6\u6570\u636e\uff1a\u63d0\u4f9b\u6587\u672c\u6587\u4ef6\u3002\n\u51c6\u5907\u6570\u636e\uff1a\u7f16\u5199\u51fd\u6570 img2vector(), \u5c06\u56fe\u50cf\u683c\u5f0f\u8f6c\u6362\u4e3a\u5206\u7c7b\u5668\u4f7f\u7528\u7684\u5411\u91cf\u683c\u5f0f\n\u5206\u6790\u6570\u636e\uff1a\u5728 Python \u547d\u4ee4\u63d0\u793a\u7b26\u4e2d\u68c0\u67e5\u6570\u636e\uff0c\u786e\u4fdd\u5b83\u7b26\u5408\u8981\u6c42\n\u8bad\u7ec3\u7b97\u6cd5\uff1a\u6b64\u6b65\u9aa4\u4e0d\u9002\u7528\u4e8e KNN\n\u6d4b\u8bd5\u7b97\u6cd5\uff1a\u7f16\u5199\u51fd\u6570\u4f7f\u7528\u63d0\u4f9b\u7684\u90e8\u5206\u6570\u636e\u96c6\u4f5c\u4e3a\u6d4b\u8bd5\u6837\u672c\uff0c\u6d4b\u8bd5\u6837\u672c\u4e0e\u975e\u6d4b\u8bd5\u6837\u672c\u7684\n         \u533a\u522b\u5728\u4e8e\u6d4b\u8bd5\u6837\u672c\u662f\u5df2\u7ecf\u5b8c\u6210\u5206\u7c7b\u7684\u6570\u636e\uff0c\u5982\u679c\u9884\u6d4b\u5206\u7c7b\u4e0e\u5b9e\u9645\u7c7b\u522b\u4e0d\u540c\uff0c\n         \u5219\u6807\u8bb0\u4e3a\u4e00\u4e2a\u9519\u8bef\n\u4f7f\u7528\u7b97\u6cd5\uff1a\u672c\u4f8b\u6ca1\u6709\u5b8c\u6210\u6b64\u6b65\u9aa4\uff0c\u82e5\u4f60\u611f\u5174\u8da3\u53ef\u4ee5\u6784\u5efa\u5b8c\u6574\u7684\u5e94\u7528\u7a0b\u5e8f\uff0c\u4ece\u56fe\u50cf\u4e2d\u63d0\u53d6\n         \u6570\u5b57\uff0c\u5e76\u5b8c\u6210\u6570\u5b57\u8bc6\u522b\uff0c\u7f8e\u56fd\u7684\u90ae\u4ef6\u5206\u62e3\u7cfb\u7edf\u5c31\u662f\u4e00\u4e2a\u5b9e\u9645\u8fd0\u884c\u7684\u7c7b\u4f3c\u7cfb\u7edf   \u6536\u96c6\u6570\u636e: \u63d0\u4f9b\u6587\u672c\u6587\u4ef6   \u76ee\u5f55  trainingDigits  \u4e2d\u5305\u542b\u4e86\u5927\u7ea6 2000 \u4e2a\u4f8b\u5b50\uff0c\u6bcf\u4e2a\u4f8b\u5b50\u5185\u5bb9\u5982\u4e0b\u56fe\u6240\u793a\uff0c\u6bcf\u4e2a\u6570\u5b57\u5927\u7ea6\u6709 200 \u4e2a\u6837\u672c\uff1b\u76ee\u5f55  testDigits  \u4e2d\u5305\u542b\u4e86\u5927\u7ea6 900 \u4e2a\u6d4b\u8bd5\u6570\u636e\u3002    \u51c6\u5907\u6570\u636e: \u7f16\u5199\u51fd\u6570 img2vector(), \u5c06\u56fe\u50cf\u6587\u672c\u6570\u636e\u8f6c\u6362\u4e3a\u5206\u7c7b\u5668\u4f7f\u7528\u7684\u5411\u91cf   \u5c06\u56fe\u50cf\u6587\u672c\u6570\u636e\u8f6c\u6362\u4e3a\u5411\u91cf  def   img2vector ( filename ): \n     returnVect   =   zeros (( 1 , 1024 )) \n     fr   =   open ( filename ) \n     for   i   in   range ( 32 ): \n         lineStr   =   fr . readline () \n         for   j   in   range ( 32 ): \n             returnVect [ 0 , 32 * i + j ]   =   int ( lineStr [ j ]) \n     return   returnVect    \u5206\u6790\u6570\u636e\uff1a\u5728 Python \u547d\u4ee4\u63d0\u793a\u7b26\u4e2d\u68c0\u67e5\u6570\u636e\uff0c\u786e\u4fdd\u5b83\u7b26\u5408\u8981\u6c42   \u5728 Python \u547d\u4ee4\u884c\u4e2d\u8f93\u5165\u4e0b\u5217\u547d\u4ee4\u6d4b\u8bd5 img2vector \u51fd\u6570\uff0c\u7136\u540e\u4e0e\u6587\u672c\u7f16\u8f91\u5668\u6253\u5f00\u7684\u6587\u4ef6\u8fdb\u884c\u6bd4\u8f83:     testVector   =   kNN . img2vector ( testDigits/0_13.txt )    testVector [ 0 , 0 : 32 ]  array ([ 0. ,   0. ,   0. ,   0. ,   0. ,   0. ,   0. ,   0. ,   0. ,   0. ,   0. ,   0. ,   0. ,   0. ,   1. ,   1. ,   1. ,   1. ,   0. ,   0. ,   0. ,   0. ,   0. ,   0. ,   0. ,   0. ,   0. ,   0. ,   0. ,   0. ,   0. ])    testVector [ 0 , 32 : 64 ]  array ([ 0. ,   0. ,   0. ,   0. ,   0. ,   0. ,   0. ,   0. ,   0. ,   0. ,   0. ,   0. ,   1. ,   1. ,   1. ,   1. ,   1. ,   1. ,   1. ,   0. ,   0. ,   0. ,   0. ,   0. ,   0. ,   0. ,   0. ,   0. ,   0. ,   0. ,   0. ])    \u8bad\u7ec3\u7b97\u6cd5\uff1a\u6b64\u6b65\u9aa4\u4e0d\u9002\u7528\u4e8e KNN   \u56e0\u4e3a\u6d4b\u8bd5\u6570\u636e\u6bcf\u4e00\u6b21\u90fd\u8981\u4e0e\u5168\u91cf\u7684\u8bad\u7ec3\u6570\u636e\u8fdb\u884c\u6bd4\u8f83\uff0c\u6240\u4ee5\u8fd9\u4e2a\u8fc7\u7a0b\u662f\u6ca1\u6709\u5fc5\u8981\u7684\u3002   \u6d4b\u8bd5\u7b97\u6cd5\uff1a\u7f16\u5199\u51fd\u6570\u4f7f\u7528\u63d0\u4f9b\u7684\u90e8\u5206\u6570\u636e\u96c6\u4f5c\u4e3a\u6d4b\u8bd5\u6837\u672c\uff0c\u5982\u679c\u9884\u6d4b\u5206\u7c7b\u4e0e\u5b9e\u9645\u7c7b\u522b\u4e0d\u540c\uff0c\u5219\u6807\u8bb0\u4e3a\u4e00\u4e2a\u9519\u8bef   def   handwritingClassTest (): \n     # 1. \u5bfc\u5165\u8bad\u7ec3\u6570\u636e \n     hwLabels   =   [] \n     trainingFileList   =   listdir ( input/2.KNN/trainingDigits )    # load the training set \n     m   =   len ( trainingFileList ) \n     trainingMat   =   zeros (( m ,   1024 )) \n     # hwLabels\u5b58\u50a80\uff5e9\u5bf9\u5e94\u7684index\u4f4d\u7f6e\uff0c trainingMat\u5b58\u653e\u7684\u6bcf\u4e2a\u4f4d\u7f6e\u5bf9\u5e94\u7684\u56fe\u7247\u5411\u91cf \n     for   i   in   range ( m ): \n         fileNameStr   =   trainingFileList [ i ] \n         fileStr   =   fileNameStr . split ( . )[ 0 ]    # take off .txt \n         classNumStr   =   int ( fileStr . split ( _ )[ 0 ]) \n         hwLabels . append ( classNumStr ) \n         # \u5c06 32*32\u7684\u77e9\u9635- 1*1024\u7684\u77e9\u9635 \n         trainingMat [ i ,   :]   =   img2vector ( input/2.KNN/trainingDigits/ %s   %   fileNameStr ) \n\n     # 2. \u5bfc\u5165\u6d4b\u8bd5\u6570\u636e \n     testFileList   =   listdir ( input/2.KNN/testDigits )    # iterate through the test set \n     errorCount   =   0.0 \n     mTest   =   len ( testFileList ) \n     for   i   in   range ( mTest ): \n         fileNameStr   =   testFileList [ i ] \n         fileStr   =   fileNameStr . split ( . )[ 0 ]    # take off .txt \n         classNumStr   =   int ( fileStr . split ( _ )[ 0 ]) \n         vectorUnderTest   =   img2vector ( input/2.KNN/testDigits/ %s   %   fileNameStr ) \n         classifierResult   =   classify0 ( vectorUnderTest ,   trainingMat ,   hwLabels ,   3 ) \n         print   the classifier came back with:  %d , the real answer is:  %d   %   ( classifierResult ,   classNumStr ) \n         if   ( classifierResult   !=   classNumStr ):   errorCount   +=   1.0 \n     print   \\n the total number of errors is:  %d   %   errorCount \n     print   \\n the total error rate is:  %f   %   ( errorCount   /   float ( mTest ))    \u4f7f\u7528\u7b97\u6cd5\uff1a\u672c\u4f8b\u6ca1\u6709\u5b8c\u6210\u6b64\u6b65\u9aa4\uff0c\u82e5\u4f60\u611f\u5174\u8da3\u53ef\u4ee5\u6784\u5efa\u5b8c\u6574\u7684\u5e94\u7528\u7a0b\u5e8f\uff0c\u4ece\u56fe\u50cf\u4e2d\u63d0\u53d6\u6570\u5b57\uff0c\u5e76\u5b8c\u6210\u6570\u5b57\u8bc6\u522b\uff0c\u7f8e\u56fd\u7684\u90ae\u4ef6\u5206\u62e3\u7cfb\u7edf\u5c31\u662f\u4e00\u4e2a\u5b9e\u9645\u8fd0\u884c\u7684\u7c7b\u4f3c\u7cfb\u7edf", 
            "title": "\u5f00\u53d1\u6d41\u7a0b"
        }, 
        {
            "location": "/\u4e66\u7c4d/\u673a\u5668\u5b66\u4e60\u5b9e\u6218/02.k-\u8fd1\u90bb\u7b97\u6cd5/#knn_4", 
            "text": "\u7ecf\u8fc7\u4e0a\u9762\u7684\u4ecb\u7ecd\u6211\u4eec\u53ef\u4ee5\u77e5\u9053\uff0c k \u8fd1\u90bb\u7b97\u6cd5\u6709 \u4e09\u4e2a\u57fa\u672c\u7684\u8981\u7d20\uff1a    k \u503c\u7684\u9009\u62e9   k \u503c\u7684\u9009\u62e9\u4f1a\u5bf9 k \u8fd1\u90bb\u7b97\u6cd5\u7684\u7ed3\u679c\u4ea7\u751f\u91cd\u5927\u7684\u5f71\u54cd\u3002  \u5982\u679c\u9009\u62e9\u8f83\u5c0f\u7684 k \u503c\uff0c\u5c31\u76f8\u5f53\u4e8e\u7528\u8f83\u5c0f\u7684\u90bb\u57df\u4e2d\u7684\u8bad\u7ec3\u5b9e\u4f8b\u8fdb\u884c\u9884\u6d4b\uff0c\u201c\u5b66\u4e60\u201d\u7684\u8fd1\u4f3c\u8bef\u5dee\uff08approximation error\uff09\u4f1a\u51cf\u5c0f\uff0c\u53ea\u6709\u4e0e\u8f93\u5165\u5b9e\u4f8b\u8f83\u8fd1\u7684\uff08\u76f8\u4f3c\u7684\uff09\u8bad\u7ec3\u5b9e\u4f8b\u624d\u4f1a\u5bf9\u9884\u6d4b\u7ed3\u679c\u8d77\u4f5c\u7528\u3002\u4f46\u7f3a\u70b9\u662f\u201c\u5b66\u4e60\u201d\u7684\u4f30\u8ba1\u8bef\u5dee\uff08estimation error\uff09\u4f1a\u589e\u5927\uff0c\u9884\u6d4b\u7ed3\u679c\u4f1a\u5bf9\u8fd1\u90bb\u7684\u5b9e\u4f8b\u70b9\u975e\u5e38\u654f\u611f\u3002\u5982\u679c\u90bb\u8fd1\u7684\u5b9e\u4f8b\u70b9\u6070\u5de7\u662f\u566a\u58f0\uff0c\u9884\u6d4b\u5c31\u4f1a\u51fa\u9519\u3002\u6362\u53e5\u8bdd\u8bf4\uff0ck \u503c\u7684\u51cf\u5c0f\u5c31\u610f\u5473\u7740\u6574\u4f53\u6a21\u578b\u53d8\u5f97\u590d\u6742\uff0c\u5bb9\u6613\u53d1\u751f\u8fc7\u62df\u5408\u3002  \u5982\u679c\u9009\u62e9\u8f83\u5927\u7684 k \u503c\uff0c\u5c31\u76f8\u5f53\u4e8e\u7528\u8f83\u5927\u7684\u90bb\u57df\u4e2d\u7684\u8bad\u7ec3\u5b9e\u4f8b\u8fdb\u884c\u9884\u6d4b\u3002\u5176\u4f18\u70b9\u662f\u53ef\u4ee5\u51cf\u5c11\u5b66\u4e60\u7684\u4f30\u8ba1\u8bef\u5dee\u3002\u4f46\u7f3a\u70b9\u662f\u5b66\u4e60\u7684\u8fd1\u4f3c\u8bef\u5dee\u4f1a\u589e\u5927\u3002\u8fd9\u65f6\u4e0e\u8f93\u5165\u5b9e\u4f8b\u8f83\u8fdc\u7684\uff08\u4e0d\u76f8\u4f3c\u7684\uff09\u8bad\u7ec3\u5b9e\u4f8b\u4e5f\u4f1a\u5bf9\u9884\u6d4b\u8d77\u4f5c\u7528\uff0c\u4f7f\u9884\u6d4b\u53d1\u751f\u9519\u8bef\u3002 k \u503c\u7684\u589e\u5927\u5c31\u610f\u5473\u7740\u6574\u4f53\u7684\u6a21\u578b\u53d8\u5f97\u7b80\u5355\u3002  \u8fd1\u4f3c\u8bef\u5dee\u548c\u4f30\u8ba1\u8bef\u5dee\uff0c\u8bf7\u770b\u8fd9\u91cc\uff1a https://www.zhihu.com/question/60793482     \u8ddd\u79bb\u5ea6\u91cf   \u7279\u5f81\u7a7a\u95f4\u4e2d\u4e24\u4e2a\u5b9e\u4f8b\u70b9\u7684\u8ddd\u79bb\u662f\u4e24\u4e2a\u5b9e\u4f8b\u70b9\u76f8\u4f3c\u7a0b\u5ea6\u7684\u53cd\u6620\u3002  k \u8fd1\u90bb\u6a21\u578b\u7684\u7279\u5f81\u7a7a\u95f4\u4e00\u822c\u662f n \u7ef4\u5b9e\u6570\u5411\u91cf\u7a7a\u95f4   \u3002\u4f7f\u7528\u7684\u8ddd\u79bb\u662f\u6b27\u6c0f\u8ddd\u79bb\uff0c\u4f46\u4e5f\u53ef\u4ee5\u662f\u5176\u4ed6\u8ddd\u79bb\uff0c\u5982\u66f4\u4e00\u822c\u7684   \u8ddd\u79bb\uff0c\u6216\u8005 Minkowski \u8ddd\u79bb\u3002     \u5206\u7c7b\u51b3\u7b56\u89c4\u5219   k \u8fd1\u90bb\u7b97\u6cd5\u4e2d\u7684\u5206\u7c7b\u51b3\u7b56\u89c4\u5219\u5f80\u5f80\u662f\u591a\u6570\u8868\u51b3\uff0c\u5373\u7531\u8f93\u5165\u5b9e\u4f8b\u7684 k \u4e2a\u90bb\u8fd1\u7684\u8bad\u7ec3\u5b9e\u4f8b\u4e2d\u7684\u591a\u6570\u7c7b\u51b3\u5b9a\u8f93\u5165\u5b9e\u4f8b\u7684\u7c7b\u3002       \u4f5c\u8005\uff1a \u7f8a\u4e09   \u5c0f\u7476  GitHub\u5730\u5740 :  https://github.com/apachecn/MachineLearning  \u7248\u6743\u58f0\u660e\uff1a\u6b22\u8fce\u8f6c\u8f7d\u5b66\u4e60 =  \u8bf7\u6807\u6ce8\u4fe1\u606f\u6765\u6e90\u4e8e  ApacheCN", 
            "title": "KNN \u5c0f\u7ed3"
        }, 
        {
            "location": "/\u4e66\u7c4d/\u673a\u5668\u5b66\u4e60\u5b9e\u6218/03.\u51b3\u7b56\u6811/", 
            "text": "\u7b2c3\u7ae0 \u51b3\u7b56\u6811\n\n\n\n\n\u51b3\u7b56\u6811 \u6982\u8ff0\n\n\n\u51b3\u7b56\u6811\uff08Decision Tree\uff09\u7b97\u6cd5\u662f\u4e00\u79cd\u57fa\u672c\u7684\u5206\u7c7b\u4e0e\u56de\u5f52\u65b9\u6cd5\uff0c\u662f\u6700\u7ecf\u5e38\u4f7f\u7528\u7684\u6570\u636e\u6316\u6398\u7b97\u6cd5\u4e4b\u4e00\u3002\u6211\u4eec\u8fd9\u7ae0\u8282\u53ea\u8ba8\u8bba\u7528\u4e8e\u5206\u7c7b\u7684\u51b3\u7b56\u6811\u3002\n\n\n\u51b3\u7b56\u6811\u6a21\u578b\u5448\u6811\u5f62\u7ed3\u6784\uff0c\u5728\u5206\u7c7b\u95ee\u9898\u4e2d\uff0c\u8868\u793a\u57fa\u4e8e\u7279\u5f81\u5bf9\u5b9e\u4f8b\u8fdb\u884c\u5206\u7c7b\u7684\u8fc7\u7a0b\u3002\u5b83\u53ef\u4ee5\u8ba4\u4e3a\u662f if-then \u89c4\u5219\u7684\u96c6\u5408\uff0c\u4e5f\u53ef\u4ee5\u8ba4\u4e3a\u662f\u5b9a\u4e49\u5728\u7279\u5f81\u7a7a\u95f4\u4e0e\u7c7b\u7a7a\u95f4\u4e0a\u7684\u6761\u4ef6\u6982\u7387\u5206\u5e03\u3002\n\n\n\u51b3\u7b56\u6811\u5b66\u4e60\u901a\u5e38\u5305\u62ec 3 \u4e2a\u6b65\u9aa4\uff1a\u7279\u5f81\u9009\u62e9\u3001\u51b3\u7b56\u6811\u7684\u751f\u6210\u548c\u51b3\u7b56\u6811\u7684\u4fee\u526a\u3002\n\n\n\u51b3\u7b56\u6811 \u573a\u666f\n\n\n\u4e00\u4e2a\u53eb\u505a \"\u4e8c\u5341\u4e2a\u95ee\u9898\" \u7684\u6e38\u620f\uff0c\u6e38\u620f\u7684\u89c4\u5219\u5f88\u7b80\u5355\uff1a\u53c2\u4e0e\u6e38\u620f\u7684\u4e00\u65b9\u5728\u8111\u6d77\u4e2d\u60f3\u67d0\u4e2a\u4e8b\u7269\uff0c\u5176\u4ed6\u53c2\u4e0e\u8005\u5411\u4ed6\u63d0\u95ee\uff0c\u53ea\u5141\u8bb8\u63d0 20 \u4e2a\u95ee\u9898\uff0c\u95ee\u9898\u7684\u7b54\u6848\u4e5f\u53ea\u80fd\u7528\u5bf9\u6216\u9519\u56de\u7b54\u3002\u95ee\u95ee\u9898\u7684\u4eba\u901a\u8fc7\u63a8\u65ad\u5206\u89e3\uff0c\u9010\u6b65\u7f29\u5c0f\u5f85\u731c\u6d4b\u4e8b\u7269\u7684\u8303\u56f4\uff0c\u6700\u540e\u5f97\u5230\u6e38\u620f\u7684\u7b54\u6848\u3002\n\n\n\u4e00\u4e2a\u90ae\u4ef6\u5206\u7c7b\u7cfb\u7edf\uff0c\u5927\u81f4\u5de5\u4f5c\u6d41\u7a0b\u5982\u4e0b\uff1a\n\n\n\n\n\u9996\u5148\u68c0\u6d4b\u53d1\u9001\u90ae\u4ef6\u57df\u540d\u5730\u5740\u3002\u5982\u679c\u5730\u5740\u4e3a myEmployer.com, \u5219\u5c06\u5176\u653e\u5728\u5206\u7c7b \n\u65e0\u804a\u65f6\u9700\u8981\u9605\u8bfb\u7684\u90ae\u4ef6\n\u4e2d\u3002\n\u5982\u679c\u90ae\u4ef6\u4e0d\u662f\u6765\u81ea\u8fd9\u4e2a\u57df\u540d\uff0c\u5219\u68c0\u6d4b\u90ae\u4ef6\u5185\u5bb9\u91cc\u662f\u5426\u5305\u542b\u5355\u8bcd \n\u66f2\u68cd\u7403\n , \u5982\u679c\u5305\u542b\u5219\u5c06\u90ae\u4ef6\u5f52\u7c7b\u5230 \n\u9700\u8981\u53ca\u65f6\u5904\u7406\u7684\u670b\u53cb\u90ae\u4ef6\n, \n\u5982\u679c\u4e0d\u5305\u542b\u5219\u5c06\u90ae\u4ef6\u5f52\u7c7b\u5230 \n\u65e0\u9700\u9605\u8bfb\u7684\u5783\u573e\u90ae\u4ef6\n \u3002\n\n\n\n\n\u51b3\u7b56\u6811\u7684\u5b9a\u4e49\uff1a\n\n\n\u5206\u7c7b\u51b3\u7b56\u6811\u6a21\u578b\u662f\u4e00\u79cd\u63cf\u8ff0\u5bf9\u5b9e\u4f8b\u8fdb\u884c\u5206\u7c7b\u7684\u6811\u5f62\u7ed3\u6784\u3002\u51b3\u7b56\u6811\u7531\u7ed3\u70b9\uff08node\uff09\u548c\u6709\u5411\u8fb9\uff08directed edge\uff09\u7ec4\u6210\u3002\u7ed3\u70b9\u6709\u4e24\u79cd\u7c7b\u578b\uff1a\u5185\u90e8\u7ed3\u70b9\uff08internal node\uff09\u548c\u53f6\u7ed3\u70b9\uff08leaf node\uff09\u3002\u5185\u90e8\u7ed3\u70b9\u8868\u793a\u4e00\u4e2a\u7279\u5f81\u6216\u5c5e\u6027(features)\uff0c\u53f6\u7ed3\u70b9\u8868\u793a\u4e00\u4e2a\u7c7b(labels)\u3002\n\n\n\u7528\u51b3\u7b56\u6811\u5bf9\u9700\u8981\u6d4b\u8bd5\u7684\u5b9e\u4f8b\u8fdb\u884c\u5206\u7c7b\uff1a\u4ece\u6839\u8282\u70b9\u5f00\u59cb\uff0c\u5bf9\u5b9e\u4f8b\u7684\u67d0\u4e00\u7279\u5f81\u8fdb\u884c\u6d4b\u8bd5\uff0c\u6839\u636e\u6d4b\u8bd5\u7ed3\u679c\uff0c\u5c06\u5b9e\u4f8b\u5206\u914d\u5230\u5176\u5b50\u7ed3\u70b9\uff1b\u8fd9\u65f6\uff0c\u6bcf\u4e00\u4e2a\u5b50\u7ed3\u70b9\u5bf9\u5e94\u7740\u8be5\u7279\u5f81\u7684\u4e00\u4e2a\u53d6\u503c\u3002\u5982\u6b64\u9012\u5f52\u5730\u5bf9\u5b9e\u4f8b\u8fdb\u884c\u6d4b\u8bd5\u5e76\u5206\u914d\uff0c\u76f4\u81f3\u8fbe\u5230\u53f6\u7ed3\u70b9\u3002\u6700\u540e\u5c06\u5b9e\u4f8b\u5206\u914d\u5230\u53f6\u7ed3\u70b9\u7684\u7c7b\u4e2d\u3002\n\n\n\u51b3\u7b56\u6811 \u539f\u7406\n\n\n\u51b3\u7b56\u6811 \u987b\u77e5\u6982\u5ff5\n\n\n\u4fe1\u606f\u71b5 \n \u4fe1\u606f\u589e\u76ca\n\n\n\u71b5\uff08entropy\uff09\uff1a\n\u71b5\u6307\u7684\u662f\u4f53\u7cfb\u7684\u6df7\u4e71\u7684\u7a0b\u5ea6\uff0c\u5728\u4e0d\u540c\u7684\u5b66\u79d1\u4e2d\u4e5f\u6709\u5f15\u7533\u51fa\u7684\u66f4\u4e3a\u5177\u4f53\u7684\u5b9a\u4e49\uff0c\u662f\u5404\u9886\u57df\u5341\u5206\u91cd\u8981\u7684\u53c2\u91cf\u3002\n\n\n\u4fe1\u606f\u8bba\uff08information theory\uff09\u4e2d\u7684\u71b5\uff08\u9999\u519c\u71b5\uff09\uff1a\n\u662f\u4e00\u79cd\u4fe1\u606f\u7684\u5ea6\u91cf\u65b9\u5f0f\uff0c\u8868\u793a\u4fe1\u606f\u7684\u6df7\u4e71\u7a0b\u5ea6\uff0c\u4e5f\u5c31\u662f\u8bf4\uff1a\u4fe1\u606f\u8d8a\u6709\u5e8f\uff0c\u4fe1\u606f\u71b5\u8d8a\u4f4e\u3002\u4f8b\u5982\uff1a\u706b\u67f4\u6709\u5e8f\u653e\u5728\u706b\u67f4\u76d2\u91cc\uff0c\u71b5\u503c\u5f88\u4f4e\uff0c\u76f8\u53cd\uff0c\u71b5\u503c\u5f88\u9ad8\u3002\n\n\n\u4fe1\u606f\u589e\u76ca\uff08information gain\uff09\uff1a\n\u5728\u5212\u5206\u6570\u636e\u96c6\u524d\u540e\u4fe1\u606f\u53d1\u751f\u7684\u53d8\u5316\u79f0\u4e3a\u4fe1\u606f\u589e\u76ca\u3002\n\n\n\u51b3\u7b56\u6811 \u5de5\u4f5c\u539f\u7406\n\n\n\u5982\u4f55\u6784\u9020\u4e00\u4e2a\u51b3\u7b56\u6811?\n\n\u6211\u4eec\u4f7f\u7528 createBranch() \u65b9\u6cd5\uff0c\u5982\u4e0b\u6240\u793a\uff1a\n\n\ndef createBranch():\n\n\n\u6b64\u5904\u8fd0\u7528\u4e86\u8fed\u4ee3\u7684\u601d\u60f3\u3002 \u611f\u5174\u8da3\u53ef\u4ee5\u641c\u7d22 \u8fed\u4ee3 recursion\uff0c \u751a\u81f3\u662f dynamic programing\u3002\n\n\n    \u68c0\u6d4b\u6570\u636e\u96c6\u4e2d\u7684\u6240\u6709\u6570\u636e\u7684\u5206\u7c7b\u6807\u7b7e\u662f\u5426\u76f8\u540c:\n        If so return \u7c7b\u6807\u7b7e\n        Else:\n            \u5bfb\u627e\u5212\u5206\u6570\u636e\u96c6\u7684\u6700\u597d\u7279\u5f81\uff08\u5212\u5206\u4e4b\u540e\u4fe1\u606f\u71b5\u6700\u5c0f\uff0c\u4e5f\u5c31\u662f\u4fe1\u606f\u589e\u76ca\u6700\u5927\u7684\u7279\u5f81\uff09\n            \u5212\u5206\u6570\u636e\u96c6\n            \u521b\u5efa\u5206\u652f\u8282\u70b9\n                for \u6bcf\u4e2a\u5212\u5206\u7684\u5b50\u96c6\n                    \u8c03\u7528\u51fd\u6570 createBranch \uff08\u521b\u5efa\u5206\u652f\u7684\u51fd\u6570\uff09\u5e76\u589e\u52a0\u8fd4\u56de\u7ed3\u679c\u5230\u5206\u652f\u8282\u70b9\u4e2d\n            return \u5206\u652f\u8282\u70b9\n\n\n\n\n\u51b3\u7b56\u6811 \u5f00\u53d1\u6d41\u7a0b\n\n\n\u6536\u96c6\u6570\u636e\uff1a\u53ef\u4ee5\u4f7f\u7528\u4efb\u4f55\u65b9\u6cd5\u3002\n\u51c6\u5907\u6570\u636e\uff1a\u6811\u6784\u9020\u7b97\u6cd5 (\u8fd9\u91cc\u4f7f\u7528\u7684\u662fID3\u7b97\u6cd5\uff0c\u53ea\u9002\u7528\u4e8e\u6807\u79f0\u578b\u6570\u636e\uff0c\u8fd9\u5c31\u662f\u4e3a\u4ec0\u4e48\u6570\u503c\u578b\u6570\u636e\u5fc5\u987b\u79bb\u6563\u5316\u3002 \u8fd8\u6709\u5176\u4ed6\u7684\u6811\u6784\u9020\u7b97\u6cd5\uff0c\u6bd4\u5982CART)\n\u5206\u6790\u6570\u636e\uff1a\u53ef\u4ee5\u4f7f\u7528\u4efb\u4f55\u65b9\u6cd5\uff0c\u6784\u9020\u6811\u5b8c\u6210\u4e4b\u540e\uff0c\u6211\u4eec\u5e94\u8be5\u68c0\u67e5\u56fe\u5f62\u662f\u5426\u7b26\u5408\u9884\u671f\u3002\n\u8bad\u7ec3\u7b97\u6cd5\uff1a\u6784\u9020\u6811\u7684\u6570\u636e\u7ed3\u6784\u3002\n\u6d4b\u8bd5\u7b97\u6cd5\uff1a\u4f7f\u7528\u8bad\u7ec3\u597d\u7684\u6811\u8ba1\u7b97\u9519\u8bef\u7387\u3002\n\u4f7f\u7528\u7b97\u6cd5\uff1a\u6b64\u6b65\u9aa4\u53ef\u4ee5\u9002\u7528\u4e8e\u4efb\u4f55\u76d1\u7763\u5b66\u4e60\u4efb\u52a1\uff0c\u800c\u4f7f\u7528\u51b3\u7b56\u6811\u53ef\u4ee5\u66f4\u597d\u5730\u7406\u89e3\u6570\u636e\u7684\u5185\u5728\u542b\u4e49\u3002\n\n\n\n\n\u51b3\u7b56\u6811 \u7b97\u6cd5\u7279\u70b9\n\n\n\u4f18\u70b9\uff1a\u8ba1\u7b97\u590d\u6742\u5ea6\u4e0d\u9ad8\uff0c\u8f93\u51fa\u7ed3\u679c\u6613\u4e8e\u7406\u89e3\uff0c\u6570\u636e\u6709\u7f3a\u5931\u4e5f\u80fd\u8dd1\uff0c\u53ef\u4ee5\u5904\u7406\u4e0d\u76f8\u5173\u7279\u5f81\u3002\n\u7f3a\u70b9\uff1a\u5bb9\u6613\u8fc7\u62df\u5408\u3002\n\u9002\u7528\u6570\u636e\u7c7b\u578b\uff1a\u6570\u503c\u578b\u548c\u6807\u79f0\u578b\u3002\n\n\n\n\n\u51b3\u7b56\u6811 \u9879\u76ee\u6848\u4f8b\n\n\n\u9879\u76ee\u6848\u4f8b1: \u5224\u5b9a\u9c7c\u7c7b\u548c\u975e\u9c7c\u7c7b\n\n\n\u9879\u76ee\u6982\u8ff0\n\n\n\u6839\u636e\u4ee5\u4e0b 2 \u4e2a\u7279\u5f81\uff0c\u5c06\u52a8\u7269\u5206\u6210\u4e24\u7c7b\uff1a\u9c7c\u7c7b\u548c\u975e\u9c7c\u7c7b\u3002\n\n\n\u7279\u5f81\uff1a\n1. \u4e0d\u6d6e\u51fa\u6c34\u9762\u662f\u5426\u53ef\u4ee5\u751f\u5b58\n2. \u662f\u5426\u6709\u811a\u8e7c\n\n\n\u5f00\u53d1\u6d41\u7a0b\n\n\n\u5b8c\u6574\u4ee3\u7801\u5730\u5740\n: \nhttps://github.com/apachecn/MachineLearning/blob/master/src/python/3.DecisionTree/DecisionTree.py\n\n\n\u6536\u96c6\u6570\u636e\uff1a\u53ef\u4ee5\u4f7f\u7528\u4efb\u4f55\u65b9\u6cd5\n\u51c6\u5907\u6570\u636e\uff1a\u6811\u6784\u9020\u7b97\u6cd5\uff08\u8fd9\u91cc\u4f7f\u7528\u7684\u662fID3\u7b97\u6cd5\uff0c\u56e0\u6b64\u6570\u503c\u578b\u6570\u636e\u5fc5\u987b\u79bb\u6563\u5316\u3002\uff09\n\u5206\u6790\u6570\u636e\uff1a\u53ef\u4ee5\u4f7f\u7528\u4efb\u4f55\u65b9\u6cd5\uff0c\u6784\u9020\u6811\u5b8c\u6210\u4e4b\u540e\uff0c\u6211\u4eec\u53ef\u4ee5\u5c06\u6811\u753b\u51fa\u6765\u3002\n\u8bad\u7ec3\u7b97\u6cd5\uff1a\u6784\u9020\u6811\u7ed3\u6784\n\u6d4b\u8bd5\u7b97\u6cd5\uff1a\u4f7f\u7528\u4e60\u5f97\u7684\u51b3\u7b56\u6811\u6267\u884c\u5206\u7c7b\n\u4f7f\u7528\u7b97\u6cd5\uff1a\u6b64\u6b65\u9aa4\u53ef\u4ee5\u9002\u7528\u4e8e\u4efb\u4f55\u76d1\u7763\u5b66\u4e60\u4efb\u52a1\uff0c\u800c\u4f7f\u7528\u51b3\u7b56\u6811\u53ef\u4ee5\u66f4\u597d\u5730\u7406\u89e3\u6570\u636e\u7684\u5185\u5728\u542b\u4e49\n\n\n\n\n\n\n\u6536\u96c6\u6570\u636e\uff1a\u53ef\u4ee5\u4f7f\u7528\u4efb\u4f55\u65b9\u6cd5\n\n\n\n\n\n\n\u6211\u4eec\u5229\u7528 createDataSet() \u51fd\u6570\u8f93\u5165\u6570\u636e\n\n\ndef\n \ncreateDataSet\n():\n\n    \ndataSet\n \n=\n \n[[\n1\n,\n \n1\n,\n \nyes\n],\n\n            \n[\n1\n,\n \n1\n,\n \nyes\n],\n\n            \n[\n1\n,\n \n0\n,\n \nno\n],\n\n            \n[\n0\n,\n \n1\n,\n \nno\n],\n\n            \n[\n0\n,\n \n1\n,\n \nno\n]]\n\n    \nlabels\n \n=\n \n[\nno surfacing\n,\n \nflippers\n]\n\n    \nreturn\n \ndataSet\n,\n \nlabels\n\n\n\n\n\n\n\n\u51c6\u5907\u6570\u636e\uff1a\u6811\u6784\u9020\u7b97\u6cd5\n\n\n\n\n\u6b64\u5904\uff0c\u7531\u4e8e\u6211\u4eec\u8f93\u5165\u7684\u6570\u636e\u672c\u8eab\u5c31\u662f\u79bb\u6563\u5316\u6570\u636e\uff0c\u6240\u4ee5\u8fd9\u4e00\u6b65\u5c31\u7701\u7565\u4e86\u3002\n\n\n\n\n\u5206\u6790\u6570\u636e\uff1a\u53ef\u4ee5\u4f7f\u7528\u4efb\u4f55\u65b9\u6cd5\uff0c\u6784\u9020\u6811\u5b8c\u6210\u4e4b\u540e\uff0c\u6211\u4eec\u53ef\u4ee5\u5c06\u6811\u753b\u51fa\u6765\u3002\n\n\n\n\n\n\n\u8ba1\u7b97\u7ed9\u5b9a\u6570\u636e\u96c6\u7684\u9999\u519c\u71b5\u7684\u51fd\u6570\n\n\ndef\n \ncalcShannonEnt\n(\ndataSet\n):\n\n    \n# \u6c42list\u7684\u957f\u5ea6\uff0c\u8868\u793a\u8ba1\u7b97\u53c2\u4e0e\u8bad\u7ec3\u7684\u6570\u636e\u91cf\n\n    \nnumEntries\n \n=\n \nlen\n(\ndataSet\n)\n\n    \n# \u8ba1\u7b97\u5206\u7c7b\u6807\u7b7elabel\u51fa\u73b0\u7684\u6b21\u6570\n\n    \nlabelCounts\n \n=\n \n{}\n\n    \n# the the number of unique elements and their occurrence\n\n    \nfor\n \nfeatVec\n \nin\n \ndataSet\n:\n\n        \n# \u5c06\u5f53\u524d\u5b9e\u4f8b\u7684\u6807\u7b7e\u5b58\u50a8\uff0c\u5373\u6bcf\u4e00\u884c\u6570\u636e\u7684\u6700\u540e\u4e00\u4e2a\u6570\u636e\u4ee3\u8868\u7684\u662f\u6807\u7b7e\n\n        \ncurrentLabel\n \n=\n \nfeatVec\n[\n-\n1\n]\n\n        \n# \u4e3a\u6240\u6709\u53ef\u80fd\u7684\u5206\u7c7b\u521b\u5efa\u5b57\u5178\uff0c\u5982\u679c\u5f53\u524d\u7684\u952e\u503c\u4e0d\u5b58\u5728\uff0c\u5219\u6269\u5c55\u5b57\u5178\u5e76\u5c06\u5f53\u524d\u952e\u503c\u52a0\u5165\u5b57\u5178\u3002\u6bcf\u4e2a\u952e\u503c\u90fd\u8bb0\u5f55\u4e86\u5f53\u524d\u7c7b\u522b\u51fa\u73b0\u7684\u6b21\u6570\u3002\n\n        \nif\n \ncurrentLabel\n \nnot\n \nin\n \nlabelCounts\n.\nkeys\n():\n\n            \nlabelCounts\n[\ncurrentLabel\n]\n \n=\n \n0\n\n        \nlabelCounts\n[\ncurrentLabel\n]\n \n+=\n \n1\n\n\n    \n# \u5bf9\u4e8e label \u6807\u7b7e\u7684\u5360\u6bd4\uff0c\u6c42\u51fa label \u6807\u7b7e\u7684\u9999\u519c\u71b5\n\n    \nshannonEnt\n \n=\n \n0.0\n\n    \nfor\n \nkey\n \nin\n \nlabelCounts\n:\n\n        \n# \u4f7f\u7528\u6240\u6709\u7c7b\u6807\u7b7e\u7684\u53d1\u751f\u9891\u7387\u8ba1\u7b97\u7c7b\u522b\u51fa\u73b0\u7684\u6982\u7387\u3002\n\n        \nprob\n \n=\n \nfloat\n(\nlabelCounts\n[\nkey\n])\n/\nnumEntries\n\n        \n# \u8ba1\u7b97\u9999\u519c\u71b5\uff0c\u4ee5 2 \u4e3a\u5e95\u6c42\u5bf9\u6570\n\n        \nshannonEnt\n \n-=\n \nprob\n \n*\n \nlog\n(\nprob\n,\n \n2\n)\n\n    \nreturn\n \nshannonEnt\n\n\n\n\n\n\u6309\u7167\u7ed9\u5b9a\u7279\u5f81\u5212\u5206\u6570\u636e\u96c6\n\n\n\u5c06\u6307\u5b9a\u7279\u5f81\u7684\u7279\u5f81\u503c\u7b49\u4e8e value \u7684\u884c\u5269\u4e0b\u5217\u4f5c\u4e3a\u5b50\u6570\u636e\u96c6\u3002\n\n\ndef\n \nsplitDataSet\n(\ndataSet\n,\n \nindex\n,\n \nvalue\n):\n\n    \nsplitDataSet(\u901a\u8fc7\u904d\u5386dataSet\u6570\u636e\u96c6\uff0c\u6c42\u51faindex\u5bf9\u5e94\u7684colnum\u5217\u7684\u503c\u4e3avalue\u7684\u884c)\n\n\n        \u5c31\u662f\u4f9d\u636eindex\u5217\u8fdb\u884c\u5206\u7c7b\uff0c\u5982\u679cindex\u5217\u7684\u6570\u636e\u7b49\u4e8e value\u7684\u65f6\u5019\uff0c\u5c31\u8981\u5c06 index \u5212\u5206\u5230\u6211\u4eec\u521b\u5efa\u7684\u65b0\u7684\u6570\u636e\u96c6\u4e2d\n\n\n    Args:\n\n\n        dataSet \u6570\u636e\u96c6                 \u5f85\u5212\u5206\u7684\u6570\u636e\u96c6\n\n\n        index \u8868\u793a\u6bcf\u4e00\u884c\u7684index\u5217        \u5212\u5206\u6570\u636e\u96c6\u7684\u7279\u5f81\n\n\n        value \u8868\u793aindex\u5217\u5bf9\u5e94\u7684value\u503c   \u9700\u8981\u8fd4\u56de\u7684\u7279\u5f81\u7684\u503c\u3002\n\n\n    Returns:\n\n\n        index\u5217\u4e3avalue\u7684\u6570\u636e\u96c6\u3010\u8be5\u6570\u636e\u96c6\u9700\u8981\u6392\u9664index\u5217\u3011\n\n\n    \n\n    \nretDataSet\n \n=\n \n[]\n\n    \nfor\n \nfeatVec\n \nin\n \ndataSet\n:\n \n        \n# index\u5217\u4e3avalue\u7684\u6570\u636e\u96c6\u3010\u8be5\u6570\u636e\u96c6\u9700\u8981\u6392\u9664index\u5217\u3011\n\n        \n# \u5224\u65adindex\u5217\u7684\u503c\u662f\u5426\u4e3avalue\n\n        \nif\n \nfeatVec\n[\nindex\n]\n \n==\n \nvalue\n:\n\n            \n# chop out index used for splitting\n\n            \n# [:index]\u8868\u793a\u524dindex\u884c\uff0c\u5373\u82e5 index \u4e3a2\uff0c\u5c31\u662f\u53d6 featVec \u7684\u524d index \u884c\n\n            \nreducedFeatVec\n \n=\n \nfeatVec\n[:\nindex\n]\n\n            \n\n\n            \u8bf7\u767e\u5ea6\u67e5\u8be2\u4e00\u4e0b\uff1a extend\u548cappend\u7684\u533a\u522b\n\n\n            music_media.append(object) \u5411\u5217\u8868\u4e2d\u6dfb\u52a0\u4e00\u4e2a\u5bf9\u8c61object\n\n\n \u00a0 \u00a0 \u00a0 \u00a0 \u00a0 \u00a0music_media.extend(sequence) \u628a\u4e00\u4e2a\u5e8f\u5217seq\u7684\u5185\u5bb9\u6dfb\u52a0\u5230\u5217\u8868\u4e2d (\u8ddf += \u5728list\u8fd0\u7528\u7c7b\u4f3c\uff0c music_media += sequence)\n\n\n \u00a0 \u00a0 \u00a0 \u00a0 \u00a0 \u00a01\u3001\u4f7f\u7528append\u7684\u65f6\u5019\uff0c\u662f\u5c06object\u770b\u4f5c\u4e00\u4e2a\u5bf9\u8c61\uff0c\u6574\u4f53\u6253\u5305\u6dfb\u52a0\u5230music_media\u5bf9\u8c61\u4e2d\u3002\n\n\n            2\u3001\u4f7f\u7528extend\u7684\u65f6\u5019\uff0c\u662f\u5c06sequence\u770b\u4f5c\u4e00\u4e2a\u5e8f\u5217\uff0c\u5c06\u8fd9\u4e2a\u5e8f\u5217\u548cmusic_media\u5e8f\u5217\u5408\u5e76\uff0c\u5e76\u653e\u5728\u5176\u540e\u9762\u3002\n\n\n            music_media = []\n\n\n            music_media.extend([1,2,3])\n\n\n            print music_media\n\n\n \u00a0 \u00a0 \u00a0 \u00a0 \u00a0 \u00a0#\u7ed3\u679c\uff1a\n\n\n \u00a0 \u00a0 \u00a0 \u00a0 \u00a0 \u00a0#[1, 2, 3]\n\n\n\n            music_media.append([4,5,6])\n\n\n            print music_media\n\n\n            #\u7ed3\u679c\uff1a\n\n\n \u00a0 \u00a0 \u00a0 \u00a0 \u00a0 \u00a0#[1, 2, 3, [4, 5, 6]]\n\n\n\n            music_media.extend([7,8,9])\n\n\n            print music_media\n\n\n            #\u7ed3\u679c\uff1a\n\n\n \u00a0 \u00a0 \u00a0 \u00a0 \u00a0 \u00a0#[1, 2, 3, [4, 5, 6], 7, 8, 9]\n\n\n            \n\n            \nreducedFeatVec\n.\nextend\n(\nfeatVec\n[\nindex\n+\n1\n:])\n\n            \n# [index+1:]\u8868\u793a\u4ece\u8df3\u8fc7 index \u7684 index+1\u884c\uff0c\u53d6\u63a5\u4e0b\u6765\u7684\u6570\u636e\n\n            \n# \u6536\u96c6\u7ed3\u679c\u503c index\u5217\u4e3avalue\u7684\u884c\u3010\u8be5\u884c\u9700\u8981\u6392\u9664index\u5217\u3011\n\n            \nretDataSet\n.\nappend\n(\nreducedFeatVec\n)\n\n    \nreturn\n \nretDataSet\n\n\n\n\n\n\u9009\u62e9\u6700\u597d\u7684\u6570\u636e\u96c6\u5212\u5206\u65b9\u5f0f\n\n\ndef\n \nchooseBestFeatureToSplit\n(\ndataSet\n):\n\n    \nchooseBestFeatureToSplit(\u9009\u62e9\u6700\u597d\u7684\u7279\u5f81)\n\n\n\n    Args:\n\n\n        dataSet \u6570\u636e\u96c6\n\n\n    Returns:\n\n\n        bestFeature \u6700\u4f18\u7684\u7279\u5f81\u5217\n\n\n    \n\n    \n# \u6c42\u7b2c\u4e00\u884c\u6709\u591a\u5c11\u5217\u7684 Feature, \u6700\u540e\u4e00\u5217\u662flabel\u5217\u561b\n\n    \nnumFeatures\n \n=\n \nlen\n(\ndataSet\n[\n0\n])\n \n-\n \n1\n\n    \n# \u6570\u636e\u96c6\u7684\u539f\u59cb\u4fe1\u606f\u71b5\n\n    \nbaseEntropy\n \n=\n \ncalcShannonEnt\n(\ndataSet\n)\n\n    \n# \u6700\u4f18\u7684\u4fe1\u606f\u589e\u76ca\u503c, \u548c\u6700\u4f18\u7684Featurn\u7f16\u53f7\n\n    \nbestInfoGain\n,\n \nbestFeature\n \n=\n \n0.0\n,\n \n-\n1\n\n    \n# iterate over all the features\n\n    \nfor\n \ni\n \nin\n \nrange\n(\nnumFeatures\n):\n\n        \n# create a list of all the examples of this feature\n\n        \n# \u83b7\u53d6\u5bf9\u5e94\u7684feature\u4e0b\u7684\u6240\u6709\u6570\u636e\n\n        \nfeatList\n \n=\n \n[\nexample\n[\ni\n]\n \nfor\n \nexample\n \nin\n \ndataSet\n]\n\n        \n# get a set of unique values\n\n        \n# \u83b7\u53d6\u5254\u91cd\u540e\u7684\u96c6\u5408\uff0c\u4f7f\u7528set\u5bf9list\u6570\u636e\u8fdb\u884c\u53bb\u91cd\n\n        \nuniqueVals\n \n=\n \nset\n(\nfeatList\n)\n\n        \n# \u521b\u5efa\u4e00\u4e2a\u4e34\u65f6\u7684\u4fe1\u606f\u71b5\n\n        \nnewEntropy\n \n=\n \n0.0\n\n        \n# \u904d\u5386\u67d0\u4e00\u5217\u7684value\u96c6\u5408\uff0c\u8ba1\u7b97\u8be5\u5217\u7684\u4fe1\u606f\u71b5 \n\n        \n# \u904d\u5386\u5f53\u524d\u7279\u5f81\u4e2d\u7684\u6240\u6709\u552f\u4e00\u5c5e\u6027\u503c\uff0c\u5bf9\u6bcf\u4e2a\u552f\u4e00\u5c5e\u6027\u503c\u5212\u5206\u4e00\u6b21\u6570\u636e\u96c6\uff0c\u8ba1\u7b97\u6570\u636e\u96c6\u7684\u65b0\u71b5\u503c\uff0c\u5e76\u5bf9\u6240\u6709\u552f\u4e00\u7279\u5f81\u503c\u5f97\u5230\u7684\u71b5\u6c42\u548c\u3002\n\n        \nfor\n \nvalue\n \nin\n \nuniqueVals\n:\n\n            \nsubDataSet\n \n=\n \nsplitDataSet\n(\ndataSet\n,\n \ni\n,\n \nvalue\n)\n\n            \n# \u8ba1\u7b97\u6982\u7387\n\n            \nprob\n \n=\n \nlen\n(\nsubDataSet\n)\n/\nfloat\n(\nlen\n(\ndataSet\n))\n\n            \n# \u8ba1\u7b97\u4fe1\u606f\u71b5\n\n            \nnewEntropy\n \n+=\n \nprob\n \n*\n \ncalcShannonEnt\n(\nsubDataSet\n)\n\n        \n# gain[\u4fe1\u606f\u589e\u76ca]: \u5212\u5206\u6570\u636e\u96c6\u524d\u540e\u7684\u4fe1\u606f\u53d8\u5316\uff0c \u83b7\u53d6\u4fe1\u606f\u71b5\u6700\u5927\u7684\u503c\n\n        \n# \u4fe1\u606f\u589e\u76ca\u662f\u71b5\u7684\u51cf\u5c11\u6216\u8005\u662f\u6570\u636e\u65e0\u5e8f\u5ea6\u7684\u51cf\u5c11\u3002\u6700\u540e\uff0c\u6bd4\u8f83\u6240\u6709\u7279\u5f81\u4e2d\u7684\u4fe1\u606f\u589e\u76ca\uff0c\u8fd4\u56de\u6700\u597d\u7279\u5f81\u5212\u5206\u7684\u7d22\u5f15\u503c\u3002\n\n        \ninfoGain\n \n=\n \nbaseEntropy\n \n-\n \nnewEntropy\n\n        \nprint\n \ninfoGain=\n,\n \ninfoGain\n,\n \nbestFeature=\n,\n \ni\n,\n \nbaseEntropy\n,\n \nnewEntropy\n\n        \nif\n \n(\ninfoGain\n \n \nbestInfoGain\n):\n\n            \nbestInfoGain\n \n=\n \ninfoGain\n\n            \nbestFeature\n \n=\n \ni\n\n    \nreturn\n \nbestFeature\n\n\n\n\n\n\u95ee\uff1a\u4e0a\u9762\u7684 newEntropy \u4e3a\u4ec0\u4e48\u662f\u6839\u636e\u5b50\u96c6\u8ba1\u7b97\u7684\u5462\uff1f\n\u7b54\uff1a\u56e0\u4e3a\u6211\u4eec\u5728\u6839\u636e\u4e00\u4e2a\u7279\u5f81\u8ba1\u7b97\u9999\u519c\u71b5\u7684\u65f6\u5019\uff0c\u8be5\u7279\u5f81\u7684\u5206\u7c7b\u503c\u662f\u76f8\u540c\uff0c\u8fd9\u4e2a\u7279\u5f81\u8fd9\u4e2a\u5206\u7c7b\u7684\u9999\u519c\u71b5\u4e3a 0\uff1b\n\u8fd9\u5c31\u662f\u4e3a\u4ec0\u4e48\u8ba1\u7b97\u65b0\u7684\u9999\u519c\u71b5\u7684\u65f6\u5019\u4f7f\u7528\u7684\u662f\u5b50\u96c6\u3002\n\n\n\n\n\n\n\u8bad\u7ec3\u7b97\u6cd5\uff1a\u6784\u9020\u6811\u7684\u6570\u636e\u7ed3\u6784\n\n\n\n\n\u521b\u5efa\u6811\u7684\u51fd\u6570\u4ee3\u7801\u5982\u4e0b\uff1a\n\n\ndef\n \ncreateTree\n(\ndataSet\n,\n \nlabels\n):\n\n    \nclassList\n \n=\n \n[\nexample\n[\n-\n1\n]\n \nfor\n \nexample\n \nin\n \ndataSet\n]\n\n    \n# \u5982\u679c\u6570\u636e\u96c6\u7684\u6700\u540e\u4e00\u5217\u7684\u7b2c\u4e00\u4e2a\u503c\u51fa\u73b0\u7684\u6b21\u6570=\u6574\u4e2a\u96c6\u5408\u7684\u6570\u91cf\uff0c\u4e5f\u5c31\u8bf4\u53ea\u6709\u4e00\u4e2a\u7c7b\u522b\uff0c\u5c31\u53ea\u76f4\u63a5\u8fd4\u56de\u7ed3\u679c\u5c31\u884c\n\n    \n# \u7b2c\u4e00\u4e2a\u505c\u6b62\u6761\u4ef6\uff1a\u6240\u6709\u7684\u7c7b\u6807\u7b7e\u5b8c\u5168\u76f8\u540c\uff0c\u5219\u76f4\u63a5\u8fd4\u56de\u8be5\u7c7b\u6807\u7b7e\u3002\n\n    \n# count() \u51fd\u6570\u662f\u7edf\u8ba1\u62ec\u53f7\u4e2d\u7684\u503c\u5728list\u4e2d\u51fa\u73b0\u7684\u6b21\u6570\n\n    \nif\n \nclassList\n.\ncount\n(\nclassList\n[\n0\n])\n \n==\n \nlen\n(\nclassList\n):\n\n        \nreturn\n \nclassList\n[\n0\n]\n\n    \n# \u5982\u679c\u6570\u636e\u96c6\u53ea\u67091\u5217\uff0c\u90a3\u4e48\u6700\u521d\u51fa\u73b0label\u6b21\u6570\u6700\u591a\u7684\u4e00\u7c7b\uff0c\u4f5c\u4e3a\u7ed3\u679c\n\n    \n# \u7b2c\u4e8c\u4e2a\u505c\u6b62\u6761\u4ef6\uff1a\u4f7f\u7528\u5b8c\u4e86\u6240\u6709\u7279\u5f81\uff0c\u4ecd\u7136\u4e0d\u80fd\u5c06\u6570\u636e\u96c6\u5212\u5206\u6210\u4ec5\u5305\u542b\u552f\u4e00\u7c7b\u522b\u7684\u5206\u7ec4\u3002\n\n    \nif\n \nlen\n(\ndataSet\n[\n0\n])\n \n==\n \n1\n:\n\n        \nreturn\n \nmajorityCnt\n(\nclassList\n)\n\n\n    \n# \u9009\u62e9\u6700\u4f18\u7684\u5217\uff0c\u5f97\u5230\u6700\u4f18\u5217\u5bf9\u5e94\u7684label\u542b\u4e49\n\n    \nbestFeat\n \n=\n \nchooseBestFeatureToSplit\n(\ndataSet\n)\n\n    \n# \u83b7\u53d6label\u7684\u540d\u79f0\n\n    \nbestFeatLabel\n \n=\n \nlabels\n[\nbestFeat\n]\n\n    \n# \u521d\u59cb\u5316myTree\n\n    \nmyTree\n \n=\n \n{\nbestFeatLabel\n:\n \n{}}\n\n    \n# \u6ce8\uff1alabels\u5217\u8868\u662f\u53ef\u53d8\u5bf9\u8c61\uff0c\u5728PYTHON\u51fd\u6570\u4e2d\u4f5c\u4e3a\u53c2\u6570\u65f6\u4f20\u5740\u5f15\u7528\uff0c\u80fd\u591f\u88ab\u5168\u5c40\u4fee\u6539\n\n    \n# \u6240\u4ee5\u8fd9\u884c\u4ee3\u7801\u5bfc\u81f4\u51fd\u6570\u5916\u7684\u540c\u540d\u53d8\u91cf\u88ab\u5220\u9664\u4e86\u5143\u7d20\uff0c\u9020\u6210\u4f8b\u53e5\u65e0\u6cd5\u6267\u884c\uff0c\u63d0\u793a\nno surfacing\n is not in list\n\n    \ndel\n(\nlabels\n[\nbestFeat\n])\n\n    \n# \u53d6\u51fa\u6700\u4f18\u5217\uff0c\u7136\u540e\u5b83\u7684branch\u505a\u5206\u7c7b\n\n    \nfeatValues\n \n=\n \n[\nexample\n[\nbestFeat\n]\n \nfor\n \nexample\n \nin\n \ndataSet\n]\n\n    \nuniqueVals\n \n=\n \nset\n(\nfeatValues\n)\n\n    \nfor\n \nvalue\n \nin\n \nuniqueVals\n:\n\n        \n# \u6c42\u51fa\u5269\u4f59\u7684\u6807\u7b7elabel\n\n        \nsubLabels\n \n=\n \nlabels\n[:]\n\n        \n# \u904d\u5386\u5f53\u524d\u9009\u62e9\u7279\u5f81\u5305\u542b\u7684\u6240\u6709\u5c5e\u6027\u503c\uff0c\u5728\u6bcf\u4e2a\u6570\u636e\u96c6\u5212\u5206\u4e0a\u9012\u5f52\u8c03\u7528\u51fd\u6570createTree()\n\n        \nmyTree\n[\nbestFeatLabel\n][\nvalue\n]\n \n=\n \ncreateTree\n(\nsplitDataSet\n(\ndataSet\n,\n \nbestFeat\n,\n \nvalue\n),\n \nsubLabels\n)\n\n        \n# print \nmyTree\n, value, myTree\n\n    \nreturn\n \nmyTree\n\n\n\n\n\n\n\n\u6d4b\u8bd5\u7b97\u6cd5\uff1a\u4f7f\u7528\u51b3\u7b56\u6811\u6267\u884c\u5206\u7c7b\n\n\n\n\ndef\n \nclassify\n(\ninputTree\n,\n \nfeatLabels\n,\n \ntestVec\n):\n\n    \nclassify(\u7ed9\u8f93\u5165\u7684\u8282\u70b9\uff0c\u8fdb\u884c\u5206\u7c7b)\n\n\n\n    Args:\n\n\n        inputTree  \u51b3\u7b56\u6811\u6a21\u578b\n\n\n        featLabels Feature\u6807\u7b7e\u5bf9\u5e94\u7684\u540d\u79f0\n\n\n        testVec    \u6d4b\u8bd5\u8f93\u5165\u7684\u6570\u636e\n\n\n    Returns:\n\n\n        classLabel \u5206\u7c7b\u7684\u7ed3\u679c\u503c\uff0c\u9700\u8981\u6620\u5c04label\u624d\u80fd\u77e5\u9053\u540d\u79f0\n\n\n    \n\n    \n# \u83b7\u53d6tree\u7684\u6839\u8282\u70b9\u5bf9\u4e8e\u7684key\u503c\n\n    \nfirstStr\n \n=\n \ninputTree\n.\nkeys\n()[\n0\n]\n\n    \n# \u901a\u8fc7key\u5f97\u5230\u6839\u8282\u70b9\u5bf9\u5e94\u7684value\n\n    \nsecondDict\n \n=\n \ninputTree\n[\nfirstStr\n]\n\n    \n# \u5224\u65ad\u6839\u8282\u70b9\u540d\u79f0\u83b7\u53d6\u6839\u8282\u70b9\u5728label\u4e2d\u7684\u5148\u540e\u987a\u5e8f\uff0c\u8fd9\u6837\u5c31\u77e5\u9053\u8f93\u5165\u7684testVec\u600e\u4e48\u5f00\u59cb\u5bf9\u7167\u6811\u6765\u505a\u5206\u7c7b\n\n    \nfeatIndex\n \n=\n \nfeatLabels\n.\nindex\n(\nfirstStr\n)\n\n    \n# \u6d4b\u8bd5\u6570\u636e\uff0c\u627e\u5230\u6839\u8282\u70b9\u5bf9\u5e94\u7684label\u4f4d\u7f6e\uff0c\u4e5f\u5c31\u77e5\u9053\u4ece\u8f93\u5165\u7684\u6570\u636e\u7684\u7b2c\u51e0\u4f4d\u6765\u5f00\u59cb\u5206\u7c7b\n\n    \nkey\n \n=\n \ntestVec\n[\nfeatIndex\n]\n\n    \nvalueOfFeat\n \n=\n \nsecondDict\n[\nkey\n]\n\n    \nprint\n \n+++\n,\n \nfirstStr\n,\n \nxxx\n,\n \nsecondDict\n,\n \n---\n,\n \nkey\n,\n \n,\n \nvalueOfFeat\n\n    \n# \u5224\u65ad\u5206\u679d\u662f\u5426\u7ed3\u675f: \u5224\u65advalueOfFeat\u662f\u5426\u662fdict\u7c7b\u578b\n\n    \nif\n \nisinstance\n(\nvalueOfFeat\n,\n \ndict\n):\n\n        \nclassLabel\n \n=\n \nclassify\n(\nvalueOfFeat\n,\n \nfeatLabels\n,\n \ntestVec\n)\n\n    \nelse\n:\n\n        \nclassLabel\n \n=\n \nvalueOfFeat\n\n    \nreturn\n \nclassLabel\n\n\n\n\n\n\n\n\u4f7f\u7528\u7b97\u6cd5\uff1a\u6b64\u6b65\u9aa4\u53ef\u4ee5\u9002\u7528\u4e8e\u4efb\u4f55\u76d1\u7763\u5b66\u4e60\u4efb\u52a1\uff0c\u800c\u4f7f\u7528\u51b3\u7b56\u6811\u53ef\u4ee5\u66f4\u597d\u5730\u7406\u89e3\u6570\u636e\u7684\u5185\u5728\u542b\u4e49\u3002\n\n\n\n\n\u9879\u76ee\u6848\u4f8b2: \u4f7f\u7528\u51b3\u7b56\u6811\u9884\u6d4b\u9690\u5f62\u773c\u955c\u7c7b\u578b\n\n\n\u5b8c\u6574\u4ee3\u7801\u5730\u5740\n: \nhttps://github.com/apachecn/MachineLearning/blob/master/src/python/3.DecisionTree/DecisionTree.py\n\n\n\u9879\u76ee\u6982\u8ff0\n\n\n\u9690\u5f62\u773c\u955c\u7c7b\u578b\u5305\u62ec\u786c\u6750\u8d28\u3001\u8f6f\u6750\u8d28\u4ee5\u53ca\u4e0d\u9002\u5408\u4f69\u6234\u9690\u5f62\u773c\u955c\u3002\u6211\u4eec\u9700\u8981\u4f7f\u7528\u51b3\u7b56\u6811\u9884\u6d4b\u60a3\u8005\u9700\u8981\u4f69\u6234\u7684\u9690\u5f62\u773c\u955c\u7c7b\u578b\u3002\n\n\n\u5f00\u53d1\u6d41\u7a0b\n\n\n\n\n\u6536\u96c6\u6570\u636e: \u63d0\u4f9b\u7684\u6587\u672c\u6587\u4ef6\u3002\n\n\n\u89e3\u6790\u6570\u636e: \u89e3\u6790 tab \u952e\u5206\u9694\u7684\u6570\u636e\u884c\n\n\n\u5206\u6790\u6570\u636e: \u5feb\u901f\u68c0\u67e5\u6570\u636e\uff0c\u786e\u4fdd\u6b63\u786e\u5730\u89e3\u6790\u6570\u636e\u5185\u5bb9\uff0c\u4f7f\u7528 createPlot() \u51fd\u6570\u7ed8\u5236\u6700\u7ec8\u7684\u6811\u5f62\u56fe\u3002\n\n\n\u8bad\u7ec3\u7b97\u6cd5: \u4f7f\u7528 createTree() \u51fd\u6570\u3002\n\n\n\u6d4b\u8bd5\u7b97\u6cd5: \u7f16\u5199\u6d4b\u8bd5\u51fd\u6570\u9a8c\u8bc1\u51b3\u7b56\u6811\u53ef\u4ee5\u6b63\u786e\u5206\u7c7b\u7ed9\u5b9a\u7684\u6570\u636e\u5b9e\u4f8b\u3002\n\n\n\u4f7f\u7528\u7b97\u6cd5: \u5b58\u50a8\u6811\u7684\u6570\u636e\u7ed3\u6784\uff0c\u4ee5\u4fbf\u4e0b\u6b21\u4f7f\u7528\u65f6\u65e0\u9700\u91cd\u65b0\u6784\u9020\u6811\u3002\n\n\n\n\n\n\n\u6536\u96c6\u6570\u636e\uff1a\u63d0\u4f9b\u7684\u6587\u672c\u6587\u4ef6\n\n\n\n\n\u6587\u672c\u6587\u4ef6\u6570\u636e\u683c\u5f0f\u5982\u4e0b\uff1a\n\n\nyoung   myope   no  reduced no lenses\npre myope   no  reduced no lenses\npresbyopic  myope   no  reduced no lenses\n\n\n\n\n\n\n\u89e3\u6790\u6570\u636e\uff1a\u89e3\u6790 tab \u952e\u5206\u9694\u7684\u6570\u636e\u884c\n\n\n\n\nlecses\n \n=\n \n[\ninst\n.\nstrip\n()\n.\nsplit\n(\n\\t\n)\n \nfor\n \ninst\n \nin\n \nfr\n.\nreadlines\n()]\n\n\nlensesLabels\n \n=\n \n[\nage\n,\n \nprescript\n,\n \nastigmatic\n,\n \ntearRate\n]\n\n\n\n\n\n\n\n\u5206\u6790\u6570\u636e\uff1a\u5feb\u901f\u68c0\u67e5\u6570\u636e\uff0c\u786e\u4fdd\u6b63\u786e\u5730\u89e3\u6790\u6570\u636e\u5185\u5bb9\uff0c\u4f7f\u7528 createPlot() \u51fd\u6570\u7ed8\u5236\u6700\u7ec8\u7684\u6811\u5f62\u56fe\u3002\n\n\n\n\n \ntreePlotter\n.\ncreatePlot\n(\nlensesTree\n)\n\n\n\n\n\n\n\n\u8bad\u7ec3\u7b97\u6cd5\uff1a\u4f7f\u7528 createTree() \u51fd\u6570\n\n\n\n\n \nlensesTree\n \n=\n \ntrees\n.\ncreateTree\n(\nlenses\n,\n \nlensesLabels\n)\n\n\n \nlensesTree\n\n\n{\ntearRate\n:\n \n{\nreduced\n:\n \nno lenses\n,\n \nnormal\n:\n \n{\nastigmatic\n:{\nyes\n:\n\n\n{\nprescript\n:{\nhyper\n:{\nage\n:{\npre\n:\nno lenses\n,\n \npresbyopic\n:\n\n\nno lenses\n,\n \nyoung\n:\nhard\n}},\n \nmyope\n:\nhard\n}},\n \nno\n:{\nage\n:{\npre\n:\n\n\nsoft\n,\n \npresbyopic\n:{\nprescript\n:\n \n{\nhyper\n:\nsoft\n,\n \nmyope\n:\n\n\nno lenses\n}},\n \nyoung\n:\nsoft\n}}}}}\n\n\n\n\n\n\n\n\u6d4b\u8bd5\u7b97\u6cd5: \u7f16\u5199\u6d4b\u8bd5\u51fd\u6570\u9a8c\u8bc1\u51b3\u7b56\u6811\u53ef\u4ee5\u6b63\u786e\u5206\u7c7b\u7ed9\u5b9a\u7684\u6570\u636e\u5b9e\u4f8b\u3002\n\n\n\u4f7f\u7528\u7b97\u6cd5: \u5b58\u50a8\u6811\u7684\u6570\u636e\u7ed3\u6784\uff0c\u4ee5\u4fbf\u4e0b\u6b21\u4f7f\u7528\u65f6\u65e0\u9700\u91cd\u65b0\u6784\u9020\u6811\u3002\n\n\n\n\n\u4f7f\u7528 pickle \u6a21\u5757\u5b58\u50a8\u51b3\u7b56\u6811\n\n\ndef\n \nstoreTree\n(\ninputTree\n,\n \nfilename\n):\n\n    \nimpory\n \npickle\n\n    \nfw\n \n=\n \nopen\n(\nfilename\n,\n \nwb\n)\n\n    \npickle\n.\ndump\n(\ninputTree\n,\n \nfw\n)\n\n    \nfw\n.\nclose\n()\n\n\n\ndef\n \ngrabTree\n(\nfilename\n):\n\n    \nimport\n \npickle\n\n    \nfr\n \n=\n \nopen\n(\nfilename\n,\n \nrb\n)\n\n    \nreturn\n \npickle\n.\nload\n(\nfr\n)\n\n\n\n\n\n\n\n\n\n\u4f5c\u8005\uff1a\n\u7247\u523b\n \n\u5c0f\u7476\n\n\nGitHub\u5730\u5740\n: \nhttps://github.com/apachecn/MachineLearning\n\n\n\u7248\u6743\u58f0\u660e\uff1a\u6b22\u8fce\u8f6c\u8f7d\u5b66\u4e60 =\n \u8bf7\u6807\u6ce8\u4fe1\u606f\u6765\u6e90\u4e8e \nApacheCN", 
            "title": "3.\u51b3\u7b56\u6811"
        }, 
        {
            "location": "/\u4e66\u7c4d/\u673a\u5668\u5b66\u4e60\u5b9e\u6218/03.\u51b3\u7b56\u6811/#3", 
            "text": "", 
            "title": "\u7b2c3\u7ae0 \u51b3\u7b56\u6811"
        }, 
        {
            "location": "/\u4e66\u7c4d/\u673a\u5668\u5b66\u4e60\u5b9e\u6218/03.\u51b3\u7b56\u6811/#_1", 
            "text": "\u51b3\u7b56\u6811\uff08Decision Tree\uff09\u7b97\u6cd5\u662f\u4e00\u79cd\u57fa\u672c\u7684\u5206\u7c7b\u4e0e\u56de\u5f52\u65b9\u6cd5\uff0c\u662f\u6700\u7ecf\u5e38\u4f7f\u7528\u7684\u6570\u636e\u6316\u6398\u7b97\u6cd5\u4e4b\u4e00\u3002\u6211\u4eec\u8fd9\u7ae0\u8282\u53ea\u8ba8\u8bba\u7528\u4e8e\u5206\u7c7b\u7684\u51b3\u7b56\u6811\u3002  \u51b3\u7b56\u6811\u6a21\u578b\u5448\u6811\u5f62\u7ed3\u6784\uff0c\u5728\u5206\u7c7b\u95ee\u9898\u4e2d\uff0c\u8868\u793a\u57fa\u4e8e\u7279\u5f81\u5bf9\u5b9e\u4f8b\u8fdb\u884c\u5206\u7c7b\u7684\u8fc7\u7a0b\u3002\u5b83\u53ef\u4ee5\u8ba4\u4e3a\u662f if-then \u89c4\u5219\u7684\u96c6\u5408\uff0c\u4e5f\u53ef\u4ee5\u8ba4\u4e3a\u662f\u5b9a\u4e49\u5728\u7279\u5f81\u7a7a\u95f4\u4e0e\u7c7b\u7a7a\u95f4\u4e0a\u7684\u6761\u4ef6\u6982\u7387\u5206\u5e03\u3002  \u51b3\u7b56\u6811\u5b66\u4e60\u901a\u5e38\u5305\u62ec 3 \u4e2a\u6b65\u9aa4\uff1a\u7279\u5f81\u9009\u62e9\u3001\u51b3\u7b56\u6811\u7684\u751f\u6210\u548c\u51b3\u7b56\u6811\u7684\u4fee\u526a\u3002", 
            "title": "\u51b3\u7b56\u6811 \u6982\u8ff0"
        }, 
        {
            "location": "/\u4e66\u7c4d/\u673a\u5668\u5b66\u4e60\u5b9e\u6218/03.\u51b3\u7b56\u6811/#_2", 
            "text": "\u4e00\u4e2a\u53eb\u505a \"\u4e8c\u5341\u4e2a\u95ee\u9898\" \u7684\u6e38\u620f\uff0c\u6e38\u620f\u7684\u89c4\u5219\u5f88\u7b80\u5355\uff1a\u53c2\u4e0e\u6e38\u620f\u7684\u4e00\u65b9\u5728\u8111\u6d77\u4e2d\u60f3\u67d0\u4e2a\u4e8b\u7269\uff0c\u5176\u4ed6\u53c2\u4e0e\u8005\u5411\u4ed6\u63d0\u95ee\uff0c\u53ea\u5141\u8bb8\u63d0 20 \u4e2a\u95ee\u9898\uff0c\u95ee\u9898\u7684\u7b54\u6848\u4e5f\u53ea\u80fd\u7528\u5bf9\u6216\u9519\u56de\u7b54\u3002\u95ee\u95ee\u9898\u7684\u4eba\u901a\u8fc7\u63a8\u65ad\u5206\u89e3\uff0c\u9010\u6b65\u7f29\u5c0f\u5f85\u731c\u6d4b\u4e8b\u7269\u7684\u8303\u56f4\uff0c\u6700\u540e\u5f97\u5230\u6e38\u620f\u7684\u7b54\u6848\u3002  \u4e00\u4e2a\u90ae\u4ef6\u5206\u7c7b\u7cfb\u7edf\uff0c\u5927\u81f4\u5de5\u4f5c\u6d41\u7a0b\u5982\u4e0b\uff1a   \u9996\u5148\u68c0\u6d4b\u53d1\u9001\u90ae\u4ef6\u57df\u540d\u5730\u5740\u3002\u5982\u679c\u5730\u5740\u4e3a myEmployer.com, \u5219\u5c06\u5176\u653e\u5728\u5206\u7c7b  \u65e0\u804a\u65f6\u9700\u8981\u9605\u8bfb\u7684\u90ae\u4ef6 \u4e2d\u3002\n\u5982\u679c\u90ae\u4ef6\u4e0d\u662f\u6765\u81ea\u8fd9\u4e2a\u57df\u540d\uff0c\u5219\u68c0\u6d4b\u90ae\u4ef6\u5185\u5bb9\u91cc\u662f\u5426\u5305\u542b\u5355\u8bcd  \u66f2\u68cd\u7403  , \u5982\u679c\u5305\u542b\u5219\u5c06\u90ae\u4ef6\u5f52\u7c7b\u5230  \u9700\u8981\u53ca\u65f6\u5904\u7406\u7684\u670b\u53cb\u90ae\u4ef6 , \n\u5982\u679c\u4e0d\u5305\u542b\u5219\u5c06\u90ae\u4ef6\u5f52\u7c7b\u5230  \u65e0\u9700\u9605\u8bfb\u7684\u5783\u573e\u90ae\u4ef6  \u3002  \u51b3\u7b56\u6811\u7684\u5b9a\u4e49\uff1a  \u5206\u7c7b\u51b3\u7b56\u6811\u6a21\u578b\u662f\u4e00\u79cd\u63cf\u8ff0\u5bf9\u5b9e\u4f8b\u8fdb\u884c\u5206\u7c7b\u7684\u6811\u5f62\u7ed3\u6784\u3002\u51b3\u7b56\u6811\u7531\u7ed3\u70b9\uff08node\uff09\u548c\u6709\u5411\u8fb9\uff08directed edge\uff09\u7ec4\u6210\u3002\u7ed3\u70b9\u6709\u4e24\u79cd\u7c7b\u578b\uff1a\u5185\u90e8\u7ed3\u70b9\uff08internal node\uff09\u548c\u53f6\u7ed3\u70b9\uff08leaf node\uff09\u3002\u5185\u90e8\u7ed3\u70b9\u8868\u793a\u4e00\u4e2a\u7279\u5f81\u6216\u5c5e\u6027(features)\uff0c\u53f6\u7ed3\u70b9\u8868\u793a\u4e00\u4e2a\u7c7b(labels)\u3002  \u7528\u51b3\u7b56\u6811\u5bf9\u9700\u8981\u6d4b\u8bd5\u7684\u5b9e\u4f8b\u8fdb\u884c\u5206\u7c7b\uff1a\u4ece\u6839\u8282\u70b9\u5f00\u59cb\uff0c\u5bf9\u5b9e\u4f8b\u7684\u67d0\u4e00\u7279\u5f81\u8fdb\u884c\u6d4b\u8bd5\uff0c\u6839\u636e\u6d4b\u8bd5\u7ed3\u679c\uff0c\u5c06\u5b9e\u4f8b\u5206\u914d\u5230\u5176\u5b50\u7ed3\u70b9\uff1b\u8fd9\u65f6\uff0c\u6bcf\u4e00\u4e2a\u5b50\u7ed3\u70b9\u5bf9\u5e94\u7740\u8be5\u7279\u5f81\u7684\u4e00\u4e2a\u53d6\u503c\u3002\u5982\u6b64\u9012\u5f52\u5730\u5bf9\u5b9e\u4f8b\u8fdb\u884c\u6d4b\u8bd5\u5e76\u5206\u914d\uff0c\u76f4\u81f3\u8fbe\u5230\u53f6\u7ed3\u70b9\u3002\u6700\u540e\u5c06\u5b9e\u4f8b\u5206\u914d\u5230\u53f6\u7ed3\u70b9\u7684\u7c7b\u4e2d\u3002", 
            "title": "\u51b3\u7b56\u6811 \u573a\u666f"
        }, 
        {
            "location": "/\u4e66\u7c4d/\u673a\u5668\u5b66\u4e60\u5b9e\u6218/03.\u51b3\u7b56\u6811/#_3", 
            "text": "", 
            "title": "\u51b3\u7b56\u6811 \u539f\u7406"
        }, 
        {
            "location": "/\u4e66\u7c4d/\u673a\u5668\u5b66\u4e60\u5b9e\u6218/03.\u51b3\u7b56\u6811/#_4", 
            "text": "", 
            "title": "\u51b3\u7b56\u6811 \u987b\u77e5\u6982\u5ff5"
        }, 
        {
            "location": "/\u4e66\u7c4d/\u673a\u5668\u5b66\u4e60\u5b9e\u6218/03.\u51b3\u7b56\u6811/#_5", 
            "text": "\u71b5\uff08entropy\uff09\uff1a\n\u71b5\u6307\u7684\u662f\u4f53\u7cfb\u7684\u6df7\u4e71\u7684\u7a0b\u5ea6\uff0c\u5728\u4e0d\u540c\u7684\u5b66\u79d1\u4e2d\u4e5f\u6709\u5f15\u7533\u51fa\u7684\u66f4\u4e3a\u5177\u4f53\u7684\u5b9a\u4e49\uff0c\u662f\u5404\u9886\u57df\u5341\u5206\u91cd\u8981\u7684\u53c2\u91cf\u3002  \u4fe1\u606f\u8bba\uff08information theory\uff09\u4e2d\u7684\u71b5\uff08\u9999\u519c\u71b5\uff09\uff1a\n\u662f\u4e00\u79cd\u4fe1\u606f\u7684\u5ea6\u91cf\u65b9\u5f0f\uff0c\u8868\u793a\u4fe1\u606f\u7684\u6df7\u4e71\u7a0b\u5ea6\uff0c\u4e5f\u5c31\u662f\u8bf4\uff1a\u4fe1\u606f\u8d8a\u6709\u5e8f\uff0c\u4fe1\u606f\u71b5\u8d8a\u4f4e\u3002\u4f8b\u5982\uff1a\u706b\u67f4\u6709\u5e8f\u653e\u5728\u706b\u67f4\u76d2\u91cc\uff0c\u71b5\u503c\u5f88\u4f4e\uff0c\u76f8\u53cd\uff0c\u71b5\u503c\u5f88\u9ad8\u3002  \u4fe1\u606f\u589e\u76ca\uff08information gain\uff09\uff1a\n\u5728\u5212\u5206\u6570\u636e\u96c6\u524d\u540e\u4fe1\u606f\u53d1\u751f\u7684\u53d8\u5316\u79f0\u4e3a\u4fe1\u606f\u589e\u76ca\u3002", 
            "title": "\u4fe1\u606f\u71b5 &amp; \u4fe1\u606f\u589e\u76ca"
        }, 
        {
            "location": "/\u4e66\u7c4d/\u673a\u5668\u5b66\u4e60\u5b9e\u6218/03.\u51b3\u7b56\u6811/#_6", 
            "text": "\u5982\u4f55\u6784\u9020\u4e00\u4e2a\u51b3\u7b56\u6811? \n\u6211\u4eec\u4f7f\u7528 createBranch() \u65b9\u6cd5\uff0c\u5982\u4e0b\u6240\u793a\uff1a  def createBranch(): \n\u6b64\u5904\u8fd0\u7528\u4e86\u8fed\u4ee3\u7684\u601d\u60f3\u3002 \u611f\u5174\u8da3\u53ef\u4ee5\u641c\u7d22 \u8fed\u4ee3 recursion\uff0c \u751a\u81f3\u662f dynamic programing\u3002 \n    \u68c0\u6d4b\u6570\u636e\u96c6\u4e2d\u7684\u6240\u6709\u6570\u636e\u7684\u5206\u7c7b\u6807\u7b7e\u662f\u5426\u76f8\u540c:\n        If so return \u7c7b\u6807\u7b7e\n        Else:\n            \u5bfb\u627e\u5212\u5206\u6570\u636e\u96c6\u7684\u6700\u597d\u7279\u5f81\uff08\u5212\u5206\u4e4b\u540e\u4fe1\u606f\u71b5\u6700\u5c0f\uff0c\u4e5f\u5c31\u662f\u4fe1\u606f\u589e\u76ca\u6700\u5927\u7684\u7279\u5f81\uff09\n            \u5212\u5206\u6570\u636e\u96c6\n            \u521b\u5efa\u5206\u652f\u8282\u70b9\n                for \u6bcf\u4e2a\u5212\u5206\u7684\u5b50\u96c6\n                    \u8c03\u7528\u51fd\u6570 createBranch \uff08\u521b\u5efa\u5206\u652f\u7684\u51fd\u6570\uff09\u5e76\u589e\u52a0\u8fd4\u56de\u7ed3\u679c\u5230\u5206\u652f\u8282\u70b9\u4e2d\n            return \u5206\u652f\u8282\u70b9", 
            "title": "\u51b3\u7b56\u6811 \u5de5\u4f5c\u539f\u7406"
        }, 
        {
            "location": "/\u4e66\u7c4d/\u673a\u5668\u5b66\u4e60\u5b9e\u6218/03.\u51b3\u7b56\u6811/#_7", 
            "text": "\u6536\u96c6\u6570\u636e\uff1a\u53ef\u4ee5\u4f7f\u7528\u4efb\u4f55\u65b9\u6cd5\u3002\n\u51c6\u5907\u6570\u636e\uff1a\u6811\u6784\u9020\u7b97\u6cd5 (\u8fd9\u91cc\u4f7f\u7528\u7684\u662fID3\u7b97\u6cd5\uff0c\u53ea\u9002\u7528\u4e8e\u6807\u79f0\u578b\u6570\u636e\uff0c\u8fd9\u5c31\u662f\u4e3a\u4ec0\u4e48\u6570\u503c\u578b\u6570\u636e\u5fc5\u987b\u79bb\u6563\u5316\u3002 \u8fd8\u6709\u5176\u4ed6\u7684\u6811\u6784\u9020\u7b97\u6cd5\uff0c\u6bd4\u5982CART)\n\u5206\u6790\u6570\u636e\uff1a\u53ef\u4ee5\u4f7f\u7528\u4efb\u4f55\u65b9\u6cd5\uff0c\u6784\u9020\u6811\u5b8c\u6210\u4e4b\u540e\uff0c\u6211\u4eec\u5e94\u8be5\u68c0\u67e5\u56fe\u5f62\u662f\u5426\u7b26\u5408\u9884\u671f\u3002\n\u8bad\u7ec3\u7b97\u6cd5\uff1a\u6784\u9020\u6811\u7684\u6570\u636e\u7ed3\u6784\u3002\n\u6d4b\u8bd5\u7b97\u6cd5\uff1a\u4f7f\u7528\u8bad\u7ec3\u597d\u7684\u6811\u8ba1\u7b97\u9519\u8bef\u7387\u3002\n\u4f7f\u7528\u7b97\u6cd5\uff1a\u6b64\u6b65\u9aa4\u53ef\u4ee5\u9002\u7528\u4e8e\u4efb\u4f55\u76d1\u7763\u5b66\u4e60\u4efb\u52a1\uff0c\u800c\u4f7f\u7528\u51b3\u7b56\u6811\u53ef\u4ee5\u66f4\u597d\u5730\u7406\u89e3\u6570\u636e\u7684\u5185\u5728\u542b\u4e49\u3002", 
            "title": "\u51b3\u7b56\u6811 \u5f00\u53d1\u6d41\u7a0b"
        }, 
        {
            "location": "/\u4e66\u7c4d/\u673a\u5668\u5b66\u4e60\u5b9e\u6218/03.\u51b3\u7b56\u6811/#_8", 
            "text": "\u4f18\u70b9\uff1a\u8ba1\u7b97\u590d\u6742\u5ea6\u4e0d\u9ad8\uff0c\u8f93\u51fa\u7ed3\u679c\u6613\u4e8e\u7406\u89e3\uff0c\u6570\u636e\u6709\u7f3a\u5931\u4e5f\u80fd\u8dd1\uff0c\u53ef\u4ee5\u5904\u7406\u4e0d\u76f8\u5173\u7279\u5f81\u3002\n\u7f3a\u70b9\uff1a\u5bb9\u6613\u8fc7\u62df\u5408\u3002\n\u9002\u7528\u6570\u636e\u7c7b\u578b\uff1a\u6570\u503c\u578b\u548c\u6807\u79f0\u578b\u3002", 
            "title": "\u51b3\u7b56\u6811 \u7b97\u6cd5\u7279\u70b9"
        }, 
        {
            "location": "/\u4e66\u7c4d/\u673a\u5668\u5b66\u4e60\u5b9e\u6218/03.\u51b3\u7b56\u6811/#_9", 
            "text": "", 
            "title": "\u51b3\u7b56\u6811 \u9879\u76ee\u6848\u4f8b"
        }, 
        {
            "location": "/\u4e66\u7c4d/\u673a\u5668\u5b66\u4e60\u5b9e\u6218/03.\u51b3\u7b56\u6811/#1", 
            "text": "", 
            "title": "\u9879\u76ee\u6848\u4f8b1: \u5224\u5b9a\u9c7c\u7c7b\u548c\u975e\u9c7c\u7c7b"
        }, 
        {
            "location": "/\u4e66\u7c4d/\u673a\u5668\u5b66\u4e60\u5b9e\u6218/03.\u51b3\u7b56\u6811/#_10", 
            "text": "\u6839\u636e\u4ee5\u4e0b 2 \u4e2a\u7279\u5f81\uff0c\u5c06\u52a8\u7269\u5206\u6210\u4e24\u7c7b\uff1a\u9c7c\u7c7b\u548c\u975e\u9c7c\u7c7b\u3002  \u7279\u5f81\uff1a\n1. \u4e0d\u6d6e\u51fa\u6c34\u9762\u662f\u5426\u53ef\u4ee5\u751f\u5b58\n2. \u662f\u5426\u6709\u811a\u8e7c", 
            "title": "\u9879\u76ee\u6982\u8ff0"
        }, 
        {
            "location": "/\u4e66\u7c4d/\u673a\u5668\u5b66\u4e60\u5b9e\u6218/03.\u51b3\u7b56\u6811/#_11", 
            "text": "\u5b8c\u6574\u4ee3\u7801\u5730\u5740 :  https://github.com/apachecn/MachineLearning/blob/master/src/python/3.DecisionTree/DecisionTree.py  \u6536\u96c6\u6570\u636e\uff1a\u53ef\u4ee5\u4f7f\u7528\u4efb\u4f55\u65b9\u6cd5\n\u51c6\u5907\u6570\u636e\uff1a\u6811\u6784\u9020\u7b97\u6cd5\uff08\u8fd9\u91cc\u4f7f\u7528\u7684\u662fID3\u7b97\u6cd5\uff0c\u56e0\u6b64\u6570\u503c\u578b\u6570\u636e\u5fc5\u987b\u79bb\u6563\u5316\u3002\uff09\n\u5206\u6790\u6570\u636e\uff1a\u53ef\u4ee5\u4f7f\u7528\u4efb\u4f55\u65b9\u6cd5\uff0c\u6784\u9020\u6811\u5b8c\u6210\u4e4b\u540e\uff0c\u6211\u4eec\u53ef\u4ee5\u5c06\u6811\u753b\u51fa\u6765\u3002\n\u8bad\u7ec3\u7b97\u6cd5\uff1a\u6784\u9020\u6811\u7ed3\u6784\n\u6d4b\u8bd5\u7b97\u6cd5\uff1a\u4f7f\u7528\u4e60\u5f97\u7684\u51b3\u7b56\u6811\u6267\u884c\u5206\u7c7b\n\u4f7f\u7528\u7b97\u6cd5\uff1a\u6b64\u6b65\u9aa4\u53ef\u4ee5\u9002\u7528\u4e8e\u4efb\u4f55\u76d1\u7763\u5b66\u4e60\u4efb\u52a1\uff0c\u800c\u4f7f\u7528\u51b3\u7b56\u6811\u53ef\u4ee5\u66f4\u597d\u5730\u7406\u89e3\u6570\u636e\u7684\u5185\u5728\u542b\u4e49   \u6536\u96c6\u6570\u636e\uff1a\u53ef\u4ee5\u4f7f\u7528\u4efb\u4f55\u65b9\u6cd5    \u6211\u4eec\u5229\u7528 createDataSet() \u51fd\u6570\u8f93\u5165\u6570\u636e  def   createDataSet (): \n     dataSet   =   [[ 1 ,   1 ,   yes ], \n             [ 1 ,   1 ,   yes ], \n             [ 1 ,   0 ,   no ], \n             [ 0 ,   1 ,   no ], \n             [ 0 ,   1 ,   no ]] \n     labels   =   [ no surfacing ,   flippers ] \n     return   dataSet ,   labels    \u51c6\u5907\u6570\u636e\uff1a\u6811\u6784\u9020\u7b97\u6cd5   \u6b64\u5904\uff0c\u7531\u4e8e\u6211\u4eec\u8f93\u5165\u7684\u6570\u636e\u672c\u8eab\u5c31\u662f\u79bb\u6563\u5316\u6570\u636e\uff0c\u6240\u4ee5\u8fd9\u4e00\u6b65\u5c31\u7701\u7565\u4e86\u3002   \u5206\u6790\u6570\u636e\uff1a\u53ef\u4ee5\u4f7f\u7528\u4efb\u4f55\u65b9\u6cd5\uff0c\u6784\u9020\u6811\u5b8c\u6210\u4e4b\u540e\uff0c\u6211\u4eec\u53ef\u4ee5\u5c06\u6811\u753b\u51fa\u6765\u3002    \u8ba1\u7b97\u7ed9\u5b9a\u6570\u636e\u96c6\u7684\u9999\u519c\u71b5\u7684\u51fd\u6570  def   calcShannonEnt ( dataSet ): \n     # \u6c42list\u7684\u957f\u5ea6\uff0c\u8868\u793a\u8ba1\u7b97\u53c2\u4e0e\u8bad\u7ec3\u7684\u6570\u636e\u91cf \n     numEntries   =   len ( dataSet ) \n     # \u8ba1\u7b97\u5206\u7c7b\u6807\u7b7elabel\u51fa\u73b0\u7684\u6b21\u6570 \n     labelCounts   =   {} \n     # the the number of unique elements and their occurrence \n     for   featVec   in   dataSet : \n         # \u5c06\u5f53\u524d\u5b9e\u4f8b\u7684\u6807\u7b7e\u5b58\u50a8\uff0c\u5373\u6bcf\u4e00\u884c\u6570\u636e\u7684\u6700\u540e\u4e00\u4e2a\u6570\u636e\u4ee3\u8868\u7684\u662f\u6807\u7b7e \n         currentLabel   =   featVec [ - 1 ] \n         # \u4e3a\u6240\u6709\u53ef\u80fd\u7684\u5206\u7c7b\u521b\u5efa\u5b57\u5178\uff0c\u5982\u679c\u5f53\u524d\u7684\u952e\u503c\u4e0d\u5b58\u5728\uff0c\u5219\u6269\u5c55\u5b57\u5178\u5e76\u5c06\u5f53\u524d\u952e\u503c\u52a0\u5165\u5b57\u5178\u3002\u6bcf\u4e2a\u952e\u503c\u90fd\u8bb0\u5f55\u4e86\u5f53\u524d\u7c7b\u522b\u51fa\u73b0\u7684\u6b21\u6570\u3002 \n         if   currentLabel   not   in   labelCounts . keys (): \n             labelCounts [ currentLabel ]   =   0 \n         labelCounts [ currentLabel ]   +=   1 \n\n     # \u5bf9\u4e8e label \u6807\u7b7e\u7684\u5360\u6bd4\uff0c\u6c42\u51fa label \u6807\u7b7e\u7684\u9999\u519c\u71b5 \n     shannonEnt   =   0.0 \n     for   key   in   labelCounts : \n         # \u4f7f\u7528\u6240\u6709\u7c7b\u6807\u7b7e\u7684\u53d1\u751f\u9891\u7387\u8ba1\u7b97\u7c7b\u522b\u51fa\u73b0\u7684\u6982\u7387\u3002 \n         prob   =   float ( labelCounts [ key ]) / numEntries \n         # \u8ba1\u7b97\u9999\u519c\u71b5\uff0c\u4ee5 2 \u4e3a\u5e95\u6c42\u5bf9\u6570 \n         shannonEnt   -=   prob   *   log ( prob ,   2 ) \n     return   shannonEnt   \u6309\u7167\u7ed9\u5b9a\u7279\u5f81\u5212\u5206\u6570\u636e\u96c6  \u5c06\u6307\u5b9a\u7279\u5f81\u7684\u7279\u5f81\u503c\u7b49\u4e8e value \u7684\u884c\u5269\u4e0b\u5217\u4f5c\u4e3a\u5b50\u6570\u636e\u96c6\u3002  def   splitDataSet ( dataSet ,   index ,   value ): \n     splitDataSet(\u901a\u8fc7\u904d\u5386dataSet\u6570\u636e\u96c6\uff0c\u6c42\u51faindex\u5bf9\u5e94\u7684colnum\u5217\u7684\u503c\u4e3avalue\u7684\u884c)          \u5c31\u662f\u4f9d\u636eindex\u5217\u8fdb\u884c\u5206\u7c7b\uff0c\u5982\u679cindex\u5217\u7684\u6570\u636e\u7b49\u4e8e value\u7684\u65f6\u5019\uff0c\u5c31\u8981\u5c06 index \u5212\u5206\u5230\u6211\u4eec\u521b\u5efa\u7684\u65b0\u7684\u6570\u636e\u96c6\u4e2d      Args:          dataSet \u6570\u636e\u96c6                 \u5f85\u5212\u5206\u7684\u6570\u636e\u96c6          index \u8868\u793a\u6bcf\u4e00\u884c\u7684index\u5217        \u5212\u5206\u6570\u636e\u96c6\u7684\u7279\u5f81          value \u8868\u793aindex\u5217\u5bf9\u5e94\u7684value\u503c   \u9700\u8981\u8fd4\u56de\u7684\u7279\u5f81\u7684\u503c\u3002      Returns:          index\u5217\u4e3avalue\u7684\u6570\u636e\u96c6\u3010\u8be5\u6570\u636e\u96c6\u9700\u8981\u6392\u9664index\u5217\u3011       \n     retDataSet   =   [] \n     for   featVec   in   dataSet :  \n         # index\u5217\u4e3avalue\u7684\u6570\u636e\u96c6\u3010\u8be5\u6570\u636e\u96c6\u9700\u8981\u6392\u9664index\u5217\u3011 \n         # \u5224\u65adindex\u5217\u7684\u503c\u662f\u5426\u4e3avalue \n         if   featVec [ index ]   ==   value : \n             # chop out index used for splitting \n             # [:index]\u8868\u793a\u524dindex\u884c\uff0c\u5373\u82e5 index \u4e3a2\uff0c\u5c31\u662f\u53d6 featVec \u7684\u524d index \u884c \n             reducedFeatVec   =   featVec [: index ] \n                          \u8bf7\u767e\u5ea6\u67e5\u8be2\u4e00\u4e0b\uff1a extend\u548cappend\u7684\u533a\u522b              music_media.append(object) \u5411\u5217\u8868\u4e2d\u6dfb\u52a0\u4e00\u4e2a\u5bf9\u8c61object   \u00a0 \u00a0 \u00a0 \u00a0 \u00a0 \u00a0music_media.extend(sequence) \u628a\u4e00\u4e2a\u5e8f\u5217seq\u7684\u5185\u5bb9\u6dfb\u52a0\u5230\u5217\u8868\u4e2d (\u8ddf += \u5728list\u8fd0\u7528\u7c7b\u4f3c\uff0c music_media += sequence)   \u00a0 \u00a0 \u00a0 \u00a0 \u00a0 \u00a01\u3001\u4f7f\u7528append\u7684\u65f6\u5019\uff0c\u662f\u5c06object\u770b\u4f5c\u4e00\u4e2a\u5bf9\u8c61\uff0c\u6574\u4f53\u6253\u5305\u6dfb\u52a0\u5230music_media\u5bf9\u8c61\u4e2d\u3002              2\u3001\u4f7f\u7528extend\u7684\u65f6\u5019\uff0c\u662f\u5c06sequence\u770b\u4f5c\u4e00\u4e2a\u5e8f\u5217\uff0c\u5c06\u8fd9\u4e2a\u5e8f\u5217\u548cmusic_media\u5e8f\u5217\u5408\u5e76\uff0c\u5e76\u653e\u5728\u5176\u540e\u9762\u3002              music_media = []              music_media.extend([1,2,3])              print music_media   \u00a0 \u00a0 \u00a0 \u00a0 \u00a0 \u00a0#\u7ed3\u679c\uff1a   \u00a0 \u00a0 \u00a0 \u00a0 \u00a0 \u00a0#[1, 2, 3]              music_media.append([4,5,6])              print music_media              #\u7ed3\u679c\uff1a   \u00a0 \u00a0 \u00a0 \u00a0 \u00a0 \u00a0#[1, 2, 3, [4, 5, 6]]              music_media.extend([7,8,9])              print music_media              #\u7ed3\u679c\uff1a   \u00a0 \u00a0 \u00a0 \u00a0 \u00a0 \u00a0#[1, 2, 3, [4, 5, 6], 7, 8, 9]               \n             reducedFeatVec . extend ( featVec [ index + 1 :]) \n             # [index+1:]\u8868\u793a\u4ece\u8df3\u8fc7 index \u7684 index+1\u884c\uff0c\u53d6\u63a5\u4e0b\u6765\u7684\u6570\u636e \n             # \u6536\u96c6\u7ed3\u679c\u503c index\u5217\u4e3avalue\u7684\u884c\u3010\u8be5\u884c\u9700\u8981\u6392\u9664index\u5217\u3011 \n             retDataSet . append ( reducedFeatVec ) \n     return   retDataSet   \u9009\u62e9\u6700\u597d\u7684\u6570\u636e\u96c6\u5212\u5206\u65b9\u5f0f  def   chooseBestFeatureToSplit ( dataSet ): \n     chooseBestFeatureToSplit(\u9009\u62e9\u6700\u597d\u7684\u7279\u5f81)      Args:          dataSet \u6570\u636e\u96c6      Returns:          bestFeature \u6700\u4f18\u7684\u7279\u5f81\u5217       \n     # \u6c42\u7b2c\u4e00\u884c\u6709\u591a\u5c11\u5217\u7684 Feature, \u6700\u540e\u4e00\u5217\u662flabel\u5217\u561b \n     numFeatures   =   len ( dataSet [ 0 ])   -   1 \n     # \u6570\u636e\u96c6\u7684\u539f\u59cb\u4fe1\u606f\u71b5 \n     baseEntropy   =   calcShannonEnt ( dataSet ) \n     # \u6700\u4f18\u7684\u4fe1\u606f\u589e\u76ca\u503c, \u548c\u6700\u4f18\u7684Featurn\u7f16\u53f7 \n     bestInfoGain ,   bestFeature   =   0.0 ,   - 1 \n     # iterate over all the features \n     for   i   in   range ( numFeatures ): \n         # create a list of all the examples of this feature \n         # \u83b7\u53d6\u5bf9\u5e94\u7684feature\u4e0b\u7684\u6240\u6709\u6570\u636e \n         featList   =   [ example [ i ]   for   example   in   dataSet ] \n         # get a set of unique values \n         # \u83b7\u53d6\u5254\u91cd\u540e\u7684\u96c6\u5408\uff0c\u4f7f\u7528set\u5bf9list\u6570\u636e\u8fdb\u884c\u53bb\u91cd \n         uniqueVals   =   set ( featList ) \n         # \u521b\u5efa\u4e00\u4e2a\u4e34\u65f6\u7684\u4fe1\u606f\u71b5 \n         newEntropy   =   0.0 \n         # \u904d\u5386\u67d0\u4e00\u5217\u7684value\u96c6\u5408\uff0c\u8ba1\u7b97\u8be5\u5217\u7684\u4fe1\u606f\u71b5  \n         # \u904d\u5386\u5f53\u524d\u7279\u5f81\u4e2d\u7684\u6240\u6709\u552f\u4e00\u5c5e\u6027\u503c\uff0c\u5bf9\u6bcf\u4e2a\u552f\u4e00\u5c5e\u6027\u503c\u5212\u5206\u4e00\u6b21\u6570\u636e\u96c6\uff0c\u8ba1\u7b97\u6570\u636e\u96c6\u7684\u65b0\u71b5\u503c\uff0c\u5e76\u5bf9\u6240\u6709\u552f\u4e00\u7279\u5f81\u503c\u5f97\u5230\u7684\u71b5\u6c42\u548c\u3002 \n         for   value   in   uniqueVals : \n             subDataSet   =   splitDataSet ( dataSet ,   i ,   value ) \n             # \u8ba1\u7b97\u6982\u7387 \n             prob   =   len ( subDataSet ) / float ( len ( dataSet )) \n             # \u8ba1\u7b97\u4fe1\u606f\u71b5 \n             newEntropy   +=   prob   *   calcShannonEnt ( subDataSet ) \n         # gain[\u4fe1\u606f\u589e\u76ca]: \u5212\u5206\u6570\u636e\u96c6\u524d\u540e\u7684\u4fe1\u606f\u53d8\u5316\uff0c \u83b7\u53d6\u4fe1\u606f\u71b5\u6700\u5927\u7684\u503c \n         # \u4fe1\u606f\u589e\u76ca\u662f\u71b5\u7684\u51cf\u5c11\u6216\u8005\u662f\u6570\u636e\u65e0\u5e8f\u5ea6\u7684\u51cf\u5c11\u3002\u6700\u540e\uff0c\u6bd4\u8f83\u6240\u6709\u7279\u5f81\u4e2d\u7684\u4fe1\u606f\u589e\u76ca\uff0c\u8fd4\u56de\u6700\u597d\u7279\u5f81\u5212\u5206\u7684\u7d22\u5f15\u503c\u3002 \n         infoGain   =   baseEntropy   -   newEntropy \n         print   infoGain= ,   infoGain ,   bestFeature= ,   i ,   baseEntropy ,   newEntropy \n         if   ( infoGain     bestInfoGain ): \n             bestInfoGain   =   infoGain \n             bestFeature   =   i \n     return   bestFeature   \u95ee\uff1a\u4e0a\u9762\u7684 newEntropy \u4e3a\u4ec0\u4e48\u662f\u6839\u636e\u5b50\u96c6\u8ba1\u7b97\u7684\u5462\uff1f\n\u7b54\uff1a\u56e0\u4e3a\u6211\u4eec\u5728\u6839\u636e\u4e00\u4e2a\u7279\u5f81\u8ba1\u7b97\u9999\u519c\u71b5\u7684\u65f6\u5019\uff0c\u8be5\u7279\u5f81\u7684\u5206\u7c7b\u503c\u662f\u76f8\u540c\uff0c\u8fd9\u4e2a\u7279\u5f81\u8fd9\u4e2a\u5206\u7c7b\u7684\u9999\u519c\u71b5\u4e3a 0\uff1b\n\u8fd9\u5c31\u662f\u4e3a\u4ec0\u4e48\u8ba1\u7b97\u65b0\u7684\u9999\u519c\u71b5\u7684\u65f6\u5019\u4f7f\u7528\u7684\u662f\u5b50\u96c6\u3002   \u8bad\u7ec3\u7b97\u6cd5\uff1a\u6784\u9020\u6811\u7684\u6570\u636e\u7ed3\u6784   \u521b\u5efa\u6811\u7684\u51fd\u6570\u4ee3\u7801\u5982\u4e0b\uff1a  def   createTree ( dataSet ,   labels ): \n     classList   =   [ example [ - 1 ]   for   example   in   dataSet ] \n     # \u5982\u679c\u6570\u636e\u96c6\u7684\u6700\u540e\u4e00\u5217\u7684\u7b2c\u4e00\u4e2a\u503c\u51fa\u73b0\u7684\u6b21\u6570=\u6574\u4e2a\u96c6\u5408\u7684\u6570\u91cf\uff0c\u4e5f\u5c31\u8bf4\u53ea\u6709\u4e00\u4e2a\u7c7b\u522b\uff0c\u5c31\u53ea\u76f4\u63a5\u8fd4\u56de\u7ed3\u679c\u5c31\u884c \n     # \u7b2c\u4e00\u4e2a\u505c\u6b62\u6761\u4ef6\uff1a\u6240\u6709\u7684\u7c7b\u6807\u7b7e\u5b8c\u5168\u76f8\u540c\uff0c\u5219\u76f4\u63a5\u8fd4\u56de\u8be5\u7c7b\u6807\u7b7e\u3002 \n     # count() \u51fd\u6570\u662f\u7edf\u8ba1\u62ec\u53f7\u4e2d\u7684\u503c\u5728list\u4e2d\u51fa\u73b0\u7684\u6b21\u6570 \n     if   classList . count ( classList [ 0 ])   ==   len ( classList ): \n         return   classList [ 0 ] \n     # \u5982\u679c\u6570\u636e\u96c6\u53ea\u67091\u5217\uff0c\u90a3\u4e48\u6700\u521d\u51fa\u73b0label\u6b21\u6570\u6700\u591a\u7684\u4e00\u7c7b\uff0c\u4f5c\u4e3a\u7ed3\u679c \n     # \u7b2c\u4e8c\u4e2a\u505c\u6b62\u6761\u4ef6\uff1a\u4f7f\u7528\u5b8c\u4e86\u6240\u6709\u7279\u5f81\uff0c\u4ecd\u7136\u4e0d\u80fd\u5c06\u6570\u636e\u96c6\u5212\u5206\u6210\u4ec5\u5305\u542b\u552f\u4e00\u7c7b\u522b\u7684\u5206\u7ec4\u3002 \n     if   len ( dataSet [ 0 ])   ==   1 : \n         return   majorityCnt ( classList ) \n\n     # \u9009\u62e9\u6700\u4f18\u7684\u5217\uff0c\u5f97\u5230\u6700\u4f18\u5217\u5bf9\u5e94\u7684label\u542b\u4e49 \n     bestFeat   =   chooseBestFeatureToSplit ( dataSet ) \n     # \u83b7\u53d6label\u7684\u540d\u79f0 \n     bestFeatLabel   =   labels [ bestFeat ] \n     # \u521d\u59cb\u5316myTree \n     myTree   =   { bestFeatLabel :   {}} \n     # \u6ce8\uff1alabels\u5217\u8868\u662f\u53ef\u53d8\u5bf9\u8c61\uff0c\u5728PYTHON\u51fd\u6570\u4e2d\u4f5c\u4e3a\u53c2\u6570\u65f6\u4f20\u5740\u5f15\u7528\uff0c\u80fd\u591f\u88ab\u5168\u5c40\u4fee\u6539 \n     # \u6240\u4ee5\u8fd9\u884c\u4ee3\u7801\u5bfc\u81f4\u51fd\u6570\u5916\u7684\u540c\u540d\u53d8\u91cf\u88ab\u5220\u9664\u4e86\u5143\u7d20\uff0c\u9020\u6210\u4f8b\u53e5\u65e0\u6cd5\u6267\u884c\uff0c\u63d0\u793a no surfacing  is not in list \n     del ( labels [ bestFeat ]) \n     # \u53d6\u51fa\u6700\u4f18\u5217\uff0c\u7136\u540e\u5b83\u7684branch\u505a\u5206\u7c7b \n     featValues   =   [ example [ bestFeat ]   for   example   in   dataSet ] \n     uniqueVals   =   set ( featValues ) \n     for   value   in   uniqueVals : \n         # \u6c42\u51fa\u5269\u4f59\u7684\u6807\u7b7elabel \n         subLabels   =   labels [:] \n         # \u904d\u5386\u5f53\u524d\u9009\u62e9\u7279\u5f81\u5305\u542b\u7684\u6240\u6709\u5c5e\u6027\u503c\uff0c\u5728\u6bcf\u4e2a\u6570\u636e\u96c6\u5212\u5206\u4e0a\u9012\u5f52\u8c03\u7528\u51fd\u6570createTree() \n         myTree [ bestFeatLabel ][ value ]   =   createTree ( splitDataSet ( dataSet ,   bestFeat ,   value ),   subLabels ) \n         # print  myTree , value, myTree \n     return   myTree    \u6d4b\u8bd5\u7b97\u6cd5\uff1a\u4f7f\u7528\u51b3\u7b56\u6811\u6267\u884c\u5206\u7c7b   def   classify ( inputTree ,   featLabels ,   testVec ): \n     classify(\u7ed9\u8f93\u5165\u7684\u8282\u70b9\uff0c\u8fdb\u884c\u5206\u7c7b)      Args:          inputTree  \u51b3\u7b56\u6811\u6a21\u578b          featLabels Feature\u6807\u7b7e\u5bf9\u5e94\u7684\u540d\u79f0          testVec    \u6d4b\u8bd5\u8f93\u5165\u7684\u6570\u636e      Returns:          classLabel \u5206\u7c7b\u7684\u7ed3\u679c\u503c\uff0c\u9700\u8981\u6620\u5c04label\u624d\u80fd\u77e5\u9053\u540d\u79f0       \n     # \u83b7\u53d6tree\u7684\u6839\u8282\u70b9\u5bf9\u4e8e\u7684key\u503c \n     firstStr   =   inputTree . keys ()[ 0 ] \n     # \u901a\u8fc7key\u5f97\u5230\u6839\u8282\u70b9\u5bf9\u5e94\u7684value \n     secondDict   =   inputTree [ firstStr ] \n     # \u5224\u65ad\u6839\u8282\u70b9\u540d\u79f0\u83b7\u53d6\u6839\u8282\u70b9\u5728label\u4e2d\u7684\u5148\u540e\u987a\u5e8f\uff0c\u8fd9\u6837\u5c31\u77e5\u9053\u8f93\u5165\u7684testVec\u600e\u4e48\u5f00\u59cb\u5bf9\u7167\u6811\u6765\u505a\u5206\u7c7b \n     featIndex   =   featLabels . index ( firstStr ) \n     # \u6d4b\u8bd5\u6570\u636e\uff0c\u627e\u5230\u6839\u8282\u70b9\u5bf9\u5e94\u7684label\u4f4d\u7f6e\uff0c\u4e5f\u5c31\u77e5\u9053\u4ece\u8f93\u5165\u7684\u6570\u636e\u7684\u7b2c\u51e0\u4f4d\u6765\u5f00\u59cb\u5206\u7c7b \n     key   =   testVec [ featIndex ] \n     valueOfFeat   =   secondDict [ key ] \n     print   +++ ,   firstStr ,   xxx ,   secondDict ,   --- ,   key ,   ,   valueOfFeat \n     # \u5224\u65ad\u5206\u679d\u662f\u5426\u7ed3\u675f: \u5224\u65advalueOfFeat\u662f\u5426\u662fdict\u7c7b\u578b \n     if   isinstance ( valueOfFeat ,   dict ): \n         classLabel   =   classify ( valueOfFeat ,   featLabels ,   testVec ) \n     else : \n         classLabel   =   valueOfFeat \n     return   classLabel    \u4f7f\u7528\u7b97\u6cd5\uff1a\u6b64\u6b65\u9aa4\u53ef\u4ee5\u9002\u7528\u4e8e\u4efb\u4f55\u76d1\u7763\u5b66\u4e60\u4efb\u52a1\uff0c\u800c\u4f7f\u7528\u51b3\u7b56\u6811\u53ef\u4ee5\u66f4\u597d\u5730\u7406\u89e3\u6570\u636e\u7684\u5185\u5728\u542b\u4e49\u3002", 
            "title": "\u5f00\u53d1\u6d41\u7a0b"
        }, 
        {
            "location": "/\u4e66\u7c4d/\u673a\u5668\u5b66\u4e60\u5b9e\u6218/03.\u51b3\u7b56\u6811/#2", 
            "text": "\u5b8c\u6574\u4ee3\u7801\u5730\u5740 :  https://github.com/apachecn/MachineLearning/blob/master/src/python/3.DecisionTree/DecisionTree.py", 
            "title": "\u9879\u76ee\u6848\u4f8b2: \u4f7f\u7528\u51b3\u7b56\u6811\u9884\u6d4b\u9690\u5f62\u773c\u955c\u7c7b\u578b"
        }, 
        {
            "location": "/\u4e66\u7c4d/\u673a\u5668\u5b66\u4e60\u5b9e\u6218/03.\u51b3\u7b56\u6811/#_12", 
            "text": "\u9690\u5f62\u773c\u955c\u7c7b\u578b\u5305\u62ec\u786c\u6750\u8d28\u3001\u8f6f\u6750\u8d28\u4ee5\u53ca\u4e0d\u9002\u5408\u4f69\u6234\u9690\u5f62\u773c\u955c\u3002\u6211\u4eec\u9700\u8981\u4f7f\u7528\u51b3\u7b56\u6811\u9884\u6d4b\u60a3\u8005\u9700\u8981\u4f69\u6234\u7684\u9690\u5f62\u773c\u955c\u7c7b\u578b\u3002", 
            "title": "\u9879\u76ee\u6982\u8ff0"
        }, 
        {
            "location": "/\u4e66\u7c4d/\u673a\u5668\u5b66\u4e60\u5b9e\u6218/03.\u51b3\u7b56\u6811/#_13", 
            "text": "\u6536\u96c6\u6570\u636e: \u63d0\u4f9b\u7684\u6587\u672c\u6587\u4ef6\u3002  \u89e3\u6790\u6570\u636e: \u89e3\u6790 tab \u952e\u5206\u9694\u7684\u6570\u636e\u884c  \u5206\u6790\u6570\u636e: \u5feb\u901f\u68c0\u67e5\u6570\u636e\uff0c\u786e\u4fdd\u6b63\u786e\u5730\u89e3\u6790\u6570\u636e\u5185\u5bb9\uff0c\u4f7f\u7528 createPlot() \u51fd\u6570\u7ed8\u5236\u6700\u7ec8\u7684\u6811\u5f62\u56fe\u3002  \u8bad\u7ec3\u7b97\u6cd5: \u4f7f\u7528 createTree() \u51fd\u6570\u3002  \u6d4b\u8bd5\u7b97\u6cd5: \u7f16\u5199\u6d4b\u8bd5\u51fd\u6570\u9a8c\u8bc1\u51b3\u7b56\u6811\u53ef\u4ee5\u6b63\u786e\u5206\u7c7b\u7ed9\u5b9a\u7684\u6570\u636e\u5b9e\u4f8b\u3002  \u4f7f\u7528\u7b97\u6cd5: \u5b58\u50a8\u6811\u7684\u6570\u636e\u7ed3\u6784\uff0c\u4ee5\u4fbf\u4e0b\u6b21\u4f7f\u7528\u65f6\u65e0\u9700\u91cd\u65b0\u6784\u9020\u6811\u3002    \u6536\u96c6\u6570\u636e\uff1a\u63d0\u4f9b\u7684\u6587\u672c\u6587\u4ef6   \u6587\u672c\u6587\u4ef6\u6570\u636e\u683c\u5f0f\u5982\u4e0b\uff1a  young   myope   no  reduced no lenses\npre myope   no  reduced no lenses\npresbyopic  myope   no  reduced no lenses   \u89e3\u6790\u6570\u636e\uff1a\u89e3\u6790 tab \u952e\u5206\u9694\u7684\u6570\u636e\u884c   lecses   =   [ inst . strip () . split ( \\t )   for   inst   in   fr . readlines ()]  lensesLabels   =   [ age ,   prescript ,   astigmatic ,   tearRate ]    \u5206\u6790\u6570\u636e\uff1a\u5feb\u901f\u68c0\u67e5\u6570\u636e\uff0c\u786e\u4fdd\u6b63\u786e\u5730\u89e3\u6790\u6570\u636e\u5185\u5bb9\uff0c\u4f7f\u7528 createPlot() \u51fd\u6570\u7ed8\u5236\u6700\u7ec8\u7684\u6811\u5f62\u56fe\u3002     treePlotter . createPlot ( lensesTree )    \u8bad\u7ec3\u7b97\u6cd5\uff1a\u4f7f\u7528 createTree() \u51fd\u6570     lensesTree   =   trees . createTree ( lenses ,   lensesLabels )    lensesTree  { tearRate :   { reduced :   no lenses ,   normal :   { astigmatic :{ yes :  { prescript :{ hyper :{ age :{ pre : no lenses ,   presbyopic :  no lenses ,   young : hard }},   myope : hard }},   no :{ age :{ pre :  soft ,   presbyopic :{ prescript :   { hyper : soft ,   myope :  no lenses }},   young : soft }}}}}    \u6d4b\u8bd5\u7b97\u6cd5: \u7f16\u5199\u6d4b\u8bd5\u51fd\u6570\u9a8c\u8bc1\u51b3\u7b56\u6811\u53ef\u4ee5\u6b63\u786e\u5206\u7c7b\u7ed9\u5b9a\u7684\u6570\u636e\u5b9e\u4f8b\u3002  \u4f7f\u7528\u7b97\u6cd5: \u5b58\u50a8\u6811\u7684\u6570\u636e\u7ed3\u6784\uff0c\u4ee5\u4fbf\u4e0b\u6b21\u4f7f\u7528\u65f6\u65e0\u9700\u91cd\u65b0\u6784\u9020\u6811\u3002   \u4f7f\u7528 pickle \u6a21\u5757\u5b58\u50a8\u51b3\u7b56\u6811  def   storeTree ( inputTree ,   filename ): \n     impory   pickle \n     fw   =   open ( filename ,   wb ) \n     pickle . dump ( inputTree ,   fw ) \n     fw . close ()  def   grabTree ( filename ): \n     import   pickle \n     fr   =   open ( filename ,   rb ) \n     return   pickle . load ( fr )     \u4f5c\u8005\uff1a \u7247\u523b   \u5c0f\u7476  GitHub\u5730\u5740 :  https://github.com/apachecn/MachineLearning  \u7248\u6743\u58f0\u660e\uff1a\u6b22\u8fce\u8f6c\u8f7d\u5b66\u4e60 =  \u8bf7\u6807\u6ce8\u4fe1\u606f\u6765\u6e90\u4e8e  ApacheCN", 
            "title": "\u5f00\u53d1\u6d41\u7a0b"
        }, 
        {
            "location": "/\u4e66\u7c4d/\u673a\u5668\u5b66\u4e60\u5b9e\u6218/04.\u6734\u7d20\u8d1d\u53f6\u65af/", 
            "text": "\u7b2c4\u7ae0 \u57fa\u4e8e\u6982\u7387\u8bba\u7684\u5206\u7c7b\u65b9\u6cd5\uff1a\u6734\u7d20\u8d1d\u53f6\u65af\n\n\n\u6734\u7d20\u8d1d\u53f6\u65af \u6982\u8ff0\n\n\n\u8d1d\u53f6\u65af\u5206\u7c7b\u662f\u4e00\u7c7b\u5206\u7c7b\u7b97\u6cd5\u7684\u603b\u79f0\uff0c\u8fd9\u7c7b\u7b97\u6cd5\u5747\u4ee5\u8d1d\u53f6\u65af\u5b9a\u7406\u4e3a\u57fa\u7840\uff0c\u6545\u7edf\u79f0\u4e3a\u8d1d\u53f6\u65af\u5206\u7c7b\u3002\u672c\u7ae0\u9996\u5148\u4ecb\u7ecd\u8d1d\u53f6\u65af\u5206\u7c7b\u7b97\u6cd5\u7684\u57fa\u7840\u2014\u2014\u8d1d\u53f6\u65af\u5b9a\u7406\u3002\u6700\u540e\uff0c\u6211\u4eec\u901a\u8fc7\u5b9e\u4f8b\u6765\u8ba8\u8bba\u8d1d\u53f6\u65af\u5206\u7c7b\u7684\u4e2d\u6700\u7b80\u5355\u7684\u4e00\u79cd: \u6734\u7d20\u8d1d\u53f6\u65af\u5206\u7c7b\u3002\n\n\n\u8d1d\u53f6\u65af\u7406\u8bba \n \u6761\u4ef6\u6982\u7387\n\n\n\u8d1d\u53f6\u65af\u7406\u8bba\n\n\n\u6211\u4eec\u73b0\u5728\u6709\u4e00\u4e2a\u6570\u636e\u96c6\uff0c\u5b83\u7531\u4e24\u7c7b\u6570\u636e\u7ec4\u6210\uff0c\u6570\u636e\u5206\u5e03\u5982\u4e0b\u56fe\u6240\u793a\uff1a\n\n\n\n\n\u6211\u4eec\u73b0\u5728\u7528 p1(x,y) \u8868\u793a\u6570\u636e\u70b9 (x,y) \u5c5e\u4e8e\u7c7b\u522b 1\uff08\u56fe\u4e2d\u7528\u5706\u70b9\u8868\u793a\u7684\u7c7b\u522b\uff09\u7684\u6982\u7387\uff0c\u7528 p2(x,y) \u8868\u793a\u6570\u636e\u70b9 (x,y) \u5c5e\u4e8e\u7c7b\u522b 2\uff08\u56fe\u4e2d\u4e09\u89d2\u5f62\u8868\u793a\u7684\u7c7b\u522b\uff09\u7684\u6982\u7387\uff0c\u90a3\u4e48\u5bf9\u4e8e\u4e00\u4e2a\u65b0\u6570\u636e\u70b9 (x,y)\uff0c\u53ef\u4ee5\u7528\u4e0b\u9762\u7684\u89c4\u5219\u6765\u5224\u65ad\u5b83\u7684\u7c7b\u522b\uff1a\n* \u5982\u679c p1(x,y) \n p2(x,y) \uff0c\u90a3\u4e48\u7c7b\u522b\u4e3a1\n* \u5982\u679c p2(x,y) \n p1(x,y) \uff0c\u90a3\u4e48\u7c7b\u522b\u4e3a2\n\n\n\u4e5f\u5c31\u662f\u8bf4\uff0c\u6211\u4eec\u4f1a\u9009\u62e9\u9ad8\u6982\u7387\u5bf9\u5e94\u7684\u7c7b\u522b\u3002\u8fd9\u5c31\u662f\u8d1d\u53f6\u65af\u51b3\u7b56\u7406\u8bba\u7684\u6838\u5fc3\u601d\u60f3\uff0c\u5373\u9009\u62e9\u5177\u6709\u6700\u9ad8\u6982\u7387\u7684\u51b3\u7b56\u3002\n\n\n\u6761\u4ef6\u6982\u7387\n\n\n\u5982\u679c\u4f60\u5bf9 p(x,y|c1) \u7b26\u53f7\u5f88\u719f\u6089\uff0c\u90a3\u4e48\u53ef\u4ee5\u8df3\u8fc7\u672c\u5c0f\u8282\u3002\n\n\n\u6709\u4e00\u4e2a\u88c5\u4e86 7 \u5757\u77f3\u5934\u7684\u7f50\u5b50\uff0c\u5176\u4e2d 3 \u5757\u662f\u767d\u8272\u7684\uff0c4 \u5757\u662f\u9ed1\u8272\u7684\u3002\u5982\u679c\u4ece\u7f50\u5b50\u4e2d\u968f\u673a\u53d6\u51fa\u4e00\u5757\u77f3\u5934\uff0c\u90a3\u4e48\u662f\u767d\u8272\u77f3\u5934\u7684\u53ef\u80fd\u6027\u662f\u591a\u5c11\uff1f\u7531\u4e8e\u53d6\u77f3\u5934\u6709 7 \u79cd\u53ef\u80fd\uff0c\u5176\u4e2d 3 \u79cd\u4e3a\u767d\u8272\uff0c\u6240\u4ee5\u53d6\u51fa\u767d\u8272\u77f3\u5934\u7684\u6982\u7387\u4e3a 3/7 \u3002\u90a3\u4e48\u53d6\u5230\u9ed1\u8272\u77f3\u5934\u7684\u6982\u7387\u53c8\u662f\u591a\u5c11\u5462\uff1f\u5f88\u663e\u7136\uff0c\u662f 4/7 \u3002\u6211\u4eec\u4f7f\u7528 P(white) \u6765\u8868\u793a\u53d6\u5230\u767d\u8272\u77f3\u5934\u7684\u6982\u7387\uff0c\u5176\u6982\u7387\u503c\u53ef\u4ee5\u901a\u8fc7\u767d\u8272\u77f3\u5934\u6570\u76ee\u9664\u4ee5\u603b\u7684\u77f3\u5934\u6570\u76ee\u6765\u5f97\u5230\u3002\n\n\n\n\n\u5982\u679c\u8fd9 7 \u5757\u77f3\u5934\u5982\u4e0b\u56fe\u6240\u793a\uff0c\u653e\u5728\u4e24\u4e2a\u6876\u4e2d\uff0c\u90a3\u4e48\u4e0a\u8ff0\u6982\u7387\u5e94\u8be5\u5982\u4f55\u8ba1\u7b97\uff1f\n\n\n\n\n\u8ba1\u7b97 P(white) \u6216\u8005 P(black) \uff0c\u5982\u679c\u4e8b\u5148\u6211\u4eec\u77e5\u9053\u77f3\u5934\u6240\u5728\u6876\u7684\u4fe1\u606f\u662f\u4f1a\u6539\u53d8\u7ed3\u679c\u7684\u3002\u8fd9\u5c31\u662f\u6240\u8c13\u7684\u6761\u4ef6\u6982\u7387\uff08conditional probablity\uff09\u3002\u5047\u5b9a\u8ba1\u7b97\u7684\u662f\u4ece B \u6876\u53d6\u5230\u767d\u8272\u77f3\u5934\u7684\u6982\u7387\uff0c\u8fd9\u4e2a\u6982\u7387\u53ef\u4ee5\u8bb0\u4f5c P(white|bucketB) \uff0c\u6211\u4eec\u79f0\u4e4b\u4e3a\u201c\u5728\u5df2\u77e5\u77f3\u5934\u51fa\u81ea B \u6876\u7684\u6761\u4ef6\u4e0b\uff0c\u53d6\u51fa\u767d\u8272\u77f3\u5934\u7684\u6982\u7387\u201d\u3002\u5f88\u5bb9\u6613\u5f97\u5230\uff0cP(white|bucketA) \u503c\u4e3a 2/4 \uff0cP(white|bucketB) \u7684\u503c\u4e3a \n \u3002\n\n\n\u6761\u4ef6\u6982\u7387\u7684\u8ba1\u7b97\u516c\u5f0f\u5982\u4e0b\uff1a\n\n\nP(white|bucketB) = P(white and bucketB) / P(bucketB)\n\n\n\u9996\u5148\uff0c\u6211\u4eec\u7528 B \u6876\u4e2d\u767d\u8272\u77f3\u5934\u7684\u4e2a\u6570\u9664\u4ee5\u4e24\u4e2a\u6876\u4e2d\u603b\u7684\u77f3\u5934\u6570\uff0c\u5f97\u5230 P(white and bucketB) = 1/7 .\u5176\u6b21\uff0c\u7531\u4e8e B \u6876\u4e2d\u6709 3 \u5757\u77f3\u5934\uff0c\u800c\u603b\u77f3\u5934\u6570\u4e3a 7 \uff0c\u4e8e\u662f P(bucketB) \u5c31\u7b49\u4e8e 3/7 \u3002\u4e8e\u662f\u53c8 P(white|bucketB) = P(white and bucketB) / P(bucketB) = (1/7) / (3/7) = \n \u3002\n\n\n\u53e6\u5916\u4e00\u79cd\u6709\u6548\u8ba1\u7b97\u6761\u4ef6\u6982\u7387\u7684\u65b9\u6cd5\u79f0\u4e3a\u8d1d\u53f6\u65af\u51c6\u5219\u3002\u8d1d\u53f6\u65af\u51c6\u5219\u544a\u8bc9\u6211\u4eec\u5982\u4f55\u4ea4\u6362\u6761\u4ef6\u6982\u7387\u4e2d\u7684\u6761\u4ef6\u4e0e\u7ed3\u679c\uff0c\u5373\u5982\u679c\u5df2\u77e5 P(x|c)\uff0c\u8981\u6c42 P(c|x)\uff0c\u90a3\u4e48\u53ef\u4ee5\u4f7f\u7528\u4e0b\u9762\u7684\u8ba1\u7b97\u65b9\u6cd5\uff1a\n\n\n\n\n\u4f7f\u7528\u6761\u4ef6\u6982\u7387\u6765\u5206\u7c7b\n\n\n\u4e0a\u9762\u6211\u4eec\u63d0\u5230\u8d1d\u53f6\u65af\u51b3\u7b56\u7406\u8bba\u8981\u6c42\u8ba1\u7b97\u4e24\u4e2a\u6982\u7387 p1(x, y) \u548c p2(x, y):\n* \u5982\u679c p1(x, y) \n p2(x, y), \u90a3\u4e48\u5c5e\u4e8e\u7c7b\u522b 1;\n* \u5982\u679c p2(x, y) \n p1(X, y), \u90a3\u4e48\u5c5e\u4e8e\u7c7b\u522b 2.\n\n\n\u8fd9\u5e76\u4e0d\u662f\u8d1d\u53f6\u65af\u51b3\u7b56\u7406\u8bba\u7684\u6240\u6709\u5185\u5bb9\u3002\u4f7f\u7528 p1() \u548c p2() \u53ea\u662f\u4e3a\u4e86\u5c3d\u53ef\u80fd\u7b80\u5316\u63cf\u8ff0\uff0c\u800c\u771f\u6b63\u9700\u8981\u8ba1\u7b97\u548c\u6bd4\u8f83\u7684\u662f p(c1|x, y) \u548c p(c2|x, y) .\u8fd9\u4e9b\u7b26\u53f7\u6240\u4ee3\u8868\u7684\u5177\u4f53\u610f\u4e49\u662f: \u7ed9\u5b9a\u67d0\u4e2a\u7531 x\u3001y \u8868\u793a\u7684\u6570\u636e\u70b9\uff0c\u90a3\u4e48\u8be5\u6570\u636e\u70b9\u6765\u81ea\u7c7b\u522b c1 \u7684\u6982\u7387\u662f\u591a\u5c11\uff1f\u6570\u636e\u70b9\u6765\u81ea\u7c7b\u522b c2 \u7684\u6982\u7387\u53c8\u662f\u591a\u5c11\uff1f\u6ce8\u610f\u8fd9\u4e9b\u6982\u7387\u4e0e\u6982\u7387 p(x, y|c1) \u5e76\u4e0d\u4e00\u6837\uff0c\u4e0d\u8fc7\u53ef\u4ee5\u4f7f\u7528\u8d1d\u53f6\u65af\u51c6\u5219\u6765\u4ea4\u6362\u6982\u7387\u4e2d\u6761\u4ef6\u4e0e\u7ed3\u679c\u3002\u5177\u4f53\u5730\uff0c\u5e94\u7528\u8d1d\u53f6\u65af\u51c6\u5219\u5f97\u5230: \n\n\n\n\n\u4f7f\u7528\u4e0a\u9762\u8fd9\u4e9b\u5b9a\u4e49\uff0c\u53ef\u4ee5\u5b9a\u4e49\u8d1d\u53f6\u65af\u5206\u7c7b\u51c6\u5219\u4e3a:\n* \u5982\u679c P(c1|x, y) \n P(c2|x, y), \u90a3\u4e48\u5c5e\u4e8e\u7c7b\u522b c1;\n* \u5982\u679c P(c2|x, y) \n P(c1|x, y), \u90a3\u4e48\u5c5e\u4e8e\u7c7b\u522b c2.\n\n\n\u5728\u6587\u6863\u5206\u7c7b\u4e2d\uff0c\u6574\u4e2a\u6587\u6863\uff08\u5982\u4e00\u5c01\u7535\u5b50\u90ae\u4ef6\uff09\u662f\u5b9e\u4f8b\uff0c\u800c\u7535\u5b50\u90ae\u4ef6\u4e2d\u7684\u67d0\u4e9b\u5143\u7d20\u5219\u6784\u6210\u7279\u5f81\u3002\u6211\u4eec\u53ef\u4ee5\u89c2\u5bdf\u6587\u6863\u4e2d\u51fa\u73b0\u7684\u8bcd\uff0c\u5e76\u628a\u6bcf\u4e2a\u8bcd\u4f5c\u4e3a\u4e00\u4e2a\u7279\u5f81\uff0c\u800c\u6bcf\u4e2a\u8bcd\u7684\u51fa\u73b0\u6216\u8005\u4e0d\u51fa\u73b0\u4f5c\u4e3a\u8be5\u7279\u5f81\u7684\u503c\uff0c\u8fd9\u6837\u5f97\u5230\u7684\u7279\u5f81\u6570\u76ee\u5c31\u4f1a\u8ddf\u8bcd\u6c47\u8868\u4e2d\u7684\u8bcd\u7684\u6570\u76ee\u4e00\u6837\u591a\u3002\n\n\n\u6211\u4eec\u5047\u8bbe\u7279\u5f81\u4e4b\u95f4  \n\u76f8\u4e92\u72ec\u7acb\n \u3002\u6240\u8c13 \n\u72ec\u7acb(independence)\n \u6307\u7684\u662f\u7edf\u8ba1\u610f\u4e49\u4e0a\u7684\u72ec\u7acb\uff0c\u5373\u4e00\u4e2a\u7279\u5f81\u6216\u8005\u5355\u8bcd\u51fa\u73b0\u7684\u53ef\u80fd\u6027\u4e0e\u5b83\u548c\u5176\u4ed6\u5355\u8bcd\u76f8\u90bb\u6ca1\u6709\u5173\u7cfb\uff0c\u6bd4\u5982\u8bf4\uff0c\u201c\u6211\u4eec\u201d\u4e2d\u7684\u201c\u6211\u201d\u548c\u201c\u4eec\u201d\u51fa\u73b0\u7684\u6982\u7387\u4e0e\u8fd9\u4e24\u4e2a\u5b57\u76f8\u90bb\u6ca1\u6709\u4efb\u4f55\u5173\u7cfb\u3002\u8fd9\u4e2a\u5047\u8bbe\u6b63\u662f\u6734\u7d20\u8d1d\u53f6\u65af\u5206\u7c7b\u5668\u4e2d \u6734\u7d20(naive) \u4e00\u8bcd\u7684\u542b\u4e49\u3002\u6734\u7d20\u8d1d\u53f6\u65af\u5206\u7c7b\u5668\u4e2d\u7684\u53e6\u4e00\u4e2a\u5047\u8bbe\u662f\uff0c\n\u6bcf\u4e2a\u7279\u5f81\u540c\u7b49\u91cd\u8981\n\u3002\n\n\nNote:\n \u6734\u7d20\u8d1d\u53f6\u65af\u5206\u7c7b\u5668\u901a\u5e38\u6709\u4e24\u79cd\u5b9e\u73b0\u65b9\u5f0f: \u4e00\u79cd\u57fa\u4e8e\u4f2f\u52aa\u5229\u6a21\u578b\u5b9e\u73b0\uff0c\u4e00\u79cd\u57fa\u4e8e\u591a\u9879\u5f0f\u6a21\u578b\u5b9e\u73b0\u3002\u8fd9\u91cc\u91c7\u7528\u524d\u4e00\u79cd\u5b9e\u73b0\u65b9\u5f0f\u3002\u8be5\u5b9e\u73b0\u65b9\u5f0f\u4e2d\u5e76\u4e0d\u8003\u8651\u8bcd\u5728\u6587\u6863\u4e2d\u51fa\u73b0\u7684\u6b21\u6570\uff0c\u53ea\u8003\u8651\u51fa\u4e0d\u51fa\u73b0\uff0c\u56e0\u6b64\u5728\u8fd9\u4e2a\u610f\u4e49\u4e0a\u76f8\u5f53\u4e8e\u5047\u8bbe\u8bcd\u662f\u7b49\u6743\u91cd\u7684\u3002\n\n\n\u6734\u7d20\u8d1d\u53f6\u65af \u573a\u666f\n\n\n\u673a\u5668\u5b66\u4e60\u7684\u4e00\u4e2a\u91cd\u8981\u5e94\u7528\u5c31\u662f\u6587\u6863\u7684\u81ea\u52a8\u5206\u7c7b\u3002\n\n\n\u5728\u6587\u6863\u5206\u7c7b\u4e2d\uff0c\u6574\u4e2a\u6587\u6863\uff08\u5982\u4e00\u5c01\u7535\u5b50\u90ae\u4ef6\uff09\u662f\u5b9e\u4f8b\uff0c\u800c\u7535\u5b50\u90ae\u4ef6\u4e2d\u7684\u67d0\u4e9b\u5143\u7d20\u5219\u6784\u6210\u7279\u5f81\u3002\u6211\u4eec\u53ef\u4ee5\u89c2\u5bdf\u6587\u6863\u4e2d\u51fa\u73b0\u7684\u8bcd\uff0c\u5e76\u628a\u6bcf\u4e2a\u8bcd\u4f5c\u4e3a\u4e00\u4e2a\u7279\u5f81\uff0c\u800c\u6bcf\u4e2a\u8bcd\u7684\u51fa\u73b0\u6216\u8005\u4e0d\u51fa\u73b0\u4f5c\u4e3a\u8be5\u7279\u5f81\u7684\u503c\uff0c\u8fd9\u6837\u5f97\u5230\u7684\u7279\u5f81\u6570\u76ee\u5c31\u4f1a\u8ddf\u8bcd\u6c47\u8868\u4e2d\u7684\u8bcd\u7684\u6570\u76ee\u4e00\u6837\u591a\u3002\n\n\n\u6734\u7d20\u8d1d\u53f6\u65af\u662f\u4e0a\u9762\u4ecb\u7ecd\u7684\u8d1d\u53f6\u65af\u5206\u7c7b\u5668\u7684\u4e00\u4e2a\u6269\u5c55\uff0c\u662f\u7528\u4e8e\u6587\u6863\u5206\u7c7b\u7684\u5e38\u7528\u7b97\u6cd5\u3002\u4e0b\u9762\u6211\u4eec\u4f1a\u8fdb\u884c\u4e00\u4e9b\u6734\u7d20\u8d1d\u53f6\u65af\u5206\u7c7b\u7684\u5b9e\u8df5\u9879\u76ee\u3002\n\n\n\u6734\u7d20\u8d1d\u53f6\u65af \u539f\u7406\n\n\n\u6734\u7d20\u8d1d\u53f6\u65af \u5de5\u4f5c\u539f\u7406\n\n\n\u63d0\u53d6\u6240\u6709\u6587\u6863\u4e2d\u7684\u8bcd\u6761\u5e76\u8fdb\u884c\u53bb\u91cd\n\u83b7\u53d6\u6587\u6863\u7684\u6240\u6709\u7c7b\u522b\n\u8ba1\u7b97\u6bcf\u4e2a\u7c7b\u522b\u4e2d\u7684\u6587\u6863\u6570\u76ee\n\u5bf9\u6bcf\u7bc7\u8bad\u7ec3\u6587\u6863: \n    \u5bf9\u6bcf\u4e2a\u7c7b\u522b: \n        \u5982\u679c\u8bcd\u6761\u51fa\u73b0\u5728\u6587\u6863\u4e2d--\n\u589e\u52a0\u8be5\u8bcd\u6761\u7684\u8ba1\u6570\u503c\uff08for\u5faa\u73af\u6216\u8005\u77e9\u9635\u76f8\u52a0\uff09\n        \u589e\u52a0\u6240\u6709\u8bcd\u6761\u7684\u8ba1\u6570\u503c\uff08\u6b64\u7c7b\u522b\u4e0b\u8bcd\u6761\u603b\u6570\uff09\n\u5bf9\u6bcf\u4e2a\u7c7b\u522b: \n    \u5bf9\u6bcf\u4e2a\u8bcd\u6761: \n        \u5c06\u8be5\u8bcd\u6761\u7684\u6570\u76ee\u9664\u4ee5\u603b\u8bcd\u6761\u6570\u76ee\u5f97\u5230\u7684\u6761\u4ef6\u6982\u7387\uff08P(\u8bcd\u6761|\u7c7b\u522b)\uff09\n\u8fd4\u56de\u8be5\u6587\u6863\u5c5e\u4e8e\u6bcf\u4e2a\u7c7b\u522b\u7684\u6761\u4ef6\u6982\u7387\uff08P(\u7c7b\u522b|\u6587\u6863\u7684\u6240\u6709\u8bcd\u6761)\uff09\n\n\n\n\n\u6734\u7d20\u8d1d\u53f6\u65af \u5f00\u53d1\u6d41\u7a0b\n\n\n\u6536\u96c6\u6570\u636e: \u53ef\u4ee5\u4f7f\u7528\u4efb\u4f55\u65b9\u6cd5\u3002\n\u51c6\u5907\u6570\u636e: \u9700\u8981\u6570\u503c\u578b\u6216\u8005\u5e03\u5c14\u578b\u6570\u636e\u3002\n\u5206\u6790\u6570\u636e: \u6709\u5927\u91cf\u7279\u5f81\u65f6\uff0c\u7ed8\u5236\u7279\u5f81\u4f5c\u7528\u4e0d\u5927\uff0c\u6b64\u65f6\u4f7f\u7528\u76f4\u65b9\u56fe\u6548\u679c\u66f4\u597d\u3002\n\u8bad\u7ec3\u7b97\u6cd5: \u8ba1\u7b97\u4e0d\u540c\u7684\u72ec\u7acb\u7279\u5f81\u7684\u6761\u4ef6\u6982\u7387\u3002\n\u6d4b\u8bd5\u7b97\u6cd5: \u8ba1\u7b97\u9519\u8bef\u7387\u3002\n\u4f7f\u7528\u7b97\u6cd5: \u4e00\u4e2a\u5e38\u89c1\u7684\u6734\u7d20\u8d1d\u53f6\u65af\u5e94\u7528\u662f\u6587\u6863\u5206\u7c7b\u3002\u53ef\u4ee5\u5728\u4efb\u610f\u7684\u5206\u7c7b\u573a\u666f\u4e2d\u4f7f\u7528\u6734\u7d20\u8d1d\u53f6\u65af\u5206\u7c7b\u5668\uff0c\u4e0d\u4e00\u5b9a\u975e\u8981\u662f\u6587\u672c\u3002\n\n\n\n\n\u6734\u7d20\u8d1d\u53f6\u65af \u7b97\u6cd5\u7279\u70b9\n\n\n\u4f18\u70b9: \u5728\u6570\u636e\u8f83\u5c11\u7684\u60c5\u51b5\u4e0b\u4ecd\u7136\u6709\u6548\uff0c\u53ef\u4ee5\u5904\u7406\u591a\u7c7b\u522b\u95ee\u9898\u3002\n\u7f3a\u70b9: \u5bf9\u4e8e\u8f93\u5165\u6570\u636e\u7684\u51c6\u5907\u65b9\u5f0f\u8f83\u4e3a\u654f\u611f\u3002\n\u9002\u7528\u6570\u636e\u7c7b\u578b: \u6807\u79f0\u578b\u6570\u636e\u3002\n\n\n\n\n\u6734\u7d20\u8d1d\u53f6\u65af \u9879\u76ee\u6848\u4f8b\n\n\n\u9879\u76ee\u6848\u4f8b1: \u5c4f\u853d\u793e\u533a\u7559\u8a00\u677f\u7684\u4fae\u8fb1\u6027\u8a00\u8bba\n\n\n\u9879\u76ee\u6982\u8ff0\n\n\n\u6784\u5efa\u4e00\u4e2a\u5feb\u901f\u8fc7\u6ee4\u5668\u6765\u5c4f\u853d\u5728\u7ebf\u793e\u533a\u7559\u8a00\u677f\u4e0a\u7684\u4fae\u8fb1\u6027\u8a00\u8bba\u3002\u5982\u679c\u67d0\u6761\u7559\u8a00\u4f7f\u7528\u4e86\u8d1f\u9762\u6216\u8005\u4fae\u8fb1\u6027\u7684\u8bed\u8a00\uff0c\u90a3\u4e48\u5c31\u5c06\u8be5\u7559\u8a00\u6807\u8bc6\u4e3a\u5185\u5bb9\u4e0d\u5f53\u3002\u5bf9\u6b64\u95ee\u9898\u5efa\u7acb\u4e24\u4e2a\u7c7b\u522b: \u4fae\u8fb1\u7c7b\u548c\u975e\u4fae\u8fb1\u7c7b\uff0c\u4f7f\u7528 1 \u548c 0 \u5206\u522b\u8868\u793a\u3002\n\n\n\u5f00\u53d1\u6d41\u7a0b\n\n\n\u6536\u96c6\u6570\u636e: \u53ef\u4ee5\u4f7f\u7528\u4efb\u4f55\u65b9\u6cd5\n\u51c6\u5907\u6570\u636e: \u4ece\u6587\u672c\u4e2d\u6784\u5efa\u8bcd\u5411\u91cf\n\u5206\u6790\u6570\u636e: \u68c0\u67e5\u8bcd\u6761\u786e\u4fdd\u89e3\u6790\u7684\u6b63\u786e\u6027\n\u8bad\u7ec3\u7b97\u6cd5: \u4ece\u8bcd\u5411\u91cf\u8ba1\u7b97\u6982\u7387\n\u6d4b\u8bd5\u7b97\u6cd5: \u6839\u636e\u73b0\u5b9e\u60c5\u51b5\u4fee\u6539\u5206\u7c7b\u5668\n\u4f7f\u7528\u7b97\u6cd5: \u5bf9\u793e\u533a\u7559\u8a00\u677f\u8a00\u8bba\u8fdb\u884c\u5206\u7c7b\n\n\n\n\n\n\n\u6536\u96c6\u6570\u636e: \u53ef\u4ee5\u4f7f\u7528\u4efb\u4f55\u65b9\u6cd5\n\n\n\n\n\u672c\u4f8b\u662f\u6211\u4eec\u81ea\u5df1\u6784\u9020\u7684\u8bcd\u8868:\n\n\ndef\n \nloadDataSet\n():\n\n    \n\n\n    \u521b\u5efa\u6570\u636e\u96c6\n\n\n    :return: \u5355\u8bcd\u5217\u8868postingList, \u6240\u5c5e\u7c7b\u522bclassVec\n\n\n    \n\n    \npostingList\n \n=\n \n[[\nmy\n,\n \ndog\n,\n \nhas\n,\n \nflea\n,\n \nproblems\n,\n \nhelp\n,\n \nplease\n],\n \n#[0,0,1,1,1......]\n\n                   \n[\nmaybe\n,\n \nnot\n,\n \ntake\n,\n \nhim\n,\n \nto\n,\n \ndog\n,\n \npark\n,\n \nstupid\n],\n\n                   \n[\nmy\n,\n \ndalmation\n,\n \nis\n,\n \nso\n,\n \ncute\n,\n \nI\n,\n \nlove\n,\n \nhim\n],\n\n                   \n[\nstop\n,\n \nposting\n,\n \nstupid\n,\n \nworthless\n,\n \ngarbage\n],\n\n                   \n[\nmr\n,\n \nlicks\n,\n \nate\n,\n \nmy\n,\n \nsteak\n,\n \nhow\n,\n \nto\n,\n \nstop\n,\n \nhim\n],\n\n                   \n[\nquit\n,\n \nbuying\n,\n \nworthless\n,\n \ndog\n,\n \nfood\n,\n \nstupid\n]]\n\n    \nclassVec\n \n=\n \n[\n0\n,\n \n1\n,\n \n0\n,\n \n1\n,\n \n0\n,\n \n1\n]\n  \n# 1 is abusive, 0 not\n\n    \nreturn\n \npostingList\n,\n \nclassVec\n\n\n\n\n\n\n\n\u51c6\u5907\u6570\u636e: \u4ece\u6587\u672c\u4e2d\u6784\u5efa\u8bcd\u5411\u91cf\n\n\n\n\ndef\n \ncreateVocabList\n(\ndataSet\n):\n\n    \n\n\n    \u83b7\u53d6\u6240\u6709\u5355\u8bcd\u7684\u96c6\u5408\n\n\n    :param dataSet: \u6570\u636e\u96c6\n\n\n    :return: \u6240\u6709\u5355\u8bcd\u7684\u96c6\u5408(\u5373\u4e0d\u542b\u91cd\u590d\u5143\u7d20\u7684\u5355\u8bcd\u5217\u8868)\n\n\n    \n\n    \nvocabSet\n \n=\n \nset\n([])\n  \n# create empty set\n\n    \nfor\n \ndocument\n \nin\n \ndataSet\n:\n\n        \n# \u64cd\u4f5c\u7b26 | \u7528\u4e8e\u6c42\u4e24\u4e2a\u96c6\u5408\u7684\u5e76\u96c6\n\n        \nvocabSet\n \n=\n \nvocabSet\n \n|\n \nset\n(\ndocument\n)\n  \n# union of the two sets\n\n    \nreturn\n \nlist\n(\nvocabSet\n)\n\n\n\n\ndef\n \nsetOfWords2Vec\n(\nvocabList\n,\n \ninputSet\n):\n\n    \n\n\n    \u904d\u5386\u67e5\u770b\u8be5\u5355\u8bcd\u662f\u5426\u51fa\u73b0\uff0c\u51fa\u73b0\u8be5\u5355\u8bcd\u5219\u5c06\u8be5\u5355\u8bcd\u7f6e1\n\n\n    :param vocabList: \u6240\u6709\u5355\u8bcd\u96c6\u5408\u5217\u8868\n\n\n    :param inputSet: \u8f93\u5165\u6570\u636e\u96c6\n\n\n    :return: \u5339\u914d\u5217\u8868[0,1,0,1...]\uff0c\u5176\u4e2d 1\u4e0e0 \u8868\u793a\u8bcd\u6c47\u8868\u4e2d\u7684\u5355\u8bcd\u662f\u5426\u51fa\u73b0\u5728\u8f93\u5165\u7684\u6570\u636e\u96c6\u4e2d\n\n\n    \n\n    \n# \u521b\u5efa\u4e00\u4e2a\u548c\u8bcd\u6c47\u8868\u7b49\u957f\u7684\u5411\u91cf\uff0c\u5e76\u5c06\u5176\u5143\u7d20\u90fd\u8bbe\u7f6e\u4e3a0\n\n    \nreturnVec\n \n=\n \n[\n0\n]\n \n*\n \nlen\n(\nvocabList\n)\n# [0,0......]\n\n    \n# \u904d\u5386\u6587\u6863\u4e2d\u7684\u6240\u6709\u5355\u8bcd\uff0c\u5982\u679c\u51fa\u73b0\u4e86\u8bcd\u6c47\u8868\u4e2d\u7684\u5355\u8bcd\uff0c\u5219\u5c06\u8f93\u51fa\u7684\u6587\u6863\u5411\u91cf\u4e2d\u7684\u5bf9\u5e94\u503c\u8bbe\u4e3a1\n\n    \nfor\n \nword\n \nin\n \ninputSet\n:\n\n        \nif\n \nword\n \nin\n \nvocabList\n:\n\n            \nreturnVec\n[\nvocabList\n.\nindex\n(\nword\n)]\n \n=\n \n1\n\n        \nelse\n:\n\n            \nprint\n \nthe word: \n%s\n is not in my Vocabulary!\n \n%\n \nword\n\n    \nreturn\n \nreturnVec\n\n\n\n\n\n\n\n\u5206\u6790\u6570\u636e: \u68c0\u67e5\u8bcd\u6761\u786e\u4fdd\u89e3\u6790\u7684\u6b63\u786e\u6027\n\n\n\n\n\u68c0\u67e5\u51fd\u6570\u6267\u884c\u60c5\u51b5\uff0c\u68c0\u67e5\u8bcd\u8868\uff0c\u4e0d\u51fa\u73b0\u91cd\u590d\u5355\u8bcd\uff0c\u9700\u8981\u7684\u8bdd\uff0c\u53ef\u4ee5\u5bf9\u5176\u8fdb\u884c\u6392\u5e8f\u3002\n\n\n \nlistOPosts\n,\n \nlistClasses\n \n=\n \nbayes\n.\nloadDataSet\n()\n\n\n \nmyVocabList\n \n=\n \nbayes\n.\ncreateVocabList\n(\nlistOPosts\n)\n\n\n \nmyVocabList\n\n\n[\ncute\n,\n \nlove\n,\n \nhelp\n,\n \ngarbage\n,\n \nquit\n,\n \nI\n,\n \nproblems\n,\n \nis\n,\n \npark\n,\n \n\nstop\n,\n \nflea\n,\n \ndalmation\n,\n \nlicks\n,\n \nfood\n,\n \nnot\n,\n \nhim\n,\n \nbuying\n,\n \nposting\n,\n \nhas\n,\n \nworthless\n,\n \nate\n,\n \nto\n,\n \nmaybe\n,\n \nplease\n,\n \ndog\n,\n \nhow\n,\n \n\nstupid\n,\n \nso\n,\n \ntake\n,\n \nmr\n,\n \nsteak\n,\n \nmy\n]\n\n\n\n\n\n\u68c0\u67e5\u51fd\u6570\u6709\u6548\u6027\u3002\u4f8b\u5982\uff1amyVocabList \u4e2d\u7d22\u5f15\u4e3a 2 \u7684\u5143\u7d20\u662f\u4ec0\u4e48\u5355\u8bcd\uff1f\u5e94\u8be5\u662f\u662f help \u3002\u8be5\u5355\u8bcd\u5728\u7b2c\u4e00\u7bc7\u6587\u6863\u4e2d\u51fa\u73b0\u4e86\uff0c\u73b0\u5728\u68c0\u67e5\u4e00\u4e0b\u770b\u770b\u5b83\u662f\u5426\u51fa\u73b0\u5728\u7b2c\u56db\u7bc7\u6587\u6863\u4e2d\u3002\n\n\n \nbayes\n.\nsetOfWords2Vec\n(\nmyVocabList\n,\n \nlistOPosts\n[\n0\n])\n\n\n[\n0\n,\n \n0\n,\n \n1\n,\n \n0\n,\n \n0\n,\n \n0\n,\n \n1\n,\n \n0\n,\n \n0\n,\n \n0\n,\n \n1\n,\n \n0\n,\n \n0\n,\n \n0\n,\n \n0\n,\n \n0\n,\n \n0\n,\n \n0\n,\n \n1\n,\n \n0\n,\n \n0\n,\n \n0\n,\n \n0\n,\n \n1\n,\n \n1\n,\n \n0\n,\n \n0\n,\n \n0\n,\n \n0\n,\n \n0\n,\n \n0\n,\n \n1\n]\n\n\n\n \nbayes\n.\nsetOfWords2Vec\n(\nmyVocabList\n,\n \nlistOPosts\n[\n3\n])\n\n\n[\n0\n,\n \n0\n,\n \n0\n,\n \n1\n,\n \n0\n,\n \n0\n,\n \n0\n,\n \n0\n,\n \n0\n,\n \n1\n,\n \n0\n,\n \n0\n,\n \n0\n,\n \n0\n,\n \n0\n,\n \n0\n,\n \n0\n,\n \n1\n,\n \n0\n,\n \n1\n,\n \n0\n,\n \n0\n,\n \n0\n,\n \n0\n,\n \n0\n,\n \n0\n,\n \n1\n,\n \n0\n,\n \n0\n,\n \n0\n,\n \n0\n,\n \n0\n]\n\n\n\n\n\n\n\n\u8bad\u7ec3\u7b97\u6cd5: \u4ece\u8bcd\u5411\u91cf\u8ba1\u7b97\u6982\u7387\n\n\n\n\n\u73b0\u5728\u5df2\u7ecf\u77e5\u9053\u4e86\u4e00\u4e2a\u8bcd\u662f\u5426\u51fa\u73b0\u5728\u4e00\u7bc7\u6587\u6863\u4e2d\uff0c\u4e5f\u77e5\u9053\u8be5\u6587\u6863\u6240\u5c5e\u7684\u7c7b\u522b\u3002\u63a5\u4e0b\u6765\u6211\u4eec\u91cd\u5199\u8d1d\u53f6\u65af\u51c6\u5219\uff0c\u5c06\u4e4b\u524d\u7684 x, y \u66ff\u6362\u4e3a \nw\n. \u7c97\u4f53\u7684 \nw\n \u8868\u793a\u8fd9\u662f\u4e00\u4e2a\u5411\u91cf\uff0c\u5373\u5b83\u7531\u591a\u4e2a\u503c\u7ec4\u6210\u3002\u5728\u8fd9\u4e2a\u4f8b\u5b50\u4e2d\uff0c\u6570\u503c\u4e2a\u6570\u4e0e\u8bcd\u6c47\u8868\u4e2d\u7684\u8bcd\u4e2a\u6570\u76f8\u540c\u3002\n\n\n\n\n\u6211\u4eec\u4f7f\u7528\u4e0a\u8ff0\u516c\u5f0f\uff0c\u5bf9\u6bcf\u4e2a\u7c7b\u8ba1\u7b97\u8be5\u503c\uff0c\u7136\u540e\u6bd4\u8f83\u8fd9\u4e24\u4e2a\u6982\u7387\u503c\u7684\u5927\u5c0f\u3002\n\n\n\u9996\u5148\u53ef\u4ee5\u901a\u8fc7\u7c7b\u522b i (\u4fae\u8fb1\u6027\u7559\u8a00\u6216\u8005\u975e\u4fae\u8fb1\u6027\u7559\u8a00)\u4e2d\u7684\u6587\u6863\u6570\u9664\u4ee5\u603b\u7684\u6587\u6863\u6570\u6765\u8ba1\u7b97\u6982\u7387 p(ci) \u3002\u63a5\u4e0b\u6765\u8ba1\u7b97 p(\nw\n | ci) \uff0c\u8fd9\u91cc\u5c31\u8981\u7528\u5230\u6734\u7d20\u8d1d\u53f6\u65af\u5047\u8bbe\u3002\u5982\u679c\u5c06 w \u5c55\u5f00\u4e3a\u4e00\u4e2a\u4e2a\u72ec\u7acb\u7279\u5f81\uff0c\u90a3\u4e48\u5c31\u53ef\u4ee5\u5c06\u4e0a\u8ff0\u6982\u7387\u5199\u4f5c p(w0, w1, w2...wn | ci) \u3002\u8fd9\u91cc\u5047\u8bbe\u6240\u6709\u8bcd\u90fd\u4e92\u76f8\u72ec\u7acb\uff0c\u8be5\u5047\u8bbe\u4e5f\u79f0\u4f5c\u6761\u4ef6\u72ec\u7acb\u6027\u5047\u8bbe\uff08\u4f8b\u5982 A \u548c B \u4e24\u4e2a\u4eba\u629b\u9ab0\u5b50\uff0c\u6982\u7387\u662f\u4e92\u4e0d\u5f71\u54cd\u7684\uff0c\u4e5f\u5c31\u662f\u76f8\u4e92\u72ec\u7acb\u7684\uff0cA \u629b 2\u70b9\u7684\u540c\u65f6 B \u629b 3 \u70b9\u7684\u6982\u7387\u5c31\u662f \n * \n\uff09\uff0c\u5b83\u610f\u5473\u7740\u53ef\u4ee5\u4f7f\u7528 p(w0 | ci)p(w1 | ci)p(w2 | ci)...p(wn | ci) \u6765\u8ba1\u7b97\u4e0a\u8ff0\u6982\u7387\uff0c\u8fd9\u6837\u5c31\u6781\u5927\u5730\u7b80\u5316\u4e86\u8ba1\u7b97\u7684\u8fc7\u7a0b\u3002\n\n\n\u6734\u7d20\u8d1d\u53f6\u65af\u5206\u7c7b\u5668\u8bad\u7ec3\u51fd\u6570\n\n\ndef\n \n_trainNB0\n(\ntrainMatrix\n,\n \ntrainCategory\n):\n\n    \n\n\n    \u8bad\u7ec3\u6570\u636e\u539f\u7248\n\n\n    :param trainMatrix: \u6587\u4ef6\u5355\u8bcd\u77e9\u9635 [[1,0,1,1,1....],[],[]...]\n\n\n    :param trainCategory: \u6587\u4ef6\u5bf9\u5e94\u7684\u7c7b\u522b[0,1,1,0....]\uff0c\u5217\u8868\u957f\u5ea6\u7b49\u4e8e\u5355\u8bcd\u77e9\u9635\u6570\uff0c\u5176\u4e2d\u76841\u4ee3\u8868\u5bf9\u5e94\u7684\u6587\u4ef6\u662f\u4fae\u8fb1\u6027\u6587\u4ef6\uff0c0\u4ee3\u8868\u4e0d\u662f\u4fae\u8fb1\u6027\u77e9\u9635\n\n\n    :return:\n\n\n    \n\n    \n# \u6587\u4ef6\u6570\n\n    \nnumTrainDocs\n \n=\n \nlen\n(\ntrainMatrix\n)\n\n    \n# \u5355\u8bcd\u6570\n\n    \nnumWords\n \n=\n \nlen\n(\ntrainMatrix\n[\n0\n])\n\n    \n# \u4fae\u8fb1\u6027\u6587\u4ef6\u7684\u51fa\u73b0\u6982\u7387\uff0c\u5373trainCategory\u4e2d\u6240\u6709\u76841\u7684\u4e2a\u6570\uff0c\n\n    \n# \u4ee3\u8868\u7684\u5c31\u662f\u591a\u5c11\u4e2a\u4fae\u8fb1\u6027\u6587\u4ef6\uff0c\u4e0e\u6587\u4ef6\u7684\u603b\u6570\u76f8\u9664\u5c31\u5f97\u5230\u4e86\u4fae\u8fb1\u6027\u6587\u4ef6\u7684\u51fa\u73b0\u6982\u7387\n\n    \npAbusive\n \n=\n \nsum\n(\ntrainCategory\n)\n \n/\n \nfloat\n(\nnumTrainDocs\n)\n\n    \n# \u6784\u9020\u5355\u8bcd\u51fa\u73b0\u6b21\u6570\u5217\u8868\n\n    \np0Num\n \n=\n \nzeros\n(\nnumWords\n)\n \n# [0,0,0,.....]\n\n    \np1Num\n \n=\n \nzeros\n(\nnumWords\n)\n \n# [0,0,0,.....]\n\n\n    \n# \u6574\u4e2a\u6570\u636e\u96c6\u5355\u8bcd\u51fa\u73b0\u603b\u6570\n\n    \np0Denom\n \n=\n \n0.0\n\n    \np1Denom\n \n=\n \n0.0\n\n    \nfor\n \ni\n \nin\n \nrange\n(\nnumTrainDocs\n):\n\n        \n# \u662f\u5426\u662f\u4fae\u8fb1\u6027\u6587\u4ef6\n\n        \nif\n \ntrainCategory\n[\ni\n]\n \n==\n \n1\n:\n\n            \n# \u5982\u679c\u662f\u4fae\u8fb1\u6027\u6587\u4ef6\uff0c\u5bf9\u4fae\u8fb1\u6027\u6587\u4ef6\u7684\u5411\u91cf\u8fdb\u884c\u52a0\u548c\n\n            \np1Num\n \n+=\n \ntrainMatrix\n[\ni\n]\n \n#[0,1,1,....] + [0,1,1,....]-\n[0,2,2,...]\n\n            \n# \u5bf9\u5411\u91cf\u4e2d\u7684\u6240\u6709\u5143\u7d20\u8fdb\u884c\u6c42\u548c\uff0c\u4e5f\u5c31\u662f\u8ba1\u7b97\u6240\u6709\u4fae\u8fb1\u6027\u6587\u4ef6\u4e2d\u51fa\u73b0\u7684\u5355\u8bcd\u603b\u6570\n\n            \np1Denom\n \n+=\n \nsum\n(\ntrainMatrix\n[\ni\n])\n\n        \nelse\n:\n\n            \np0Num\n \n+=\n \ntrainMatrix\n[\ni\n]\n\n            \np0Denom\n \n+=\n \nsum\n(\ntrainMatrix\n[\ni\n])\n\n    \n# \u7c7b\u522b1\uff0c\u5373\u4fae\u8fb1\u6027\u6587\u6863\u7684[P(F1|C1),P(F2|C1),P(F3|C1),P(F4|C1),P(F5|C1)....]\u5217\u8868\n\n    \n# \u5373 \u57281\u7c7b\u522b\u4e0b\uff0c\u6bcf\u4e2a\u5355\u8bcd\u51fa\u73b0\u7684\u6982\u7387\n\n    \np1Vect\n \n=\n \np1Num\n \n/\n \np1Denom\n# [1,2,3,5]/90-\n[1/90,...]\n\n    \n# \u7c7b\u522b0\uff0c\u5373\u6b63\u5e38\u6587\u6863\u7684[P(F1|C0),P(F2|C0),P(F3|C0),P(F4|C0),P(F5|C0)....]\u5217\u8868\n\n    \n# \u5373 \u57280\u7c7b\u522b\u4e0b\uff0c\u6bcf\u4e2a\u5355\u8bcd\u51fa\u73b0\u7684\u6982\u7387\n\n    \np0Vect\n \n=\n \np0Num\n \n/\n \np0Denom\n\n    \nreturn\n \np0Vect\n,\n \np1Vect\n,\n \npAbusive\n\n\n\n\n\n\n\n\u6d4b\u8bd5\u7b97\u6cd5: \u6839\u636e\u73b0\u5b9e\u60c5\u51b5\u4fee\u6539\u5206\u7c7b\u5668\n\n\n\n\n\u5728\u5229\u7528\u8d1d\u53f6\u65af\u5206\u7c7b\u5668\u5bf9\u6587\u6863\u8fdb\u884c\u5206\u7c7b\u65f6\uff0c\u8981\u8ba1\u7b97\u591a\u4e2a\u6982\u7387\u7684\u4e58\u79ef\u4ee5\u83b7\u5f97\u6587\u6863\u5c5e\u4e8e\u67d0\u4e2a\u7c7b\u522b\u7684\u6982\u7387\uff0c\u5373\u8ba1\u7b97 p(w0|1) * p(w1|1) * p(w2|1)\u3002\u5982\u679c\u5176\u4e2d\u4e00\u4e2a\u6982\u7387\u503c\u4e3a 0\uff0c\u90a3\u4e48\u6700\u540e\u7684\u4e58\u79ef\u4e5f\u4e3a 0\u3002\u4e3a\u964d\u4f4e\u8fd9\u79cd\u5f71\u54cd\uff0c\u53ef\u4ee5\u5c06\u6240\u6709\u8bcd\u7684\u51fa\u73b0\u6570\u521d\u59cb\u5316\u4e3a 1\uff0c\u5e76\u5c06\u5206\u6bcd\u521d\u59cb\u5316\u4e3a 2 \uff08\u53d61 \u6216 2 \u7684\u76ee\u7684\u4e3b\u8981\u662f\u4e3a\u4e86\u4fdd\u8bc1\u5206\u5b50\u548c\u5206\u6bcd\u4e0d\u4e3a0\uff0c\u5927\u5bb6\u53ef\u4ee5\u6839\u636e\u4e1a\u52a1\u9700\u6c42\u8fdb\u884c\u66f4\u6539\uff09\u3002\n\n\n\u53e6\u4e00\u4e2a\u9047\u5230\u7684\u95ee\u9898\u662f\u4e0b\u6ea2\u51fa\uff0c\u8fd9\u662f\u7531\u4e8e\u592a\u591a\u5f88\u5c0f\u7684\u6570\u76f8\u4e58\u9020\u6210\u7684\u3002\u5f53\u8ba1\u7b97\u4e58\u79ef p(w0|ci) * p(w1|ci) * p(w2|ci)... p(wn|ci) \u65f6\uff0c\u7531\u4e8e\u5927\u90e8\u5206\u56e0\u5b50\u90fd\u975e\u5e38\u5c0f\uff0c\u6240\u4ee5\u7a0b\u5e8f\u4f1a\u4e0b\u6ea2\u51fa\u6216\u8005\u5f97\u5230\u4e0d\u6b63\u786e\u7684\u7b54\u6848\u3002\uff08\u7528 Python \u5c1d\u8bd5\u76f8\u4e58\u8bb8\u591a\u5f88\u5c0f\u7684\u6570\uff0c\u6700\u540e\u56db\u820d\u4e94\u5165\u540e\u4f1a\u5f97\u5230 0\uff09\u3002\u4e00\u79cd\u89e3\u51b3\u529e\u6cd5\u662f\u5bf9\u4e58\u79ef\u53d6\u81ea\u7136\u5bf9\u6570\u3002\u5728\u4ee3\u6570\u4e2d\u6709 ln(a * b) = ln(a) + ln(b), \u4e8e\u662f\u901a\u8fc7\u6c42\u5bf9\u6570\u53ef\u4ee5\u907f\u514d\u4e0b\u6ea2\u51fa\u6216\u8005\u6d6e\u70b9\u6570\u820d\u5165\u5bfc\u81f4\u7684\u9519\u8bef\u3002\u540c\u65f6\uff0c\u91c7\u7528\u81ea\u7136\u5bf9\u6570\u8fdb\u884c\u5904\u7406\u4e0d\u4f1a\u6709\u4efb\u4f55\u635f\u5931\u3002\n\n\n\u4e0b\u56fe\u7ed9\u51fa\u4e86\u51fd\u6570 f(x) \u4e0e ln(f(x)) \u7684\u66f2\u7ebf\u3002\u53ef\u4ee5\u770b\u51fa\uff0c\u5b83\u4eec\u5728\u76f8\u540c\u533a\u57df\u5185\u540c\u65f6\u589e\u52a0\u6216\u8005\u51cf\u5c11\uff0c\u5e76\u4e14\u5728\u76f8\u540c\u70b9\u4e0a\u53d6\u5230\u6781\u503c\u3002\u5b83\u4eec\u7684\u53d6\u503c\u867d\u7136\u4e0d\u540c\uff0c\u4f46\u4e0d\u5f71\u54cd\u6700\u7ec8\u7ed3\u679c\u3002\n\n\n\n\ndef\n \ntrainNB0\n(\ntrainMatrix\n,\n \ntrainCategory\n):\n\n    \n\n\n    \u8bad\u7ec3\u6570\u636e\u4f18\u5316\u7248\u672c\n\n\n    :param trainMatrix: \u6587\u4ef6\u5355\u8bcd\u77e9\u9635\n\n\n    :param trainCategory: \u6587\u4ef6\u5bf9\u5e94\u7684\u7c7b\u522b\n\n\n    :return:\n\n\n    \n\n    \n# \u603b\u6587\u4ef6\u6570\n\n    \nnumTrainDocs\n \n=\n \nlen\n(\ntrainMatrix\n)\n\n    \n# \u603b\u5355\u8bcd\u6570\n\n    \nnumWords\n \n=\n \nlen\n(\ntrainMatrix\n[\n0\n])\n\n    \n# \u4fae\u8fb1\u6027\u6587\u4ef6\u7684\u51fa\u73b0\u6982\u7387\n\n    \npAbusive\n \n=\n \nsum\n(\ntrainCategory\n)\n \n/\n \nfloat\n(\nnumTrainDocs\n)\n\n    \n# \u6784\u9020\u5355\u8bcd\u51fa\u73b0\u6b21\u6570\u5217\u8868\n\n    \n# p0Num \u6b63\u5e38\u7684\u7edf\u8ba1\n\n    \n# p1Num \u4fae\u8fb1\u7684\u7edf\u8ba1\n\n    \np0Num\n \n=\n \nones\n(\nnumWords\n)\n#[0,0......]-\n[1,1,1,1,1.....]\n\n    \np1Num\n \n=\n \nones\n(\nnumWords\n)\n\n\n    \n# \u6574\u4e2a\u6570\u636e\u96c6\u5355\u8bcd\u51fa\u73b0\u603b\u6570\uff0c2.0\u6839\u636e\u6837\u672c/\u5b9e\u9645\u8c03\u67e5\u7ed3\u679c\u8c03\u6574\u5206\u6bcd\u7684\u503c\uff082\u4e3b\u8981\u662f\u907f\u514d\u5206\u6bcd\u4e3a0\uff0c\u5f53\u7136\u503c\u53ef\u4ee5\u8c03\u6574\uff09\n\n    \n# p0Denom \u6b63\u5e38\u7684\u7edf\u8ba1\n\n    \n# p1Denom \u4fae\u8fb1\u7684\u7edf\u8ba1\n\n    \np0Denom\n \n=\n \n2.0\n\n    \np1Denom\n \n=\n \n2.0\n\n    \nfor\n \ni\n \nin\n \nrange\n(\nnumTrainDocs\n):\n\n        \nif\n \ntrainCategory\n[\ni\n]\n \n==\n \n1\n:\n\n            \n# \u7d2f\u52a0\u8fb1\u9a82\u8bcd\u7684\u9891\u6b21\n\n            \np1Num\n \n+=\n \ntrainMatrix\n[\ni\n]\n\n            \n# \u5bf9\u6bcf\u7bc7\u6587\u7ae0\u7684\u8fb1\u9a82\u7684\u9891\u6b21 \u8fdb\u884c\u7edf\u8ba1\u6c47\u603b\n\n            \np1Denom\n \n+=\n \nsum\n(\ntrainMatrix\n[\ni\n])\n\n        \nelse\n:\n\n            \np0Num\n \n+=\n \ntrainMatrix\n[\ni\n]\n\n            \np0Denom\n \n+=\n \nsum\n(\ntrainMatrix\n[\ni\n])\n\n    \n# \u7c7b\u522b1\uff0c\u5373\u4fae\u8fb1\u6027\u6587\u6863\u7684[log(P(F1|C1)),log(P(F2|C1)),log(P(F3|C1)),log(P(F4|C1)),log(P(F5|C1))....]\u5217\u8868\n\n    \np1Vect\n \n=\n \nlog\n(\np1Num\n \n/\n \np1Denom\n)\n\n    \n# \u7c7b\u522b0\uff0c\u5373\u6b63\u5e38\u6587\u6863\u7684[log(P(F1|C0)),log(P(F2|C0)),log(P(F3|C0)),log(P(F4|C0)),log(P(F5|C0))....]\u5217\u8868\n\n    \np0Vect\n \n=\n \nlog\n(\np0Num\n \n/\n \np0Denom\n)\n\n    \nreturn\n \np0Vect\n,\n \np1Vect\n,\n \npAbusive\n\n\n\n\n\n\n\n\u4f7f\u7528\u7b97\u6cd5: \u5bf9\u793e\u533a\u7559\u8a00\u677f\u8a00\u8bba\u8fdb\u884c\u5206\u7c7b\n\n\n\n\n\u6734\u7d20\u8d1d\u53f6\u65af\u5206\u7c7b\u51fd\u6570\n\n\ndef\n \nclassifyNB\n(\nvec2Classify\n,\n \np0Vec\n,\n \np1Vec\n,\n \npClass1\n):\n\n    \n\n\n    \u4f7f\u7528\u7b97\u6cd5\uff1a\n\n\n        # \u5c06\u4e58\u6cd5\u8f6c\u6362\u4e3a\u52a0\u6cd5\n\n\n        \u4e58\u6cd5\uff1aP(C|F1F2...Fn) = P(F1F2...Fn|C)P(C)/P(F1F2...Fn)\n\n\n        \u52a0\u6cd5\uff1aP(F1|C)*P(F2|C)....P(Fn|C)P(C) -\n log(P(F1|C))+log(P(F2|C))+....+log(P(Fn|C))+log(P(C))\n\n\n    :param vec2Classify: \u5f85\u6d4b\u6570\u636e[0,1,1,1,1...]\uff0c\u5373\u8981\u5206\u7c7b\u7684\u5411\u91cf\n\n\n    :param p0Vec: \u7c7b\u522b0\uff0c\u5373\u6b63\u5e38\u6587\u6863\u7684[log(P(F1|C0)),log(P(F2|C0)),log(P(F3|C0)),log(P(F4|C0)),log(P(F5|C0))....]\u5217\u8868\n\n\n    :param p1Vec: \u7c7b\u522b1\uff0c\u5373\u4fae\u8fb1\u6027\u6587\u6863\u7684[log(P(F1|C1)),log(P(F2|C1)),log(P(F3|C1)),log(P(F4|C1)),log(P(F5|C1))....]\u5217\u8868\n\n\n    :param pClass1: \u7c7b\u522b1\uff0c\u4fae\u8fb1\u6027\u6587\u4ef6\u7684\u51fa\u73b0\u6982\u7387\n\n\n    :return: \u7c7b\u522b1 or 0\n\n\n    \n\n    \n# \u8ba1\u7b97\u516c\u5f0f  log(P(F1|C))+log(P(F2|C))+....+log(P(Fn|C))+log(P(C))\n\n    \n# \u5927\u5bb6\u53ef\u80fd\u4f1a\u53d1\u73b0\uff0c\u4e0a\u9762\u7684\u8ba1\u7b97\u516c\u5f0f\uff0c\u6ca1\u6709\u9664\u4ee5\u8d1d\u53f6\u65af\u51c6\u5219\u7684\u516c\u5f0f\u7684\u5206\u6bcd\uff0c\u4e5f\u5c31\u662f P(w) \uff08P(w) \u6307\u7684\u662f\u6b64\u6587\u6863\u5728\u6240\u6709\u7684\u6587\u6863\u4e2d\u51fa\u73b0\u7684\u6982\u7387\uff09\u5c31\u8fdb\u884c\u6982\u7387\u5927\u5c0f\u7684\u6bd4\u8f83\u4e86\uff0c\n\n    \n# \u56e0\u4e3a P(w) \u9488\u5bf9\u7684\u662f\u5305\u542b\u4fae\u8fb1\u548c\u975e\u4fae\u8fb1\u7684\u5168\u90e8\u6587\u6863\uff0c\u6240\u4ee5 P(w) \u662f\u76f8\u540c\u7684\u3002\n\n    \n# \u4f7f\u7528 NumPy \u6570\u7ec4\u6765\u8ba1\u7b97\u4e24\u4e2a\u5411\u91cf\u76f8\u4e58\u7684\u7ed3\u679c\uff0c\u8fd9\u91cc\u7684\u76f8\u4e58\u662f\u6307\u5bf9\u5e94\u5143\u7d20\u76f8\u4e58\uff0c\u5373\u5148\u5c06\u4e24\u4e2a\u5411\u91cf\u4e2d\u7684\u7b2c\u4e00\u4e2a\u5143\u7d20\u76f8\u4e58\uff0c\u7136\u540e\u5c06\u7b2c2\u4e2a\u5143\u7d20\u76f8\u4e58\uff0c\u4ee5\u6b64\u7c7b\u63a8\u3002\n\n    \n# \u6211\u7684\u7406\u89e3\u662f\uff1a\u8fd9\u91cc\u7684 vec2Classify * p1Vec \u7684\u610f\u601d\u5c31\u662f\u5c06\u6bcf\u4e2a\u8bcd\u4e0e\u5176\u5bf9\u5e94\u7684\u6982\u7387\u76f8\u5173\u8054\u8d77\u6765\n\n    \np1\n \n=\n \nsum\n(\nvec2Classify\n \n*\n \np1Vec\n)\n \n+\n \nlog\n(\npClass1\n)\n \n# P(w|c1) * P(c1) \uff0c\u5373\u8d1d\u53f6\u65af\u51c6\u5219\u7684\u5206\u5b50\n\n    \np0\n \n=\n \nsum\n(\nvec2Classify\n \n*\n \np0Vec\n)\n \n+\n \nlog\n(\n1.0\n \n-\n \npClass1\n)\n \n# P(w|c0) * P(c0) \uff0c\u5373\u8d1d\u53f6\u65af\u51c6\u5219\u7684\u5206\u5b50\u00b7\n\n    \nif\n \np1\n \n \np0\n:\n\n        \nreturn\n \n1\n\n    \nelse\n:\n\n        \nreturn\n \n0\n\n\n\n\ndef\n \ntestingNB\n():\n\n    \n\n\n    \u6d4b\u8bd5\u6734\u7d20\u8d1d\u53f6\u65af\u7b97\u6cd5\n\n\n    \n\n    \n# 1. \u52a0\u8f7d\u6570\u636e\u96c6\n\n    \nlistOPosts\n,\n \nlistClasses\n \n=\n \nloadDataSet\n()\n\n    \n# 2. \u521b\u5efa\u5355\u8bcd\u96c6\u5408\n\n    \nmyVocabList\n \n=\n \ncreateVocabList\n(\nlistOPosts\n)\n\n    \n# 3. \u8ba1\u7b97\u5355\u8bcd\u662f\u5426\u51fa\u73b0\u5e76\u521b\u5efa\u6570\u636e\u77e9\u9635\n\n    \ntrainMat\n \n=\n \n[]\n\n    \nfor\n \npostinDoc\n \nin\n \nlistOPosts\n:\n\n        \n# \u8fd4\u56dem*len(myVocabList)\u7684\u77e9\u9635\uff0c \u8bb0\u5f55\u7684\u90fd\u662f0\uff0c1\u4fe1\u606f\n\n        \ntrainMat\n.\nappend\n(\nsetOfWords2Vec\n(\nmyVocabList\n,\n \npostinDoc\n))\n\n    \n# 4. \u8bad\u7ec3\u6570\u636e\n\n    \np0V\n,\n \np1V\n,\n \npAb\n \n=\n \ntrainNB0\n(\narray\n(\ntrainMat\n),\n \narray\n(\nlistClasses\n))\n\n    \n# 5. \u6d4b\u8bd5\u6570\u636e\n\n    \ntestEntry\n \n=\n \n[\nlove\n,\n \nmy\n,\n \ndalmation\n]\n\n    \nthisDoc\n \n=\n \narray\n(\nsetOfWords2Vec\n(\nmyVocabList\n,\n \ntestEntry\n))\n\n    \nprint\n \ntestEntry\n,\n \nclassified as: \n,\n \nclassifyNB\n(\nthisDoc\n,\n \np0V\n,\n \np1V\n,\n \npAb\n)\n\n    \ntestEntry\n \n=\n \n[\nstupid\n,\n \ngarbage\n]\n\n    \nthisDoc\n \n=\n \narray\n(\nsetOfWords2Vec\n(\nmyVocabList\n,\n \ntestEntry\n))\n\n    \nprint\n \ntestEntry\n,\n \nclassified as: \n,\n \nclassifyNB\n(\nthisDoc\n,\n \np0V\n,\n \np1V\n,\n \npAb\n)\n\n\n\n\n\n\u5b8c\u6574\u4ee3\u7801\u5730\u5740\n: \nhttps://github.com/apachecn/MachineLearning/blob/master/src/python/4.NaiveBayes/bayes.py\n\n\n\u9879\u76ee\u6848\u4f8b2: \u4f7f\u7528\u6734\u7d20\u8d1d\u53f6\u65af\u8fc7\u6ee4\u5783\u573e\u90ae\u4ef6\n\n\n\u9879\u76ee\u6982\u8ff0\n\n\n\u5b8c\u6210\u6734\u7d20\u8d1d\u53f6\u65af\u7684\u4e00\u4e2a\u6700\u8457\u540d\u7684\u5e94\u7528: \u7535\u5b50\u90ae\u4ef6\u5783\u573e\u8fc7\u6ee4\u3002\n\n\n\u5f00\u53d1\u6d41\u7a0b\n\n\n\u4f7f\u7528\u6734\u7d20\u8d1d\u53f6\u65af\u5bf9\u7535\u5b50\u90ae\u4ef6\u8fdb\u884c\u5206\u7c7b\n\n\n\u6536\u96c6\u6570\u636e: \u63d0\u4f9b\u6587\u672c\u6587\u4ef6\n\u51c6\u5907\u6570\u636e: \u5c06\u6587\u672c\u6587\u4ef6\u89e3\u6790\u6210\u8bcd\u6761\u5411\u91cf\n\u5206\u6790\u6570\u636e: \u68c0\u67e5\u8bcd\u6761\u786e\u4fdd\u89e3\u6790\u7684\u6b63\u786e\u6027\n\u8bad\u7ec3\u7b97\u6cd5: \u4f7f\u7528\u6211\u4eec\u4e4b\u524d\u5efa\u7acb\u7684 trainNB() \u51fd\u6570\n\u6d4b\u8bd5\u7b97\u6cd5: \u4f7f\u7528\u6734\u7d20\u8d1d\u53f6\u65af\u8fdb\u884c\u4ea4\u53c9\u9a8c\u8bc1\n\u4f7f\u7528\u7b97\u6cd5: \u6784\u5efa\u4e00\u4e2a\u5b8c\u6574\u7684\u7a0b\u5e8f\u5bf9\u4e00\u7ec4\u6587\u6863\u8fdb\u884c\u5206\u7c7b\uff0c\u5c06\u9519\u5206\u7684\u6587\u6863\u8f93\u51fa\u5230\u5c4f\u5e55\u4e0a\n\n\n\n\n\n\n\u6536\u96c6\u6570\u636e: \u63d0\u4f9b\u6587\u672c\u6587\u4ef6\n\n\n\n\n\u6587\u672c\u6587\u4ef6\u5185\u5bb9\u5982\u4e0b: \n\n\nHi Peter,\n\nWith Jose out of town, do you want to\nmeet once in a while to keep things\ngoing and do some interesting stuff?\n\nLet me know\nEugene\n\n\n\n\n\n\n\u51c6\u5907\u6570\u636e: \u5c06\u6587\u672c\u6587\u4ef6\u89e3\u6790\u6210\u8bcd\u6761\u5411\u91cf\n\n\n\n\n\u4f7f\u7528\u6b63\u5219\u8868\u8fbe\u5f0f\u6765\u5207\u5206\u6587\u672c\n\n\n \nmySent\n \n=\n \nThis book is the best book on Python or M.L. I have ever laid eyes upon.\n\n\n \nimport\n \nre\n\n\n \nregEx\n \n=\n \nre\n.\ncompile\n(\n\\\\\nW*\n)\n\n\n \nlistOfTokens\n \n=\n \nregEx\n.\nsplit\n(\nmySent\n)\n\n\n \nlistOfTokens\n\n\n[\nThis\n,\n \nbook\n,\n \nis\n,\n \nthe\n,\n \nbest\n,\n \nbook\n,\n \non\n,\n \nPython\n,\n \nor\n,\n \nM.L.\n,\n \nI\n,\n \nhave\n,\n \never\n,\n \nlaid\n,\n \neyes\n,\n \nupon\n,\n \n]\n\n\n\n\n\n\n\n\u5206\u6790\u6570\u636e: \u68c0\u67e5\u8bcd\u6761\u786e\u4fdd\u89e3\u6790\u7684\u6b63\u786e\u6027\n\n\n\u8bad\u7ec3\u7b97\u6cd5: \u4f7f\u7528\u6211\u4eec\u4e4b\u524d\u5efa\u7acb\u7684 trainNB0() \u51fd\u6570\n\n\n\n\ndef\n \ntrainNB0\n(\ntrainMatrix\n,\n \ntrainCategory\n):\n\n    \n\n\n    \u8bad\u7ec3\u6570\u636e\u4f18\u5316\u7248\u672c\n\n\n    :param trainMatrix: \u6587\u4ef6\u5355\u8bcd\u77e9\u9635\n\n\n    :param trainCategory: \u6587\u4ef6\u5bf9\u5e94\u7684\u7c7b\u522b\n\n\n    :return:\n\n\n    \n\n    \n# \u603b\u6587\u4ef6\u6570\n\n    \nnumTrainDocs\n \n=\n \nlen\n(\ntrainMatrix\n)\n\n    \n# \u603b\u5355\u8bcd\u6570\n\n    \nnumWords\n \n=\n \nlen\n(\ntrainMatrix\n[\n0\n])\n\n    \n# \u4fae\u8fb1\u6027\u6587\u4ef6\u7684\u51fa\u73b0\u6982\u7387\n\n    \npAbusive\n \n=\n \nsum\n(\ntrainCategory\n)\n \n/\n \nfloat\n(\nnumTrainDocs\n)\n\n    \n# \u6784\u9020\u5355\u8bcd\u51fa\u73b0\u6b21\u6570\u5217\u8868\n\n    \n# p0Num \u6b63\u5e38\u7684\u7edf\u8ba1\n\n    \n# p1Num \u4fae\u8fb1\u7684\u7edf\u8ba1\n\n    \np0Num\n \n=\n \nones\n(\nnumWords\n)\n#[0,0......]-\n[1,1,1,1,1.....]\n\n    \np1Num\n \n=\n \nones\n(\nnumWords\n)\n\n\n    \n# \u6574\u4e2a\u6570\u636e\u96c6\u5355\u8bcd\u51fa\u73b0\u603b\u6570\uff0c2.0\u6839\u636e\u6837\u672c/\u5b9e\u9645\u8c03\u67e5\u7ed3\u679c\u8c03\u6574\u5206\u6bcd\u7684\u503c\uff082\u4e3b\u8981\u662f\u907f\u514d\u5206\u6bcd\u4e3a0\uff0c\u5f53\u7136\u503c\u53ef\u4ee5\u8c03\u6574\uff09\n\n    \n# p0Denom \u6b63\u5e38\u7684\u7edf\u8ba1\n\n    \n# p1Denom \u4fae\u8fb1\u7684\u7edf\u8ba1\n\n    \np0Denom\n \n=\n \n2.0\n\n    \np1Denom\n \n=\n \n2.0\n\n    \nfor\n \ni\n \nin\n \nrange\n(\nnumTrainDocs\n):\n\n        \nif\n \ntrainCategory\n[\ni\n]\n \n==\n \n1\n:\n\n            \n# \u7d2f\u52a0\u8fb1\u9a82\u8bcd\u7684\u9891\u6b21\n\n            \np1Num\n \n+=\n \ntrainMatrix\n[\ni\n]\n\n            \n# \u5bf9\u6bcf\u7bc7\u6587\u7ae0\u7684\u8fb1\u9a82\u7684\u9891\u6b21 \u8fdb\u884c\u7edf\u8ba1\u6c47\u603b\n\n            \np1Denom\n \n+=\n \nsum\n(\ntrainMatrix\n[\ni\n])\n\n        \nelse\n:\n\n            \np0Num\n \n+=\n \ntrainMatrix\n[\ni\n]\n\n            \np0Denom\n \n+=\n \nsum\n(\ntrainMatrix\n[\ni\n])\n\n    \n# \u7c7b\u522b1\uff0c\u5373\u4fae\u8fb1\u6027\u6587\u6863\u7684[log(P(F1|C1)),log(P(F2|C1)),log(P(F3|C1)),log(P(F4|C1)),log(P(F5|C1))....]\u5217\u8868\n\n    \np1Vect\n \n=\n \nlog\n(\np1Num\n \n/\n \np1Denom\n)\n\n    \n# \u7c7b\u522b0\uff0c\u5373\u6b63\u5e38\u6587\u6863\u7684[log(P(F1|C0)),log(P(F2|C0)),log(P(F3|C0)),log(P(F4|C0)),log(P(F5|C0))....]\u5217\u8868\n\n    \np0Vect\n \n=\n \nlog\n(\np0Num\n \n/\n \np0Denom\n)\n\n    \nreturn\n \np0Vect\n,\n \np1Vect\n,\n \npAbusive\n\n\n\n\n\n\n\n\u6d4b\u8bd5\u7b97\u6cd5: \u4f7f\u7528\u6734\u7d20\u8d1d\u53f6\u65af\u8fdb\u884c\u4ea4\u53c9\u9a8c\u8bc1\n\n\n\n\n\u6587\u4ef6\u89e3\u6790\u53ca\u5b8c\u6574\u7684\u5783\u573e\u90ae\u4ef6\u6d4b\u8bd5\u51fd\u6570\n\n\n# \u5207\u5206\u6587\u672c\n\n\ndef\n \ntextParse\n(\nbigString\n):\n\n    \n\n\n    Desc:\n\n\n        \u63a5\u6536\u4e00\u4e2a\u5927\u5b57\u7b26\u4e32\u5e76\u5c06\u5176\u89e3\u6790\u4e3a\u5b57\u7b26\u4e32\u5217\u8868\n\n\n    Args:\n\n\n        bigString -- \u5927\u5b57\u7b26\u4e32\n\n\n    Returns:\n\n\n        \u53bb\u6389\u5c11\u4e8e 2 \u4e2a\u5b57\u7b26\u7684\u5b57\u7b26\u4e32\uff0c\u5e76\u5c06\u6240\u6709\u5b57\u7b26\u4e32\u8f6c\u6362\u4e3a\u5c0f\u5199\uff0c\u8fd4\u56de\u5b57\u7b26\u4e32\u5217\u8868\n\n\n    \n\n    \nimport\n \nre\n\n    \n# \u4f7f\u7528\u6b63\u5219\u8868\u8fbe\u5f0f\u6765\u5207\u5206\u53e5\u5b50\uff0c\u5176\u4e2d\u5206\u9694\u7b26\u662f\u9664\u5355\u8bcd\u3001\u6570\u5b57\u5916\u7684\u4efb\u610f\u5b57\u7b26\u4e32\n\n    \nlistOfTokens\n \n=\n \nre\n.\nsplit\n(\nr\n\\W*\n,\n \nbigString\n)\n\n    \nreturn\n \n[\ntok\n.\nlower\n()\n \nfor\n \ntok\n \nin\n \nlistOfTokens\n \nif\n \nlen\n(\ntok\n)\n \n \n2\n]\n\n\n\ndef\n \nspamTest\n():\n\n    \n\n\n    Desc:\n\n\n        \u5bf9\u8d1d\u53f6\u65af\u5783\u573e\u90ae\u4ef6\u5206\u7c7b\u5668\u8fdb\u884c\u81ea\u52a8\u5316\u5904\u7406\u3002\n\n\n    Args:\n\n\n        none\n\n\n    Returns:\n\n\n        \u5bf9\u6d4b\u8bd5\u96c6\u4e2d\u7684\u6bcf\u5c01\u90ae\u4ef6\u8fdb\u884c\u5206\u7c7b\uff0c\u82e5\u90ae\u4ef6\u5206\u7c7b\u9519\u8bef\uff0c\u5219\u9519\u8bef\u6570\u52a0 1\uff0c\u6700\u540e\u8fd4\u56de\u603b\u7684\u9519\u8bef\u767e\u5206\u6bd4\u3002\n\n\n    \n\n    \ndocList\n \n=\n \n[]\n\n    \nclassList\n \n=\n \n[]\n\n    \nfullText\n \n=\n \n[]\n\n    \nfor\n \ni\n \nin\n \nrange\n(\n1\n,\n \n26\n):\n\n        \n# \u5207\u5206\uff0c\u89e3\u6790\u6570\u636e\uff0c\u5e76\u5f52\u7c7b\u4e3a 1 \u7c7b\u522b\n\n        \nwordList\n \n=\n \ntextParse\n(\nopen\n(\ninput/4.NaiveBayes/email/spam/\n%d\n.txt\n \n%\n \ni\n)\n.\nread\n())\n\n        \ndocList\n.\nappend\n(\nwordList\n)\n\n        \nclassList\n.\nappend\n(\n1\n)\n\n        \n# \u5207\u5206\uff0c\u89e3\u6790\u6570\u636e\uff0c\u5e76\u5f52\u7c7b\u4e3a 0 \u7c7b\u522b\n\n        \nwordList\n \n=\n \ntextParse\n(\nopen\n(\ninput/4.NaiveBayes/email/ham/\n%d\n.txt\n \n%\n \ni\n)\n.\nread\n())\n\n        \ndocList\n.\nappend\n(\nwordList\n)\n\n        \nfullText\n.\nextend\n(\nwordList\n)\n\n        \nclassList\n.\nappend\n(\n0\n)\n\n    \n# \u521b\u5efa\u8bcd\u6c47\u8868    \n\n    \nvocabList\n \n=\n \ncreateVocabList\n(\ndocList\n)\n\n    \ntrainingSet\n \n=\n \nrange\n(\n50\n)\n\n    \ntestSet\n \n=\n \n[]\n\n    \n# \u968f\u673a\u53d6 10 \u4e2a\u90ae\u4ef6\u7528\u6765\u6d4b\u8bd5\n\n    \nfor\n \ni\n \nin\n \nrange\n(\n10\n):\n\n        \n# random.uniform(x, y) \u968f\u673a\u751f\u6210\u4e00\u4e2a\u8303\u56f4\u4e3a x - y \u7684\u5b9e\u6570\n\n        \nrandIndex\n \n=\n \nint\n(\nrandom\n.\nuniform\n(\n0\n,\n \nlen\n(\ntrainingSet\n)))\n\n        \ntestSet\n.\nappend\n(\ntrainingSet\n[\nrandIndex\n])\n\n        \ndel\n(\ntrainingSet\n[\nrandIndex\n])\n\n    \ntrainMat\n \n=\n \n[]\n\n    \ntrainClasses\n \n=\n \n[]\n\n    \nfor\n \ndocIndex\n \nin\n \ntrainingSet\n:\n\n        \ntrainMat\n.\nappend\n(\nsetOfWords2Vec\n(\nvocabList\n,\n \ndocList\n[\ndocIndex\n]))\n\n        \ntrainClasses\n.\nappend\n(\nclassList\n[\ndocIndex\n])\n\n    \np0V\n,\n \np1V\n,\n \npSpam\n \n=\n \ntrainNB0\n(\narray\n(\ntrainMat\n),\n \narray\n(\ntrainClasses\n))\n\n    \nerrorCount\n \n=\n \n0\n\n    \nfor\n \ndocIndex\n \nin\n \ntestSet\n:\n\n        \nwordVector\n \n=\n \nsetOfWords2Vec\n(\nvocabList\n,\n \ndocList\n[\ndocIndex\n])\n\n        \nif\n \nclassifyNB\n(\narray\n(\nwordVector\n),\n \np0V\n,\n \np1V\n,\n \npSpam\n)\n \n!=\n \nclassList\n[\ndocIndex\n]:\n\n            \nerrorCount\n \n+=\n \n1\n\n    \nprint\n \nthe errorCount is: \n,\n \nerrorCount\n\n    \nprint\n \nthe testSet length is :\n,\n \nlen\n(\ntestSet\n)\n\n    \nprint\n \nthe error rate is :\n,\n \nfloat\n(\nerrorCount\n)\n/\nlen\n(\ntestSet\n)\n\n\n\n\n\n\n\n\u4f7f\u7528\u7b97\u6cd5: \u6784\u5efa\u4e00\u4e2a\u5b8c\u6574\u7684\u7a0b\u5e8f\u5bf9\u4e00\u7ec4\u6587\u6863\u8fdb\u884c\u5206\u7c7b\uff0c\u5c06\u9519\u5206\u7684\u6587\u6863\u8f93\u51fa\u5230\u5c4f\u5e55\u4e0a\n\n\n\n\n\u5b8c\u6574\u4ee3\u7801\u5730\u5740\n: \nhttps://github.com/apachecn/MachineLearning/blob/master/src/python/4.NaiveBayes/bayes.py\n\n\n\u9879\u76ee\u6848\u4f8b3: \u4f7f\u7528\u6734\u7d20\u8d1d\u53f6\u65af\u5206\u7c7b\u5668\u4ece\u4e2a\u4eba\u5e7f\u544a\u4e2d\u83b7\u53d6\u533a\u57df\u503e\u5411\n\n\n\u9879\u76ee\u6982\u8ff0\n\n\n\u5e7f\u544a\u5546\u5f80\u5f80\u60f3\u77e5\u9053\u5173\u4e8e\u4e00\u4e2a\u4eba\u7684\u4e00\u4e9b\u7279\u5b9a\u4eba\u53e3\u7edf\u8ba1\u4fe1\u606f\uff0c\u4ee5\u4fbf\u80fd\u66f4\u597d\u5730\u5b9a\u5411\u63a8\u9500\u5e7f\u544a\u3002\n\n\n\u6211\u4eec\u5c06\u5206\u522b\u4ece\u7f8e\u56fd\u7684\u4e24\u4e2a\u57ce\u5e02\u4e2d\u9009\u53d6\u4e00\u4e9b\u4eba\uff0c\u901a\u8fc7\u5206\u6790\u8fd9\u4e9b\u4eba\u53d1\u5e03\u7684\u4fe1\u606f\uff0c\u6765\u6bd4\u8f83\u8fd9\u4e24\u4e2a\u57ce\u5e02\u7684\u4eba\u4eec\u5728\u5e7f\u544a\u7528\u8bcd\u4e0a\u662f\u5426\u4e0d\u540c\u3002\u5982\u679c\u7ed3\u8bba\u786e\u5b9e\u4e0d\u540c\uff0c\u90a3\u4e48\u4ed6\u4eec\u5404\u81ea\u5e38\u7528\u7684\u8bcd\u662f\u90a3\u4e9b\uff0c\u4ece\u4eba\u4eec\u7684\u7528\u8bcd\u5f53\u4e2d\uff0c\u6211\u4eec\u80fd\u5426\u5bf9\u4e0d\u540c\u57ce\u5e02\u7684\u4eba\u6240\u5173\u5fc3\u7684\u5185\u5bb9\u6709\u6240\u4e86\u89e3\u3002\n\n\n\u5f00\u53d1\u6d41\u7a0b\n\n\n\u6536\u96c6\u6570\u636e: \u4ece RSS \u6e90\u6536\u96c6\u5185\u5bb9\uff0c\u8fd9\u91cc\u9700\u8981\u5bf9 RSS \u6e90\u6784\u5efa\u4e00\u4e2a\u63a5\u53e3\n\u51c6\u5907\u6570\u636e: \u5c06\u6587\u672c\u6587\u4ef6\u89e3\u6790\u6210\u8bcd\u6761\u5411\u91cf\n\u5206\u6790\u6570\u636e: \u68c0\u67e5\u8bcd\u6761\u786e\u4fdd\u89e3\u6790\u7684\u6b63\u786e\u6027\n\u8bad\u7ec3\u7b97\u6cd5: \u4f7f\u7528\u6211\u4eec\u4e4b\u524d\u5efa\u7acb\u7684 trainNB0() \u51fd\u6570\n\u6d4b\u8bd5\u7b97\u6cd5: \u89c2\u5bdf\u9519\u8bef\u7387\uff0c\u786e\u4fdd\u5206\u7c7b\u5668\u53ef\u7528\u3002\u53ef\u4ee5\u4fee\u6539\u5207\u5206\u7a0b\u5e8f\uff0c\u4ee5\u964d\u4f4e\u9519\u8bef\u7387\uff0c\u63d0\u9ad8\u5206\u7c7b\u7ed3\u679c\n\u4f7f\u7528\u7b97\u6cd5: \u6784\u5efa\u4e00\u4e2a\u5b8c\u6574\u7684\u7a0b\u5e8f\uff0c\u5c01\u88c5\u6240\u6709\u5185\u5bb9\u3002\u7ed9\u5b9a\u4e24\u4e2a RSS \u6e90\uff0c\u6539\u7a0b\u5e8f\u4f1a\u663e\u793a\u6700\u5e38\u7528\u7684\u516c\u5171\u8bcd\n\n\n\n\n\n\n\u6536\u96c6\u6570\u636e: \u4ece RSS \u6e90\u6536\u96c6\u5185\u5bb9\uff0c\u8fd9\u91cc\u9700\u8981\u5bf9 RSS \u6e90\u6784\u5efa\u4e00\u4e2a\u63a5\u53e3\n\n\n\n\n\u4e5f\u5c31\u662f\u5bfc\u5165 RSS \u6e90\uff0c\u6211\u4eec\u4f7f\u7528 python \u4e0b\u8f7d\u6587\u672c\uff0c\u5728http://code.google.com/p/feedparser/ \u4e0b\u6d4f\u89c8\u76f8\u5173\u6587\u6863\uff0c\u5b89\u88c5 feedparse\uff0c\u9996\u5148\u89e3\u538b\u4e0b\u8f7d\u7684\u5305\uff0c\u5e76\u5c06\u5f53\u524d\u76ee\u5f55\u5207\u6362\u5230\u89e3\u538b\u6587\u4ef6\u6240\u5728\u7684\u6587\u4ef6\u5939\uff0c\u7136\u540e\u5728 python \u63d0\u793a\u7b26\u4e0b\u8f93\u5165\uff1a\n\n\n \npython\n \nsetup\n.\npy\n \ninstall\n\n\n\n\n\n\n\n\u51c6\u5907\u6570\u636e: \u5c06\u6587\u672c\u6587\u4ef6\u89e3\u6790\u6210\u8bcd\u6761\u5411\u91cf\n\n\n\n\n\u6587\u6863\u8bcd\u888b\u6a21\u578b\n\n\n\u6211\u4eec\u5c06\u6bcf\u4e2a\u8bcd\u7684\u51fa\u73b0\u4e0e\u5426\u4f5c\u4e3a\u4e00\u4e2a\u7279\u5f81\uff0c\u8fd9\u53ef\u4ee5\u88ab\u63cf\u8ff0\u4e3a \n\u8bcd\u96c6\u6a21\u578b(set-of-words model)\n\u3002\u5982\u679c\u4e00\u4e2a\u8bcd\u5728\u6587\u6863\u4e2d\u51fa\u73b0\u4e0d\u6b62\u4e00\u6b21\uff0c\u8fd9\u53ef\u80fd\u610f\u5473\u7740\u5305\u542b\u8be5\u8bcd\u662f\u5426\u51fa\u73b0\u5728\u6587\u6863\u4e2d\u6240\u4e0d\u80fd\u8868\u8fbe\u7684\u67d0\u79cd\u4fe1\u606f\uff0c\u8fd9\u79cd\u65b9\u6cd5\u88ab\u79f0\u4e3a \n\u8bcd\u888b\u6a21\u578b(bag-of-words model)\n\u3002\u5728\u8bcd\u888b\u4e2d\uff0c\u6bcf\u4e2a\u5355\u8bcd\u53ef\u4ee5\u51fa\u73b0\u591a\u6b21\uff0c\u800c\u5728\u8bcd\u96c6\u4e2d\uff0c\u6bcf\u4e2a\u8bcd\u53ea\u80fd\u51fa\u73b0\u4e00\u6b21\u3002\u4e3a\u9002\u5e94\u8bcd\u888b\u6a21\u578b\uff0c\u9700\u8981\u5bf9\u51fd\u6570 setOfWords2Vec() \u7a0d\u52a0\u4fee\u6539\uff0c\u4fee\u6539\u540e\u7684\u51fd\u6570\u4e3a bagOfWords2Vec() \u3002\n\n\n\u5982\u4e0b\u7ed9\u51fa\u4e86\u57fa\u4e8e\u8bcd\u888b\u6a21\u578b\u7684\u6734\u7d20\u8d1d\u53f6\u65af\u4ee3\u7801\u3002\u5b83\u4e0e\u51fd\u6570 setOfWords2Vec() \u51e0\u4e4e\u5b8c\u5168\u76f8\u540c\uff0c\u552f\u4e00\u4e0d\u540c\u7684\u662f\u6bcf\u5f53\u9047\u5230\u4e00\u4e2a\u5355\u8bcd\u65f6\uff0c\u5b83\u4f1a\u589e\u52a0\u8bcd\u5411\u91cf\u4e2d\u7684\u5bf9\u5e94\u503c\uff0c\u800c\u4e0d\u53ea\u662f\u5c06\u5bf9\u5e94\u7684\u6570\u503c\u8bbe\u4e3a 1 \u3002\n\n\ndef\n \nbagOfWords2VecMN\n(\nvocaList\n,\n \ninputSet\n):\n\n    \nreturnVec\n \n=\n \n[\n0\n]\n \n*\n \nlen\n(\nvocabList\n)\n\n    \nfor\n \nword\n \nin\n \ninputSet\n:\n\n        \nif\n \nword\n \nin\n \ninputSet\n:\n\n            \nreturnVec\n[\nvocabList\n.\nindex\n(\nword\n)]\n \n+=\n \n1\n\n    \nreturn\n \nreturnVec\n\n\n\n\n\n#\u521b\u5efa\u4e00\u4e2a\u5305\u542b\u5728\u6240\u6709\u6587\u6863\u4e2d\u51fa\u73b0\u7684\u4e0d\u91cd\u590d\u8bcd\u7684\u5217\u8868\n\n\ndef\n \ncreateVocabList\n(\ndataSet\n):\n\n    \nvocabSet\n=\nset\n([])\n    \n#\u521b\u5efa\u4e00\u4e2a\u7a7a\u96c6\n\n    \nfor\n \ndocument\n \nin\n \ndataSet\n:\n\n        \nvocabSet\n=\nvocabSet\n|\nset\n(\ndocument\n)\n   \n#\u521b\u5efa\u4e24\u4e2a\u96c6\u5408\u7684\u5e76\u96c6\n\n    \nreturn\n \nlist\n(\nvocabSet\n)\n\n\ndef\n \nsetOfWords2VecMN\n(\nvocabList\n,\ninputSet\n):\n\n    \nreturnVec\n=\n[\n0\n]\n*\nlen\n(\nvocabList\n)\n  \n#\u521b\u5efa\u4e00\u4e2a\u5176\u4e2d\u6240\u542b\u5143\u7d20\u90fd\u4e3a0\u7684\u5411\u91cf\n\n    \nfor\n \nword\n \nin\n \ninputSet\n:\n\n        \nif\n \nword\n \nin\n \nvocabList\n:\n\n                \nreturnVec\n[\nvocabList\n.\nindex\n(\nword\n)]\n+=\n1\n\n    \nreturn\n \nreturnVec\n\n\n\n#\u6587\u4ef6\u89e3\u6790\n\n\ndef\n \ntextParse\n(\nbigString\n):\n\n    \nimport\n \nre\n\n    \nlistOfTokens\n=\nre\n.\nsplit\n(\nr\n\\W*\n,\nbigString\n)\n\n    \nreturn\n \n[\ntok\n.\nlower\n()\n \nfor\n \ntok\n \nin\n \nlistOfTokens\n \nif\n \nlen\n(\ntok\n)\n2\n]\n\n\n\n\n\n\n\n\u5206\u6790\u6570\u636e: \u68c0\u67e5\u8bcd\u6761\u786e\u4fdd\u89e3\u6790\u7684\u6b63\u786e\u6027\n\n\n\u8bad\u7ec3\u7b97\u6cd5: \u4f7f\u7528\u6211\u4eec\u4e4b\u524d\u5efa\u7acb\u7684 trainNB0() \u51fd\u6570\n\n\n\n\ndef\n \ntrainNB0\n(\ntrainMatrix\n,\n \ntrainCategory\n):\n\n    \n\n\n    \u8bad\u7ec3\u6570\u636e\u4f18\u5316\u7248\u672c\n\n\n    :param trainMatrix: \u6587\u4ef6\u5355\u8bcd\u77e9\u9635\n\n\n    :param trainCategory: \u6587\u4ef6\u5bf9\u5e94\u7684\u7c7b\u522b\n\n\n    :return:\n\n\n    \n\n    \n# \u603b\u6587\u4ef6\u6570\n\n    \nnumTrainDocs\n \n=\n \nlen\n(\ntrainMatrix\n)\n\n    \n# \u603b\u5355\u8bcd\u6570\n\n    \nnumWords\n \n=\n \nlen\n(\ntrainMatrix\n[\n0\n])\n\n    \n# \u4fae\u8fb1\u6027\u6587\u4ef6\u7684\u51fa\u73b0\u6982\u7387\n\n    \npAbusive\n \n=\n \nsum\n(\ntrainCategory\n)\n \n/\n \nfloat\n(\nnumTrainDocs\n)\n\n    \n# \u6784\u9020\u5355\u8bcd\u51fa\u73b0\u6b21\u6570\u5217\u8868\n\n    \n# p0Num \u6b63\u5e38\u7684\u7edf\u8ba1\n\n    \n# p1Num \u4fae\u8fb1\u7684\u7edf\u8ba1 \n\n    \n# \u907f\u514d\u5355\u8bcd\u5217\u8868\u4e2d\u7684\u4efb\u4f55\u4e00\u4e2a\u5355\u8bcd\u4e3a0\uff0c\u800c\u5bfc\u81f4\u6700\u540e\u7684\u4e58\u79ef\u4e3a0\uff0c\u6240\u4ee5\u5c06\u6bcf\u4e2a\u5355\u8bcd\u7684\u51fa\u73b0\u6b21\u6570\u521d\u59cb\u5316\u4e3a 1\n\n    \np0Num\n \n=\n \nones\n(\nnumWords\n)\n#[0,0......]-\n[1,1,1,1,1.....]\n\n    \np1Num\n \n=\n \nones\n(\nnumWords\n)\n\n\n    \n# \u6574\u4e2a\u6570\u636e\u96c6\u5355\u8bcd\u51fa\u73b0\u603b\u6570\uff0c2.0\u6839\u636e\u6837\u672c/\u5b9e\u9645\u8c03\u67e5\u7ed3\u679c\u8c03\u6574\u5206\u6bcd\u7684\u503c\uff082\u4e3b\u8981\u662f\u907f\u514d\u5206\u6bcd\u4e3a0\uff0c\u5f53\u7136\u503c\u53ef\u4ee5\u8c03\u6574\uff09\n\n    \n# p0Denom \u6b63\u5e38\u7684\u7edf\u8ba1\n\n    \n# p1Denom \u4fae\u8fb1\u7684\u7edf\u8ba1\n\n    \np0Denom\n \n=\n \n2.0\n\n    \np1Denom\n \n=\n \n2.0\n\n    \nfor\n \ni\n \nin\n \nrange\n(\nnumTrainDocs\n):\n\n        \nif\n \ntrainCategory\n[\ni\n]\n \n==\n \n1\n:\n\n            \n# \u7d2f\u52a0\u8fb1\u9a82\u8bcd\u7684\u9891\u6b21\n\n            \np1Num\n \n+=\n \ntrainMatrix\n[\ni\n]\n\n            \n# \u5bf9\u6bcf\u7bc7\u6587\u7ae0\u7684\u8fb1\u9a82\u7684\u9891\u6b21 \u8fdb\u884c\u7edf\u8ba1\u6c47\u603b\n\n            \np1Denom\n \n+=\n \nsum\n(\ntrainMatrix\n[\ni\n])\n\n        \nelse\n:\n\n            \np0Num\n \n+=\n \ntrainMatrix\n[\ni\n]\n\n            \np0Denom\n \n+=\n \nsum\n(\ntrainMatrix\n[\ni\n])\n\n    \n# \u7c7b\u522b1\uff0c\u5373\u4fae\u8fb1\u6027\u6587\u6863\u7684[log(P(F1|C1)),log(P(F2|C1)),log(P(F3|C1)),log(P(F4|C1)),log(P(F5|C1))....]\u5217\u8868\n\n    \np1Vect\n \n=\n \nlog\n(\np1Num\n \n/\n \np1Denom\n)\n\n    \n# \u7c7b\u522b0\uff0c\u5373\u6b63\u5e38\u6587\u6863\u7684[log(P(F1|C0)),log(P(F2|C0)),log(P(F3|C0)),log(P(F4|C0)),log(P(F5|C0))....]\u5217\u8868\n\n    \np0Vect\n \n=\n \nlog\n(\np0Num\n \n/\n \np0Denom\n)\n\n    \nreturn\n \np0Vect\n,\n \np1Vect\n,\n \npAbusive\n\n\n\n\n\n\n\n\u6d4b\u8bd5\u7b97\u6cd5: \u89c2\u5bdf\u9519\u8bef\u7387\uff0c\u786e\u4fdd\u5206\u7c7b\u5668\u53ef\u7528\u3002\u53ef\u4ee5\u4fee\u6539\u5207\u5206\u7a0b\u5e8f\uff0c\u4ee5\u964d\u4f4e\u9519\u8bef\u7387\uff0c\u63d0\u9ad8\u5206\u7c7b\u7ed3\u679c\n\n\n\n\n#RSS\u6e90\u5206\u7c7b\u5668\u53ca\u9ad8\u9891\u8bcd\u53bb\u9664\u51fd\u6570\n\n\ndef\n \ncalcMostFreq\n(\nvocabList\n,\nfullText\n):\n\n    \nimport\n \noperator\n\n    \nfreqDict\n=\n{}\n\n    \nfor\n \ntoken\n \nin\n \nvocabList\n:\n  \n#\u904d\u5386\u8bcd\u6c47\u8868\u4e2d\u7684\u6bcf\u4e2a\u8bcd\n\n        \nfreqDict\n[\ntoken\n]\n=\nfullText\n.\ncount\n(\ntoken\n)\n  \n#\u7edf\u8ba1\u6bcf\u4e2a\u8bcd\u5728\u6587\u672c\u4e2d\u51fa\u73b0\u7684\u6b21\u6570\n\n    \nsortedFreq\n=\nsorted\n(\nfreqDict\n.\niteritems\n(),\nkey\n=\noperator\n.\nitemgetter\n(\n1\n),\nreverse\n=\nTrue\n)\n  \n#\u6839\u636e\u6bcf\u4e2a\u8bcd\u51fa\u73b0\u7684\u6b21\u6570\u4ece\u9ad8\u5230\u5e95\u5bf9\u5b57\u5178\u8fdb\u884c\u6392\u5e8f\n\n    \nreturn\n \nsortedFreq\n[:\n30\n]\n   \n#\u8fd4\u56de\u51fa\u73b0\u6b21\u6570\u6700\u9ad8\u768430\u4e2a\u5355\u8bcd\n\n\ndef\n \nlocalWords\n(\nfeed1\n,\nfeed0\n):\n\n    \nimport\n \nfeedparser\n\n    \ndocList\n=\n[];\nclassList\n=\n[];\nfullText\n=\n[]\n\n    \nminLen\n=\nmin\n(\nlen\n(\nfeed1\n[\nentries\n]),\nlen\n(\nfeed0\n[\nentries\n]))\n\n    \nfor\n \ni\n \nin\n \nrange\n(\nminLen\n):\n\n        \nwordList\n=\ntextParse\n(\nfeed1\n[\nentries\n][\ni\n][\nsummary\n])\n   \n#\u6bcf\u6b21\u8bbf\u95ee\u4e00\u6761RSS\u6e90\n\n        \ndocList\n.\nappend\n(\nwordList\n)\n\n        \nfullText\n.\nextend\n(\nwordList\n)\n\n        \nclassList\n.\nappend\n(\n1\n)\n\n        \nwordList\n=\ntextParse\n(\nfeed0\n[\nentries\n][\ni\n][\nsummary\n])\n\n        \ndocList\n.\nappend\n(\nwordList\n)\n\n        \nfullText\n.\nextend\n(\nwordList\n)\n\n        \nclassList\n.\nappend\n(\n0\n)\n\n    \nvocabList\n=\ncreateVocabList\n(\ndocList\n)\n\n    \ntop30Words\n=\ncalcMostFreq\n(\nvocabList\n,\nfullText\n)\n\n    \nfor\n \npairW\n \nin\n \ntop30Words\n:\n\n        \nif\n \npairW\n[\n0\n]\n \nin\n \nvocabList\n:\nvocabList\n.\nremove\n(\npairW\n[\n0\n])\n    \n#\u53bb\u6389\u51fa\u73b0\u6b21\u6570\u6700\u9ad8\u7684\u90a3\u4e9b\u8bcd\n\n    \ntrainingSet\n=\nrange\n(\n2\n*\nminLen\n);\ntestSet\n=\n[]\n\n    \nfor\n \ni\n \nin\n \nrange\n(\n20\n):\n\n        \nrandIndex\n=\nint\n(\nrandom\n.\nuniform\n(\n0\n,\nlen\n(\ntrainingSet\n)))\n\n        \ntestSet\n.\nappend\n(\ntrainingSet\n[\nrandIndex\n])\n\n        \ndel\n(\ntrainingSet\n[\nrandIndex\n])\n\n    \ntrainMat\n=\n[];\ntrainClasses\n=\n[]\n\n    \nfor\n \ndocIndex\n \nin\n \ntrainingSet\n:\n\n        \ntrainMat\n.\nappend\n(\nbagOfWords2VecMN\n(\nvocabList\n,\ndocList\n[\ndocIndex\n]))\n\n        \ntrainClasses\n.\nappend\n(\nclassList\n[\ndocIndex\n])\n\n    \np0V\n,\np1V\n,\npSpam\n=\ntrainNBO\n(\narray\n(\ntrainMat\n),\narray\n(\ntrainClasses\n))\n\n    \nerrorCount\n=\n0\n\n    \nfor\n \ndocIndex\n \nin\n \ntestSet\n:\n\n        \nwordVector\n=\nbagOfWords2VecMN\n(\nvocabList\n,\ndocList\n[\ndocIndex\n])\n\n        \nif\n \nclassifyNB\n(\narray\n(\nwordVector\n),\np0V\n,\np1V\n,\npSpam\n)\n!=\nclassList\n[\ndocIndex\n]:\n\n            \nerrorCount\n+=\n1\n\n    \nprint\n \nthe error rate is:\n,\nfloat\n(\nerrorCount\n)\n/\nlen\n(\ntestSet\n)\n\n    \nreturn\n \nvocabList\n,\np0V\n,\np1V\n\n\n\n#\u6734\u7d20\u8d1d\u53f6\u65af\u5206\u7c7b\u51fd\u6570\n\n\ndef\n \nclassifyNB\n(\nvec2Classify\n,\np0Vec\n,\np1Vec\n,\npClass1\n):\n\n    \np1\n=\nsum\n(\nvec2Classify\n*\np1Vec\n)\n+\nlog\n(\npClass1\n)\n\n    \np0\n=\nsum\n(\nvec2Classify\n*\np0Vec\n)\n+\nlog\n(\n1.0\n-\npClass1\n)\n\n    \nif\n \np1\np0\n:\n\n        \nreturn\n \n1\n\n    \nelse\n:\n\n        \nreturn\n \n0\n\n\n\n\n\n\n\n\u4f7f\u7528\u7b97\u6cd5: \u6784\u5efa\u4e00\u4e2a\u5b8c\u6574\u7684\u7a0b\u5e8f\uff0c\u5c01\u88c5\u6240\u6709\u5185\u5bb9\u3002\u7ed9\u5b9a\u4e24\u4e2a RSS \u6e90\uff0c\u6539\u7a0b\u5e8f\u4f1a\u663e\u793a\u6700\u5e38\u7528\u7684\u516c\u5171\u8bcd\n\n\n\n\n\u51fd\u6570 localWords() \u4f7f\u7528\u4e86\u4e24\u4e2a RSS \u6e90\u4f5c\u4e3a\u53c2\u6570\uff0cRSS \u6e90\u8981\u5728\u51fd\u6570\u5916\u5bfc\u5165\uff0c\u8fd9\u6837\u505a\u7684\u539f\u56e0\u662f RSS \u6e90\u4f1a\u968f\u65f6\u95f4\u800c\u6539\u53d8\uff0c\u91cd\u65b0\u52a0\u8f7d RSS \u6e90\u5c31\u4f1a\u5f97\u5230\u65b0\u7684\u6570\u636e\n\n\n \nreload\n(\nbayes\n)\n\n\nmodule\n \nbayes\n \nfrom\n \nbayes.pyc\n\n\n \nimport\n \nfeedparser\n\n\n \nny\n=\nfeedparser\n.\nparse\n(\nhttp://newyork.craigslist.org/stp/index.rss\n)\n\n\n \nsy\n=\nfeedparser\n.\nparse\n(\nhttp://sfbay.craigslist.org/stp/index.rss\n)\n\n\n \nvocabList\n,\npSF\n,\npNY\n=\nbayes\n.\nlocalWords\n(\nny\n,\nsf\n)\n\n\nthe\n \nerror\n \nrate\n \nis\n:\n \n0.2\n\n\n \nvocabList\n,\npSF\n,\npNY\n=\nbayes\n.\nlocalWords\n(\nny\n,\nsf\n)\n\n\nthe\n \nerror\n \nrate\n \nis\n:\n \n0.3\n\n\n \nvocabList\n,\npSF\n,\npNY\n=\nbayes\n.\nlocalWords\n(\nny\n,\nsf\n)\n\n\nthe\n \nerror\n \nrate\n \nis\n:\n \n0.55\n\n\n\n\u4e3a\u4e86\u5f97\u5230\u9519\u8bef\u7387\u7684\u7cbe\u786e\u4f30\u8ba1\uff0c\u5e94\u8be5\u591a\u6b21\u8fdb\u884c\u4e0a\u8ff0\u5b9e\u9a8c\uff0c\u7136\u540e\u53d6\u5e73\u5747\u503c\n\n\n\u63a5\u4e0b\u6765\uff0c\u6211\u4eec\u8981\u5206\u6790\u4e00\u4e0b\u6570\u636e\uff0c\u663e\u793a\u5730\u57df\u76f8\u5173\u7684\u7528\u8bcd\n\n\n\u53ef\u4ee5\u5148\u5bf9\u5411\u91cfpSF\u4e0epNY\u8fdb\u884c\u6392\u5e8f\uff0c\u7136\u540e\u6309\u7167\u987a\u5e8f\u6253\u5370\u51fa\u6765\uff0c\u5c06\u4e0b\u9762\u7684\u4ee3\u7801\u6dfb\u52a0\u5230\u6587\u4ef6\u4e2d\uff1a\n\n\n#\u6700\u5177\u8868\u5f81\u6027\u7684\u8bcd\u6c47\u663e\u793a\u51fd\u6570\n\n\ndef\n \ngetTopWords\n(\nny\n,\nsf\n):\n\n    \nimport\n \noperator\n\n    \nvocabList\n,\np0V\n,\np1V\n=\nlocalWords\n(\nny\n,\nsf\n)\n\n    \ntopNY\n=\n[];\ntopSF\n=\n[]\n\n    \nfor\n \ni\n \nin\n \nrange\n(\nlen\n(\np0V\n)):\n\n        \nif\n \np0V\n[\ni\n]\n-\n6.0\n:\ntopSF\n.\nappend\n((\nvocabList\n[\ni\n],\np0V\n[\ni\n]))\n\n        \nif\n \np1V\n[\ni\n]\n-\n6.0\n:\ntopNY\n.\nappend\n((\nvocabList\n[\ni\n],\np1V\n[\ni\n]))\n\n    \nsortedSF\n=\nsorted\n(\ntopSF\n,\nkey\n=\nlambda\n \npair\n:\npair\n[\n1\n],\nreverse\n=\nTrue\n)\n\n    \nprint\n \nSF**SF**SF**SF**SF**SF**SF**SF**SF**SF**SF**SF**SF**SF**\n\n    \nfor\n \nitem\n \nin\n \nsortedSF\n:\n\n        \nprint\n \nitem\n[\n0\n]\n\n    \nsortedNY\n=\nsorted\n(\ntopNY\n,\nkey\n=\nlambda\n \npair\n:\npair\n[\n1\n],\nreverse\n=\nTrue\n)\n\n    \nprint\n \nNY**NY**NY**NY**NY**NY**NY**NY**NY**NY**NY**NY**NY**NY**\n\n    \nfor\n \nitem\n \nin\n \nsortedNY\n:\n\n        \nprint\n \nitem\n[\n0\n]\n\n\n\n\n\n\u51fd\u6570 getTopWords() \u4f7f\u7528\u4e24\u4e2a RSS \u6e90\u4f5c\u4e3a\u8f93\u5165\uff0c\u7136\u540e\u8bad\u7ec3\u5e76\u6d4b\u8bd5\u6734\u7d20\u8d1d\u53f6\u65af\u5206\u7c7b\u5668\uff0c\u8fd4\u56de\u4f7f\u7528\u7684\u6982\u7387\u503c\u3002\u7136\u540e\u521b\u5efa\u4e24\u4e2a\u5217\u8868\u7528\u4e8e\u5143\u7ec4\u7684\u5b58\u50a8\uff0c\u4e0e\u4e4b\u524d\u8fd4\u56de\u6392\u540d\u6700\u9ad8\u7684 X \u4e2a\u5355\u8bcd\u4e0d\u540c\uff0c\u8fd9\u91cc\u53ef\u4ee5\u8fd4\u56de\u5927\u4e8e\u67d0\u4e2a\u9608\u503c\u7684\u6240\u6709\u8bcd\uff0c\u8fd9\u4e9b\u5143\u7ec4\u4f1a\u6309\u7167\u5b83\u4eec\u7684\u6761\u4ef6\u6982\u7387\u8fdb\u884c\u6392\u5e8f\u3002\n\n\n\u4fdd\u5b58 bayes.py \u6587\u4ef6\uff0c\u5728python\u63d0\u793a\u7b26\u4e0b\u8f93\u5165\uff1a\n\n\n \nreload\n(\nbayes\n)\n\n\nmodule\n \nbayes\n \nfrom\n \nbayes.pyc\n\n\n \nbayes\n.\ngetTopWords\n(\nny\n,\nsf\n)\n\n\nthe\n \nerror\n \nrate\n \nis\n:\n \n0.55\n\n\nSF\n**\nSF\n**\nSF\n**\nSF\n**\nSF\n**\nSF\n**\nSF\n**\nSF\n**\nSF\n**\nSF\n**\nSF\n**\nSF\n**\nSF\n**\nSF\n**\n\n\nhow\n\n\nlast\n\n\nman\n\n\n...\n\n\nveteran\n\n\nstill\n\n\nends\n\n\nlate\n\n\noff\n\n\nown\n\n\nknow\n\n\nNY\n**\nNY\n**\nNY\n**\nNY\n**\nNY\n**\nNY\n**\nNY\n**\nNY\n**\nNY\n**\nNY\n**\nNY\n**\nNY\n**\nNY\n**\nNY\n**\n\n\nsomeone\n\n\nmeet\n\n\n...\n\n\napparel\n\n\nrecalled\n\n\nstarting\n\n\nstrings\n\n\n\n\n\n\u5f53\u6ce8\u91ca\u6389\u7528\u4e8e\u79fb\u9664\u9ad8\u9891\u8bcd\u7684\u4e09\u884c\u4ee3\u7801\uff0c\u7136\u540e\u6bd4\u8f83\u6ce8\u91ca\u524d\u540e\u7684\u5206\u7c7b\u6027\u80fd\uff0c\u53bb\u6389\u8fd9\u51e0\u884c\u4ee3\u7801\u4e4b\u540e\uff0c\u9519\u8bef\u7387\u4e3a54%\uff0c\uff0c\u800c\u4fdd\u7559\u8fd9\u4e9b\u4ee3\u7801\u5f97\u5230\u7684\u9519\u8bef\u7387\u4e3a70%\u3002\u8fd9\u91cc\u89c2\u5bdf\u5230\uff0c\u8fd9\u4e9b\u7559\u8a00\u4e2d\u51fa\u73b0\u6b21\u6570\u6700\u591a\u7684\u524d30\u4e2a\u8bcd\u6db5\u76d6\u4e86\u6240\u6709\u7528\u8bcd\u768430%\uff0cvocabList\u7684\u5927\u5c0f\u7ea6\u4e3a3000\u4e2a\u8bcd\uff0c\u4e5f\u5c31\u662f\u8bf4\uff0c\u8bcd\u6c47\u8868\u4e2d\u7684\u4e00\u5c0f\u90e8\u5206\u5355\u8bcd\u5374\u5360\u636e\u4e86\u6240\u6709\u6587\u672c\u7528\u8bcd\u7684\u4e00\u5927\u90e8\u5206\u3002\u4ea7\u751f\u8fd9\u79cd\u73b0\u8c61\u7684\u539f\u56e0\u662f\u56e0\u4e3a\u8bed\u8a00\u4e2d\u5927\u90e8\u5206\u90fd\u662f\u5197\u4f59\u548c\u7ed3\u6784\u8f85\u52a9\u6027\u5185\u5bb9\u3002\u53e6\u4e00\u4e2a\u5e38\u7528\u7684\u65b9\u6cd5\u662f\u4e0d\u4ec5\u79fb\u9664\u9ad8\u9891\u8bcd\uff0c\u540c\u65f6\u4ece\u67d0\u4e2a\u9884\u5b9a\u9ad8\u9891\u8bcd\u4e2d\u79fb\u9664\u7ed3\u6784\u4e0a\u7684\u8f85\u52a9\u8bcd\uff0c\u8be5\u8bcd\u8868\u79f0\u4e3a\u505c\u7528\u8bcd\u8868\u3002\n\n\n\u6700\u540e\u8f93\u51fa\u7684\u5355\u8bcd\uff0c\u53ef\u4ee5\u770b\u51fa\u7a0b\u5e8f\u8f93\u51fa\u4e86\u5927\u91cf\u7684\u505c\u7528\u8bcd\uff0c\u53ef\u4ee5\u79fb\u9664\u56fa\u5b9a\u7684\u505c\u7528\u8bcd\u770b\u770b\u7ed3\u679c\u5982\u4f55\uff0c\u8fd9\u6837\u505a\u7684\u82b1\uff0c\u5206\u7c7b\u9519\u8bef\u7387\u4e5f\u4f1a\u964d\u4f4e\u3002\n\n\n\u5b8c\u6574\u4ee3\u7801\u5730\u5740\n: \nhttps://github.com/apachecn/MachineLearning/blob/master/src/python/4.NaiveBayes/bayes.py\n\n\n\n\n\n\n\u4f5c\u8005\uff1a\n\u7f8a\u4e09\n \n\u5c0f\u7476\n\n\nGitHub\u5730\u5740\n: \nhttps://github.com/apachecn/MachineLearning\n\n\n\u7248\u6743\u58f0\u660e\uff1a\u6b22\u8fce\u8f6c\u8f7d\u5b66\u4e60 =\n \u8bf7\u6807\u6ce8\u4fe1\u606f\u6765\u6e90\u4e8e \nApacheCN", 
            "title": "4.\u6734\u7d20\u8d1d\u53f6\u65af"
        }, 
        {
            "location": "/\u4e66\u7c4d/\u673a\u5668\u5b66\u4e60\u5b9e\u6218/04.\u6734\u7d20\u8d1d\u53f6\u65af/#4", 
            "text": "", 
            "title": "\u7b2c4\u7ae0 \u57fa\u4e8e\u6982\u7387\u8bba\u7684\u5206\u7c7b\u65b9\u6cd5\uff1a\u6734\u7d20\u8d1d\u53f6\u65af"
        }, 
        {
            "location": "/\u4e66\u7c4d/\u673a\u5668\u5b66\u4e60\u5b9e\u6218/04.\u6734\u7d20\u8d1d\u53f6\u65af/#_1", 
            "text": "\u8d1d\u53f6\u65af\u5206\u7c7b\u662f\u4e00\u7c7b\u5206\u7c7b\u7b97\u6cd5\u7684\u603b\u79f0\uff0c\u8fd9\u7c7b\u7b97\u6cd5\u5747\u4ee5\u8d1d\u53f6\u65af\u5b9a\u7406\u4e3a\u57fa\u7840\uff0c\u6545\u7edf\u79f0\u4e3a\u8d1d\u53f6\u65af\u5206\u7c7b\u3002\u672c\u7ae0\u9996\u5148\u4ecb\u7ecd\u8d1d\u53f6\u65af\u5206\u7c7b\u7b97\u6cd5\u7684\u57fa\u7840\u2014\u2014\u8d1d\u53f6\u65af\u5b9a\u7406\u3002\u6700\u540e\uff0c\u6211\u4eec\u901a\u8fc7\u5b9e\u4f8b\u6765\u8ba8\u8bba\u8d1d\u53f6\u65af\u5206\u7c7b\u7684\u4e2d\u6700\u7b80\u5355\u7684\u4e00\u79cd: \u6734\u7d20\u8d1d\u53f6\u65af\u5206\u7c7b\u3002", 
            "title": "\u6734\u7d20\u8d1d\u53f6\u65af \u6982\u8ff0"
        }, 
        {
            "location": "/\u4e66\u7c4d/\u673a\u5668\u5b66\u4e60\u5b9e\u6218/04.\u6734\u7d20\u8d1d\u53f6\u65af/#_2", 
            "text": "", 
            "title": "\u8d1d\u53f6\u65af\u7406\u8bba &amp; \u6761\u4ef6\u6982\u7387"
        }, 
        {
            "location": "/\u4e66\u7c4d/\u673a\u5668\u5b66\u4e60\u5b9e\u6218/04.\u6734\u7d20\u8d1d\u53f6\u65af/#_3", 
            "text": "\u6211\u4eec\u73b0\u5728\u6709\u4e00\u4e2a\u6570\u636e\u96c6\uff0c\u5b83\u7531\u4e24\u7c7b\u6570\u636e\u7ec4\u6210\uff0c\u6570\u636e\u5206\u5e03\u5982\u4e0b\u56fe\u6240\u793a\uff1a   \u6211\u4eec\u73b0\u5728\u7528 p1(x,y) \u8868\u793a\u6570\u636e\u70b9 (x,y) \u5c5e\u4e8e\u7c7b\u522b 1\uff08\u56fe\u4e2d\u7528\u5706\u70b9\u8868\u793a\u7684\u7c7b\u522b\uff09\u7684\u6982\u7387\uff0c\u7528 p2(x,y) \u8868\u793a\u6570\u636e\u70b9 (x,y) \u5c5e\u4e8e\u7c7b\u522b 2\uff08\u56fe\u4e2d\u4e09\u89d2\u5f62\u8868\u793a\u7684\u7c7b\u522b\uff09\u7684\u6982\u7387\uff0c\u90a3\u4e48\u5bf9\u4e8e\u4e00\u4e2a\u65b0\u6570\u636e\u70b9 (x,y)\uff0c\u53ef\u4ee5\u7528\u4e0b\u9762\u7684\u89c4\u5219\u6765\u5224\u65ad\u5b83\u7684\u7c7b\u522b\uff1a\n* \u5982\u679c p1(x,y)   p2(x,y) \uff0c\u90a3\u4e48\u7c7b\u522b\u4e3a1\n* \u5982\u679c p2(x,y)   p1(x,y) \uff0c\u90a3\u4e48\u7c7b\u522b\u4e3a2  \u4e5f\u5c31\u662f\u8bf4\uff0c\u6211\u4eec\u4f1a\u9009\u62e9\u9ad8\u6982\u7387\u5bf9\u5e94\u7684\u7c7b\u522b\u3002\u8fd9\u5c31\u662f\u8d1d\u53f6\u65af\u51b3\u7b56\u7406\u8bba\u7684\u6838\u5fc3\u601d\u60f3\uff0c\u5373\u9009\u62e9\u5177\u6709\u6700\u9ad8\u6982\u7387\u7684\u51b3\u7b56\u3002", 
            "title": "\u8d1d\u53f6\u65af\u7406\u8bba"
        }, 
        {
            "location": "/\u4e66\u7c4d/\u673a\u5668\u5b66\u4e60\u5b9e\u6218/04.\u6734\u7d20\u8d1d\u53f6\u65af/#_4", 
            "text": "\u5982\u679c\u4f60\u5bf9 p(x,y|c1) \u7b26\u53f7\u5f88\u719f\u6089\uff0c\u90a3\u4e48\u53ef\u4ee5\u8df3\u8fc7\u672c\u5c0f\u8282\u3002  \u6709\u4e00\u4e2a\u88c5\u4e86 7 \u5757\u77f3\u5934\u7684\u7f50\u5b50\uff0c\u5176\u4e2d 3 \u5757\u662f\u767d\u8272\u7684\uff0c4 \u5757\u662f\u9ed1\u8272\u7684\u3002\u5982\u679c\u4ece\u7f50\u5b50\u4e2d\u968f\u673a\u53d6\u51fa\u4e00\u5757\u77f3\u5934\uff0c\u90a3\u4e48\u662f\u767d\u8272\u77f3\u5934\u7684\u53ef\u80fd\u6027\u662f\u591a\u5c11\uff1f\u7531\u4e8e\u53d6\u77f3\u5934\u6709 7 \u79cd\u53ef\u80fd\uff0c\u5176\u4e2d 3 \u79cd\u4e3a\u767d\u8272\uff0c\u6240\u4ee5\u53d6\u51fa\u767d\u8272\u77f3\u5934\u7684\u6982\u7387\u4e3a 3/7 \u3002\u90a3\u4e48\u53d6\u5230\u9ed1\u8272\u77f3\u5934\u7684\u6982\u7387\u53c8\u662f\u591a\u5c11\u5462\uff1f\u5f88\u663e\u7136\uff0c\u662f 4/7 \u3002\u6211\u4eec\u4f7f\u7528 P(white) \u6765\u8868\u793a\u53d6\u5230\u767d\u8272\u77f3\u5934\u7684\u6982\u7387\uff0c\u5176\u6982\u7387\u503c\u53ef\u4ee5\u901a\u8fc7\u767d\u8272\u77f3\u5934\u6570\u76ee\u9664\u4ee5\u603b\u7684\u77f3\u5934\u6570\u76ee\u6765\u5f97\u5230\u3002   \u5982\u679c\u8fd9 7 \u5757\u77f3\u5934\u5982\u4e0b\u56fe\u6240\u793a\uff0c\u653e\u5728\u4e24\u4e2a\u6876\u4e2d\uff0c\u90a3\u4e48\u4e0a\u8ff0\u6982\u7387\u5e94\u8be5\u5982\u4f55\u8ba1\u7b97\uff1f   \u8ba1\u7b97 P(white) \u6216\u8005 P(black) \uff0c\u5982\u679c\u4e8b\u5148\u6211\u4eec\u77e5\u9053\u77f3\u5934\u6240\u5728\u6876\u7684\u4fe1\u606f\u662f\u4f1a\u6539\u53d8\u7ed3\u679c\u7684\u3002\u8fd9\u5c31\u662f\u6240\u8c13\u7684\u6761\u4ef6\u6982\u7387\uff08conditional probablity\uff09\u3002\u5047\u5b9a\u8ba1\u7b97\u7684\u662f\u4ece B \u6876\u53d6\u5230\u767d\u8272\u77f3\u5934\u7684\u6982\u7387\uff0c\u8fd9\u4e2a\u6982\u7387\u53ef\u4ee5\u8bb0\u4f5c P(white|bucketB) \uff0c\u6211\u4eec\u79f0\u4e4b\u4e3a\u201c\u5728\u5df2\u77e5\u77f3\u5934\u51fa\u81ea B \u6876\u7684\u6761\u4ef6\u4e0b\uff0c\u53d6\u51fa\u767d\u8272\u77f3\u5934\u7684\u6982\u7387\u201d\u3002\u5f88\u5bb9\u6613\u5f97\u5230\uff0cP(white|bucketA) \u503c\u4e3a 2/4 \uff0cP(white|bucketB) \u7684\u503c\u4e3a   \u3002  \u6761\u4ef6\u6982\u7387\u7684\u8ba1\u7b97\u516c\u5f0f\u5982\u4e0b\uff1a  P(white|bucketB) = P(white and bucketB) / P(bucketB)  \u9996\u5148\uff0c\u6211\u4eec\u7528 B \u6876\u4e2d\u767d\u8272\u77f3\u5934\u7684\u4e2a\u6570\u9664\u4ee5\u4e24\u4e2a\u6876\u4e2d\u603b\u7684\u77f3\u5934\u6570\uff0c\u5f97\u5230 P(white and bucketB) = 1/7 .\u5176\u6b21\uff0c\u7531\u4e8e B \u6876\u4e2d\u6709 3 \u5757\u77f3\u5934\uff0c\u800c\u603b\u77f3\u5934\u6570\u4e3a 7 \uff0c\u4e8e\u662f P(bucketB) \u5c31\u7b49\u4e8e 3/7 \u3002\u4e8e\u662f\u53c8 P(white|bucketB) = P(white and bucketB) / P(bucketB) = (1/7) / (3/7) =   \u3002  \u53e6\u5916\u4e00\u79cd\u6709\u6548\u8ba1\u7b97\u6761\u4ef6\u6982\u7387\u7684\u65b9\u6cd5\u79f0\u4e3a\u8d1d\u53f6\u65af\u51c6\u5219\u3002\u8d1d\u53f6\u65af\u51c6\u5219\u544a\u8bc9\u6211\u4eec\u5982\u4f55\u4ea4\u6362\u6761\u4ef6\u6982\u7387\u4e2d\u7684\u6761\u4ef6\u4e0e\u7ed3\u679c\uff0c\u5373\u5982\u679c\u5df2\u77e5 P(x|c)\uff0c\u8981\u6c42 P(c|x)\uff0c\u90a3\u4e48\u53ef\u4ee5\u4f7f\u7528\u4e0b\u9762\u7684\u8ba1\u7b97\u65b9\u6cd5\uff1a", 
            "title": "\u6761\u4ef6\u6982\u7387"
        }, 
        {
            "location": "/\u4e66\u7c4d/\u673a\u5668\u5b66\u4e60\u5b9e\u6218/04.\u6734\u7d20\u8d1d\u53f6\u65af/#_5", 
            "text": "\u4e0a\u9762\u6211\u4eec\u63d0\u5230\u8d1d\u53f6\u65af\u51b3\u7b56\u7406\u8bba\u8981\u6c42\u8ba1\u7b97\u4e24\u4e2a\u6982\u7387 p1(x, y) \u548c p2(x, y):\n* \u5982\u679c p1(x, y)   p2(x, y), \u90a3\u4e48\u5c5e\u4e8e\u7c7b\u522b 1;\n* \u5982\u679c p2(x, y)   p1(X, y), \u90a3\u4e48\u5c5e\u4e8e\u7c7b\u522b 2.  \u8fd9\u5e76\u4e0d\u662f\u8d1d\u53f6\u65af\u51b3\u7b56\u7406\u8bba\u7684\u6240\u6709\u5185\u5bb9\u3002\u4f7f\u7528 p1() \u548c p2() \u53ea\u662f\u4e3a\u4e86\u5c3d\u53ef\u80fd\u7b80\u5316\u63cf\u8ff0\uff0c\u800c\u771f\u6b63\u9700\u8981\u8ba1\u7b97\u548c\u6bd4\u8f83\u7684\u662f p(c1|x, y) \u548c p(c2|x, y) .\u8fd9\u4e9b\u7b26\u53f7\u6240\u4ee3\u8868\u7684\u5177\u4f53\u610f\u4e49\u662f: \u7ed9\u5b9a\u67d0\u4e2a\u7531 x\u3001y \u8868\u793a\u7684\u6570\u636e\u70b9\uff0c\u90a3\u4e48\u8be5\u6570\u636e\u70b9\u6765\u81ea\u7c7b\u522b c1 \u7684\u6982\u7387\u662f\u591a\u5c11\uff1f\u6570\u636e\u70b9\u6765\u81ea\u7c7b\u522b c2 \u7684\u6982\u7387\u53c8\u662f\u591a\u5c11\uff1f\u6ce8\u610f\u8fd9\u4e9b\u6982\u7387\u4e0e\u6982\u7387 p(x, y|c1) \u5e76\u4e0d\u4e00\u6837\uff0c\u4e0d\u8fc7\u53ef\u4ee5\u4f7f\u7528\u8d1d\u53f6\u65af\u51c6\u5219\u6765\u4ea4\u6362\u6982\u7387\u4e2d\u6761\u4ef6\u4e0e\u7ed3\u679c\u3002\u5177\u4f53\u5730\uff0c\u5e94\u7528\u8d1d\u53f6\u65af\u51c6\u5219\u5f97\u5230:    \u4f7f\u7528\u4e0a\u9762\u8fd9\u4e9b\u5b9a\u4e49\uff0c\u53ef\u4ee5\u5b9a\u4e49\u8d1d\u53f6\u65af\u5206\u7c7b\u51c6\u5219\u4e3a:\n* \u5982\u679c P(c1|x, y)   P(c2|x, y), \u90a3\u4e48\u5c5e\u4e8e\u7c7b\u522b c1;\n* \u5982\u679c P(c2|x, y)   P(c1|x, y), \u90a3\u4e48\u5c5e\u4e8e\u7c7b\u522b c2.  \u5728\u6587\u6863\u5206\u7c7b\u4e2d\uff0c\u6574\u4e2a\u6587\u6863\uff08\u5982\u4e00\u5c01\u7535\u5b50\u90ae\u4ef6\uff09\u662f\u5b9e\u4f8b\uff0c\u800c\u7535\u5b50\u90ae\u4ef6\u4e2d\u7684\u67d0\u4e9b\u5143\u7d20\u5219\u6784\u6210\u7279\u5f81\u3002\u6211\u4eec\u53ef\u4ee5\u89c2\u5bdf\u6587\u6863\u4e2d\u51fa\u73b0\u7684\u8bcd\uff0c\u5e76\u628a\u6bcf\u4e2a\u8bcd\u4f5c\u4e3a\u4e00\u4e2a\u7279\u5f81\uff0c\u800c\u6bcf\u4e2a\u8bcd\u7684\u51fa\u73b0\u6216\u8005\u4e0d\u51fa\u73b0\u4f5c\u4e3a\u8be5\u7279\u5f81\u7684\u503c\uff0c\u8fd9\u6837\u5f97\u5230\u7684\u7279\u5f81\u6570\u76ee\u5c31\u4f1a\u8ddf\u8bcd\u6c47\u8868\u4e2d\u7684\u8bcd\u7684\u6570\u76ee\u4e00\u6837\u591a\u3002  \u6211\u4eec\u5047\u8bbe\u7279\u5f81\u4e4b\u95f4   \u76f8\u4e92\u72ec\u7acb  \u3002\u6240\u8c13  \u72ec\u7acb(independence)  \u6307\u7684\u662f\u7edf\u8ba1\u610f\u4e49\u4e0a\u7684\u72ec\u7acb\uff0c\u5373\u4e00\u4e2a\u7279\u5f81\u6216\u8005\u5355\u8bcd\u51fa\u73b0\u7684\u53ef\u80fd\u6027\u4e0e\u5b83\u548c\u5176\u4ed6\u5355\u8bcd\u76f8\u90bb\u6ca1\u6709\u5173\u7cfb\uff0c\u6bd4\u5982\u8bf4\uff0c\u201c\u6211\u4eec\u201d\u4e2d\u7684\u201c\u6211\u201d\u548c\u201c\u4eec\u201d\u51fa\u73b0\u7684\u6982\u7387\u4e0e\u8fd9\u4e24\u4e2a\u5b57\u76f8\u90bb\u6ca1\u6709\u4efb\u4f55\u5173\u7cfb\u3002\u8fd9\u4e2a\u5047\u8bbe\u6b63\u662f\u6734\u7d20\u8d1d\u53f6\u65af\u5206\u7c7b\u5668\u4e2d \u6734\u7d20(naive) \u4e00\u8bcd\u7684\u542b\u4e49\u3002\u6734\u7d20\u8d1d\u53f6\u65af\u5206\u7c7b\u5668\u4e2d\u7684\u53e6\u4e00\u4e2a\u5047\u8bbe\u662f\uff0c \u6bcf\u4e2a\u7279\u5f81\u540c\u7b49\u91cd\u8981 \u3002  Note:  \u6734\u7d20\u8d1d\u53f6\u65af\u5206\u7c7b\u5668\u901a\u5e38\u6709\u4e24\u79cd\u5b9e\u73b0\u65b9\u5f0f: \u4e00\u79cd\u57fa\u4e8e\u4f2f\u52aa\u5229\u6a21\u578b\u5b9e\u73b0\uff0c\u4e00\u79cd\u57fa\u4e8e\u591a\u9879\u5f0f\u6a21\u578b\u5b9e\u73b0\u3002\u8fd9\u91cc\u91c7\u7528\u524d\u4e00\u79cd\u5b9e\u73b0\u65b9\u5f0f\u3002\u8be5\u5b9e\u73b0\u65b9\u5f0f\u4e2d\u5e76\u4e0d\u8003\u8651\u8bcd\u5728\u6587\u6863\u4e2d\u51fa\u73b0\u7684\u6b21\u6570\uff0c\u53ea\u8003\u8651\u51fa\u4e0d\u51fa\u73b0\uff0c\u56e0\u6b64\u5728\u8fd9\u4e2a\u610f\u4e49\u4e0a\u76f8\u5f53\u4e8e\u5047\u8bbe\u8bcd\u662f\u7b49\u6743\u91cd\u7684\u3002", 
            "title": "\u4f7f\u7528\u6761\u4ef6\u6982\u7387\u6765\u5206\u7c7b"
        }, 
        {
            "location": "/\u4e66\u7c4d/\u673a\u5668\u5b66\u4e60\u5b9e\u6218/04.\u6734\u7d20\u8d1d\u53f6\u65af/#_6", 
            "text": "\u673a\u5668\u5b66\u4e60\u7684\u4e00\u4e2a\u91cd\u8981\u5e94\u7528\u5c31\u662f\u6587\u6863\u7684\u81ea\u52a8\u5206\u7c7b\u3002  \u5728\u6587\u6863\u5206\u7c7b\u4e2d\uff0c\u6574\u4e2a\u6587\u6863\uff08\u5982\u4e00\u5c01\u7535\u5b50\u90ae\u4ef6\uff09\u662f\u5b9e\u4f8b\uff0c\u800c\u7535\u5b50\u90ae\u4ef6\u4e2d\u7684\u67d0\u4e9b\u5143\u7d20\u5219\u6784\u6210\u7279\u5f81\u3002\u6211\u4eec\u53ef\u4ee5\u89c2\u5bdf\u6587\u6863\u4e2d\u51fa\u73b0\u7684\u8bcd\uff0c\u5e76\u628a\u6bcf\u4e2a\u8bcd\u4f5c\u4e3a\u4e00\u4e2a\u7279\u5f81\uff0c\u800c\u6bcf\u4e2a\u8bcd\u7684\u51fa\u73b0\u6216\u8005\u4e0d\u51fa\u73b0\u4f5c\u4e3a\u8be5\u7279\u5f81\u7684\u503c\uff0c\u8fd9\u6837\u5f97\u5230\u7684\u7279\u5f81\u6570\u76ee\u5c31\u4f1a\u8ddf\u8bcd\u6c47\u8868\u4e2d\u7684\u8bcd\u7684\u6570\u76ee\u4e00\u6837\u591a\u3002  \u6734\u7d20\u8d1d\u53f6\u65af\u662f\u4e0a\u9762\u4ecb\u7ecd\u7684\u8d1d\u53f6\u65af\u5206\u7c7b\u5668\u7684\u4e00\u4e2a\u6269\u5c55\uff0c\u662f\u7528\u4e8e\u6587\u6863\u5206\u7c7b\u7684\u5e38\u7528\u7b97\u6cd5\u3002\u4e0b\u9762\u6211\u4eec\u4f1a\u8fdb\u884c\u4e00\u4e9b\u6734\u7d20\u8d1d\u53f6\u65af\u5206\u7c7b\u7684\u5b9e\u8df5\u9879\u76ee\u3002", 
            "title": "\u6734\u7d20\u8d1d\u53f6\u65af \u573a\u666f"
        }, 
        {
            "location": "/\u4e66\u7c4d/\u673a\u5668\u5b66\u4e60\u5b9e\u6218/04.\u6734\u7d20\u8d1d\u53f6\u65af/#_7", 
            "text": "", 
            "title": "\u6734\u7d20\u8d1d\u53f6\u65af \u539f\u7406"
        }, 
        {
            "location": "/\u4e66\u7c4d/\u673a\u5668\u5b66\u4e60\u5b9e\u6218/04.\u6734\u7d20\u8d1d\u53f6\u65af/#_8", 
            "text": "\u63d0\u53d6\u6240\u6709\u6587\u6863\u4e2d\u7684\u8bcd\u6761\u5e76\u8fdb\u884c\u53bb\u91cd\n\u83b7\u53d6\u6587\u6863\u7684\u6240\u6709\u7c7b\u522b\n\u8ba1\u7b97\u6bcf\u4e2a\u7c7b\u522b\u4e2d\u7684\u6587\u6863\u6570\u76ee\n\u5bf9\u6bcf\u7bc7\u8bad\u7ec3\u6587\u6863: \n    \u5bf9\u6bcf\u4e2a\u7c7b\u522b: \n        \u5982\u679c\u8bcd\u6761\u51fa\u73b0\u5728\u6587\u6863\u4e2d-- \u589e\u52a0\u8be5\u8bcd\u6761\u7684\u8ba1\u6570\u503c\uff08for\u5faa\u73af\u6216\u8005\u77e9\u9635\u76f8\u52a0\uff09\n        \u589e\u52a0\u6240\u6709\u8bcd\u6761\u7684\u8ba1\u6570\u503c\uff08\u6b64\u7c7b\u522b\u4e0b\u8bcd\u6761\u603b\u6570\uff09\n\u5bf9\u6bcf\u4e2a\u7c7b\u522b: \n    \u5bf9\u6bcf\u4e2a\u8bcd\u6761: \n        \u5c06\u8be5\u8bcd\u6761\u7684\u6570\u76ee\u9664\u4ee5\u603b\u8bcd\u6761\u6570\u76ee\u5f97\u5230\u7684\u6761\u4ef6\u6982\u7387\uff08P(\u8bcd\u6761|\u7c7b\u522b)\uff09\n\u8fd4\u56de\u8be5\u6587\u6863\u5c5e\u4e8e\u6bcf\u4e2a\u7c7b\u522b\u7684\u6761\u4ef6\u6982\u7387\uff08P(\u7c7b\u522b|\u6587\u6863\u7684\u6240\u6709\u8bcd\u6761)\uff09", 
            "title": "\u6734\u7d20\u8d1d\u53f6\u65af \u5de5\u4f5c\u539f\u7406"
        }, 
        {
            "location": "/\u4e66\u7c4d/\u673a\u5668\u5b66\u4e60\u5b9e\u6218/04.\u6734\u7d20\u8d1d\u53f6\u65af/#_9", 
            "text": "\u6536\u96c6\u6570\u636e: \u53ef\u4ee5\u4f7f\u7528\u4efb\u4f55\u65b9\u6cd5\u3002\n\u51c6\u5907\u6570\u636e: \u9700\u8981\u6570\u503c\u578b\u6216\u8005\u5e03\u5c14\u578b\u6570\u636e\u3002\n\u5206\u6790\u6570\u636e: \u6709\u5927\u91cf\u7279\u5f81\u65f6\uff0c\u7ed8\u5236\u7279\u5f81\u4f5c\u7528\u4e0d\u5927\uff0c\u6b64\u65f6\u4f7f\u7528\u76f4\u65b9\u56fe\u6548\u679c\u66f4\u597d\u3002\n\u8bad\u7ec3\u7b97\u6cd5: \u8ba1\u7b97\u4e0d\u540c\u7684\u72ec\u7acb\u7279\u5f81\u7684\u6761\u4ef6\u6982\u7387\u3002\n\u6d4b\u8bd5\u7b97\u6cd5: \u8ba1\u7b97\u9519\u8bef\u7387\u3002\n\u4f7f\u7528\u7b97\u6cd5: \u4e00\u4e2a\u5e38\u89c1\u7684\u6734\u7d20\u8d1d\u53f6\u65af\u5e94\u7528\u662f\u6587\u6863\u5206\u7c7b\u3002\u53ef\u4ee5\u5728\u4efb\u610f\u7684\u5206\u7c7b\u573a\u666f\u4e2d\u4f7f\u7528\u6734\u7d20\u8d1d\u53f6\u65af\u5206\u7c7b\u5668\uff0c\u4e0d\u4e00\u5b9a\u975e\u8981\u662f\u6587\u672c\u3002", 
            "title": "\u6734\u7d20\u8d1d\u53f6\u65af \u5f00\u53d1\u6d41\u7a0b"
        }, 
        {
            "location": "/\u4e66\u7c4d/\u673a\u5668\u5b66\u4e60\u5b9e\u6218/04.\u6734\u7d20\u8d1d\u53f6\u65af/#_10", 
            "text": "\u4f18\u70b9: \u5728\u6570\u636e\u8f83\u5c11\u7684\u60c5\u51b5\u4e0b\u4ecd\u7136\u6709\u6548\uff0c\u53ef\u4ee5\u5904\u7406\u591a\u7c7b\u522b\u95ee\u9898\u3002\n\u7f3a\u70b9: \u5bf9\u4e8e\u8f93\u5165\u6570\u636e\u7684\u51c6\u5907\u65b9\u5f0f\u8f83\u4e3a\u654f\u611f\u3002\n\u9002\u7528\u6570\u636e\u7c7b\u578b: \u6807\u79f0\u578b\u6570\u636e\u3002", 
            "title": "\u6734\u7d20\u8d1d\u53f6\u65af \u7b97\u6cd5\u7279\u70b9"
        }, 
        {
            "location": "/\u4e66\u7c4d/\u673a\u5668\u5b66\u4e60\u5b9e\u6218/04.\u6734\u7d20\u8d1d\u53f6\u65af/#_11", 
            "text": "", 
            "title": "\u6734\u7d20\u8d1d\u53f6\u65af \u9879\u76ee\u6848\u4f8b"
        }, 
        {
            "location": "/\u4e66\u7c4d/\u673a\u5668\u5b66\u4e60\u5b9e\u6218/04.\u6734\u7d20\u8d1d\u53f6\u65af/#1", 
            "text": "", 
            "title": "\u9879\u76ee\u6848\u4f8b1: \u5c4f\u853d\u793e\u533a\u7559\u8a00\u677f\u7684\u4fae\u8fb1\u6027\u8a00\u8bba"
        }, 
        {
            "location": "/\u4e66\u7c4d/\u673a\u5668\u5b66\u4e60\u5b9e\u6218/04.\u6734\u7d20\u8d1d\u53f6\u65af/#_12", 
            "text": "\u6784\u5efa\u4e00\u4e2a\u5feb\u901f\u8fc7\u6ee4\u5668\u6765\u5c4f\u853d\u5728\u7ebf\u793e\u533a\u7559\u8a00\u677f\u4e0a\u7684\u4fae\u8fb1\u6027\u8a00\u8bba\u3002\u5982\u679c\u67d0\u6761\u7559\u8a00\u4f7f\u7528\u4e86\u8d1f\u9762\u6216\u8005\u4fae\u8fb1\u6027\u7684\u8bed\u8a00\uff0c\u90a3\u4e48\u5c31\u5c06\u8be5\u7559\u8a00\u6807\u8bc6\u4e3a\u5185\u5bb9\u4e0d\u5f53\u3002\u5bf9\u6b64\u95ee\u9898\u5efa\u7acb\u4e24\u4e2a\u7c7b\u522b: \u4fae\u8fb1\u7c7b\u548c\u975e\u4fae\u8fb1\u7c7b\uff0c\u4f7f\u7528 1 \u548c 0 \u5206\u522b\u8868\u793a\u3002", 
            "title": "\u9879\u76ee\u6982\u8ff0"
        }, 
        {
            "location": "/\u4e66\u7c4d/\u673a\u5668\u5b66\u4e60\u5b9e\u6218/04.\u6734\u7d20\u8d1d\u53f6\u65af/#_13", 
            "text": "\u6536\u96c6\u6570\u636e: \u53ef\u4ee5\u4f7f\u7528\u4efb\u4f55\u65b9\u6cd5\n\u51c6\u5907\u6570\u636e: \u4ece\u6587\u672c\u4e2d\u6784\u5efa\u8bcd\u5411\u91cf\n\u5206\u6790\u6570\u636e: \u68c0\u67e5\u8bcd\u6761\u786e\u4fdd\u89e3\u6790\u7684\u6b63\u786e\u6027\n\u8bad\u7ec3\u7b97\u6cd5: \u4ece\u8bcd\u5411\u91cf\u8ba1\u7b97\u6982\u7387\n\u6d4b\u8bd5\u7b97\u6cd5: \u6839\u636e\u73b0\u5b9e\u60c5\u51b5\u4fee\u6539\u5206\u7c7b\u5668\n\u4f7f\u7528\u7b97\u6cd5: \u5bf9\u793e\u533a\u7559\u8a00\u677f\u8a00\u8bba\u8fdb\u884c\u5206\u7c7b   \u6536\u96c6\u6570\u636e: \u53ef\u4ee5\u4f7f\u7528\u4efb\u4f55\u65b9\u6cd5   \u672c\u4f8b\u662f\u6211\u4eec\u81ea\u5df1\u6784\u9020\u7684\u8bcd\u8868:  def   loadDataSet (): \n          \u521b\u5efa\u6570\u636e\u96c6      :return: \u5355\u8bcd\u5217\u8868postingList, \u6240\u5c5e\u7c7b\u522bclassVec       \n     postingList   =   [[ my ,   dog ,   has ,   flea ,   problems ,   help ,   please ],   #[0,0,1,1,1......] \n                    [ maybe ,   not ,   take ,   him ,   to ,   dog ,   park ,   stupid ], \n                    [ my ,   dalmation ,   is ,   so ,   cute ,   I ,   love ,   him ], \n                    [ stop ,   posting ,   stupid ,   worthless ,   garbage ], \n                    [ mr ,   licks ,   ate ,   my ,   steak ,   how ,   to ,   stop ,   him ], \n                    [ quit ,   buying ,   worthless ,   dog ,   food ,   stupid ]] \n     classVec   =   [ 0 ,   1 ,   0 ,   1 ,   0 ,   1 ]    # 1 is abusive, 0 not \n     return   postingList ,   classVec    \u51c6\u5907\u6570\u636e: \u4ece\u6587\u672c\u4e2d\u6784\u5efa\u8bcd\u5411\u91cf   def   createVocabList ( dataSet ): \n          \u83b7\u53d6\u6240\u6709\u5355\u8bcd\u7684\u96c6\u5408      :param dataSet: \u6570\u636e\u96c6      :return: \u6240\u6709\u5355\u8bcd\u7684\u96c6\u5408(\u5373\u4e0d\u542b\u91cd\u590d\u5143\u7d20\u7684\u5355\u8bcd\u5217\u8868)       \n     vocabSet   =   set ([])    # create empty set \n     for   document   in   dataSet : \n         # \u64cd\u4f5c\u7b26 | \u7528\u4e8e\u6c42\u4e24\u4e2a\u96c6\u5408\u7684\u5e76\u96c6 \n         vocabSet   =   vocabSet   |   set ( document )    # union of the two sets \n     return   list ( vocabSet )  def   setOfWords2Vec ( vocabList ,   inputSet ): \n          \u904d\u5386\u67e5\u770b\u8be5\u5355\u8bcd\u662f\u5426\u51fa\u73b0\uff0c\u51fa\u73b0\u8be5\u5355\u8bcd\u5219\u5c06\u8be5\u5355\u8bcd\u7f6e1      :param vocabList: \u6240\u6709\u5355\u8bcd\u96c6\u5408\u5217\u8868      :param inputSet: \u8f93\u5165\u6570\u636e\u96c6      :return: \u5339\u914d\u5217\u8868[0,1,0,1...]\uff0c\u5176\u4e2d 1\u4e0e0 \u8868\u793a\u8bcd\u6c47\u8868\u4e2d\u7684\u5355\u8bcd\u662f\u5426\u51fa\u73b0\u5728\u8f93\u5165\u7684\u6570\u636e\u96c6\u4e2d       \n     # \u521b\u5efa\u4e00\u4e2a\u548c\u8bcd\u6c47\u8868\u7b49\u957f\u7684\u5411\u91cf\uff0c\u5e76\u5c06\u5176\u5143\u7d20\u90fd\u8bbe\u7f6e\u4e3a0 \n     returnVec   =   [ 0 ]   *   len ( vocabList ) # [0,0......] \n     # \u904d\u5386\u6587\u6863\u4e2d\u7684\u6240\u6709\u5355\u8bcd\uff0c\u5982\u679c\u51fa\u73b0\u4e86\u8bcd\u6c47\u8868\u4e2d\u7684\u5355\u8bcd\uff0c\u5219\u5c06\u8f93\u51fa\u7684\u6587\u6863\u5411\u91cf\u4e2d\u7684\u5bf9\u5e94\u503c\u8bbe\u4e3a1 \n     for   word   in   inputSet : \n         if   word   in   vocabList : \n             returnVec [ vocabList . index ( word )]   =   1 \n         else : \n             print   the word:  %s  is not in my Vocabulary!   %   word \n     return   returnVec    \u5206\u6790\u6570\u636e: \u68c0\u67e5\u8bcd\u6761\u786e\u4fdd\u89e3\u6790\u7684\u6b63\u786e\u6027   \u68c0\u67e5\u51fd\u6570\u6267\u884c\u60c5\u51b5\uff0c\u68c0\u67e5\u8bcd\u8868\uff0c\u4e0d\u51fa\u73b0\u91cd\u590d\u5355\u8bcd\uff0c\u9700\u8981\u7684\u8bdd\uff0c\u53ef\u4ee5\u5bf9\u5176\u8fdb\u884c\u6392\u5e8f\u3002    listOPosts ,   listClasses   =   bayes . loadDataSet ()    myVocabList   =   bayes . createVocabList ( listOPosts )    myVocabList  [ cute ,   love ,   help ,   garbage ,   quit ,   I ,   problems ,   is ,   park ,   stop ,   flea ,   dalmation ,   licks ,   food ,   not ,   him ,   buying ,   posting ,   has ,   worthless ,   ate ,   to ,   maybe ,   please ,   dog ,   how ,   stupid ,   so ,   take ,   mr ,   steak ,   my ]   \u68c0\u67e5\u51fd\u6570\u6709\u6548\u6027\u3002\u4f8b\u5982\uff1amyVocabList \u4e2d\u7d22\u5f15\u4e3a 2 \u7684\u5143\u7d20\u662f\u4ec0\u4e48\u5355\u8bcd\uff1f\u5e94\u8be5\u662f\u662f help \u3002\u8be5\u5355\u8bcd\u5728\u7b2c\u4e00\u7bc7\u6587\u6863\u4e2d\u51fa\u73b0\u4e86\uff0c\u73b0\u5728\u68c0\u67e5\u4e00\u4e0b\u770b\u770b\u5b83\u662f\u5426\u51fa\u73b0\u5728\u7b2c\u56db\u7bc7\u6587\u6863\u4e2d\u3002    bayes . setOfWords2Vec ( myVocabList ,   listOPosts [ 0 ])  [ 0 ,   0 ,   1 ,   0 ,   0 ,   0 ,   1 ,   0 ,   0 ,   0 ,   1 ,   0 ,   0 ,   0 ,   0 ,   0 ,   0 ,   0 ,   1 ,   0 ,   0 ,   0 ,   0 ,   1 ,   1 ,   0 ,   0 ,   0 ,   0 ,   0 ,   0 ,   1 ]    bayes . setOfWords2Vec ( myVocabList ,   listOPosts [ 3 ])  [ 0 ,   0 ,   0 ,   1 ,   0 ,   0 ,   0 ,   0 ,   0 ,   1 ,   0 ,   0 ,   0 ,   0 ,   0 ,   0 ,   0 ,   1 ,   0 ,   1 ,   0 ,   0 ,   0 ,   0 ,   0 ,   0 ,   1 ,   0 ,   0 ,   0 ,   0 ,   0 ]    \u8bad\u7ec3\u7b97\u6cd5: \u4ece\u8bcd\u5411\u91cf\u8ba1\u7b97\u6982\u7387   \u73b0\u5728\u5df2\u7ecf\u77e5\u9053\u4e86\u4e00\u4e2a\u8bcd\u662f\u5426\u51fa\u73b0\u5728\u4e00\u7bc7\u6587\u6863\u4e2d\uff0c\u4e5f\u77e5\u9053\u8be5\u6587\u6863\u6240\u5c5e\u7684\u7c7b\u522b\u3002\u63a5\u4e0b\u6765\u6211\u4eec\u91cd\u5199\u8d1d\u53f6\u65af\u51c6\u5219\uff0c\u5c06\u4e4b\u524d\u7684 x, y \u66ff\u6362\u4e3a  w . \u7c97\u4f53\u7684  w  \u8868\u793a\u8fd9\u662f\u4e00\u4e2a\u5411\u91cf\uff0c\u5373\u5b83\u7531\u591a\u4e2a\u503c\u7ec4\u6210\u3002\u5728\u8fd9\u4e2a\u4f8b\u5b50\u4e2d\uff0c\u6570\u503c\u4e2a\u6570\u4e0e\u8bcd\u6c47\u8868\u4e2d\u7684\u8bcd\u4e2a\u6570\u76f8\u540c\u3002   \u6211\u4eec\u4f7f\u7528\u4e0a\u8ff0\u516c\u5f0f\uff0c\u5bf9\u6bcf\u4e2a\u7c7b\u8ba1\u7b97\u8be5\u503c\uff0c\u7136\u540e\u6bd4\u8f83\u8fd9\u4e24\u4e2a\u6982\u7387\u503c\u7684\u5927\u5c0f\u3002  \u9996\u5148\u53ef\u4ee5\u901a\u8fc7\u7c7b\u522b i (\u4fae\u8fb1\u6027\u7559\u8a00\u6216\u8005\u975e\u4fae\u8fb1\u6027\u7559\u8a00)\u4e2d\u7684\u6587\u6863\u6570\u9664\u4ee5\u603b\u7684\u6587\u6863\u6570\u6765\u8ba1\u7b97\u6982\u7387 p(ci) \u3002\u63a5\u4e0b\u6765\u8ba1\u7b97 p( w  | ci) \uff0c\u8fd9\u91cc\u5c31\u8981\u7528\u5230\u6734\u7d20\u8d1d\u53f6\u65af\u5047\u8bbe\u3002\u5982\u679c\u5c06 w \u5c55\u5f00\u4e3a\u4e00\u4e2a\u4e2a\u72ec\u7acb\u7279\u5f81\uff0c\u90a3\u4e48\u5c31\u53ef\u4ee5\u5c06\u4e0a\u8ff0\u6982\u7387\u5199\u4f5c p(w0, w1, w2...wn | ci) \u3002\u8fd9\u91cc\u5047\u8bbe\u6240\u6709\u8bcd\u90fd\u4e92\u76f8\u72ec\u7acb\uff0c\u8be5\u5047\u8bbe\u4e5f\u79f0\u4f5c\u6761\u4ef6\u72ec\u7acb\u6027\u5047\u8bbe\uff08\u4f8b\u5982 A \u548c B \u4e24\u4e2a\u4eba\u629b\u9ab0\u5b50\uff0c\u6982\u7387\u662f\u4e92\u4e0d\u5f71\u54cd\u7684\uff0c\u4e5f\u5c31\u662f\u76f8\u4e92\u72ec\u7acb\u7684\uff0cA \u629b 2\u70b9\u7684\u540c\u65f6 B \u629b 3 \u70b9\u7684\u6982\u7387\u5c31\u662f   *  \uff09\uff0c\u5b83\u610f\u5473\u7740\u53ef\u4ee5\u4f7f\u7528 p(w0 | ci)p(w1 | ci)p(w2 | ci)...p(wn | ci) \u6765\u8ba1\u7b97\u4e0a\u8ff0\u6982\u7387\uff0c\u8fd9\u6837\u5c31\u6781\u5927\u5730\u7b80\u5316\u4e86\u8ba1\u7b97\u7684\u8fc7\u7a0b\u3002  \u6734\u7d20\u8d1d\u53f6\u65af\u5206\u7c7b\u5668\u8bad\u7ec3\u51fd\u6570  def   _trainNB0 ( trainMatrix ,   trainCategory ): \n          \u8bad\u7ec3\u6570\u636e\u539f\u7248      :param trainMatrix: \u6587\u4ef6\u5355\u8bcd\u77e9\u9635 [[1,0,1,1,1....],[],[]...]      :param trainCategory: \u6587\u4ef6\u5bf9\u5e94\u7684\u7c7b\u522b[0,1,1,0....]\uff0c\u5217\u8868\u957f\u5ea6\u7b49\u4e8e\u5355\u8bcd\u77e9\u9635\u6570\uff0c\u5176\u4e2d\u76841\u4ee3\u8868\u5bf9\u5e94\u7684\u6587\u4ef6\u662f\u4fae\u8fb1\u6027\u6587\u4ef6\uff0c0\u4ee3\u8868\u4e0d\u662f\u4fae\u8fb1\u6027\u77e9\u9635      :return:       \n     # \u6587\u4ef6\u6570 \n     numTrainDocs   =   len ( trainMatrix ) \n     # \u5355\u8bcd\u6570 \n     numWords   =   len ( trainMatrix [ 0 ]) \n     # \u4fae\u8fb1\u6027\u6587\u4ef6\u7684\u51fa\u73b0\u6982\u7387\uff0c\u5373trainCategory\u4e2d\u6240\u6709\u76841\u7684\u4e2a\u6570\uff0c \n     # \u4ee3\u8868\u7684\u5c31\u662f\u591a\u5c11\u4e2a\u4fae\u8fb1\u6027\u6587\u4ef6\uff0c\u4e0e\u6587\u4ef6\u7684\u603b\u6570\u76f8\u9664\u5c31\u5f97\u5230\u4e86\u4fae\u8fb1\u6027\u6587\u4ef6\u7684\u51fa\u73b0\u6982\u7387 \n     pAbusive   =   sum ( trainCategory )   /   float ( numTrainDocs ) \n     # \u6784\u9020\u5355\u8bcd\u51fa\u73b0\u6b21\u6570\u5217\u8868 \n     p0Num   =   zeros ( numWords )   # [0,0,0,.....] \n     p1Num   =   zeros ( numWords )   # [0,0,0,.....] \n\n     # \u6574\u4e2a\u6570\u636e\u96c6\u5355\u8bcd\u51fa\u73b0\u603b\u6570 \n     p0Denom   =   0.0 \n     p1Denom   =   0.0 \n     for   i   in   range ( numTrainDocs ): \n         # \u662f\u5426\u662f\u4fae\u8fb1\u6027\u6587\u4ef6 \n         if   trainCategory [ i ]   ==   1 : \n             # \u5982\u679c\u662f\u4fae\u8fb1\u6027\u6587\u4ef6\uff0c\u5bf9\u4fae\u8fb1\u6027\u6587\u4ef6\u7684\u5411\u91cf\u8fdb\u884c\u52a0\u548c \n             p1Num   +=   trainMatrix [ i ]   #[0,1,1,....] + [0,1,1,....]- [0,2,2,...] \n             # \u5bf9\u5411\u91cf\u4e2d\u7684\u6240\u6709\u5143\u7d20\u8fdb\u884c\u6c42\u548c\uff0c\u4e5f\u5c31\u662f\u8ba1\u7b97\u6240\u6709\u4fae\u8fb1\u6027\u6587\u4ef6\u4e2d\u51fa\u73b0\u7684\u5355\u8bcd\u603b\u6570 \n             p1Denom   +=   sum ( trainMatrix [ i ]) \n         else : \n             p0Num   +=   trainMatrix [ i ] \n             p0Denom   +=   sum ( trainMatrix [ i ]) \n     # \u7c7b\u522b1\uff0c\u5373\u4fae\u8fb1\u6027\u6587\u6863\u7684[P(F1|C1),P(F2|C1),P(F3|C1),P(F4|C1),P(F5|C1)....]\u5217\u8868 \n     # \u5373 \u57281\u7c7b\u522b\u4e0b\uff0c\u6bcf\u4e2a\u5355\u8bcd\u51fa\u73b0\u7684\u6982\u7387 \n     p1Vect   =   p1Num   /   p1Denom # [1,2,3,5]/90- [1/90,...] \n     # \u7c7b\u522b0\uff0c\u5373\u6b63\u5e38\u6587\u6863\u7684[P(F1|C0),P(F2|C0),P(F3|C0),P(F4|C0),P(F5|C0)....]\u5217\u8868 \n     # \u5373 \u57280\u7c7b\u522b\u4e0b\uff0c\u6bcf\u4e2a\u5355\u8bcd\u51fa\u73b0\u7684\u6982\u7387 \n     p0Vect   =   p0Num   /   p0Denom \n     return   p0Vect ,   p1Vect ,   pAbusive    \u6d4b\u8bd5\u7b97\u6cd5: \u6839\u636e\u73b0\u5b9e\u60c5\u51b5\u4fee\u6539\u5206\u7c7b\u5668   \u5728\u5229\u7528\u8d1d\u53f6\u65af\u5206\u7c7b\u5668\u5bf9\u6587\u6863\u8fdb\u884c\u5206\u7c7b\u65f6\uff0c\u8981\u8ba1\u7b97\u591a\u4e2a\u6982\u7387\u7684\u4e58\u79ef\u4ee5\u83b7\u5f97\u6587\u6863\u5c5e\u4e8e\u67d0\u4e2a\u7c7b\u522b\u7684\u6982\u7387\uff0c\u5373\u8ba1\u7b97 p(w0|1) * p(w1|1) * p(w2|1)\u3002\u5982\u679c\u5176\u4e2d\u4e00\u4e2a\u6982\u7387\u503c\u4e3a 0\uff0c\u90a3\u4e48\u6700\u540e\u7684\u4e58\u79ef\u4e5f\u4e3a 0\u3002\u4e3a\u964d\u4f4e\u8fd9\u79cd\u5f71\u54cd\uff0c\u53ef\u4ee5\u5c06\u6240\u6709\u8bcd\u7684\u51fa\u73b0\u6570\u521d\u59cb\u5316\u4e3a 1\uff0c\u5e76\u5c06\u5206\u6bcd\u521d\u59cb\u5316\u4e3a 2 \uff08\u53d61 \u6216 2 \u7684\u76ee\u7684\u4e3b\u8981\u662f\u4e3a\u4e86\u4fdd\u8bc1\u5206\u5b50\u548c\u5206\u6bcd\u4e0d\u4e3a0\uff0c\u5927\u5bb6\u53ef\u4ee5\u6839\u636e\u4e1a\u52a1\u9700\u6c42\u8fdb\u884c\u66f4\u6539\uff09\u3002  \u53e6\u4e00\u4e2a\u9047\u5230\u7684\u95ee\u9898\u662f\u4e0b\u6ea2\u51fa\uff0c\u8fd9\u662f\u7531\u4e8e\u592a\u591a\u5f88\u5c0f\u7684\u6570\u76f8\u4e58\u9020\u6210\u7684\u3002\u5f53\u8ba1\u7b97\u4e58\u79ef p(w0|ci) * p(w1|ci) * p(w2|ci)... p(wn|ci) \u65f6\uff0c\u7531\u4e8e\u5927\u90e8\u5206\u56e0\u5b50\u90fd\u975e\u5e38\u5c0f\uff0c\u6240\u4ee5\u7a0b\u5e8f\u4f1a\u4e0b\u6ea2\u51fa\u6216\u8005\u5f97\u5230\u4e0d\u6b63\u786e\u7684\u7b54\u6848\u3002\uff08\u7528 Python \u5c1d\u8bd5\u76f8\u4e58\u8bb8\u591a\u5f88\u5c0f\u7684\u6570\uff0c\u6700\u540e\u56db\u820d\u4e94\u5165\u540e\u4f1a\u5f97\u5230 0\uff09\u3002\u4e00\u79cd\u89e3\u51b3\u529e\u6cd5\u662f\u5bf9\u4e58\u79ef\u53d6\u81ea\u7136\u5bf9\u6570\u3002\u5728\u4ee3\u6570\u4e2d\u6709 ln(a * b) = ln(a) + ln(b), \u4e8e\u662f\u901a\u8fc7\u6c42\u5bf9\u6570\u53ef\u4ee5\u907f\u514d\u4e0b\u6ea2\u51fa\u6216\u8005\u6d6e\u70b9\u6570\u820d\u5165\u5bfc\u81f4\u7684\u9519\u8bef\u3002\u540c\u65f6\uff0c\u91c7\u7528\u81ea\u7136\u5bf9\u6570\u8fdb\u884c\u5904\u7406\u4e0d\u4f1a\u6709\u4efb\u4f55\u635f\u5931\u3002  \u4e0b\u56fe\u7ed9\u51fa\u4e86\u51fd\u6570 f(x) \u4e0e ln(f(x)) \u7684\u66f2\u7ebf\u3002\u53ef\u4ee5\u770b\u51fa\uff0c\u5b83\u4eec\u5728\u76f8\u540c\u533a\u57df\u5185\u540c\u65f6\u589e\u52a0\u6216\u8005\u51cf\u5c11\uff0c\u5e76\u4e14\u5728\u76f8\u540c\u70b9\u4e0a\u53d6\u5230\u6781\u503c\u3002\u5b83\u4eec\u7684\u53d6\u503c\u867d\u7136\u4e0d\u540c\uff0c\u4f46\u4e0d\u5f71\u54cd\u6700\u7ec8\u7ed3\u679c\u3002   def   trainNB0 ( trainMatrix ,   trainCategory ): \n          \u8bad\u7ec3\u6570\u636e\u4f18\u5316\u7248\u672c      :param trainMatrix: \u6587\u4ef6\u5355\u8bcd\u77e9\u9635      :param trainCategory: \u6587\u4ef6\u5bf9\u5e94\u7684\u7c7b\u522b      :return:       \n     # \u603b\u6587\u4ef6\u6570 \n     numTrainDocs   =   len ( trainMatrix ) \n     # \u603b\u5355\u8bcd\u6570 \n     numWords   =   len ( trainMatrix [ 0 ]) \n     # \u4fae\u8fb1\u6027\u6587\u4ef6\u7684\u51fa\u73b0\u6982\u7387 \n     pAbusive   =   sum ( trainCategory )   /   float ( numTrainDocs ) \n     # \u6784\u9020\u5355\u8bcd\u51fa\u73b0\u6b21\u6570\u5217\u8868 \n     # p0Num \u6b63\u5e38\u7684\u7edf\u8ba1 \n     # p1Num \u4fae\u8fb1\u7684\u7edf\u8ba1 \n     p0Num   =   ones ( numWords ) #[0,0......]- [1,1,1,1,1.....] \n     p1Num   =   ones ( numWords ) \n\n     # \u6574\u4e2a\u6570\u636e\u96c6\u5355\u8bcd\u51fa\u73b0\u603b\u6570\uff0c2.0\u6839\u636e\u6837\u672c/\u5b9e\u9645\u8c03\u67e5\u7ed3\u679c\u8c03\u6574\u5206\u6bcd\u7684\u503c\uff082\u4e3b\u8981\u662f\u907f\u514d\u5206\u6bcd\u4e3a0\uff0c\u5f53\u7136\u503c\u53ef\u4ee5\u8c03\u6574\uff09 \n     # p0Denom \u6b63\u5e38\u7684\u7edf\u8ba1 \n     # p1Denom \u4fae\u8fb1\u7684\u7edf\u8ba1 \n     p0Denom   =   2.0 \n     p1Denom   =   2.0 \n     for   i   in   range ( numTrainDocs ): \n         if   trainCategory [ i ]   ==   1 : \n             # \u7d2f\u52a0\u8fb1\u9a82\u8bcd\u7684\u9891\u6b21 \n             p1Num   +=   trainMatrix [ i ] \n             # \u5bf9\u6bcf\u7bc7\u6587\u7ae0\u7684\u8fb1\u9a82\u7684\u9891\u6b21 \u8fdb\u884c\u7edf\u8ba1\u6c47\u603b \n             p1Denom   +=   sum ( trainMatrix [ i ]) \n         else : \n             p0Num   +=   trainMatrix [ i ] \n             p0Denom   +=   sum ( trainMatrix [ i ]) \n     # \u7c7b\u522b1\uff0c\u5373\u4fae\u8fb1\u6027\u6587\u6863\u7684[log(P(F1|C1)),log(P(F2|C1)),log(P(F3|C1)),log(P(F4|C1)),log(P(F5|C1))....]\u5217\u8868 \n     p1Vect   =   log ( p1Num   /   p1Denom ) \n     # \u7c7b\u522b0\uff0c\u5373\u6b63\u5e38\u6587\u6863\u7684[log(P(F1|C0)),log(P(F2|C0)),log(P(F3|C0)),log(P(F4|C0)),log(P(F5|C0))....]\u5217\u8868 \n     p0Vect   =   log ( p0Num   /   p0Denom ) \n     return   p0Vect ,   p1Vect ,   pAbusive    \u4f7f\u7528\u7b97\u6cd5: \u5bf9\u793e\u533a\u7559\u8a00\u677f\u8a00\u8bba\u8fdb\u884c\u5206\u7c7b   \u6734\u7d20\u8d1d\u53f6\u65af\u5206\u7c7b\u51fd\u6570  def   classifyNB ( vec2Classify ,   p0Vec ,   p1Vec ,   pClass1 ): \n          \u4f7f\u7528\u7b97\u6cd5\uff1a          # \u5c06\u4e58\u6cd5\u8f6c\u6362\u4e3a\u52a0\u6cd5          \u4e58\u6cd5\uff1aP(C|F1F2...Fn) = P(F1F2...Fn|C)P(C)/P(F1F2...Fn)          \u52a0\u6cd5\uff1aP(F1|C)*P(F2|C)....P(Fn|C)P(C) -  log(P(F1|C))+log(P(F2|C))+....+log(P(Fn|C))+log(P(C))      :param vec2Classify: \u5f85\u6d4b\u6570\u636e[0,1,1,1,1...]\uff0c\u5373\u8981\u5206\u7c7b\u7684\u5411\u91cf      :param p0Vec: \u7c7b\u522b0\uff0c\u5373\u6b63\u5e38\u6587\u6863\u7684[log(P(F1|C0)),log(P(F2|C0)),log(P(F3|C0)),log(P(F4|C0)),log(P(F5|C0))....]\u5217\u8868      :param p1Vec: \u7c7b\u522b1\uff0c\u5373\u4fae\u8fb1\u6027\u6587\u6863\u7684[log(P(F1|C1)),log(P(F2|C1)),log(P(F3|C1)),log(P(F4|C1)),log(P(F5|C1))....]\u5217\u8868      :param pClass1: \u7c7b\u522b1\uff0c\u4fae\u8fb1\u6027\u6587\u4ef6\u7684\u51fa\u73b0\u6982\u7387      :return: \u7c7b\u522b1 or 0       \n     # \u8ba1\u7b97\u516c\u5f0f  log(P(F1|C))+log(P(F2|C))+....+log(P(Fn|C))+log(P(C)) \n     # \u5927\u5bb6\u53ef\u80fd\u4f1a\u53d1\u73b0\uff0c\u4e0a\u9762\u7684\u8ba1\u7b97\u516c\u5f0f\uff0c\u6ca1\u6709\u9664\u4ee5\u8d1d\u53f6\u65af\u51c6\u5219\u7684\u516c\u5f0f\u7684\u5206\u6bcd\uff0c\u4e5f\u5c31\u662f P(w) \uff08P(w) \u6307\u7684\u662f\u6b64\u6587\u6863\u5728\u6240\u6709\u7684\u6587\u6863\u4e2d\u51fa\u73b0\u7684\u6982\u7387\uff09\u5c31\u8fdb\u884c\u6982\u7387\u5927\u5c0f\u7684\u6bd4\u8f83\u4e86\uff0c \n     # \u56e0\u4e3a P(w) \u9488\u5bf9\u7684\u662f\u5305\u542b\u4fae\u8fb1\u548c\u975e\u4fae\u8fb1\u7684\u5168\u90e8\u6587\u6863\uff0c\u6240\u4ee5 P(w) \u662f\u76f8\u540c\u7684\u3002 \n     # \u4f7f\u7528 NumPy \u6570\u7ec4\u6765\u8ba1\u7b97\u4e24\u4e2a\u5411\u91cf\u76f8\u4e58\u7684\u7ed3\u679c\uff0c\u8fd9\u91cc\u7684\u76f8\u4e58\u662f\u6307\u5bf9\u5e94\u5143\u7d20\u76f8\u4e58\uff0c\u5373\u5148\u5c06\u4e24\u4e2a\u5411\u91cf\u4e2d\u7684\u7b2c\u4e00\u4e2a\u5143\u7d20\u76f8\u4e58\uff0c\u7136\u540e\u5c06\u7b2c2\u4e2a\u5143\u7d20\u76f8\u4e58\uff0c\u4ee5\u6b64\u7c7b\u63a8\u3002 \n     # \u6211\u7684\u7406\u89e3\u662f\uff1a\u8fd9\u91cc\u7684 vec2Classify * p1Vec \u7684\u610f\u601d\u5c31\u662f\u5c06\u6bcf\u4e2a\u8bcd\u4e0e\u5176\u5bf9\u5e94\u7684\u6982\u7387\u76f8\u5173\u8054\u8d77\u6765 \n     p1   =   sum ( vec2Classify   *   p1Vec )   +   log ( pClass1 )   # P(w|c1) * P(c1) \uff0c\u5373\u8d1d\u53f6\u65af\u51c6\u5219\u7684\u5206\u5b50 \n     p0   =   sum ( vec2Classify   *   p0Vec )   +   log ( 1.0   -   pClass1 )   # P(w|c0) * P(c0) \uff0c\u5373\u8d1d\u53f6\u65af\u51c6\u5219\u7684\u5206\u5b50\u00b7 \n     if   p1     p0 : \n         return   1 \n     else : \n         return   0  def   testingNB (): \n          \u6d4b\u8bd5\u6734\u7d20\u8d1d\u53f6\u65af\u7b97\u6cd5       \n     # 1. \u52a0\u8f7d\u6570\u636e\u96c6 \n     listOPosts ,   listClasses   =   loadDataSet () \n     # 2. \u521b\u5efa\u5355\u8bcd\u96c6\u5408 \n     myVocabList   =   createVocabList ( listOPosts ) \n     # 3. \u8ba1\u7b97\u5355\u8bcd\u662f\u5426\u51fa\u73b0\u5e76\u521b\u5efa\u6570\u636e\u77e9\u9635 \n     trainMat   =   [] \n     for   postinDoc   in   listOPosts : \n         # \u8fd4\u56dem*len(myVocabList)\u7684\u77e9\u9635\uff0c \u8bb0\u5f55\u7684\u90fd\u662f0\uff0c1\u4fe1\u606f \n         trainMat . append ( setOfWords2Vec ( myVocabList ,   postinDoc )) \n     # 4. \u8bad\u7ec3\u6570\u636e \n     p0V ,   p1V ,   pAb   =   trainNB0 ( array ( trainMat ),   array ( listClasses )) \n     # 5. \u6d4b\u8bd5\u6570\u636e \n     testEntry   =   [ love ,   my ,   dalmation ] \n     thisDoc   =   array ( setOfWords2Vec ( myVocabList ,   testEntry )) \n     print   testEntry ,   classified as:  ,   classifyNB ( thisDoc ,   p0V ,   p1V ,   pAb ) \n     testEntry   =   [ stupid ,   garbage ] \n     thisDoc   =   array ( setOfWords2Vec ( myVocabList ,   testEntry )) \n     print   testEntry ,   classified as:  ,   classifyNB ( thisDoc ,   p0V ,   p1V ,   pAb )   \u5b8c\u6574\u4ee3\u7801\u5730\u5740 :  https://github.com/apachecn/MachineLearning/blob/master/src/python/4.NaiveBayes/bayes.py", 
            "title": "\u5f00\u53d1\u6d41\u7a0b"
        }, 
        {
            "location": "/\u4e66\u7c4d/\u673a\u5668\u5b66\u4e60\u5b9e\u6218/04.\u6734\u7d20\u8d1d\u53f6\u65af/#2", 
            "text": "", 
            "title": "\u9879\u76ee\u6848\u4f8b2: \u4f7f\u7528\u6734\u7d20\u8d1d\u53f6\u65af\u8fc7\u6ee4\u5783\u573e\u90ae\u4ef6"
        }, 
        {
            "location": "/\u4e66\u7c4d/\u673a\u5668\u5b66\u4e60\u5b9e\u6218/04.\u6734\u7d20\u8d1d\u53f6\u65af/#_14", 
            "text": "\u5b8c\u6210\u6734\u7d20\u8d1d\u53f6\u65af\u7684\u4e00\u4e2a\u6700\u8457\u540d\u7684\u5e94\u7528: \u7535\u5b50\u90ae\u4ef6\u5783\u573e\u8fc7\u6ee4\u3002", 
            "title": "\u9879\u76ee\u6982\u8ff0"
        }, 
        {
            "location": "/\u4e66\u7c4d/\u673a\u5668\u5b66\u4e60\u5b9e\u6218/04.\u6734\u7d20\u8d1d\u53f6\u65af/#_15", 
            "text": "\u4f7f\u7528\u6734\u7d20\u8d1d\u53f6\u65af\u5bf9\u7535\u5b50\u90ae\u4ef6\u8fdb\u884c\u5206\u7c7b  \u6536\u96c6\u6570\u636e: \u63d0\u4f9b\u6587\u672c\u6587\u4ef6\n\u51c6\u5907\u6570\u636e: \u5c06\u6587\u672c\u6587\u4ef6\u89e3\u6790\u6210\u8bcd\u6761\u5411\u91cf\n\u5206\u6790\u6570\u636e: \u68c0\u67e5\u8bcd\u6761\u786e\u4fdd\u89e3\u6790\u7684\u6b63\u786e\u6027\n\u8bad\u7ec3\u7b97\u6cd5: \u4f7f\u7528\u6211\u4eec\u4e4b\u524d\u5efa\u7acb\u7684 trainNB() \u51fd\u6570\n\u6d4b\u8bd5\u7b97\u6cd5: \u4f7f\u7528\u6734\u7d20\u8d1d\u53f6\u65af\u8fdb\u884c\u4ea4\u53c9\u9a8c\u8bc1\n\u4f7f\u7528\u7b97\u6cd5: \u6784\u5efa\u4e00\u4e2a\u5b8c\u6574\u7684\u7a0b\u5e8f\u5bf9\u4e00\u7ec4\u6587\u6863\u8fdb\u884c\u5206\u7c7b\uff0c\u5c06\u9519\u5206\u7684\u6587\u6863\u8f93\u51fa\u5230\u5c4f\u5e55\u4e0a   \u6536\u96c6\u6570\u636e: \u63d0\u4f9b\u6587\u672c\u6587\u4ef6   \u6587\u672c\u6587\u4ef6\u5185\u5bb9\u5982\u4e0b:   Hi Peter,\n\nWith Jose out of town, do you want to\nmeet once in a while to keep things\ngoing and do some interesting stuff?\n\nLet me know\nEugene   \u51c6\u5907\u6570\u636e: \u5c06\u6587\u672c\u6587\u4ef6\u89e3\u6790\u6210\u8bcd\u6761\u5411\u91cf   \u4f7f\u7528\u6b63\u5219\u8868\u8fbe\u5f0f\u6765\u5207\u5206\u6587\u672c    mySent   =   This book is the best book on Python or M.L. I have ever laid eyes upon.    import   re    regEx   =   re . compile ( \\\\ W* )    listOfTokens   =   regEx . split ( mySent )    listOfTokens  [ This ,   book ,   is ,   the ,   best ,   book ,   on ,   Python ,   or ,   M.L. ,   I ,   have ,   ever ,   laid ,   eyes ,   upon ,   ]    \u5206\u6790\u6570\u636e: \u68c0\u67e5\u8bcd\u6761\u786e\u4fdd\u89e3\u6790\u7684\u6b63\u786e\u6027  \u8bad\u7ec3\u7b97\u6cd5: \u4f7f\u7528\u6211\u4eec\u4e4b\u524d\u5efa\u7acb\u7684 trainNB0() \u51fd\u6570   def   trainNB0 ( trainMatrix ,   trainCategory ): \n          \u8bad\u7ec3\u6570\u636e\u4f18\u5316\u7248\u672c      :param trainMatrix: \u6587\u4ef6\u5355\u8bcd\u77e9\u9635      :param trainCategory: \u6587\u4ef6\u5bf9\u5e94\u7684\u7c7b\u522b      :return:       \n     # \u603b\u6587\u4ef6\u6570 \n     numTrainDocs   =   len ( trainMatrix ) \n     # \u603b\u5355\u8bcd\u6570 \n     numWords   =   len ( trainMatrix [ 0 ]) \n     # \u4fae\u8fb1\u6027\u6587\u4ef6\u7684\u51fa\u73b0\u6982\u7387 \n     pAbusive   =   sum ( trainCategory )   /   float ( numTrainDocs ) \n     # \u6784\u9020\u5355\u8bcd\u51fa\u73b0\u6b21\u6570\u5217\u8868 \n     # p0Num \u6b63\u5e38\u7684\u7edf\u8ba1 \n     # p1Num \u4fae\u8fb1\u7684\u7edf\u8ba1 \n     p0Num   =   ones ( numWords ) #[0,0......]- [1,1,1,1,1.....] \n     p1Num   =   ones ( numWords ) \n\n     # \u6574\u4e2a\u6570\u636e\u96c6\u5355\u8bcd\u51fa\u73b0\u603b\u6570\uff0c2.0\u6839\u636e\u6837\u672c/\u5b9e\u9645\u8c03\u67e5\u7ed3\u679c\u8c03\u6574\u5206\u6bcd\u7684\u503c\uff082\u4e3b\u8981\u662f\u907f\u514d\u5206\u6bcd\u4e3a0\uff0c\u5f53\u7136\u503c\u53ef\u4ee5\u8c03\u6574\uff09 \n     # p0Denom \u6b63\u5e38\u7684\u7edf\u8ba1 \n     # p1Denom \u4fae\u8fb1\u7684\u7edf\u8ba1 \n     p0Denom   =   2.0 \n     p1Denom   =   2.0 \n     for   i   in   range ( numTrainDocs ): \n         if   trainCategory [ i ]   ==   1 : \n             # \u7d2f\u52a0\u8fb1\u9a82\u8bcd\u7684\u9891\u6b21 \n             p1Num   +=   trainMatrix [ i ] \n             # \u5bf9\u6bcf\u7bc7\u6587\u7ae0\u7684\u8fb1\u9a82\u7684\u9891\u6b21 \u8fdb\u884c\u7edf\u8ba1\u6c47\u603b \n             p1Denom   +=   sum ( trainMatrix [ i ]) \n         else : \n             p0Num   +=   trainMatrix [ i ] \n             p0Denom   +=   sum ( trainMatrix [ i ]) \n     # \u7c7b\u522b1\uff0c\u5373\u4fae\u8fb1\u6027\u6587\u6863\u7684[log(P(F1|C1)),log(P(F2|C1)),log(P(F3|C1)),log(P(F4|C1)),log(P(F5|C1))....]\u5217\u8868 \n     p1Vect   =   log ( p1Num   /   p1Denom ) \n     # \u7c7b\u522b0\uff0c\u5373\u6b63\u5e38\u6587\u6863\u7684[log(P(F1|C0)),log(P(F2|C0)),log(P(F3|C0)),log(P(F4|C0)),log(P(F5|C0))....]\u5217\u8868 \n     p0Vect   =   log ( p0Num   /   p0Denom ) \n     return   p0Vect ,   p1Vect ,   pAbusive    \u6d4b\u8bd5\u7b97\u6cd5: \u4f7f\u7528\u6734\u7d20\u8d1d\u53f6\u65af\u8fdb\u884c\u4ea4\u53c9\u9a8c\u8bc1   \u6587\u4ef6\u89e3\u6790\u53ca\u5b8c\u6574\u7684\u5783\u573e\u90ae\u4ef6\u6d4b\u8bd5\u51fd\u6570  # \u5207\u5206\u6587\u672c  def   textParse ( bigString ): \n          Desc:          \u63a5\u6536\u4e00\u4e2a\u5927\u5b57\u7b26\u4e32\u5e76\u5c06\u5176\u89e3\u6790\u4e3a\u5b57\u7b26\u4e32\u5217\u8868      Args:          bigString -- \u5927\u5b57\u7b26\u4e32      Returns:          \u53bb\u6389\u5c11\u4e8e 2 \u4e2a\u5b57\u7b26\u7684\u5b57\u7b26\u4e32\uff0c\u5e76\u5c06\u6240\u6709\u5b57\u7b26\u4e32\u8f6c\u6362\u4e3a\u5c0f\u5199\uff0c\u8fd4\u56de\u5b57\u7b26\u4e32\u5217\u8868       \n     import   re \n     # \u4f7f\u7528\u6b63\u5219\u8868\u8fbe\u5f0f\u6765\u5207\u5206\u53e5\u5b50\uff0c\u5176\u4e2d\u5206\u9694\u7b26\u662f\u9664\u5355\u8bcd\u3001\u6570\u5b57\u5916\u7684\u4efb\u610f\u5b57\u7b26\u4e32 \n     listOfTokens   =   re . split ( r \\W* ,   bigString ) \n     return   [ tok . lower ()   for   tok   in   listOfTokens   if   len ( tok )     2 ]  def   spamTest (): \n          Desc:          \u5bf9\u8d1d\u53f6\u65af\u5783\u573e\u90ae\u4ef6\u5206\u7c7b\u5668\u8fdb\u884c\u81ea\u52a8\u5316\u5904\u7406\u3002      Args:          none      Returns:          \u5bf9\u6d4b\u8bd5\u96c6\u4e2d\u7684\u6bcf\u5c01\u90ae\u4ef6\u8fdb\u884c\u5206\u7c7b\uff0c\u82e5\u90ae\u4ef6\u5206\u7c7b\u9519\u8bef\uff0c\u5219\u9519\u8bef\u6570\u52a0 1\uff0c\u6700\u540e\u8fd4\u56de\u603b\u7684\u9519\u8bef\u767e\u5206\u6bd4\u3002       \n     docList   =   [] \n     classList   =   [] \n     fullText   =   [] \n     for   i   in   range ( 1 ,   26 ): \n         # \u5207\u5206\uff0c\u89e3\u6790\u6570\u636e\uff0c\u5e76\u5f52\u7c7b\u4e3a 1 \u7c7b\u522b \n         wordList   =   textParse ( open ( input/4.NaiveBayes/email/spam/ %d .txt   %   i ) . read ()) \n         docList . append ( wordList ) \n         classList . append ( 1 ) \n         # \u5207\u5206\uff0c\u89e3\u6790\u6570\u636e\uff0c\u5e76\u5f52\u7c7b\u4e3a 0 \u7c7b\u522b \n         wordList   =   textParse ( open ( input/4.NaiveBayes/email/ham/ %d .txt   %   i ) . read ()) \n         docList . append ( wordList ) \n         fullText . extend ( wordList ) \n         classList . append ( 0 ) \n     # \u521b\u5efa\u8bcd\u6c47\u8868     \n     vocabList   =   createVocabList ( docList ) \n     trainingSet   =   range ( 50 ) \n     testSet   =   [] \n     # \u968f\u673a\u53d6 10 \u4e2a\u90ae\u4ef6\u7528\u6765\u6d4b\u8bd5 \n     for   i   in   range ( 10 ): \n         # random.uniform(x, y) \u968f\u673a\u751f\u6210\u4e00\u4e2a\u8303\u56f4\u4e3a x - y \u7684\u5b9e\u6570 \n         randIndex   =   int ( random . uniform ( 0 ,   len ( trainingSet ))) \n         testSet . append ( trainingSet [ randIndex ]) \n         del ( trainingSet [ randIndex ]) \n     trainMat   =   [] \n     trainClasses   =   [] \n     for   docIndex   in   trainingSet : \n         trainMat . append ( setOfWords2Vec ( vocabList ,   docList [ docIndex ])) \n         trainClasses . append ( classList [ docIndex ]) \n     p0V ,   p1V ,   pSpam   =   trainNB0 ( array ( trainMat ),   array ( trainClasses )) \n     errorCount   =   0 \n     for   docIndex   in   testSet : \n         wordVector   =   setOfWords2Vec ( vocabList ,   docList [ docIndex ]) \n         if   classifyNB ( array ( wordVector ),   p0V ,   p1V ,   pSpam )   !=   classList [ docIndex ]: \n             errorCount   +=   1 \n     print   the errorCount is:  ,   errorCount \n     print   the testSet length is : ,   len ( testSet ) \n     print   the error rate is : ,   float ( errorCount ) / len ( testSet )    \u4f7f\u7528\u7b97\u6cd5: \u6784\u5efa\u4e00\u4e2a\u5b8c\u6574\u7684\u7a0b\u5e8f\u5bf9\u4e00\u7ec4\u6587\u6863\u8fdb\u884c\u5206\u7c7b\uff0c\u5c06\u9519\u5206\u7684\u6587\u6863\u8f93\u51fa\u5230\u5c4f\u5e55\u4e0a   \u5b8c\u6574\u4ee3\u7801\u5730\u5740 :  https://github.com/apachecn/MachineLearning/blob/master/src/python/4.NaiveBayes/bayes.py", 
            "title": "\u5f00\u53d1\u6d41\u7a0b"
        }, 
        {
            "location": "/\u4e66\u7c4d/\u673a\u5668\u5b66\u4e60\u5b9e\u6218/04.\u6734\u7d20\u8d1d\u53f6\u65af/#3", 
            "text": "", 
            "title": "\u9879\u76ee\u6848\u4f8b3: \u4f7f\u7528\u6734\u7d20\u8d1d\u53f6\u65af\u5206\u7c7b\u5668\u4ece\u4e2a\u4eba\u5e7f\u544a\u4e2d\u83b7\u53d6\u533a\u57df\u503e\u5411"
        }, 
        {
            "location": "/\u4e66\u7c4d/\u673a\u5668\u5b66\u4e60\u5b9e\u6218/04.\u6734\u7d20\u8d1d\u53f6\u65af/#_16", 
            "text": "\u5e7f\u544a\u5546\u5f80\u5f80\u60f3\u77e5\u9053\u5173\u4e8e\u4e00\u4e2a\u4eba\u7684\u4e00\u4e9b\u7279\u5b9a\u4eba\u53e3\u7edf\u8ba1\u4fe1\u606f\uff0c\u4ee5\u4fbf\u80fd\u66f4\u597d\u5730\u5b9a\u5411\u63a8\u9500\u5e7f\u544a\u3002  \u6211\u4eec\u5c06\u5206\u522b\u4ece\u7f8e\u56fd\u7684\u4e24\u4e2a\u57ce\u5e02\u4e2d\u9009\u53d6\u4e00\u4e9b\u4eba\uff0c\u901a\u8fc7\u5206\u6790\u8fd9\u4e9b\u4eba\u53d1\u5e03\u7684\u4fe1\u606f\uff0c\u6765\u6bd4\u8f83\u8fd9\u4e24\u4e2a\u57ce\u5e02\u7684\u4eba\u4eec\u5728\u5e7f\u544a\u7528\u8bcd\u4e0a\u662f\u5426\u4e0d\u540c\u3002\u5982\u679c\u7ed3\u8bba\u786e\u5b9e\u4e0d\u540c\uff0c\u90a3\u4e48\u4ed6\u4eec\u5404\u81ea\u5e38\u7528\u7684\u8bcd\u662f\u90a3\u4e9b\uff0c\u4ece\u4eba\u4eec\u7684\u7528\u8bcd\u5f53\u4e2d\uff0c\u6211\u4eec\u80fd\u5426\u5bf9\u4e0d\u540c\u57ce\u5e02\u7684\u4eba\u6240\u5173\u5fc3\u7684\u5185\u5bb9\u6709\u6240\u4e86\u89e3\u3002", 
            "title": "\u9879\u76ee\u6982\u8ff0"
        }, 
        {
            "location": "/\u4e66\u7c4d/\u673a\u5668\u5b66\u4e60\u5b9e\u6218/04.\u6734\u7d20\u8d1d\u53f6\u65af/#_17", 
            "text": "\u6536\u96c6\u6570\u636e: \u4ece RSS \u6e90\u6536\u96c6\u5185\u5bb9\uff0c\u8fd9\u91cc\u9700\u8981\u5bf9 RSS \u6e90\u6784\u5efa\u4e00\u4e2a\u63a5\u53e3\n\u51c6\u5907\u6570\u636e: \u5c06\u6587\u672c\u6587\u4ef6\u89e3\u6790\u6210\u8bcd\u6761\u5411\u91cf\n\u5206\u6790\u6570\u636e: \u68c0\u67e5\u8bcd\u6761\u786e\u4fdd\u89e3\u6790\u7684\u6b63\u786e\u6027\n\u8bad\u7ec3\u7b97\u6cd5: \u4f7f\u7528\u6211\u4eec\u4e4b\u524d\u5efa\u7acb\u7684 trainNB0() \u51fd\u6570\n\u6d4b\u8bd5\u7b97\u6cd5: \u89c2\u5bdf\u9519\u8bef\u7387\uff0c\u786e\u4fdd\u5206\u7c7b\u5668\u53ef\u7528\u3002\u53ef\u4ee5\u4fee\u6539\u5207\u5206\u7a0b\u5e8f\uff0c\u4ee5\u964d\u4f4e\u9519\u8bef\u7387\uff0c\u63d0\u9ad8\u5206\u7c7b\u7ed3\u679c\n\u4f7f\u7528\u7b97\u6cd5: \u6784\u5efa\u4e00\u4e2a\u5b8c\u6574\u7684\u7a0b\u5e8f\uff0c\u5c01\u88c5\u6240\u6709\u5185\u5bb9\u3002\u7ed9\u5b9a\u4e24\u4e2a RSS \u6e90\uff0c\u6539\u7a0b\u5e8f\u4f1a\u663e\u793a\u6700\u5e38\u7528\u7684\u516c\u5171\u8bcd   \u6536\u96c6\u6570\u636e: \u4ece RSS \u6e90\u6536\u96c6\u5185\u5bb9\uff0c\u8fd9\u91cc\u9700\u8981\u5bf9 RSS \u6e90\u6784\u5efa\u4e00\u4e2a\u63a5\u53e3   \u4e5f\u5c31\u662f\u5bfc\u5165 RSS \u6e90\uff0c\u6211\u4eec\u4f7f\u7528 python \u4e0b\u8f7d\u6587\u672c\uff0c\u5728http://code.google.com/p/feedparser/ \u4e0b\u6d4f\u89c8\u76f8\u5173\u6587\u6863\uff0c\u5b89\u88c5 feedparse\uff0c\u9996\u5148\u89e3\u538b\u4e0b\u8f7d\u7684\u5305\uff0c\u5e76\u5c06\u5f53\u524d\u76ee\u5f55\u5207\u6362\u5230\u89e3\u538b\u6587\u4ef6\u6240\u5728\u7684\u6587\u4ef6\u5939\uff0c\u7136\u540e\u5728 python \u63d0\u793a\u7b26\u4e0b\u8f93\u5165\uff1a    python   setup . py   install    \u51c6\u5907\u6570\u636e: \u5c06\u6587\u672c\u6587\u4ef6\u89e3\u6790\u6210\u8bcd\u6761\u5411\u91cf   \u6587\u6863\u8bcd\u888b\u6a21\u578b  \u6211\u4eec\u5c06\u6bcf\u4e2a\u8bcd\u7684\u51fa\u73b0\u4e0e\u5426\u4f5c\u4e3a\u4e00\u4e2a\u7279\u5f81\uff0c\u8fd9\u53ef\u4ee5\u88ab\u63cf\u8ff0\u4e3a  \u8bcd\u96c6\u6a21\u578b(set-of-words model) \u3002\u5982\u679c\u4e00\u4e2a\u8bcd\u5728\u6587\u6863\u4e2d\u51fa\u73b0\u4e0d\u6b62\u4e00\u6b21\uff0c\u8fd9\u53ef\u80fd\u610f\u5473\u7740\u5305\u542b\u8be5\u8bcd\u662f\u5426\u51fa\u73b0\u5728\u6587\u6863\u4e2d\u6240\u4e0d\u80fd\u8868\u8fbe\u7684\u67d0\u79cd\u4fe1\u606f\uff0c\u8fd9\u79cd\u65b9\u6cd5\u88ab\u79f0\u4e3a  \u8bcd\u888b\u6a21\u578b(bag-of-words model) \u3002\u5728\u8bcd\u888b\u4e2d\uff0c\u6bcf\u4e2a\u5355\u8bcd\u53ef\u4ee5\u51fa\u73b0\u591a\u6b21\uff0c\u800c\u5728\u8bcd\u96c6\u4e2d\uff0c\u6bcf\u4e2a\u8bcd\u53ea\u80fd\u51fa\u73b0\u4e00\u6b21\u3002\u4e3a\u9002\u5e94\u8bcd\u888b\u6a21\u578b\uff0c\u9700\u8981\u5bf9\u51fd\u6570 setOfWords2Vec() \u7a0d\u52a0\u4fee\u6539\uff0c\u4fee\u6539\u540e\u7684\u51fd\u6570\u4e3a bagOfWords2Vec() \u3002  \u5982\u4e0b\u7ed9\u51fa\u4e86\u57fa\u4e8e\u8bcd\u888b\u6a21\u578b\u7684\u6734\u7d20\u8d1d\u53f6\u65af\u4ee3\u7801\u3002\u5b83\u4e0e\u51fd\u6570 setOfWords2Vec() \u51e0\u4e4e\u5b8c\u5168\u76f8\u540c\uff0c\u552f\u4e00\u4e0d\u540c\u7684\u662f\u6bcf\u5f53\u9047\u5230\u4e00\u4e2a\u5355\u8bcd\u65f6\uff0c\u5b83\u4f1a\u589e\u52a0\u8bcd\u5411\u91cf\u4e2d\u7684\u5bf9\u5e94\u503c\uff0c\u800c\u4e0d\u53ea\u662f\u5c06\u5bf9\u5e94\u7684\u6570\u503c\u8bbe\u4e3a 1 \u3002  def   bagOfWords2VecMN ( vocaList ,   inputSet ): \n     returnVec   =   [ 0 ]   *   len ( vocabList ) \n     for   word   in   inputSet : \n         if   word   in   inputSet : \n             returnVec [ vocabList . index ( word )]   +=   1 \n     return   returnVec   #\u521b\u5efa\u4e00\u4e2a\u5305\u542b\u5728\u6240\u6709\u6587\u6863\u4e2d\u51fa\u73b0\u7684\u4e0d\u91cd\u590d\u8bcd\u7684\u5217\u8868  def   createVocabList ( dataSet ): \n     vocabSet = set ([])      #\u521b\u5efa\u4e00\u4e2a\u7a7a\u96c6 \n     for   document   in   dataSet : \n         vocabSet = vocabSet | set ( document )     #\u521b\u5efa\u4e24\u4e2a\u96c6\u5408\u7684\u5e76\u96c6 \n     return   list ( vocabSet )  def   setOfWords2VecMN ( vocabList , inputSet ): \n     returnVec = [ 0 ] * len ( vocabList )    #\u521b\u5efa\u4e00\u4e2a\u5176\u4e2d\u6240\u542b\u5143\u7d20\u90fd\u4e3a0\u7684\u5411\u91cf \n     for   word   in   inputSet : \n         if   word   in   vocabList : \n                 returnVec [ vocabList . index ( word )] += 1 \n     return   returnVec  #\u6587\u4ef6\u89e3\u6790  def   textParse ( bigString ): \n     import   re \n     listOfTokens = re . split ( r \\W* , bigString ) \n     return   [ tok . lower ()   for   tok   in   listOfTokens   if   len ( tok ) 2 ]    \u5206\u6790\u6570\u636e: \u68c0\u67e5\u8bcd\u6761\u786e\u4fdd\u89e3\u6790\u7684\u6b63\u786e\u6027  \u8bad\u7ec3\u7b97\u6cd5: \u4f7f\u7528\u6211\u4eec\u4e4b\u524d\u5efa\u7acb\u7684 trainNB0() \u51fd\u6570   def   trainNB0 ( trainMatrix ,   trainCategory ): \n          \u8bad\u7ec3\u6570\u636e\u4f18\u5316\u7248\u672c      :param trainMatrix: \u6587\u4ef6\u5355\u8bcd\u77e9\u9635      :param trainCategory: \u6587\u4ef6\u5bf9\u5e94\u7684\u7c7b\u522b      :return:       \n     # \u603b\u6587\u4ef6\u6570 \n     numTrainDocs   =   len ( trainMatrix ) \n     # \u603b\u5355\u8bcd\u6570 \n     numWords   =   len ( trainMatrix [ 0 ]) \n     # \u4fae\u8fb1\u6027\u6587\u4ef6\u7684\u51fa\u73b0\u6982\u7387 \n     pAbusive   =   sum ( trainCategory )   /   float ( numTrainDocs ) \n     # \u6784\u9020\u5355\u8bcd\u51fa\u73b0\u6b21\u6570\u5217\u8868 \n     # p0Num \u6b63\u5e38\u7684\u7edf\u8ba1 \n     # p1Num \u4fae\u8fb1\u7684\u7edf\u8ba1  \n     # \u907f\u514d\u5355\u8bcd\u5217\u8868\u4e2d\u7684\u4efb\u4f55\u4e00\u4e2a\u5355\u8bcd\u4e3a0\uff0c\u800c\u5bfc\u81f4\u6700\u540e\u7684\u4e58\u79ef\u4e3a0\uff0c\u6240\u4ee5\u5c06\u6bcf\u4e2a\u5355\u8bcd\u7684\u51fa\u73b0\u6b21\u6570\u521d\u59cb\u5316\u4e3a 1 \n     p0Num   =   ones ( numWords ) #[0,0......]- [1,1,1,1,1.....] \n     p1Num   =   ones ( numWords ) \n\n     # \u6574\u4e2a\u6570\u636e\u96c6\u5355\u8bcd\u51fa\u73b0\u603b\u6570\uff0c2.0\u6839\u636e\u6837\u672c/\u5b9e\u9645\u8c03\u67e5\u7ed3\u679c\u8c03\u6574\u5206\u6bcd\u7684\u503c\uff082\u4e3b\u8981\u662f\u907f\u514d\u5206\u6bcd\u4e3a0\uff0c\u5f53\u7136\u503c\u53ef\u4ee5\u8c03\u6574\uff09 \n     # p0Denom \u6b63\u5e38\u7684\u7edf\u8ba1 \n     # p1Denom \u4fae\u8fb1\u7684\u7edf\u8ba1 \n     p0Denom   =   2.0 \n     p1Denom   =   2.0 \n     for   i   in   range ( numTrainDocs ): \n         if   trainCategory [ i ]   ==   1 : \n             # \u7d2f\u52a0\u8fb1\u9a82\u8bcd\u7684\u9891\u6b21 \n             p1Num   +=   trainMatrix [ i ] \n             # \u5bf9\u6bcf\u7bc7\u6587\u7ae0\u7684\u8fb1\u9a82\u7684\u9891\u6b21 \u8fdb\u884c\u7edf\u8ba1\u6c47\u603b \n             p1Denom   +=   sum ( trainMatrix [ i ]) \n         else : \n             p0Num   +=   trainMatrix [ i ] \n             p0Denom   +=   sum ( trainMatrix [ i ]) \n     # \u7c7b\u522b1\uff0c\u5373\u4fae\u8fb1\u6027\u6587\u6863\u7684[log(P(F1|C1)),log(P(F2|C1)),log(P(F3|C1)),log(P(F4|C1)),log(P(F5|C1))....]\u5217\u8868 \n     p1Vect   =   log ( p1Num   /   p1Denom ) \n     # \u7c7b\u522b0\uff0c\u5373\u6b63\u5e38\u6587\u6863\u7684[log(P(F1|C0)),log(P(F2|C0)),log(P(F3|C0)),log(P(F4|C0)),log(P(F5|C0))....]\u5217\u8868 \n     p0Vect   =   log ( p0Num   /   p0Denom ) \n     return   p0Vect ,   p1Vect ,   pAbusive    \u6d4b\u8bd5\u7b97\u6cd5: \u89c2\u5bdf\u9519\u8bef\u7387\uff0c\u786e\u4fdd\u5206\u7c7b\u5668\u53ef\u7528\u3002\u53ef\u4ee5\u4fee\u6539\u5207\u5206\u7a0b\u5e8f\uff0c\u4ee5\u964d\u4f4e\u9519\u8bef\u7387\uff0c\u63d0\u9ad8\u5206\u7c7b\u7ed3\u679c   #RSS\u6e90\u5206\u7c7b\u5668\u53ca\u9ad8\u9891\u8bcd\u53bb\u9664\u51fd\u6570  def   calcMostFreq ( vocabList , fullText ): \n     import   operator \n     freqDict = {} \n     for   token   in   vocabList :    #\u904d\u5386\u8bcd\u6c47\u8868\u4e2d\u7684\u6bcf\u4e2a\u8bcd \n         freqDict [ token ] = fullText . count ( token )    #\u7edf\u8ba1\u6bcf\u4e2a\u8bcd\u5728\u6587\u672c\u4e2d\u51fa\u73b0\u7684\u6b21\u6570 \n     sortedFreq = sorted ( freqDict . iteritems (), key = operator . itemgetter ( 1 ), reverse = True )    #\u6839\u636e\u6bcf\u4e2a\u8bcd\u51fa\u73b0\u7684\u6b21\u6570\u4ece\u9ad8\u5230\u5e95\u5bf9\u5b57\u5178\u8fdb\u884c\u6392\u5e8f \n     return   sortedFreq [: 30 ]     #\u8fd4\u56de\u51fa\u73b0\u6b21\u6570\u6700\u9ad8\u768430\u4e2a\u5355\u8bcd  def   localWords ( feed1 , feed0 ): \n     import   feedparser \n     docList = []; classList = []; fullText = [] \n     minLen = min ( len ( feed1 [ entries ]), len ( feed0 [ entries ])) \n     for   i   in   range ( minLen ): \n         wordList = textParse ( feed1 [ entries ][ i ][ summary ])     #\u6bcf\u6b21\u8bbf\u95ee\u4e00\u6761RSS\u6e90 \n         docList . append ( wordList ) \n         fullText . extend ( wordList ) \n         classList . append ( 1 ) \n         wordList = textParse ( feed0 [ entries ][ i ][ summary ]) \n         docList . append ( wordList ) \n         fullText . extend ( wordList ) \n         classList . append ( 0 ) \n     vocabList = createVocabList ( docList ) \n     top30Words = calcMostFreq ( vocabList , fullText ) \n     for   pairW   in   top30Words : \n         if   pairW [ 0 ]   in   vocabList : vocabList . remove ( pairW [ 0 ])      #\u53bb\u6389\u51fa\u73b0\u6b21\u6570\u6700\u9ad8\u7684\u90a3\u4e9b\u8bcd \n     trainingSet = range ( 2 * minLen ); testSet = [] \n     for   i   in   range ( 20 ): \n         randIndex = int ( random . uniform ( 0 , len ( trainingSet ))) \n         testSet . append ( trainingSet [ randIndex ]) \n         del ( trainingSet [ randIndex ]) \n     trainMat = []; trainClasses = [] \n     for   docIndex   in   trainingSet : \n         trainMat . append ( bagOfWords2VecMN ( vocabList , docList [ docIndex ])) \n         trainClasses . append ( classList [ docIndex ]) \n     p0V , p1V , pSpam = trainNBO ( array ( trainMat ), array ( trainClasses )) \n     errorCount = 0 \n     for   docIndex   in   testSet : \n         wordVector = bagOfWords2VecMN ( vocabList , docList [ docIndex ]) \n         if   classifyNB ( array ( wordVector ), p0V , p1V , pSpam ) != classList [ docIndex ]: \n             errorCount += 1 \n     print   the error rate is: , float ( errorCount ) / len ( testSet ) \n     return   vocabList , p0V , p1V  #\u6734\u7d20\u8d1d\u53f6\u65af\u5206\u7c7b\u51fd\u6570  def   classifyNB ( vec2Classify , p0Vec , p1Vec , pClass1 ): \n     p1 = sum ( vec2Classify * p1Vec ) + log ( pClass1 ) \n     p0 = sum ( vec2Classify * p0Vec ) + log ( 1.0 - pClass1 ) \n     if   p1 p0 : \n         return   1 \n     else : \n         return   0    \u4f7f\u7528\u7b97\u6cd5: \u6784\u5efa\u4e00\u4e2a\u5b8c\u6574\u7684\u7a0b\u5e8f\uff0c\u5c01\u88c5\u6240\u6709\u5185\u5bb9\u3002\u7ed9\u5b9a\u4e24\u4e2a RSS \u6e90\uff0c\u6539\u7a0b\u5e8f\u4f1a\u663e\u793a\u6700\u5e38\u7528\u7684\u516c\u5171\u8bcd   \u51fd\u6570 localWords() \u4f7f\u7528\u4e86\u4e24\u4e2a RSS \u6e90\u4f5c\u4e3a\u53c2\u6570\uff0cRSS \u6e90\u8981\u5728\u51fd\u6570\u5916\u5bfc\u5165\uff0c\u8fd9\u6837\u505a\u7684\u539f\u56e0\u662f RSS \u6e90\u4f1a\u968f\u65f6\u95f4\u800c\u6539\u53d8\uff0c\u91cd\u65b0\u52a0\u8f7d RSS \u6e90\u5c31\u4f1a\u5f97\u5230\u65b0\u7684\u6570\u636e    reload ( bayes )  module   bayes   from   bayes.pyc    import   feedparser    ny = feedparser . parse ( http://newyork.craigslist.org/stp/index.rss )    sy = feedparser . parse ( http://sfbay.craigslist.org/stp/index.rss )    vocabList , pSF , pNY = bayes . localWords ( ny , sf )  the   error   rate   is :   0.2    vocabList , pSF , pNY = bayes . localWords ( ny , sf )  the   error   rate   is :   0.3    vocabList , pSF , pNY = bayes . localWords ( ny , sf )  the   error   rate   is :   0.55  \n\u4e3a\u4e86\u5f97\u5230\u9519\u8bef\u7387\u7684\u7cbe\u786e\u4f30\u8ba1\uff0c\u5e94\u8be5\u591a\u6b21\u8fdb\u884c\u4e0a\u8ff0\u5b9e\u9a8c\uff0c\u7136\u540e\u53d6\u5e73\u5747\u503c  \u63a5\u4e0b\u6765\uff0c\u6211\u4eec\u8981\u5206\u6790\u4e00\u4e0b\u6570\u636e\uff0c\u663e\u793a\u5730\u57df\u76f8\u5173\u7684\u7528\u8bcd  \u53ef\u4ee5\u5148\u5bf9\u5411\u91cfpSF\u4e0epNY\u8fdb\u884c\u6392\u5e8f\uff0c\u7136\u540e\u6309\u7167\u987a\u5e8f\u6253\u5370\u51fa\u6765\uff0c\u5c06\u4e0b\u9762\u7684\u4ee3\u7801\u6dfb\u52a0\u5230\u6587\u4ef6\u4e2d\uff1a  #\u6700\u5177\u8868\u5f81\u6027\u7684\u8bcd\u6c47\u663e\u793a\u51fd\u6570  def   getTopWords ( ny , sf ): \n     import   operator \n     vocabList , p0V , p1V = localWords ( ny , sf ) \n     topNY = []; topSF = [] \n     for   i   in   range ( len ( p0V )): \n         if   p0V [ i ] - 6.0 : topSF . append (( vocabList [ i ], p0V [ i ])) \n         if   p1V [ i ] - 6.0 : topNY . append (( vocabList [ i ], p1V [ i ])) \n     sortedSF = sorted ( topSF , key = lambda   pair : pair [ 1 ], reverse = True ) \n     print   SF**SF**SF**SF**SF**SF**SF**SF**SF**SF**SF**SF**SF**SF** \n     for   item   in   sortedSF : \n         print   item [ 0 ] \n     sortedNY = sorted ( topNY , key = lambda   pair : pair [ 1 ], reverse = True ) \n     print   NY**NY**NY**NY**NY**NY**NY**NY**NY**NY**NY**NY**NY**NY** \n     for   item   in   sortedNY : \n         print   item [ 0 ]   \u51fd\u6570 getTopWords() \u4f7f\u7528\u4e24\u4e2a RSS \u6e90\u4f5c\u4e3a\u8f93\u5165\uff0c\u7136\u540e\u8bad\u7ec3\u5e76\u6d4b\u8bd5\u6734\u7d20\u8d1d\u53f6\u65af\u5206\u7c7b\u5668\uff0c\u8fd4\u56de\u4f7f\u7528\u7684\u6982\u7387\u503c\u3002\u7136\u540e\u521b\u5efa\u4e24\u4e2a\u5217\u8868\u7528\u4e8e\u5143\u7ec4\u7684\u5b58\u50a8\uff0c\u4e0e\u4e4b\u524d\u8fd4\u56de\u6392\u540d\u6700\u9ad8\u7684 X \u4e2a\u5355\u8bcd\u4e0d\u540c\uff0c\u8fd9\u91cc\u53ef\u4ee5\u8fd4\u56de\u5927\u4e8e\u67d0\u4e2a\u9608\u503c\u7684\u6240\u6709\u8bcd\uff0c\u8fd9\u4e9b\u5143\u7ec4\u4f1a\u6309\u7167\u5b83\u4eec\u7684\u6761\u4ef6\u6982\u7387\u8fdb\u884c\u6392\u5e8f\u3002  \u4fdd\u5b58 bayes.py \u6587\u4ef6\uff0c\u5728python\u63d0\u793a\u7b26\u4e0b\u8f93\u5165\uff1a    reload ( bayes )  module   bayes   from   bayes.pyc    bayes . getTopWords ( ny , sf )  the   error   rate   is :   0.55  SF ** SF ** SF ** SF ** SF ** SF ** SF ** SF ** SF ** SF ** SF ** SF ** SF ** SF **  how  last  man  ...  veteran  still  ends  late  off  own  know  NY ** NY ** NY ** NY ** NY ** NY ** NY ** NY ** NY ** NY ** NY ** NY ** NY ** NY **  someone  meet  ...  apparel  recalled  starting  strings   \u5f53\u6ce8\u91ca\u6389\u7528\u4e8e\u79fb\u9664\u9ad8\u9891\u8bcd\u7684\u4e09\u884c\u4ee3\u7801\uff0c\u7136\u540e\u6bd4\u8f83\u6ce8\u91ca\u524d\u540e\u7684\u5206\u7c7b\u6027\u80fd\uff0c\u53bb\u6389\u8fd9\u51e0\u884c\u4ee3\u7801\u4e4b\u540e\uff0c\u9519\u8bef\u7387\u4e3a54%\uff0c\uff0c\u800c\u4fdd\u7559\u8fd9\u4e9b\u4ee3\u7801\u5f97\u5230\u7684\u9519\u8bef\u7387\u4e3a70%\u3002\u8fd9\u91cc\u89c2\u5bdf\u5230\uff0c\u8fd9\u4e9b\u7559\u8a00\u4e2d\u51fa\u73b0\u6b21\u6570\u6700\u591a\u7684\u524d30\u4e2a\u8bcd\u6db5\u76d6\u4e86\u6240\u6709\u7528\u8bcd\u768430%\uff0cvocabList\u7684\u5927\u5c0f\u7ea6\u4e3a3000\u4e2a\u8bcd\uff0c\u4e5f\u5c31\u662f\u8bf4\uff0c\u8bcd\u6c47\u8868\u4e2d\u7684\u4e00\u5c0f\u90e8\u5206\u5355\u8bcd\u5374\u5360\u636e\u4e86\u6240\u6709\u6587\u672c\u7528\u8bcd\u7684\u4e00\u5927\u90e8\u5206\u3002\u4ea7\u751f\u8fd9\u79cd\u73b0\u8c61\u7684\u539f\u56e0\u662f\u56e0\u4e3a\u8bed\u8a00\u4e2d\u5927\u90e8\u5206\u90fd\u662f\u5197\u4f59\u548c\u7ed3\u6784\u8f85\u52a9\u6027\u5185\u5bb9\u3002\u53e6\u4e00\u4e2a\u5e38\u7528\u7684\u65b9\u6cd5\u662f\u4e0d\u4ec5\u79fb\u9664\u9ad8\u9891\u8bcd\uff0c\u540c\u65f6\u4ece\u67d0\u4e2a\u9884\u5b9a\u9ad8\u9891\u8bcd\u4e2d\u79fb\u9664\u7ed3\u6784\u4e0a\u7684\u8f85\u52a9\u8bcd\uff0c\u8be5\u8bcd\u8868\u79f0\u4e3a\u505c\u7528\u8bcd\u8868\u3002  \u6700\u540e\u8f93\u51fa\u7684\u5355\u8bcd\uff0c\u53ef\u4ee5\u770b\u51fa\u7a0b\u5e8f\u8f93\u51fa\u4e86\u5927\u91cf\u7684\u505c\u7528\u8bcd\uff0c\u53ef\u4ee5\u79fb\u9664\u56fa\u5b9a\u7684\u505c\u7528\u8bcd\u770b\u770b\u7ed3\u679c\u5982\u4f55\uff0c\u8fd9\u6837\u505a\u7684\u82b1\uff0c\u5206\u7c7b\u9519\u8bef\u7387\u4e5f\u4f1a\u964d\u4f4e\u3002  \u5b8c\u6574\u4ee3\u7801\u5730\u5740 :  https://github.com/apachecn/MachineLearning/blob/master/src/python/4.NaiveBayes/bayes.py    \u4f5c\u8005\uff1a \u7f8a\u4e09   \u5c0f\u7476  GitHub\u5730\u5740 :  https://github.com/apachecn/MachineLearning  \u7248\u6743\u58f0\u660e\uff1a\u6b22\u8fce\u8f6c\u8f7d\u5b66\u4e60 =  \u8bf7\u6807\u6ce8\u4fe1\u606f\u6765\u6e90\u4e8e  ApacheCN", 
            "title": "\u5f00\u53d1\u6d41\u7a0b"
        }, 
        {
            "location": "/\u4e66\u7c4d/\u673a\u5668\u5b66\u4e60\u5b9e\u6218/05.Logistic\u56de\u5f52/", 
            "text": "\u7b2c5\u7ae0 Logistic\u56de\u5f52\n\n\n\n\nLogistic \u56de\u5f52 \u6982\u8ff0\n\n\nLogistic \u56de\u5f52 \u6216\u8005\u53eb\u903b\u8f91\u56de\u5f52 \u867d\u7136\u540d\u5b57\u6709\u56de\u5f52\uff0c\u4f46\u662f\u5b83\u662f\u7528\u6765\u505a\u5206\u7c7b\u7684\u3002\u5176\u4e3b\u8981\u601d\u60f3\u662f: \u6839\u636e\u73b0\u6709\u6570\u636e\u5bf9\u5206\u7c7b\u8fb9\u754c\u7ebf(Decision Boundary)\u5efa\u7acb\u56de\u5f52\u516c\u5f0f\uff0c\u4ee5\u6b64\u8fdb\u884c\u5206\u7c7b\u3002\n\n\n\u987b\u77e5\u6982\u5ff5\n\n\nSigmoid \u51fd\u6570\n\n\n\u56de\u5f52 \u6982\u5ff5\n\n\n\u5047\u8bbe\u73b0\u5728\u6709\u4e00\u4e9b\u6570\u636e\u70b9\uff0c\u6211\u4eec\u7528\u4e00\u6761\u76f4\u7ebf\u5bf9\u8fd9\u4e9b\u70b9\u8fdb\u884c\u62df\u5408\uff08\u8fd9\u6761\u76f4\u7ebf\u79f0\u4e3a\u6700\u4f73\u62df\u5408\u76f4\u7ebf\uff09\uff0c\u8fd9\u4e2a\u62df\u5408\u7684\u8fc7\u7a0b\u5c31\u53eb\u505a\u56de\u5f52\u3002\u8fdb\u800c\u53ef\u4ee5\u5f97\u5230\u5bf9\u8fd9\u4e9b\u70b9\u7684\u62df\u5408\u76f4\u7ebf\u65b9\u7a0b\uff0c\u90a3\u4e48\u6211\u4eec\u6839\u636e\u8fd9\u4e2a\u56de\u5f52\u65b9\u7a0b\uff0c\u600e\u4e48\u8fdb\u884c\u5206\u7c7b\u5462\uff1f\u8bf7\u770b\u4e0b\u9762\u3002\n\n\n\u4e8c\u503c\u578b\u8f93\u51fa\u5206\u7c7b\u51fd\u6570\n\n\n\u6211\u4eec\u60f3\u8981\u7684\u51fd\u6570\u5e94\u8be5\u662f: \u80fd\u63a5\u53d7\u6240\u6709\u7684\u8f93\u5165\u7136\u540e\u9884\u6d4b\u51fa\u7c7b\u522b\u3002\u4f8b\u5982\uff0c\u5728\u4e24\u4e2a\u7c7b\u7684\u60c5\u51b5\u4e0b\uff0c\u4e0a\u8ff0\u51fd\u6570\u8f93\u51fa 0 \u6216 1.\u6216\u8bb8\u4f60\u4e4b\u524d\u63a5\u89e6\u8fc7\u5177\u6709\u8fd9\u79cd\u6027\u8d28\u7684\u51fd\u6570\uff0c\u8be5\u51fd\u6570\u79f0\u4e3a \n\u6d77\u7ef4\u585e\u5f97\u9636\u8dc3\u51fd\u6570(Heaviside step function)\n\uff0c\u6216\u8005\u76f4\u63a5\u79f0\u4e3a \n\u5355\u4f4d\u9636\u8dc3\u51fd\u6570\n\u3002\u7136\u800c\uff0c\u6d77\u7ef4\u585e\u5f97\u9636\u8dc3\u51fd\u6570\u7684\u95ee\u9898\u5728\u4e8e: \u8be5\u51fd\u6570\u5728\u8df3\u8dc3\u70b9\u4e0a\u4ece 0 \u77ac\u95f4\u8df3\u8dc3\u5230 1\uff0c\u8fd9\u4e2a\u77ac\u95f4\u8df3\u8dc3\u8fc7\u7a0b\u6709\u65f6\u5f88\u96be\u5904\u7406\u3002\u5e78\u597d\uff0c\u53e6\u4e00\u4e2a\u51fd\u6570\u4e5f\u6709\u7c7b\u4f3c\u7684\u6027\u8d28\uff08\u53ef\u4ee5\u8f93\u51fa 0 \u6216\u8005 1 \u7684\u6027\u8d28\uff09\uff0c\u4e14\u6570\u5b66\u4e0a\u66f4\u6613\u5904\u7406\uff0c\u8fd9\u5c31\u662f Sigmoid \u51fd\u6570\u3002 Sigmoid \u51fd\u6570\u5177\u4f53\u7684\u8ba1\u7b97\u516c\u5f0f\u5982\u4e0b: \n\n\n\n\n\u4e0b\u56fe\u7ed9\u51fa\u4e86 Sigmoid \u51fd\u6570\u5728\u4e0d\u540c\u5750\u6807\u5c3a\u5ea6\u4e0b\u7684\u4e24\u6761\u66f2\u7ebf\u56fe\u3002\u5f53 x \u4e3a 0 \u65f6\uff0cSigmoid \u51fd\u6570\u503c\u4e3a 0.5 \u3002\u968f\u7740 x \u7684\u589e\u5927\uff0c\u5bf9\u5e94\u7684 Sigmoid \u503c\u5c06\u903c\u8fd1\u4e8e 1 ; \u800c\u968f\u7740 x \u7684\u51cf\u5c0f\uff0c Sigmoid \u503c\u5c06\u903c\u8fd1\u4e8e 0 \u3002\u5982\u679c\u6a2a\u5750\u6807\u523b\u5ea6\u8db3\u591f\u5927\uff0c Sigmoid \u51fd\u6570\u770b\u8d77\u6765\u5f88\u50cf\u4e00\u4e2a\u9636\u8dc3\u51fd\u6570\u3002\n\n\n\n\n\u56e0\u6b64\uff0c\u4e3a\u4e86\u5b9e\u73b0 Logistic \u56de\u5f52\u5206\u7c7b\u5668\uff0c\u6211\u4eec\u53ef\u4ee5\u5728\u6bcf\u4e2a\u7279\u5f81\u4e0a\u90fd\u4e58\u4ee5\u4e00\u4e2a\u56de\u5f52\u7cfb\u6570\uff08\u5982\u4e0b\u516c\u5f0f\u6240\u793a\uff09\uff0c\u7136\u540e\u628a\u6240\u6709\u7ed3\u679c\u503c\u76f8\u52a0\uff0c\u5c06\u8fd9\u4e2a\u603b\u548c\u4ee3\u5165 Sigmoid \u51fd\u6570\u4e2d\uff0c\u8fdb\u800c\u5f97\u5230\u4e00\u4e2a\u8303\u56f4\u5728 0~1 \u4e4b\u95f4\u7684\u6570\u503c\u3002\u4efb\u4f55\u5927\u4e8e 0.5 \u7684\u6570\u636e\u88ab\u5206\u5165 1 \u7c7b\uff0c\u5c0f\u4e8e 0.5 \u5373\u88ab\u5f52\u5165 0 \u7c7b\u3002\u6240\u4ee5\uff0cLogistic \u56de\u5f52\u4e5f\u662f\u4e00\u79cd\u6982\u7387\u4f30\u8ba1\uff0c\u6bd4\u5982\u8fd9\u91ccSigmoid \u51fd\u6570\u5f97\u51fa\u7684\u503c\u4e3a0.5\uff0c\u53ef\u4ee5\u7406\u89e3\u4e3a\u7ed9\u5b9a\u6570\u636e\u548c\u53c2\u6570\uff0c\u6570\u636e\u88ab\u5206\u5165 1 \u7c7b\u7684\u6982\u7387\u4e3a0.5\u3002\u60f3\u5bf9Sigmoid \u51fd\u6570\u6709\u66f4\u591a\u4e86\u89e3\uff0c\u53ef\u4ee5\u70b9\u5f00\n\u6b64\u94fe\u63a5\n\u8ddf\u6b64\u51fd\u6570\u4e92\u52a8\u3002\n\n\n\u57fa\u4e8e\u6700\u4f18\u5316\u65b9\u6cd5\u7684\u56de\u5f52\u7cfb\u6570\u786e\u5b9a\n\n\nSigmoid \u51fd\u6570\u7684\u8f93\u5165\u8bb0\u4e3a z \uff0c\u7531\u4e0b\u9762\u516c\u5f0f\u5f97\u5230: \n\n\n\n\n\u5982\u679c\u91c7\u7528\u5411\u91cf\u7684\u5199\u6cd5\uff0c\u4e0a\u8ff0\u516c\u5f0f\u53ef\u4ee5\u5199\u6210 \n \uff0c\u5b83\u8868\u793a\u5c06\u8fd9\u4e24\u4e2a\u6570\u503c\u5411\u91cf\u5bf9\u5e94\u5143\u7d20\u76f8\u4e58\u7136\u540e\u5168\u90e8\u52a0\u8d77\u6765\u5373\u5f97\u5230 z \u503c\u3002\u5176\u4e2d\u7684\u5411\u91cf x \u662f\u5206\u7c7b\u5668\u7684\u8f93\u5165\u6570\u636e\uff0c\u5411\u91cf w \u4e5f\u5c31\u662f\u6211\u4eec\u8981\u627e\u5230\u7684\u6700\u4f73\u53c2\u6570\uff08\u7cfb\u6570\uff09\uff0c\u4ece\u800c\u4f7f\u5f97\u5206\u7c7b\u5668\u5c3d\u53ef\u80fd\u5730\u7cbe\u786e\u3002\u4e3a\u4e86\u5bfb\u627e\u8be5\u6700\u4f73\u53c2\u6570\uff0c\u9700\u8981\u7528\u5230\u6700\u4f18\u5316\u7406\u8bba\u7684\u4e00\u4e9b\u77e5\u8bc6\u3002\u6211\u4eec\u8fd9\u91cc\u4f7f\u7528\u7684\u662f\u2014\u2014\u68af\u5ea6\u4e0a\u5347\u6cd5\uff08Gradient Ascent\uff09\u3002\n\n\n\u68af\u5ea6\u4e0a\u5347\u6cd5\n\n\n\u68af\u5ea6\u7684\u4ecb\u7ecd\n\n\n\u9700\u8981\u4e00\u70b9\u70b9\u5411\u91cf\u65b9\u9762\u7684\u6570\u5b66\u77e5\u8bc6\n\n\n\u5411\u91cf = \u503c + \u65b9\u5411  \n\u68af\u5ea6 = \u5411\u91cf\n\u68af\u5ea6 = \u68af\u5ea6\u503c + \u68af\u5ea6\u65b9\u5411\n\n\n\n\n\u68af\u5ea6\u4e0a\u5347\u6cd5\u7684\u601d\u60f3\n\n\n\u8981\u627e\u5230\u67d0\u51fd\u6570\u7684\u6700\u5927\u503c\uff0c\u6700\u597d\u7684\u65b9\u6cd5\u662f\u6cbf\u7740\u8be5\u51fd\u6570\u7684\u68af\u5ea6\u65b9\u5411\u63a2\u5bfb\u3002\u5982\u679c\u68af\u5ea6\u8bb0\u4e3a \u25bd \uff0c\u5219\u51fd\u6570 f(x, y) \u7684\u68af\u5ea6\u7531\u4e0b\u5f0f\u8868\u793a: \n\n\n\n\n\u8fd9\u4e2a\u68af\u5ea6\u610f\u5473\u7740\u8981\u6cbf x \u7684\u65b9\u5411\u79fb\u52a8 \n \uff0c\u6cbf y \u7684\u65b9\u5411\u79fb\u52a8 \n \u3002\u5176\u4e2d\uff0c\u51fd\u6570f(x, y) \u5fc5\u987b\u8981\u5728\u5f85\u8ba1\u7b97\u7684\u70b9\u4e0a\u6709\u5b9a\u4e49\u5e76\u4e14\u53ef\u5fae\u3002\u4e0b\u56fe\u662f\u4e00\u4e2a\u5177\u4f53\u7684\u4f8b\u5b50\u3002\n\n\n\n\n\u4e0a\u56fe\u5c55\u793a\u7684\uff0c\u68af\u5ea6\u4e0a\u5347\u7b97\u6cd5\u5230\u8fbe\u6bcf\u4e2a\u70b9\u540e\u90fd\u4f1a\u91cd\u65b0\u4f30\u8ba1\u79fb\u52a8\u7684\u65b9\u5411\u3002\u4ece P0 \u5f00\u59cb\uff0c\u8ba1\u7b97\u5b8c\u8be5\u70b9\u7684\u68af\u5ea6\uff0c\u51fd\u6570\u5c31\u6839\u636e\u68af\u5ea6\u79fb\u52a8\u5230\u4e0b\u4e00\u70b9 P1\u3002\u5728 P1 \u70b9\uff0c\u68af\u5ea6\u518d\u6b21\u88ab\u91cd\u65b0\u8ba1\u7b97\uff0c\u5e76\u6cbf\u7740\u65b0\u7684\u68af\u5ea6\u65b9\u5411\u79fb\u52a8\u5230 P2 \u3002\u5982\u6b64\u5faa\u73af\u8fed\u4ee3\uff0c\u76f4\u5230\u6ee1\u8db3\u505c\u6b62\u6761\u4ef6\u3002\u8fed\u4ee3\u8fc7\u7a0b\u4e2d\uff0c\u68af\u5ea6\u7b97\u5b50\u603b\u662f\u4fdd\u8bc1\u6211\u4eec\u80fd\u9009\u53d6\u5230\u6700\u4f73\u7684\u79fb\u52a8\u65b9\u5411\u3002\n\n\n\u4e0a\u56fe\u4e2d\u7684\u68af\u5ea6\u4e0a\u5347\u7b97\u6cd5\u6cbf\u68af\u5ea6\u65b9\u5411\u79fb\u52a8\u4e86\u4e00\u6b65\u3002\u53ef\u4ee5\u770b\u5230\uff0c\u68af\u5ea6\u7b97\u5b50\u603b\u662f\u6307\u5411\u51fd\u6570\u503c\u589e\u957f\u6700\u5feb\u7684\u65b9\u5411\u3002\u8fd9\u91cc\u6240\u8bf4\u7684\u662f\u79fb\u52a8\u65b9\u5411\uff0c\u800c\u672a\u63d0\u5230\u79fb\u52a8\u91cf\u7684\u5927\u5c0f\u3002\u8be5\u91cf\u503c\u79f0\u4e3a\u6b65\u957f\uff0c\u8bb0\u4f5c \u03b1 \u3002\u7528\u5411\u91cf\u6765\u8868\u793a\u7684\u8bdd\uff0c\u68af\u5ea6\u4e0a\u5347\u7b97\u6cd5\u7684\u8fed\u4ee3\u516c\u5f0f\u5982\u4e0b: \n\n\n\n\n\u8be5\u516c\u5f0f\u5c06\u4e00\u76f4\u88ab\u8fed\u4ee3\u6267\u884c\uff0c\u76f4\u81f3\u8fbe\u5230\u67d0\u4e2a\u505c\u6b62\u6761\u4ef6\u4e3a\u6b62\uff0c\u6bd4\u5982\u8fed\u4ee3\u6b21\u6570\u8fbe\u5230\u67d0\u4e2a\u6307\u5b9a\u503c\u6216\u8005\u7b97\u6cd5\u8fbe\u5230\u67d0\u4e2a\u53ef\u4ee5\u5141\u8bb8\u7684\u8bef\u5dee\u8303\u56f4\u3002\n\n\n\u4ecb\u7ecd\u4e00\u4e0b\u51e0\u4e2a\u76f8\u5173\u7684\u6982\u5ff5\uff1a\n\n\u4f8b\u5982\uff1ay =w0 + w1x1 + w2x2 + ... + wnxn\n\u68af\u5ea6\uff1a\u53c2\u8003\u4e0a\u56fe\u7684\u4f8b\u5b50\uff0c\u4e8c\u7ef4\u56fe\u50cf\uff0cx\u65b9\u5411\u4ee3\u8868\u7b2c\u4e00\u4e2a\u7cfb\u6570\uff0c\u4e5f\u5c31\u662f w1\uff0cy\u65b9\u5411\u4ee3\u8868\u7b2c\u4e8c\u4e2a\u7cfb\u6570\u4e5f\u5c31\u662f w2\uff0c\u8fd9\u6837\u7684\u5411\u91cf\u5c31\u662f\u68af\u5ea6\u3002\n\u03b1\uff1a\u4e0a\u9762\u7684\u68af\u5ea6\u7b97\u6cd5\u7684\u8fed\u4ee3\u516c\u5f0f\u4e2d\u7684\u963f\u5c14\u6cd5\uff0c\u8fd9\u4e2a\u4ee3\u8868\u7684\u662f\u79fb\u52a8\u6b65\u957f\uff08step length\uff09\u3002\u79fb\u52a8\u6b65\u957f\u4f1a\u5f71\u54cd\u6700\u7ec8\u7ed3\u679c\u7684\u62df\u5408\u7a0b\u5ea6\uff0c\u6700\u597d\u7684\u65b9\u6cd5\u5c31\u662f\u968f\u7740\u8fed\u4ee3\u6b21\u6570\u66f4\u6539\u79fb\u52a8\u6b65\u957f\u3002\n\u6b65\u957f\u901a\u4fd7\u7684\u7406\u89e3\uff0c100\u7c73\uff0c\u5982\u679c\u6211\u4e00\u6b65\u8d7010\u7c73\uff0c\u6211\u9700\u8981\u8d7010\u6b65\uff1b\u5982\u679c\u4e00\u6b65\u8d7020\u7c73\uff0c\u6211\u53ea\u9700\u8981\u8d705\u6b65\u3002\u8fd9\u91cc\u7684\u4e00\u6b65\u8d70\u591a\u5c11\u7c73\u5c31\u662f\u6b65\u957f\u7684\u610f\u601d\u3002\n\u25bdf(w)\uff1a\u4ee3\u8868\u6cbf\u7740\u68af\u5ea6\u53d8\u5316\u7684\u65b9\u5411\u3002\n\n\n\nNote:\n\n\n\u95ee\uff1a\u6709\u4eba\u4f1a\u597d\u5947\u4e3a\u4ec0\u4e48\u6709\u4e9b\u4e66\u7c4d\u4e0a\u8bf4\u7684\u662f\u68af\u5ea6\u4e0b\u964d\u6cd5\uff08Gradient Decent\uff09?\n \u00a0 \u00a0\u7b54\uff1a \u5176\u5b9e\u8fd9\u4e2a\u4e24\u4e2a\u65b9\u6cd5\u5728\u6b64\u60c5\u51b5\u4e0b\u672c\u8d28\u4e0a\u662f\u76f8\u540c\u7684\u3002\u5173\u952e\u5728\u4e8e\u8bef\u5dee\u51fd\u6570\u6216\u8005\u53eb\u76ee\u6807\u51fd\u6570\uff08objective function\uff09\u3002\u5982\u679c\u76ee\u6807\u51fd\u6570\u662f\u635f\u5931\u51fd\u6570\uff0c\u90a3\u5c31\u662f\u6700\u5c0f\u5316\u635f\u5931\u51fd\u6570\u6765\u6c42\u51fd\u6570\u7684\u6700\u5c0f\u503c\uff0c\u5c31\u7528\u68af\u5ea6\u4e0b\u964d\u3002 \u5982\u679c\u76ee\u6807\u51fd\u6570\u662f\u4f3c\u7136\u51fd\u6570\uff08Likelihood function\uff09\uff0c\u5c31\u662f\u8981\u6700\u5927\u5316\u4f3c\u7136\u51fd\u6570\u6765\u6c42\u51fd\u6570\u7684\u6700\u5927\u503c\uff0c\u90a3\u5c31\u7528\u68af\u5ea6\u4e0a\u5347\u3002\u5728\u903b\u8f91\u56de\u5f52\u4e2d\uff0c \u635f\u5931\u51fd\u6570\u548c\u4f3c\u7136\u51fd\u6570\u65e0\u975e\u5c31\u662f\u4e92\u4e3a\u6b63\u8d1f\u5173\u7cfb\u3002\n \u00a0 \u00a0\u53ea\u9700\u8981\u5728\u8fed\u4ee3\u516c\u5f0f\u4e2d\u7684\u52a0\u6cd5\u53d8\u6210\u51cf\u6cd5\u3002\u56e0\u6b64\uff0c\u5bf9\u5e94\u7684\u516c\u5f0f\u53ef\u4ee5\u5199\u6210\n\n\n\n\n\u5c40\u90e8\u6700\u4f18\u73b0\u8c61 \uff08Local Optima\uff09\n\n\n\n\n\u4e0a\u56fe\u8868\u793a\u53c2\u6570 \u03b8 \u4e0e\u8bef\u5dee\u51fd\u6570 J(\u03b8) \u7684\u5173\u7cfb\u56fe (\u8fd9\u91cc\u7684\u8bef\u5dee\u51fd\u6570\u662f\u635f\u5931\u51fd\u6570\uff0c\u6240\u4ee5\u6211\u4eec\u8981\u6700\u5c0f\u5316\u635f\u5931\u51fd\u6570)\uff0c\u7ea2\u8272\u7684\u90e8\u5206\u662f\u8868\u793a J(\u03b8) \u6709\u7740\u6bd4\u8f83\u9ad8\u7684\u53d6\u503c\uff0c\u6211\u4eec\u9700\u8981\u7684\u662f\uff0c\u80fd\u591f\u8ba9 J(\u03b8) \u7684\u503c\u5c3d\u91cf\u7684\u4f4e\u3002\u4e5f\u5c31\u662f\u6df1\u84dd\u8272\u7684\u90e8\u5206\u3002\u03b80\uff0c\u03b81 \u8868\u793a \u03b8 \u5411\u91cf\u7684\u4e24\u4e2a\u7ef4\u5ea6\uff08\u6b64\u5904\u7684\u03b80\uff0c\u03b81\u662fx0\u548cx1\u7684\u7cfb\u6570\uff0c\u4e5f\u5bf9\u5e94\u7684\u662f\u4e0a\u6587w0\u548cw1\uff09\u3002\n\n\n\u53ef\u80fd\u68af\u5ea6\u4e0b\u964d\u7684\u6700\u7ec8\u70b9\u5e76\u975e\u662f\u5168\u5c40\u6700\u5c0f\u70b9\uff0c\u53ef\u80fd\u662f\u4e00\u4e2a\u5c40\u90e8\u6700\u5c0f\u70b9\uff0c\u5982\u6211\u4eec\u4e0a\u56fe\u4e2d\u7684\u53f3\u8fb9\u7684\u68af\u5ea6\u4e0b\u964d\u66f2\u7ebf\uff0c\u63cf\u8ff0\u7684\u662f\u6700\u7ec8\u5230\u8fbe\u4e00\u4e2a\u5c40\u90e8\u6700\u5c0f\u70b9\uff0c\u8fd9\u662f\u6211\u4eec\u91cd\u65b0\u9009\u62e9\u4e86\u4e00\u4e2a\u521d\u59cb\u70b9\u5f97\u5230\u7684\u3002\n\n\n\u770b\u6765\u6211\u4eec\u8fd9\u4e2a\u7b97\u6cd5\u5c06\u4f1a\u5728\u5f88\u5927\u7684\u7a0b\u5ea6\u4e0a\u88ab\u521d\u59cb\u70b9\u7684\u9009\u62e9\u5f71\u54cd\u800c\u9677\u5165\u5c40\u90e8\u6700\u5c0f\u70b9\u3002\n\n\nLogistic \u56de\u5f52 \u539f\u7406\n\n\nLogistic \u56de\u5f52 \u5de5\u4f5c\u539f\u7406\n\n\n\u6bcf\u4e2a\u56de\u5f52\u7cfb\u6570\u521d\u59cb\u5316\u4e3a 1\n\u91cd\u590d R \u6b21:\n    \u8ba1\u7b97\u6574\u4e2a\u6570\u636e\u96c6\u7684\u68af\u5ea6\n    \u4f7f\u7528 \u6b65\u957f x \u68af\u5ea6 \u66f4\u65b0\u56de\u5f52\u7cfb\u6570\u7684\u5411\u91cf\n\u8fd4\u56de\u56de\u5f52\u7cfb\u6570\n\n\n\n\nLogistic \u56de\u5f52 \u5f00\u53d1\u6d41\u7a0b\n\n\n\u6536\u96c6\u6570\u636e: \u91c7\u7528\u4efb\u610f\u65b9\u6cd5\u6536\u96c6\u6570\u636e\n\u51c6\u5907\u6570\u636e: \u7531\u4e8e\u9700\u8981\u8fdb\u884c\u8ddd\u79bb\u8ba1\u7b97\uff0c\u56e0\u6b64\u8981\u6c42\u6570\u636e\u7c7b\u578b\u4e3a\u6570\u503c\u578b\u3002\u53e6\u5916\uff0c\u7ed3\u6784\u5316\u6570\u636e\u683c\u5f0f\u5219\u6700\u4f73\u3002\n\u5206\u6790\u6570\u636e: \u91c7\u7528\u4efb\u610f\u65b9\u6cd5\u5bf9\u6570\u636e\u8fdb\u884c\u5206\u6790\u3002\n\u8bad\u7ec3\u7b97\u6cd5: \u5927\u90e8\u5206\u65f6\u95f4\u5c06\u7528\u4e8e\u8bad\u7ec3\uff0c\u8bad\u7ec3\u7684\u76ee\u7684\u662f\u4e3a\u4e86\u627e\u5230\u6700\u4f73\u7684\u5206\u7c7b\u56de\u5f52\u7cfb\u6570\u3002\n\u6d4b\u8bd5\u7b97\u6cd5: \u4e00\u65e6\u8bad\u7ec3\u6b65\u9aa4\u5b8c\u6210\uff0c\u5206\u7c7b\u5c06\u4f1a\u5f88\u5feb\u3002\n\u4f7f\u7528\u7b97\u6cd5: \u9996\u5148\uff0c\u6211\u4eec\u9700\u8981\u8f93\u5165\u4e00\u4e9b\u6570\u636e\uff0c\u5e76\u5c06\u5176\u8f6c\u6362\u6210\u5bf9\u5e94\u7684\u7ed3\u6784\u5316\u6570\u503c\uff1b\u63a5\u7740\uff0c\u57fa\u4e8e\u8bad\u7ec3\u597d\u7684\u56de\u5f52\u7cfb\u6570\u5c31\u53ef\u4ee5\u5bf9\u8fd9\u4e9b\u6570\u503c\u8fdb\u884c\u7b80\u5355\u7684\u56de\u5f52\u8ba1\u7b97\uff0c\u5224\u5b9a\u5b83\u4eec\u5c5e\u4e8e\u54ea\u4e2a\u7c7b\u522b\uff1b\u5728\u8fd9\u4e4b\u540e\uff0c\u6211\u4eec\u5c31\u53ef\u4ee5\u5728\u8f93\u51fa\u7684\u7c7b\u522b\u4e0a\u505a\u4e00\u4e9b\u5176\u4ed6\u5206\u6790\u5de5\u4f5c\u3002\n\n\n\n\nLogistic \u56de\u5f52 \u7b97\u6cd5\u7279\u70b9\n\n\n\u4f18\u70b9: \u8ba1\u7b97\u4ee3\u4ef7\u4e0d\u9ad8\uff0c\u6613\u4e8e\u7406\u89e3\u548c\u5b9e\u73b0\u3002\n\u7f3a\u70b9: \u5bb9\u6613\u6b20\u62df\u5408\uff0c\u5206\u7c7b\u7cbe\u5ea6\u53ef\u80fd\u4e0d\u9ad8\u3002\n\u9002\u7528\u6570\u636e\u7c7b\u578b: \u6570\u503c\u578b\u548c\u6807\u79f0\u578b\u6570\u636e\u3002\n\n\n\n\n\u9644\u52a0 \u65b9\u5411\u5bfc\u6570\u4e0e\u68af\u5ea6\n\n\n\n\nLogistic \u56de\u5f52 \u9879\u76ee\u6848\u4f8b\n\n\n\u9879\u76ee\u6848\u4f8b1: \u4f7f\u7528 Logistic \u56de\u5f52\u5728\u7b80\u5355\u6570\u636e\u96c6\u4e0a\u7684\u5206\u7c7b\n\n\n\u5b8c\u6574\u4ee3\u7801\u5730\u5740\n: \nhttps://github.com/apachecn/MachineLearning/blob/master/src/python/5.Logistic/logistic.py\n\n\n\u9879\u76ee\u6982\u8ff0\n\n\n\u5728\u4e00\u4e2a\u7b80\u5355\u7684\u6570\u636e\u96c6\u4e0a\uff0c\u91c7\u7528\u68af\u5ea6\u4e0a\u5347\u6cd5\u627e\u5230 Logistic \u56de\u5f52\u5206\u7c7b\u5668\u5728\u6b64\u6570\u636e\u96c6\u4e0a\u7684\u6700\u4f73\u56de\u5f52\u7cfb\u6570\n\n\n\u5f00\u53d1\u6d41\u7a0b\n\n\n\u6536\u96c6\u6570\u636e: \u53ef\u4ee5\u4f7f\u7528\u4efb\u4f55\u65b9\u6cd5\n\u51c6\u5907\u6570\u636e: \u7531\u4e8e\u9700\u8981\u8fdb\u884c\u8ddd\u79bb\u8ba1\u7b97\uff0c\u56e0\u6b64\u8981\u6c42\u6570\u636e\u7c7b\u578b\u4e3a\u6570\u503c\u578b\u3002\u53e6\u5916\uff0c\u7ed3\u6784\u5316\u6570\u636e\u683c\u5f0f\u5219\u6700\u4f73\n\u5206\u6790\u6570\u636e: \u753b\u51fa\u51b3\u7b56\u8fb9\u754c\n\u8bad\u7ec3\u7b97\u6cd5: \u4f7f\u7528\u68af\u5ea6\u4e0a\u5347\u627e\u5230\u6700\u4f73\u53c2\u6570\n\u6d4b\u8bd5\u7b97\u6cd5: \u4f7f\u7528 Logistic \u56de\u5f52\u8fdb\u884c\u5206\u7c7b\n\u4f7f\u7528\u7b97\u6cd5: \u5bf9\u7b80\u5355\u6570\u636e\u96c6\u4e2d\u6570\u636e\u8fdb\u884c\u5206\u7c7b\n\n\n\n\n\n\n\u6536\u96c6\u6570\u636e: \u53ef\u4ee5\u4f7f\u7528\u4efb\u4f55\u65b9\u6cd5\n\n\n\n\n\u6211\u4eec\u91c7\u7528\u5b58\u50a8\u5728 TestSet.txt \u6587\u672c\u6587\u4ef6\u4e2d\u7684\u6570\u636e\uff0c\u5b58\u50a8\u683c\u5f0f\u5982\u4e0b: \n\n\n-0.017612   14.053064   0\n-1.395634   4.662541    1\n-0.752157   6.538620    0\n-1.322371   7.152853    0\n0.423363    11.054677   0\n\n\n\n\n\u7ed8\u5236\u5728\u56fe\u4e2d\uff0c\u5982\u4e0b\u56fe\u6240\u793a: \n\n\n\n\n\n\n\u51c6\u5907\u6570\u636e: \u7531\u4e8e\u9700\u8981\u8fdb\u884c\u8ddd\u79bb\u8ba1\u7b97\uff0c\u56e0\u6b64\u8981\u6c42\u6570\u636e\u7c7b\u578b\u4e3a\u6570\u503c\u578b\u3002\u53e6\u5916\uff0c\u7ed3\u6784\u5316\u6570\u636e\u683c\u5f0f\u5219\u6700\u4f73\n\n\n\u5206\u6790\u6570\u636e: \u753b\u51fa\u51b3\u7b56\u8fb9\u754c\n\n\n\n\n\u753b\u51fa\u6570\u636e\u96c6\u548c Logistic \u56de\u5f52\u6700\u4f73\u62df\u5408\u76f4\u7ebf\u7684\u51fd\u6570\n\n\ndef\n \nplotBestFit\n(\ndataArr\n,\n \nlabelMat\n,\n \nweights\n):\n\n    \n\n\n        Desc:\n\n\n            \u5c06\u6211\u4eec\u5f97\u5230\u7684\u6570\u636e\u53ef\u89c6\u5316\u5c55\u793a\u51fa\u6765\n\n\n        Args:\n\n\n            dataArr:\u6837\u672c\u6570\u636e\u7684\u7279\u5f81\n\n\n            labelMat:\u6837\u672c\u6570\u636e\u7684\u7c7b\u522b\u6807\u7b7e\uff0c\u5373\u76ee\u6807\u53d8\u91cf\n\n\n            weights:\u56de\u5f52\u7cfb\u6570\n\n\n        Returns:\n\n\n            None\n\n\n    \n\n\n    \nn\n \n=\n \nshape\n(\ndataArr\n)[\n0\n]\n\n    \nxcord1\n \n=\n \n[];\n \nycord1\n \n=\n \n[]\n\n    \nxcord2\n \n=\n \n[];\n \nycord2\n \n=\n \n[]\n\n    \nfor\n \ni\n \nin\n \nrange\n(\nn\n):\n\n        \nif\n \nint\n(\nlabelMat\n[\ni\n])\n==\n \n1\n:\n\n            \nxcord1\n.\nappend\n(\ndataArr\n[\ni\n,\n1\n]);\n \nycord1\n.\nappend\n(\ndataArr\n[\ni\n,\n2\n])\n\n        \nelse\n:\n\n            \nxcord2\n.\nappend\n(\ndataArr\n[\ni\n,\n1\n]);\n \nycord2\n.\nappend\n(\ndataArr\n[\ni\n,\n2\n])\n\n    \nfig\n \n=\n \nplt\n.\nfigure\n()\n\n    \nax\n \n=\n \nfig\n.\nadd_subplot\n(\n111\n)\n\n    \nax\n.\nscatter\n(\nxcord1\n,\n \nycord1\n,\n \ns\n=\n30\n,\n \nc\n=\nred\n,\n \nmarker\n=\ns\n)\n\n    \nax\n.\nscatter\n(\nxcord2\n,\n \nycord2\n,\n \ns\n=\n30\n,\n \nc\n=\ngreen\n)\n\n    \nx\n \n=\n \narange\n(\n-\n3.0\n,\n \n3.0\n,\n \n0.1\n)\n\n    \n\n\n    y\u7684\u7531\u6765\uff0c\u5367\u69fd\uff0c\u662f\u4e0d\u662f\u6ca1\u770b\u61c2\uff1f\n\n\n    \u9996\u5148\u7406\u8bba\u4e0a\u662f\u8fd9\u4e2a\u6837\u5b50\u7684\u3002\n\n\n    dataMat.append([1.0, float(lineArr[0]), float(lineArr[1])])\n\n\n    w0*x0+w1*x1+w2*x2=f(x)\n\n\n    x0\u6700\u5f00\u59cb\u5c31\u8bbe\u7f6e\u4e3a1\u53fb\uff0c x2\u5c31\u662f\u6211\u4eec\u753b\u56fe\u7684y\u503c\uff0c\u800cf(x)\u88ab\u6211\u4eec\u78e8\u5408\u8bef\u5dee\u7ed9\u7b97\u5230w0,w1,w2\u8eab\u4e0a\u53bb\u4e86\n\n\n    \u6240\u4ee5\uff1a w0+w1*x+w2*y=0 =\n y = (-w0-w1*x)/w2   \n\n\n    \n\n    \ny\n \n=\n \n(\n-\nweights\n[\n0\n]\n-\nweights\n[\n1\n]\n*\nx\n)\n/\nweights\n[\n2\n]\n\n    \nax\n.\nplot\n(\nx\n,\n \ny\n)\n\n    \nplt\n.\nxlabel\n(\nX\n);\n \nplt\n.\nylabel\n(\nY\n)\n\n    \nplt\n.\nshow\n()\n\n\n\n\n\n\n\n\u8bad\u7ec3\u7b97\u6cd5: \u4f7f\u7528\u68af\u5ea6\u4e0a\u5347\u627e\u5230\u6700\u4f73\u53c2\u6570\n\n\n\n\nLogistic \u56de\u5f52\u68af\u5ea6\u4e0a\u5347\u4f18\u5316\u7b97\u6cd5\n\n\n# \u6b63\u5e38\u7684\u5904\u7406\u65b9\u6848\n\n\n# \u4e24\u4e2a\u53c2\u6570\uff1a\u7b2c\u4e00\u4e2a\u53c2\u6570==\n dataMatIn \u662f\u4e00\u4e2a2\u7ef4NumPy\u6570\u7ec4\uff0c\u6bcf\u5217\u5206\u522b\u4ee3\u8868\u6bcf\u4e2a\u4e0d\u540c\u7684\u7279\u5f81\uff0c\u6bcf\u884c\u5219\u4ee3\u8868\u6bcf\u4e2a\u8bad\u7ec3\u6837\u672c\u3002\n\n\n# \u7b2c\u4e8c\u4e2a\u53c2\u6570==\n classLabels \u662f\u7c7b\u522b\u6807\u7b7e\uff0c\u5b83\u662f\u4e00\u4e2a 1*100 \u7684\u884c\u5411\u91cf\u3002\u4e3a\u4e86\u4fbf\u4e8e\u77e9\u9635\u8ba1\u7b97\uff0c\u9700\u8981\u5c06\u8be5\u884c\u5411\u91cf\u8f6c\u6362\u4e3a\u5217\u5411\u91cf\uff0c\u505a\u6cd5\u662f\u5c06\u539f\u5411\u91cf\u8f6c\u7f6e\uff0c\u518d\u5c06\u5b83\u8d4b\u503c\u7ed9labelMat\u3002\n\n\ndef\n \ngradAscent\n(\ndataMatIn\n,\n \nclassLabels\n):\n\n    \n# \u8f6c\u5316\u4e3a\u77e9\u9635[[1,1,2],[1,1,2]....]\n\n    \ndataMatrix\n \n=\n \nmat\n(\ndataMatIn\n)\n             \n# \u8f6c\u6362\u4e3a NumPy \u77e9\u9635\n\n    \n# \u8f6c\u5316\u4e3a\u77e9\u9635[[0,1,0,1,0,1.....]]\uff0c\u5e76\u8f6c\u5236[[0],[1],[0].....]\n\n    \n# transpose() \u884c\u5217\u8f6c\u7f6e\u51fd\u6570\n\n    \n# \u5c06\u884c\u5411\u91cf\u8f6c\u5316\u4e3a\u5217\u5411\u91cf   =\n  \u77e9\u9635\u7684\u8f6c\u7f6e\n\n    \nlabelMat\n \n=\n \nmat\n(\nclassLabels\n)\n.\ntranspose\n()\n \n# \u9996\u5148\u5c06\u6570\u7ec4\u8f6c\u6362\u4e3a NumPy \u77e9\u9635\uff0c\u7136\u540e\u518d\u5c06\u884c\u5411\u91cf\u8f6c\u7f6e\u4e3a\u5217\u5411\u91cf\n\n    \n# m-\n\u6570\u636e\u91cf\uff0c\u6837\u672c\u6570 n-\n\u7279\u5f81\u6570\n\n    \nm\n,\nn\n \n=\n \nshape\n(\ndataMatrix\n)\n\n    \n# print m, n, \n__\n*10, shape(dataMatrix.transpose()), \n__\n*100\n\n    \n# alpha\u4ee3\u8868\u5411\u76ee\u6807\u79fb\u52a8\u7684\u6b65\u957f\n\n    \nalpha\n \n=\n \n0.001\n\n    \n# \u8fed\u4ee3\u6b21\u6570\n\n    \nmaxCycles\n \n=\n \n500\n\n    \n# \u751f\u6210\u4e00\u4e2a\u957f\u5ea6\u548c\u7279\u5f81\u6570\u76f8\u540c\u7684\u77e9\u9635\uff0c\u6b64\u5904n\u4e3a3 -\n [[1],[1],[1]]\n\n    \n# weights \u4ee3\u8868\u56de\u5f52\u7cfb\u6570\uff0c \u6b64\u5904\u7684 ones((n,1)) \u521b\u5efa\u4e00\u4e2a\u957f\u5ea6\u548c\u7279\u5f81\u6570\u76f8\u540c\u7684\u77e9\u9635\uff0c\u5176\u4e2d\u7684\u6570\u5168\u90e8\u90fd\u662f 1\n\n    \nweights\n \n=\n \nones\n((\nn\n,\n1\n))\n\n    \nfor\n \nk\n \nin\n \nrange\n(\nmaxCycles\n):\n              \n#heavy on matrix operations\n\n        \n# m*3 \u7684\u77e9\u9635 * 3*1 \u7684\u77e9\u9635 \uff1d m*1\u7684\u77e9\u9635\n\n        \n# \u90a3\u4e48\u4e58\u4e0a\u77e9\u9635\u7684\u610f\u4e49\uff0c\u5c31\u4ee3\u8868\uff1a\u901a\u8fc7\u516c\u5f0f\u5f97\u5230\u7684\u7406\u8bba\u503c\n\n        \n# \u53c2\u8003\u5730\u5740\uff1a \u77e9\u9635\u4e58\u6cd5\u7684\u672c\u8d28\u662f\u4ec0\u4e48\uff1f https://www.zhihu.com/question/21351965/answer/31050145\n\n        \n# print \ndataMatrix====\n, dataMatrix \n\n        \n# print \nweights====\n, weights\n\n        \n# n*3   *  3*1  = n*1\n\n        \nh\n \n=\n \nsigmoid\n(\ndataMatrix\n*\nweights\n)\n     \n# \u77e9\u9635\u4e58\u6cd5\n\n        \n# print \nhhhhhhh====\n, h\n\n        \n# labelMat\u662f\u5b9e\u9645\u503c\n\n        \nerror\n \n=\n \n(\nlabelMat\n \n-\n \nh\n)\n              \n# \u5411\u91cf\u76f8\u51cf\n\n        \n# 0.001* (3*m)*(m*1) \u8868\u793a\u5728\u6bcf\u4e00\u4e2a\u5217\u4e0a\u7684\u4e00\u4e2a\u8bef\u5dee\u60c5\u51b5\uff0c\u6700\u540e\u5f97\u51fa x1,x2,xn\u7684\u7cfb\u6570\u7684\u504f\u79fb\u91cf\n\n        \nweights\n \n=\n \nweights\n \n+\n \nalpha\n \n*\n \ndataMatrix\n.\ntranspose\n()\n \n*\n \nerror\n \n# \u77e9\u9635\u4e58\u6cd5\uff0c\u6700\u540e\u5f97\u5230\u56de\u5f52\u7cfb\u6570\n\n    \nreturn\n \narray\n(\nweights\n)\n\n\n\n\n\n\u5927\u5bb6\u770b\u5230\u8fd9\u513f\u53ef\u80fd\u4f1a\u6709\u4e00\u4e9b\u7591\u60d1\uff0c\u5c31\u662f\uff0c\u6211\u4eec\u5728\u8fed\u4ee3\u4e2d\u66f4\u65b0\u6211\u4eec\u7684\u56de\u5f52\u7cfb\u6570\uff0c\u540e\u8fb9\u7684\u90e8\u5206\u662f\u600e\u4e48\u8ba1\u7b97\u51fa\u6765\u7684\uff1f\u4e3a\u4ec0\u4e48\u4f1a\u662f alpha * dataMatrix.transpose() * error ?\u56e0\u4e3a\u8fd9\u5c31\u662f\u6211\u4eec\u6240\u6c42\u7684\u68af\u5ea6\uff0c\u4e5f\u5c31\u662f\u5bf9 f(w) \u5bf9 w \u6c42\u4e00\u9636\u5bfc\u6570\u3002\u5177\u4f53\u63a8\u5bfc\u5982\u4e0b:\n\n\n\n\u53ef\u53c2\u8003http://blog.csdn.net/achuo/article/details/51160101\n\n\n\n\n\u6d4b\u8bd5\u7b97\u6cd5: \u4f7f\u7528 Logistic \u56de\u5f52\u8fdb\u884c\u5206\u7c7b\n\n\n\n\ndef\n \ntestLR\n():\n\n    \n# 1.\u6536\u96c6\u5e76\u51c6\u5907\u6570\u636e\n\n    \ndataMat\n,\n \nlabelMat\n \n=\n \nloadDataSet\n(\ninput/5.Logistic/TestSet.txt\n)\n\n\n    \n# print dataMat, \n---\\n\n, labelMat\n\n    \n# 2.\u8bad\u7ec3\u6a21\u578b\uff0c  f(x)=a1*x1+b2*x2+..+nn*xn\u4e2d (a1,b2, .., nn).T\u7684\u77e9\u9635\u503c\n\n    \n# \u56e0\u4e3a\u6570\u7ec4\u6ca1\u6709\u662f\u590d\u5236n\u4efd\uff0c array\u7684\u4e58\u6cd5\u5c31\u662f\u4e58\u6cd5\n\n    \ndataArr\n \n=\n \narray\n(\ndataMat\n)\n\n    \n# print dataArr\n\n    \nweights\n \n=\n \ngradAscent\n(\ndataArr\n,\n \nlabelMat\n)\n\n    \n# weights = stocGradAscent0(dataArr, labelMat)\n\n    \n# weights = stocGradAscent1(dataArr, labelMat)\n\n    \n# print \n*\n*30, weights\n\n\n    \n# \u6570\u636e\u53ef\u89c6\u5316\n\n    \nplotBestFit\n(\ndataArr\n,\n \nlabelMat\n,\n \nweights\n)\n\n\n\n\n\n\n\n\u4f7f\u7528\u7b97\u6cd5: \u5bf9\u7b80\u5355\u6570\u636e\u96c6\u4e2d\u6570\u636e\u8fdb\u884c\u5206\u7c7b\n\n\n\n\n\u6ce8\u610f\n\n\n\u68af\u5ea6\u4e0a\u5347\u7b97\u6cd5\u5728\u6bcf\u6b21\u66f4\u65b0\u56de\u5f52\u7cfb\u6570\u65f6\u90fd\u9700\u8981\u904d\u5386\u6574\u4e2a\u6570\u636e\u96c6\uff0c\u8be5\u65b9\u6cd5\u5728\u5904\u7406 100 \u4e2a\u5de6\u53f3\u7684\u6570\u636e\u96c6\u65f6\u5c1a\u53ef\uff0c\u4f46\u5982\u679c\u6709\u6570\u5341\u4ebf\u6837\u672c\u548c\u6210\u5343\u4e0a\u4e07\u7684\u7279\u5f81\uff0c\u90a3\u4e48\u8be5\u65b9\u6cd5\u7684\u8ba1\u7b97\u590d\u6742\u5ea6\u5c31\u592a\u9ad8\u4e86\u3002\u4e00\u79cd\u6539\u8fdb\u65b9\u6cd5\u662f\u4e00\u6b21\u4ec5\u7528\u4e00\u4e2a\u6837\u672c\u70b9\u6765\u66f4\u65b0\u56de\u5f52\u7cfb\u6570\uff0c\u8be5\u65b9\u6cd5\u79f0\u4e3a \n\u968f\u673a\u68af\u5ea6\u4e0a\u5347\u7b97\u6cd5\n\u3002\u7531\u4e8e\u53ef\u4ee5\u5728\u65b0\u6837\u672c\u5230\u6765\u65f6\u5bf9\u5206\u7c7b\u5668\u8fdb\u884c\u589e\u91cf\u5f0f\u66f4\u65b0\uff0c\u56e0\u800c\u968f\u673a\u68af\u5ea6\u4e0a\u5347\u7b97\u6cd5\u662f\u4e00\u4e2a\u5728\u7ebf\u5b66\u4e60(online learning)\u7b97\u6cd5\u3002\u4e0e \u201c\u5728\u7ebf\u5b66\u4e60\u201d \u76f8\u5bf9\u5e94\uff0c\u4e00\u6b21\u5904\u7406\u6240\u6709\u6570\u636e\u88ab\u79f0\u4f5c\u662f \u201c\u6279\u5904\u7406\u201d \uff08batch\uff09 \u3002\n\n\n\u968f\u673a\u68af\u5ea6\u4e0a\u5347\u7b97\u6cd5\u53ef\u4ee5\u5199\u6210\u5982\u4e0b\u7684\u4f2a\u4ee3\u7801: \n\n\n\u6240\u6709\u56de\u5f52\u7cfb\u6570\u521d\u59cb\u5316\u4e3a 1\n\u5bf9\u6570\u636e\u96c6\u4e2d\u6bcf\u4e2a\u6837\u672c\n    \u8ba1\u7b97\u8be5\u6837\u672c\u7684\u68af\u5ea6\n    \u4f7f\u7528 alpha x gradient \u66f4\u65b0\u56de\u5f52\u7cfb\u6570\u503c\n\u8fd4\u56de\u56de\u5f52\u7cfb\u6570\u503c\n\n\n\n\n\u4ee5\u4e0b\u662f\u968f\u673a\u68af\u5ea6\u4e0a\u5347\u7b97\u6cd5\u7684\u5b9e\u73b0\u4ee3\u7801: \n\n\n# \u968f\u673a\u68af\u5ea6\u4e0a\u5347\n\n\n# \u68af\u5ea6\u4e0a\u5347\u4f18\u5316\u7b97\u6cd5\u5728\u6bcf\u6b21\u66f4\u65b0\u6570\u636e\u96c6\u65f6\u90fd\u9700\u8981\u904d\u5386\u6574\u4e2a\u6570\u636e\u96c6\uff0c\u8ba1\u7b97\u590d\u6742\u90fd\u8f83\u9ad8\n\n\n# \u968f\u673a\u68af\u5ea6\u4e0a\u5347\u4e00\u6b21\u53ea\u7528\u4e00\u4e2a\u6837\u672c\u70b9\u6765\u66f4\u65b0\u56de\u5f52\u7cfb\u6570\n\n\ndef\n \nstocGradAscent0\n(\ndataMatrix\n,\n \nclassLabels\n):\n\n    \nm\n,\nn\n \n=\n \nshape\n(\ndataMatrix\n)\n\n    \nalpha\n \n=\n \n0.01\n\n    \n# n*1\u7684\u77e9\u9635\n\n    \n# \u51fd\u6570ones\u521b\u5efa\u4e00\u4e2a\u51681\u7684\u6570\u7ec4\n\n    \nweights\n \n=\n \nones\n(\nn\n)\n   \n# \u521d\u59cb\u5316\u957f\u5ea6\u4e3an\u7684\u6570\u7ec4\uff0c\u5143\u7d20\u5168\u90e8\u4e3a 1\n\n    \nfor\n \ni\n \nin\n \nrange\n(\nm\n):\n\n        \n# sum(dataMatrix[i]*weights)\u4e3a\u4e86\u6c42 f(x)\u7684\u503c\uff0c f(x)=a1*x1+b2*x2+..+nn*xn,\u6b64\u5904\u6c42\u51fa\u7684 h \u662f\u4e00\u4e2a\u5177\u4f53\u7684\u6570\u503c\uff0c\u800c\u4e0d\u662f\u4e00\u4e2a\u77e9\u9635\n\n        \nh\n \n=\n \nsigmoid\n(\nsum\n(\ndataMatrix\n[\ni\n]\n*\nweights\n))\n\n        \n# print \ndataMatrix[i]===\n, dataMatrix[i]\n\n        \n# \u8ba1\u7b97\u771f\u5b9e\u7c7b\u522b\u4e0e\u9884\u6d4b\u7c7b\u522b\u4e4b\u95f4\u7684\u5dee\u503c\uff0c\u7136\u540e\u6309\u7167\u8be5\u5dee\u503c\u8c03\u6574\u56de\u5f52\u7cfb\u6570\n\n        \nerror\n \n=\n \nclassLabels\n[\ni\n]\n \n-\n \nh\n\n        \n# 0.01*(1*1)*(1*n)\n\n        \nprint\n \nweights\n,\n \n*\n*\n10\n \n,\n \ndataMatrix\n[\ni\n],\n \n*\n*\n10\n \n,\n \nerror\n\n        \nweights\n \n=\n \nweights\n \n+\n \nalpha\n \n*\n \nerror\n \n*\n \ndataMatrix\n[\ni\n]\n\n    \nreturn\n \nweights\n\n\n\n\n\n\u53ef\u4ee5\u770b\u5230\uff0c\u968f\u673a\u68af\u5ea6\u4e0a\u5347\u7b97\u6cd5\u4e0e\u68af\u5ea6\u4e0a\u5347\u7b97\u6cd5\u5728\u4ee3\u7801\u4e0a\u5f88\u76f8\u4f3c\uff0c\u4f46\u4e5f\u6709\u4e00\u4e9b\u533a\u522b: \u7b2c\u4e00\uff0c\u540e\u8005\u7684\u53d8\u91cf h \u548c\u8bef\u5dee error \u90fd\u662f\u5411\u91cf\uff0c\u800c\u524d\u8005\u5219\u5168\u662f\u6570\u503c\uff1b\u7b2c\u4e8c\uff0c\u524d\u8005\u6ca1\u6709\u77e9\u9635\u7684\u8f6c\u6362\u8fc7\u7a0b\uff0c\u6240\u6709\u53d8\u91cf\u7684\u6570\u636e\u7c7b\u578b\u90fd\u662f NumPy \u6570\u7ec4\u3002\n\n\n\u5224\u65ad\u4f18\u5316\u7b97\u6cd5\u4f18\u52a3\u7684\u53ef\u9760\u65b9\u6cd5\u662f\u770b\u5b83\u662f\u5426\u6536\u655b\uff0c\u4e5f\u5c31\u662f\u8bf4\u53c2\u6570\u662f\u5426\u8fbe\u5230\u4e86\u7a33\u5b9a\u503c\uff0c\u662f\u5426\u8fd8\u4f1a\u4e0d\u65ad\u5730\u53d8\u5316\uff1f\u4e0b\u56fe\u5c55\u793a\u4e86\u968f\u673a\u68af\u5ea6\u4e0a\u5347\u7b97\u6cd5\u5728 200 \u6b21\u8fed\u4ee3\u8fc7\u7a0b\u4e2d\u56de\u5f52\u7cfb\u6570\u7684\u53d8\u5316\u60c5\u51b5\u3002\u5176\u4e2d\u7684\u7cfb\u65702\uff0c\u4e5f\u5c31\u662f X2 \u53ea\u7ecf\u8fc7\u4e86 50 \u6b21\u8fed\u4ee3\u5c31\u8fbe\u5230\u4e86\u7a33\u5b9a\u503c\uff0c\u4f46\u7cfb\u6570 1 \u548c 0 \u5219\u9700\u8981\u66f4\u591a\u6b21\u7684\u8fed\u4ee3\u3002\u5982\u4e0b\u56fe\u6240\u793a: \n\n\n\n\n\u9488\u5bf9\u8fd9\u4e2a\u95ee\u9898\uff0c\u6211\u4eec\u6539\u8fdb\u4e86\u4e4b\u524d\u7684\u968f\u673a\u68af\u5ea6\u4e0a\u5347\u7b97\u6cd5\uff0c\u5982\u4e0b: \n\n\n# \u968f\u673a\u68af\u5ea6\u4e0a\u5347\u7b97\u6cd5\uff08\u968f\u673a\u5316\uff09\n\n\ndef\n \nstocGradAscent1\n(\ndataMatrix\n,\n \nclassLabels\n,\n \nnumIter\n=\n150\n):\n\n    \nm\n,\nn\n \n=\n \nshape\n(\ndataMatrix\n)\n\n    \nweights\n \n=\n \nones\n(\nn\n)\n   \n# \u521b\u5efa\u4e0e\u5217\u6570\u76f8\u540c\u7684\u77e9\u9635\u7684\u7cfb\u6570\u77e9\u9635\uff0c\u6240\u6709\u7684\u5143\u7d20\u90fd\u662f1\n\n    \n# \u968f\u673a\u68af\u5ea6, \u5faa\u73af150,\u89c2\u5bdf\u662f\u5426\u6536\u655b\n\n    \nfor\n \nj\n \nin\n \nrange\n(\nnumIter\n):\n\n        \n# [0, 1, 2 .. m-1]\n\n        \ndataIndex\n \n=\n \nrange\n(\nm\n)\n\n        \nfor\n \ni\n \nin\n \nrange\n(\nm\n):\n\n            \n# i\u548cj\u7684\u4e0d\u65ad\u589e\u5927\uff0c\u5bfc\u81f4alpha\u7684\u503c\u4e0d\u65ad\u51cf\u5c11\uff0c\u4f46\u662f\u4e0d\u4e3a0\n\n            \nalpha\n \n=\n \n4\n/\n(\n1.0\n+\nj\n+\ni\n)\n+\n0.0001\n    \n# alpha \u4f1a\u968f\u7740\u8fed\u4ee3\u4e0d\u65ad\u51cf\u5c0f\uff0c\u4f46\u6c38\u8fdc\u4e0d\u4f1a\u51cf\u5c0f\u52300\uff0c\u56e0\u4e3a\u540e\u8fb9\u8fd8\u6709\u4e00\u4e2a\u5e38\u6570\u98790.0001\n\n            \n# \u968f\u673a\u4ea7\u751f\u4e00\u4e2a 0\uff5elen()\u4e4b\u95f4\u7684\u4e00\u4e2a\u503c\n\n            \n# random.uniform(x, y) \u65b9\u6cd5\u5c06\u968f\u673a\u751f\u6210\u4e0b\u4e00\u4e2a\u5b9e\u6570\uff0c\u5b83\u5728[x,y]\u8303\u56f4\u5185,x\u662f\u8fd9\u4e2a\u8303\u56f4\u5185\u7684\u6700\u5c0f\u503c\uff0cy\u662f\u8fd9\u4e2a\u8303\u56f4\u5185\u7684\u6700\u5927\u503c\u3002\n\n            \nrandIndex\n \n=\n \nint\n(\nrandom\n.\nuniform\n(\n0\n,\nlen\n(\ndataIndex\n)))\n\n            \n# sum(dataMatrix[i]*weights)\u4e3a\u4e86\u6c42 f(x)\u7684\u503c\uff0c f(x)=a1*x1+b2*x2+..+nn*xn\n\n            \nh\n \n=\n \nsigmoid\n(\nsum\n(\ndataMatrix\n[\nrandIndex\n]\n*\nweights\n))\n\n            \nerror\n \n=\n \nclassLabels\n[\nrandIndex\n]\n \n-\n \nh\n\n            \n# print weights, \n__h=%s\n % h, \n__\n*20, alpha, \n__\n*20, error, \n__\n*20, dataMatrix[randIndex]\n\n            \nweights\n \n=\n \nweights\n \n+\n \nalpha\n \n*\n \nerror\n \n*\n \ndataMatrix\n[\nrandIndex\n]\n\n            \ndel\n(\ndataIndex\n[\nrandIndex\n])\n\n    \nreturn\n \nweights\n\n\n\n\n\n\u4e0a\u9762\u7684\u6539\u8fdb\u7248\u968f\u673a\u68af\u5ea6\u4e0a\u5347\u7b97\u6cd5\uff0c\u6211\u4eec\u4fee\u6539\u4e86\u4e24\u5904\u4ee3\u7801\u3002\n\n\n\u7b2c\u4e00\u5904\u6539\u8fdb\u4e3a alpha \u7684\u503c\u3002alpha \u5728\u6bcf\u6b21\u8fed\u4ee3\u7684\u65f6\u5019\u90fd\u4f1a\u8c03\u6574\uff0c\u8fd9\u56de\u7f13\u89e3\u4e0a\u9762\u6ce2\u52a8\u56fe\u7684\u6570\u636e\u6ce2\u52a8\u6216\u8005\u9ad8\u9891\u6ce2\u52a8\u3002\u53e6\u5916\uff0c\u867d\u7136 alpha \u4f1a\u968f\u7740\u8fed\u4ee3\u6b21\u6570\u4e0d\u65ad\u51cf\u5c11\uff0c\u4f46\u6c38\u8fdc\u4e0d\u4f1a\u51cf\u5c0f\u5230 0\uff0c\u56e0\u4e3a\u6211\u4eec\u5728\u8ba1\u7b97\u516c\u5f0f\u4e2d\u6dfb\u52a0\u4e86\u4e00\u4e2a\u5e38\u6570\u9879\u3002\n\n\n\u7b2c\u4e8c\u5904\u4fee\u6539\u4e3a randIndex \u66f4\u65b0\uff0c\u8fd9\u91cc\u901a\u8fc7\u968f\u673a\u9009\u53d6\u6837\u672c\u62c9\u6765\u66f4\u65b0\u56de\u5f52\u7cfb\u6570\u3002\u8fd9\u79cd\u65b9\u6cd5\u5c06\u51cf\u5c11\u5468\u671f\u6027\u7684\u6ce2\u52a8\u3002\u8fd9\u79cd\u65b9\u6cd5\u6bcf\u6b21\u968f\u673a\u4ece\u5217\u8868\u4e2d\u9009\u51fa\u4e00\u4e2a\u503c\uff0c\u7136\u540e\u4ece\u5217\u8868\u4e2d\u5220\u6389\u8be5\u503c\uff08\u518d\u8fdb\u884c\u4e0b\u4e00\u6b21\u8fed\u4ee3\uff09\u3002\n\n\n\u7a0b\u5e8f\u8fd0\u884c\u4e4b\u540e\u80fd\u770b\u5230\u7c7b\u4f3c\u4e8e\u4e0b\u56fe\u7684\u7ed3\u679c\u56fe\u3002\n\n\n\n\n\u9879\u76ee\u6848\u4f8b2: \u4ece\u759d\u6c14\u75c5\u75c7\u9884\u6d4b\u75c5\u9a6c\u7684\u6b7b\u4ea1\u7387\n\n\n\u5b8c\u6574\u4ee3\u7801\u5730\u5740\n: \nhttps://github.com/apachecn/MachineLearning/blob/master/src/python/5.Logistic/logistic.py\n\n\n\u9879\u76ee\u6982\u8ff0\n\n\n\u4f7f\u7528 Logistic \u56de\u5f52\u6765\u9884\u6d4b\u60a3\u6709\u759d\u75c5\u7684\u9a6c\u7684\u5b58\u6d3b\u95ee\u9898\u3002\u759d\u75c5\u662f\u63cf\u8ff0\u9a6c\u80c3\u80a0\u75db\u7684\u672f\u8bed\u3002\u7136\u800c\uff0c\u8fd9\u79cd\u75c5\u4e0d\u4e00\u5b9a\u6e90\u81ea\u9a6c\u7684\u80c3\u80a0\u95ee\u9898\uff0c\u5176\u4ed6\u95ee\u9898\u4e5f\u53ef\u80fd\u5f15\u53d1\u9a6c\u759d\u75c5\u3002\u8fd9\u4e2a\u6570\u636e\u96c6\u4e2d\u5305\u542b\u4e86\u533b\u9662\u68c0\u6d4b\u9a6c\u759d\u75c5\u7684\u4e00\u4e9b\u6307\u6807\uff0c\u6709\u7684\u6307\u6807\u6bd4\u8f83\u4e3b\u89c2\uff0c\u6709\u7684\u6307\u6807\u96be\u4ee5\u6d4b\u91cf\uff0c\u4f8b\u5982\u9a6c\u7684\u75bc\u75db\u7ea7\u522b\u3002\n\n\n\u5f00\u53d1\u6d41\u7a0b\n\n\n\u6536\u96c6\u6570\u636e: \u7ed9\u5b9a\u6570\u636e\u6587\u4ef6\n\u51c6\u5907\u6570\u636e: \u7528 Python \u89e3\u6790\u6587\u672c\u6587\u4ef6\u5e76\u586b\u5145\u7f3a\u5931\u503c\n\u5206\u6790\u6570\u636e: \u53ef\u89c6\u5316\u5e76\u89c2\u5bdf\u6570\u636e\n\u8bad\u7ec3\u7b97\u6cd5: \u4f7f\u7528\u4f18\u5316\u7b97\u6cd5\uff0c\u627e\u5230\u6700\u4f73\u7684\u7cfb\u6570\n\u6d4b\u8bd5\u7b97\u6cd5: \u4e3a\u4e86\u91cf\u5316\u56de\u5f52\u7684\u6548\u679c\uff0c\u9700\u8981\u89c2\u5bdf\u9519\u8bef\u7387\u3002\u6839\u636e\u9519\u8bef\u7387\u51b3\u5b9a\u662f\u5426\u56de\u9000\u5230\u8bad\u7ec3\u9636\u6bb5\uff0c\n         \u901a\u8fc7\u6539\u53d8\u8fed\u4ee3\u7684\u6b21\u6570\u548c\u6b65\u957f\u7684\u53c2\u6570\u6765\u5f97\u5230\u66f4\u597d\u7684\u56de\u5f52\u7cfb\u6570\n\u4f7f\u7528\u7b97\u6cd5: \u5b9e\u73b0\u4e00\u4e2a\u7b80\u5355\u7684\u547d\u4ee4\u884c\u7a0b\u5e8f\u6765\u624b\u673a\u9a6c\u7684\u75c7\u72b6\u5e76\u8f93\u51fa\u9884\u6d4b\u7ed3\u679c\u5e76\u975e\u96be\u4e8b\uff0c\n         \u8fd9\u53ef\u4ee5\u4f5c\u4e3a\u7559\u7ed9\u5927\u5bb6\u7684\u4e00\u9053\u4e60\u9898\n\n\n\n\n\n\n\u6536\u96c6\u6570\u636e: \u7ed9\u5b9a\u6570\u636e\u6587\u4ef6\n\n\n\n\n\u75c5\u9a6c\u7684\u8bad\u7ec3\u6570\u636e\u5df2\u7ecf\u7ed9\u51fa\u6765\u4e86\uff0c\u5982\u4e0b\u5f62\u5f0f\u5b58\u50a8\u5728\u6587\u672c\u6587\u4ef6\u4e2d:\n\n\n1.000000    1.000000    39.200000   88.000000   20.000000   0.000000    0.000000    4.000000    1.000000    3.000000    4.000000    2.000000    0.000000    0.000000    0.000000    4.000000    2.000000    50.000000   85.000000   2.000000    2.000000    0.000000\n2.000000    1.000000    38.300000   40.000000   24.000000   1.000000    1.000000    3.000000    1.000000    3.000000    3.000000    1.000000    0.000000    0.000000    0.000000    1.000000    1.000000    33.000000   6.700000    0.000000    0.000000    1.000000\n\n\n\n\n\n\n\u51c6\u5907\u6570\u636e: \u7528 Python \u89e3\u6790\u6587\u672c\u6587\u4ef6\u5e76\u586b\u5145\u7f3a\u5931\u503c\n\n\n\n\n\u5904\u7406\u6570\u636e\u4e2d\u7684\u7f3a\u5931\u503c\n\n\n\u5047\u8bbe\u6709100\u4e2a\u6837\u672c\u548c20\u4e2a\u7279\u5f81\uff0c\u8fd9\u4e9b\u6570\u636e\u90fd\u662f\u673a\u5668\u6536\u96c6\u56de\u6765\u7684\u3002\u82e5\u673a\u5668\u4e0a\u7684\u67d0\u4e2a\u4f20\u611f\u5668\u635f\u574f\u5bfc\u81f4\u4e00\u4e2a\u7279\u5f81\u65e0\u6548\u65f6\u8be5\u600e\u4e48\u529e\uff1f\u6b64\u65f6\u662f\u5426\u8981\u6254\u6389\u6574\u4e2a\u6570\u636e\uff1f\u8fd9\u79cd\u60c5\u51b5\u4e0b\uff0c\u53e6\u591619\u4e2a\u7279\u5f81\u600e\u4e48\u529e\uff1f\n\u5b83\u4eec\u662f\u5426\u8fd8\u53ef\u4ee5\u7528\uff1f\u7b54\u6848\u662f\u80af\u5b9a\u7684\u3002\u56e0\u4e3a\u6709\u65f6\u5019\u6570\u636e\u76f8\u5f53\u6602\u8d35\uff0c\u6254\u6389\u548c\u91cd\u65b0\u83b7\u53d6\u90fd\u662f\u4e0d\u53ef\u53d6\u7684\uff0c\u6240\u4ee5\u5fc5\u987b\u91c7\u7528\u4e00\u4e9b\u65b9\u6cd5\u6765\u89e3\u51b3\u8fd9\u4e2a\u95ee\u9898\u3002\n\n\n\u4e0b\u9762\u7ed9\u51fa\u4e86\u4e00\u4e9b\u53ef\u9009\u7684\u505a\u6cd5\uff1a\n* \u4f7f\u7528\u53ef\u7528\u7279\u5f81\u7684\u5747\u503c\u6765\u586b\u8865\u7f3a\u5931\u503c\uff1b\n* \u4f7f\u7528\u7279\u6b8a\u503c\u6765\u586b\u8865\u7f3a\u5931\u503c\uff0c\u5982 -1\uff1b\n* \u5ffd\u7565\u6709\u7f3a\u5931\u503c\u7684\u6837\u672c\uff1b\n* \u4f7f\u7528\u6709\u76f8\u4f3c\u6837\u672c\u7684\u5747\u503c\u6dfb\u8865\u7f3a\u5931\u503c\uff1b\n* \u4f7f\u7528\u53e6\u5916\u7684\u673a\u5668\u5b66\u4e60\u7b97\u6cd5\u9884\u6d4b\u7f3a\u5931\u503c\u3002\n\n\n\u73b0\u5728\uff0c\u6211\u4eec\u5bf9\u4e0b\u4e00\u8282\u8981\u7528\u7684\u6570\u636e\u96c6\u8fdb\u884c\u9884\u5904\u7406\uff0c\u4f7f\u5176\u53ef\u4ee5\u987a\u5229\u5730\u4f7f\u7528\u5206\u7c7b\u7b97\u6cd5\u3002\u5728\u9884\u5904\u7406\u9700\u8981\u505a\u4e24\u4ef6\u4e8b: \n* \u6240\u6709\u7684\u7f3a\u5931\u503c\u5fc5\u987b\u7528\u4e00\u4e2a\u5b9e\u6570\u503c\u6765\u66ff\u6362\uff0c\u56e0\u4e3a\u6211\u4eec\u4f7f\u7528\u7684 NumPy \u6570\u636e\u7c7b\u578b\u4e0d\u5141\u8bb8\u5305\u542b\u7f3a\u5931\u503c\u3002\u6211\u4eec\u8fd9\u91cc\u9009\u62e9\u5b9e\u6570 0 \u6765\u66ff\u6362\u6240\u6709\u7f3a\u5931\u503c\uff0c\u6070\u597d\u80fd\u9002\u7528\u4e8e Logistic \u56de\u5f52\u3002\u8fd9\u6837\u505a\u7684\u76f4\u89c9\u5728\u4e8e\uff0c\u6211\u4eec\u9700\u8981\u7684\u662f\u4e00\u4e2a\u5728\u66f4\u65b0\u65f6\u4e0d\u4f1a\u5f71\u54cd\u7cfb\u6570\u7684\u503c\u3002\u56de\u5f52\u7cfb\u6570\u7684\u66f4\u65b0\u516c\u5f0f\u5982\u4e0b:\n\n\nweights = weights + alpha * error * dataMatrix[randIndex]\n\n\u5982\u679c dataMatrix \u7684\u67d0\u4e2a\u7279\u5f81\u5bf9\u5e94\u503c\u4e3a 0\uff0c\u90a3\u4e48\u8be5\u7279\u5f81\u7684\u7cfb\u6570\u5c06\u4e0d\u505a\u66f4\u65b0\uff0c\u5373:\n\nweights = weights\n\n\u53e6\u5916\uff0c\u7531\u4e8e Sigmoid(0) = 0.5 \uff0c\u5373\u5b83\u5bf9\u7ed3\u679c\u7684\u9884\u6d4b\u4e0d\u5177\u6709\u4efb\u4f55\u503e\u5411\u6027\uff0c\u56e0\u6b64\u6211\u4eec\u4e0a\u8ff0\u505a\u6cd5\u4e5f\u4e0d\u4f1a\u5bf9\u8bef\u5dee\u9020\u6210\u4efb\u4f55\u5f71\u54cd\u3002\u57fa\u4e8e\u4e0a\u8ff0\u539f\u56e0\uff0c\u5c06\u7f3a\u5931\u503c\u7528 0 \u4ee3\u66ff\u65e2\u53ef\u4ee5\u4fdd\u7559\u73b0\u6709\u6570\u636e\uff0c\u4e5f\u4e0d\u9700\u8981\u5bf9\u4f18\u5316\u7b97\u6cd5\u8fdb\u884c\u4fee\u6539\u3002\u6b64\u5916\uff0c\u8be5\u6570\u636e\u96c6\u4e2d\u7684\u7279\u5f81\u53d6\u503c\u4e00\u822c\u4e0d\u4e3a 0\uff0c\u56e0\u6b64\u5728\u67d0\u79cd\u610f\u4e49\u4e0a\u8bf4\u5b83\u4e5f\u6ee1\u8db3 \u201c\u7279\u6b8a\u503c\u201d \u8fd9\u4e2a\u8981\u6c42\u3002\n\n\n\n\n\n\n\n\u5982\u679c\u5728\u6d4b\u8bd5\u6570\u636e\u96c6\u4e2d\u53d1\u73b0\u4e86\u4e00\u6761\u6570\u636e\u7684\u7c7b\u522b\u6807\u7b7e\u5df2\u7ecf\u7f3a\u5931\uff0c\u90a3\u4e48\u6211\u4eec\u7684\u7b80\u5355\u505a\u6cd5\u662f\u5c06\u8be5\u6761\u6570\u636e\u4e22\u5f03\u3002\u8fd9\u662f\u56e0\u4e3a\u7c7b\u522b\u6807\u7b7e\u4e0e\u7279\u5f81\u4e0d\u540c\uff0c\u5f88\u96be\u786e\u5b9a\u91c7\u7528\u67d0\u4e2a\u5408\u9002\u7684\u503c\u6765\u66ff\u6362\u3002\u91c7\u7528 Logistic \u56de\u5f52\u8fdb\u884c\u5206\u7c7b\u65f6\u8fd9\u79cd\u505a\u6cd5\u662f\u5408\u7406\u7684\uff0c\u800c\u5982\u679c\u91c7\u7528\u7c7b\u4f3c kNN \u7684\u65b9\u6cd5\u5c31\u4fdd\u7559\u8be5\u6761\u6570\u636e\u663e\u5f97\u66f4\u52a0\u5408\u7406\u3002\n\n\n\n\n\u539f\u59cb\u7684\u6570\u636e\u96c6\u7ecf\u8fc7\u9884\u5904\u7406\u540e\uff0c\u4fdd\u5b58\u6210\u4e24\u4e2a\u6587\u4ef6: horseColicTest.txt \u548c horseColicTraining.txt \u3002 \n\n\n\n\n\u5206\u6790\u6570\u636e: \u53ef\u89c6\u5316\u5e76\u89c2\u5bdf\u6570\u636e\n\n\n\n\n\u5c06\u6570\u636e\u4f7f\u7528 MatPlotlib \u6253\u5370\u51fa\u6765\uff0c\u89c2\u5bdf\u6570\u636e\u662f\u5426\u662f\u6211\u4eec\u60f3\u8981\u7684\u683c\u5f0f\n\n\n\n\n\u8bad\u7ec3\u7b97\u6cd5: \u4f7f\u7528\u4f18\u5316\u7b97\u6cd5\uff0c\u627e\u5230\u6700\u4f73\u7684\u7cfb\u6570\n\n\n\n\n\u4e0b\u9762\u7ed9\u51fa \u539f\u59cb\u7684\u68af\u5ea6\u4e0a\u5347\u7b97\u6cd5\uff0c\u968f\u673a\u68af\u5ea6\u4e0a\u5347\u7b97\u6cd5\uff0c\u6539\u8fdb\u7248\u968f\u673a\u68af\u5ea6\u4e0a\u5347\u7b97\u6cd5 \u7684\u4ee3\u7801: \n\n\n# \u6b63\u5e38\u7684\u5904\u7406\u65b9\u6848\n\n\n# \u4e24\u4e2a\u53c2\u6570\uff1a\u7b2c\u4e00\u4e2a\u53c2\u6570==\n dataMatIn \u662f\u4e00\u4e2a2\u7ef4NumPy\u6570\u7ec4\uff0c\u6bcf\u5217\u5206\u522b\u4ee3\u8868\u6bcf\u4e2a\u4e0d\u540c\u7684\u7279\u5f81\uff0c\u6bcf\u884c\u5219\u4ee3\u8868\u6bcf\u4e2a\u8bad\u7ec3\u6837\u672c\u3002\n\n\n# \u7b2c\u4e8c\u4e2a\u53c2\u6570==\n classLabels \u662f\u7c7b\u522b\u6807\u7b7e\uff0c\u5b83\u662f\u4e00\u4e2a 1*100 \u7684\u884c\u5411\u91cf\u3002\u4e3a\u4e86\u4fbf\u4e8e\u77e9\u9635\u8ba1\u7b97\uff0c\u9700\u8981\u5c06\u8be5\u884c\u5411\u91cf\u8f6c\u6362\u4e3a\u5217\u5411\u91cf\uff0c\u505a\u6cd5\u662f\u5c06\u539f\u5411\u91cf\u8f6c\u7f6e\uff0c\u518d\u5c06\u5b83\u8d4b\u503c\u7ed9labelMat\u3002\n\n\ndef\n \ngradAscent\n(\ndataMatIn\n,\n \nclassLabels\n):\n\n    \n# \u8f6c\u5316\u4e3a\u77e9\u9635[[1,1,2],[1,1,2]....]\n\n    \ndataMatrix\n \n=\n \nmat\n(\ndataMatIn\n)\n             \n# \u8f6c\u6362\u4e3a NumPy \u77e9\u9635\n\n    \n# \u8f6c\u5316\u4e3a\u77e9\u9635[[0,1,0,1,0,1.....]]\uff0c\u5e76\u8f6c\u5236[[0],[1],[0].....]\n\n    \n# transpose() \u884c\u5217\u8f6c\u7f6e\u51fd\u6570\n\n    \n# \u5c06\u884c\u5411\u91cf\u8f6c\u5316\u4e3a\u5217\u5411\u91cf   =\n  \u77e9\u9635\u7684\u8f6c\u7f6e\n\n    \nlabelMat\n \n=\n \nmat\n(\nclassLabels\n)\n.\ntranspose\n()\n \n# \u9996\u5148\u5c06\u6570\u7ec4\u8f6c\u6362\u4e3a NumPy \u77e9\u9635\uff0c\u7136\u540e\u518d\u5c06\u884c\u5411\u91cf\u8f6c\u7f6e\u4e3a\u5217\u5411\u91cf\n\n    \n# m-\n\u6570\u636e\u91cf\uff0c\u6837\u672c\u6570 n-\n\u7279\u5f81\u6570\n\n    \nm\n,\nn\n \n=\n \nshape\n(\ndataMatrix\n)\n\n    \n# print m, n, \n__\n*10, shape(dataMatrix.transpose()), \n__\n*100\n\n    \n# alpha\u4ee3\u8868\u5411\u76ee\u6807\u79fb\u52a8\u7684\u6b65\u957f\n\n    \nalpha\n \n=\n \n0.001\n\n    \n# \u8fed\u4ee3\u6b21\u6570\n\n    \nmaxCycles\n \n=\n \n500\n\n    \n# \u751f\u6210\u4e00\u4e2a\u957f\u5ea6\u548c\u7279\u5f81\u6570\u76f8\u540c\u7684\u77e9\u9635\uff0c\u6b64\u5904n\u4e3a3 -\n [[1],[1],[1]]\n\n    \n# weights \u4ee3\u8868\u56de\u5f52\u7cfb\u6570\uff0c \u6b64\u5904\u7684 ones((n,1)) \u521b\u5efa\u4e00\u4e2a\u957f\u5ea6\u548c\u7279\u5f81\u6570\u76f8\u540c\u7684\u77e9\u9635\uff0c\u5176\u4e2d\u7684\u6570\u5168\u90e8\u90fd\u662f 1\n\n    \nweights\n \n=\n \nones\n((\nn\n,\n1\n))\n\n    \nfor\n \nk\n \nin\n \nrange\n(\nmaxCycles\n):\n              \n#heavy on matrix operations\n\n        \n# m*3 \u7684\u77e9\u9635 * 3*1 \u7684\u5355\u4f4d\u77e9\u9635 \uff1d m*1\u7684\u77e9\u9635\n\n        \n# \u90a3\u4e48\u4e58\u4e0a\u5355\u4f4d\u77e9\u9635\u7684\u610f\u4e49\uff0c\u5c31\u4ee3\u8868\uff1a\u901a\u8fc7\u516c\u5f0f\u5f97\u5230\u7684\u7406\u8bba\u503c\n\n        \n# \u53c2\u8003\u5730\u5740\uff1a \u77e9\u9635\u4e58\u6cd5\u7684\u672c\u8d28\u662f\u4ec0\u4e48\uff1f https://www.zhihu.com/question/21351965/answer/31050145\n\n        \n# print \ndataMatrix====\n, dataMatrix \n\n        \n# print \nweights====\n, weights\n\n        \n# n*3   *  3*1  = n*1\n\n        \nh\n \n=\n \nsigmoid\n(\ndataMatrix\n*\nweights\n)\n     \n# \u77e9\u9635\u4e58\u6cd5\n\n        \n# print \nhhhhhhh====\n, h\n\n        \n# labelMat\u662f\u5b9e\u9645\u503c\n\n        \nerror\n \n=\n \n(\nlabelMat\n \n-\n \nh\n)\n              \n# \u5411\u91cf\u76f8\u51cf\n\n        \n# 0.001* (3*m)*(m*1) \u8868\u793a\u5728\u6bcf\u4e00\u4e2a\u5217\u4e0a\u7684\u4e00\u4e2a\u8bef\u5dee\u60c5\u51b5\uff0c\u6700\u540e\u5f97\u51fa x1,x2,xn\u7684\u7cfb\u6570\u7684\u504f\u79fb\u91cf\n\n        \nweights\n \n=\n \nweights\n \n+\n \nalpha\n \n*\n \ndataMatrix\n.\ntranspose\n()\n \n*\n \nerror\n \n# \u77e9\u9635\u4e58\u6cd5\uff0c\u6700\u540e\u5f97\u5230\u56de\u5f52\u7cfb\u6570\n\n    \nreturn\n \narray\n(\nweights\n)\n\n\n\n\n# \u968f\u673a\u68af\u5ea6\u4e0a\u5347\n\n\n# \u68af\u5ea6\u4e0a\u5347\u4f18\u5316\u7b97\u6cd5\u5728\u6bcf\u6b21\u66f4\u65b0\u6570\u636e\u96c6\u65f6\u90fd\u9700\u8981\u904d\u5386\u6574\u4e2a\u6570\u636e\u96c6\uff0c\u8ba1\u7b97\u590d\u6742\u90fd\u8f83\u9ad8\n\n\n# \u968f\u673a\u68af\u5ea6\u4e0a\u5347\u4e00\u6b21\u53ea\u7528\u4e00\u4e2a\u6837\u672c\u70b9\u6765\u66f4\u65b0\u56de\u5f52\u7cfb\u6570\n\n\ndef\n \nstocGradAscent0\n(\ndataMatrix\n,\n \nclassLabels\n):\n\n    \nm\n,\nn\n \n=\n \nshape\n(\ndataMatrix\n)\n\n    \nalpha\n \n=\n \n0.01\n\n    \n# n*1\u7684\u77e9\u9635\n\n    \n# \u51fd\u6570ones\u521b\u5efa\u4e00\u4e2a\u51681\u7684\u6570\u7ec4\n\n    \nweights\n \n=\n \nones\n(\nn\n)\n   \n# \u521d\u59cb\u5316\u957f\u5ea6\u4e3an\u7684\u6570\u7ec4\uff0c\u5143\u7d20\u5168\u90e8\u4e3a 1\n\n    \nfor\n \ni\n \nin\n \nrange\n(\nm\n):\n\n        \n# sum(dataMatrix[i]*weights)\u4e3a\u4e86\u6c42 f(x)\u7684\u503c\uff0c f(x)=a1*x1+b2*x2+..+nn*xn,\u6b64\u5904\u6c42\u51fa\u7684 h \u662f\u4e00\u4e2a\u5177\u4f53\u7684\u6570\u503c\uff0c\u800c\u4e0d\u662f\u4e00\u4e2a\u77e9\u9635\n\n        \nh\n \n=\n \nsigmoid\n(\nsum\n(\ndataMatrix\n[\ni\n]\n*\nweights\n))\n\n        \n# print \ndataMatrix[i]===\n, dataMatrix[i]\n\n        \n# \u8ba1\u7b97\u771f\u5b9e\u7c7b\u522b\u4e0e\u9884\u6d4b\u7c7b\u522b\u4e4b\u95f4\u7684\u5dee\u503c\uff0c\u7136\u540e\u6309\u7167\u8be5\u5dee\u503c\u8c03\u6574\u56de\u5f52\u7cfb\u6570\n\n        \nerror\n \n=\n \nclassLabels\n[\ni\n]\n \n-\n \nh\n\n        \n# 0.01*(1*1)*(1*n)\n\n        \nprint\n \nweights\n,\n \n*\n*\n10\n \n,\n \ndataMatrix\n[\ni\n],\n \n*\n*\n10\n \n,\n \nerror\n\n        \nweights\n \n=\n \nweights\n \n+\n \nalpha\n \n*\n \nerror\n \n*\n \ndataMatrix\n[\ni\n]\n\n    \nreturn\n \nweights\n\n\n\n\n# \u968f\u673a\u68af\u5ea6\u4e0a\u5347\u7b97\u6cd5\uff08\u968f\u673a\u5316\uff09\n\n\ndef\n \nstocGradAscent1\n(\ndataMatrix\n,\n \nclassLabels\n,\n \nnumIter\n=\n150\n):\n\n    \nm\n,\nn\n \n=\n \nshape\n(\ndataMatrix\n)\n\n    \nweights\n \n=\n \nones\n(\nn\n)\n   \n# \u521b\u5efa\u4e0e\u5217\u6570\u76f8\u540c\u7684\u77e9\u9635\u7684\u7cfb\u6570\u77e9\u9635\uff0c\u6240\u6709\u7684\u5143\u7d20\u90fd\u662f1\n\n    \n# \u968f\u673a\u68af\u5ea6, \u5faa\u73af150,\u89c2\u5bdf\u662f\u5426\u6536\u655b\n\n    \nfor\n \nj\n \nin\n \nrange\n(\nnumIter\n):\n\n        \n# [0, 1, 2 .. m-1]\n\n        \ndataIndex\n \n=\n \nrange\n(\nm\n)\n\n        \nfor\n \ni\n \nin\n \nrange\n(\nm\n):\n\n            \n# i\u548cj\u7684\u4e0d\u65ad\u589e\u5927\uff0c\u5bfc\u81f4alpha\u7684\u503c\u4e0d\u65ad\u51cf\u5c11\uff0c\u4f46\u662f\u4e0d\u4e3a0\n\n            \nalpha\n \n=\n \n4\n/\n(\n1.0\n+\nj\n+\ni\n)\n+\n0.0001\n    \n# alpha \u4f1a\u968f\u7740\u8fed\u4ee3\u4e0d\u65ad\u51cf\u5c0f\uff0c\u4f46\u6c38\u8fdc\u4e0d\u4f1a\u51cf\u5c0f\u52300\uff0c\u56e0\u4e3a\u540e\u8fb9\u8fd8\u6709\u4e00\u4e2a\u5e38\u6570\u98790.0001\n\n            \n# \u968f\u673a\u4ea7\u751f\u4e00\u4e2a 0\uff5elen()\u4e4b\u95f4\u7684\u4e00\u4e2a\u503c\n\n            \n# random.uniform(x, y) \u65b9\u6cd5\u5c06\u968f\u673a\u751f\u6210\u4e0b\u4e00\u4e2a\u5b9e\u6570\uff0c\u5b83\u5728[x,y]\u8303\u56f4\u5185,x\u662f\u8fd9\u4e2a\u8303\u56f4\u5185\u7684\u6700\u5c0f\u503c\uff0cy\u662f\u8fd9\u4e2a\u8303\u56f4\u5185\u7684\u6700\u5927\u503c\u3002\n\n            \nrandIndex\n \n=\n \nint\n(\nrandom\n.\nuniform\n(\n0\n,\nlen\n(\ndataIndex\n)))\n\n            \n# sum(dataMatrix[i]*weights)\u4e3a\u4e86\u6c42 f(x)\u7684\u503c\uff0c f(x)=a1*x1+b2*x2+..+nn*xn\n\n            \nh\n \n=\n \nsigmoid\n(\nsum\n(\ndataMatrix\n[\nrandIndex\n]\n*\nweights\n))\n\n            \nerror\n \n=\n \nclassLabels\n[\nrandIndex\n]\n \n-\n \nh\n\n            \n# print weights, \n__h=%s\n % h, \n__\n*20, alpha, \n__\n*20, error, \n__\n*20, dataMatrix[randIndex]\n\n            \nweights\n \n=\n \nweights\n \n+\n \nalpha\n \n*\n \nerror\n \n*\n \ndataMatrix\n[\nrandIndex\n]\n\n            \ndel\n(\ndataIndex\n[\nrandIndex\n])\n\n    \nreturn\n \nweights\n\n\n\n\n\n\n\n\u6d4b\u8bd5\u7b97\u6cd5: \u4e3a\u4e86\u91cf\u5316\u56de\u5f52\u7684\u6548\u679c\uff0c\u9700\u8981\u89c2\u5bdf\u9519\u8bef\u7387\u3002\u6839\u636e\u9519\u8bef\u7387\u51b3\u5b9a\u662f\u5426\u56de\u9000\u5230\u8bad\u7ec3\u9636\u6bb5\uff0c\u901a\u8fc7\u6539\u53d8\u8fed\u4ee3\u7684\u6b21\u6570\u548c\u6b65\u957f\u7684\u53c2\u6570\u6765\u5f97\u5230\u66f4\u597d\u7684\u56de\u5f52\u7cfb\u6570\n\n\n\n\nLogistic \u56de\u5f52\u5206\u7c7b\u51fd\u6570\n\n\n# \u5206\u7c7b\u51fd\u6570\uff0c\u6839\u636e\u56de\u5f52\u7cfb\u6570\u548c\u7279\u5f81\u5411\u91cf\u6765\u8ba1\u7b97 Sigmoid\u7684\u503c\n\n\ndef\n \nclassifyVector\n(\ninX\n,\n \nweights\n):\n\n    \n\n\n    Desc: \n\n\n        \u6700\u7ec8\u7684\u5206\u7c7b\u51fd\u6570\uff0c\u6839\u636e\u56de\u5f52\u7cfb\u6570\u548c\u7279\u5f81\u5411\u91cf\u6765\u8ba1\u7b97 Sigmoid \u7684\u503c\uff0c\u5927\u4e8e0.5\u51fd\u6570\u8fd4\u56de1\uff0c\u5426\u5219\u8fd4\u56de0\n\n\n    Args:\n\n\n        inX -- \u7279\u5f81\u5411\u91cf\uff0cfeatures\n\n\n        weights -- \u6839\u636e\u68af\u5ea6\u4e0b\u964d/\u968f\u673a\u68af\u5ea6\u4e0b\u964d \u8ba1\u7b97\u5f97\u5230\u7684\u56de\u5f52\u7cfb\u6570\n\n\n    Returns:\n\n\n        \u5982\u679c prob \u8ba1\u7b97\u5927\u4e8e 0.5 \u51fd\u6570\u8fd4\u56de 1\n\n\n        \u5426\u5219\u8fd4\u56de 0\n\n\n    \n\n    \nprob\n \n=\n \nsigmoid\n(\nsum\n(\ninX\n*\nweights\n))\n\n    \nif\n \nprob\n \n \n0.5\n:\n \nreturn\n \n1.0\n\n    \nelse\n:\n \nreturn\n \n0.0\n\n\n\n# \u6253\u5f00\u6d4b\u8bd5\u96c6\u548c\u8bad\u7ec3\u96c6,\u5e76\u5bf9\u6570\u636e\u8fdb\u884c\u683c\u5f0f\u5316\u5904\u7406\n\n\ndef\n \ncolicTest\n():\n\n    \n\n\n    Desc:\n\n\n        \u6253\u5f00\u6d4b\u8bd5\u96c6\u548c\u8bad\u7ec3\u96c6\uff0c\u5e76\u5bf9\u6570\u636e\u8fdb\u884c\u683c\u5f0f\u5316\u5904\u7406\n\n\n    Args:\n\n\n        None\n\n\n    Returns:\n\n\n        errorRate -- \u5206\u7c7b\u9519\u8bef\u7387\n\n\n    \n\n    \nfrTrain\n \n=\n \nopen\n(\ninput/5.Logistic/horseColicTraining.txt\n)\n\n    \nfrTest\n \n=\n \nopen\n(\ninput/5.Logistic/horseColicTest.txt\n)\n\n    \ntrainingSet\n \n=\n \n[]\n\n    \ntrainingLabels\n \n=\n \n[]\n\n    \n# \u89e3\u6790\u8bad\u7ec3\u6570\u636e\u96c6\u4e2d\u7684\u6570\u636e\u7279\u5f81\u548cLabels\n\n    \n# trainingSet \u4e2d\u5b58\u50a8\u8bad\u7ec3\u6570\u636e\u96c6\u7684\u7279\u5f81\uff0ctrainingLabels \u5b58\u50a8\u8bad\u7ec3\u6570\u636e\u96c6\u7684\u6837\u672c\u5bf9\u5e94\u7684\u5206\u7c7b\u6807\u7b7e\n\n    \nfor\n \nline\n \nin\n \nfrTrain\n.\nreadlines\n():\n\n        \ncurrLine\n \n=\n \nline\n.\nstrip\n()\n.\nsplit\n(\n\\t\n)\n\n        \nlineArr\n \n=\n \n[]\n\n        \nfor\n \ni\n \nin\n \nrange\n(\n21\n):\n\n            \nlineArr\n.\nappend\n(\nfloat\n(\ncurrLine\n[\ni\n]))\n\n        \ntrainingSet\n.\nappend\n(\nlineArr\n)\n\n        \ntrainingLabels\n.\nappend\n(\nfloat\n(\ncurrLine\n[\n21\n]))\n\n    \n# \u4f7f\u7528 \u6539\u8fdb\u540e\u7684 \u968f\u673a\u68af\u5ea6\u4e0b\u964d\u7b97\u6cd5 \u6c42\u5f97\u5728\u6b64\u6570\u636e\u96c6\u4e0a\u7684\u6700\u4f73\u56de\u5f52\u7cfb\u6570 trainWeights\n\n    \ntrainWeights\n \n=\n \nstocGradAscent1\n(\narray\n(\ntrainingSet\n),\n \ntrainingLabels\n,\n \n500\n)\n\n    \nerrorCount\n \n=\n \n0\n\n    \nnumTestVec\n \n=\n \n0.0\n\n    \n# \u8bfb\u53d6 \u6d4b\u8bd5\u6570\u636e\u96c6 \u8fdb\u884c\u6d4b\u8bd5\uff0c\u8ba1\u7b97\u5206\u7c7b\u9519\u8bef\u7684\u6837\u672c\u6761\u6570\u548c\u6700\u7ec8\u7684\u9519\u8bef\u7387\n\n    \nfor\n \nline\n \nin\n \nfrTest\n.\nreadlines\n():\n\n        \nnumTestVec\n \n+=\n \n1.0\n\n        \ncurrLine\n \n=\n \nline\n.\nstrip\n()\n.\nsplit\n(\n\\t\n)\n\n        \nlineArr\n \n=\n \n[]\n\n        \nfor\n \ni\n \nin\n \nrange\n(\n21\n):\n\n            \nlineArr\n.\nappend\n(\nfloat\n(\ncurrLine\n[\ni\n]))\n\n        \nif\n \nint\n(\nclassifyVector\n(\narray\n(\nlineArr\n),\n \ntrainWeights\n))\n \n!=\n \nint\n(\ncurrLine\n[\n21\n]):\n\n            \nerrorCount\n \n+=\n \n1\n\n    \nerrorRate\n \n=\n \n(\nfloat\n(\nerrorCount\n)\n \n/\n \nnumTestVec\n)\n\n    \nprint\n \nthe error rate of this test is: \n%f\n \n%\n \nerrorRate\n\n    \nreturn\n \nerrorRate\n\n\n\n\n# \u8c03\u7528 colicTest() 10\u6b21\u5e76\u6c42\u7ed3\u679c\u7684\u5e73\u5747\u503c\n\n\ndef\n \nmultiTest\n():\n\n    \nnumTests\n \n=\n \n10\n\n    \nerrorSum\n \n=\n \n0.0\n\n    \nfor\n \nk\n \nin\n \nrange\n(\nnumTests\n):\n\n        \nerrorSum\n \n+=\n \ncolicTest\n()\n\n    \nprint\n \nafter \n%d\n iterations the average error rate is: \n%f\n \n%\n \n(\nnumTests\n,\n \nerrorSum\n/\nfloat\n(\nnumTests\n))\n \n\n\n\n\n\n\n\u4f7f\u7528\u7b97\u6cd5: \u5b9e\u73b0\u4e00\u4e2a\u7b80\u5355\u7684\u547d\u4ee4\u884c\u7a0b\u5e8f\u6765\u624b\u673a\u9a6c\u7684\u75c7\u72b6\u5e76\u8f93\u51fa\u9884\u6d4b\u7ed3\u679c\u5e76\u975e\u96be\u4e8b\uff0c\u8fd9\u53ef\u4ee5\u4f5c\u4e3a\u7559\u7ed9\u5927\u5bb6\u7684\u4e00\u9053\u4e60\u9898\n\n\n\n\n\u989d\u5916\u5185\u5bb9(\u53ef\u9009\u8bfb)\n\n\n\u5728\u4e0a\u6587\u4e2d\uff0c\u5f53Sigmoid\u51fd\u6570\u5927\u4e8e 0.5 \u7684\u6570\u636e\u88ab\u5206\u5165 1 \u7c7b\uff0c\u5c0f\u4e8e 0.5 \u5373\u88ab\u5f52\u5165 0 \u7c7b\u3002\u5176\u5b9e0.5\u4e5f\u662f\u53ef\u4ee5\u6539\u52a8\u7684\u3002 \u6bd4\u5982\u5927\u4e8e 0.9 \u7684\u6570\u636e\u88ab\u5206\u5165 1 \u7c7b\uff0c\u5c0f\u4e8e 0.9 \u5373\u88ab\u5f52\u5165 0 \u7c7b\u3002\n\n\n\u5176\u4ed6\u7b97\u6cd5\n\n\n\u9664\u4e86\u68af\u5ea6\u4e0b\u964d\uff0c\u968f\u673a\u68af\u5ea6\u4e0b\u964d\uff0c\u8fd8\u6709Conjugate Gradient\uff0cBFGS\uff0cL-BFGS\uff0c\u4ed6\u4eec\u4e0d\u9700\u8981\u6307\u5b9aalpha\u503c\uff08\u6b65\u957f\uff09\uff0c\u800c\u4e14\u6bd4\u68af\u5ea6\u4e0b\u964d\u66f4\u5feb\uff0c\u5728\u73b0\u5b9e\u4e2d\u5e94\u7528\u7684\u4e5f\u6bd4\u8f83\u591a\u3002 \u5f53\u7136\u8fd9\u4e9b\u7b97\u6cd5\u76f8\u6bd4\u968f\u673a\u68af\u5ea6\u8981\u590d\u6742\u3002\n\n\n\u7efc\u4e0a\u8fd9\u4e9b\u7b97\u6cd5\u90fd\u6709\u4e00\u4e2a\u5171\u901a\u7684\u7f3a\u70b9\u5c31\u662f\u4ed6\u4eec\u90fd\u662f\u4e0d\u65ad\u53bb\u903c\u8fd1\u771f\u5b9e\u503c\uff0c\u6c38\u8fdc\u53ea\u662f\u4e00\u4e2a\u771f\u5b9e\u503c\u7684\u8fd1\u4f3c\u503c\u800c\u5df2\u3002\n\n\n\u591a\u6807\u7b7e\u5206\u7c7b\n\n\n\u903b\u8f91\u56de\u5f52\u4e5f\u53ef\u4ee5\u7528\u4f5c\u4e8e\u591a\u6807\u7b7e\u5206\u7c7b\u3002 \u601d\u8def\u5982\u4e0b\uff1a\n\n\n\u5047\u8bbe\u6211\u4eec\u6807\u7b7eA\u4e2d\u6709a0,a1,a2....an\u4e2a\u6807\u7b7e\uff0c\u5bf9\u4e8e\u6bcf\u4e2a\u6807\u7b7e ai (ai \u662f\u6807\u7b7eA\u4e4b\u4e00)\uff0c\u6211\u4eec\u8bad\u7ec3\u4e00\u4e2a\u903b\u8f91\u56de\u5f52\u5206\u7c7b\u5668\u3002\n\n\n\u5373\uff0c\u8bad\u7ec3\u8be5\u6807\u7b7e\u7684\u903b\u8f91\u56de\u5f52\u5206\u7c7b\u5668\u7684\u65f6\u5019\uff0c\u5c06ai\u770b\u4f5c\u4e00\u7c7b\u6807\u7b7e\uff0c\u975eai\u7684\u6240\u6709\u6807\u7b7e\u770b\u4f5c\u4e00\u7c7b\u6807\u7b7e\u3002\u90a3\u4e48\u76f8\u5f53\u4e8e\u6574\u4e2a\u6570\u636e\u96c6\u91cc\u9762\u53ea\u6709\u4e24\u7c7b\u6807\u7b7e\uff1aai \u548c\u5176\u4ed6\u3002\n\n\n\u5269\u4e0b\u6b65\u9aa4\u5c31\u8ddf\u6211\u4eec\u8bad\u7ec3\u6b63\u5e38\u7684\u903b\u8f91\u56de\u5f52\u5206\u7c7b\u5668\u4e00\u6837\u4e86\u3002\n\n\n\u6d4b\u8bd5\u6570\u636e\u7684\u65f6\u5019\uff0c\u5c06\u67e5\u8be2\u70b9\u5957\u7528\u5728\u6bcf\u4e2a\u903b\u8f91\u56de\u5f52\u5206\u7c7b\u5668\u4e2d\u7684Sigmoid \u51fd\u6570\uff0c\u53d6\u503c\u6700\u9ad8\u7684\u5bf9\u5e94\u6807\u7b7e\u4e3a\u67e5\u8be2\u70b9\u7684\u6807\u7b7e\u3002\n\n\n\n\n\n\n\u4f5c\u8005\uff1a\n\u7f8a\u4e09\n \n\u5c0f\u7476\n\n\nGitHub\u5730\u5740\n: \nhttps://github.com/apachecn/MachineLearning\n\n\n\u7248\u6743\u58f0\u660e\uff1a\u6b22\u8fce\u8f6c\u8f7d\u5b66\u4e60 =\n \u8bf7\u6807\u6ce8\u4fe1\u606f\u6765\u6e90\u4e8e \nApacheCN", 
            "title": "5.Logistic\u56de\u5f52"
        }, 
        {
            "location": "/\u4e66\u7c4d/\u673a\u5668\u5b66\u4e60\u5b9e\u6218/05.Logistic\u56de\u5f52/#5-logistic", 
            "text": "", 
            "title": "\u7b2c5\u7ae0 Logistic\u56de\u5f52"
        }, 
        {
            "location": "/\u4e66\u7c4d/\u673a\u5668\u5b66\u4e60\u5b9e\u6218/05.Logistic\u56de\u5f52/#logistic", 
            "text": "Logistic \u56de\u5f52 \u6216\u8005\u53eb\u903b\u8f91\u56de\u5f52 \u867d\u7136\u540d\u5b57\u6709\u56de\u5f52\uff0c\u4f46\u662f\u5b83\u662f\u7528\u6765\u505a\u5206\u7c7b\u7684\u3002\u5176\u4e3b\u8981\u601d\u60f3\u662f: \u6839\u636e\u73b0\u6709\u6570\u636e\u5bf9\u5206\u7c7b\u8fb9\u754c\u7ebf(Decision Boundary)\u5efa\u7acb\u56de\u5f52\u516c\u5f0f\uff0c\u4ee5\u6b64\u8fdb\u884c\u5206\u7c7b\u3002", 
            "title": "Logistic \u56de\u5f52 \u6982\u8ff0"
        }, 
        {
            "location": "/\u4e66\u7c4d/\u673a\u5668\u5b66\u4e60\u5b9e\u6218/05.Logistic\u56de\u5f52/#_1", 
            "text": "", 
            "title": "\u987b\u77e5\u6982\u5ff5"
        }, 
        {
            "location": "/\u4e66\u7c4d/\u673a\u5668\u5b66\u4e60\u5b9e\u6218/05.Logistic\u56de\u5f52/#sigmoid", 
            "text": "", 
            "title": "Sigmoid \u51fd\u6570"
        }, 
        {
            "location": "/\u4e66\u7c4d/\u673a\u5668\u5b66\u4e60\u5b9e\u6218/05.Logistic\u56de\u5f52/#_2", 
            "text": "\u5047\u8bbe\u73b0\u5728\u6709\u4e00\u4e9b\u6570\u636e\u70b9\uff0c\u6211\u4eec\u7528\u4e00\u6761\u76f4\u7ebf\u5bf9\u8fd9\u4e9b\u70b9\u8fdb\u884c\u62df\u5408\uff08\u8fd9\u6761\u76f4\u7ebf\u79f0\u4e3a\u6700\u4f73\u62df\u5408\u76f4\u7ebf\uff09\uff0c\u8fd9\u4e2a\u62df\u5408\u7684\u8fc7\u7a0b\u5c31\u53eb\u505a\u56de\u5f52\u3002\u8fdb\u800c\u53ef\u4ee5\u5f97\u5230\u5bf9\u8fd9\u4e9b\u70b9\u7684\u62df\u5408\u76f4\u7ebf\u65b9\u7a0b\uff0c\u90a3\u4e48\u6211\u4eec\u6839\u636e\u8fd9\u4e2a\u56de\u5f52\u65b9\u7a0b\uff0c\u600e\u4e48\u8fdb\u884c\u5206\u7c7b\u5462\uff1f\u8bf7\u770b\u4e0b\u9762\u3002", 
            "title": "\u56de\u5f52 \u6982\u5ff5"
        }, 
        {
            "location": "/\u4e66\u7c4d/\u673a\u5668\u5b66\u4e60\u5b9e\u6218/05.Logistic\u56de\u5f52/#_3", 
            "text": "\u6211\u4eec\u60f3\u8981\u7684\u51fd\u6570\u5e94\u8be5\u662f: \u80fd\u63a5\u53d7\u6240\u6709\u7684\u8f93\u5165\u7136\u540e\u9884\u6d4b\u51fa\u7c7b\u522b\u3002\u4f8b\u5982\uff0c\u5728\u4e24\u4e2a\u7c7b\u7684\u60c5\u51b5\u4e0b\uff0c\u4e0a\u8ff0\u51fd\u6570\u8f93\u51fa 0 \u6216 1.\u6216\u8bb8\u4f60\u4e4b\u524d\u63a5\u89e6\u8fc7\u5177\u6709\u8fd9\u79cd\u6027\u8d28\u7684\u51fd\u6570\uff0c\u8be5\u51fd\u6570\u79f0\u4e3a  \u6d77\u7ef4\u585e\u5f97\u9636\u8dc3\u51fd\u6570(Heaviside step function) \uff0c\u6216\u8005\u76f4\u63a5\u79f0\u4e3a  \u5355\u4f4d\u9636\u8dc3\u51fd\u6570 \u3002\u7136\u800c\uff0c\u6d77\u7ef4\u585e\u5f97\u9636\u8dc3\u51fd\u6570\u7684\u95ee\u9898\u5728\u4e8e: \u8be5\u51fd\u6570\u5728\u8df3\u8dc3\u70b9\u4e0a\u4ece 0 \u77ac\u95f4\u8df3\u8dc3\u5230 1\uff0c\u8fd9\u4e2a\u77ac\u95f4\u8df3\u8dc3\u8fc7\u7a0b\u6709\u65f6\u5f88\u96be\u5904\u7406\u3002\u5e78\u597d\uff0c\u53e6\u4e00\u4e2a\u51fd\u6570\u4e5f\u6709\u7c7b\u4f3c\u7684\u6027\u8d28\uff08\u53ef\u4ee5\u8f93\u51fa 0 \u6216\u8005 1 \u7684\u6027\u8d28\uff09\uff0c\u4e14\u6570\u5b66\u4e0a\u66f4\u6613\u5904\u7406\uff0c\u8fd9\u5c31\u662f Sigmoid \u51fd\u6570\u3002 Sigmoid \u51fd\u6570\u5177\u4f53\u7684\u8ba1\u7b97\u516c\u5f0f\u5982\u4e0b:    \u4e0b\u56fe\u7ed9\u51fa\u4e86 Sigmoid \u51fd\u6570\u5728\u4e0d\u540c\u5750\u6807\u5c3a\u5ea6\u4e0b\u7684\u4e24\u6761\u66f2\u7ebf\u56fe\u3002\u5f53 x \u4e3a 0 \u65f6\uff0cSigmoid \u51fd\u6570\u503c\u4e3a 0.5 \u3002\u968f\u7740 x \u7684\u589e\u5927\uff0c\u5bf9\u5e94\u7684 Sigmoid \u503c\u5c06\u903c\u8fd1\u4e8e 1 ; \u800c\u968f\u7740 x \u7684\u51cf\u5c0f\uff0c Sigmoid \u503c\u5c06\u903c\u8fd1\u4e8e 0 \u3002\u5982\u679c\u6a2a\u5750\u6807\u523b\u5ea6\u8db3\u591f\u5927\uff0c Sigmoid \u51fd\u6570\u770b\u8d77\u6765\u5f88\u50cf\u4e00\u4e2a\u9636\u8dc3\u51fd\u6570\u3002   \u56e0\u6b64\uff0c\u4e3a\u4e86\u5b9e\u73b0 Logistic \u56de\u5f52\u5206\u7c7b\u5668\uff0c\u6211\u4eec\u53ef\u4ee5\u5728\u6bcf\u4e2a\u7279\u5f81\u4e0a\u90fd\u4e58\u4ee5\u4e00\u4e2a\u56de\u5f52\u7cfb\u6570\uff08\u5982\u4e0b\u516c\u5f0f\u6240\u793a\uff09\uff0c\u7136\u540e\u628a\u6240\u6709\u7ed3\u679c\u503c\u76f8\u52a0\uff0c\u5c06\u8fd9\u4e2a\u603b\u548c\u4ee3\u5165 Sigmoid \u51fd\u6570\u4e2d\uff0c\u8fdb\u800c\u5f97\u5230\u4e00\u4e2a\u8303\u56f4\u5728 0~1 \u4e4b\u95f4\u7684\u6570\u503c\u3002\u4efb\u4f55\u5927\u4e8e 0.5 \u7684\u6570\u636e\u88ab\u5206\u5165 1 \u7c7b\uff0c\u5c0f\u4e8e 0.5 \u5373\u88ab\u5f52\u5165 0 \u7c7b\u3002\u6240\u4ee5\uff0cLogistic \u56de\u5f52\u4e5f\u662f\u4e00\u79cd\u6982\u7387\u4f30\u8ba1\uff0c\u6bd4\u5982\u8fd9\u91ccSigmoid \u51fd\u6570\u5f97\u51fa\u7684\u503c\u4e3a0.5\uff0c\u53ef\u4ee5\u7406\u89e3\u4e3a\u7ed9\u5b9a\u6570\u636e\u548c\u53c2\u6570\uff0c\u6570\u636e\u88ab\u5206\u5165 1 \u7c7b\u7684\u6982\u7387\u4e3a0.5\u3002\u60f3\u5bf9Sigmoid \u51fd\u6570\u6709\u66f4\u591a\u4e86\u89e3\uff0c\u53ef\u4ee5\u70b9\u5f00 \u6b64\u94fe\u63a5 \u8ddf\u6b64\u51fd\u6570\u4e92\u52a8\u3002", 
            "title": "\u4e8c\u503c\u578b\u8f93\u51fa\u5206\u7c7b\u51fd\u6570"
        }, 
        {
            "location": "/\u4e66\u7c4d/\u673a\u5668\u5b66\u4e60\u5b9e\u6218/05.Logistic\u56de\u5f52/#_4", 
            "text": "Sigmoid \u51fd\u6570\u7684\u8f93\u5165\u8bb0\u4e3a z \uff0c\u7531\u4e0b\u9762\u516c\u5f0f\u5f97\u5230:    \u5982\u679c\u91c7\u7528\u5411\u91cf\u7684\u5199\u6cd5\uff0c\u4e0a\u8ff0\u516c\u5f0f\u53ef\u4ee5\u5199\u6210   \uff0c\u5b83\u8868\u793a\u5c06\u8fd9\u4e24\u4e2a\u6570\u503c\u5411\u91cf\u5bf9\u5e94\u5143\u7d20\u76f8\u4e58\u7136\u540e\u5168\u90e8\u52a0\u8d77\u6765\u5373\u5f97\u5230 z \u503c\u3002\u5176\u4e2d\u7684\u5411\u91cf x \u662f\u5206\u7c7b\u5668\u7684\u8f93\u5165\u6570\u636e\uff0c\u5411\u91cf w \u4e5f\u5c31\u662f\u6211\u4eec\u8981\u627e\u5230\u7684\u6700\u4f73\u53c2\u6570\uff08\u7cfb\u6570\uff09\uff0c\u4ece\u800c\u4f7f\u5f97\u5206\u7c7b\u5668\u5c3d\u53ef\u80fd\u5730\u7cbe\u786e\u3002\u4e3a\u4e86\u5bfb\u627e\u8be5\u6700\u4f73\u53c2\u6570\uff0c\u9700\u8981\u7528\u5230\u6700\u4f18\u5316\u7406\u8bba\u7684\u4e00\u4e9b\u77e5\u8bc6\u3002\u6211\u4eec\u8fd9\u91cc\u4f7f\u7528\u7684\u662f\u2014\u2014\u68af\u5ea6\u4e0a\u5347\u6cd5\uff08Gradient Ascent\uff09\u3002", 
            "title": "\u57fa\u4e8e\u6700\u4f18\u5316\u65b9\u6cd5\u7684\u56de\u5f52\u7cfb\u6570\u786e\u5b9a"
        }, 
        {
            "location": "/\u4e66\u7c4d/\u673a\u5668\u5b66\u4e60\u5b9e\u6218/05.Logistic\u56de\u5f52/#_5", 
            "text": "", 
            "title": "\u68af\u5ea6\u4e0a\u5347\u6cd5"
        }, 
        {
            "location": "/\u4e66\u7c4d/\u673a\u5668\u5b66\u4e60\u5b9e\u6218/05.Logistic\u56de\u5f52/#_6", 
            "text": "\u9700\u8981\u4e00\u70b9\u70b9\u5411\u91cf\u65b9\u9762\u7684\u6570\u5b66\u77e5\u8bc6  \u5411\u91cf = \u503c + \u65b9\u5411  \n\u68af\u5ea6 = \u5411\u91cf\n\u68af\u5ea6 = \u68af\u5ea6\u503c + \u68af\u5ea6\u65b9\u5411", 
            "title": "\u68af\u5ea6\u7684\u4ecb\u7ecd"
        }, 
        {
            "location": "/\u4e66\u7c4d/\u673a\u5668\u5b66\u4e60\u5b9e\u6218/05.Logistic\u56de\u5f52/#_7", 
            "text": "\u8981\u627e\u5230\u67d0\u51fd\u6570\u7684\u6700\u5927\u503c\uff0c\u6700\u597d\u7684\u65b9\u6cd5\u662f\u6cbf\u7740\u8be5\u51fd\u6570\u7684\u68af\u5ea6\u65b9\u5411\u63a2\u5bfb\u3002\u5982\u679c\u68af\u5ea6\u8bb0\u4e3a \u25bd \uff0c\u5219\u51fd\u6570 f(x, y) \u7684\u68af\u5ea6\u7531\u4e0b\u5f0f\u8868\u793a:    \u8fd9\u4e2a\u68af\u5ea6\u610f\u5473\u7740\u8981\u6cbf x \u7684\u65b9\u5411\u79fb\u52a8   \uff0c\u6cbf y \u7684\u65b9\u5411\u79fb\u52a8   \u3002\u5176\u4e2d\uff0c\u51fd\u6570f(x, y) \u5fc5\u987b\u8981\u5728\u5f85\u8ba1\u7b97\u7684\u70b9\u4e0a\u6709\u5b9a\u4e49\u5e76\u4e14\u53ef\u5fae\u3002\u4e0b\u56fe\u662f\u4e00\u4e2a\u5177\u4f53\u7684\u4f8b\u5b50\u3002   \u4e0a\u56fe\u5c55\u793a\u7684\uff0c\u68af\u5ea6\u4e0a\u5347\u7b97\u6cd5\u5230\u8fbe\u6bcf\u4e2a\u70b9\u540e\u90fd\u4f1a\u91cd\u65b0\u4f30\u8ba1\u79fb\u52a8\u7684\u65b9\u5411\u3002\u4ece P0 \u5f00\u59cb\uff0c\u8ba1\u7b97\u5b8c\u8be5\u70b9\u7684\u68af\u5ea6\uff0c\u51fd\u6570\u5c31\u6839\u636e\u68af\u5ea6\u79fb\u52a8\u5230\u4e0b\u4e00\u70b9 P1\u3002\u5728 P1 \u70b9\uff0c\u68af\u5ea6\u518d\u6b21\u88ab\u91cd\u65b0\u8ba1\u7b97\uff0c\u5e76\u6cbf\u7740\u65b0\u7684\u68af\u5ea6\u65b9\u5411\u79fb\u52a8\u5230 P2 \u3002\u5982\u6b64\u5faa\u73af\u8fed\u4ee3\uff0c\u76f4\u5230\u6ee1\u8db3\u505c\u6b62\u6761\u4ef6\u3002\u8fed\u4ee3\u8fc7\u7a0b\u4e2d\uff0c\u68af\u5ea6\u7b97\u5b50\u603b\u662f\u4fdd\u8bc1\u6211\u4eec\u80fd\u9009\u53d6\u5230\u6700\u4f73\u7684\u79fb\u52a8\u65b9\u5411\u3002  \u4e0a\u56fe\u4e2d\u7684\u68af\u5ea6\u4e0a\u5347\u7b97\u6cd5\u6cbf\u68af\u5ea6\u65b9\u5411\u79fb\u52a8\u4e86\u4e00\u6b65\u3002\u53ef\u4ee5\u770b\u5230\uff0c\u68af\u5ea6\u7b97\u5b50\u603b\u662f\u6307\u5411\u51fd\u6570\u503c\u589e\u957f\u6700\u5feb\u7684\u65b9\u5411\u3002\u8fd9\u91cc\u6240\u8bf4\u7684\u662f\u79fb\u52a8\u65b9\u5411\uff0c\u800c\u672a\u63d0\u5230\u79fb\u52a8\u91cf\u7684\u5927\u5c0f\u3002\u8be5\u91cf\u503c\u79f0\u4e3a\u6b65\u957f\uff0c\u8bb0\u4f5c \u03b1 \u3002\u7528\u5411\u91cf\u6765\u8868\u793a\u7684\u8bdd\uff0c\u68af\u5ea6\u4e0a\u5347\u7b97\u6cd5\u7684\u8fed\u4ee3\u516c\u5f0f\u5982\u4e0b:    \u8be5\u516c\u5f0f\u5c06\u4e00\u76f4\u88ab\u8fed\u4ee3\u6267\u884c\uff0c\u76f4\u81f3\u8fbe\u5230\u67d0\u4e2a\u505c\u6b62\u6761\u4ef6\u4e3a\u6b62\uff0c\u6bd4\u5982\u8fed\u4ee3\u6b21\u6570\u8fbe\u5230\u67d0\u4e2a\u6307\u5b9a\u503c\u6216\u8005\u7b97\u6cd5\u8fbe\u5230\u67d0\u4e2a\u53ef\u4ee5\u5141\u8bb8\u7684\u8bef\u5dee\u8303\u56f4\u3002  \u4ecb\u7ecd\u4e00\u4e0b\u51e0\u4e2a\u76f8\u5173\u7684\u6982\u5ff5\uff1a \u4f8b\u5982\uff1ay =w0 + w1x1 + w2x2 + ... + wnxn\n\u68af\u5ea6\uff1a\u53c2\u8003\u4e0a\u56fe\u7684\u4f8b\u5b50\uff0c\u4e8c\u7ef4\u56fe\u50cf\uff0cx\u65b9\u5411\u4ee3\u8868\u7b2c\u4e00\u4e2a\u7cfb\u6570\uff0c\u4e5f\u5c31\u662f w1\uff0cy\u65b9\u5411\u4ee3\u8868\u7b2c\u4e8c\u4e2a\u7cfb\u6570\u4e5f\u5c31\u662f w2\uff0c\u8fd9\u6837\u7684\u5411\u91cf\u5c31\u662f\u68af\u5ea6\u3002\n\u03b1\uff1a\u4e0a\u9762\u7684\u68af\u5ea6\u7b97\u6cd5\u7684\u8fed\u4ee3\u516c\u5f0f\u4e2d\u7684\u963f\u5c14\u6cd5\uff0c\u8fd9\u4e2a\u4ee3\u8868\u7684\u662f\u79fb\u52a8\u6b65\u957f\uff08step length\uff09\u3002\u79fb\u52a8\u6b65\u957f\u4f1a\u5f71\u54cd\u6700\u7ec8\u7ed3\u679c\u7684\u62df\u5408\u7a0b\u5ea6\uff0c\u6700\u597d\u7684\u65b9\u6cd5\u5c31\u662f\u968f\u7740\u8fed\u4ee3\u6b21\u6570\u66f4\u6539\u79fb\u52a8\u6b65\u957f\u3002\n\u6b65\u957f\u901a\u4fd7\u7684\u7406\u89e3\uff0c100\u7c73\uff0c\u5982\u679c\u6211\u4e00\u6b65\u8d7010\u7c73\uff0c\u6211\u9700\u8981\u8d7010\u6b65\uff1b\u5982\u679c\u4e00\u6b65\u8d7020\u7c73\uff0c\u6211\u53ea\u9700\u8981\u8d705\u6b65\u3002\u8fd9\u91cc\u7684\u4e00\u6b65\u8d70\u591a\u5c11\u7c73\u5c31\u662f\u6b65\u957f\u7684\u610f\u601d\u3002\n\u25bdf(w)\uff1a\u4ee3\u8868\u6cbf\u7740\u68af\u5ea6\u53d8\u5316\u7684\u65b9\u5411\u3002  Note:  \u95ee\uff1a\u6709\u4eba\u4f1a\u597d\u5947\u4e3a\u4ec0\u4e48\u6709\u4e9b\u4e66\u7c4d\u4e0a\u8bf4\u7684\u662f\u68af\u5ea6\u4e0b\u964d\u6cd5\uff08Gradient Decent\uff09?\n \u00a0 \u00a0\u7b54\uff1a \u5176\u5b9e\u8fd9\u4e2a\u4e24\u4e2a\u65b9\u6cd5\u5728\u6b64\u60c5\u51b5\u4e0b\u672c\u8d28\u4e0a\u662f\u76f8\u540c\u7684\u3002\u5173\u952e\u5728\u4e8e\u8bef\u5dee\u51fd\u6570\u6216\u8005\u53eb\u76ee\u6807\u51fd\u6570\uff08objective function\uff09\u3002\u5982\u679c\u76ee\u6807\u51fd\u6570\u662f\u635f\u5931\u51fd\u6570\uff0c\u90a3\u5c31\u662f\u6700\u5c0f\u5316\u635f\u5931\u51fd\u6570\u6765\u6c42\u51fd\u6570\u7684\u6700\u5c0f\u503c\uff0c\u5c31\u7528\u68af\u5ea6\u4e0b\u964d\u3002 \u5982\u679c\u76ee\u6807\u51fd\u6570\u662f\u4f3c\u7136\u51fd\u6570\uff08Likelihood function\uff09\uff0c\u5c31\u662f\u8981\u6700\u5927\u5316\u4f3c\u7136\u51fd\u6570\u6765\u6c42\u51fd\u6570\u7684\u6700\u5927\u503c\uff0c\u90a3\u5c31\u7528\u68af\u5ea6\u4e0a\u5347\u3002\u5728\u903b\u8f91\u56de\u5f52\u4e2d\uff0c \u635f\u5931\u51fd\u6570\u548c\u4f3c\u7136\u51fd\u6570\u65e0\u975e\u5c31\u662f\u4e92\u4e3a\u6b63\u8d1f\u5173\u7cfb\u3002\n \u00a0 \u00a0\u53ea\u9700\u8981\u5728\u8fed\u4ee3\u516c\u5f0f\u4e2d\u7684\u52a0\u6cd5\u53d8\u6210\u51cf\u6cd5\u3002\u56e0\u6b64\uff0c\u5bf9\u5e94\u7684\u516c\u5f0f\u53ef\u4ee5\u5199\u6210   \u5c40\u90e8\u6700\u4f18\u73b0\u8c61 \uff08Local Optima\uff09   \u4e0a\u56fe\u8868\u793a\u53c2\u6570 \u03b8 \u4e0e\u8bef\u5dee\u51fd\u6570 J(\u03b8) \u7684\u5173\u7cfb\u56fe (\u8fd9\u91cc\u7684\u8bef\u5dee\u51fd\u6570\u662f\u635f\u5931\u51fd\u6570\uff0c\u6240\u4ee5\u6211\u4eec\u8981\u6700\u5c0f\u5316\u635f\u5931\u51fd\u6570)\uff0c\u7ea2\u8272\u7684\u90e8\u5206\u662f\u8868\u793a J(\u03b8) \u6709\u7740\u6bd4\u8f83\u9ad8\u7684\u53d6\u503c\uff0c\u6211\u4eec\u9700\u8981\u7684\u662f\uff0c\u80fd\u591f\u8ba9 J(\u03b8) \u7684\u503c\u5c3d\u91cf\u7684\u4f4e\u3002\u4e5f\u5c31\u662f\u6df1\u84dd\u8272\u7684\u90e8\u5206\u3002\u03b80\uff0c\u03b81 \u8868\u793a \u03b8 \u5411\u91cf\u7684\u4e24\u4e2a\u7ef4\u5ea6\uff08\u6b64\u5904\u7684\u03b80\uff0c\u03b81\u662fx0\u548cx1\u7684\u7cfb\u6570\uff0c\u4e5f\u5bf9\u5e94\u7684\u662f\u4e0a\u6587w0\u548cw1\uff09\u3002  \u53ef\u80fd\u68af\u5ea6\u4e0b\u964d\u7684\u6700\u7ec8\u70b9\u5e76\u975e\u662f\u5168\u5c40\u6700\u5c0f\u70b9\uff0c\u53ef\u80fd\u662f\u4e00\u4e2a\u5c40\u90e8\u6700\u5c0f\u70b9\uff0c\u5982\u6211\u4eec\u4e0a\u56fe\u4e2d\u7684\u53f3\u8fb9\u7684\u68af\u5ea6\u4e0b\u964d\u66f2\u7ebf\uff0c\u63cf\u8ff0\u7684\u662f\u6700\u7ec8\u5230\u8fbe\u4e00\u4e2a\u5c40\u90e8\u6700\u5c0f\u70b9\uff0c\u8fd9\u662f\u6211\u4eec\u91cd\u65b0\u9009\u62e9\u4e86\u4e00\u4e2a\u521d\u59cb\u70b9\u5f97\u5230\u7684\u3002  \u770b\u6765\u6211\u4eec\u8fd9\u4e2a\u7b97\u6cd5\u5c06\u4f1a\u5728\u5f88\u5927\u7684\u7a0b\u5ea6\u4e0a\u88ab\u521d\u59cb\u70b9\u7684\u9009\u62e9\u5f71\u54cd\u800c\u9677\u5165\u5c40\u90e8\u6700\u5c0f\u70b9\u3002", 
            "title": "\u68af\u5ea6\u4e0a\u5347\u6cd5\u7684\u601d\u60f3"
        }, 
        {
            "location": "/\u4e66\u7c4d/\u673a\u5668\u5b66\u4e60\u5b9e\u6218/05.Logistic\u56de\u5f52/#logistic_1", 
            "text": "", 
            "title": "Logistic \u56de\u5f52 \u539f\u7406"
        }, 
        {
            "location": "/\u4e66\u7c4d/\u673a\u5668\u5b66\u4e60\u5b9e\u6218/05.Logistic\u56de\u5f52/#logistic_2", 
            "text": "\u6bcf\u4e2a\u56de\u5f52\u7cfb\u6570\u521d\u59cb\u5316\u4e3a 1\n\u91cd\u590d R \u6b21:\n    \u8ba1\u7b97\u6574\u4e2a\u6570\u636e\u96c6\u7684\u68af\u5ea6\n    \u4f7f\u7528 \u6b65\u957f x \u68af\u5ea6 \u66f4\u65b0\u56de\u5f52\u7cfb\u6570\u7684\u5411\u91cf\n\u8fd4\u56de\u56de\u5f52\u7cfb\u6570", 
            "title": "Logistic \u56de\u5f52 \u5de5\u4f5c\u539f\u7406"
        }, 
        {
            "location": "/\u4e66\u7c4d/\u673a\u5668\u5b66\u4e60\u5b9e\u6218/05.Logistic\u56de\u5f52/#logistic_3", 
            "text": "\u6536\u96c6\u6570\u636e: \u91c7\u7528\u4efb\u610f\u65b9\u6cd5\u6536\u96c6\u6570\u636e\n\u51c6\u5907\u6570\u636e: \u7531\u4e8e\u9700\u8981\u8fdb\u884c\u8ddd\u79bb\u8ba1\u7b97\uff0c\u56e0\u6b64\u8981\u6c42\u6570\u636e\u7c7b\u578b\u4e3a\u6570\u503c\u578b\u3002\u53e6\u5916\uff0c\u7ed3\u6784\u5316\u6570\u636e\u683c\u5f0f\u5219\u6700\u4f73\u3002\n\u5206\u6790\u6570\u636e: \u91c7\u7528\u4efb\u610f\u65b9\u6cd5\u5bf9\u6570\u636e\u8fdb\u884c\u5206\u6790\u3002\n\u8bad\u7ec3\u7b97\u6cd5: \u5927\u90e8\u5206\u65f6\u95f4\u5c06\u7528\u4e8e\u8bad\u7ec3\uff0c\u8bad\u7ec3\u7684\u76ee\u7684\u662f\u4e3a\u4e86\u627e\u5230\u6700\u4f73\u7684\u5206\u7c7b\u56de\u5f52\u7cfb\u6570\u3002\n\u6d4b\u8bd5\u7b97\u6cd5: \u4e00\u65e6\u8bad\u7ec3\u6b65\u9aa4\u5b8c\u6210\uff0c\u5206\u7c7b\u5c06\u4f1a\u5f88\u5feb\u3002\n\u4f7f\u7528\u7b97\u6cd5: \u9996\u5148\uff0c\u6211\u4eec\u9700\u8981\u8f93\u5165\u4e00\u4e9b\u6570\u636e\uff0c\u5e76\u5c06\u5176\u8f6c\u6362\u6210\u5bf9\u5e94\u7684\u7ed3\u6784\u5316\u6570\u503c\uff1b\u63a5\u7740\uff0c\u57fa\u4e8e\u8bad\u7ec3\u597d\u7684\u56de\u5f52\u7cfb\u6570\u5c31\u53ef\u4ee5\u5bf9\u8fd9\u4e9b\u6570\u503c\u8fdb\u884c\u7b80\u5355\u7684\u56de\u5f52\u8ba1\u7b97\uff0c\u5224\u5b9a\u5b83\u4eec\u5c5e\u4e8e\u54ea\u4e2a\u7c7b\u522b\uff1b\u5728\u8fd9\u4e4b\u540e\uff0c\u6211\u4eec\u5c31\u53ef\u4ee5\u5728\u8f93\u51fa\u7684\u7c7b\u522b\u4e0a\u505a\u4e00\u4e9b\u5176\u4ed6\u5206\u6790\u5de5\u4f5c\u3002", 
            "title": "Logistic \u56de\u5f52 \u5f00\u53d1\u6d41\u7a0b"
        }, 
        {
            "location": "/\u4e66\u7c4d/\u673a\u5668\u5b66\u4e60\u5b9e\u6218/05.Logistic\u56de\u5f52/#logistic_4", 
            "text": "\u4f18\u70b9: \u8ba1\u7b97\u4ee3\u4ef7\u4e0d\u9ad8\uff0c\u6613\u4e8e\u7406\u89e3\u548c\u5b9e\u73b0\u3002\n\u7f3a\u70b9: \u5bb9\u6613\u6b20\u62df\u5408\uff0c\u5206\u7c7b\u7cbe\u5ea6\u53ef\u80fd\u4e0d\u9ad8\u3002\n\u9002\u7528\u6570\u636e\u7c7b\u578b: \u6570\u503c\u578b\u548c\u6807\u79f0\u578b\u6570\u636e\u3002", 
            "title": "Logistic \u56de\u5f52 \u7b97\u6cd5\u7279\u70b9"
        }, 
        {
            "location": "/\u4e66\u7c4d/\u673a\u5668\u5b66\u4e60\u5b9e\u6218/05.Logistic\u56de\u5f52/#_8", 
            "text": "", 
            "title": "\u9644\u52a0 \u65b9\u5411\u5bfc\u6570\u4e0e\u68af\u5ea6"
        }, 
        {
            "location": "/\u4e66\u7c4d/\u673a\u5668\u5b66\u4e60\u5b9e\u6218/05.Logistic\u56de\u5f52/#logistic_5", 
            "text": "", 
            "title": "Logistic \u56de\u5f52 \u9879\u76ee\u6848\u4f8b"
        }, 
        {
            "location": "/\u4e66\u7c4d/\u673a\u5668\u5b66\u4e60\u5b9e\u6218/05.Logistic\u56de\u5f52/#1-logistic", 
            "text": "\u5b8c\u6574\u4ee3\u7801\u5730\u5740 :  https://github.com/apachecn/MachineLearning/blob/master/src/python/5.Logistic/logistic.py", 
            "title": "\u9879\u76ee\u6848\u4f8b1: \u4f7f\u7528 Logistic \u56de\u5f52\u5728\u7b80\u5355\u6570\u636e\u96c6\u4e0a\u7684\u5206\u7c7b"
        }, 
        {
            "location": "/\u4e66\u7c4d/\u673a\u5668\u5b66\u4e60\u5b9e\u6218/05.Logistic\u56de\u5f52/#_9", 
            "text": "\u5728\u4e00\u4e2a\u7b80\u5355\u7684\u6570\u636e\u96c6\u4e0a\uff0c\u91c7\u7528\u68af\u5ea6\u4e0a\u5347\u6cd5\u627e\u5230 Logistic \u56de\u5f52\u5206\u7c7b\u5668\u5728\u6b64\u6570\u636e\u96c6\u4e0a\u7684\u6700\u4f73\u56de\u5f52\u7cfb\u6570", 
            "title": "\u9879\u76ee\u6982\u8ff0"
        }, 
        {
            "location": "/\u4e66\u7c4d/\u673a\u5668\u5b66\u4e60\u5b9e\u6218/05.Logistic\u56de\u5f52/#_10", 
            "text": "\u6536\u96c6\u6570\u636e: \u53ef\u4ee5\u4f7f\u7528\u4efb\u4f55\u65b9\u6cd5\n\u51c6\u5907\u6570\u636e: \u7531\u4e8e\u9700\u8981\u8fdb\u884c\u8ddd\u79bb\u8ba1\u7b97\uff0c\u56e0\u6b64\u8981\u6c42\u6570\u636e\u7c7b\u578b\u4e3a\u6570\u503c\u578b\u3002\u53e6\u5916\uff0c\u7ed3\u6784\u5316\u6570\u636e\u683c\u5f0f\u5219\u6700\u4f73\n\u5206\u6790\u6570\u636e: \u753b\u51fa\u51b3\u7b56\u8fb9\u754c\n\u8bad\u7ec3\u7b97\u6cd5: \u4f7f\u7528\u68af\u5ea6\u4e0a\u5347\u627e\u5230\u6700\u4f73\u53c2\u6570\n\u6d4b\u8bd5\u7b97\u6cd5: \u4f7f\u7528 Logistic \u56de\u5f52\u8fdb\u884c\u5206\u7c7b\n\u4f7f\u7528\u7b97\u6cd5: \u5bf9\u7b80\u5355\u6570\u636e\u96c6\u4e2d\u6570\u636e\u8fdb\u884c\u5206\u7c7b   \u6536\u96c6\u6570\u636e: \u53ef\u4ee5\u4f7f\u7528\u4efb\u4f55\u65b9\u6cd5   \u6211\u4eec\u91c7\u7528\u5b58\u50a8\u5728 TestSet.txt \u6587\u672c\u6587\u4ef6\u4e2d\u7684\u6570\u636e\uff0c\u5b58\u50a8\u683c\u5f0f\u5982\u4e0b:   -0.017612   14.053064   0\n-1.395634   4.662541    1\n-0.752157   6.538620    0\n-1.322371   7.152853    0\n0.423363    11.054677   0  \u7ed8\u5236\u5728\u56fe\u4e2d\uff0c\u5982\u4e0b\u56fe\u6240\u793a:     \u51c6\u5907\u6570\u636e: \u7531\u4e8e\u9700\u8981\u8fdb\u884c\u8ddd\u79bb\u8ba1\u7b97\uff0c\u56e0\u6b64\u8981\u6c42\u6570\u636e\u7c7b\u578b\u4e3a\u6570\u503c\u578b\u3002\u53e6\u5916\uff0c\u7ed3\u6784\u5316\u6570\u636e\u683c\u5f0f\u5219\u6700\u4f73  \u5206\u6790\u6570\u636e: \u753b\u51fa\u51b3\u7b56\u8fb9\u754c   \u753b\u51fa\u6570\u636e\u96c6\u548c Logistic \u56de\u5f52\u6700\u4f73\u62df\u5408\u76f4\u7ebf\u7684\u51fd\u6570  def   plotBestFit ( dataArr ,   labelMat ,   weights ): \n              Desc:              \u5c06\u6211\u4eec\u5f97\u5230\u7684\u6570\u636e\u53ef\u89c6\u5316\u5c55\u793a\u51fa\u6765          Args:              dataArr:\u6837\u672c\u6570\u636e\u7684\u7279\u5f81              labelMat:\u6837\u672c\u6570\u636e\u7684\u7c7b\u522b\u6807\u7b7e\uff0c\u5373\u76ee\u6807\u53d8\u91cf              weights:\u56de\u5f52\u7cfb\u6570          Returns:              None       \n\n     n   =   shape ( dataArr )[ 0 ] \n     xcord1   =   [];   ycord1   =   [] \n     xcord2   =   [];   ycord2   =   [] \n     for   i   in   range ( n ): \n         if   int ( labelMat [ i ]) ==   1 : \n             xcord1 . append ( dataArr [ i , 1 ]);   ycord1 . append ( dataArr [ i , 2 ]) \n         else : \n             xcord2 . append ( dataArr [ i , 1 ]);   ycord2 . append ( dataArr [ i , 2 ]) \n     fig   =   plt . figure () \n     ax   =   fig . add_subplot ( 111 ) \n     ax . scatter ( xcord1 ,   ycord1 ,   s = 30 ,   c = red ,   marker = s ) \n     ax . scatter ( xcord2 ,   ycord2 ,   s = 30 ,   c = green ) \n     x   =   arange ( - 3.0 ,   3.0 ,   0.1 ) \n          y\u7684\u7531\u6765\uff0c\u5367\u69fd\uff0c\u662f\u4e0d\u662f\u6ca1\u770b\u61c2\uff1f      \u9996\u5148\u7406\u8bba\u4e0a\u662f\u8fd9\u4e2a\u6837\u5b50\u7684\u3002      dataMat.append([1.0, float(lineArr[0]), float(lineArr[1])])      w0*x0+w1*x1+w2*x2=f(x)      x0\u6700\u5f00\u59cb\u5c31\u8bbe\u7f6e\u4e3a1\u53fb\uff0c x2\u5c31\u662f\u6211\u4eec\u753b\u56fe\u7684y\u503c\uff0c\u800cf(x)\u88ab\u6211\u4eec\u78e8\u5408\u8bef\u5dee\u7ed9\u7b97\u5230w0,w1,w2\u8eab\u4e0a\u53bb\u4e86      \u6240\u4ee5\uff1a w0+w1*x+w2*y=0 =  y = (-w0-w1*x)/w2          \n     y   =   ( - weights [ 0 ] - weights [ 1 ] * x ) / weights [ 2 ] \n     ax . plot ( x ,   y ) \n     plt . xlabel ( X );   plt . ylabel ( Y ) \n     plt . show ()    \u8bad\u7ec3\u7b97\u6cd5: \u4f7f\u7528\u68af\u5ea6\u4e0a\u5347\u627e\u5230\u6700\u4f73\u53c2\u6570   Logistic \u56de\u5f52\u68af\u5ea6\u4e0a\u5347\u4f18\u5316\u7b97\u6cd5  # \u6b63\u5e38\u7684\u5904\u7406\u65b9\u6848  # \u4e24\u4e2a\u53c2\u6570\uff1a\u7b2c\u4e00\u4e2a\u53c2\u6570==  dataMatIn \u662f\u4e00\u4e2a2\u7ef4NumPy\u6570\u7ec4\uff0c\u6bcf\u5217\u5206\u522b\u4ee3\u8868\u6bcf\u4e2a\u4e0d\u540c\u7684\u7279\u5f81\uff0c\u6bcf\u884c\u5219\u4ee3\u8868\u6bcf\u4e2a\u8bad\u7ec3\u6837\u672c\u3002  # \u7b2c\u4e8c\u4e2a\u53c2\u6570==  classLabels \u662f\u7c7b\u522b\u6807\u7b7e\uff0c\u5b83\u662f\u4e00\u4e2a 1*100 \u7684\u884c\u5411\u91cf\u3002\u4e3a\u4e86\u4fbf\u4e8e\u77e9\u9635\u8ba1\u7b97\uff0c\u9700\u8981\u5c06\u8be5\u884c\u5411\u91cf\u8f6c\u6362\u4e3a\u5217\u5411\u91cf\uff0c\u505a\u6cd5\u662f\u5c06\u539f\u5411\u91cf\u8f6c\u7f6e\uff0c\u518d\u5c06\u5b83\u8d4b\u503c\u7ed9labelMat\u3002  def   gradAscent ( dataMatIn ,   classLabels ): \n     # \u8f6c\u5316\u4e3a\u77e9\u9635[[1,1,2],[1,1,2]....] \n     dataMatrix   =   mat ( dataMatIn )               # \u8f6c\u6362\u4e3a NumPy \u77e9\u9635 \n     # \u8f6c\u5316\u4e3a\u77e9\u9635[[0,1,0,1,0,1.....]]\uff0c\u5e76\u8f6c\u5236[[0],[1],[0].....] \n     # transpose() \u884c\u5217\u8f6c\u7f6e\u51fd\u6570 \n     # \u5c06\u884c\u5411\u91cf\u8f6c\u5316\u4e3a\u5217\u5411\u91cf   =   \u77e9\u9635\u7684\u8f6c\u7f6e \n     labelMat   =   mat ( classLabels ) . transpose ()   # \u9996\u5148\u5c06\u6570\u7ec4\u8f6c\u6362\u4e3a NumPy \u77e9\u9635\uff0c\u7136\u540e\u518d\u5c06\u884c\u5411\u91cf\u8f6c\u7f6e\u4e3a\u5217\u5411\u91cf \n     # m- \u6570\u636e\u91cf\uff0c\u6837\u672c\u6570 n- \u7279\u5f81\u6570 \n     m , n   =   shape ( dataMatrix ) \n     # print m, n,  __ *10, shape(dataMatrix.transpose()),  __ *100 \n     # alpha\u4ee3\u8868\u5411\u76ee\u6807\u79fb\u52a8\u7684\u6b65\u957f \n     alpha   =   0.001 \n     # \u8fed\u4ee3\u6b21\u6570 \n     maxCycles   =   500 \n     # \u751f\u6210\u4e00\u4e2a\u957f\u5ea6\u548c\u7279\u5f81\u6570\u76f8\u540c\u7684\u77e9\u9635\uff0c\u6b64\u5904n\u4e3a3 -  [[1],[1],[1]] \n     # weights \u4ee3\u8868\u56de\u5f52\u7cfb\u6570\uff0c \u6b64\u5904\u7684 ones((n,1)) \u521b\u5efa\u4e00\u4e2a\u957f\u5ea6\u548c\u7279\u5f81\u6570\u76f8\u540c\u7684\u77e9\u9635\uff0c\u5176\u4e2d\u7684\u6570\u5168\u90e8\u90fd\u662f 1 \n     weights   =   ones (( n , 1 )) \n     for   k   in   range ( maxCycles ):                #heavy on matrix operations \n         # m*3 \u7684\u77e9\u9635 * 3*1 \u7684\u77e9\u9635 \uff1d m*1\u7684\u77e9\u9635 \n         # \u90a3\u4e48\u4e58\u4e0a\u77e9\u9635\u7684\u610f\u4e49\uff0c\u5c31\u4ee3\u8868\uff1a\u901a\u8fc7\u516c\u5f0f\u5f97\u5230\u7684\u7406\u8bba\u503c \n         # \u53c2\u8003\u5730\u5740\uff1a \u77e9\u9635\u4e58\u6cd5\u7684\u672c\u8d28\u662f\u4ec0\u4e48\uff1f https://www.zhihu.com/question/21351965/answer/31050145 \n         # print  dataMatrix==== , dataMatrix  \n         # print  weights==== , weights \n         # n*3   *  3*1  = n*1 \n         h   =   sigmoid ( dataMatrix * weights )       # \u77e9\u9635\u4e58\u6cd5 \n         # print  hhhhhhh==== , h \n         # labelMat\u662f\u5b9e\u9645\u503c \n         error   =   ( labelMat   -   h )                # \u5411\u91cf\u76f8\u51cf \n         # 0.001* (3*m)*(m*1) \u8868\u793a\u5728\u6bcf\u4e00\u4e2a\u5217\u4e0a\u7684\u4e00\u4e2a\u8bef\u5dee\u60c5\u51b5\uff0c\u6700\u540e\u5f97\u51fa x1,x2,xn\u7684\u7cfb\u6570\u7684\u504f\u79fb\u91cf \n         weights   =   weights   +   alpha   *   dataMatrix . transpose ()   *   error   # \u77e9\u9635\u4e58\u6cd5\uff0c\u6700\u540e\u5f97\u5230\u56de\u5f52\u7cfb\u6570 \n     return   array ( weights )   \u5927\u5bb6\u770b\u5230\u8fd9\u513f\u53ef\u80fd\u4f1a\u6709\u4e00\u4e9b\u7591\u60d1\uff0c\u5c31\u662f\uff0c\u6211\u4eec\u5728\u8fed\u4ee3\u4e2d\u66f4\u65b0\u6211\u4eec\u7684\u56de\u5f52\u7cfb\u6570\uff0c\u540e\u8fb9\u7684\u90e8\u5206\u662f\u600e\u4e48\u8ba1\u7b97\u51fa\u6765\u7684\uff1f\u4e3a\u4ec0\u4e48\u4f1a\u662f alpha * dataMatrix.transpose() * error ?\u56e0\u4e3a\u8fd9\u5c31\u662f\u6211\u4eec\u6240\u6c42\u7684\u68af\u5ea6\uff0c\u4e5f\u5c31\u662f\u5bf9 f(w) \u5bf9 w \u6c42\u4e00\u9636\u5bfc\u6570\u3002\u5177\u4f53\u63a8\u5bfc\u5982\u4e0b:  \n\u53ef\u53c2\u8003http://blog.csdn.net/achuo/article/details/51160101   \u6d4b\u8bd5\u7b97\u6cd5: \u4f7f\u7528 Logistic \u56de\u5f52\u8fdb\u884c\u5206\u7c7b   def   testLR (): \n     # 1.\u6536\u96c6\u5e76\u51c6\u5907\u6570\u636e \n     dataMat ,   labelMat   =   loadDataSet ( input/5.Logistic/TestSet.txt ) \n\n     # print dataMat,  ---\\n , labelMat \n     # 2.\u8bad\u7ec3\u6a21\u578b\uff0c  f(x)=a1*x1+b2*x2+..+nn*xn\u4e2d (a1,b2, .., nn).T\u7684\u77e9\u9635\u503c \n     # \u56e0\u4e3a\u6570\u7ec4\u6ca1\u6709\u662f\u590d\u5236n\u4efd\uff0c array\u7684\u4e58\u6cd5\u5c31\u662f\u4e58\u6cd5 \n     dataArr   =   array ( dataMat ) \n     # print dataArr \n     weights   =   gradAscent ( dataArr ,   labelMat ) \n     # weights = stocGradAscent0(dataArr, labelMat) \n     # weights = stocGradAscent1(dataArr, labelMat) \n     # print  * *30, weights \n\n     # \u6570\u636e\u53ef\u89c6\u5316 \n     plotBestFit ( dataArr ,   labelMat ,   weights )    \u4f7f\u7528\u7b97\u6cd5: \u5bf9\u7b80\u5355\u6570\u636e\u96c6\u4e2d\u6570\u636e\u8fdb\u884c\u5206\u7c7b", 
            "title": "\u5f00\u53d1\u6d41\u7a0b"
        }, 
        {
            "location": "/\u4e66\u7c4d/\u673a\u5668\u5b66\u4e60\u5b9e\u6218/05.Logistic\u56de\u5f52/#_11", 
            "text": "\u68af\u5ea6\u4e0a\u5347\u7b97\u6cd5\u5728\u6bcf\u6b21\u66f4\u65b0\u56de\u5f52\u7cfb\u6570\u65f6\u90fd\u9700\u8981\u904d\u5386\u6574\u4e2a\u6570\u636e\u96c6\uff0c\u8be5\u65b9\u6cd5\u5728\u5904\u7406 100 \u4e2a\u5de6\u53f3\u7684\u6570\u636e\u96c6\u65f6\u5c1a\u53ef\uff0c\u4f46\u5982\u679c\u6709\u6570\u5341\u4ebf\u6837\u672c\u548c\u6210\u5343\u4e0a\u4e07\u7684\u7279\u5f81\uff0c\u90a3\u4e48\u8be5\u65b9\u6cd5\u7684\u8ba1\u7b97\u590d\u6742\u5ea6\u5c31\u592a\u9ad8\u4e86\u3002\u4e00\u79cd\u6539\u8fdb\u65b9\u6cd5\u662f\u4e00\u6b21\u4ec5\u7528\u4e00\u4e2a\u6837\u672c\u70b9\u6765\u66f4\u65b0\u56de\u5f52\u7cfb\u6570\uff0c\u8be5\u65b9\u6cd5\u79f0\u4e3a  \u968f\u673a\u68af\u5ea6\u4e0a\u5347\u7b97\u6cd5 \u3002\u7531\u4e8e\u53ef\u4ee5\u5728\u65b0\u6837\u672c\u5230\u6765\u65f6\u5bf9\u5206\u7c7b\u5668\u8fdb\u884c\u589e\u91cf\u5f0f\u66f4\u65b0\uff0c\u56e0\u800c\u968f\u673a\u68af\u5ea6\u4e0a\u5347\u7b97\u6cd5\u662f\u4e00\u4e2a\u5728\u7ebf\u5b66\u4e60(online learning)\u7b97\u6cd5\u3002\u4e0e \u201c\u5728\u7ebf\u5b66\u4e60\u201d \u76f8\u5bf9\u5e94\uff0c\u4e00\u6b21\u5904\u7406\u6240\u6709\u6570\u636e\u88ab\u79f0\u4f5c\u662f \u201c\u6279\u5904\u7406\u201d \uff08batch\uff09 \u3002  \u968f\u673a\u68af\u5ea6\u4e0a\u5347\u7b97\u6cd5\u53ef\u4ee5\u5199\u6210\u5982\u4e0b\u7684\u4f2a\u4ee3\u7801:   \u6240\u6709\u56de\u5f52\u7cfb\u6570\u521d\u59cb\u5316\u4e3a 1\n\u5bf9\u6570\u636e\u96c6\u4e2d\u6bcf\u4e2a\u6837\u672c\n    \u8ba1\u7b97\u8be5\u6837\u672c\u7684\u68af\u5ea6\n    \u4f7f\u7528 alpha x gradient \u66f4\u65b0\u56de\u5f52\u7cfb\u6570\u503c\n\u8fd4\u56de\u56de\u5f52\u7cfb\u6570\u503c  \u4ee5\u4e0b\u662f\u968f\u673a\u68af\u5ea6\u4e0a\u5347\u7b97\u6cd5\u7684\u5b9e\u73b0\u4ee3\u7801:   # \u968f\u673a\u68af\u5ea6\u4e0a\u5347  # \u68af\u5ea6\u4e0a\u5347\u4f18\u5316\u7b97\u6cd5\u5728\u6bcf\u6b21\u66f4\u65b0\u6570\u636e\u96c6\u65f6\u90fd\u9700\u8981\u904d\u5386\u6574\u4e2a\u6570\u636e\u96c6\uff0c\u8ba1\u7b97\u590d\u6742\u90fd\u8f83\u9ad8  # \u968f\u673a\u68af\u5ea6\u4e0a\u5347\u4e00\u6b21\u53ea\u7528\u4e00\u4e2a\u6837\u672c\u70b9\u6765\u66f4\u65b0\u56de\u5f52\u7cfb\u6570  def   stocGradAscent0 ( dataMatrix ,   classLabels ): \n     m , n   =   shape ( dataMatrix ) \n     alpha   =   0.01 \n     # n*1\u7684\u77e9\u9635 \n     # \u51fd\u6570ones\u521b\u5efa\u4e00\u4e2a\u51681\u7684\u6570\u7ec4 \n     weights   =   ones ( n )     # \u521d\u59cb\u5316\u957f\u5ea6\u4e3an\u7684\u6570\u7ec4\uff0c\u5143\u7d20\u5168\u90e8\u4e3a 1 \n     for   i   in   range ( m ): \n         # sum(dataMatrix[i]*weights)\u4e3a\u4e86\u6c42 f(x)\u7684\u503c\uff0c f(x)=a1*x1+b2*x2+..+nn*xn,\u6b64\u5904\u6c42\u51fa\u7684 h \u662f\u4e00\u4e2a\u5177\u4f53\u7684\u6570\u503c\uff0c\u800c\u4e0d\u662f\u4e00\u4e2a\u77e9\u9635 \n         h   =   sigmoid ( sum ( dataMatrix [ i ] * weights )) \n         # print  dataMatrix[i]=== , dataMatrix[i] \n         # \u8ba1\u7b97\u771f\u5b9e\u7c7b\u522b\u4e0e\u9884\u6d4b\u7c7b\u522b\u4e4b\u95f4\u7684\u5dee\u503c\uff0c\u7136\u540e\u6309\u7167\u8be5\u5dee\u503c\u8c03\u6574\u56de\u5f52\u7cfb\u6570 \n         error   =   classLabels [ i ]   -   h \n         # 0.01*(1*1)*(1*n) \n         print   weights ,   * * 10   ,   dataMatrix [ i ],   * * 10   ,   error \n         weights   =   weights   +   alpha   *   error   *   dataMatrix [ i ] \n     return   weights   \u53ef\u4ee5\u770b\u5230\uff0c\u968f\u673a\u68af\u5ea6\u4e0a\u5347\u7b97\u6cd5\u4e0e\u68af\u5ea6\u4e0a\u5347\u7b97\u6cd5\u5728\u4ee3\u7801\u4e0a\u5f88\u76f8\u4f3c\uff0c\u4f46\u4e5f\u6709\u4e00\u4e9b\u533a\u522b: \u7b2c\u4e00\uff0c\u540e\u8005\u7684\u53d8\u91cf h \u548c\u8bef\u5dee error \u90fd\u662f\u5411\u91cf\uff0c\u800c\u524d\u8005\u5219\u5168\u662f\u6570\u503c\uff1b\u7b2c\u4e8c\uff0c\u524d\u8005\u6ca1\u6709\u77e9\u9635\u7684\u8f6c\u6362\u8fc7\u7a0b\uff0c\u6240\u6709\u53d8\u91cf\u7684\u6570\u636e\u7c7b\u578b\u90fd\u662f NumPy \u6570\u7ec4\u3002  \u5224\u65ad\u4f18\u5316\u7b97\u6cd5\u4f18\u52a3\u7684\u53ef\u9760\u65b9\u6cd5\u662f\u770b\u5b83\u662f\u5426\u6536\u655b\uff0c\u4e5f\u5c31\u662f\u8bf4\u53c2\u6570\u662f\u5426\u8fbe\u5230\u4e86\u7a33\u5b9a\u503c\uff0c\u662f\u5426\u8fd8\u4f1a\u4e0d\u65ad\u5730\u53d8\u5316\uff1f\u4e0b\u56fe\u5c55\u793a\u4e86\u968f\u673a\u68af\u5ea6\u4e0a\u5347\u7b97\u6cd5\u5728 200 \u6b21\u8fed\u4ee3\u8fc7\u7a0b\u4e2d\u56de\u5f52\u7cfb\u6570\u7684\u53d8\u5316\u60c5\u51b5\u3002\u5176\u4e2d\u7684\u7cfb\u65702\uff0c\u4e5f\u5c31\u662f X2 \u53ea\u7ecf\u8fc7\u4e86 50 \u6b21\u8fed\u4ee3\u5c31\u8fbe\u5230\u4e86\u7a33\u5b9a\u503c\uff0c\u4f46\u7cfb\u6570 1 \u548c 0 \u5219\u9700\u8981\u66f4\u591a\u6b21\u7684\u8fed\u4ee3\u3002\u5982\u4e0b\u56fe\u6240\u793a:    \u9488\u5bf9\u8fd9\u4e2a\u95ee\u9898\uff0c\u6211\u4eec\u6539\u8fdb\u4e86\u4e4b\u524d\u7684\u968f\u673a\u68af\u5ea6\u4e0a\u5347\u7b97\u6cd5\uff0c\u5982\u4e0b:   # \u968f\u673a\u68af\u5ea6\u4e0a\u5347\u7b97\u6cd5\uff08\u968f\u673a\u5316\uff09  def   stocGradAscent1 ( dataMatrix ,   classLabels ,   numIter = 150 ): \n     m , n   =   shape ( dataMatrix ) \n     weights   =   ones ( n )     # \u521b\u5efa\u4e0e\u5217\u6570\u76f8\u540c\u7684\u77e9\u9635\u7684\u7cfb\u6570\u77e9\u9635\uff0c\u6240\u6709\u7684\u5143\u7d20\u90fd\u662f1 \n     # \u968f\u673a\u68af\u5ea6, \u5faa\u73af150,\u89c2\u5bdf\u662f\u5426\u6536\u655b \n     for   j   in   range ( numIter ): \n         # [0, 1, 2 .. m-1] \n         dataIndex   =   range ( m ) \n         for   i   in   range ( m ): \n             # i\u548cj\u7684\u4e0d\u65ad\u589e\u5927\uff0c\u5bfc\u81f4alpha\u7684\u503c\u4e0d\u65ad\u51cf\u5c11\uff0c\u4f46\u662f\u4e0d\u4e3a0 \n             alpha   =   4 / ( 1.0 + j + i ) + 0.0001      # alpha \u4f1a\u968f\u7740\u8fed\u4ee3\u4e0d\u65ad\u51cf\u5c0f\uff0c\u4f46\u6c38\u8fdc\u4e0d\u4f1a\u51cf\u5c0f\u52300\uff0c\u56e0\u4e3a\u540e\u8fb9\u8fd8\u6709\u4e00\u4e2a\u5e38\u6570\u98790.0001 \n             # \u968f\u673a\u4ea7\u751f\u4e00\u4e2a 0\uff5elen()\u4e4b\u95f4\u7684\u4e00\u4e2a\u503c \n             # random.uniform(x, y) \u65b9\u6cd5\u5c06\u968f\u673a\u751f\u6210\u4e0b\u4e00\u4e2a\u5b9e\u6570\uff0c\u5b83\u5728[x,y]\u8303\u56f4\u5185,x\u662f\u8fd9\u4e2a\u8303\u56f4\u5185\u7684\u6700\u5c0f\u503c\uff0cy\u662f\u8fd9\u4e2a\u8303\u56f4\u5185\u7684\u6700\u5927\u503c\u3002 \n             randIndex   =   int ( random . uniform ( 0 , len ( dataIndex ))) \n             # sum(dataMatrix[i]*weights)\u4e3a\u4e86\u6c42 f(x)\u7684\u503c\uff0c f(x)=a1*x1+b2*x2+..+nn*xn \n             h   =   sigmoid ( sum ( dataMatrix [ randIndex ] * weights )) \n             error   =   classLabels [ randIndex ]   -   h \n             # print weights,  __h=%s  % h,  __ *20, alpha,  __ *20, error,  __ *20, dataMatrix[randIndex] \n             weights   =   weights   +   alpha   *   error   *   dataMatrix [ randIndex ] \n             del ( dataIndex [ randIndex ]) \n     return   weights   \u4e0a\u9762\u7684\u6539\u8fdb\u7248\u968f\u673a\u68af\u5ea6\u4e0a\u5347\u7b97\u6cd5\uff0c\u6211\u4eec\u4fee\u6539\u4e86\u4e24\u5904\u4ee3\u7801\u3002  \u7b2c\u4e00\u5904\u6539\u8fdb\u4e3a alpha \u7684\u503c\u3002alpha \u5728\u6bcf\u6b21\u8fed\u4ee3\u7684\u65f6\u5019\u90fd\u4f1a\u8c03\u6574\uff0c\u8fd9\u56de\u7f13\u89e3\u4e0a\u9762\u6ce2\u52a8\u56fe\u7684\u6570\u636e\u6ce2\u52a8\u6216\u8005\u9ad8\u9891\u6ce2\u52a8\u3002\u53e6\u5916\uff0c\u867d\u7136 alpha \u4f1a\u968f\u7740\u8fed\u4ee3\u6b21\u6570\u4e0d\u65ad\u51cf\u5c11\uff0c\u4f46\u6c38\u8fdc\u4e0d\u4f1a\u51cf\u5c0f\u5230 0\uff0c\u56e0\u4e3a\u6211\u4eec\u5728\u8ba1\u7b97\u516c\u5f0f\u4e2d\u6dfb\u52a0\u4e86\u4e00\u4e2a\u5e38\u6570\u9879\u3002  \u7b2c\u4e8c\u5904\u4fee\u6539\u4e3a randIndex \u66f4\u65b0\uff0c\u8fd9\u91cc\u901a\u8fc7\u968f\u673a\u9009\u53d6\u6837\u672c\u62c9\u6765\u66f4\u65b0\u56de\u5f52\u7cfb\u6570\u3002\u8fd9\u79cd\u65b9\u6cd5\u5c06\u51cf\u5c11\u5468\u671f\u6027\u7684\u6ce2\u52a8\u3002\u8fd9\u79cd\u65b9\u6cd5\u6bcf\u6b21\u968f\u673a\u4ece\u5217\u8868\u4e2d\u9009\u51fa\u4e00\u4e2a\u503c\uff0c\u7136\u540e\u4ece\u5217\u8868\u4e2d\u5220\u6389\u8be5\u503c\uff08\u518d\u8fdb\u884c\u4e0b\u4e00\u6b21\u8fed\u4ee3\uff09\u3002  \u7a0b\u5e8f\u8fd0\u884c\u4e4b\u540e\u80fd\u770b\u5230\u7c7b\u4f3c\u4e8e\u4e0b\u56fe\u7684\u7ed3\u679c\u56fe\u3002", 
            "title": "\u6ce8\u610f"
        }, 
        {
            "location": "/\u4e66\u7c4d/\u673a\u5668\u5b66\u4e60\u5b9e\u6218/05.Logistic\u56de\u5f52/#2", 
            "text": "\u5b8c\u6574\u4ee3\u7801\u5730\u5740 :  https://github.com/apachecn/MachineLearning/blob/master/src/python/5.Logistic/logistic.py", 
            "title": "\u9879\u76ee\u6848\u4f8b2: \u4ece\u759d\u6c14\u75c5\u75c7\u9884\u6d4b\u75c5\u9a6c\u7684\u6b7b\u4ea1\u7387"
        }, 
        {
            "location": "/\u4e66\u7c4d/\u673a\u5668\u5b66\u4e60\u5b9e\u6218/05.Logistic\u56de\u5f52/#_12", 
            "text": "\u4f7f\u7528 Logistic \u56de\u5f52\u6765\u9884\u6d4b\u60a3\u6709\u759d\u75c5\u7684\u9a6c\u7684\u5b58\u6d3b\u95ee\u9898\u3002\u759d\u75c5\u662f\u63cf\u8ff0\u9a6c\u80c3\u80a0\u75db\u7684\u672f\u8bed\u3002\u7136\u800c\uff0c\u8fd9\u79cd\u75c5\u4e0d\u4e00\u5b9a\u6e90\u81ea\u9a6c\u7684\u80c3\u80a0\u95ee\u9898\uff0c\u5176\u4ed6\u95ee\u9898\u4e5f\u53ef\u80fd\u5f15\u53d1\u9a6c\u759d\u75c5\u3002\u8fd9\u4e2a\u6570\u636e\u96c6\u4e2d\u5305\u542b\u4e86\u533b\u9662\u68c0\u6d4b\u9a6c\u759d\u75c5\u7684\u4e00\u4e9b\u6307\u6807\uff0c\u6709\u7684\u6307\u6807\u6bd4\u8f83\u4e3b\u89c2\uff0c\u6709\u7684\u6307\u6807\u96be\u4ee5\u6d4b\u91cf\uff0c\u4f8b\u5982\u9a6c\u7684\u75bc\u75db\u7ea7\u522b\u3002", 
            "title": "\u9879\u76ee\u6982\u8ff0"
        }, 
        {
            "location": "/\u4e66\u7c4d/\u673a\u5668\u5b66\u4e60\u5b9e\u6218/05.Logistic\u56de\u5f52/#_13", 
            "text": "\u6536\u96c6\u6570\u636e: \u7ed9\u5b9a\u6570\u636e\u6587\u4ef6\n\u51c6\u5907\u6570\u636e: \u7528 Python \u89e3\u6790\u6587\u672c\u6587\u4ef6\u5e76\u586b\u5145\u7f3a\u5931\u503c\n\u5206\u6790\u6570\u636e: \u53ef\u89c6\u5316\u5e76\u89c2\u5bdf\u6570\u636e\n\u8bad\u7ec3\u7b97\u6cd5: \u4f7f\u7528\u4f18\u5316\u7b97\u6cd5\uff0c\u627e\u5230\u6700\u4f73\u7684\u7cfb\u6570\n\u6d4b\u8bd5\u7b97\u6cd5: \u4e3a\u4e86\u91cf\u5316\u56de\u5f52\u7684\u6548\u679c\uff0c\u9700\u8981\u89c2\u5bdf\u9519\u8bef\u7387\u3002\u6839\u636e\u9519\u8bef\u7387\u51b3\u5b9a\u662f\u5426\u56de\u9000\u5230\u8bad\u7ec3\u9636\u6bb5\uff0c\n         \u901a\u8fc7\u6539\u53d8\u8fed\u4ee3\u7684\u6b21\u6570\u548c\u6b65\u957f\u7684\u53c2\u6570\u6765\u5f97\u5230\u66f4\u597d\u7684\u56de\u5f52\u7cfb\u6570\n\u4f7f\u7528\u7b97\u6cd5: \u5b9e\u73b0\u4e00\u4e2a\u7b80\u5355\u7684\u547d\u4ee4\u884c\u7a0b\u5e8f\u6765\u624b\u673a\u9a6c\u7684\u75c7\u72b6\u5e76\u8f93\u51fa\u9884\u6d4b\u7ed3\u679c\u5e76\u975e\u96be\u4e8b\uff0c\n         \u8fd9\u53ef\u4ee5\u4f5c\u4e3a\u7559\u7ed9\u5927\u5bb6\u7684\u4e00\u9053\u4e60\u9898   \u6536\u96c6\u6570\u636e: \u7ed9\u5b9a\u6570\u636e\u6587\u4ef6   \u75c5\u9a6c\u7684\u8bad\u7ec3\u6570\u636e\u5df2\u7ecf\u7ed9\u51fa\u6765\u4e86\uff0c\u5982\u4e0b\u5f62\u5f0f\u5b58\u50a8\u5728\u6587\u672c\u6587\u4ef6\u4e2d:  1.000000    1.000000    39.200000   88.000000   20.000000   0.000000    0.000000    4.000000    1.000000    3.000000    4.000000    2.000000    0.000000    0.000000    0.000000    4.000000    2.000000    50.000000   85.000000   2.000000    2.000000    0.000000\n2.000000    1.000000    38.300000   40.000000   24.000000   1.000000    1.000000    3.000000    1.000000    3.000000    3.000000    1.000000    0.000000    0.000000    0.000000    1.000000    1.000000    33.000000   6.700000    0.000000    0.000000    1.000000   \u51c6\u5907\u6570\u636e: \u7528 Python \u89e3\u6790\u6587\u672c\u6587\u4ef6\u5e76\u586b\u5145\u7f3a\u5931\u503c   \u5904\u7406\u6570\u636e\u4e2d\u7684\u7f3a\u5931\u503c  \u5047\u8bbe\u6709100\u4e2a\u6837\u672c\u548c20\u4e2a\u7279\u5f81\uff0c\u8fd9\u4e9b\u6570\u636e\u90fd\u662f\u673a\u5668\u6536\u96c6\u56de\u6765\u7684\u3002\u82e5\u673a\u5668\u4e0a\u7684\u67d0\u4e2a\u4f20\u611f\u5668\u635f\u574f\u5bfc\u81f4\u4e00\u4e2a\u7279\u5f81\u65e0\u6548\u65f6\u8be5\u600e\u4e48\u529e\uff1f\u6b64\u65f6\u662f\u5426\u8981\u6254\u6389\u6574\u4e2a\u6570\u636e\uff1f\u8fd9\u79cd\u60c5\u51b5\u4e0b\uff0c\u53e6\u591619\u4e2a\u7279\u5f81\u600e\u4e48\u529e\uff1f\n\u5b83\u4eec\u662f\u5426\u8fd8\u53ef\u4ee5\u7528\uff1f\u7b54\u6848\u662f\u80af\u5b9a\u7684\u3002\u56e0\u4e3a\u6709\u65f6\u5019\u6570\u636e\u76f8\u5f53\u6602\u8d35\uff0c\u6254\u6389\u548c\u91cd\u65b0\u83b7\u53d6\u90fd\u662f\u4e0d\u53ef\u53d6\u7684\uff0c\u6240\u4ee5\u5fc5\u987b\u91c7\u7528\u4e00\u4e9b\u65b9\u6cd5\u6765\u89e3\u51b3\u8fd9\u4e2a\u95ee\u9898\u3002  \u4e0b\u9762\u7ed9\u51fa\u4e86\u4e00\u4e9b\u53ef\u9009\u7684\u505a\u6cd5\uff1a\n* \u4f7f\u7528\u53ef\u7528\u7279\u5f81\u7684\u5747\u503c\u6765\u586b\u8865\u7f3a\u5931\u503c\uff1b\n* \u4f7f\u7528\u7279\u6b8a\u503c\u6765\u586b\u8865\u7f3a\u5931\u503c\uff0c\u5982 -1\uff1b\n* \u5ffd\u7565\u6709\u7f3a\u5931\u503c\u7684\u6837\u672c\uff1b\n* \u4f7f\u7528\u6709\u76f8\u4f3c\u6837\u672c\u7684\u5747\u503c\u6dfb\u8865\u7f3a\u5931\u503c\uff1b\n* \u4f7f\u7528\u53e6\u5916\u7684\u673a\u5668\u5b66\u4e60\u7b97\u6cd5\u9884\u6d4b\u7f3a\u5931\u503c\u3002  \u73b0\u5728\uff0c\u6211\u4eec\u5bf9\u4e0b\u4e00\u8282\u8981\u7528\u7684\u6570\u636e\u96c6\u8fdb\u884c\u9884\u5904\u7406\uff0c\u4f7f\u5176\u53ef\u4ee5\u987a\u5229\u5730\u4f7f\u7528\u5206\u7c7b\u7b97\u6cd5\u3002\u5728\u9884\u5904\u7406\u9700\u8981\u505a\u4e24\u4ef6\u4e8b: \n* \u6240\u6709\u7684\u7f3a\u5931\u503c\u5fc5\u987b\u7528\u4e00\u4e2a\u5b9e\u6570\u503c\u6765\u66ff\u6362\uff0c\u56e0\u4e3a\u6211\u4eec\u4f7f\u7528\u7684 NumPy \u6570\u636e\u7c7b\u578b\u4e0d\u5141\u8bb8\u5305\u542b\u7f3a\u5931\u503c\u3002\u6211\u4eec\u8fd9\u91cc\u9009\u62e9\u5b9e\u6570 0 \u6765\u66ff\u6362\u6240\u6709\u7f3a\u5931\u503c\uff0c\u6070\u597d\u80fd\u9002\u7528\u4e8e Logistic \u56de\u5f52\u3002\u8fd9\u6837\u505a\u7684\u76f4\u89c9\u5728\u4e8e\uff0c\u6211\u4eec\u9700\u8981\u7684\u662f\u4e00\u4e2a\u5728\u66f4\u65b0\u65f6\u4e0d\u4f1a\u5f71\u54cd\u7cfb\u6570\u7684\u503c\u3002\u56de\u5f52\u7cfb\u6570\u7684\u66f4\u65b0\u516c\u5f0f\u5982\u4e0b:  weights = weights + alpha * error * dataMatrix[randIndex]\n\n\u5982\u679c dataMatrix \u7684\u67d0\u4e2a\u7279\u5f81\u5bf9\u5e94\u503c\u4e3a 0\uff0c\u90a3\u4e48\u8be5\u7279\u5f81\u7684\u7cfb\u6570\u5c06\u4e0d\u505a\u66f4\u65b0\uff0c\u5373:\n\nweights = weights\n\n\u53e6\u5916\uff0c\u7531\u4e8e Sigmoid(0) = 0.5 \uff0c\u5373\u5b83\u5bf9\u7ed3\u679c\u7684\u9884\u6d4b\u4e0d\u5177\u6709\u4efb\u4f55\u503e\u5411\u6027\uff0c\u56e0\u6b64\u6211\u4eec\u4e0a\u8ff0\u505a\u6cd5\u4e5f\u4e0d\u4f1a\u5bf9\u8bef\u5dee\u9020\u6210\u4efb\u4f55\u5f71\u54cd\u3002\u57fa\u4e8e\u4e0a\u8ff0\u539f\u56e0\uff0c\u5c06\u7f3a\u5931\u503c\u7528 0 \u4ee3\u66ff\u65e2\u53ef\u4ee5\u4fdd\u7559\u73b0\u6709\u6570\u636e\uff0c\u4e5f\u4e0d\u9700\u8981\u5bf9\u4f18\u5316\u7b97\u6cd5\u8fdb\u884c\u4fee\u6539\u3002\u6b64\u5916\uff0c\u8be5\u6570\u636e\u96c6\u4e2d\u7684\u7279\u5f81\u53d6\u503c\u4e00\u822c\u4e0d\u4e3a 0\uff0c\u56e0\u6b64\u5728\u67d0\u79cd\u610f\u4e49\u4e0a\u8bf4\u5b83\u4e5f\u6ee1\u8db3 \u201c\u7279\u6b8a\u503c\u201d \u8fd9\u4e2a\u8981\u6c42\u3002   \u5982\u679c\u5728\u6d4b\u8bd5\u6570\u636e\u96c6\u4e2d\u53d1\u73b0\u4e86\u4e00\u6761\u6570\u636e\u7684\u7c7b\u522b\u6807\u7b7e\u5df2\u7ecf\u7f3a\u5931\uff0c\u90a3\u4e48\u6211\u4eec\u7684\u7b80\u5355\u505a\u6cd5\u662f\u5c06\u8be5\u6761\u6570\u636e\u4e22\u5f03\u3002\u8fd9\u662f\u56e0\u4e3a\u7c7b\u522b\u6807\u7b7e\u4e0e\u7279\u5f81\u4e0d\u540c\uff0c\u5f88\u96be\u786e\u5b9a\u91c7\u7528\u67d0\u4e2a\u5408\u9002\u7684\u503c\u6765\u66ff\u6362\u3002\u91c7\u7528 Logistic \u56de\u5f52\u8fdb\u884c\u5206\u7c7b\u65f6\u8fd9\u79cd\u505a\u6cd5\u662f\u5408\u7406\u7684\uff0c\u800c\u5982\u679c\u91c7\u7528\u7c7b\u4f3c kNN \u7684\u65b9\u6cd5\u5c31\u4fdd\u7559\u8be5\u6761\u6570\u636e\u663e\u5f97\u66f4\u52a0\u5408\u7406\u3002   \u539f\u59cb\u7684\u6570\u636e\u96c6\u7ecf\u8fc7\u9884\u5904\u7406\u540e\uff0c\u4fdd\u5b58\u6210\u4e24\u4e2a\u6587\u4ef6: horseColicTest.txt \u548c horseColicTraining.txt \u3002    \u5206\u6790\u6570\u636e: \u53ef\u89c6\u5316\u5e76\u89c2\u5bdf\u6570\u636e   \u5c06\u6570\u636e\u4f7f\u7528 MatPlotlib \u6253\u5370\u51fa\u6765\uff0c\u89c2\u5bdf\u6570\u636e\u662f\u5426\u662f\u6211\u4eec\u60f3\u8981\u7684\u683c\u5f0f   \u8bad\u7ec3\u7b97\u6cd5: \u4f7f\u7528\u4f18\u5316\u7b97\u6cd5\uff0c\u627e\u5230\u6700\u4f73\u7684\u7cfb\u6570   \u4e0b\u9762\u7ed9\u51fa \u539f\u59cb\u7684\u68af\u5ea6\u4e0a\u5347\u7b97\u6cd5\uff0c\u968f\u673a\u68af\u5ea6\u4e0a\u5347\u7b97\u6cd5\uff0c\u6539\u8fdb\u7248\u968f\u673a\u68af\u5ea6\u4e0a\u5347\u7b97\u6cd5 \u7684\u4ee3\u7801:   # \u6b63\u5e38\u7684\u5904\u7406\u65b9\u6848  # \u4e24\u4e2a\u53c2\u6570\uff1a\u7b2c\u4e00\u4e2a\u53c2\u6570==  dataMatIn \u662f\u4e00\u4e2a2\u7ef4NumPy\u6570\u7ec4\uff0c\u6bcf\u5217\u5206\u522b\u4ee3\u8868\u6bcf\u4e2a\u4e0d\u540c\u7684\u7279\u5f81\uff0c\u6bcf\u884c\u5219\u4ee3\u8868\u6bcf\u4e2a\u8bad\u7ec3\u6837\u672c\u3002  # \u7b2c\u4e8c\u4e2a\u53c2\u6570==  classLabels \u662f\u7c7b\u522b\u6807\u7b7e\uff0c\u5b83\u662f\u4e00\u4e2a 1*100 \u7684\u884c\u5411\u91cf\u3002\u4e3a\u4e86\u4fbf\u4e8e\u77e9\u9635\u8ba1\u7b97\uff0c\u9700\u8981\u5c06\u8be5\u884c\u5411\u91cf\u8f6c\u6362\u4e3a\u5217\u5411\u91cf\uff0c\u505a\u6cd5\u662f\u5c06\u539f\u5411\u91cf\u8f6c\u7f6e\uff0c\u518d\u5c06\u5b83\u8d4b\u503c\u7ed9labelMat\u3002  def   gradAscent ( dataMatIn ,   classLabels ): \n     # \u8f6c\u5316\u4e3a\u77e9\u9635[[1,1,2],[1,1,2]....] \n     dataMatrix   =   mat ( dataMatIn )               # \u8f6c\u6362\u4e3a NumPy \u77e9\u9635 \n     # \u8f6c\u5316\u4e3a\u77e9\u9635[[0,1,0,1,0,1.....]]\uff0c\u5e76\u8f6c\u5236[[0],[1],[0].....] \n     # transpose() \u884c\u5217\u8f6c\u7f6e\u51fd\u6570 \n     # \u5c06\u884c\u5411\u91cf\u8f6c\u5316\u4e3a\u5217\u5411\u91cf   =   \u77e9\u9635\u7684\u8f6c\u7f6e \n     labelMat   =   mat ( classLabels ) . transpose ()   # \u9996\u5148\u5c06\u6570\u7ec4\u8f6c\u6362\u4e3a NumPy \u77e9\u9635\uff0c\u7136\u540e\u518d\u5c06\u884c\u5411\u91cf\u8f6c\u7f6e\u4e3a\u5217\u5411\u91cf \n     # m- \u6570\u636e\u91cf\uff0c\u6837\u672c\u6570 n- \u7279\u5f81\u6570 \n     m , n   =   shape ( dataMatrix ) \n     # print m, n,  __ *10, shape(dataMatrix.transpose()),  __ *100 \n     # alpha\u4ee3\u8868\u5411\u76ee\u6807\u79fb\u52a8\u7684\u6b65\u957f \n     alpha   =   0.001 \n     # \u8fed\u4ee3\u6b21\u6570 \n     maxCycles   =   500 \n     # \u751f\u6210\u4e00\u4e2a\u957f\u5ea6\u548c\u7279\u5f81\u6570\u76f8\u540c\u7684\u77e9\u9635\uff0c\u6b64\u5904n\u4e3a3 -  [[1],[1],[1]] \n     # weights \u4ee3\u8868\u56de\u5f52\u7cfb\u6570\uff0c \u6b64\u5904\u7684 ones((n,1)) \u521b\u5efa\u4e00\u4e2a\u957f\u5ea6\u548c\u7279\u5f81\u6570\u76f8\u540c\u7684\u77e9\u9635\uff0c\u5176\u4e2d\u7684\u6570\u5168\u90e8\u90fd\u662f 1 \n     weights   =   ones (( n , 1 )) \n     for   k   in   range ( maxCycles ):                #heavy on matrix operations \n         # m*3 \u7684\u77e9\u9635 * 3*1 \u7684\u5355\u4f4d\u77e9\u9635 \uff1d m*1\u7684\u77e9\u9635 \n         # \u90a3\u4e48\u4e58\u4e0a\u5355\u4f4d\u77e9\u9635\u7684\u610f\u4e49\uff0c\u5c31\u4ee3\u8868\uff1a\u901a\u8fc7\u516c\u5f0f\u5f97\u5230\u7684\u7406\u8bba\u503c \n         # \u53c2\u8003\u5730\u5740\uff1a \u77e9\u9635\u4e58\u6cd5\u7684\u672c\u8d28\u662f\u4ec0\u4e48\uff1f https://www.zhihu.com/question/21351965/answer/31050145 \n         # print  dataMatrix==== , dataMatrix  \n         # print  weights==== , weights \n         # n*3   *  3*1  = n*1 \n         h   =   sigmoid ( dataMatrix * weights )       # \u77e9\u9635\u4e58\u6cd5 \n         # print  hhhhhhh==== , h \n         # labelMat\u662f\u5b9e\u9645\u503c \n         error   =   ( labelMat   -   h )                # \u5411\u91cf\u76f8\u51cf \n         # 0.001* (3*m)*(m*1) \u8868\u793a\u5728\u6bcf\u4e00\u4e2a\u5217\u4e0a\u7684\u4e00\u4e2a\u8bef\u5dee\u60c5\u51b5\uff0c\u6700\u540e\u5f97\u51fa x1,x2,xn\u7684\u7cfb\u6570\u7684\u504f\u79fb\u91cf \n         weights   =   weights   +   alpha   *   dataMatrix . transpose ()   *   error   # \u77e9\u9635\u4e58\u6cd5\uff0c\u6700\u540e\u5f97\u5230\u56de\u5f52\u7cfb\u6570 \n     return   array ( weights )  # \u968f\u673a\u68af\u5ea6\u4e0a\u5347  # \u68af\u5ea6\u4e0a\u5347\u4f18\u5316\u7b97\u6cd5\u5728\u6bcf\u6b21\u66f4\u65b0\u6570\u636e\u96c6\u65f6\u90fd\u9700\u8981\u904d\u5386\u6574\u4e2a\u6570\u636e\u96c6\uff0c\u8ba1\u7b97\u590d\u6742\u90fd\u8f83\u9ad8  # \u968f\u673a\u68af\u5ea6\u4e0a\u5347\u4e00\u6b21\u53ea\u7528\u4e00\u4e2a\u6837\u672c\u70b9\u6765\u66f4\u65b0\u56de\u5f52\u7cfb\u6570  def   stocGradAscent0 ( dataMatrix ,   classLabels ): \n     m , n   =   shape ( dataMatrix ) \n     alpha   =   0.01 \n     # n*1\u7684\u77e9\u9635 \n     # \u51fd\u6570ones\u521b\u5efa\u4e00\u4e2a\u51681\u7684\u6570\u7ec4 \n     weights   =   ones ( n )     # \u521d\u59cb\u5316\u957f\u5ea6\u4e3an\u7684\u6570\u7ec4\uff0c\u5143\u7d20\u5168\u90e8\u4e3a 1 \n     for   i   in   range ( m ): \n         # sum(dataMatrix[i]*weights)\u4e3a\u4e86\u6c42 f(x)\u7684\u503c\uff0c f(x)=a1*x1+b2*x2+..+nn*xn,\u6b64\u5904\u6c42\u51fa\u7684 h \u662f\u4e00\u4e2a\u5177\u4f53\u7684\u6570\u503c\uff0c\u800c\u4e0d\u662f\u4e00\u4e2a\u77e9\u9635 \n         h   =   sigmoid ( sum ( dataMatrix [ i ] * weights )) \n         # print  dataMatrix[i]=== , dataMatrix[i] \n         # \u8ba1\u7b97\u771f\u5b9e\u7c7b\u522b\u4e0e\u9884\u6d4b\u7c7b\u522b\u4e4b\u95f4\u7684\u5dee\u503c\uff0c\u7136\u540e\u6309\u7167\u8be5\u5dee\u503c\u8c03\u6574\u56de\u5f52\u7cfb\u6570 \n         error   =   classLabels [ i ]   -   h \n         # 0.01*(1*1)*(1*n) \n         print   weights ,   * * 10   ,   dataMatrix [ i ],   * * 10   ,   error \n         weights   =   weights   +   alpha   *   error   *   dataMatrix [ i ] \n     return   weights  # \u968f\u673a\u68af\u5ea6\u4e0a\u5347\u7b97\u6cd5\uff08\u968f\u673a\u5316\uff09  def   stocGradAscent1 ( dataMatrix ,   classLabels ,   numIter = 150 ): \n     m , n   =   shape ( dataMatrix ) \n     weights   =   ones ( n )     # \u521b\u5efa\u4e0e\u5217\u6570\u76f8\u540c\u7684\u77e9\u9635\u7684\u7cfb\u6570\u77e9\u9635\uff0c\u6240\u6709\u7684\u5143\u7d20\u90fd\u662f1 \n     # \u968f\u673a\u68af\u5ea6, \u5faa\u73af150,\u89c2\u5bdf\u662f\u5426\u6536\u655b \n     for   j   in   range ( numIter ): \n         # [0, 1, 2 .. m-1] \n         dataIndex   =   range ( m ) \n         for   i   in   range ( m ): \n             # i\u548cj\u7684\u4e0d\u65ad\u589e\u5927\uff0c\u5bfc\u81f4alpha\u7684\u503c\u4e0d\u65ad\u51cf\u5c11\uff0c\u4f46\u662f\u4e0d\u4e3a0 \n             alpha   =   4 / ( 1.0 + j + i ) + 0.0001      # alpha \u4f1a\u968f\u7740\u8fed\u4ee3\u4e0d\u65ad\u51cf\u5c0f\uff0c\u4f46\u6c38\u8fdc\u4e0d\u4f1a\u51cf\u5c0f\u52300\uff0c\u56e0\u4e3a\u540e\u8fb9\u8fd8\u6709\u4e00\u4e2a\u5e38\u6570\u98790.0001 \n             # \u968f\u673a\u4ea7\u751f\u4e00\u4e2a 0\uff5elen()\u4e4b\u95f4\u7684\u4e00\u4e2a\u503c \n             # random.uniform(x, y) \u65b9\u6cd5\u5c06\u968f\u673a\u751f\u6210\u4e0b\u4e00\u4e2a\u5b9e\u6570\uff0c\u5b83\u5728[x,y]\u8303\u56f4\u5185,x\u662f\u8fd9\u4e2a\u8303\u56f4\u5185\u7684\u6700\u5c0f\u503c\uff0cy\u662f\u8fd9\u4e2a\u8303\u56f4\u5185\u7684\u6700\u5927\u503c\u3002 \n             randIndex   =   int ( random . uniform ( 0 , len ( dataIndex ))) \n             # sum(dataMatrix[i]*weights)\u4e3a\u4e86\u6c42 f(x)\u7684\u503c\uff0c f(x)=a1*x1+b2*x2+..+nn*xn \n             h   =   sigmoid ( sum ( dataMatrix [ randIndex ] * weights )) \n             error   =   classLabels [ randIndex ]   -   h \n             # print weights,  __h=%s  % h,  __ *20, alpha,  __ *20, error,  __ *20, dataMatrix[randIndex] \n             weights   =   weights   +   alpha   *   error   *   dataMatrix [ randIndex ] \n             del ( dataIndex [ randIndex ]) \n     return   weights    \u6d4b\u8bd5\u7b97\u6cd5: \u4e3a\u4e86\u91cf\u5316\u56de\u5f52\u7684\u6548\u679c\uff0c\u9700\u8981\u89c2\u5bdf\u9519\u8bef\u7387\u3002\u6839\u636e\u9519\u8bef\u7387\u51b3\u5b9a\u662f\u5426\u56de\u9000\u5230\u8bad\u7ec3\u9636\u6bb5\uff0c\u901a\u8fc7\u6539\u53d8\u8fed\u4ee3\u7684\u6b21\u6570\u548c\u6b65\u957f\u7684\u53c2\u6570\u6765\u5f97\u5230\u66f4\u597d\u7684\u56de\u5f52\u7cfb\u6570   Logistic \u56de\u5f52\u5206\u7c7b\u51fd\u6570  # \u5206\u7c7b\u51fd\u6570\uff0c\u6839\u636e\u56de\u5f52\u7cfb\u6570\u548c\u7279\u5f81\u5411\u91cf\u6765\u8ba1\u7b97 Sigmoid\u7684\u503c  def   classifyVector ( inX ,   weights ): \n          Desc:           \u6700\u7ec8\u7684\u5206\u7c7b\u51fd\u6570\uff0c\u6839\u636e\u56de\u5f52\u7cfb\u6570\u548c\u7279\u5f81\u5411\u91cf\u6765\u8ba1\u7b97 Sigmoid \u7684\u503c\uff0c\u5927\u4e8e0.5\u51fd\u6570\u8fd4\u56de1\uff0c\u5426\u5219\u8fd4\u56de0      Args:          inX -- \u7279\u5f81\u5411\u91cf\uff0cfeatures          weights -- \u6839\u636e\u68af\u5ea6\u4e0b\u964d/\u968f\u673a\u68af\u5ea6\u4e0b\u964d \u8ba1\u7b97\u5f97\u5230\u7684\u56de\u5f52\u7cfb\u6570      Returns:          \u5982\u679c prob \u8ba1\u7b97\u5927\u4e8e 0.5 \u51fd\u6570\u8fd4\u56de 1          \u5426\u5219\u8fd4\u56de 0       \n     prob   =   sigmoid ( sum ( inX * weights )) \n     if   prob     0.5 :   return   1.0 \n     else :   return   0.0  # \u6253\u5f00\u6d4b\u8bd5\u96c6\u548c\u8bad\u7ec3\u96c6,\u5e76\u5bf9\u6570\u636e\u8fdb\u884c\u683c\u5f0f\u5316\u5904\u7406  def   colicTest (): \n          Desc:          \u6253\u5f00\u6d4b\u8bd5\u96c6\u548c\u8bad\u7ec3\u96c6\uff0c\u5e76\u5bf9\u6570\u636e\u8fdb\u884c\u683c\u5f0f\u5316\u5904\u7406      Args:          None      Returns:          errorRate -- \u5206\u7c7b\u9519\u8bef\u7387       \n     frTrain   =   open ( input/5.Logistic/horseColicTraining.txt ) \n     frTest   =   open ( input/5.Logistic/horseColicTest.txt ) \n     trainingSet   =   [] \n     trainingLabels   =   [] \n     # \u89e3\u6790\u8bad\u7ec3\u6570\u636e\u96c6\u4e2d\u7684\u6570\u636e\u7279\u5f81\u548cLabels \n     # trainingSet \u4e2d\u5b58\u50a8\u8bad\u7ec3\u6570\u636e\u96c6\u7684\u7279\u5f81\uff0ctrainingLabels \u5b58\u50a8\u8bad\u7ec3\u6570\u636e\u96c6\u7684\u6837\u672c\u5bf9\u5e94\u7684\u5206\u7c7b\u6807\u7b7e \n     for   line   in   frTrain . readlines (): \n         currLine   =   line . strip () . split ( \\t ) \n         lineArr   =   [] \n         for   i   in   range ( 21 ): \n             lineArr . append ( float ( currLine [ i ])) \n         trainingSet . append ( lineArr ) \n         trainingLabels . append ( float ( currLine [ 21 ])) \n     # \u4f7f\u7528 \u6539\u8fdb\u540e\u7684 \u968f\u673a\u68af\u5ea6\u4e0b\u964d\u7b97\u6cd5 \u6c42\u5f97\u5728\u6b64\u6570\u636e\u96c6\u4e0a\u7684\u6700\u4f73\u56de\u5f52\u7cfb\u6570 trainWeights \n     trainWeights   =   stocGradAscent1 ( array ( trainingSet ),   trainingLabels ,   500 ) \n     errorCount   =   0 \n     numTestVec   =   0.0 \n     # \u8bfb\u53d6 \u6d4b\u8bd5\u6570\u636e\u96c6 \u8fdb\u884c\u6d4b\u8bd5\uff0c\u8ba1\u7b97\u5206\u7c7b\u9519\u8bef\u7684\u6837\u672c\u6761\u6570\u548c\u6700\u7ec8\u7684\u9519\u8bef\u7387 \n     for   line   in   frTest . readlines (): \n         numTestVec   +=   1.0 \n         currLine   =   line . strip () . split ( \\t ) \n         lineArr   =   [] \n         for   i   in   range ( 21 ): \n             lineArr . append ( float ( currLine [ i ])) \n         if   int ( classifyVector ( array ( lineArr ),   trainWeights ))   !=   int ( currLine [ 21 ]): \n             errorCount   +=   1 \n     errorRate   =   ( float ( errorCount )   /   numTestVec ) \n     print   the error rate of this test is:  %f   %   errorRate \n     return   errorRate  # \u8c03\u7528 colicTest() 10\u6b21\u5e76\u6c42\u7ed3\u679c\u7684\u5e73\u5747\u503c  def   multiTest (): \n     numTests   =   10 \n     errorSum   =   0.0 \n     for   k   in   range ( numTests ): \n         errorSum   +=   colicTest () \n     print   after  %d  iterations the average error rate is:  %f   %   ( numTests ,   errorSum / float ( numTests ))     \u4f7f\u7528\u7b97\u6cd5: \u5b9e\u73b0\u4e00\u4e2a\u7b80\u5355\u7684\u547d\u4ee4\u884c\u7a0b\u5e8f\u6765\u624b\u673a\u9a6c\u7684\u75c7\u72b6\u5e76\u8f93\u51fa\u9884\u6d4b\u7ed3\u679c\u5e76\u975e\u96be\u4e8b\uff0c\u8fd9\u53ef\u4ee5\u4f5c\u4e3a\u7559\u7ed9\u5927\u5bb6\u7684\u4e00\u9053\u4e60\u9898", 
            "title": "\u5f00\u53d1\u6d41\u7a0b"
        }, 
        {
            "location": "/\u4e66\u7c4d/\u673a\u5668\u5b66\u4e60\u5b9e\u6218/05.Logistic\u56de\u5f52/#_14", 
            "text": "\u5728\u4e0a\u6587\u4e2d\uff0c\u5f53Sigmoid\u51fd\u6570\u5927\u4e8e 0.5 \u7684\u6570\u636e\u88ab\u5206\u5165 1 \u7c7b\uff0c\u5c0f\u4e8e 0.5 \u5373\u88ab\u5f52\u5165 0 \u7c7b\u3002\u5176\u5b9e0.5\u4e5f\u662f\u53ef\u4ee5\u6539\u52a8\u7684\u3002 \u6bd4\u5982\u5927\u4e8e 0.9 \u7684\u6570\u636e\u88ab\u5206\u5165 1 \u7c7b\uff0c\u5c0f\u4e8e 0.9 \u5373\u88ab\u5f52\u5165 0 \u7c7b\u3002", 
            "title": "\u989d\u5916\u5185\u5bb9(\u53ef\u9009\u8bfb)"
        }, 
        {
            "location": "/\u4e66\u7c4d/\u673a\u5668\u5b66\u4e60\u5b9e\u6218/05.Logistic\u56de\u5f52/#_15", 
            "text": "\u9664\u4e86\u68af\u5ea6\u4e0b\u964d\uff0c\u968f\u673a\u68af\u5ea6\u4e0b\u964d\uff0c\u8fd8\u6709Conjugate Gradient\uff0cBFGS\uff0cL-BFGS\uff0c\u4ed6\u4eec\u4e0d\u9700\u8981\u6307\u5b9aalpha\u503c\uff08\u6b65\u957f\uff09\uff0c\u800c\u4e14\u6bd4\u68af\u5ea6\u4e0b\u964d\u66f4\u5feb\uff0c\u5728\u73b0\u5b9e\u4e2d\u5e94\u7528\u7684\u4e5f\u6bd4\u8f83\u591a\u3002 \u5f53\u7136\u8fd9\u4e9b\u7b97\u6cd5\u76f8\u6bd4\u968f\u673a\u68af\u5ea6\u8981\u590d\u6742\u3002  \u7efc\u4e0a\u8fd9\u4e9b\u7b97\u6cd5\u90fd\u6709\u4e00\u4e2a\u5171\u901a\u7684\u7f3a\u70b9\u5c31\u662f\u4ed6\u4eec\u90fd\u662f\u4e0d\u65ad\u53bb\u903c\u8fd1\u771f\u5b9e\u503c\uff0c\u6c38\u8fdc\u53ea\u662f\u4e00\u4e2a\u771f\u5b9e\u503c\u7684\u8fd1\u4f3c\u503c\u800c\u5df2\u3002", 
            "title": "\u5176\u4ed6\u7b97\u6cd5"
        }, 
        {
            "location": "/\u4e66\u7c4d/\u673a\u5668\u5b66\u4e60\u5b9e\u6218/05.Logistic\u56de\u5f52/#_16", 
            "text": "\u903b\u8f91\u56de\u5f52\u4e5f\u53ef\u4ee5\u7528\u4f5c\u4e8e\u591a\u6807\u7b7e\u5206\u7c7b\u3002 \u601d\u8def\u5982\u4e0b\uff1a  \u5047\u8bbe\u6211\u4eec\u6807\u7b7eA\u4e2d\u6709a0,a1,a2....an\u4e2a\u6807\u7b7e\uff0c\u5bf9\u4e8e\u6bcf\u4e2a\u6807\u7b7e ai (ai \u662f\u6807\u7b7eA\u4e4b\u4e00)\uff0c\u6211\u4eec\u8bad\u7ec3\u4e00\u4e2a\u903b\u8f91\u56de\u5f52\u5206\u7c7b\u5668\u3002  \u5373\uff0c\u8bad\u7ec3\u8be5\u6807\u7b7e\u7684\u903b\u8f91\u56de\u5f52\u5206\u7c7b\u5668\u7684\u65f6\u5019\uff0c\u5c06ai\u770b\u4f5c\u4e00\u7c7b\u6807\u7b7e\uff0c\u975eai\u7684\u6240\u6709\u6807\u7b7e\u770b\u4f5c\u4e00\u7c7b\u6807\u7b7e\u3002\u90a3\u4e48\u76f8\u5f53\u4e8e\u6574\u4e2a\u6570\u636e\u96c6\u91cc\u9762\u53ea\u6709\u4e24\u7c7b\u6807\u7b7e\uff1aai \u548c\u5176\u4ed6\u3002  \u5269\u4e0b\u6b65\u9aa4\u5c31\u8ddf\u6211\u4eec\u8bad\u7ec3\u6b63\u5e38\u7684\u903b\u8f91\u56de\u5f52\u5206\u7c7b\u5668\u4e00\u6837\u4e86\u3002  \u6d4b\u8bd5\u6570\u636e\u7684\u65f6\u5019\uff0c\u5c06\u67e5\u8be2\u70b9\u5957\u7528\u5728\u6bcf\u4e2a\u903b\u8f91\u56de\u5f52\u5206\u7c7b\u5668\u4e2d\u7684Sigmoid \u51fd\u6570\uff0c\u53d6\u503c\u6700\u9ad8\u7684\u5bf9\u5e94\u6807\u7b7e\u4e3a\u67e5\u8be2\u70b9\u7684\u6807\u7b7e\u3002    \u4f5c\u8005\uff1a \u7f8a\u4e09   \u5c0f\u7476  GitHub\u5730\u5740 :  https://github.com/apachecn/MachineLearning  \u7248\u6743\u58f0\u660e\uff1a\u6b22\u8fce\u8f6c\u8f7d\u5b66\u4e60 =  \u8bf7\u6807\u6ce8\u4fe1\u606f\u6765\u6e90\u4e8e  ApacheCN", 
            "title": "\u591a\u6807\u7b7e\u5206\u7c7b"
        }, 
        {
            "location": "/\u4e66\u7c4d/\u673a\u5668\u5b66\u4e60\u5b9e\u6218/06.0.\u652f\u6301\u5411\u91cf\u673a/", 
            "text": "\u7b2c6\u7ae0 \u652f\u6301\u5411\u91cf\u673a\n\n\n\u652f\u6301\u5411\u91cf\u673a \u6982\u8ff0\n\n\n\u652f\u6301\u5411\u91cf\u673a(Support Vector Machines, SVM)\uff1a\u662f\u4e00\u79cd\u673a\u5668\u5b66\u4e60\u7b97\u6cd5\u3002\n* \u652f\u6301\u5411\u91cf(Support Vector)\u5c31\u662f\u79bb\u5206\u9694\u8d85\u5e73\u9762\u6700\u8fd1\u7684\u90a3\u4e9b\u70b9\u3002\n* \u673a(Machine)\u5c31\u662f\u8868\u793a\u4e00\u79cd\u7b97\u6cd5\uff0c\u800c\u4e0d\u662f\u8868\u793a\u673a\u5668\u3002\n\n\n\u652f\u6301\u5411\u91cf\u673a \u573a\u666f\n\n\n\n\n\u8981\u7ed9\u5de6\u53f3\u4e24\u8fb9\u7684\u70b9\u8fdb\u884c\u5206\u7c7b\n\n\n\u660e\u663e\u53d1\u73b0\uff1a\u9009\u62e9D\u4f1a\u6bd4B\u3001C\u5206\u9694\u7684\u6548\u679c\u8981\u597d\u5f88\u591a\u3002\n\n\n\n\n\n\n\u652f\u6301\u5411\u91cf\u673a \u539f\u7406\n\n\nSVM \u5de5\u4f5c\u539f\u7406\n\n\n\n\n\u5bf9\u4e8e\u4e0a\u8ff0\u7684\u82f9\u679c\u548c\u9999\u8549\uff0c\u6211\u4eec\u60f3\u8c61\u4e3a2\u79cd\u6c34\u679c\u7c7b\u578b\u7684\u70b8\u5f39\u3002\uff08\u4fdd\u8bc1\u8ddd\u79bb\u6700\u8fd1\u7684\u70b8\u5f39\uff0c\u8ddd\u79bb\u5b83\u4eec\u6700\u8fdc\uff09\n\n\n\n\n\u5bfb\u627e\u6700\u5927\u5206\u7c7b\u95f4\u8ddd\n\n\n\n\n\u8f6c\u800c\u901a\u8fc7\u62c9\u683c\u6717\u65e5\u51fd\u6570\u6c42\u4f18\u5316\u7684\u95ee\u9898\n\n\n\n\n\n\n\u6570\u636e\u53ef\u4ee5\u901a\u8fc7\u753b\u4e00\u6761\u76f4\u7ebf\u5c31\u53ef\u4ee5\u5c06\u5b83\u4eec\u5b8c\u5168\u5206\u5f00\uff0c\u8fd9\u7ec4\u6570\u636e\u53eb\n\u7ebf\u6027\u53ef\u5206(linearly separable)\n\u6570\u636e\uff0c\u800c\u8fd9\u6761\u5206\u9694\u76f4\u7ebf\u79f0\u4e3a\n\u5206\u9694\u8d85\u5e73\u9762(separating hyperplane)\n\u3002\n\n\n\n\n\u5982\u679c\u6570\u636e\u96c6\u4e0a\u5347\u52301024\u7ef4\u5462\uff1f\u90a3\u4e48\u9700\u89811023\u7ef4\u6765\u5206\u9694\u6570\u636e\u96c6\uff0c\u4e5f\u5c31\u8bf4\u9700\u8981N-1\u7ef4\u7684\u5bf9\u8c61\u6765\u5206\u9694\uff0c\u8fd9\u4e2a\u5bf9\u8c61\u53eb\u505a\n\u8d85\u5e73\u9762(hyperlane)\n\uff0c\u4e5f\u5c31\u662f\u5206\u7c7b\u7684\u51b3\u7b56\u8fb9\u754c\u3002\n\n\n\n\n\n\n\u5bfb\u627e\u6700\u5927\u95f4\u9694\n\n\n\u4e3a\u4ec0\u4e48\u5bfb\u627e\u6700\u5927\u95f4\u9694\n\n\n\u6458\u5f55\u5730\u5740\uff1ahttp://slideplayer.com/slide/8610144  (\u7b2c12\u6761\u4fe1\u606f)\nSupport Vector Machines: Slide 12 Copyright \u00a9 2001, 2003, Andrew W. Moore Why Maximum Margin? \ndenotes +1 denotes -1 f(x,w,b) = sign(w. x - b) The maximum margin linear classifier is the linear classifier with the, um, maximum margin. \nThis is the simplest kind of SVM (Called an LSVM) Support Vectors are those datapoints that the margin pushes up against \n\n1.Intuitively this feels safest. \n2.If we\u2019ve made a small error in the location of the boundary (it\u2019s been jolted in its perpendicular direction) this gives us least chance of causing a misclassification. \n3.CV is easy since the model is immune to removal of any non-support-vector datapoints. \n4.There\u2019s some theory that this is a good thing. \n5.Empirically it works very very well. \n\n* * *\n\n1. \u76f4\u89c9\u4e0a\u662f\u5b89\u5168\u7684\n2. \u5982\u679c\u6211\u4eec\u5728\u8fb9\u754c\u7684\u4f4d\u7f6e\u53d1\u751f\u4e86\u4e00\u4e2a\u5c0f\u9519\u8bef\uff08\u5b83\u5728\u5782\u76f4\u65b9\u5411\u4e0a\u88ab\u98a0\u5012\uff09\uff0c\u8fd9\u7ed9\u6211\u4eec\u6700\u5c0f\u7684\u9519\u8bef\u5206\u7c7b\u673a\u4f1a\u3002\n3. CV\uff08Computer Vision \u8ba1\u7b97\u673a\u89c6\u89c9 - \u8fd9\u7f29\u5199\u770b\u7740\u53ef\u6015\uff09\u5f88\u5bb9\u6613\uff0c\u56e0\u4e3a\u8be5\u6a21\u578b\u5bf9\u4efb\u4f55\u975e\u652f\u6301\u5411\u91cf\u6570\u636e\u70b9\u7684\u53bb\u9664\u662f\u514d\u75ab\u7684\u3002\n4. \u6709\u4e00\u4e9b\u7406\u8bba\uff0c\u8fd9\u662f\u4e00\u4ef6\u597d\u4e8b\u3002\n5. \u901a\u5e38\u5b83\u7684\u5de5\u4f5c\u975e\u5e38\u597d\u3002\n\n\n\n\n\u600e\u4e48\u5bfb\u627e\u6700\u5927\u95f4\u9694\n\n\n\n\n\u70b9\u5230\u8d85\u5e73\u9762\u7684\u8ddd\u79bb\n\n\n\n\n\n\n\u5206\u9694\u8d85\u5e73\u9762\n\u51fd\u6570\u95f4\u8ddd\n: $ y(x)=w^Tx+b $\n\n\n\u5206\u7c7b\u7684\u7ed3\u679c\uff1a $ f(x)=sign(w^Tx+b) $  (sign\u8868\u793a\u7b26\u53f7\u51fd\u6570\uff0c\n0\u4e3a1\uff0c\n0\u4e3a-1\uff0c=0\u4e3a0) \n\n\n\u4fee\u6539\u70b9\u5230\u8d85\u5e73\u9762\u7684 \n\u51e0\u4f55\u95f4\u8ddd\n :  $ d(x)=\\frac{(w^Tx+b)}{\\lVert w \\rVert} $  \uff08 \n\\lVert w \\rVert\n\\lVert w \\rVert\n \u8868\u793aw\u77e9\u9635\u7684\u4e8c\u8303\u5f0f=\n  \n\\sqrt{w*w^T}\n\\sqrt{w*w^T}\n  , \u70b9\u5230\u8d85\u5e73\u9762\u7684\u8ddd\u79bb\u4e5f\u662f\u7c7b\u4f3c\u7684\uff09  \n\n\n\n\n\n\n\n\n\u62c9\u683c\u6717\u65e5\u4e58\u5b50\u6cd5\n\n\n\n\n\n\n\u7c7b\u522b\u6807\u7b7e\u7528-1\u30011\uff0c\u662f\u4e3a\u4e86\u540e\u671f\u65b9\u4fbf  $lable\\bullet(w^Tx+b) $ \u7684\u6807\u8bc6\u548c\u8ddd\u79bb\u8ba1\u7b97\uff1b\u5982\u679c  $ lable\\bullet(w^Tx+b)\n0 $  \u8868\u793a\u9884\u6d4b\u6b63\u786e\uff0c\u5426\u5219\u9884\u6d4b\u9519\u8bef\u3002\n\n\n\u73b0\u5728\u76ee\u6807\u5f88\u660e\u786e\uff0c\u5c31\u662f\u8981\u627e\u5230\nw\n\u548c\nb\n\uff0c\u56e0\u6b64\u6211\u4eec\u5fc5\u987b\u8981\u627e\u5230\u6700\u5c0f\u95f4\u9694\u7684\u6570\u636e\u70b9\uff0c\u4e5f\u5c31\u662f\u524d\u9762\u6240\u8bf4\u7684\n\u652f\u6301\u5411\u91cf\n\u3002\n\n\n\u4e5f\u5c31\u8bf4\uff0c\u8ba9\u6700\u5c0f\u7684\u8ddd\u79bb\u53d6\u6700\u5927.(\u6700\u5c0f\u7684\u8ddd\u79bb\uff1a\u5c31\u662f\u6700\u5c0f\u95f4\u9694\u7684\u6570\u636e\u70b9\uff1b\u6700\u5927\uff1a\u5c31\u662f\u6700\u5927\u95f4\u8ddd\uff0c\u4e3a\u4e86\u627e\u51fa\u6700\u4f18\u8d85\u5e73\u9762--\u6700\u7ec8\u5c31\u662f\u652f\u6301\u5411\u91cf)\n\n\n\u76ee\u6807\u51fd\u6570\uff1a $ arg: max \\left( min[lable\\bullet(w^Tx+b)]\\bullet\\frac{1}{\\lVert w \\rVert} \\right) $ \n\n\n\u5982\u679c  $ lable*(w^Tx+b)\n0 $  \u8868\u793a\u9884\u6d4b\u6b63\u786e\uff0c\u4e5f\u79f0\n\u51fd\u6570\u95f4\u9694\n\uff0c $ \\lVert w \\rVert $  \u53ef\u4ee5\u7406\u89e3\u4e3a\u5f52\u4e00\u5316\uff0c\u4e5f\u79f0\n\u51e0\u4f55\u95f4\u9694\n\u3002\n\n\n\u4ee4  \nlable\\bullet(w^Tx+b)\n=1\nlable\\bullet(w^Tx+b)>=1\n \uff0c \u56e0\u4e3a0\uff5e1\u4e4b\u95f4\uff0c\u5f97\u5230\u7684\u70b9\u662f\u5b58\u5728\u8bef\u5224\u7684\u53ef\u80fd\u6027\uff0c\u6240\u4ee5\u8981\u4fdd\u969c  \nmin[lable\\bullet(w^Tx+b)]=1\nmin[lable\\bullet(w^Tx+b)]=1\n \uff0c\u624d\u80fd\u66f4\u597d\u964d\u4f4e\u566a\u97f3\u6570\u636e\u5f71\u54cd\u3002\n\n\n\u6240\u4ee5\u672c\u8d28\u4e0a\u662f\u6c42  $arg: max_{\u5173\u4e8ew, b}  \\frac{1}{ \\lVert w \\rVert } $ \uff1b\u4e5f\u5c31\u8bf4\uff0c\u6211\u4eec\u7ea6\u675f(\u524d\u63d0)\u6761\u4ef6\u662f:  \nlable*(w^Tx+b)=1\nlable*(w^Tx+b)=1\n \n\n\n\n\n\n\n\n\n\n\n\u65b0\u7684\u76ee\u6807\u51fd\u6570\u6c42\u89e3\uff1a$ arg: max_{\u5173\u4e8ew, b}  \\frac{1}{ \\lVert w \\rVert } $ \n\n\n=\n \u5c31\u662f\u6c42:  $arg: min_{\u5173\u4e8ew, b}  \\lVert w \\rVert  $  (\u6c42\u77e9\u9635\u4f1a\u6bd4\u8f83\u9ebb\u70e6\uff0c\u5982\u679cx\u53ea\u662f  \n\\frac{1}{2}\\bullet x^2\n\\frac{1}{2}\\bullet x^2\n  \u7684\u504f\u5bfc\u6570\uff0c\u90a3\u4e48\u3002\u3002\u540c\u6837\u662f\u6c42\u6700\u5c0f\u503c)\n\n\n=\n \u5c31\u662f\u6c42:  \narg: min_{\u5173\u4e8ew, b} (\\frac{1}{2}\\bullet \\lVert w \\rVert ^2)\narg: min_{\u5173\u4e8ew, b} (\\frac{1}{2}\\bullet \\lVert w \\rVert ^2)\n  (\u4e8c\u6b21\u51fd\u6570\u6c42\u5bfc\uff0c\u6c42\u6781\u503c\uff0c\u5e73\u65b9\u4e5f\u65b9\u4fbf\u8ba1\u7b97)\n\n\n\u672c\u8d28\u4e0a\u5c31\u662f\u6c42\u7ebf\u6027\u4e0d\u7b49\u5f0f\u7684\u4e8c\u6b21\u4f18\u5316\u95ee\u9898(\u6c42\u5206\u9694\u8d85\u5e73\u9762\uff0c\u7b49\u4ef7\u4e8e\u6c42\u89e3\u76f8\u5e94\u7684\u51f8\u4e8c\u6b21\u89c4\u5212\u95ee\u9898)\n\n\n\n\n\n\n\u901a\u8fc7\u62c9\u683c\u6717\u65e5\u4e58\u5b50\u6cd5\uff0c\u6c42\u4e8c\u6b21\u4f18\u5316\u95ee\u9898\n\n\n\u5047\u8bbe\u9700\u8981\u6c42\u6781\u503c\u7684\u76ee\u6807\u51fd\u6570 (objective function) \u4e3a f(x,y)\uff0c\u9650\u5236\u6761\u4ef6\u4e3a \u03c6(x,y)=M  # M=1\n\n\n\u8bbeg(x,y)=M-\u03c6(x,y)   # \u4e34\u65f6\u03c6(x,y)\u8868\u793a\u4e0b\u6587\u4e2d  \nlabel\\bullet(w^Tx+b)\nlabel\\bullet(w^Tx+b)\n \n\n\n\u5b9a\u4e49\u4e00\u4e2a\u65b0\u51fd\u6570: F(x,y,\u03bb)=f(x,y)+\u03bbg(x,y)\n\n\na\u4e3a\u03bb\uff08a\n=0\uff09\uff0c\u4ee3\u8868\u8981\u5f15\u5165\u7684\u62c9\u683c\u6717\u65e5\u4e58\u5b50(Lagrange multiplier)\n\n\n\u90a3\u4e48\uff1a  \nL(w,b,\\alpha)=\\frac{1}{2} \\bullet  \\lVert w \\rVert ^2 + \\sum_{i=1}^{n} \\alpha_i \\bullet [1 - label \\bullet (w^Tx+b)]\nL(w,b,\\alpha)=\\frac{1}{2} \\bullet  \\lVert w \\rVert ^2 + \\sum_{i=1}^{n} \\alpha_i \\bullet [1 - label \\bullet (w^Tx+b)]\n \n\n\n\u56e0\u4e3a\uff1a \nlabel\\bullet(w^Tx+b)\n=1, \\alpha\n=0\nlabel\\bullet(w^Tx+b)>=1, \\alpha>=0\n  , \u6240\u4ee5  \n\\alpha\\bullet[1-label\\bullet(w^Tx+b)]\n=0\n\\alpha\\bullet[1-label\\bullet(w^Tx+b)]<=0\n  ,  \n\\sum_{i=1}^{n} \\alpha_i \\bullet [1-label*(w^Tx+b)]\n=0\n\\sum_{i=1}^{n} \\alpha_i \\bullet [1-label*(w^Tx+b)]<=0\n  \n\n\n\u5f53  \nlabel\\bullet(w^Tx+b)\n1\nlabel\\bullet(w^Tx+b)>1\n  \u5219  \n\\alpha=0\n\\alpha=0\n  \uff0c\u8868\u793a\u8be5\u70b9\u4e3a\n\u975e\u652f\u6301\u5411\u91cf\n\n\n\u76f8\u5f53\u4e8e\u6c42\u89e3\uff1a  \nmax_{\u5173\u4e8e\\alpha} L(w,b,\\alpha) = \\frac{1}{2} \\bullet \\lVert w \\rVert ^2\nmax_{\u5173\u4e8e\\alpha} L(w,b,\\alpha) = \\frac{1}{2} \\bullet \\lVert w \\rVert ^2\n  \n\n\n\u5982\u679c\u6c42\uff1a  \nmin_{\u5173\u4e8ew, b} \\frac{1}{2} * \\lVert w \\rVert ^2\nmin_{\u5173\u4e8ew, b} \\frac{1}{2} * \\lVert w \\rVert ^2\n  , \u4e5f\u5c31\u662f\u8981\u6c42\uff1a  \nmin_{\u5173\u4e8ew, b} \\left( max_{\u5173\u4e8e\\alpha} L(w,b,\\alpha)\\right)\nmin_{\u5173\u4e8ew, b} \\left( max_{\u5173\u4e8e\\alpha} L(w,b,\\alpha)\\right)\n  \n\n\n\n\n\n\n\u73b0\u5728\u8f6c\u5316\u5230\u5bf9\u5076\u95ee\u9898\u7684\u6c42\u89e3\n\n\n$min_{\u5173\u4e8ew, b} \\left(max_{\u5173\u4e8e\\alpha} L(w,b,\\alpha) \\right) $  \n=  $max_{\u5173\u4e8e\\alpha} \\left(min_{\u5173\u4e8ew, b} L(w,b,\\alpha) \\right) $  \n\n\n\u73b0\u5728\u52062\u6b65\n\n\n\u5148\u6c42\uff1a  \nmin_{\u5173\u4e8ew, b} L(w,b,\\alpha)=\\frac{1}{2} \\bullet  \\lVert w \\rVert ^2 + \\sum_{i=1}^{n} \\alpha_i \\bullet [1 - label \\bullet (w^Tx+b)]\nmin_{\u5173\u4e8ew, b} L(w,b,\\alpha)=\\frac{1}{2} \\bullet  \\lVert w \\rVert ^2 + \\sum_{i=1}^{n} \\alpha_i \\bullet [1 - label \\bullet (w^Tx+b)]\n \n\n\n\u5c31\u662f\u6c42\nL(w,b,a)\n\u5173\u4e8e[w, b]\u7684\u504f\u5bfc\u6570, \u5f97\u5230\nw\u548cb\u7684\u503c\n\uff0c\u5e76\u5316\u7b80\u4e3a\uff1a\nL\u548ca\u7684\u65b9\u7a0b\n\u3002\n\n\n\u53c2\u8003\uff1a \u5982\u679c\u516c\u5f0f\u63a8\u5bfc\u8fd8\u662f\u4e0d\u61c2\uff0c\u4e5f\u53ef\u4ee5\u53c2\u8003\u300a\u7edf\u8ba1\u5b66\u4e60\u65b9\u6cd5\u300b\u674e\u822a-P103\n\u5b66\u4e60\u7684\u5bf9\u5076\u7b97\u6cd5\n\n\n\n\n\n\n\n\n\u7ec8\u4e8e\u5f97\u5230\u8bfe\u672c\u4e0a\u7684\u516c\u5f0f\uff1a  $max_{\u5173\u4e8e\\alpha} \\left( \\sum_{i=1}^{m} \\alpha_i - \\frac{1}{2} \\sum_{i, j=1}^{m} label_i\u00b7label_j\u00b7\\alpha_i\u00b7\\alpha_j\u00b7\n \\right) $ \n\n\n\u7ea6\u675f\u6761\u4ef6\uff1a  \na\n=0\na>=0\n  \u5e76\u4e14  \n\\sum_{i=1}^{m} a_i\u00b7label_i=0\n\\sum_{i=1}^{m} a_i\u00b7label_i=0\n \n\n\n\n\n\n\n\u677e\u5f1b\u53d8\u91cf(slack variable)\n\n\n\n\n\u53c2\u8003\u5730\u5740\uff1a\nhttp://blog.csdn.net/wusecaiyun/article/details/49659183\n\n\n\n\n\n\n\u6211\u4eec\u77e5\u9053\u51e0\u4e4e\u6240\u6709\u7684\u6570\u636e\u90fd\u4e0d\u90a3\u4e48\u5e72\u51c0, \u901a\u8fc7\u5f15\u5165\u677e\u5f1b\u53d8\u91cf\u6765 \n\u5141\u8bb8\u6570\u636e\u70b9\u53ef\u4ee5\u5904\u4e8e\u5206\u9694\u9762\u9519\u8bef\u7684\u4e00\u4fa7\n\u3002\n\n\n\u7ea6\u675f\u6761\u4ef6\uff1a  \nC\n=a\n=0\nC>=a>=0\n  \u5e76\u4e14  \n\\sum_{i=1}^{m} a_i\u00b7label_i=0\n\\sum_{i=1}^{m} a_i\u00b7label_i=0\n \n\n\n\u603b\u7684\u6765\u8bf4\uff1a\n\n\n \u8868\u793a \n\u677e\u5f1b\u53d8\u91cf\n\n\n\u5e38\u91cfC\u662f \n\u60e9\u7f5a\u56e0\u5b50\n, \u8868\u793a\u79bb\u7fa4\u70b9\u7684\u6743\u91cd\uff08\u7528\u4e8e\u63a7\u5236\u201c\u6700\u5927\u5316\u95f4\u9694\u201d\u548c\u201c\u4fdd\u8bc1\u5927\u90e8\u5206\u70b9\u7684\u51fd\u6570\u95f4\u9694\u5c0f\u4e8e1.0\u201d \uff09\n\n\nlabel*(w^Tx+b) \n 1\nlabel*(w^Tx+b) > 1\n  and alpha = 0 (\u5728\u8fb9\u754c\u5916\uff0c\u5c31\u662f\u975e\u652f\u6301\u5411\u91cf)\n\n\nlabel*(w^Tx+b) = 1\nlabel*(w^Tx+b) = 1\n  and 0\n alpha \n C (\u5728\u5206\u5272\u8d85\u5e73\u9762\u4e0a\uff0c\u5c31\u652f\u6301\u5411\u91cf)\n\n\nlabel*(w^Tx+b) \n 1\nlabel*(w^Tx+b) < 1\n  and alpha = C (\u5728\u5206\u5272\u8d85\u5e73\u9762\u5185\uff0c\u662f\u8bef\u5dee\u70b9 -\n C\u8868\u793a\u5b83\u8be5\u53d7\u5230\u7684\u60e9\u7f5a\u56e0\u5b50\u7a0b\u5ea6)\n\n\n\u53c2\u8003\u5730\u5740\uff1a\nhttps://www.zhihu.com/question/48351234/answer/110486455\n\n\n\n\n\n\nC\u503c\u8d8a\u5927\uff0c\u8868\u793a\u79bb\u7fa4\u70b9\u5f71\u54cd\u8d8a\u5927\uff0c\u5c31\u8d8a\u5bb9\u6613\u8fc7\u5ea6\u62df\u5408\uff1b\u53cd\u4e4b\u6709\u53ef\u80fd\u6b20\u62df\u5408\u3002\n\n\n\u6211\u4eec\u770b\u5230\uff0c\u76ee\u6807\u51fd\u6570\u63a7\u5236\u4e86\u79bb\u7fa4\u70b9\u7684\u6570\u76ee\u548c\u7a0b\u5ea6\uff0c\u4f7f\u5927\u90e8\u5206\u6837\u672c\u70b9\u4ecd\u7136\u9075\u5b88\u9650\u5236\u6761\u4ef6\u3002\n\n\n\u4f8b\u5982\uff1a\u6b63\u7c7b\u670910000\u4e2a\u6837\u672c\uff0c\u800c\u8d1f\u7c7b\u53ea\u7ed9\u4e86100\u4e2a\uff08C\u8d8a\u5927\u8868\u793a100\u4e2a\u8d1f\u6837\u672c\u7684\u5f71\u54cd\u8d8a\u5927\uff0c\u5c31\u4f1a\u51fa\u73b0\u8fc7\u5ea6\u62df\u5408\uff0c\u6240\u4ee5C\u51b3\u5b9a\u4e86\u8d1f\u6837\u672c\u5bf9\u6a21\u578b\u62df\u5408\u7a0b\u5ea6\u7684\u5f71\u54cd\uff01\uff0cC\u5c31\u662f\u4e00\u4e2a\u975e\u5e38\u5173\u952e\u7684\u4f18\u5316\u70b9\uff01\uff09\n\n\n\n\n\n\n\u8fd9\u4e00\u7ed3\u8bba\u5341\u5206\u76f4\u63a5\uff0cSVM\u4e2d\u7684\u4e3b\u8981\u5de5\u4f5c\u5c31\u662f\u8981\u6c42\u89e3 alpha.\n\n\n\n\nSMO \u9ad8\u6548\u4f18\u5316\u7b97\u6cd5\n\n\n\n\nSVM\u6709\u5f88\u591a\u79cd\u5b9e\u73b0\uff0c\u6700\u6d41\u884c\u7684\u4e00\u79cd\u5b9e\u73b0\u662f\uff1a \n\u5e8f\u5217\u6700\u5c0f\u4f18\u5316(Sequential Minimal Optimization, SMO)\u7b97\u6cd5\n\u3002\n\n\n\u4e0b\u9762\u8fd8\u4f1a\u4ecb\u7ecd\u4e00\u79cd\u79f0\u4e3a \n\u6838\u51fd\u6570(kernel)\n \u7684\u65b9\u5f0f\u5c06SVM\u6269\u5c55\u5230\u66f4\u591a\u6570\u636e\u96c6\u4e0a\u3002\n\n\n\u6ce8\u610f\uff1a\nSVM\u51e0\u4f55\u542b\u4e49\u6bd4\u8f83\u76f4\u89c2\uff0c\u4f46\u5176\u7b97\u6cd5\u5b9e\u73b0\u8f83\u590d\u6742\uff0c\u7275\u626f\u5927\u91cf\u6570\u5b66\u516c\u5f0f\u7684\u63a8\u5bfc\u3002\n\n\n\n\n\n\n\u5e8f\u5217\u6700\u5c0f\u4f18\u5316(Sequential Minimal Optimization, SMO)\n\n\n\n\n\n\n\u521b\u5efa\u4f5c\u8005\uff1aJohn Platt\n\n\n\u521b\u5efa\u65f6\u95f4\uff1a1996\u5e74\n\n\nSMO\u7528\u9014\uff1a\u7528\u4e8e\u8bad\u7ec3 SVM\n\n\nSMO\u76ee\u6807\uff1a\u6c42\u51fa\u4e00\u7cfb\u5217 alpha \u548c b,\u4e00\u65e6\u6c42\u51fa alpha\uff0c\u5c31\u5f88\u5bb9\u6613\u8ba1\u7b97\u51fa\u6743\u91cd\u5411\u91cf w \u5e76\u5f97\u5230\u5206\u9694\u8d85\u5e73\u9762\u3002\n\n\nSMO\u601d\u60f3\uff1a\u662f\u5c06\u5927\u4f18\u5316\u95ee\u9898\u5206\u89e3\u4e3a\u591a\u4e2a\u5c0f\u4f18\u5316\u95ee\u9898\u6765\u6c42\u89e3\u7684\u3002\n\n\nSMO\u539f\u7406\uff1a\u6bcf\u6b21\u5faa\u73af\u9009\u62e9\u4e24\u4e2a alpha \u8fdb\u884c\u4f18\u5316\u5904\u7406\uff0c\u4e00\u65e6\u627e\u51fa\u4e00\u5bf9\u5408\u9002\u7684 alpha\uff0c\u90a3\u4e48\u5c31\u589e\u5927\u4e00\u4e2a\u540c\u65f6\u51cf\u5c11\u4e00\u4e2a\u3002\n\n\n\u8fd9\u91cc\u6307\u7684\u5408\u9002\u5fc5\u987b\u8981\u7b26\u5408\u4e00\u5b9a\u7684\u6761\u4ef6\n\n\n\u8fd9\u4e24\u4e2a alpha \u5fc5\u987b\u8981\u5728\u95f4\u9694\u8fb9\u754c\u4e4b\u5916\n\n\n\u8fd9\u4e24\u4e2a alpha \u8fd8\u6ca1\u6709\u8fdb\u884c\u8fc7\u533a\u95f4\u5316\u5904\u7406\u6216\u8005\u4e0d\u5728\u8fb9\u754c\u4e0a\u3002\n\n\n\n\n\n\n\u4e4b\u6240\u4ee5\u8981\u540c\u65f6\u6539\u53d82\u4e2a alpha\uff1b\u539f\u56e0\u662f\u6211\u4eec\u6709\u4e00\u4e2a\u7ea6\u675f\u6761\u4ef6\uff1a  \n\\sum_{i=1}^{m} a_i\u00b7label_i=0\n\\sum_{i=1}^{m} a_i\u00b7label_i=0\n \uff1b\u5982\u679c\u53ea\u662f\u4fee\u6539\u4e00\u4e2a alpha\uff0c\u5f88\u53ef\u80fd\u5bfc\u81f4\u7ea6\u675f\u6761\u4ef6\u5931\u6548\u3002\n\n\n\n\n\n\n\n\n\n\nSMO \u4f2a\u4ee3\u7801\u5927\u81f4\u5982\u4e0b\uff1a\n\n\n\n\n\u521b\u5efa\u4e00\u4e2a alpha \u5411\u91cf\u5e76\u5c06\u5176\u521d\u59cb\u5316\u4e3a0\u5411\u91cf\n\u5f53\u8fed\u4ee3\u6b21\u6570\u5c0f\u4e8e\u6700\u5927\u8fed\u4ee3\u6b21\u6570\u65f6(\u5916\u5faa\u73af)\n    \u5bf9\u6570\u636e\u96c6\u4e2d\u7684\u6bcf\u4e2a\u6570\u636e\u5411\u91cf(\u5185\u5faa\u73af)\uff1a\n        \u5982\u679c\u8be5\u6570\u636e\u5411\u91cf\u53ef\u4ee5\u88ab\u4f18\u5316\n            \u968f\u673a\u9009\u62e9\u53e6\u5916\u4e00\u4e2a\u6570\u636e\u5411\u91cf\n            \u540c\u65f6\u4f18\u5316\u8fd9\u4e24\u4e2a\u5411\u91cf\n            \u5982\u679c\u4e24\u4e2a\u5411\u91cf\u90fd\u4e0d\u80fd\u88ab\u4f18\u5316\uff0c\u9000\u51fa\u5185\u5faa\u73af\n    \u5982\u679c\u6240\u6709\u5411\u91cf\u90fd\u6ca1\u88ab\u4f18\u5316\uff0c\u589e\u52a0\u8fed\u4ee3\u6570\u76ee\uff0c\u7ee7\u7eed\u4e0b\u4e00\u6b21\u5faa\u73af\n\n\n\n\nSVM \u5f00\u53d1\u6d41\u7a0b\n\n\n\u6536\u96c6\u6570\u636e\uff1a\u53ef\u4ee5\u4f7f\u7528\u4efb\u610f\u65b9\u6cd5\u3002\n\u51c6\u5907\u6570\u636e\uff1a\u9700\u8981\u6570\u503c\u578b\u6570\u636e\u3002\n\u5206\u6790\u6570\u636e\uff1a\u6709\u52a9\u4e8e\u53ef\u89c6\u5316\u5206\u9694\u8d85\u5e73\u9762\u3002\n\u8bad\u7ec3\u7b97\u6cd5\uff1aSVM\u7684\u5927\u90e8\u5206\u65f6\u95f4\u90fd\u6e90\u81ea\u8bad\u7ec3\uff0c\u8be5\u8fc7\u7a0b\u4e3b\u8981\u5b9e\u73b0\u4e24\u4e2a\u53c2\u6570\u7684\u8c03\u4f18\u3002\n\u6d4b\u8bd5\u7b97\u6cd5\uff1a\u5341\u5206\u7b80\u5355\u7684\u8ba1\u7b97\u8fc7\u7a0b\u5c31\u53ef\u4ee5\u5b9e\u73b0\u3002\n\u4f7f\u7528\u7b97\u6cd5\uff1a\u51e0\u4e4e\u6240\u6709\u5206\u7c7b\u95ee\u9898\u90fd\u53ef\u4ee5\u4f7f\u7528SVM\uff0c\u503c\u5f97\u4e00\u63d0\u7684\u662f\uff0cSVM\u672c\u8eab\u662f\u4e00\u4e2a\u4e8c\u7c7b\u5206\u7c7b\u5668\uff0c\u5bf9\u591a\u7c7b\u95ee\u9898\u5e94\u7528SVM\u9700\u8981\u5bf9\u4ee3\u7801\u505a\u4e00\u4e9b\u4fee\u6539\u3002\n\n\n\n\nSVM \u7b97\u6cd5\u7279\u70b9\n\n\n\u4f18\u70b9\uff1a\u6cdb\u5316\uff08\u7531\u5177\u4f53\u7684\u3001\u4e2a\u522b\u7684\u6269\u5927\u4e3a\u4e00\u822c\u7684\uff0c\u5c31\u662f\u8bf4\uff1a\u6a21\u578b\u8bad\u7ec3\u5b8c\u540e\u7684\u65b0\u6837\u672c\uff09\u9519\u8bef\u7387\u4f4e\uff0c\u8ba1\u7b97\u5f00\u9500\u4e0d\u5927\uff0c\u7ed3\u679c\u6613\u7406\u89e3\u3002\n\u7f3a\u70b9\uff1a\u5bf9\u53c2\u6570\u8c03\u8282\u548c\u6838\u51fd\u6570\u7684\u9009\u62e9\u654f\u611f\uff0c\u539f\u59cb\u5206\u7c7b\u5668\u4e0d\u52a0\u4fee\u6539\u4ec5\u9002\u5408\u4e8e\u5904\u7406\u4e8c\u5206\u7c7b\u95ee\u9898\u3002\n\u4f7f\u7528\u6570\u636e\u7c7b\u578b\uff1a\u6570\u503c\u578b\u548c\u6807\u79f0\u578b\u6570\u636e\u3002\n\n\n\n\n\u8bfe\u672c\u6848\u4f8b\uff08\u65e0\u6838\u51fd\u6570\uff09\n\n\n\u9879\u76ee\u6982\u8ff0\n\n\n\u5bf9\u5c0f\u89c4\u6a21\u6570\u636e\u70b9\u8fdb\u884c\u5206\u7c7b\n\n\n\u5f00\u53d1\u6d41\u7a0b\n\n\n\n\n\u6536\u96c6\u6570\u636e\n\n\n\n\n\u6587\u672c\u6587\u4ef6\u683c\u5f0f\uff1a\n\n\n3.542485\n    \n1.977398\n    \n-\n1\n\n\n3.018896\n    \n2.556416\n    \n-\n1\n\n\n7.551510\n    \n-\n1.580030\n   \n1\n\n\n2.114999\n    \n-\n0.004466\n   \n-\n1\n\n\n8.127113\n    \n1.274372\n    \n1\n\n\n\n\n\n\n\n\u51c6\u5907\u6570\u636e\n\n\n\n\ndef\n \nloadDataSet\n(\nfileName\n):\n\n    \n\n\n    \u5bf9\u6587\u4ef6\u8fdb\u884c\u9010\u884c\u89e3\u6790\uff0c\u4ece\u800c\u5f97\u5230\u7b2c\u884c\u7684\u7c7b\u6807\u7b7e\u548c\u6574\u4e2a\u7279\u5f81\u77e9\u9635\n\n\n    Args:\n\n\n        fileName \u6587\u4ef6\u540d\n\n\n    Returns:\n\n\n        dataMat  \u7279\u5f81\u77e9\u9635\n\n\n        labelMat \u7c7b\u6807\u7b7e\n\n\n    \n\n    \ndataMat\n \n=\n \n[]\n\n    \nlabelMat\n \n=\n \n[]\n\n    \nfr\n \n=\n \nopen\n(\nfileName\n)\n\n    \nfor\n \nline\n \nin\n \nfr\n.\nreadlines\n():\n\n        \nlineArr\n \n=\n \nline\n.\nstrip\n()\n.\nsplit\n(\n\\t\n)\n\n        \ndataMat\n.\nappend\n([\nfloat\n(\nlineArr\n[\n0\n]),\n \nfloat\n(\nlineArr\n[\n1\n])])\n\n        \nlabelMat\n.\nappend\n(\nfloat\n(\nlineArr\n[\n2\n]))\n\n    \nreturn\n \ndataMat\n,\n \nlabelMat\n\n\n\n\n\n\n\n\u5206\u6790\u6570\u636e: \u65e0\n\n\n\u8bad\u7ec3\u7b97\u6cd5\n\n\n\n\ndef\n \nsmoSimple\n(\ndataMatIn\n,\n \nclassLabels\n,\n \nC\n,\n \ntoler\n,\n \nmaxIter\n):\n\n    \nsmoSimple\n\n\n\n    Args:\n\n\n        dataMatIn    \u7279\u5f81\u96c6\u5408\n\n\n        classLabels  \u7c7b\u522b\u6807\u7b7e\n\n\n        C   \u677e\u5f1b\u53d8\u91cf(\u5e38\u91cf\u503c)\uff0c\u5141\u8bb8\u6709\u4e9b\u6570\u636e\u70b9\u53ef\u4ee5\u5904\u4e8e\u5206\u9694\u9762\u7684\u9519\u8bef\u4e00\u4fa7\u3002\n\n\n            \u63a7\u5236\u6700\u5927\u5316\u95f4\u9694\u548c\u4fdd\u8bc1\u5927\u90e8\u5206\u7684\u51fd\u6570\u95f4\u9694\u5c0f\u4e8e1.0\u8fd9\u4e24\u4e2a\u76ee\u6807\u7684\u6743\u91cd\u3002\n\n\n            \u53ef\u4ee5\u901a\u8fc7\u8c03\u8282\u8be5\u53c2\u6570\u8fbe\u5230\u4e0d\u540c\u7684\u7ed3\u679c\u3002\n\n\n        toler   \u5bb9\u9519\u7387\uff08\u662f\u6307\u5728\u67d0\u4e2a\u4f53\u7cfb\u4e2d\u80fd\u51cf\u5c0f\u4e00\u4e9b\u56e0\u7d20\u6216\u9009\u62e9\u5bf9\u67d0\u4e2a\u7cfb\u7edf\u4ea7\u751f\u4e0d\u7a33\u5b9a\u7684\u6982\u7387\u3002\uff09\n\n\n        maxIter \u9000\u51fa\u524d\u6700\u5927\u7684\u5faa\u73af\u6b21\u6570\n\n\n    Returns:\n\n\n        b       \u6a21\u578b\u7684\u5e38\u91cf\u503c\n\n\n        alphas  \u62c9\u683c\u6717\u65e5\u4e58\u5b50\n\n\n    \n\n    \ndataMatrix\n \n=\n \nmat\n(\ndataMatIn\n)\n\n    \n# \u77e9\u9635\u8f6c\u7f6e \u548c .T \u4e00\u6837\u7684\u529f\u80fd\n\n    \nlabelMat\n \n=\n \nmat\n(\nclassLabels\n)\n.\ntranspose\n()\n\n    \nm\n,\n \nn\n \n=\n \nshape\n(\ndataMatrix\n)\n\n\n    \n# \u521d\u59cb\u5316 b\u548calphas(alpha\u6709\u70b9\u7c7b\u4f3c\u6743\u91cd\u503c\u3002)\n\n    \nb\n \n=\n \n0\n\n    \nalphas\n \n=\n \nmat\n(\nzeros\n((\nm\n,\n \n1\n)))\n\n\n    \n# \u6ca1\u6709\u4efb\u4f55alpha\u6539\u53d8\u7684\u60c5\u51b5\u4e0b\u904d\u5386\u6570\u636e\u7684\u6b21\u6570\n\n    \niter\n \n=\n \n0\n\n    \nwhile\n \n(\niter\n \n \nmaxIter\n):\n\n        \n# w = calcWs(alphas, dataMatIn, classLabels)\n\n        \n# print(\nw:\n, w)\n\n\n        \n# \u8bb0\u5f55alpha\u662f\u5426\u5df2\u7ecf\u8fdb\u884c\u4f18\u5316\uff0c\u6bcf\u6b21\u5faa\u73af\u65f6\u8bbe\u4e3a0\uff0c\u7136\u540e\u518d\u5bf9\u6574\u4e2a\u96c6\u5408\u987a\u5e8f\u904d\u5386\n\n        \nalphaPairsChanged\n \n=\n \n0\n\n        \nfor\n \ni\n \nin\n \nrange\n(\nm\n):\n\n            \n# print \nalphas=\n, alphas\n\n            \n# print \nlabelMat=\n, labelMat\n\n            \n# print \nmultiply(alphas, labelMat)=\n, multiply(alphas, labelMat)\n\n            \n# \u6211\u4eec\u9884\u6d4b\u7684\u7c7b\u522b y[i] = w^Tx[i]+b; \u5176\u4e2d\u56e0\u4e3a w = \u03a3(1~n) a[n]*lable[n]*x[n]\n\n            \nfXi\n \n=\n \nfloat\n(\nmultiply\n(\nalphas\n,\n \nlabelMat\n)\n.\nT\n*\n(\ndataMatrix\n*\ndataMatrix\n[\ni\n,\n \n:]\n.\nT\n))\n \n+\n \nb\n\n            \n# \u9884\u6d4b\u7ed3\u679c\u4e0e\u771f\u5b9e\u7ed3\u679c\u6bd4\u5bf9\uff0c\u8ba1\u7b97\u8bef\u5deeEi\n\n            \nEi\n \n=\n \nfXi\n \n-\n \nfloat\n(\nlabelMat\n[\ni\n])\n\n\n            \n# \u7ea6\u675f\u6761\u4ef6 (KKT\u6761\u4ef6\u662f\u89e3\u51b3\u6700\u4f18\u5316\u95ee\u9898\u7684\u65f6\u7528\u5230\u7684\u4e00\u79cd\u65b9\u6cd5\u3002\u6211\u4eec\u8fd9\u91cc\u63d0\u5230\u7684\u6700\u4f18\u5316\u95ee\u9898\u901a\u5e38\u662f\u6307\u5bf9\u4e8e\u7ed9\u5b9a\u7684\u67d0\u4e00\u51fd\u6570\uff0c\u6c42\u5176\u5728\u6307\u5b9a\u4f5c\u7528\u57df\u4e0a\u7684\u5168\u5c40\u6700\u5c0f\u503c)\n\n            \n# 0\n=alphas[i]\n=C\uff0c\u4f46\u7531\u4e8e0\u548cC\u662f\u8fb9\u754c\u503c\uff0c\u6211\u4eec\u65e0\u6cd5\u8fdb\u884c\u4f18\u5316\uff0c\u56e0\u4e3a\u9700\u8981\u589e\u52a0\u4e00\u4e2aalphas\u548c\u964d\u4f4e\u4e00\u4e2aalphas\u3002\n\n            \n# \u8868\u793a\u53d1\u751f\u9519\u8bef\u7684\u6982\u7387\uff1alabelMat[i]*Ei \u5982\u679c\u8d85\u51fa\u4e86 toler\uff0c \u624d\u9700\u8981\u4f18\u5316\u3002\u81f3\u4e8e\u6b63\u8d1f\u53f7\uff0c\u6211\u4eec\u8003\u8651\u7edd\u5bf9\u503c\u5c31\u5bf9\u4e86\u3002\n\n            \n\n\n            # \u68c0\u9a8c\u8bad\u7ec3\u6837\u672c(xi, yi)\u662f\u5426\u6ee1\u8db3KKT\u6761\u4ef6\n\n\n            yi*f(i) \n= 1 and alpha = 0 (outside the boundary)\n\n\n            yi*f(i) == 1 and 0\nalpha\n C (on the boundary)\n\n\n            yi*f(i) \n= 1 and alpha = C (between the boundary)\n\n\n            \n\n            \nif\n \n((\nlabelMat\n[\ni\n]\n*\nEi\n \n \n-\ntoler\n)\n \nand\n \n(\nalphas\n[\ni\n]\n \n \nC\n))\n \nor\n \n((\nlabelMat\n[\ni\n]\n*\nEi\n \n \ntoler\n)\n \nand\n \n(\nalphas\n[\ni\n]\n \n \n0\n)):\n\n\n                \n# \u5982\u679c\u6ee1\u8db3\u4f18\u5316\u7684\u6761\u4ef6\uff0c\u6211\u4eec\u5c31\u968f\u673a\u9009\u53d6\u975ei\u7684\u4e00\u4e2a\u70b9\uff0c\u8fdb\u884c\u4f18\u5316\u6bd4\u8f83\n\n                \nj\n \n=\n \nselectJrand\n(\ni\n,\n \nm\n)\n\n                \n# \u9884\u6d4bj\u7684\u7ed3\u679c\n\n                \nfXj\n \n=\n \nfloat\n(\nmultiply\n(\nalphas\n,\n \nlabelMat\n)\n.\nT\n*\n(\ndataMatrix\n*\ndataMatrix\n[\nj\n,\n \n:]\n.\nT\n))\n \n+\n \nb\n\n                \nEj\n \n=\n \nfXj\n \n-\n \nfloat\n(\nlabelMat\n[\nj\n])\n\n                \nalphaIold\n \n=\n \nalphas\n[\ni\n]\n.\ncopy\n()\n\n                \nalphaJold\n \n=\n \nalphas\n[\nj\n]\n.\ncopy\n()\n\n\n                \n# L\u548cH\u7528\u4e8e\u5c06alphas[j]\u8c03\u6574\u52300-C\u4e4b\u95f4\u3002\u5982\u679cL==H\uff0c\u5c31\u4e0d\u505a\u4efb\u4f55\u6539\u53d8\uff0c\u76f4\u63a5\u6267\u884ccontinue\u8bed\u53e5\n\n                \n# labelMat[i] != labelMat[j] \u8868\u793a\u5f02\u4fa7\uff0c\u5c31\u76f8\u51cf\uff0c\u5426\u5219\u662f\u540c\u4fa7\uff0c\u5c31\u76f8\u52a0\u3002\n\n                \nif\n \n(\nlabelMat\n[\ni\n]\n \n!=\n \nlabelMat\n[\nj\n]):\n\n                    \nL\n \n=\n \nmax\n(\n0\n,\n \nalphas\n[\nj\n]\n \n-\n \nalphas\n[\ni\n])\n\n                    \nH\n \n=\n \nmin\n(\nC\n,\n \nC\n \n+\n \nalphas\n[\nj\n]\n \n-\n \nalphas\n[\ni\n])\n\n                \nelse\n:\n\n                    \nL\n \n=\n \nmax\n(\n0\n,\n \nalphas\n[\nj\n]\n \n+\n \nalphas\n[\ni\n]\n \n-\n \nC\n)\n\n                    \nH\n \n=\n \nmin\n(\nC\n,\n \nalphas\n[\nj\n]\n \n+\n \nalphas\n[\ni\n])\n\n                \n# \u5982\u679c\u76f8\u540c\uff0c\u5c31\u6ca1\u53d1\u4f18\u5316\u4e86\n\n                \nif\n \nL\n \n==\n \nH\n:\n\n                    \nprint\n(\nL==H\n)\n\n                    \ncontinue\n\n\n                \n# eta\u662falphas[j]\u7684\u6700\u4f18\u4fee\u6539\u91cf\uff0c\u5982\u679ceta==0\uff0c\u9700\u8981\u9000\u51fafor\u5faa\u73af\u7684\u5f53\u524d\u8fed\u4ee3\u8fc7\u7a0b\n\n                \n# \u53c2\u8003\u300a\u7edf\u8ba1\u5b66\u4e60\u65b9\u6cd5\u300b\u674e\u822a-P125~P128\n\u5e8f\u5217\u6700\u5c0f\u6700\u4f18\u5316\u7b97\u6cd5\n\n                \neta\n \n=\n \n2.0\n \n*\n \ndataMatrix\n[\ni\n,\n \n:]\n*\ndataMatrix\n[\nj\n,\n \n:]\n.\nT\n \n-\n \ndataMatrix\n[\ni\n,\n \n:]\n*\ndataMatrix\n[\ni\n,\n \n:]\n.\nT\n \n-\n \ndataMatrix\n[\nj\n,\n \n:]\n*\ndataMatrix\n[\nj\n,\n \n:]\n.\nT\n\n                \nif\n \neta\n \n=\n \n0\n:\n\n                    \nprint\n(\neta\n=0\n)\n\n                    \ncontinue\n\n\n                \n# \u8ba1\u7b97\u51fa\u4e00\u4e2a\u65b0\u7684alphas[j]\u503c\n\n                \nalphas\n[\nj\n]\n \n-=\n \nlabelMat\n[\nj\n]\n*\n(\nEi\n \n-\n \nEj\n)\n/\neta\n\n                \n# \u5e76\u4f7f\u7528\u8f85\u52a9\u51fd\u6570\uff0c\u4ee5\u53caL\u548cH\u5bf9\u5176\u8fdb\u884c\u8c03\u6574\n\n                \nalphas\n[\nj\n]\n \n=\n \nclipAlpha\n(\nalphas\n[\nj\n],\n \nH\n,\n \nL\n)\n\n                \n# \u68c0\u67e5alpha[j]\u662f\u5426\u53ea\u662f\u8f7b\u5fae\u7684\u6539\u53d8\uff0c\u5982\u679c\u662f\u7684\u8bdd\uff0c\u5c31\u9000\u51fafor\u5faa\u73af\u3002\n\n                \nif\n \n(\nabs\n(\nalphas\n[\nj\n]\n \n-\n \nalphaJold\n)\n \n \n0.00001\n):\n\n                    \nprint\n(\nj not moving enough\n)\n\n                    \ncontinue\n\n                \n# \u7136\u540ealphas[i]\u548calphas[j]\u540c\u6837\u8fdb\u884c\u6539\u53d8\uff0c\u867d\u7136\u6539\u53d8\u7684\u5927\u5c0f\u4e00\u6837\uff0c\u4f46\u662f\u6539\u53d8\u7684\u65b9\u5411\u6b63\u597d\u76f8\u53cd\n\n                \nalphas\n[\ni\n]\n \n+=\n \nlabelMat\n[\nj\n]\n*\nlabelMat\n[\ni\n]\n*\n(\nalphaJold\n \n-\n \nalphas\n[\nj\n])\n\n                \n# \u5728\u5bf9alpha[i], alpha[j] \u8fdb\u884c\u4f18\u5316\u4e4b\u540e\uff0c\u7ed9\u8fd9\u4e24\u4e2aalpha\u503c\u8bbe\u7f6e\u4e00\u4e2a\u5e38\u6570b\u3002\n\n                \n# w= \u03a3[1~n] ai*yi*xi =\n b = yj- \u03a3[1~n] ai*yi(xi*xj)\n\n                \n# \u6240\u4ee5\uff1a  b1 - b = (y1-y) - \u03a3[1~n] yi*(a1-a)*(xi*x1)\n\n                \n# \u4e3a\u4ec0\u4e48\u51cf2\u904d\uff1f \u56e0\u4e3a\u662f \u51cf\u53bb\u03a3[1~n]\uff0c\u6b63\u597d2\u4e2a\u53d8\u91cfi\u548cj\uff0c\u6240\u4ee5\u51cf2\u904d\n\n                \nb1\n \n=\n \nb\n \n-\n \nEi\n-\n \nlabelMat\n[\ni\n]\n*\n(\nalphas\n[\ni\n]\n-\nalphaIold\n)\n*\ndataMatrix\n[\ni\n,\n \n:]\n*\ndataMatrix\n[\ni\n,\n \n:]\n.\nT\n \n-\n \nlabelMat\n[\nj\n]\n*\n(\nalphas\n[\nj\n]\n-\nalphaJold\n)\n*\ndataMatrix\n[\ni\n,\n \n:]\n*\ndataMatrix\n[\nj\n,\n \n:]\n.\nT\n\n                \nb2\n \n=\n \nb\n \n-\n \nEj\n-\n \nlabelMat\n[\ni\n]\n*\n(\nalphas\n[\ni\n]\n-\nalphaIold\n)\n*\ndataMatrix\n[\ni\n,\n \n:]\n*\ndataMatrix\n[\nj\n,\n \n:]\n.\nT\n \n-\n \nlabelMat\n[\nj\n]\n*\n(\nalphas\n[\nj\n]\n-\nalphaJold\n)\n*\ndataMatrix\n[\nj\n,\n \n:]\n*\ndataMatrix\n[\nj\n,\n \n:]\n.\nT\n\n                \nif\n \n(\n0\n \n \nalphas\n[\ni\n])\n \nand\n \n(\nC\n \n \nalphas\n[\ni\n]):\n\n                    \nb\n \n=\n \nb1\n\n                \nelif\n \n(\n0\n \n \nalphas\n[\nj\n])\n \nand\n \n(\nC\n \n \nalphas\n[\nj\n]):\n\n                    \nb\n \n=\n \nb2\n\n                \nelse\n:\n\n                    \nb\n \n=\n \n(\nb1\n \n+\n \nb2\n)\n/\n2.0\n\n                \nalphaPairsChanged\n \n+=\n \n1\n\n                \nprint\n(\niter: \n%d\n i:\n%d\n, pairs changed \n%d\n \n%\n \n(\niter\n,\n \ni\n,\n \nalphaPairsChanged\n))\n\n        \n# \u5728for\u5faa\u73af\u5916\uff0c\u68c0\u67e5alpha\u503c\u662f\u5426\u505a\u4e86\u66f4\u65b0\uff0c\u5982\u679c\u5728\u66f4\u65b0\u5219\u5c06iter\u8bbe\u4e3a0\u540e\u7ee7\u7eed\u8fd0\u884c\u7a0b\u5e8f\n\n        \n# \u77e5\u9053\u66f4\u65b0\u5b8c\u6bd5\u540e\uff0citer\u6b21\u5faa\u73af\u65e0\u53d8\u5316\uff0c\u624d\u63a8\u51fa\u5faa\u73af\u3002\n\n        \nif\n \n(\nalphaPairsChanged\n \n==\n \n0\n):\n\n            \niter\n \n+=\n \n1\n\n        \nelse\n:\n\n            \niter\n \n=\n \n0\n\n        \nprint\n(\niteration number: \n%d\n \n%\n \niter\n)\n\n    \nreturn\n \nb\n,\n \nalphas\n\n\n\n\n\n\u5b8c\u6574\u4ee3\u7801\u5730\u5740\uff1aSVM\u7b80\u5316\u7248\uff0c\u5e94\u7528\u7b80\u5316\u7248SMO\u7b97\u6cd5\u5904\u7406\u5c0f\u89c4\u6a21\u6570\u636e\u96c6\n: \nhttps://github.com/apachecn/MachineLearning/blob/master/src/python/6.SVM/svm-simple.py\n\n\n\u5b8c\u6574\u4ee3\u7801\u5730\u5740\uff1aSVM\u5b8c\u6574\u7248\uff0c\u4f7f\u7528\u5b8c\u6574 Platt SMO\u7b97\u6cd5\u52a0\u901f\u4f18\u5316\uff0c\u4f18\u5316\u70b9\uff1a\u9009\u62e9alpha\u7684\u65b9\u5f0f\u4e0d\u540c\n: \nhttps://github.com/apachecn/MachineLearning/blob/master/src/python/6.SVM/svm-complete_Non-Kernel.py\n\n\n\u6838\u51fd\u6570(kernel) \u4f7f\u7528\n\n\n\n\n\u5bf9\u4e8e\u7ebf\u6027\u53ef\u5206\u7684\u60c5\u51b5\uff0c\u6548\u679c\u660e\u663e\n\n\n\u5bf9\u4e8e\u975e\u7ebf\u6027\u7684\u60c5\u51b5\u4e5f\u4e00\u6837\uff0c\u6b64\u65f6\u9700\u8981\u7528\u5230\u4e00\u79cd\u53eb\n\u6838\u51fd\u6570(kernel)\n\u7684\u5de5\u5177\u5c06\u6570\u636e\u8f6c\u5316\u4e3a\u5206\u7c7b\u5668\u6613\u4e8e\u7406\u89e3\u7684\u5f62\u5f0f\u3002\n\n\n\n\n\n\n\u5229\u7528\u6838\u51fd\u6570\u5c06\u6570\u636e\u6620\u5c04\u5230\u9ad8\u7ef4\u7a7a\u95f4\n\n\n\n\n\n\n\u4f7f\u7528\u6838\u51fd\u6570\uff1a\u53ef\u4ee5\u5c06\u6570\u636e\u4ece\u67d0\u4e2a\u7279\u5f81\u7a7a\u95f4\u5230\u53e6\u4e00\u4e2a\u7279\u5f81\u7a7a\u95f4\u7684\u6620\u5c04\u3002\uff08\u901a\u5e38\u60c5\u51b5\u4e0b\uff1a\u8fd9\u79cd\u6620\u5c04\u4f1a\u5c06\u4f4e\u7ef4\u7279\u5f81\u7a7a\u95f4\u6620\u5c04\u5230\u9ad8\u7ef4\u7a7a\u95f4\u3002\uff09\n\n\n\u5982\u679c\u89c9\u5f97\u7279\u5f81\u7a7a\u95f4\u5f88\u88c5\u903c\u3001\u5f88\u96be\u7406\u89e3\u3002\n\n\n\u53ef\u4ee5\u628a\u6838\u51fd\u6570\u60f3\u8c61\u6210\u4e00\u4e2a\u5305\u88c5\u5668(wrapper)\u6216\u8005\u662f\u63a5\u53e3(interface)\uff0c\u5b83\u80fd\u5c06\u6570\u636e\u4ece\u67d0\u4e2a\u5f88\u96be\u5904\u7406\u7684\u5f62\u5f0f\u8f6c\u6362\u6210\u4e3a\u53e6\u4e00\u4e2a\u8f83\u5bb9\u6613\u5904\u7406\u7684\u5f62\u5f0f\u3002\n\n\n\u7ecf\u8fc7\u7a7a\u95f4\u8f6c\u6362\u540e\uff1a\u4f4e\u7ef4\u9700\u8981\u89e3\u51b3\u7684\u975e\u7ebf\u6027\u95ee\u9898\uff0c\u5c31\u53d8\u6210\u4e86\u9ad8\u7ef4\u9700\u8981\u89e3\u51b3\u7684\u7ebf\u6027\u95ee\u9898\u3002\n\n\nSVM \u4f18\u5316\u7279\u522b\u597d\u7684\u5730\u65b9\uff0c\u5728\u4e8e\u6240\u6709\u7684\u8fd0\u7b97\u90fd\u53ef\u4ee5\u5199\u6210\u5185\u79ef(inner product: \u662f\u63072\u4e2a\u5411\u91cf\u76f8\u4e58\uff0c\u5f97\u5230\u5355\u4e2a\u6807\u91cf \u6216\u8005 \u6570\u503c)\uff1b\u5185\u79ef\u66ff\u6362\u6210\u6838\u51fd\u6570\u7684\u65b9\u5f0f\u88ab\u79f0\u4e3a\n\u6838\u6280\u5de7(kernel trick)\n\u6216\u8005\n\u6838\n\u53d8\u7535\n(kernel substation)\n\n\n\u6838\u51fd\u6570\u5e76\u4e0d\u4ec5\u4ec5\u5e94\u7528\u4e8e\u652f\u6301\u5411\u91cf\u673a\uff0c\u5f88\u591a\u5176\u4ed6\u7684\u673a\u5668\u5b66\u4e60\u7b97\u6cd5\u4e5f\u90fd\u7528\u5230\u6838\u51fd\u6570\u3002\u6700\u6d41\u884c\u7684\u6838\u51fd\u6570\uff1a\u5f84\u5411\u57fa\u51fd\u6570(radial basis function)\n\n\n\u5f84\u5411\u57fa\u51fd\u6570\u7684\u9ad8\u65af\u7248\u672c\uff0c\u5176\u5177\u4f53\u7684\u516c\u5f0f\u4e3a\uff1a\n\n\n\n\n\n\n\u9879\u76ee\u6848\u4f8b: \u624b\u5199\u6570\u5b57\u8bc6\u522b\u7684\u4f18\u5316\uff08\u6709\u6838\u51fd\u6570\uff09\n\n\n\u9879\u76ee\u6982\u8ff0\n\n\n\u4f60\u7684\u8001\u677f\u8981\u6c42\uff1a\u4f60\u5199\u7684\u90a3\u4e2a\u624b\u5199\u8bc6\u522b\u7a0b\u5e8f\u975e\u5e38\u597d\uff0c\u4f46\u662f\u5b83\u5360\u7528\u5185\u5b58\u592a\u5927\u3002\u987e\u5ba2\u65e0\u6cd5\u901a\u8fc7\u65e0\u7ebf\u7684\u65b9\u5f0f\u4e0b\u8f7d\u6211\u4eec\u7684\u5e94\u7528\u3002\n\n\n\u6240\u4ee5\uff1a\u6211\u4eec\u53ef\u4ee5\u8003\u8651\u4f7f\u7528\u652f\u6301\u5411\u91cf\u673a\uff0c\u4fdd\u7559\u652f\u6301\u5411\u91cf\u5c31\u884c\uff08\nknn\n\u9700\u8981\u4fdd\u7559\u6240\u6709\u7684\u5411\u91cf\uff09\uff0c\u5c31\u53ef\u4ee5\u83b7\u5f97\u975e\u5e38\u597d\u7684\u6548\u679c\u3002\n\n\n\n\n\n\u5f00\u53d1\u6d41\u7a0b\n\n\n\n\n\u6536\u96c6\u6570\u636e\uff1a\u63d0\u4f9b\u7684\u6587\u672c\u6587\u4ef6\n\n\n\n\n00000000000000001111000000000000\n\n\n00000000000000011111111000000000\n\n\n00000000000000011111111100000000\n\n\n00000000000000011111111110000000\n\n\n00000000000000011111111110000000\n\n\n00000000000000111111111100000000\n\n\n00000000000000111111111100000000\n\n\n00000000000001111111111100000000\n\n\n00000000000000111111111100000000\n\n\n00000000000000111111111100000000\n\n\n00000000000000111111111000000000\n\n\n00000000000001111111111000000000\n\n\n00000000000011111111111000000000\n\n\n00000000000111111111110000000000\n\n\n00000000001111111111111000000000\n\n\n00000001111111111111111000000000\n\n\n00000011111111111111110000000000\n\n\n00000111111111111111110000000000\n\n\n00000111111111111111110000000000\n\n\n00000001111111111111110000000000\n\n\n00000001111111011111110000000000\n\n\n00000000111100011111110000000000\n\n\n00000000000000011111110000000000\n\n\n00000000000000011111100000000000\n\n\n00000000000000111111110000000000\n\n\n00000000000000011111110000000000\n\n\n00000000000000011111110000000000\n\n\n00000000000000011111111000000000\n\n\n00000000000000011111111000000000\n\n\n00000000000000011111111000000000\n\n\n00000000000000000111111110000000\n\n\n00000000000000000111111100000000\n\n\n\n\n\n\n\n\u51c6\u5907\u6570\u636e\uff1a\u57fa\u4e8e\u4e8c\u503c\u56fe\u50cf\u6784\u9020\u5411\u91cf\n\n\n\n\n\u5c06 32*32\u7684\u6587\u672c\u8f6c\u5316\u4e3a 1*1024\u7684\u77e9\u9635\n\n\ndef\n \nimg2vector\n(\nfilename\n):\n\n    \nreturnVect\n \n=\n \nzeros\n((\n1\n,\n \n1024\n))\n\n    \nfr\n \n=\n \nopen\n(\nfilename\n)\n\n    \nfor\n \ni\n \nin\n \nrange\n(\n32\n):\n\n        \nlineStr\n \n=\n \nfr\n.\nreadline\n()\n\n        \nfor\n \nj\n \nin\n \nrange\n(\n32\n):\n\n            \nreturnVect\n[\n0\n,\n \n32\n \n*\n \ni\n \n+\n \nj\n]\n \n=\n \nint\n(\nlineStr\n[\nj\n])\n\n    \nreturn\n \nreturnVect\n\n\n\ndef\n \nloadImages\n(\ndirName\n):\n\n    \nfrom\n \nos\n \nimport\n \nlistdir\n\n    \nhwLabels\n \n=\n \n[]\n\n    \nprint\n(\ndirName\n)\n\n    \ntrainingFileList\n \n=\n \nlistdir\n(\ndirName\n)\n  \n# load the training set\n\n    \nm\n \n=\n \nlen\n(\ntrainingFileList\n)\n\n    \ntrainingMat\n \n=\n \nzeros\n((\nm\n,\n \n1024\n))\n\n    \nfor\n \ni\n \nin\n \nrange\n(\nm\n):\n\n        \nfileNameStr\n \n=\n \ntrainingFileList\n[\ni\n]\n\n        \nfileStr\n \n=\n \nfileNameStr\n.\nsplit\n(\n.\n)[\n0\n]\n  \n# take off .txt\n\n        \nclassNumStr\n \n=\n \nint\n(\nfileStr\n.\nsplit\n(\n_\n)[\n0\n])\n\n        \nif\n \nclassNumStr\n \n==\n \n9\n:\n\n            \nhwLabels\n.\nappend\n(\n-\n1\n)\n\n        \nelse\n:\n\n            \nhwLabels\n.\nappend\n(\n1\n)\n\n        \ntrainingMat\n[\ni\n,\n \n:]\n \n=\n \nimg2vector\n(\n%s\n/\n%s\n \n%\n \n(\ndirName\n,\n \nfileNameStr\n))\n\n    \nreturn\n \ntrainingMat\n,\n \nhwLabels\n\n\n\n\n\n\n\n\u5206\u6790\u6570\u636e\uff1a\u5bf9\u56fe\u50cf\u5411\u91cf\u8fdb\u884c\u76ee\u6d4b\n\n\n\u8bad\u7ec3\u7b97\u6cd5\uff1a\u91c7\u7528\u4e24\u79cd\u4e0d\u540c\u7684\u6838\u51fd\u6570\uff0c\u5e76\u5bf9\u5f84\u5411\u57fa\u6838\u51fd\u6570\u91c7\u7528\u4e0d\u540c\u7684\u8bbe\u7f6e\u6765\u8fd0\u884cSMO\u7b97\u6cd5\n\n\n\n\ndef\n \nkernelTrans\n(\nX\n,\n \nA\n,\n \nkTup\n):\n  \n# calc the kernel or transform data to a higher dimensional space\n\n    \n\n\n    \u6838\u8f6c\u6362\u51fd\u6570\n\n\n    Args:\n\n\n        X     dataMatIn\u6570\u636e\u96c6\n\n\n        A     dataMatIn\u6570\u636e\u96c6\u7684\u7b2ci\u884c\u7684\u6570\u636e\n\n\n        kTup  \u6838\u51fd\u6570\u7684\u4fe1\u606f\n\n\n\n    Returns:\n\n\n\n    \n\n    \nm\n,\n \nn\n \n=\n \nshape\n(\nX\n)\n\n    \nK\n \n=\n \nmat\n(\nzeros\n((\nm\n,\n \n1\n)))\n\n    \nif\n \nkTup\n[\n0\n]\n \n==\n \nlin\n:\n\n        \n# linear kernel:   m*n * n*1 = m*1\n\n        \nK\n \n=\n \nX\n \n*\n \nA\n.\nT\n\n    \nelif\n \nkTup\n[\n0\n]\n \n==\n \nrbf\n:\n\n        \nfor\n \nj\n \nin\n \nrange\n(\nm\n):\n\n            \ndeltaRow\n \n=\n \nX\n[\nj\n,\n \n:]\n \n-\n \nA\n\n            \nK\n[\nj\n]\n \n=\n \ndeltaRow\n \n*\n \ndeltaRow\n.\nT\n\n        \n# \u5f84\u5411\u57fa\u51fd\u6570\u7684\u9ad8\u65af\u7248\u672c\n\n        \nK\n \n=\n \nexp\n(\nK\n \n/\n \n(\n-\n1\n \n*\n \nkTup\n[\n1\n]\n \n**\n \n2\n))\n  \n# divide in NumPy is element-wise not matrix like Matlab\n\n    \nelse\n:\n\n        \nraise\n \nNameError\n(\nHouston We Have a Problem -- That Kernel is not recognized\n)\n\n    \nreturn\n \nK\n\n\n\ndef\n \nsmoP\n(\ndataMatIn\n,\n \nclassLabels\n,\n \nC\n,\n \ntoler\n,\n \nmaxIter\n,\n \nkTup\n=\n(\nlin\n,\n \n0\n)):\n\n    \n\n\n    \u5b8c\u6574SMO\u7b97\u6cd5\u5916\u5faa\u73af\uff0c\u4e0esmoSimple\u6709\u4e9b\u7c7b\u4f3c\uff0c\u4f46\u8fd9\u91cc\u7684\u5faa\u73af\u9000\u51fa\u6761\u4ef6\u66f4\u591a\u4e00\u4e9b\n\n\n    Args:\n\n\n        dataMatIn    \u6570\u636e\u96c6\n\n\n        classLabels  \u7c7b\u522b\u6807\u7b7e\n\n\n        C   \u677e\u5f1b\u53d8\u91cf(\u5e38\u91cf\u503c)\uff0c\u5141\u8bb8\u6709\u4e9b\u6570\u636e\u70b9\u53ef\u4ee5\u5904\u4e8e\u5206\u9694\u9762\u7684\u9519\u8bef\u4e00\u4fa7\u3002\n\n\n            \u63a7\u5236\u6700\u5927\u5316\u95f4\u9694\u548c\u4fdd\u8bc1\u5927\u90e8\u5206\u7684\u51fd\u6570\u95f4\u9694\u5c0f\u4e8e1.0\u8fd9\u4e24\u4e2a\u76ee\u6807\u7684\u6743\u91cd\u3002\n\n\n            \u53ef\u4ee5\u901a\u8fc7\u8c03\u8282\u8be5\u53c2\u6570\u8fbe\u5230\u4e0d\u540c\u7684\u7ed3\u679c\u3002\n\n\n        toler   \u5bb9\u9519\u7387\n\n\n        maxIter \u9000\u51fa\u524d\u6700\u5927\u7684\u5faa\u73af\u6b21\u6570\n\n\n        kTup    \u5305\u542b\u6838\u51fd\u6570\u4fe1\u606f\u7684\u5143\u7ec4\n\n\n    Returns:\n\n\n        b       \u6a21\u578b\u7684\u5e38\u91cf\u503c\n\n\n        alphas  \u62c9\u683c\u6717\u65e5\u4e58\u5b50\n\n\n    \n\n\n    \n# \u521b\u5efa\u4e00\u4e2a optStruct \u5bf9\u8c61\n\n    \noS\n \n=\n \noptStruct\n(\nmat\n(\ndataMatIn\n),\n \nmat\n(\nclassLabels\n)\n.\ntranspose\n(),\n \nC\n,\n \ntoler\n,\n \nkTup\n)\n\n    \niter\n \n=\n \n0\n\n    \nentireSet\n \n=\n \nTrue\n\n    \nalphaPairsChanged\n \n=\n \n0\n\n\n    \n# \u5faa\u73af\u904d\u5386\uff1a\u5faa\u73afmaxIter\u6b21 \u5e76\u4e14 \uff08alphaPairsChanged\u5b58\u5728\u53ef\u4ee5\u6539\u53d8 or \u6240\u6709\u884c\u904d\u5386\u4e00\u904d\uff09\n\n    \nwhile\n \n(\niter\n \n \nmaxIter\n)\n \nand\n \n((\nalphaPairsChanged\n \n \n0\n)\n \nor\n \n(\nentireSet\n)):\n\n        \nalphaPairsChanged\n \n=\n \n0\n\n\n        \n#  \u5f53entireSet=true or \u975e\u8fb9\u754calpha\u5bf9\u6ca1\u6709\u4e86\uff1b\u5c31\u5f00\u59cb\u5bfb\u627e alpha\u5bf9\uff0c\u7136\u540e\u51b3\u5b9a\u662f\u5426\u8981\u8fdb\u884celse\u3002\n\n        \nif\n \nentireSet\n:\n\n            \n# \u5728\u6570\u636e\u96c6\u4e0a\u904d\u5386\u6240\u6709\u53ef\u80fd\u7684alpha\n\n            \nfor\n \ni\n \nin\n \nrange\n(\noS\n.\nm\n):\n\n                \n# \u662f\u5426\u5b58\u5728alpha\u5bf9\uff0c\u5b58\u5728\u5c31+1\n\n                \nalphaPairsChanged\n \n+=\n \ninnerL\n(\ni\n,\n \noS\n)\n\n                \n# print(\nfullSet, iter: %d i:%d, pairs changed %d\n % (iter, i, alphaPairsChanged))\n\n            \niter\n \n+=\n \n1\n\n\n        \n# \u5bf9\u5df2\u5b58\u5728 alpha\u5bf9\uff0c\u9009\u51fa\u975e\u8fb9\u754c\u7684alpha\u503c\uff0c\u8fdb\u884c\u4f18\u5316\u3002\n\n        \nelse\n:\n\n            \n# \u904d\u5386\u6240\u6709\u7684\u975e\u8fb9\u754calpha\u503c\uff0c\u4e5f\u5c31\u662f\u4e0d\u5728\u8fb9\u754c0\u6216C\u4e0a\u7684\u503c\u3002\n\n            \nnonBoundIs\n \n=\n \nnonzero\n((\noS\n.\nalphas\n.\nA\n \n \n0\n)\n \n*\n \n(\noS\n.\nalphas\n.\nA\n \n \nC\n))[\n0\n]\n\n            \nfor\n \ni\n \nin\n \nnonBoundIs\n:\n\n                \nalphaPairsChanged\n \n+=\n \ninnerL\n(\ni\n,\n \noS\n)\n\n                \n# print(\nnon-bound, iter: %d i:%d, pairs changed %d\n % (iter, i, alphaPairsChanged))\n\n            \niter\n \n+=\n \n1\n\n\n        \n# \u5982\u679c\u627e\u5230alpha\u5bf9\uff0c\u5c31\u4f18\u5316\u975e\u8fb9\u754calpha\u503c\uff0c\u5426\u5219\uff0c\u5c31\u91cd\u65b0\u8fdb\u884c\u5bfb\u627e\uff0c\u5982\u679c\u5bfb\u627e\u4e00\u904d \u904d\u5386\u6240\u6709\u7684\u884c\u8fd8\u662f\u6ca1\u627e\u5230\uff0c\u5c31\u9000\u51fa\u5faa\u73af\u3002\n\n        \nif\n \nentireSet\n:\n\n            \nentireSet\n \n=\n \nFalse\n  \n# toggle entire set loop\n\n        \nelif\n \n(\nalphaPairsChanged\n \n==\n \n0\n):\n\n            \nentireSet\n \n=\n \nTrue\n\n        \nprint\n(\niteration number: \n%d\n \n%\n \niter\n)\n\n    \nreturn\n \noS\n.\nb\n,\n \noS\n.\nalphas\n\n\n\n\n\n\n\n\u6d4b\u8bd5\u7b97\u6cd5\uff1a\u4fbf\u643a\u4e00\u4e2a\u51fd\u6570\u6765\u6d4b\u8bd5\u4e0d\u540c\u7684\u548c\u51fd\u6570\u5e76\u8ba1\u7b97\u9519\u8bef\u7387\n\n\n\n\ndef\n \ntestDigits\n(\nkTup\n=\n(\nrbf\n,\n \n10\n)):\n\n\n    \n# 1. \u5bfc\u5165\u8bad\u7ec3\u6570\u636e\n\n    \ndataArr\n,\n \nlabelArr\n \n=\n \nloadImages\n(\ninput/6.SVM/trainingDigits\n)\n\n    \nb\n,\n \nalphas\n \n=\n \nsmoP\n(\ndataArr\n,\n \nlabelArr\n,\n \n200\n,\n \n0.0001\n,\n \n10000\n,\n \nkTup\n)\n\n    \ndatMat\n \n=\n \nmat\n(\ndataArr\n)\n\n    \nlabelMat\n \n=\n \nmat\n(\nlabelArr\n)\n.\ntranspose\n()\n\n    \nsvInd\n \n=\n \nnonzero\n(\nalphas\n.\nA\n \n \n0\n)[\n0\n]\n\n    \nsVs\n \n=\n \ndatMat\n[\nsvInd\n]\n\n    \nlabelSV\n \n=\n \nlabelMat\n[\nsvInd\n]\n\n    \n# print(\nthere are %d Support Vectors\n % shape(sVs)[0])\n\n    \nm\n,\n \nn\n \n=\n \nshape\n(\ndatMat\n)\n\n    \nerrorCount\n \n=\n \n0\n\n    \nfor\n \ni\n \nin\n \nrange\n(\nm\n):\n\n        \nkernelEval\n \n=\n \nkernelTrans\n(\nsVs\n,\n \ndatMat\n[\ni\n,\n \n:],\n \nkTup\n)\n\n        \n# 1*m * m*1 = 1*1 \u5355\u4e2a\u9884\u6d4b\u7ed3\u679c\n\n        \npredict\n \n=\n \nkernelEval\n.\nT\n \n*\n \nmultiply\n(\nlabelSV\n,\n \nalphas\n[\nsvInd\n])\n \n+\n \nb\n\n        \nif\n \nsign\n(\npredict\n)\n \n!=\n \nsign\n(\nlabelArr\n[\ni\n]):\n \nerrorCount\n \n+=\n \n1\n\n    \nprint\n(\nthe training error rate is: \n%f\n \n%\n \n(\nfloat\n(\nerrorCount\n)\n \n/\n \nm\n))\n\n\n    \n# 2. \u5bfc\u5165\u6d4b\u8bd5\u6570\u636e\n\n    \ndataArr\n,\n \nlabelArr\n \n=\n \nloadImages\n(\ninput/6.SVM/testDigits\n)\n\n    \nerrorCount\n \n=\n \n0\n\n    \ndatMat\n \n=\n \nmat\n(\ndataArr\n)\n\n    \nlabelMat\n \n=\n \nmat\n(\nlabelArr\n)\n.\ntranspose\n()\n\n    \nm\n,\n \nn\n \n=\n \nshape\n(\ndatMat\n)\n\n    \nfor\n \ni\n \nin\n \nrange\n(\nm\n):\n\n        \nkernelEval\n \n=\n \nkernelTrans\n(\nsVs\n,\n \ndatMat\n[\ni\n,\n \n:],\n \nkTup\n)\n\n        \n# 1*m * m*1 = 1*1 \u5355\u4e2a\u9884\u6d4b\u7ed3\u679c\n\n        \npredict\n \n=\n \nkernelEval\n.\nT\n \n*\n \nmultiply\n(\nlabelSV\n,\n \nalphas\n[\nsvInd\n])\n \n+\n \nb\n\n        \nif\n \nsign\n(\npredict\n)\n \n!=\n \nsign\n(\nlabelArr\n[\ni\n]):\n \nerrorCount\n \n+=\n \n1\n\n    \nprint\n(\nthe test error rate is: \n%f\n \n%\n \n(\nfloat\n(\nerrorCount\n)\n \n/\n \nm\n))\n\n\n\n\n\n\n\n\u4f7f\u7528\u7b97\u6cd5\uff1a\u4e00\u4e2a\u56fe\u50cf\u8bc6\u522b\u7684\u5b8c\u6574\u5e94\u7528\u8fd8\u9700\u8981\u4e00\u4e9b\u56fe\u50cf\u5904\u7406\u7684\u77e5\u8bc6\uff0c\u8fd9\u91cc\u5e76\u4e0d\u6253\u7b97\u6df1\u5165\u4ecb\u7ecd\n\n\n\n\n\u5b8c\u6574\u4ee3\u7801\u5730\u5740\n: \nhttps://github.com/apachecn/MachineLearning/blob/master/src/python/6.SVM/svm-complete.py\n\n\n\n\n\n\n\u4f5c\u8005\uff1a\n\u7247\u523b\n \ngeekidentity\n\n\nGitHub\u5730\u5740\n: \nhttps://github.com/apachecn/MachineLearning\n\n\n\u7248\u6743\u58f0\u660e\uff1a\u6b22\u8fce\u8f6c\u8f7d\u5b66\u4e60 =\n \u8bf7\u6807\u6ce8\u4fe1\u606f\u6765\u6e90\u4e8e \nApacheCN", 
            "title": "6.\u652f\u6301\u5411\u91cf\u673a"
        }, 
        {
            "location": "/\u4e66\u7c4d/\u673a\u5668\u5b66\u4e60\u5b9e\u6218/06.0.\u652f\u6301\u5411\u91cf\u673a/#6", 
            "text": "", 
            "title": "\u7b2c6\u7ae0 \u652f\u6301\u5411\u91cf\u673a"
        }, 
        {
            "location": "/\u4e66\u7c4d/\u673a\u5668\u5b66\u4e60\u5b9e\u6218/06.0.\u652f\u6301\u5411\u91cf\u673a/#_1", 
            "text": "\u652f\u6301\u5411\u91cf\u673a(Support Vector Machines, SVM)\uff1a\u662f\u4e00\u79cd\u673a\u5668\u5b66\u4e60\u7b97\u6cd5\u3002\n* \u652f\u6301\u5411\u91cf(Support Vector)\u5c31\u662f\u79bb\u5206\u9694\u8d85\u5e73\u9762\u6700\u8fd1\u7684\u90a3\u4e9b\u70b9\u3002\n* \u673a(Machine)\u5c31\u662f\u8868\u793a\u4e00\u79cd\u7b97\u6cd5\uff0c\u800c\u4e0d\u662f\u8868\u793a\u673a\u5668\u3002", 
            "title": "\u652f\u6301\u5411\u91cf\u673a \u6982\u8ff0"
        }, 
        {
            "location": "/\u4e66\u7c4d/\u673a\u5668\u5b66\u4e60\u5b9e\u6218/06.0.\u652f\u6301\u5411\u91cf\u673a/#_2", 
            "text": "\u8981\u7ed9\u5de6\u53f3\u4e24\u8fb9\u7684\u70b9\u8fdb\u884c\u5206\u7c7b  \u660e\u663e\u53d1\u73b0\uff1a\u9009\u62e9D\u4f1a\u6bd4B\u3001C\u5206\u9694\u7684\u6548\u679c\u8981\u597d\u5f88\u591a\u3002", 
            "title": "\u652f\u6301\u5411\u91cf\u673a \u573a\u666f"
        }, 
        {
            "location": "/\u4e66\u7c4d/\u673a\u5668\u5b66\u4e60\u5b9e\u6218/06.0.\u652f\u6301\u5411\u91cf\u673a/#_3", 
            "text": "", 
            "title": "\u652f\u6301\u5411\u91cf\u673a \u539f\u7406"
        }, 
        {
            "location": "/\u4e66\u7c4d/\u673a\u5668\u5b66\u4e60\u5b9e\u6218/06.0.\u652f\u6301\u5411\u91cf\u673a/#svm", 
            "text": "\u5bf9\u4e8e\u4e0a\u8ff0\u7684\u82f9\u679c\u548c\u9999\u8549\uff0c\u6211\u4eec\u60f3\u8c61\u4e3a2\u79cd\u6c34\u679c\u7c7b\u578b\u7684\u70b8\u5f39\u3002\uff08\u4fdd\u8bc1\u8ddd\u79bb\u6700\u8fd1\u7684\u70b8\u5f39\uff0c\u8ddd\u79bb\u5b83\u4eec\u6700\u8fdc\uff09   \u5bfb\u627e\u6700\u5927\u5206\u7c7b\u95f4\u8ddd   \u8f6c\u800c\u901a\u8fc7\u62c9\u683c\u6717\u65e5\u51fd\u6570\u6c42\u4f18\u5316\u7684\u95ee\u9898    \u6570\u636e\u53ef\u4ee5\u901a\u8fc7\u753b\u4e00\u6761\u76f4\u7ebf\u5c31\u53ef\u4ee5\u5c06\u5b83\u4eec\u5b8c\u5168\u5206\u5f00\uff0c\u8fd9\u7ec4\u6570\u636e\u53eb \u7ebf\u6027\u53ef\u5206(linearly separable) \u6570\u636e\uff0c\u800c\u8fd9\u6761\u5206\u9694\u76f4\u7ebf\u79f0\u4e3a \u5206\u9694\u8d85\u5e73\u9762(separating hyperplane) \u3002   \u5982\u679c\u6570\u636e\u96c6\u4e0a\u5347\u52301024\u7ef4\u5462\uff1f\u90a3\u4e48\u9700\u89811023\u7ef4\u6765\u5206\u9694\u6570\u636e\u96c6\uff0c\u4e5f\u5c31\u8bf4\u9700\u8981N-1\u7ef4\u7684\u5bf9\u8c61\u6765\u5206\u9694\uff0c\u8fd9\u4e2a\u5bf9\u8c61\u53eb\u505a \u8d85\u5e73\u9762(hyperlane) \uff0c\u4e5f\u5c31\u662f\u5206\u7c7b\u7684\u51b3\u7b56\u8fb9\u754c\u3002", 
            "title": "SVM \u5de5\u4f5c\u539f\u7406"
        }, 
        {
            "location": "/\u4e66\u7c4d/\u673a\u5668\u5b66\u4e60\u5b9e\u6218/06.0.\u652f\u6301\u5411\u91cf\u673a/#_4", 
            "text": "", 
            "title": "\u5bfb\u627e\u6700\u5927\u95f4\u9694"
        }, 
        {
            "location": "/\u4e66\u7c4d/\u673a\u5668\u5b66\u4e60\u5b9e\u6218/06.0.\u652f\u6301\u5411\u91cf\u673a/#_5", 
            "text": "\u6458\u5f55\u5730\u5740\uff1ahttp://slideplayer.com/slide/8610144  (\u7b2c12\u6761\u4fe1\u606f)\nSupport Vector Machines: Slide 12 Copyright \u00a9 2001, 2003, Andrew W. Moore Why Maximum Margin? \ndenotes +1 denotes -1 f(x,w,b) = sign(w. x - b) The maximum margin linear classifier is the linear classifier with the, um, maximum margin. \nThis is the simplest kind of SVM (Called an LSVM) Support Vectors are those datapoints that the margin pushes up against \n\n1.Intuitively this feels safest. \n2.If we\u2019ve made a small error in the location of the boundary (it\u2019s been jolted in its perpendicular direction) this gives us least chance of causing a misclassification. \n3.CV is easy since the model is immune to removal of any non-support-vector datapoints. \n4.There\u2019s some theory that this is a good thing. \n5.Empirically it works very very well. \n\n* * *\n\n1. \u76f4\u89c9\u4e0a\u662f\u5b89\u5168\u7684\n2. \u5982\u679c\u6211\u4eec\u5728\u8fb9\u754c\u7684\u4f4d\u7f6e\u53d1\u751f\u4e86\u4e00\u4e2a\u5c0f\u9519\u8bef\uff08\u5b83\u5728\u5782\u76f4\u65b9\u5411\u4e0a\u88ab\u98a0\u5012\uff09\uff0c\u8fd9\u7ed9\u6211\u4eec\u6700\u5c0f\u7684\u9519\u8bef\u5206\u7c7b\u673a\u4f1a\u3002\n3. CV\uff08Computer Vision \u8ba1\u7b97\u673a\u89c6\u89c9 - \u8fd9\u7f29\u5199\u770b\u7740\u53ef\u6015\uff09\u5f88\u5bb9\u6613\uff0c\u56e0\u4e3a\u8be5\u6a21\u578b\u5bf9\u4efb\u4f55\u975e\u652f\u6301\u5411\u91cf\u6570\u636e\u70b9\u7684\u53bb\u9664\u662f\u514d\u75ab\u7684\u3002\n4. \u6709\u4e00\u4e9b\u7406\u8bba\uff0c\u8fd9\u662f\u4e00\u4ef6\u597d\u4e8b\u3002\n5. \u901a\u5e38\u5b83\u7684\u5de5\u4f5c\u975e\u5e38\u597d\u3002", 
            "title": "\u4e3a\u4ec0\u4e48\u5bfb\u627e\u6700\u5927\u95f4\u9694"
        }, 
        {
            "location": "/\u4e66\u7c4d/\u673a\u5668\u5b66\u4e60\u5b9e\u6218/06.0.\u652f\u6301\u5411\u91cf\u673a/#_6", 
            "text": "\u70b9\u5230\u8d85\u5e73\u9762\u7684\u8ddd\u79bb    \u5206\u9694\u8d85\u5e73\u9762 \u51fd\u6570\u95f4\u8ddd : $ y(x)=w^Tx+b $  \u5206\u7c7b\u7684\u7ed3\u679c\uff1a $ f(x)=sign(w^Tx+b) $  (sign\u8868\u793a\u7b26\u53f7\u51fd\u6570\uff0c 0\u4e3a1\uff0c 0\u4e3a-1\uff0c=0\u4e3a0)   \u4fee\u6539\u70b9\u5230\u8d85\u5e73\u9762\u7684  \u51e0\u4f55\u95f4\u8ddd  :  $ d(x)=\\frac{(w^Tx+b)}{\\lVert w \\rVert} $  \uff08  \\lVert w \\rVert \\lVert w \\rVert  \u8868\u793aw\u77e9\u9635\u7684\u4e8c\u8303\u5f0f=    \\sqrt{w*w^T} \\sqrt{w*w^T}   , \u70b9\u5230\u8d85\u5e73\u9762\u7684\u8ddd\u79bb\u4e5f\u662f\u7c7b\u4f3c\u7684\uff09       \u62c9\u683c\u6717\u65e5\u4e58\u5b50\u6cd5    \u7c7b\u522b\u6807\u7b7e\u7528-1\u30011\uff0c\u662f\u4e3a\u4e86\u540e\u671f\u65b9\u4fbf  $lable\\bullet(w^Tx+b) $ \u7684\u6807\u8bc6\u548c\u8ddd\u79bb\u8ba1\u7b97\uff1b\u5982\u679c  $ lable\\bullet(w^Tx+b) 0 $  \u8868\u793a\u9884\u6d4b\u6b63\u786e\uff0c\u5426\u5219\u9884\u6d4b\u9519\u8bef\u3002  \u73b0\u5728\u76ee\u6807\u5f88\u660e\u786e\uff0c\u5c31\u662f\u8981\u627e\u5230 w \u548c b \uff0c\u56e0\u6b64\u6211\u4eec\u5fc5\u987b\u8981\u627e\u5230\u6700\u5c0f\u95f4\u9694\u7684\u6570\u636e\u70b9\uff0c\u4e5f\u5c31\u662f\u524d\u9762\u6240\u8bf4\u7684 \u652f\u6301\u5411\u91cf \u3002  \u4e5f\u5c31\u8bf4\uff0c\u8ba9\u6700\u5c0f\u7684\u8ddd\u79bb\u53d6\u6700\u5927.(\u6700\u5c0f\u7684\u8ddd\u79bb\uff1a\u5c31\u662f\u6700\u5c0f\u95f4\u9694\u7684\u6570\u636e\u70b9\uff1b\u6700\u5927\uff1a\u5c31\u662f\u6700\u5927\u95f4\u8ddd\uff0c\u4e3a\u4e86\u627e\u51fa\u6700\u4f18\u8d85\u5e73\u9762--\u6700\u7ec8\u5c31\u662f\u652f\u6301\u5411\u91cf)  \u76ee\u6807\u51fd\u6570\uff1a $ arg: max \\left( min[lable\\bullet(w^Tx+b)]\\bullet\\frac{1}{\\lVert w \\rVert} \\right) $   \u5982\u679c  $ lable*(w^Tx+b) 0 $  \u8868\u793a\u9884\u6d4b\u6b63\u786e\uff0c\u4e5f\u79f0 \u51fd\u6570\u95f4\u9694 \uff0c $ \\lVert w \\rVert $  \u53ef\u4ee5\u7406\u89e3\u4e3a\u5f52\u4e00\u5316\uff0c\u4e5f\u79f0 \u51e0\u4f55\u95f4\u9694 \u3002  \u4ee4   lable\\bullet(w^Tx+b) =1 lable\\bullet(w^Tx+b)>=1  \uff0c \u56e0\u4e3a0\uff5e1\u4e4b\u95f4\uff0c\u5f97\u5230\u7684\u70b9\u662f\u5b58\u5728\u8bef\u5224\u7684\u53ef\u80fd\u6027\uff0c\u6240\u4ee5\u8981\u4fdd\u969c   min[lable\\bullet(w^Tx+b)]=1 min[lable\\bullet(w^Tx+b)]=1  \uff0c\u624d\u80fd\u66f4\u597d\u964d\u4f4e\u566a\u97f3\u6570\u636e\u5f71\u54cd\u3002  \u6240\u4ee5\u672c\u8d28\u4e0a\u662f\u6c42  $arg: max_{\u5173\u4e8ew, b}  \\frac{1}{ \\lVert w \\rVert } $ \uff1b\u4e5f\u5c31\u8bf4\uff0c\u6211\u4eec\u7ea6\u675f(\u524d\u63d0)\u6761\u4ef6\u662f:   lable*(w^Tx+b)=1 lable*(w^Tx+b)=1        \u65b0\u7684\u76ee\u6807\u51fd\u6570\u6c42\u89e3\uff1a$ arg: max_{\u5173\u4e8ew, b}  \\frac{1}{ \\lVert w \\rVert } $   =  \u5c31\u662f\u6c42:  $arg: min_{\u5173\u4e8ew, b}  \\lVert w \\rVert  $  (\u6c42\u77e9\u9635\u4f1a\u6bd4\u8f83\u9ebb\u70e6\uff0c\u5982\u679cx\u53ea\u662f   \\frac{1}{2}\\bullet x^2 \\frac{1}{2}\\bullet x^2   \u7684\u504f\u5bfc\u6570\uff0c\u90a3\u4e48\u3002\u3002\u540c\u6837\u662f\u6c42\u6700\u5c0f\u503c)  =  \u5c31\u662f\u6c42:   arg: min_{\u5173\u4e8ew, b} (\\frac{1}{2}\\bullet \\lVert w \\rVert ^2) arg: min_{\u5173\u4e8ew, b} (\\frac{1}{2}\\bullet \\lVert w \\rVert ^2)   (\u4e8c\u6b21\u51fd\u6570\u6c42\u5bfc\uff0c\u6c42\u6781\u503c\uff0c\u5e73\u65b9\u4e5f\u65b9\u4fbf\u8ba1\u7b97)  \u672c\u8d28\u4e0a\u5c31\u662f\u6c42\u7ebf\u6027\u4e0d\u7b49\u5f0f\u7684\u4e8c\u6b21\u4f18\u5316\u95ee\u9898(\u6c42\u5206\u9694\u8d85\u5e73\u9762\uff0c\u7b49\u4ef7\u4e8e\u6c42\u89e3\u76f8\u5e94\u7684\u51f8\u4e8c\u6b21\u89c4\u5212\u95ee\u9898)    \u901a\u8fc7\u62c9\u683c\u6717\u65e5\u4e58\u5b50\u6cd5\uff0c\u6c42\u4e8c\u6b21\u4f18\u5316\u95ee\u9898  \u5047\u8bbe\u9700\u8981\u6c42\u6781\u503c\u7684\u76ee\u6807\u51fd\u6570 (objective function) \u4e3a f(x,y)\uff0c\u9650\u5236\u6761\u4ef6\u4e3a \u03c6(x,y)=M  # M=1  \u8bbeg(x,y)=M-\u03c6(x,y)   # \u4e34\u65f6\u03c6(x,y)\u8868\u793a\u4e0b\u6587\u4e2d   label\\bullet(w^Tx+b) label\\bullet(w^Tx+b)    \u5b9a\u4e49\u4e00\u4e2a\u65b0\u51fd\u6570: F(x,y,\u03bb)=f(x,y)+\u03bbg(x,y)  a\u4e3a\u03bb\uff08a =0\uff09\uff0c\u4ee3\u8868\u8981\u5f15\u5165\u7684\u62c9\u683c\u6717\u65e5\u4e58\u5b50(Lagrange multiplier)  \u90a3\u4e48\uff1a   L(w,b,\\alpha)=\\frac{1}{2} \\bullet  \\lVert w \\rVert ^2 + \\sum_{i=1}^{n} \\alpha_i \\bullet [1 - label \\bullet (w^Tx+b)] L(w,b,\\alpha)=\\frac{1}{2} \\bullet  \\lVert w \\rVert ^2 + \\sum_{i=1}^{n} \\alpha_i \\bullet [1 - label \\bullet (w^Tx+b)]    \u56e0\u4e3a\uff1a  label\\bullet(w^Tx+b) =1, \\alpha =0 label\\bullet(w^Tx+b)>=1, \\alpha>=0   , \u6240\u4ee5   \\alpha\\bullet[1-label\\bullet(w^Tx+b)] =0 \\alpha\\bullet[1-label\\bullet(w^Tx+b)]<=0   ,   \\sum_{i=1}^{n} \\alpha_i \\bullet [1-label*(w^Tx+b)] =0 \\sum_{i=1}^{n} \\alpha_i \\bullet [1-label*(w^Tx+b)]<=0     \u5f53   label\\bullet(w^Tx+b) 1 label\\bullet(w^Tx+b)>1   \u5219   \\alpha=0 \\alpha=0   \uff0c\u8868\u793a\u8be5\u70b9\u4e3a \u975e\u652f\u6301\u5411\u91cf  \u76f8\u5f53\u4e8e\u6c42\u89e3\uff1a   max_{\u5173\u4e8e\\alpha} L(w,b,\\alpha) = \\frac{1}{2} \\bullet \\lVert w \\rVert ^2 max_{\u5173\u4e8e\\alpha} L(w,b,\\alpha) = \\frac{1}{2} \\bullet \\lVert w \\rVert ^2     \u5982\u679c\u6c42\uff1a   min_{\u5173\u4e8ew, b} \\frac{1}{2} * \\lVert w \\rVert ^2 min_{\u5173\u4e8ew, b} \\frac{1}{2} * \\lVert w \\rVert ^2   , \u4e5f\u5c31\u662f\u8981\u6c42\uff1a   min_{\u5173\u4e8ew, b} \\left( max_{\u5173\u4e8e\\alpha} L(w,b,\\alpha)\\right) min_{\u5173\u4e8ew, b} \\left( max_{\u5173\u4e8e\\alpha} L(w,b,\\alpha)\\right)       \u73b0\u5728\u8f6c\u5316\u5230\u5bf9\u5076\u95ee\u9898\u7684\u6c42\u89e3  $min_{\u5173\u4e8ew, b} \\left(max_{\u5173\u4e8e\\alpha} L(w,b,\\alpha) \\right) $   =  $max_{\u5173\u4e8e\\alpha} \\left(min_{\u5173\u4e8ew, b} L(w,b,\\alpha) \\right) $    \u73b0\u5728\u52062\u6b65  \u5148\u6c42\uff1a   min_{\u5173\u4e8ew, b} L(w,b,\\alpha)=\\frac{1}{2} \\bullet  \\lVert w \\rVert ^2 + \\sum_{i=1}^{n} \\alpha_i \\bullet [1 - label \\bullet (w^Tx+b)] min_{\u5173\u4e8ew, b} L(w,b,\\alpha)=\\frac{1}{2} \\bullet  \\lVert w \\rVert ^2 + \\sum_{i=1}^{n} \\alpha_i \\bullet [1 - label \\bullet (w^Tx+b)]    \u5c31\u662f\u6c42 L(w,b,a) \u5173\u4e8e[w, b]\u7684\u504f\u5bfc\u6570, \u5f97\u5230 w\u548cb\u7684\u503c \uff0c\u5e76\u5316\u7b80\u4e3a\uff1a L\u548ca\u7684\u65b9\u7a0b \u3002  \u53c2\u8003\uff1a \u5982\u679c\u516c\u5f0f\u63a8\u5bfc\u8fd8\u662f\u4e0d\u61c2\uff0c\u4e5f\u53ef\u4ee5\u53c2\u8003\u300a\u7edf\u8ba1\u5b66\u4e60\u65b9\u6cd5\u300b\u674e\u822a-P103 \u5b66\u4e60\u7684\u5bf9\u5076\u7b97\u6cd5     \u7ec8\u4e8e\u5f97\u5230\u8bfe\u672c\u4e0a\u7684\u516c\u5f0f\uff1a  $max_{\u5173\u4e8e\\alpha} \\left( \\sum_{i=1}^{m} \\alpha_i - \\frac{1}{2} \\sum_{i, j=1}^{m} label_i\u00b7label_j\u00b7\\alpha_i\u00b7\\alpha_j\u00b7  \\right) $   \u7ea6\u675f\u6761\u4ef6\uff1a   a =0 a>=0   \u5e76\u4e14   \\sum_{i=1}^{m} a_i\u00b7label_i=0 \\sum_{i=1}^{m} a_i\u00b7label_i=0      \u677e\u5f1b\u53d8\u91cf(slack variable)   \u53c2\u8003\u5730\u5740\uff1a http://blog.csdn.net/wusecaiyun/article/details/49659183    \u6211\u4eec\u77e5\u9053\u51e0\u4e4e\u6240\u6709\u7684\u6570\u636e\u90fd\u4e0d\u90a3\u4e48\u5e72\u51c0, \u901a\u8fc7\u5f15\u5165\u677e\u5f1b\u53d8\u91cf\u6765  \u5141\u8bb8\u6570\u636e\u70b9\u53ef\u4ee5\u5904\u4e8e\u5206\u9694\u9762\u9519\u8bef\u7684\u4e00\u4fa7 \u3002  \u7ea6\u675f\u6761\u4ef6\uff1a   C =a =0 C>=a>=0   \u5e76\u4e14   \\sum_{i=1}^{m} a_i\u00b7label_i=0 \\sum_{i=1}^{m} a_i\u00b7label_i=0    \u603b\u7684\u6765\u8bf4\uff1a   \u8868\u793a  \u677e\u5f1b\u53d8\u91cf  \u5e38\u91cfC\u662f  \u60e9\u7f5a\u56e0\u5b50 , \u8868\u793a\u79bb\u7fa4\u70b9\u7684\u6743\u91cd\uff08\u7528\u4e8e\u63a7\u5236\u201c\u6700\u5927\u5316\u95f4\u9694\u201d\u548c\u201c\u4fdd\u8bc1\u5927\u90e8\u5206\u70b9\u7684\u51fd\u6570\u95f4\u9694\u5c0f\u4e8e1.0\u201d \uff09  label*(w^Tx+b)   1 label*(w^Tx+b) > 1   and alpha = 0 (\u5728\u8fb9\u754c\u5916\uff0c\u5c31\u662f\u975e\u652f\u6301\u5411\u91cf)  label*(w^Tx+b) = 1 label*(w^Tx+b) = 1   and 0  alpha   C (\u5728\u5206\u5272\u8d85\u5e73\u9762\u4e0a\uff0c\u5c31\u652f\u6301\u5411\u91cf)  label*(w^Tx+b)   1 label*(w^Tx+b) < 1   and alpha = C (\u5728\u5206\u5272\u8d85\u5e73\u9762\u5185\uff0c\u662f\u8bef\u5dee\u70b9 -  C\u8868\u793a\u5b83\u8be5\u53d7\u5230\u7684\u60e9\u7f5a\u56e0\u5b50\u7a0b\u5ea6)  \u53c2\u8003\u5730\u5740\uff1a https://www.zhihu.com/question/48351234/answer/110486455    C\u503c\u8d8a\u5927\uff0c\u8868\u793a\u79bb\u7fa4\u70b9\u5f71\u54cd\u8d8a\u5927\uff0c\u5c31\u8d8a\u5bb9\u6613\u8fc7\u5ea6\u62df\u5408\uff1b\u53cd\u4e4b\u6709\u53ef\u80fd\u6b20\u62df\u5408\u3002  \u6211\u4eec\u770b\u5230\uff0c\u76ee\u6807\u51fd\u6570\u63a7\u5236\u4e86\u79bb\u7fa4\u70b9\u7684\u6570\u76ee\u548c\u7a0b\u5ea6\uff0c\u4f7f\u5927\u90e8\u5206\u6837\u672c\u70b9\u4ecd\u7136\u9075\u5b88\u9650\u5236\u6761\u4ef6\u3002  \u4f8b\u5982\uff1a\u6b63\u7c7b\u670910000\u4e2a\u6837\u672c\uff0c\u800c\u8d1f\u7c7b\u53ea\u7ed9\u4e86100\u4e2a\uff08C\u8d8a\u5927\u8868\u793a100\u4e2a\u8d1f\u6837\u672c\u7684\u5f71\u54cd\u8d8a\u5927\uff0c\u5c31\u4f1a\u51fa\u73b0\u8fc7\u5ea6\u62df\u5408\uff0c\u6240\u4ee5C\u51b3\u5b9a\u4e86\u8d1f\u6837\u672c\u5bf9\u6a21\u578b\u62df\u5408\u7a0b\u5ea6\u7684\u5f71\u54cd\uff01\uff0cC\u5c31\u662f\u4e00\u4e2a\u975e\u5e38\u5173\u952e\u7684\u4f18\u5316\u70b9\uff01\uff09    \u8fd9\u4e00\u7ed3\u8bba\u5341\u5206\u76f4\u63a5\uff0cSVM\u4e2d\u7684\u4e3b\u8981\u5de5\u4f5c\u5c31\u662f\u8981\u6c42\u89e3 alpha.", 
            "title": "\u600e\u4e48\u5bfb\u627e\u6700\u5927\u95f4\u9694"
        }, 
        {
            "location": "/\u4e66\u7c4d/\u673a\u5668\u5b66\u4e60\u5b9e\u6218/06.0.\u652f\u6301\u5411\u91cf\u673a/#smo", 
            "text": "SVM\u6709\u5f88\u591a\u79cd\u5b9e\u73b0\uff0c\u6700\u6d41\u884c\u7684\u4e00\u79cd\u5b9e\u73b0\u662f\uff1a  \u5e8f\u5217\u6700\u5c0f\u4f18\u5316(Sequential Minimal Optimization, SMO)\u7b97\u6cd5 \u3002  \u4e0b\u9762\u8fd8\u4f1a\u4ecb\u7ecd\u4e00\u79cd\u79f0\u4e3a  \u6838\u51fd\u6570(kernel)  \u7684\u65b9\u5f0f\u5c06SVM\u6269\u5c55\u5230\u66f4\u591a\u6570\u636e\u96c6\u4e0a\u3002  \u6ce8\u610f\uff1a SVM\u51e0\u4f55\u542b\u4e49\u6bd4\u8f83\u76f4\u89c2\uff0c\u4f46\u5176\u7b97\u6cd5\u5b9e\u73b0\u8f83\u590d\u6742\uff0c\u7275\u626f\u5927\u91cf\u6570\u5b66\u516c\u5f0f\u7684\u63a8\u5bfc\u3002    \u5e8f\u5217\u6700\u5c0f\u4f18\u5316(Sequential Minimal Optimization, SMO)    \u521b\u5efa\u4f5c\u8005\uff1aJohn Platt  \u521b\u5efa\u65f6\u95f4\uff1a1996\u5e74  SMO\u7528\u9014\uff1a\u7528\u4e8e\u8bad\u7ec3 SVM  SMO\u76ee\u6807\uff1a\u6c42\u51fa\u4e00\u7cfb\u5217 alpha \u548c b,\u4e00\u65e6\u6c42\u51fa alpha\uff0c\u5c31\u5f88\u5bb9\u6613\u8ba1\u7b97\u51fa\u6743\u91cd\u5411\u91cf w \u5e76\u5f97\u5230\u5206\u9694\u8d85\u5e73\u9762\u3002  SMO\u601d\u60f3\uff1a\u662f\u5c06\u5927\u4f18\u5316\u95ee\u9898\u5206\u89e3\u4e3a\u591a\u4e2a\u5c0f\u4f18\u5316\u95ee\u9898\u6765\u6c42\u89e3\u7684\u3002  SMO\u539f\u7406\uff1a\u6bcf\u6b21\u5faa\u73af\u9009\u62e9\u4e24\u4e2a alpha \u8fdb\u884c\u4f18\u5316\u5904\u7406\uff0c\u4e00\u65e6\u627e\u51fa\u4e00\u5bf9\u5408\u9002\u7684 alpha\uff0c\u90a3\u4e48\u5c31\u589e\u5927\u4e00\u4e2a\u540c\u65f6\u51cf\u5c11\u4e00\u4e2a\u3002  \u8fd9\u91cc\u6307\u7684\u5408\u9002\u5fc5\u987b\u8981\u7b26\u5408\u4e00\u5b9a\u7684\u6761\u4ef6  \u8fd9\u4e24\u4e2a alpha \u5fc5\u987b\u8981\u5728\u95f4\u9694\u8fb9\u754c\u4e4b\u5916  \u8fd9\u4e24\u4e2a alpha \u8fd8\u6ca1\u6709\u8fdb\u884c\u8fc7\u533a\u95f4\u5316\u5904\u7406\u6216\u8005\u4e0d\u5728\u8fb9\u754c\u4e0a\u3002    \u4e4b\u6240\u4ee5\u8981\u540c\u65f6\u6539\u53d82\u4e2a alpha\uff1b\u539f\u56e0\u662f\u6211\u4eec\u6709\u4e00\u4e2a\u7ea6\u675f\u6761\u4ef6\uff1a   \\sum_{i=1}^{m} a_i\u00b7label_i=0 \\sum_{i=1}^{m} a_i\u00b7label_i=0  \uff1b\u5982\u679c\u53ea\u662f\u4fee\u6539\u4e00\u4e2a alpha\uff0c\u5f88\u53ef\u80fd\u5bfc\u81f4\u7ea6\u675f\u6761\u4ef6\u5931\u6548\u3002      SMO \u4f2a\u4ee3\u7801\u5927\u81f4\u5982\u4e0b\uff1a   \u521b\u5efa\u4e00\u4e2a alpha \u5411\u91cf\u5e76\u5c06\u5176\u521d\u59cb\u5316\u4e3a0\u5411\u91cf\n\u5f53\u8fed\u4ee3\u6b21\u6570\u5c0f\u4e8e\u6700\u5927\u8fed\u4ee3\u6b21\u6570\u65f6(\u5916\u5faa\u73af)\n    \u5bf9\u6570\u636e\u96c6\u4e2d\u7684\u6bcf\u4e2a\u6570\u636e\u5411\u91cf(\u5185\u5faa\u73af)\uff1a\n        \u5982\u679c\u8be5\u6570\u636e\u5411\u91cf\u53ef\u4ee5\u88ab\u4f18\u5316\n            \u968f\u673a\u9009\u62e9\u53e6\u5916\u4e00\u4e2a\u6570\u636e\u5411\u91cf\n            \u540c\u65f6\u4f18\u5316\u8fd9\u4e24\u4e2a\u5411\u91cf\n            \u5982\u679c\u4e24\u4e2a\u5411\u91cf\u90fd\u4e0d\u80fd\u88ab\u4f18\u5316\uff0c\u9000\u51fa\u5185\u5faa\u73af\n    \u5982\u679c\u6240\u6709\u5411\u91cf\u90fd\u6ca1\u88ab\u4f18\u5316\uff0c\u589e\u52a0\u8fed\u4ee3\u6570\u76ee\uff0c\u7ee7\u7eed\u4e0b\u4e00\u6b21\u5faa\u73af", 
            "title": "SMO \u9ad8\u6548\u4f18\u5316\u7b97\u6cd5"
        }, 
        {
            "location": "/\u4e66\u7c4d/\u673a\u5668\u5b66\u4e60\u5b9e\u6218/06.0.\u652f\u6301\u5411\u91cf\u673a/#svm_1", 
            "text": "\u6536\u96c6\u6570\u636e\uff1a\u53ef\u4ee5\u4f7f\u7528\u4efb\u610f\u65b9\u6cd5\u3002\n\u51c6\u5907\u6570\u636e\uff1a\u9700\u8981\u6570\u503c\u578b\u6570\u636e\u3002\n\u5206\u6790\u6570\u636e\uff1a\u6709\u52a9\u4e8e\u53ef\u89c6\u5316\u5206\u9694\u8d85\u5e73\u9762\u3002\n\u8bad\u7ec3\u7b97\u6cd5\uff1aSVM\u7684\u5927\u90e8\u5206\u65f6\u95f4\u90fd\u6e90\u81ea\u8bad\u7ec3\uff0c\u8be5\u8fc7\u7a0b\u4e3b\u8981\u5b9e\u73b0\u4e24\u4e2a\u53c2\u6570\u7684\u8c03\u4f18\u3002\n\u6d4b\u8bd5\u7b97\u6cd5\uff1a\u5341\u5206\u7b80\u5355\u7684\u8ba1\u7b97\u8fc7\u7a0b\u5c31\u53ef\u4ee5\u5b9e\u73b0\u3002\n\u4f7f\u7528\u7b97\u6cd5\uff1a\u51e0\u4e4e\u6240\u6709\u5206\u7c7b\u95ee\u9898\u90fd\u53ef\u4ee5\u4f7f\u7528SVM\uff0c\u503c\u5f97\u4e00\u63d0\u7684\u662f\uff0cSVM\u672c\u8eab\u662f\u4e00\u4e2a\u4e8c\u7c7b\u5206\u7c7b\u5668\uff0c\u5bf9\u591a\u7c7b\u95ee\u9898\u5e94\u7528SVM\u9700\u8981\u5bf9\u4ee3\u7801\u505a\u4e00\u4e9b\u4fee\u6539\u3002", 
            "title": "SVM \u5f00\u53d1\u6d41\u7a0b"
        }, 
        {
            "location": "/\u4e66\u7c4d/\u673a\u5668\u5b66\u4e60\u5b9e\u6218/06.0.\u652f\u6301\u5411\u91cf\u673a/#svm_2", 
            "text": "\u4f18\u70b9\uff1a\u6cdb\u5316\uff08\u7531\u5177\u4f53\u7684\u3001\u4e2a\u522b\u7684\u6269\u5927\u4e3a\u4e00\u822c\u7684\uff0c\u5c31\u662f\u8bf4\uff1a\u6a21\u578b\u8bad\u7ec3\u5b8c\u540e\u7684\u65b0\u6837\u672c\uff09\u9519\u8bef\u7387\u4f4e\uff0c\u8ba1\u7b97\u5f00\u9500\u4e0d\u5927\uff0c\u7ed3\u679c\u6613\u7406\u89e3\u3002\n\u7f3a\u70b9\uff1a\u5bf9\u53c2\u6570\u8c03\u8282\u548c\u6838\u51fd\u6570\u7684\u9009\u62e9\u654f\u611f\uff0c\u539f\u59cb\u5206\u7c7b\u5668\u4e0d\u52a0\u4fee\u6539\u4ec5\u9002\u5408\u4e8e\u5904\u7406\u4e8c\u5206\u7c7b\u95ee\u9898\u3002\n\u4f7f\u7528\u6570\u636e\u7c7b\u578b\uff1a\u6570\u503c\u578b\u548c\u6807\u79f0\u578b\u6570\u636e\u3002", 
            "title": "SVM \u7b97\u6cd5\u7279\u70b9"
        }, 
        {
            "location": "/\u4e66\u7c4d/\u673a\u5668\u5b66\u4e60\u5b9e\u6218/06.0.\u652f\u6301\u5411\u91cf\u673a/#_7", 
            "text": "", 
            "title": "\u8bfe\u672c\u6848\u4f8b\uff08\u65e0\u6838\u51fd\u6570\uff09"
        }, 
        {
            "location": "/\u4e66\u7c4d/\u673a\u5668\u5b66\u4e60\u5b9e\u6218/06.0.\u652f\u6301\u5411\u91cf\u673a/#_8", 
            "text": "\u5bf9\u5c0f\u89c4\u6a21\u6570\u636e\u70b9\u8fdb\u884c\u5206\u7c7b", 
            "title": "\u9879\u76ee\u6982\u8ff0"
        }, 
        {
            "location": "/\u4e66\u7c4d/\u673a\u5668\u5b66\u4e60\u5b9e\u6218/06.0.\u652f\u6301\u5411\u91cf\u673a/#_9", 
            "text": "\u6536\u96c6\u6570\u636e   \u6587\u672c\u6587\u4ef6\u683c\u5f0f\uff1a  3.542485      1.977398      - 1  3.018896      2.556416      - 1  7.551510      - 1.580030     1  2.114999      - 0.004466     - 1  8.127113      1.274372      1    \u51c6\u5907\u6570\u636e   def   loadDataSet ( fileName ): \n          \u5bf9\u6587\u4ef6\u8fdb\u884c\u9010\u884c\u89e3\u6790\uff0c\u4ece\u800c\u5f97\u5230\u7b2c\u884c\u7684\u7c7b\u6807\u7b7e\u548c\u6574\u4e2a\u7279\u5f81\u77e9\u9635      Args:          fileName \u6587\u4ef6\u540d      Returns:          dataMat  \u7279\u5f81\u77e9\u9635          labelMat \u7c7b\u6807\u7b7e       \n     dataMat   =   [] \n     labelMat   =   [] \n     fr   =   open ( fileName ) \n     for   line   in   fr . readlines (): \n         lineArr   =   line . strip () . split ( \\t ) \n         dataMat . append ([ float ( lineArr [ 0 ]),   float ( lineArr [ 1 ])]) \n         labelMat . append ( float ( lineArr [ 2 ])) \n     return   dataMat ,   labelMat    \u5206\u6790\u6570\u636e: \u65e0  \u8bad\u7ec3\u7b97\u6cd5   def   smoSimple ( dataMatIn ,   classLabels ,   C ,   toler ,   maxIter ): \n     smoSimple      Args:          dataMatIn    \u7279\u5f81\u96c6\u5408          classLabels  \u7c7b\u522b\u6807\u7b7e          C   \u677e\u5f1b\u53d8\u91cf(\u5e38\u91cf\u503c)\uff0c\u5141\u8bb8\u6709\u4e9b\u6570\u636e\u70b9\u53ef\u4ee5\u5904\u4e8e\u5206\u9694\u9762\u7684\u9519\u8bef\u4e00\u4fa7\u3002              \u63a7\u5236\u6700\u5927\u5316\u95f4\u9694\u548c\u4fdd\u8bc1\u5927\u90e8\u5206\u7684\u51fd\u6570\u95f4\u9694\u5c0f\u4e8e1.0\u8fd9\u4e24\u4e2a\u76ee\u6807\u7684\u6743\u91cd\u3002              \u53ef\u4ee5\u901a\u8fc7\u8c03\u8282\u8be5\u53c2\u6570\u8fbe\u5230\u4e0d\u540c\u7684\u7ed3\u679c\u3002          toler   \u5bb9\u9519\u7387\uff08\u662f\u6307\u5728\u67d0\u4e2a\u4f53\u7cfb\u4e2d\u80fd\u51cf\u5c0f\u4e00\u4e9b\u56e0\u7d20\u6216\u9009\u62e9\u5bf9\u67d0\u4e2a\u7cfb\u7edf\u4ea7\u751f\u4e0d\u7a33\u5b9a\u7684\u6982\u7387\u3002\uff09          maxIter \u9000\u51fa\u524d\u6700\u5927\u7684\u5faa\u73af\u6b21\u6570      Returns:          b       \u6a21\u578b\u7684\u5e38\u91cf\u503c          alphas  \u62c9\u683c\u6717\u65e5\u4e58\u5b50       \n     dataMatrix   =   mat ( dataMatIn ) \n     # \u77e9\u9635\u8f6c\u7f6e \u548c .T \u4e00\u6837\u7684\u529f\u80fd \n     labelMat   =   mat ( classLabels ) . transpose () \n     m ,   n   =   shape ( dataMatrix ) \n\n     # \u521d\u59cb\u5316 b\u548calphas(alpha\u6709\u70b9\u7c7b\u4f3c\u6743\u91cd\u503c\u3002) \n     b   =   0 \n     alphas   =   mat ( zeros (( m ,   1 ))) \n\n     # \u6ca1\u6709\u4efb\u4f55alpha\u6539\u53d8\u7684\u60c5\u51b5\u4e0b\u904d\u5386\u6570\u636e\u7684\u6b21\u6570 \n     iter   =   0 \n     while   ( iter     maxIter ): \n         # w = calcWs(alphas, dataMatIn, classLabels) \n         # print( w: , w) \n\n         # \u8bb0\u5f55alpha\u662f\u5426\u5df2\u7ecf\u8fdb\u884c\u4f18\u5316\uff0c\u6bcf\u6b21\u5faa\u73af\u65f6\u8bbe\u4e3a0\uff0c\u7136\u540e\u518d\u5bf9\u6574\u4e2a\u96c6\u5408\u987a\u5e8f\u904d\u5386 \n         alphaPairsChanged   =   0 \n         for   i   in   range ( m ): \n             # print  alphas= , alphas \n             # print  labelMat= , labelMat \n             # print  multiply(alphas, labelMat)= , multiply(alphas, labelMat) \n             # \u6211\u4eec\u9884\u6d4b\u7684\u7c7b\u522b y[i] = w^Tx[i]+b; \u5176\u4e2d\u56e0\u4e3a w = \u03a3(1~n) a[n]*lable[n]*x[n] \n             fXi   =   float ( multiply ( alphas ,   labelMat ) . T * ( dataMatrix * dataMatrix [ i ,   :] . T ))   +   b \n             # \u9884\u6d4b\u7ed3\u679c\u4e0e\u771f\u5b9e\u7ed3\u679c\u6bd4\u5bf9\uff0c\u8ba1\u7b97\u8bef\u5deeEi \n             Ei   =   fXi   -   float ( labelMat [ i ]) \n\n             # \u7ea6\u675f\u6761\u4ef6 (KKT\u6761\u4ef6\u662f\u89e3\u51b3\u6700\u4f18\u5316\u95ee\u9898\u7684\u65f6\u7528\u5230\u7684\u4e00\u79cd\u65b9\u6cd5\u3002\u6211\u4eec\u8fd9\u91cc\u63d0\u5230\u7684\u6700\u4f18\u5316\u95ee\u9898\u901a\u5e38\u662f\u6307\u5bf9\u4e8e\u7ed9\u5b9a\u7684\u67d0\u4e00\u51fd\u6570\uff0c\u6c42\u5176\u5728\u6307\u5b9a\u4f5c\u7528\u57df\u4e0a\u7684\u5168\u5c40\u6700\u5c0f\u503c) \n             # 0 =alphas[i] =C\uff0c\u4f46\u7531\u4e8e0\u548cC\u662f\u8fb9\u754c\u503c\uff0c\u6211\u4eec\u65e0\u6cd5\u8fdb\u884c\u4f18\u5316\uff0c\u56e0\u4e3a\u9700\u8981\u589e\u52a0\u4e00\u4e2aalphas\u548c\u964d\u4f4e\u4e00\u4e2aalphas\u3002 \n             # \u8868\u793a\u53d1\u751f\u9519\u8bef\u7684\u6982\u7387\uff1alabelMat[i]*Ei \u5982\u679c\u8d85\u51fa\u4e86 toler\uff0c \u624d\u9700\u8981\u4f18\u5316\u3002\u81f3\u4e8e\u6b63\u8d1f\u53f7\uff0c\u6211\u4eec\u8003\u8651\u7edd\u5bf9\u503c\u5c31\u5bf9\u4e86\u3002 \n                          # \u68c0\u9a8c\u8bad\u7ec3\u6837\u672c(xi, yi)\u662f\u5426\u6ee1\u8db3KKT\u6761\u4ef6              yi*f(i)  = 1 and alpha = 0 (outside the boundary)              yi*f(i) == 1 and 0 alpha  C (on the boundary)              yi*f(i)  = 1 and alpha = C (between the boundary)               \n             if   (( labelMat [ i ] * Ei     - toler )   and   ( alphas [ i ]     C ))   or   (( labelMat [ i ] * Ei     toler )   and   ( alphas [ i ]     0 )): \n\n                 # \u5982\u679c\u6ee1\u8db3\u4f18\u5316\u7684\u6761\u4ef6\uff0c\u6211\u4eec\u5c31\u968f\u673a\u9009\u53d6\u975ei\u7684\u4e00\u4e2a\u70b9\uff0c\u8fdb\u884c\u4f18\u5316\u6bd4\u8f83 \n                 j   =   selectJrand ( i ,   m ) \n                 # \u9884\u6d4bj\u7684\u7ed3\u679c \n                 fXj   =   float ( multiply ( alphas ,   labelMat ) . T * ( dataMatrix * dataMatrix [ j ,   :] . T ))   +   b \n                 Ej   =   fXj   -   float ( labelMat [ j ]) \n                 alphaIold   =   alphas [ i ] . copy () \n                 alphaJold   =   alphas [ j ] . copy () \n\n                 # L\u548cH\u7528\u4e8e\u5c06alphas[j]\u8c03\u6574\u52300-C\u4e4b\u95f4\u3002\u5982\u679cL==H\uff0c\u5c31\u4e0d\u505a\u4efb\u4f55\u6539\u53d8\uff0c\u76f4\u63a5\u6267\u884ccontinue\u8bed\u53e5 \n                 # labelMat[i] != labelMat[j] \u8868\u793a\u5f02\u4fa7\uff0c\u5c31\u76f8\u51cf\uff0c\u5426\u5219\u662f\u540c\u4fa7\uff0c\u5c31\u76f8\u52a0\u3002 \n                 if   ( labelMat [ i ]   !=   labelMat [ j ]): \n                     L   =   max ( 0 ,   alphas [ j ]   -   alphas [ i ]) \n                     H   =   min ( C ,   C   +   alphas [ j ]   -   alphas [ i ]) \n                 else : \n                     L   =   max ( 0 ,   alphas [ j ]   +   alphas [ i ]   -   C ) \n                     H   =   min ( C ,   alphas [ j ]   +   alphas [ i ]) \n                 # \u5982\u679c\u76f8\u540c\uff0c\u5c31\u6ca1\u53d1\u4f18\u5316\u4e86 \n                 if   L   ==   H : \n                     print ( L==H ) \n                     continue \n\n                 # eta\u662falphas[j]\u7684\u6700\u4f18\u4fee\u6539\u91cf\uff0c\u5982\u679ceta==0\uff0c\u9700\u8981\u9000\u51fafor\u5faa\u73af\u7684\u5f53\u524d\u8fed\u4ee3\u8fc7\u7a0b \n                 # \u53c2\u8003\u300a\u7edf\u8ba1\u5b66\u4e60\u65b9\u6cd5\u300b\u674e\u822a-P125~P128 \u5e8f\u5217\u6700\u5c0f\u6700\u4f18\u5316\u7b97\u6cd5 \n                 eta   =   2.0   *   dataMatrix [ i ,   :] * dataMatrix [ j ,   :] . T   -   dataMatrix [ i ,   :] * dataMatrix [ i ,   :] . T   -   dataMatrix [ j ,   :] * dataMatrix [ j ,   :] . T \n                 if   eta   =   0 : \n                     print ( eta =0 ) \n                     continue \n\n                 # \u8ba1\u7b97\u51fa\u4e00\u4e2a\u65b0\u7684alphas[j]\u503c \n                 alphas [ j ]   -=   labelMat [ j ] * ( Ei   -   Ej ) / eta \n                 # \u5e76\u4f7f\u7528\u8f85\u52a9\u51fd\u6570\uff0c\u4ee5\u53caL\u548cH\u5bf9\u5176\u8fdb\u884c\u8c03\u6574 \n                 alphas [ j ]   =   clipAlpha ( alphas [ j ],   H ,   L ) \n                 # \u68c0\u67e5alpha[j]\u662f\u5426\u53ea\u662f\u8f7b\u5fae\u7684\u6539\u53d8\uff0c\u5982\u679c\u662f\u7684\u8bdd\uff0c\u5c31\u9000\u51fafor\u5faa\u73af\u3002 \n                 if   ( abs ( alphas [ j ]   -   alphaJold )     0.00001 ): \n                     print ( j not moving enough ) \n                     continue \n                 # \u7136\u540ealphas[i]\u548calphas[j]\u540c\u6837\u8fdb\u884c\u6539\u53d8\uff0c\u867d\u7136\u6539\u53d8\u7684\u5927\u5c0f\u4e00\u6837\uff0c\u4f46\u662f\u6539\u53d8\u7684\u65b9\u5411\u6b63\u597d\u76f8\u53cd \n                 alphas [ i ]   +=   labelMat [ j ] * labelMat [ i ] * ( alphaJold   -   alphas [ j ]) \n                 # \u5728\u5bf9alpha[i], alpha[j] \u8fdb\u884c\u4f18\u5316\u4e4b\u540e\uff0c\u7ed9\u8fd9\u4e24\u4e2aalpha\u503c\u8bbe\u7f6e\u4e00\u4e2a\u5e38\u6570b\u3002 \n                 # w= \u03a3[1~n] ai*yi*xi =  b = yj- \u03a3[1~n] ai*yi(xi*xj) \n                 # \u6240\u4ee5\uff1a  b1 - b = (y1-y) - \u03a3[1~n] yi*(a1-a)*(xi*x1) \n                 # \u4e3a\u4ec0\u4e48\u51cf2\u904d\uff1f \u56e0\u4e3a\u662f \u51cf\u53bb\u03a3[1~n]\uff0c\u6b63\u597d2\u4e2a\u53d8\u91cfi\u548cj\uff0c\u6240\u4ee5\u51cf2\u904d \n                 b1   =   b   -   Ei -   labelMat [ i ] * ( alphas [ i ] - alphaIold ) * dataMatrix [ i ,   :] * dataMatrix [ i ,   :] . T   -   labelMat [ j ] * ( alphas [ j ] - alphaJold ) * dataMatrix [ i ,   :] * dataMatrix [ j ,   :] . T \n                 b2   =   b   -   Ej -   labelMat [ i ] * ( alphas [ i ] - alphaIold ) * dataMatrix [ i ,   :] * dataMatrix [ j ,   :] . T   -   labelMat [ j ] * ( alphas [ j ] - alphaJold ) * dataMatrix [ j ,   :] * dataMatrix [ j ,   :] . T \n                 if   ( 0     alphas [ i ])   and   ( C     alphas [ i ]): \n                     b   =   b1 \n                 elif   ( 0     alphas [ j ])   and   ( C     alphas [ j ]): \n                     b   =   b2 \n                 else : \n                     b   =   ( b1   +   b2 ) / 2.0 \n                 alphaPairsChanged   +=   1 \n                 print ( iter:  %d  i: %d , pairs changed  %d   %   ( iter ,   i ,   alphaPairsChanged )) \n         # \u5728for\u5faa\u73af\u5916\uff0c\u68c0\u67e5alpha\u503c\u662f\u5426\u505a\u4e86\u66f4\u65b0\uff0c\u5982\u679c\u5728\u66f4\u65b0\u5219\u5c06iter\u8bbe\u4e3a0\u540e\u7ee7\u7eed\u8fd0\u884c\u7a0b\u5e8f \n         # \u77e5\u9053\u66f4\u65b0\u5b8c\u6bd5\u540e\uff0citer\u6b21\u5faa\u73af\u65e0\u53d8\u5316\uff0c\u624d\u63a8\u51fa\u5faa\u73af\u3002 \n         if   ( alphaPairsChanged   ==   0 ): \n             iter   +=   1 \n         else : \n             iter   =   0 \n         print ( iteration number:  %d   %   iter ) \n     return   b ,   alphas   \u5b8c\u6574\u4ee3\u7801\u5730\u5740\uff1aSVM\u7b80\u5316\u7248\uff0c\u5e94\u7528\u7b80\u5316\u7248SMO\u7b97\u6cd5\u5904\u7406\u5c0f\u89c4\u6a21\u6570\u636e\u96c6 :  https://github.com/apachecn/MachineLearning/blob/master/src/python/6.SVM/svm-simple.py  \u5b8c\u6574\u4ee3\u7801\u5730\u5740\uff1aSVM\u5b8c\u6574\u7248\uff0c\u4f7f\u7528\u5b8c\u6574 Platt SMO\u7b97\u6cd5\u52a0\u901f\u4f18\u5316\uff0c\u4f18\u5316\u70b9\uff1a\u9009\u62e9alpha\u7684\u65b9\u5f0f\u4e0d\u540c :  https://github.com/apachecn/MachineLearning/blob/master/src/python/6.SVM/svm-complete_Non-Kernel.py", 
            "title": "\u5f00\u53d1\u6d41\u7a0b"
        }, 
        {
            "location": "/\u4e66\u7c4d/\u673a\u5668\u5b66\u4e60\u5b9e\u6218/06.0.\u652f\u6301\u5411\u91cf\u673a/#kernel", 
            "text": "\u5bf9\u4e8e\u7ebf\u6027\u53ef\u5206\u7684\u60c5\u51b5\uff0c\u6548\u679c\u660e\u663e  \u5bf9\u4e8e\u975e\u7ebf\u6027\u7684\u60c5\u51b5\u4e5f\u4e00\u6837\uff0c\u6b64\u65f6\u9700\u8981\u7528\u5230\u4e00\u79cd\u53eb \u6838\u51fd\u6570(kernel) \u7684\u5de5\u5177\u5c06\u6570\u636e\u8f6c\u5316\u4e3a\u5206\u7c7b\u5668\u6613\u4e8e\u7406\u89e3\u7684\u5f62\u5f0f\u3002    \u5229\u7528\u6838\u51fd\u6570\u5c06\u6570\u636e\u6620\u5c04\u5230\u9ad8\u7ef4\u7a7a\u95f4    \u4f7f\u7528\u6838\u51fd\u6570\uff1a\u53ef\u4ee5\u5c06\u6570\u636e\u4ece\u67d0\u4e2a\u7279\u5f81\u7a7a\u95f4\u5230\u53e6\u4e00\u4e2a\u7279\u5f81\u7a7a\u95f4\u7684\u6620\u5c04\u3002\uff08\u901a\u5e38\u60c5\u51b5\u4e0b\uff1a\u8fd9\u79cd\u6620\u5c04\u4f1a\u5c06\u4f4e\u7ef4\u7279\u5f81\u7a7a\u95f4\u6620\u5c04\u5230\u9ad8\u7ef4\u7a7a\u95f4\u3002\uff09  \u5982\u679c\u89c9\u5f97\u7279\u5f81\u7a7a\u95f4\u5f88\u88c5\u903c\u3001\u5f88\u96be\u7406\u89e3\u3002  \u53ef\u4ee5\u628a\u6838\u51fd\u6570\u60f3\u8c61\u6210\u4e00\u4e2a\u5305\u88c5\u5668(wrapper)\u6216\u8005\u662f\u63a5\u53e3(interface)\uff0c\u5b83\u80fd\u5c06\u6570\u636e\u4ece\u67d0\u4e2a\u5f88\u96be\u5904\u7406\u7684\u5f62\u5f0f\u8f6c\u6362\u6210\u4e3a\u53e6\u4e00\u4e2a\u8f83\u5bb9\u6613\u5904\u7406\u7684\u5f62\u5f0f\u3002  \u7ecf\u8fc7\u7a7a\u95f4\u8f6c\u6362\u540e\uff1a\u4f4e\u7ef4\u9700\u8981\u89e3\u51b3\u7684\u975e\u7ebf\u6027\u95ee\u9898\uff0c\u5c31\u53d8\u6210\u4e86\u9ad8\u7ef4\u9700\u8981\u89e3\u51b3\u7684\u7ebf\u6027\u95ee\u9898\u3002  SVM \u4f18\u5316\u7279\u522b\u597d\u7684\u5730\u65b9\uff0c\u5728\u4e8e\u6240\u6709\u7684\u8fd0\u7b97\u90fd\u53ef\u4ee5\u5199\u6210\u5185\u79ef(inner product: \u662f\u63072\u4e2a\u5411\u91cf\u76f8\u4e58\uff0c\u5f97\u5230\u5355\u4e2a\u6807\u91cf \u6216\u8005 \u6570\u503c)\uff1b\u5185\u79ef\u66ff\u6362\u6210\u6838\u51fd\u6570\u7684\u65b9\u5f0f\u88ab\u79f0\u4e3a \u6838\u6280\u5de7(kernel trick) \u6216\u8005 \u6838 \u53d8\u7535 (kernel substation)  \u6838\u51fd\u6570\u5e76\u4e0d\u4ec5\u4ec5\u5e94\u7528\u4e8e\u652f\u6301\u5411\u91cf\u673a\uff0c\u5f88\u591a\u5176\u4ed6\u7684\u673a\u5668\u5b66\u4e60\u7b97\u6cd5\u4e5f\u90fd\u7528\u5230\u6838\u51fd\u6570\u3002\u6700\u6d41\u884c\u7684\u6838\u51fd\u6570\uff1a\u5f84\u5411\u57fa\u51fd\u6570(radial basis function)  \u5f84\u5411\u57fa\u51fd\u6570\u7684\u9ad8\u65af\u7248\u672c\uff0c\u5176\u5177\u4f53\u7684\u516c\u5f0f\u4e3a\uff1a", 
            "title": "\u6838\u51fd\u6570(kernel) \u4f7f\u7528"
        }, 
        {
            "location": "/\u4e66\u7c4d/\u673a\u5668\u5b66\u4e60\u5b9e\u6218/06.0.\u652f\u6301\u5411\u91cf\u673a/#_10", 
            "text": "", 
            "title": "\u9879\u76ee\u6848\u4f8b: \u624b\u5199\u6570\u5b57\u8bc6\u522b\u7684\u4f18\u5316\uff08\u6709\u6838\u51fd\u6570\uff09"
        }, 
        {
            "location": "/\u4e66\u7c4d/\u673a\u5668\u5b66\u4e60\u5b9e\u6218/06.0.\u652f\u6301\u5411\u91cf\u673a/#_11", 
            "text": "\u4f60\u7684\u8001\u677f\u8981\u6c42\uff1a\u4f60\u5199\u7684\u90a3\u4e2a\u624b\u5199\u8bc6\u522b\u7a0b\u5e8f\u975e\u5e38\u597d\uff0c\u4f46\u662f\u5b83\u5360\u7528\u5185\u5b58\u592a\u5927\u3002\u987e\u5ba2\u65e0\u6cd5\u901a\u8fc7\u65e0\u7ebf\u7684\u65b9\u5f0f\u4e0b\u8f7d\u6211\u4eec\u7684\u5e94\u7528\u3002  \u6240\u4ee5\uff1a\u6211\u4eec\u53ef\u4ee5\u8003\u8651\u4f7f\u7528\u652f\u6301\u5411\u91cf\u673a\uff0c\u4fdd\u7559\u652f\u6301\u5411\u91cf\u5c31\u884c\uff08 knn \u9700\u8981\u4fdd\u7559\u6240\u6709\u7684\u5411\u91cf\uff09\uff0c\u5c31\u53ef\u4ee5\u83b7\u5f97\u975e\u5e38\u597d\u7684\u6548\u679c\u3002", 
            "title": "\u9879\u76ee\u6982\u8ff0"
        }, 
        {
            "location": "/\u4e66\u7c4d/\u673a\u5668\u5b66\u4e60\u5b9e\u6218/06.0.\u652f\u6301\u5411\u91cf\u673a/#_12", 
            "text": "\u6536\u96c6\u6570\u636e\uff1a\u63d0\u4f9b\u7684\u6587\u672c\u6587\u4efu51c6\u5907\u6570\u636e\uff1a\u57fa\u4e8e\u4e8c\u503c\u56fe\u50cf\u6784\u9020\u5411\u91cf   \u5c06 32*32\u7684\u6587\u672c\u8f6c\u5316\u4e3a 1*1024\u7684\u77e9\u9635  def   img2vector ( filename ): \n     returnVect   =   zeros (( 1 ,   1024 )) \n     fr   =   open ( filename ) \n     for   i   in   range ( 32 ): \n         lineStr   =   fr . readline () \n         for   j   in   range ( 32 ): \n             returnVect [ 0 ,   32   *   i   +   j ]   =   int ( lineStr [ j ]) \n     return   returnVect  def   loadImages ( dirName ): \n     from   os   import   listdir \n     hwLabels   =   [] \n     print ( dirName ) \n     trainingFileList   =   listdir ( dirName )    # load the training set \n     m   =   len ( trainingFileList ) \n     trainingMat   =   zeros (( m ,   1024 )) \n     for   i   in   range ( m ): \n         fileNameStr   =   trainingFileList [ i ] \n         fileStr   =   fileNameStr . split ( . )[ 0 ]    # take off .txt \n         classNumStr   =   int ( fileStr . split ( _ )[ 0 ]) \n         if   classNumStr   ==   9 : \n             hwLabels . append ( - 1 ) \n         else : \n             hwLabels . append ( 1 ) \n         trainingMat [ i ,   :]   =   img2vector ( %s / %s   %   ( dirName ,   fileNameStr )) \n     return   trainingMat ,   hwLabels    \u5206\u6790\u6570\u636e\uff1a\u5bf9\u56fe\u50cf\u5411\u91cf\u8fdb\u884c\u76ee\u6d4b  \u8bad\u7ec3\u7b97\u6cd5\uff1a\u91c7\u7528\u4e24\u79cd\u4e0d\u540c\u7684\u6838\u51fd\u6570\uff0c\u5e76\u5bf9\u5f84\u5411\u57fa\u6838\u51fd\u6570\u91c7\u7528\u4e0d\u540c\u7684\u8bbe\u7f6e\u6765\u8fd0\u884cSMO\u7b97\u6cd5   def   kernelTrans ( X ,   A ,   kTup ):    # calc the kernel or transform data to a higher dimensional space \n          \u6838\u8f6c\u6362\u51fd\u6570      Args:          X     dataMatIn\u6570\u636e\u96c6          A     dataMatIn\u6570\u636e\u96c6\u7684\u7b2ci\u884c\u7684\u6570\u636e          kTup  \u6838\u51fd\u6570\u7684\u4fe1\u606f      Returns:       \n     m ,   n   =   shape ( X ) \n     K   =   mat ( zeros (( m ,   1 ))) \n     if   kTup [ 0 ]   ==   lin : \n         # linear kernel:   m*n * n*1 = m*1 \n         K   =   X   *   A . T \n     elif   kTup [ 0 ]   ==   rbf : \n         for   j   in   range ( m ): \n             deltaRow   =   X [ j ,   :]   -   A \n             K [ j ]   =   deltaRow   *   deltaRow . T \n         # \u5f84\u5411\u57fa\u51fd\u6570\u7684\u9ad8\u65af\u7248\u672c \n         K   =   exp ( K   /   ( - 1   *   kTup [ 1 ]   **   2 ))    # divide in NumPy is element-wise not matrix like Matlab \n     else : \n         raise   NameError ( Houston We Have a Problem -- That Kernel is not recognized ) \n     return   K  def   smoP ( dataMatIn ,   classLabels ,   C ,   toler ,   maxIter ,   kTup = ( lin ,   0 )): \n          \u5b8c\u6574SMO\u7b97\u6cd5\u5916\u5faa\u73af\uff0c\u4e0esmoSimple\u6709\u4e9b\u7c7b\u4f3c\uff0c\u4f46\u8fd9\u91cc\u7684\u5faa\u73af\u9000\u51fa\u6761\u4ef6\u66f4\u591a\u4e00\u4e9b      Args:          dataMatIn    \u6570\u636e\u96c6          classLabels  \u7c7b\u522b\u6807\u7b7e          C   \u677e\u5f1b\u53d8\u91cf(\u5e38\u91cf\u503c)\uff0c\u5141\u8bb8\u6709\u4e9b\u6570\u636e\u70b9\u53ef\u4ee5\u5904\u4e8e\u5206\u9694\u9762\u7684\u9519\u8bef\u4e00\u4fa7\u3002              \u63a7\u5236\u6700\u5927\u5316\u95f4\u9694\u548c\u4fdd\u8bc1\u5927\u90e8\u5206\u7684\u51fd\u6570\u95f4\u9694\u5c0f\u4e8e1.0\u8fd9\u4e24\u4e2a\u76ee\u6807\u7684\u6743\u91cd\u3002              \u53ef\u4ee5\u901a\u8fc7\u8c03\u8282\u8be5\u53c2\u6570\u8fbe\u5230\u4e0d\u540c\u7684\u7ed3\u679c\u3002          toler   \u5bb9\u9519\u7387          maxIter \u9000\u51fa\u524d\u6700\u5927\u7684\u5faa\u73af\u6b21\u6570          kTup    \u5305\u542b\u6838\u51fd\u6570\u4fe1\u606f\u7684\u5143\u7ec4      Returns:          b       \u6a21\u578b\u7684\u5e38\u91cf\u503c          alphas  \u62c9\u683c\u6717\u65e5\u4e58\u5b50       \n\n     # \u521b\u5efa\u4e00\u4e2a optStruct \u5bf9\u8c61 \n     oS   =   optStruct ( mat ( dataMatIn ),   mat ( classLabels ) . transpose (),   C ,   toler ,   kTup ) \n     iter   =   0 \n     entireSet   =   True \n     alphaPairsChanged   =   0 \n\n     # \u5faa\u73af\u904d\u5386\uff1a\u5faa\u73afmaxIter\u6b21 \u5e76\u4e14 \uff08alphaPairsChanged\u5b58\u5728\u53ef\u4ee5\u6539\u53d8 or \u6240\u6709\u884c\u904d\u5386\u4e00\u904d\uff09 \n     while   ( iter     maxIter )   and   (( alphaPairsChanged     0 )   or   ( entireSet )): \n         alphaPairsChanged   =   0 \n\n         #  \u5f53entireSet=true or \u975e\u8fb9\u754calpha\u5bf9\u6ca1\u6709\u4e86\uff1b\u5c31\u5f00\u59cb\u5bfb\u627e alpha\u5bf9\uff0c\u7136\u540e\u51b3\u5b9a\u662f\u5426\u8981\u8fdb\u884celse\u3002 \n         if   entireSet : \n             # \u5728\u6570\u636e\u96c6\u4e0a\u904d\u5386\u6240\u6709\u53ef\u80fd\u7684alpha \n             for   i   in   range ( oS . m ): \n                 # \u662f\u5426\u5b58\u5728alpha\u5bf9\uff0c\u5b58\u5728\u5c31+1 \n                 alphaPairsChanged   +=   innerL ( i ,   oS ) \n                 # print( fullSet, iter: %d i:%d, pairs changed %d  % (iter, i, alphaPairsChanged)) \n             iter   +=   1 \n\n         # \u5bf9\u5df2\u5b58\u5728 alpha\u5bf9\uff0c\u9009\u51fa\u975e\u8fb9\u754c\u7684alpha\u503c\uff0c\u8fdb\u884c\u4f18\u5316\u3002 \n         else : \n             # \u904d\u5386\u6240\u6709\u7684\u975e\u8fb9\u754calpha\u503c\uff0c\u4e5f\u5c31\u662f\u4e0d\u5728\u8fb9\u754c0\u6216C\u4e0a\u7684\u503c\u3002 \n             nonBoundIs   =   nonzero (( oS . alphas . A     0 )   *   ( oS . alphas . A     C ))[ 0 ] \n             for   i   in   nonBoundIs : \n                 alphaPairsChanged   +=   innerL ( i ,   oS ) \n                 # print( non-bound, iter: %d i:%d, pairs changed %d  % (iter, i, alphaPairsChanged)) \n             iter   +=   1 \n\n         # \u5982\u679c\u627e\u5230alpha\u5bf9\uff0c\u5c31\u4f18\u5316\u975e\u8fb9\u754calpha\u503c\uff0c\u5426\u5219\uff0c\u5c31\u91cd\u65b0\u8fdb\u884c\u5bfb\u627e\uff0c\u5982\u679c\u5bfb\u627e\u4e00\u904d \u904d\u5386\u6240\u6709\u7684\u884c\u8fd8\u662f\u6ca1\u627e\u5230\uff0c\u5c31\u9000\u51fa\u5faa\u73af\u3002 \n         if   entireSet : \n             entireSet   =   False    # toggle entire set loop \n         elif   ( alphaPairsChanged   ==   0 ): \n             entireSet   =   True \n         print ( iteration number:  %d   %   iter ) \n     return   oS . b ,   oS . alphas    \u6d4b\u8bd5\u7b97\u6cd5\uff1a\u4fbf\u643a\u4e00\u4e2a\u51fd\u6570\u6765\u6d4b\u8bd5\u4e0d\u540c\u7684\u548c\u51fd\u6570\u5e76\u8ba1\u7b97\u9519\u8bef\u7387   def   testDigits ( kTup = ( rbf ,   10 )): \n\n     # 1. \u5bfc\u5165\u8bad\u7ec3\u6570\u636e \n     dataArr ,   labelArr   =   loadImages ( input/6.SVM/trainingDigits ) \n     b ,   alphas   =   smoP ( dataArr ,   labelArr ,   200 ,   0.0001 ,   10000 ,   kTup ) \n     datMat   =   mat ( dataArr ) \n     labelMat   =   mat ( labelArr ) . transpose () \n     svInd   =   nonzero ( alphas . A     0 )[ 0 ] \n     sVs   =   datMat [ svInd ] \n     labelSV   =   labelMat [ svInd ] \n     # print( there are %d Support Vectors  % shape(sVs)[0]) \n     m ,   n   =   shape ( datMat ) \n     errorCount   =   0 \n     for   i   in   range ( m ): \n         kernelEval   =   kernelTrans ( sVs ,   datMat [ i ,   :],   kTup ) \n         # 1*m * m*1 = 1*1 \u5355\u4e2a\u9884\u6d4b\u7ed3\u679c \n         predict   =   kernelEval . T   *   multiply ( labelSV ,   alphas [ svInd ])   +   b \n         if   sign ( predict )   !=   sign ( labelArr [ i ]):   errorCount   +=   1 \n     print ( the training error rate is:  %f   %   ( float ( errorCount )   /   m )) \n\n     # 2. \u5bfc\u5165\u6d4b\u8bd5\u6570\u636e \n     dataArr ,   labelArr   =   loadImages ( input/6.SVM/testDigits ) \n     errorCount   =   0 \n     datMat   =   mat ( dataArr ) \n     labelMat   =   mat ( labelArr ) . transpose () \n     m ,   n   =   shape ( datMat ) \n     for   i   in   range ( m ): \n         kernelEval   =   kernelTrans ( sVs ,   datMat [ i ,   :],   kTup ) \n         # 1*m * m*1 = 1*1 \u5355\u4e2a\u9884\u6d4b\u7ed3\u679c \n         predict   =   kernelEval . T   *   multiply ( labelSV ,   alphas [ svInd ])   +   b \n         if   sign ( predict )   !=   sign ( labelArr [ i ]):   errorCount   +=   1 \n     print ( the test error rate is:  %f   %   ( float ( errorCount )   /   m ))    \u4f7f\u7528\u7b97\u6cd5\uff1a\u4e00\u4e2a\u56fe\u50cf\u8bc6\u522b\u7684\u5b8c\u6574\u5e94\u7528\u8fd8\u9700\u8981\u4e00\u4e9b\u56fe\u50cf\u5904\u7406\u7684\u77e5\u8bc6\uff0c\u8fd9\u91cc\u5e76\u4e0d\u6253\u7b97\u6df1\u5165\u4ecb\u7ecd   \u5b8c\u6574\u4ee3\u7801\u5730\u5740 :  https://github.com/apachecn/MachineLearning/blob/master/src/python/6.SVM/svm-complete.py    \u4f5c\u8005\uff1a \u7247\u523b   geekidentity  GitHub\u5730\u5740 :  https://github.com/apachecn/MachineLearning  \u7248\u6743\u58f0\u660e\uff1a\u6b22\u8fce\u8f6c\u8f7d\u5b66\u4e60 =  \u8bf7\u6807\u6ce8\u4fe1\u606f\u6765\u6e90\u4e8e  ApacheCN", 
            "title": "\u5f00\u53d1\u6d41\u7a0b"
        }, 
        {
            "location": "/\u4e66\u7c4d/\u673a\u5668\u5b66\u4e60\u5b9e\u6218/06.1.\u652f\u6301\u5411\u91cf\u673a\u7684\u51e0\u4e2a\u901a\u4fd7\u7406\u89e3/", 
            "text": "SVM\n\n\n\n\n\u58f0\u660e\n\n\n\n\n\u9605\u8bfb\u672c\u6587\u524d\uff0c\u9700\u8981\u60a8\u61c2\u4e00\u4e9b\u9ad8\u7b49\u6570\u5b66\u3001\u6982\u7387\u8bba\u3001\u7ebf\u6027\u4ee3\u6570\u7684\u76f8\u5173\u77e5\u8bc6\uff0c\u4ee5\u4fbf\u66f4\u597d\u7406\u89e3\u3002\n\n\n\n\n\u4e0b\u9762\u8fd9\u4e9b\u5173\u4e8e SVM \u7684\u7406\u89e3\uff0c\u662f\u6839\u636e\u77e5\u4e4e\u548c\u5176\u4ed6\u535a\u5ba2\u6216\u8005\u7f51\u7ad9\u4e2d\u67e5\u8be2\u5230\u7684\u8d44\u6599\u52a0\u4ee5\u6574\u7406\uff0c\n\u5e76\u7ed3\u5408 ApacheCN \u8fd9\u6bb5\u65f6\u95f4\u7684\u64b8\u4ee3\u7801\u548c\u76f8\u5173\u7814\u7a76\u5f97\u5230\uff0c\u6709\u7406\u89e3\u6709\u8bef\u7684\u5730\u65b9\u8fd8\u671b\u5927\u5bb6\u6307\u51fa\uff0c\u8c22\u8c22\u3002\n\u518d\u6b21\u611f\u8c22\u7f51\u4e0a\u7684\u5927\u4f6c\u4eec\u7684\u65e0\u79c1\u8d21\u732e\u3002\n\nApacheCN: http://www.apachecn.org/\nApacheCN MachineLearning github: https://github.com/apachecn/MachineLearning\n\n\u7f51\u4e0a\u8d44\u6599\u53c2\u8003\u94fe\u63a5:https://www.zhihu.com/question/21094489\n            http://docs.opencv.org/2.4/doc/tutorials/ml/introduction_to_svm/introduction_to_svm.html\n            https://zhuanlan.zhihu.com/p/26891427?utm_medium=social\nutm_source=qq\n            https://zhuanlan.zhihu.com/p/21308801?utm_medium=social\nutm_source=qq\n            http://blog.csdn.net/v_july_v/article/details/7624837\n\n\n\n\nOverview\n\n\nWhat's the SVM?\n\n\n_\n \u9996\u5148\uff0c\u652f\u6301\u5411\u91cf\u673a\u4e0d\u662f\u4e00\u79cd\u673a\u5668\uff0c\u800c\u662f\u4e00\u79cd\u673a\u5668\u5b66\u4e60\u7b97\u6cd5\u3002\n\n\n1\u3001SVM - Support Vector Machine \uff0c\u4fd7\u79f0\u652f\u6301\u5411\u91cf\u673a\uff0c\u662f\u4e00\u79cd supervised learning \uff08\u76d1\u7763\u5b66\u4e60\uff09\u7b97\u6cd5\uff0c\u5c5e\u4e8e classification \uff08\u5206\u7c7b\uff09\u7684\u8303\u7574\u3002\n\n\n2\u3001\u5728\u6570\u636e\u6316\u6398\u7684\u5e94\u7528\u4e2d\uff0c\u4e0e unsupervised learning \uff08\u65e0\u76d1\u7763\u5b66\u4e60\uff09\u7684 Clustering\uff08\u805a\u7c7b\uff09\u76f8\u5bf9\u5e94\u548c\u533a\u522b\u3002\n\n\n3\u3001\u5e7f\u6cdb\u5e94\u7528\u4e8e Machine Learning \uff08\u673a\u5668\u5b66\u4e60\uff09\uff0cComputer Vision \uff08\u8ba1\u7b97\u673a\u89c6\u89c9\uff0c\u88c5\u903c\u4e00\u70b9\u8bf4\uff0c\u5c31\u662f cv\uff09\u548c Data Mining \uff08\u6570\u636e\u6316\u6398\uff09\u5f53\u4e2d\u3002\n\n\n\u201c Machine \uff08\u673a\uff09\u201d \u662f\u4ec0\u4e48\uff1f\n\n\nClassification Machine\uff0c\u662f\u5206\u7c7b\u5668\uff0c\u8fd9\u4e2a\u6ca1\u4ec0\u4e48\u597d\u8bf4\u7684\u3002\u4e5f\u53ef\u4ee5\u7406\u89e3\u4e3a\u7b97\u6cd5\uff0c\u673a\u5668\u5b66\u4e60\u9886\u57df\u91cc\u9762\u5e38\u5e38\u7528 \u201c\u673a\u201d \u4e5f\u5c31\u662f machine \u8fd9\u4e2a\u5b57\u8868\u793a\u7b97\u6cd5\u3002\n\n\n\u201c\u652f\u6301\u5411\u91cf\u201d \u53c8\u662f\u4ec0\u4e48\uff1f\n\n\n\u901a\u4fd7\u7406\u89e3\n\uff1a\nsupport vector \uff08\u652f\u6301\u5411\u91cf\uff09\u7684\u610f\u601d\u5c31\u662f \n\u6570\u636e\u96c6\u4e2d\u7684\u67d0\u4e9b\u70b9\n\uff0c\u4f4d\u7f6e\u6bd4\u8f83\u7279\u6b8a\u3002\u6bd4\u5982 x+y-2=0 \u8fd9\u6761\u76f4\u7ebf\uff0c\u76f4\u7ebf\u4e0a\u9762\u533a\u57df x+y-2\n0 \u7684\u5168\u662f A \u7c7b\uff0c\u4e0b\u9762\u7684 x+y-2\n0 \u7684\u5168\u662f B \u7c7b\uff0c\u6211\u4eec\u627e\u8fd9\u6761\u76f4\u7ebf\u7684\u65f6\u5019\uff0c\u4e00\u822c\u5c31\u770b\u805a\u96c6\u5728\u4e00\u8d77\u7684\u4e24\u7c7b\u6570\u636e\uff0c\u4ed6\u4eec\u5404\u81ea\u7684 \n\u6700\u8fb9\u7f18\n \u4f4d\u7f6e\u7684\u70b9\uff0c\u4e5f\u5c31\u662f\u6700\u9760\u8fd1\u5212\u5206\u76f4\u7ebf\u7684\u90a3\u51e0\u4e2a\u70b9\uff0c\u800c\u5176\u4ed6\u70b9\u5bf9\u8fd9\u6761\u76f4\u7ebf\u7684\u6700\u7ec8\u4f4d\u7f6e\u7684\u786e\u5b9a\u8d77\u4e0d\u4e86\u4f5c\u7528\uff0c\u6240\u4ee5\u6211\u59d1\u4e14\u53eb\u8fd9\u4e9b\u70b9\u53eb \u201c\u652f\u6301\u70b9\u201d\uff08\u610f\u601d\u5c31\u662f\u6709\u7528\u7684\u70b9\uff09\uff0c\u4f46\u662f\u5728\u6570\u5b66\u4e0a\uff0c\u6ca1\u8fd9\u79cd\u8bf4\u6cd5\uff0c\u6570\u5b66\u91cc\u7684\u70b9\uff0c\u53c8\u53ef\u4ee5\u53eb\u5411\u91cf\uff0c\u6bd4\u5982 \u4e8c\u7ef4\u70b9 (x,y) \u5c31\u662f\u4e8c\u7ef4\u5411\u91cf\uff0c\u4e09\u7ef4\u5ea6\u7684\u5c31\u662f\u4e09\u7ef4\u5411\u91cf (x,y,z)\u3002\u6240\u4ee5 \u201c\n\u652f\u6301\u70b9\n\u201d \u6539\u53eb \u201c\n\u652f\u6301\u5411\u91cf\n\u201d \uff0c\u542c\u8d77\u6765\u6bd4\u8f83\u4e13\u4e1a\uff0c\u800c\u4e14\u53c8\u88c5\u903c\uff0c\u4f55\u4e50\u800c\u4e0d\u4e3a\u5462\uff1f\u662f\u5427... \n\n\n\u4e0d\u901a\u4fd7\u7684\u7406\u89e3\n\uff1a\n\u5728 maximum margin \uff08\u6700\u5927\u95f4\u9694\uff09\u4e0a\u7684\u8fd9\u4e9b\u70b9\u5c31\u53eb \u201c\u652f\u6301\u5411\u91cf\u201d\uff0c\u6211\u60f3\u8865\u5145\u7684\u662f\u4e3a\u5565\u8fd9\u4e9b\u70b9\u5c31\u53eb \u201c\u652f\u6301\u5411\u91cf\u201d \uff0c\u56e0\u4e3a\u6700\u540e\u7684 classification machine \uff08\u5206\u7c7b\u5668\uff09\u7684\u8868\u8fbe\u5f0f\u91cc\u53ea\u542b\u7528\u8fd9\u4e9b \u201c\u652f\u6301\u5411\u91cf\u201d \u7684\u4fe1\u606f\uff0c\u800c\u4e0e\u5176\u4ed6\u6570\u636e\u70b9\u65e0\u5173\uff1a\n\n\n\n\n\u5728\u8fd9\u4e2a\u8868\u8fbe\u5f0f\u4e2d\uff0c\u53ea\u6709\u652f\u6301\u5411\u91cf\u7684\u7cfb\u6570 \n \u4e0d\u7b49\u4e8e 0 \u3002\n\n\n\u5982\u679c\u8fd8\u662f\u4e0d\u600e\u4e48\u7406\u89e3\uff0c\u4e0d\u8981\u7d27\uff0c\u770b\u4e0b\u56fe:\n\n\n\n\n\u201c\u652f\u6301\u5411\u91cf\u201d \u5c31\u662f\u56fe\u4e2d\u7528\u7d2b\u8272\u6846\u6846\u5708\u51fa\u6765\u7684\u70b9...\n\n\nConcept \uff08\u76f8\u5173\u6982\u5ff5\uff09\n\n\n\u6211\u4eec\u5148\u770b\u4e00\u5f20\u56fe\n\n\n\n\nlinearly separable \uff08\u7ebf\u6027\u53ef\u5206\uff09\n: \u5982\u4e0a\u56fe\u4e2d\u7684\u4e24\u7ec4\u6570\u636e\uff0c\u5b83\u4eec\u4e4b\u95f4\u5df2\u7ecf\u5206\u7684\u8db3\u591f\u5f00\u4e86\uff0c\u56e0\u6b64\u5f88\u5bb9\u6613\u5c31\u53ef\u4ee5\u5728\u56fe\u4e2d\u753b\u51fa\u4e00\u6761\u76f4\u7ebf\u5c06\u4e24\u7ec4\u6570\u636e\u70b9\u5206\u5f00\u3002\u5728\u8fd9\u79cd\u60c5\u51b5\u4e0b\uff0c\u8fd9\u7ec4\u6570\u636e\u5c31\u88ab\u79f0\u4e3a\n\u7ebf\u6027\u53ef\u5206\u6570\u636e\n\u3002\n\n\nseparating hyperplane\uff08\u5206\u9694\u8d85\u5e73\u9762\uff09\n: \u4e0a\u8ff0\u5c06\u6570\u636e\u96c6\u5206\u9694\u5f00\u6765\u7684\u76f4\u7ebf\u79f0\u4e3a\n\u5206\u9694\u8d85\u5e73\u9762\n\u3002\n\n\nhyperplane\uff08\u8d85\u5e73\u9762\uff09\n: \u5728\u4e0a\u9762\u7ed9\u51fa\u7684\u4f8b\u5b50\u4e2d\uff0c\u7531\u4e8e\u6570\u636e\u70b9\u90fd\u5728\u4e8c\u7ef4\u5e73\u9762\u4e0a\uff0c\u6240\u4ee5\u6b64\u65f6\u5206\u9694\u8d85\u5e73\u9762\u5c31\u53ea\u662f\u4e00\u6761\u76f4\u7ebf\u3002\u4f46\u662f\uff0c\u5982\u679c\u6240\u7ed9\u7684\u6570\u636e\u96c6\u662f\u4e09\u7ef4\u7684\uff0c\u90a3\u4e48\u6b64\u65f6\u7528\u6765\u5206\u9694\u6570\u636e\u7684\u5c31\u662f\u4e00\u4e2a\u5e73\u9762\u3002\u663e\u800c\u6613\u89c1\uff0c\u66f4\u9ad8\u7eac\u5ea6\u7684\u60c5\u51b5\u53ef\u4ee5\u4f9d\u6b64\u7c7b\u63a8\u3002\u5982\u679c\u6570\u636e\u662f 1024 \u7ef4\u7684\uff0c\u90a3\u4e48\u5c31\u9700\u8981\u4e00\u4e2a 1023 \u7ef4\u7684\u67d0\u67d0\u5bf9\u8c61\uff08\u4e0d\u662f\u4f60\u4eec\u7684\u7537\uff08\u5973\uff09\u7968\uff09\u6765\u5bf9\u6570\u636e\u8fdb\u884c\u5206\u9694\u3002\u8fd9\u4e2a 1023 \u7ef4\u7684\u67d0\u67d0\u5bf9\u8c61\u5230\u5e95\u5e94\u8be5\u53eb\u4ec0\u4e48\u5462\uff1f N-1 \u7ef4\u5462\uff1f\u8be5\u5bf9\u8c61\u88ab\u79f0\u4e3a\n\u8d85\u5e73\u9762\n\uff0c\u4e5f\u5c31\u662f\u5206\u7c7b\u7684\u51b3\u7b56\u8fb9\u754c\u3002\u5206\u5e03\u5728\u8d85\u5e73\u9762\u4e00\u4fa7\u7684\u6240\u6709\u6570\u636e\u90fd\u5c5e\u4e8e\u67d0\u4e2a\u7c7b\u522b\uff0c\u800c\u5206\u5e03\u5728\u53e6\u4e00\u4fa7\u7684\u6240\u6709\u6570\u636e\u5219\u5c5e\u4e8e\u53e6\u4e00\u4e2a\u7c7b\u522b\u3002\n\n\nmargin\uff08\u95f4\u9694\uff09\n: \u6211\u4eec\u5e0c\u671b\u80fd\u901a\u8fc7\u4e0a\u8ff0\u7684\u65b9\u5f0f\u6765\u6784\u5efa\u5206\u7c7b\u5668\uff0c\u5373\u5982\u679c\u6570\u636e\u70b9\u79bb\u51b3\u7b56\u8fb9\u754c\u8d8a\u8fdc\uff0c\u90a3\u4e48\u5176\u6700\u540e\u7684\u9884\u6d4b\u7ed3\u679c\u4e5f\u5c31\u8d8a\u53ef\u4fe1\u3002\u65e2\u7136\u8fd9\u6837\uff0c\u6211\u4eec\u5e0c\u671b\u627e\u5230\u79bb\u5206\u9694\u8d85\u5e73\u9762\u6700\u8fd1\u7684\u70b9\uff0c\u786e\u4fdd\u5b83\u4eec\u79bb\u5206\u9694\u9762\u7684\u8ddd\u79bb\u5c3d\u53ef\u80fd\u8fdc\u3002\u8fd9\u91cc\u6240\u8bf4\u7684\u70b9\u5230\u5206\u9694\u9762\u7684\u8ddd\u79bb\u5c31\u662f \n\u95f4\u9694\n\u3002\u6211\u4eec\u5e0c\u671b\u95f4\u9694\u5c3d\u53ef\u80fd\u5730\u5927\uff0c\u8fd9\u662f\u56e0\u4e3a\u5982\u679c\u6211\u4eec\u72af\u9519\u6216\u8005\u5728\u6709\u9650\u6570\u636e\u4e0a\u8bad\u7ec3\u5206\u7c7b\u5668\u7684\u8bdd\uff0c\u6211\u4eec\u5e0c\u671b\u5206\u7c7b\u5668\u5c3d\u53ef\u80fd\u5065\u58ee\u3002\n\n\n\u652f\u6301\u5411\u91cf\uff08support vector\uff09\n : \u5c31\u662f\u4e0a\u9762\u6240\u8bf4\u7684\u79bb\u5206\u9694\u8d85\u5e73\u9762\u6700\u8fd1\u7684\u90a3\u4e9b\u70b9\u3002\n\n\n\u5206\u7c7b\u5668\n : \u5206\u7c7b\u5668\u5c31\u662f\u7ed9\u5b9a\u4e00\u4e2a\u6837\u672c\u7684\u6570\u636e\uff0c\u5224\u5b9a\u8fd9\u4e2a\u6837\u672c\u5c5e\u4e8e\u54ea\u4e2a\u7c7b\u522b\u7684\u7b97\u6cd5\u3002\u4f8b\u5982\u5728\u80a1\u7968\u6da8\u8dcc\u9884\u6d4b\u4e2d\uff0c\u6211\u4eec\u8ba4\u4e3a\u524d\u4e00\u5929\u7684\u4ea4\u6613\u91cf\u548c\u6536\u76d8\u4ef7\u5bf9\u4e8e\u7b2c\u4e8c\u5929\u7684\u6da8\u8dcc\u662f\u6709\u5f71\u54cd\u7684\uff0c\u90a3\u4e48\u5206\u7c7b\u5668\u5c31\u662f\u901a\u8fc7\u6837\u672c\u7684\u4ea4\u6613\u91cf\u548c\u6536\u76d8\u4ef7\u9884\u6d4b\u7b2c\u4e8c\u5929\u7684\u6da8\u8dcc\u60c5\u51b5\u7684\u7b97\u6cd5\u3002\n\n\n\u7279\u5f81\n : \u5728\u5206\u7c7b\u95ee\u9898\u4e2d\uff0c\u8f93\u5165\u5230\u5206\u7c7b\u5668\u4e2d\u7684\u6570\u636e\u53eb\u505a\u7279\u5f81\u3002\u4ee5\u4e0a\u9762\u7684\u80a1\u7968\u6da8\u8dcc\u9884\u6d4b\u95ee\u9898\u4e3a\u4f8b\uff0c\u7279\u5f81\u5c31\u662f\u524d\u4e00\u5929\u7684\u4ea4\u6613\u91cf\u548c\u6536\u76d8\u4ef7\u3002\n\n\n\u7ebf\u6027\u5206\u7c7b\u5668\n : \u7ebf\u6027\u5206\u7c7b\u5668\u662f\u5206\u7c7b\u5668\u4e2d\u7684\u4e00\u79cd\uff0c\u5c31\u662f\u5224\u5b9a\u5206\u7c7b\u7ed3\u679c\u7684\u6839\u636e\u662f\u901a\u8fc7\u7279\u5f81\u7684\u7ebf\u6027\u7ec4\u5408\u5f97\u5230\u7684\uff0c\u4e0d\u80fd\u901a\u8fc7\u7279\u5f81\u7684\u975e\u7ebf\u6027\u8fd0\u7b97\u7ed3\u679c\u4f5c\u4e3a\u5224\u5b9a\u6839\u636e\u3002\u8fd8\u4ee5\u4e0a\u9762\u7684\u80a1\u7968\u6da8\u8dcc\u9884\u6d4b\u95ee\u9898\u4e3a\u4f8b\uff0c\u5224\u65ad\u7684\u4f9d\u636e\u53ea\u80fd\u662f\u524d\u4e00\u5929\u7684\u4ea4\u6613\u91cf\u548c\u6536\u76d8\u4ef7\u7684\u7ebf\u6027\u7ec4\u5408\uff0c\u4e0d\u80fd\u5c06\u4ea4\u6613\u91cf\u548c\u6536\u76d8\u4ef7\u8fdb\u884c\u5f00\u65b9\uff0c\u5e73\u65b9\u7b49\u8fd0\u7b97\u3002\n\n\nHow does it work? \uff08SVM \u539f\u7406\uff09\n\n\n1\u3001\u5f15\u7528\u77e5\u4e4e\u4e0a \n@\u7b80\u4e4b\n \u5927\u4f6c\u7684\u56de\u7b54\uff1a\n\n\n\u9996\u5148\u6211\u4eec\u8bb2\u4e2a\u6545\u4e8b:\n\n\n\u5728\u5f88\u4e45\u4ee5\u524d\u7684\u60c5\u4eba\u8282\uff0c\u5927\u4fa0\u8981\u53bb\u6551\u4ed6\u7684\u7231\u4eba\uff0c\u4f46\u9b54\u9b3c\u548c\u4ed6\u73a9\u4e86\u4e00\u4e2a\u6e38\u620f\u3002\n\n\n\u9b54\u9b3c\u5728\u684c\u5b50\u4e0a\u4f3c\u4e4e\u6709\u89c4\u5f8b\u653e\u4e86\u4e24\u79cd\u989c\u8272\u7684\u7403\uff0c\u8bf4\uff1a\u201c\u4f60\u7528\u4e00\u6839\u68cd\u5206\u5f00\u5b83\u4eec\uff1f\u8981\u6c42\uff1a\u5c3d\u91cf\u5728\u653e\u66f4\u591a\u7403\u4e4b\u540e\uff0c\u4ecd\u7136\u9002\u7528\u3002\u201d\n\n\n\n\n\u4e8e\u662f\u5927\u4fa0\u8fd9\u6837\u653e\uff0c\u5e72\u7684\u4e0d\u9519\uff1f \n\n\n\n\n\u7136\u540e\u9b54\u9b3c\uff0c\u53c8\u5728\u684c\u4e0a\u653e\u4e86\u66f4\u591a\u7684\u7403\uff0c\u4f3c\u4e4e\u6709\u4e00\u4e2a\u7403\u7ad9\u9519\u4e86\u9635\u8425\u3002\n\n\n\n\nSVM \u5c31\u662f\u8bd5\u56fe\u628a\u68cd\u653e\u5728\u6700\u4f73\u4f4d\u7f6e\uff0c\u597d\u8ba9\u5728\u68cd\u7684\u4e24\u8fb9\u6709\u5c3d\u53ef\u80fd\u5927\u7684\u95f4\u9699\u3002\n\n\n\n\n\u73b0\u5728\u5373\u4f7f\u9b54\u9b3c\u653e\u4e86\u66f4\u591a\u7684\u7403\uff0c\u68cd\u4ecd\u7136\u662f\u4e00\u4e2a\u597d\u7684\u5206\u754c\u7ebf\u3002\n\n\n\n\n\u7136\u540e\uff0c\u5728 SVM \u5de5\u5177\u7bb1\u4e2d\u6709\u53e6\u4e00\u4e2a\u66f4\u52a0\u91cd\u8981\u7684 trick\u3002 \u9b54\u9b3c\u770b\u5230\u5927\u4fa0\u5df2\u7ecf\u5b66\u4f1a\u4e86\u4e00\u4e2a trick \uff0c\u4e8e\u662f\u9b54\u9b3c\u7ed9\u4e86\u5927\u4fa0\u4e00\u4e2a\u65b0\u7684\u6311\u6218\u3002\n\n\n\n\n\u73b0\u5728\uff0c\u5927\u4fa0\u6ca1\u6709\u68cd\u53ef\u4ee5\u5f88\u597d\u5e2e\u4ed6\u5206\u5f00\u4e24\u79cd\u7403\u4e86\uff0c\u73b0\u5728\u600e\u4e48\u529e\u5462\uff1f\u5f53\u7136\u50cf\u6240\u6709\u6b66\u4fa0\u7247\u4e2d\u4e00\u6837\u5927\u4fa0\u684c\u5b50\u4e00\u62cd\uff0c\u7403\u98de\u5230\u7a7a\u4e2d\u3002\u7136\u540e\uff0c\u51ed\u501f\u5927\u4fa0\u7684\u8f7b\u529f\uff0c\u5927\u4fa0\u6293\u8d77\u4e00\u5f20\u7eb8\uff0c\u63d2\u5230\u4e86\u4e24\u79cd\u7403\u7684\u4e2d\u95f4\u3002\n\n\n\n\n\u73b0\u5728\uff0c\u4ece\u9b54\u9b3c\u7684\u89d2\u5ea6\u770b\u8fd9\u4e9b\u7403\uff0c\u8fd9\u4e9b\u7403\u770b\u8d77\u6765\u50cf\u662f\u88ab\u4e00\u6761\u66f2\u7ebf\u5206\u5f00\u4e86\u3002\n\n\n\n\n\u518d\u4e4b\u540e\uff0c\u65e0\u804a\u7684\u5927\u4eba\u4eec\uff0c\u628a\u8fd9\u4e9b\u7403\u53eb\u505a \n\u300cdata\u300d\n\uff0c\u628a\u68cd\u5b50\u53eb\u505a \n\u300cclassifier\u300d\n, \u6700\u5927\u95f4\u9699 trick \u53eb\u505a\n\u300coptimization\u300d\n\uff0c \u62cd\u684c\u5b50\u53eb\u505a\n\u300ckernelling\u300d\n, \u90a3\u5f20\u7eb8\u53eb\u505a\n\u300chyperplane\u300d\n \u3002\n\n\n\u6709\u68af\u5b50\u7684\u7ae5\u978b\uff0c\u53ef\u4ee5\u770b\u4e00\u4e0b\u8fd9\u4e2a\u5730\u65b9\uff0c\u770b\u89c6\u9891\u6765\u66f4\u76f4\u89c2\u7684\u611f\u53d7\uff1a\n\n\nhttps://www.youtube.com/watch?v=3liCbRZPrZA\n\n\n2\u3001\u5f15\u7528\u77e5\u4e4e \n@\u5f00\u819b\u624b\u6c34\u8d27\n \u5927\u4f6c\u7684\u56de\u7b54\uff0c\u6211\u8ba4\u4e3a\u662f\u8d85\u7ea7\u901a\u4fd7\u7684\u4e00\u4e2a\u7248\u672c\uff1a\n\n\n\u652f\u6301\u5411\u91cf\u673a\u662f\u7528\u6765\u89e3\u51b3\u5206\u7c7b\u95ee\u9898\u7684\u3002\n\n\n\u5148\u8003\u8651\u6700\u7b80\u5355\u7684\u60c5\u51b5\uff0c\u8c4c\u8c46\u548c\u7c73\u7c92\uff0c\u7528\u6652\u5b50\u5f88\u5feb\u53ef\u4ee5\u5206\u5f00\uff0c\u5c0f\u9897\u7c92\u6f0f\u4e0b\u53bb\uff0c\u5927\u9897\u7c92\u4fdd\u7559\u3002\n\n\n\u7528\u4e00\u4e2a\u51fd\u6570\u6765\u8868\u793a\u5c31\u662f\u5f53\u76f4\u5f84 d \u5927\u4e8e\u67d0\u4e2a\u503c D \uff0c\u5c31\u5224\u5b9a\u4e3a\u8c4c\u8c46\uff0c\u5c0f\u4e8e\u67d0\u4e2a\u503c\u5c31\u662f\u7c73\u7c92\u3002\n\n\nd\nD, \u8c4c\u8c46\n\n\nd\nD,\u7c73\u7c92\n\n\n\u5728\u6570\u8f74\u4e0a\u5c31\u662f\u5728d\u5de6\u8fb9\u5c31\u662f\u7c73\u7c92\uff0c\u53f3\u8fb9\u5c31\u662f\u7eff\u8c46\uff0c\u8fd9\u662f\u4e00\u7ef4\u7684\u60c5\u51b5\u3002\n\n\n\u4f46\u662f\u5b9e\u9645\u95ee\u9898\u6ca1\u8fd9\u4e48\u7b80\u5355\uff0c\u8003\u8651\u7684\u95ee\u9898\u4e0d\u5355\u5355\u662f\u5c3a\u5bf8\uff0c\u4e00\u4e2a\u82b1\u7684\u4e24\u4e2a\u54c1\u79cd\uff0c\u600e\u4e48\u5206\u7c7b\uff1f\n\n\n\u5047\u8bbe\u51b3\u5b9a\u4ed6\u4eec\u5206\u7c7b\u7684\u6709\u4e24\u4e2a\u5c5e\u6027\uff0c\u82b1\u74e3\u5c3a\u5bf8\u548c\u989c\u8272\u3002\u5355\u72ec\u7528\u4e00\u4e2a\u5c5e\u6027\u6765\u5206\u7c7b\uff0c\u50cf\u521a\u624d\u5206\u7c73\u7c92\u90a3\u6837\uff0c\u5c31\u4e0d\u884c\u4e86\u3002\u8fd9\u4e2a\u65f6\u5019\u6211\u4eec\u8bbe\u7f6e\u4e24\u4e2a\u503c \u5c3a\u5bf8 x \u548c\u989c\u8272 y.\n\n\n\u6211\u4eec\u628a\u6240\u6709\u7684\u6570\u636e\u90fd\u4e22\u5230 x-y \u5e73\u9762\u4e0a\u4f5c\u4e3a\u70b9\uff0c\u6309\u9053\u7406\u5982\u679c\u53ea\u6709\u8fd9\u4e24\u4e2a\u5c5e\u6027\u51b3\u5b9a\u4e86\u4e24\u4e2a\u54c1\u79cd\uff0c\u6570\u636e\u80af\u5b9a\u4f1a\u6309\u4e24\u7c7b\u805a\u96c6\u5728\u8fd9\u4e2a\u4e8c\u7ef4\u5e73\u9762\u4e0a\u3002\n\n\n\u6211\u4eec\u53ea\u8981\u627e\u5230\u4e00\u6761\u76f4\u7ebf\uff0c\u628a\u8fd9\u4e24\u7c7b\u5212\u5206\u5f00\u6765\uff0c\u5206\u7c7b\u5c31\u5f88\u5bb9\u6613\u4e86\uff0c\u4ee5\u540e\u9047\u5230\u4e00\u4e2a\u6570\u636e\uff0c\u5c31\u4e22\u8fdb\u8fd9\u4e2a\u5e73\u9762\uff0c\u770b\u5728\u76f4\u7ebf\u7684\u54ea\u4e00\u8fb9\uff0c\u5c31\u662f\u54ea\u4e00\u7c7b\u3002\n\n\n\u6bd4\u5982 x+y-2=0 \u8fd9\u6761\u76f4\u7ebf\uff0c\u6211\u4eec\u628a\u6570\u636e (x,y) \u4ee3\u5165\uff0c\u53ea\u8981\u8ba4\u4e3a x+y-2\n0 \u7684\u5c31\u662f A \u7c7b\uff0c x+y-2\n0 \u7684\u5c31\u662f B \u7c7b\u3002\n\n\n\u4ee5\u6b64\u7c7b\u63a8\uff0c\u8fd8\u6709\u4e09\u7ef4\u7684\uff0c\u56db\u7ef4\u7684\uff0cN\u7ef4\u7684 \u5c5e\u6027\u7684\u5206\u7c7b\uff0c\u8fd9\u6837\u6784\u9020\u7684\u4e5f\u8bb8\u5c31\u4e0d\u662f\u76f4\u7ebf\uff0c\u800c\u662f\u5e73\u9762\uff0c\u8d85\u5e73\u9762\u3002\n\n\n\u4e00\u4e2a\u4e09\u7ef4\u7684\u51fd\u6570\u5206\u7c7b \uff1ax+y+z-2=0\uff0c\u8fd9\u5c31\u662f\u4e2a\u5206\u7c7b\u7684\u5e73\u9762\u4e86\u3002\n\n\n\u6709\u65f6\u5019\uff0c\u5206\u7c7b\u7684\u90a3\u6761\u7ebf\u4e0d\u4e00\u5b9a\u662f\u76f4\u7ebf\uff0c\u8fd8\u6709\u53ef\u80fd\u662f\u66f2\u7ebf\uff0c\u6211\u4eec\u901a\u8fc7\u67d0\u4e9b\u51fd\u6570\u6765\u8f6c\u6362\uff0c\u5c31\u53ef\u4ee5\u8f6c\u5316\u6210\u521a\u624d\u7684\u54ea\u79cd\u591a\u7ef4\u7684\u5206\u7c7b\u95ee\u9898\uff0c\u8fd9\u4e2a\u5c31\u662f\u6838\u51fd\u6570\u7684\u601d\u60f3\u3002\n\n\n\u4f8b\u5982\uff1a\u5206\u7c7b\u7684\u51fd\u6570\u662f\u4e2a\u5706\u5f62 x\n2+y\n2-4=0 \u3002\u8fd9\u4e2a\u65f6\u5019\u4ee4 x^2=a ; y^2=b ,\u8fd8\u4e0d\u5c31\u53d8\u6210\u4e86a+b-4=0 \u8fd9\u79cd\u76f4\u7ebf\u95ee\u9898\u4e86\u3002\n\n\n\u8fd9\u5c31\u662f\u652f\u6301\u5411\u91cf\u673a\u7684\u601d\u60f3\u3002\n\n\n3\u3001\u5f15\u7528 \n@\u80e1KF\n \u5927\u4f6c\u7684\u56de\u7b54\uff08\u8fd9\u4e2a\u9700\u8981\u4e00\u4e9b\u6570\u5b66\u77e5\u8bc6\uff09\uff1a\n\n\n\u5982\u56fe\u7684\u4f8b\u5b50\uff0c\uff08\u8bad\u7ec3\u96c6\uff09\u7ea2\u8272\u70b9\u662f\u6211\u4eec\u5df2\u77e5\u7684\u5206\u7c7b1\uff0c\uff08\u8bad\u7ec3\u96c6\uff09\u84dd\u8272\u70b9\u662f\u5df2\u77e5\u7684\u5206\u7c7b2\uff0c\u6211\u4eec\u60f3\u5bfb\u627e\u4e00\u4e2a\u5206\u754c\u8d85\u5e73\u9762\uff08\u56fe\u4e2d\u7eff\u7ebf\uff09\uff08\u56e0\u4e3a\u793a\u4f8b\u662f\u4e8c\u7ef4\u6570\u636e\u70b9\uff0c\u6240\u4ee5\u53ea\u662f\u4e00\u6761\u7ebf\uff0c\u5982\u679c\u6570\u636e\u662f\u4e09\u7ef4\u7684\u5c31\u662f\u5e73\u9762\uff0c\u5982\u679c\u662f\u4e09\u7ef4\u4ee5\u4e0a\u5c31\u662f\u8d85\u5e73\u9762\uff09\u628a\u8fd9\u4e24\u7c7b\u5b8c\u5168\u5206\u5f00\uff0c\u8fd9\u6837\u7684\u8bdd\u518d\u6765\u4e00\u4e2a\u6837\u672c\u70b9\u9700\u8981\u6211\u4eec\u9884\u6d4b\u7684\u8bdd\uff0c\u6211\u4eec\u5c31\u53ef\u4ee5\u6839\u636e\u8fd9\u4e2a\u5206\u754c\u8d85\u5e73\u9762\u9884\u6d4b\u51fa\u5206\u7c7b\u7ed3\u679c\u3002\n\n\n\n\n\u90a3\u6211\u4eec\u5982\u4f55\u9009\u62e9\u8fd9\u4e2a\u5206\u7c7b\u8d85\u5e73\u9762\u5462\uff1f\u4ece\u6570\u5b66\u4e0a\u8bf4\uff0c\u8d85\u5e73\u9762\u7684\u516c\u5f0f\u662f,\u4e5f\u5c31\u662f\u8bf4\u5982\u4f55\u9009\u53d6\u8fd9\u4e2a \n\uff08\u662f\u4e2a\u5411\u91cf\uff09\u3002\n\n\n\u4f20\u7edf\u65b9\u6cd5\u662f\u6839\u636e\u6700\u5c0f\u4e8c\u4e58\u9519\u8bef\u6cd5\uff08least squared error\uff09\uff0c\u9996\u5148\u968f\u4fbf\u5b9a\u9009\u53d6\u4e00\u4e2a\u968f\u673a\u5e73\u9762\uff0c\u4e5f\u5c31\u662f\u968f\u673a\u9009\u53d6 \n \u548c \n\uff0c\u7136\u540e\u60f3\u5fc5\u4f1a\u5728\u8bad\u7ec3\u96c6\u4e2d\u4ea7\u751f\u5927\u91cf\u7684\u9519\u8bef\u5206\u7c7b\uff0c\u4e5f\u5c31\u662f\u8bf4\uff0c\n \u7ed3\u679c\u5e94\u8be5\u5927\u4e8e 0 \u7684\u65f6\u5019\u5c0f\u4e8e 0 \uff0c\u5e94\u8be5\u5c0f\u4e8e 0 \u7684\u65f6\u5019\u5927\u4e8e 0 \u3002\u8fd9\u65f6\u5019\u6709\u4e00\u4e2a\u9519\u8bef\u635f\u5931\uff0c\u4e5f\u5c31\u662f\u8bf4\u5bf9\u4e8e\u6240\u6709\u9519\u8bef\u7684\u5206\u7c7b\uff0c\u4ed6\u4eec\u7684\u5e73\u65b9\u548c\uff08least squared error\uff09 \u4e3a: \n , \u6700\u5c0f\u4e8c\u4e58\u6cd5\u7684\u76ee\u6807\u5c31\u662f\u8ba9\u8fd9\u4e2a\u503c\u8d8b\u4e8e\u6700\u5c0f\uff0c\u5bf9 \n \u6c42\u5bfc\u53d6 0 \uff0c\u91c7\u7528\u68af\u5ea6\u4e0b\u964d\u7b97\u6cd5\uff0c\u53ef\u4ee5\u6c42\u51fa\u9519\u8bef\u5e73\u65b9\u548c\u7684\u6781\u503c\uff0c\u6c42\u51fa\u6700\u4f18\u7684 \n \uff0c\u4e5f\u5c31\u662f\u6c42\u51fa\u6700\u4f18\u7684\u8d85\u5e73\u9762\u3002\uff08\u53ef\u4ee5\u8bc1\u660e\uff0c\u5982\u679c\u57fa\u51fd\u6570\u662f\u6307\u6570\u65cf\u51fd\u6570\uff0c\u6c42\u51fa\u7684\u8d85\u5e73\u9762\u662f\u5168\u5c40\u6700\u4f18\u7684\uff09\u3002\n\n\n\u90a3\u6211\u4eec SVM \u7b97\u6cd5\u7684\u601d\u8def\u662f\u600e\u6837\u7684\u5462\uff1f\n\n\n\u4e0d\u540c\u4e8e\u4f20\u7edf\u7684\u6700\u5c0f\u4e8c\u4e58\u7b56\u7565\u7684\u601d\u60f3\uff0c\u6211\u4eec\u91c7\u7528\u4e00\u79cd\u65b0\u7684\u601d\u8def\uff0c\u8fd9\u4e2a\u5206\u754c\u9762\u6709\u4ec0\u4e48\u6837\u7684\u7279\u5f81\u5462\uff1f\n\n\n\u7b2c\u4e00\uff0c\u5b83 \u201c\u5939\u201d \u5728\u4e24\u7c7b\u6837\u672c\u70b9\u4e4b\u95f4\uff1b\u7b2c\u4e8c\uff0c\u5b83\u79bb\u4e24\u7c7b\u6837\u672c\u70b9\u4e2d\u6240\u6709 \u201c\u79bb\u5b83\u6700\u8fd1\u7684\u70b9\u201d \uff0c\u90fd\u79bb\u5b83\u5c3d\u53ef\u80fd\u7684\u8fdc\u3002\u5982\u56fe\u6240\u793a\uff1a\n\n\n\n\n\u5728\u865a\u7ebf\u4e0a\u7684\u70b9\uff0c\u5c31\u662f\u6211\u4eec\u6240\u627e\u5230\u7684\u79bb\u5206\u89e3\u8d85\u5e73\u9762\u6700\u8fd1\u7684\u6837\u672c\u70b9\uff0cX \u7c7b\u4e2d\u627e\u5230\u4e86\u4e00\u4e2a\uff0cO \u7c7b\u627e\u5230\u4e86\u4e24\u4e2a\u3002\u6211\u4eec\u9700\u8981\u5206\u7c7b\u8d85\u5e73\u9762\u79bb\u8fd9\u4e09\u4e2a\u6837\u672c\u70b9\u90fd\u5c3d\u53ef\u80fd\u7684\u8fdc\uff0c\u4e5f\u5c31\u662f\u8bf4\uff0c\u5b83\u5904\u5728\u4e24\u6761\u865a\u7ebf\u7684\u4e2d\u95f4\u3002\u8fd9\u5c31\u662f\u6211\u4eec\u627e\u5230\u7684\u5206\u754c\u8d85\u5e73\u9762\u3002\n\n\n\u53e6\u5916\uff0c\u8fd9\u91cc\u6211\u4eec\u5c31\u53ef\u4ee5\u89e3\u91ca\u4ec0\u4e48\u662f \u201c\u652f\u6301\u5411\u91cf\u201d \u4e86\uff0c\u652f\u6301\u5411\u91cf\u5c31\u662f\u865a\u7ebf\u4e0a\u7684\u79bb\u5206\u7c7b\u8d85\u5e73\u9762\u6700\u8fd1\u7684\u6837\u672c\u70b9\uff0c\u56e0\u4e3a\u6bcf\u4e00\u4e2a\u6837\u672c\u70b9\u90fd\u662f\u4e00\u4e2a\u591a\u7ef4\u7684\u5411\u91cf\uff0c\u5411\u91cf\u7684\u6bcf\u4e00\u4e2a\u7ef4\u5ea6\u90fd\u662f\u8fd9\u4e2a\u6837\u672c\u70b9\u7684\u4e00\u4e2a\u7279\u5f81\u3002\u6bd4\u5982\u5728\u6839\u636e\u8eab\u9ad8\uff0c\u4f53\u91cd\uff0c\u7279\u5f81\u8fdb\u884c\u7537\u5973\u5206\u7c7b\u7684\u65f6\u5019\uff0c\u6bcf\u4e00\u4e2a\u4eba\u662f\u4e00\u4e2a\u5411\u91cf\uff0c\u5411\u91cf\u6709\u4e24\u4e2a\u7ef4\u5ea6\uff0c\u7b2c\u4e00\u7ef4\u662f\u8eab\u9ad8\uff0c\u7b2c\u4e8c\u7ef4\u662f\u4f53\u91cd\u3002\n\n\n\u4ecb\u7ecd\u5b8c SVM \u7684\u57fa\u672c\u601d\u60f3\uff0c\u6211\u4eec\u6765\u63a2\u8ba8\u4e00\u4e0b\u5982\u4f55\u7528\u6570\u5b66\u7684\u65b9\u6cd5\u8fdb\u884c SVM \u5206\u7c7b\u3002\n\n\n\u9996\u5148\u6211\u4eec\u9700\u8981\u628a\u521a\u521a\u8bf4\u7684\u6700\u5927\u95f4\u9694\u5206\u7c7b\u5668\u7684\u601d\u60f3\u7528\u6570\u5b66\u516c\u5f0f\u8868\u8fbe\u51fa\u6765\u3002\u5148\u5b9a\u4e49\u51e0\u4f55\u95f4\u9694\u7684\u6982\u5ff5\uff0c\u51e0\u4f55\u95f4\u9694\u5c31\u662f\u5728\u591a\u7ef4\u7a7a\u95f4\u4e2d\u4e00\u4e2a\u591a\u7ef4\u70b9\u5230\u4e00\u4e2a\u8d85\u5e73\u9762\u7684\u8ddd\u79bb\uff0c\u6839\u636e\u5411\u91cf\u7684\u77e5\u8bc6\u53ef\u4ee5\u7b97\u51fa\u6765\uff1a\n\n\n\n\n\u7136\u540e\u5bf9\u4e8e\u6240\u6709\u7684\u652f\u6301\u5411\u91cf\uff0c\u4f7f\u4ed6\u4eec\u5230\u8d85\u5e73\u9762 \n \u7684\u8ddd\u79bb\u6700\u5927\uff0c\u4e5f\u5c31\u662f\n\n\n\n\n\u56e0\u4e3a\u5bf9\u4e8e\u6240\u6709\u652f\u6301\u5411\u91cf\uff0c\u4ed6\u4eec \n \u7684\u503c\u90fd\u662f\u4e00\u5b9a\u7684\uff0c\u6211\u4eec\u5047\u8bbe\u6052\u7b49\u4e8e 1 \uff0c\u90a3\u4e48\u4e0a\u5f0f\u53d8\u6210\u4e86 \n ,\u5e76\u4e14\u5bf9\u4e8e\u6240\u6709\u7684\u6837\u672c\u70b9\uff0c\u6ee1\u8db3 \n \u7684\u7ea6\u675f\uff0c\u56e0\u6b64\uff0c\u53ef\u4ee5\u5229\u7528\u62c9\u683c\u6717\u65e5\u4e58\u6570\u6cd5\u8ba1\u7b97\u51fa\u5b83\u7684\u6781\u503c\u3002\u4e5f\u5c31\u662f\u6c42\u51fa\u8fd9\u4e2a\u8d85\u5e73\u9762\u3002\n\n\n\u63a8\u5bfc\u8fc7\u7a0b\u7565\u4e3a\u590d\u6742\uff0c\u8be6\u7ec6\u4e86\u89e3\u53ef\u4ee5\u53c2\u8003\u51f8\u4e8c\u6b21\u89c4\u5212\u77e5\u8bc6\uff0c\u7ed3\u5408 SMO \u7b97\u6cd5\u7406\u89e3 SVM \u8ba1\u7b97\u8d85\u5e73\u9762\u7684\u8be6\u7ec6\u8fc7\u7a0b\u3002\n\n\n\u603b\u4e4b\uff0c\u5728\u8ba1\u7b97\u7684\u8fc7\u7a0b\u4e2d\uff0c\u6211\u4eec\u4e0d\u9700\u8981\u4e86\u89e3\u652f\u6301\u5411\u91cf\u4ee5\u5916\u7684\u5176\u4ed6\u6837\u672c\u70b9\uff0c\u53ea\u9700\u8981\u5229\u7528\u76f8\u5bf9\u4e8e\u6240\u6709\u6837\u672c\u70b9\u6765\u8bf4\u4e3a\u6570\u4e0d\u591a\u7684\u652f\u6301\u5411\u91cf\uff0c\u5c31\u53ef\u4ee5\u6c42\u51fa\u5206\u7c7b\u8d85\u5e73\u9762\uff0c\u8ba1\u7b97\u590d\u6742\u5ea6\u5927\u4e3a\u964d\u4f4e\u3002\n\n\n4\u3001\u5f15\u7528\u77e5\u4e4e \n@\u9760\u9760\u9760\u8c31\n \u5927\u4f6c\u7684\u7406\u89e3\uff08\u8fd9\u4e2a\u9700\u8981\u7684\u6570\u5b66\u77e5\u8bc6\u66f4\u52a0\u5389\u5bb3\u4e00\u70b9\uff09\uff1a\n\n\n\u5148\u770b\u601d\u7ef4\u5bfc\u56fe\uff1a\n\n\n\n\n\u5de6\u8fb9\u662f\u6c42\u89e3\u57fa\u672c\u7684SVM\u95ee\u9898\n\n\n\u53f3\u8fb9\u662f\u76f8\u5173\u6269\u5c55\n\n\n\n\n\n\n\u4ec0\u4e48\u662f SVM \uff1f\n\n\nSupport Vector Machine, \u4e00\u4e2a\u666e\u901a\u7684 SVM \u5c31\u662f\u4e00\u6761\u76f4\u7ebf\u7f62\u4e86\uff0c\u7528\u6765\u5b8c\u7f8e\u5212\u5206 linearly separable \u7684\u4e24\u7c7b\u3002\u4f46\u8fd9\u53c8\u4e0d\u662f\u4e00\u6761\u666e\u901a\u7684\u76f4\u7ebf\uff0c\u8fd9\u662f\u65e0\u6570\u6761\u53ef\u4ee5\u5206\u7c7b\u7684\u76f4\u7ebf\u5f53\u4e2d\u6700\u5b8c\u7f8e\u7684\uff0c\u56e0\u4e3a\u5b83\u6070\u597d\u5728\u4e24\u4e2a\u7c7b\u7684\u4e2d\u95f4\uff0c\u8ddd\u79bb\u4e24\u4e2a\u7c7b\u7684\u70b9\u90fd\u4e00\u6837\u8fdc\u3002\u800c\u6240\u8c13\u7684 Support vector \u5c31\u662f\u8fd9\u4e9b\u79bb\u5206\u754c\u7ebf\u6700\u8fd1\u7684\u300e\u70b9\u300f\u3002\u5982\u679c\u53bb\u6389\u8fd9\u4e9b\u70b9\uff0c\u76f4\u7ebf\u591a\u534a\u662f\u8981\u6539\u53d8\u4f4d\u7f6e\u7684\u3002\u53ef\u4ee5\u8bf4\u662f\u8fd9\u4e9b vectors \uff08\u4e3b\uff0c\u70b9\u70b9\uff09 support \uff08\u8c13\uff0c\u5b9a\u4e49\uff09\u4e86 machine \uff08\u5bbe\uff0c\u5206\u7c7b\u5668\uff09...\n\n\n\n\n\u6240\u4ee5\u8c1c\u5e95\u5c31\u5728\u8c1c\u9762\u4e0a\u554a\u670b\u53cb\u4eec\uff0c\u53ea\u8981\u627e\u5230\u4e86\u8fd9\u4e9b\u6700\u9760\u8fd1\u7684\u70b9\u4e0d\u5c31\u627e\u5230\u4e86 SVM \u4e86\u561b\u3002\n\n\n\u5982\u679c\u662f\u9ad8\u7ef4\u7684\u70b9\uff0cSVM \u7684\u5206\u754c\u7ebf\u5c31\u662f\u5e73\u9762\u6216\u8005\u8d85\u5e73\u9762\u3002\u5176\u5b9e\u6ca1\u6709\u5dee\uff0c\u90fd\u662f\u4e00\u5200\u5207\u4e24\u5757\uff0c\u6211\u5c31\u7edf\u7edf\u53eb\u76f4\u7ebf\u4e86\u3002\n\n\n\u600e\u4e48\u6c42\u89e3 SVM \uff1f\n\n\n\u5173\u4e8e\u8fd9\u6761\u76f4\u7ebf\uff0c\u6211\u4eec\u77e5\u9053 \n\n\n(1)\u5b83\u5728\u79bb\u4e24\u8fb9\u4e00\u6837\u8fdc\uff0c(2)\u6700\u8fd1\u8ddd\u79bb\u5c31\u662f\u5230support vector\uff0c\u5176\u4ed6\u8ddd\u79bb\u53ea\u80fd\u66f4\u8fdc\u3002\n\n\n\u4e8e\u662f\u81ea\u7136\u800c\u7136\u53ef\u4ee5\u5f97\u5230\u91cd\u8981\u8868\u8fbe \nI. direct representation\n\n\n\n\n\uff08\u53ef\u4ee5\u628a margin \u770b\u4f5c\u662f boundary \u7684\u51fd\u6570\uff0c\u5e76\u4e14\u60f3\u8981\u627e\u5230\u4f7f\u5f97\u662f\u4f7f\u5f97 margin \u6700\u5927\u5316\u7684boundary\uff0c\u800c margin(*) \u8fd9\u4e2a\u51fd\u6570\u662f\uff1a\u8f93\u5165\u4e00\u4e2a boundary \uff0c\u8ba1\u7b97\uff08\u6b63\u786e\u5206\u7c7b\u7684\uff09\u6240\u6709\u82f9\u679c\u548c\u9999\u8549\u4e2d\uff0c\u5230 boundary \u7684\u6700\u5c0f\u8ddd\u79bb\u3002\uff09\n\n\n\u53c8\u6709\u6700\u5927\u53c8\u6709\u6700\u5c0f\u770b\u8d77\u6765\u597d\u77db\u76fe\u3002\u5b9e\u9645\u4e0a\u300e\u6700\u5927\u300f\u662f\u5bf9\u8fd9\u4e2a\u6574\u4f53\u4f7f\u7528\u4e0d\u540c boundary \u5c42\u9762\u7684\u6700\u5927\uff0c\u300e\u6700\u5c0f\u300f\u662f\u5728\u6bd4\u8f83\u300e\u70b9\u300f\u7684\u5c42\u9762\u4e0a\u7684\u6700\u5c0f\u3002\u5916\u5c42\u5728\u6bd4\u8f83 boundary \u627e\u6700\u5927\u7684 margin \uff0c\u5185\u5c42\u5728\u6bd4\u8f83\u70b9\u70b9\u627e\u6700\u5c0f\u7684\u8ddd\u79bb\u3002\n\n\n\u5176\u4e2d\u8ddd\u79bb\uff0c\u8bf4\u767d\u4e86\u5c31\u662f\u70b9\u5230\u76f4\u7ebf\u7684\u8ddd\u79bb\uff1b\u53ea\u8981\u5b9a\u4e49\u5e26\u6b63\u8d1f\u53f7\u7684\u8ddd\u79bb\uff0c\u662f {\u82f9\u679c+1} \u9762\u4e3a\u6b63 {\u9999\u8549-1} \u9762\u4e3a\u8d1f\u7684\u8ddd\u79bb\uff0c\u4e92\u76f8\u4e58\u4e0a\u5404\u81ea\u7684 label \n \uff0c\u5c31\u548c\u8c10\u7edf\u4e00\u6c11\u4e3b\u5bcc\u5f3a\u4e86\u3002\n\n\n\n\n\u5230\u8fd9\u91cc\u4e3a\u6b62\u5df2\u7ecf\u8bf4\u5b8c\u4e86\u6240\u6709\u5173\u4e8eSVM\u7684\u76f4\u89c2\u4e86\u89e3\uff0c\u5982\u679c\u4e0d\u60f3\u770b\u6c42\u89e3\uff0c\u53ef\u4ee5\u8df3\u8fc7\u4e0b\u9762\u4e00\u5927\u6bb5\u76f4\u63a5\u5230 objective function \u3002\n\n\n\u76f4\u63a5\u8868\u8fbe\u867d\u7136\u6e05\u695a\u4f46\u662f\u6c42\u89e3\u65e0\u4ece\u4e0b\u624b\u3002\u505a\u4e00\u4e9b\u7b80\u5355\u5730\u7b49\u4ef7\u53d8\u6362\uff08\u5206\u6bcd\u5012\u4e0a\u6765\uff09\u53ef\u4ee5\u5f97\u5230 \nII. canonical representation \n \uff08\u6572\u9ed1\u677f\uff09\n\n\n\n\n\u8981\u5f97\u5230 \nIII. dual representation\n \u4e4b\u524d\u9700\u8981\u5927\u6982\u77e5\u9053\u4e00\u4e0b\u62c9\u683c\u6717\u65e5\u4e58\u5b50\u6cd5 (method of lagrange multiplier)\uff0c\u5b83\u662f\u7528\u5728\u6709\u5404\u79cd\u7ea6\u675f\u6761\u4ef6(\u5404\u79cd \"subject to\" )\u4e0b\u7684\u76ee\u6807\u51fd\u6570\uff0c\u4e5f\u5c31\u662f\u76f4\u63a5\u53ef\u4ee5\u6c42\u5bfc\u53ef\u4ee5\u5f15\u51fa dual representation\uff08\u600e\u4e48\u8fd8\u6ca1\u5b8c\u6454\uff09\n\n\n\n\n\u7a0d\u5fae\u501f\u7528\u521a\u521a\u6570\u5b66\u8868\u8fbe\u91cc\u9762\u7684\u5185\u5bb9\u770b\u4e2a\u6709\u8da3\u7684\u4e1c\u897f\uff1a\n\n\n\u8fd8\u8bb0\u5f97\u6211\u4eec\u600e\u4e48\u9884\u6d4b\u4e00\u4e2a\u65b0\u7684\u6c34\u679c\u662f\u82f9\u679c\u8fd8\u662f\u9999\u8549\u5417\uff1f\u6211\u4eec\u4ee3\u5165\u5230\u5206\u754c\u7684\u76f4\u7ebf\u91cc\uff0c\u7136\u540e\u901a\u8fc7\u7b26\u53f7\u6765\u5224\u65ad\u3002\n\n\n\u521a\u521aw\u5df2\u7ecf\u88ab\u8868\u8fbe\u51fa\u6765\u4e86\u4e5f\u5c31\u662f\u8bf4\u8fd9\u4e2a\u76f4\u7ebf\u73b0\u5728\u53d8\u6210\u4e86\uff1a \n\n\n\u770b\u4f3c\u4eff\u4f5b\u7528\u5230\u4e86\u6240\u6709\u7684\u8bad\u7ec3\u6c34\u679c\uff0c\u4f46\u662f\u5176\u4e2d \n \u7684\u6c34\u679c\u90fd\u6ca1\u6709\u8d77\u5230\u4f5c\u7528\uff0c\u5269\u4e0b\u7684\u5c31\u662f\u5c0f\u90e8\u5206\u9760\u8fb9\u8fb9\u7684 Support vectors \u5440\u3002\n\n\nIII. dual representation\n\n\n\n\n\u5982\u679c\u9999\u8549\u548c\u82f9\u679c\u4e0d\u80fd\u7528\u76f4\u7ebf\u5206\u5272\u5462\uff1f\n\n\n\n\nKernel trick. \n\n\n\u5176\u5b9e\u7528\u76f4\u7ebf\u5206\u5272\u7684\u65f6\u5019\u6211\u4eec\u5df2\u7ecf\u4f7f\u7528\u4e86 kernel \uff0c\u90a3\u5c31\u662f\u7ebf\u6027 kernel , \n\n\n\u5982\u679c\u8981\u66ff\u6362 kernel \u90a3\u4e48\u628a\u76ee\u6807\u51fd\u6570\u91cc\u9762\u7684\u5185\u79ef\u5168\u90e8\u66ff\u6362\u6210\u65b0\u7684 kernel function \u5c31\u597d\u4e86\uff0c\u5c31\u662f\u8fd9\u4e48\u7b80\u5355\u3002\n\n\n\u7b2c\u4e00\u4e2a\u6b66\u4fa0\u5927\u5e08\u7684\u6bd4\u55bb\u5df2\u7ecf\u8bf4\u5f97\u5f88\u76f4\u89c2\u4e86\uff0c\u4f4e\u7ef4\u975e\u7ebf\u6027\u7684\u5206\u754c\u7ebf\u5176\u5b9e\u5728\u9ad8\u7ef4\u662f\u53ef\u4ee5\u7ebf\u6027\u5206\u5272\u7684\uff0c\u53ef\u4ee5\u7406\u89e3\u4e3a\u2014\u2014\u300e\u4f60\u4eec\u662f\u866b\u5b50\uff01\u300f\u5206\u5f97\u5f00\u4e2ap...\uff08\u5927\u96fe\uff09\n\n\n\u5982\u679c\u9999\u8549\u548c\u82f9\u679c\u6709\u4ea4\u96c6\u5462\uff1f\n\n\n\n\n\n\n\u5982\u679c\u8fd8\u6709\u68a8\u5462\uff1f\n\n\n\n\n\u53ef\u4ee5\u6bcf\u4e2a\u7c7b\u522b\u505a\u4e00\u6b21 SVM\uff1a\u662f\u82f9\u679c\u8fd8\u662f\u4e0d\u662f\u82f9\u679c\uff1f\u662f\u9999\u8549\u8fd8\u662f\u4e0d\u662f\u9999\u8549\uff1f\u662f\u68a8\u5b50\u8fd8\u662f\u4e0d\u662f\u68a8\u5b50\uff1f\u4ece\u4e2d\u9009\u51fa\u53ef\u80fd\u6027\u6700\u5927\u7684\u3002\u8fd9\u662f one-versus-the-rest approach\u3002\n\n\n\u4e5f\u53ef\u4ee5\u4e24\u4e24\u505a\u4e00\u6b21 SVM\uff1a\u662f\u82f9\u679c\u8fd8\u662f\u9999\u8549\uff1f\u662f\u9999\u8549\u8fd8\u662f\u68a8\u5b50\uff1f\u662f\u68a8\u5b50\u8fd8\u662f\u82f9\u679c\uff1f\u6700\u540e\u4e09\u4e2a\u5206\u7c7b\u5668\u6295\u7968\u51b3\u5b9a\u3002\u8fd9\u662f one-versus-one approace\u3002\n\n\n\u4f46\u8fd9\u5176\u5b9e\u90fd\u591a\u591a\u5c11\u5c11\u6709\u95ee\u9898\uff0c\u6bd4\u5982\u82f9\u679c\u7279\u522b\u591a\uff0c\u9999\u8549\u7279\u522b\u5c11\uff0c\u6211\u5c31\u65e0\u8111\u5224\u65ad\u4e3a\u82f9\u679c\u4e5f\u4e0d\u4f1a\u9519\u592a\u591a\uff1b\u591a\u4e2a\u5206\u7c7b\u5668\u8981\u653e\u5230\u4e00\u4e2a\u53f0\u9762\u4e0a\uff0c\u4e07\u4e00\u4ed6\u4eec\u7684 scale \u6ca1\u6709\u5728\u4e00\u4e2a\u53f0\u9762\u4e0a\u4e5f\u672a\u53ef\u77e5\u3002\n\n\n\u8bfe\u540e\u9898\uff1a\n1\u3001vector \u4e0d\u613f\u610f support \u600e\u4e48\u529e\uff1f\n2\u3001\u82f9\u679c\u597d\u5403\u8fd8\u662f\u9999\u8549\u597d\u5403\uff1f\n\n\n\u6700\u540e\u9001\u4e00\u5f20\u56fe\u6211\u597d\u7231\u54c8\u54c8\u54c8 (Credit: Burr Settles)\n\n\n\n\n\n[1] Bishop C M. Pattern recognition[J]. Machine Learning, 2006, 128.\n\n\n\n[2] Friedman J, Hastie T, Tibshirani R. The elements of statistical learning[M]. Springer, Berlin: Springer series in statistics, 2001.\n\n\n\n[3] James G, Witten D, Hastie T, et al. An introduction to statistical learning[M]. New York: springer, 2013.\n\n\n\n\u7406\u89e3\u548c\u5e94\u7528\n\n\n1\u3001DataMining \uff08\u6570\u636e\u6316\u6398\uff09\n\n\n\u505a\u6570\u636e\u6316\u6398\u5e94\u7528\u7684\u4e00\u79cd\u91cd\u8981\u7b97\u6cd5\uff0c\u4e5f\u662f\u6548\u679c\u6700\u597d\u7684\u5206\u7c7b\u7b97\u6cd5\u4e4b\u4e00\u3002\n\n\n\u4e3e\u4e2a\u4f8b\u5b50\uff0c\u5c31\u662f\u5c3d\u91cf\u628a\u6837\u672c\u4e2d\u7684\u4ece\u66f4\u9ad8\u7eac\u5ea6\u770b\u8d77\u6765\u5728\u4e00\u8d77\u7684\u6837\u672c\u5408\u5728\u4e00\u8d77\uff0c\u6bd4\u5982\u5728\u4e00\u7ef4\uff08\u76f4\u7ebf\uff09\u7a7a\u95f4\u91cc\u7684\u6837\u672c\u4ece\u4e8c\u7ef4\u5e73\u9762\u4e0a\u53ef\u4ee5\u5206\u6210\u4e0d\u540c\u7c7b\u522b\uff0c\u800c\u5728\u4e8c\u7ef4\u5e73\u9762\u4e0a\u5206\u6563\u7684\u6837\u672c\u5982\u679c\u4ece\u7b2c\u4e09\u7ef4\u7a7a\u95f4\u4e0a\u6765\u770b\u5c31\u53ef\u4ee5\u5bf9\u4ed6\u4eec\u505a\u5206\u7c7b\u3002\n\n\n\u652f\u6301\u5411\u91cf\u673a\u7b97\u6cd5\u76ee\u7684\u662f\u627e\u51fa\u6700\u4f18\u8d85\u5e73\u9762\uff0c\u4f7f\u5206\u7c7b\u95f4\u9694\u6700\u5927\uff0c\u8981\u6c42\u4e0d\u4f46\u6b63\u786e\u5206\u5f00\uff0c\u800c\u4e14\u4f7f\u5206\u7c7b\u95f4\u9694\u6700\u5927\uff0c\u5728\u4e24\u7c7b\u6837\u672c\u4e2d\u79bb\u5206\u7c7b\u5e73\u9762\u6700\u8fd1\u4e14\u4f4d\u4e8e\u5e73\u884c\u4e8e\u6700\u4f18\u8d85\u5e73\u9762\u7684\u8d85\u5e73\u9762\u4e0a\u7684\u70b9\u5c31\u662f\u652f\u6301\u5411\u91cf\uff0c\u4e3a\u627e\u5230\u6700\u4f18\u8d85\u5e73\u9762\u53ea\u8981\u627e\u5230\u6240\u6709\u652f\u6301\u5411\u91cf\u5373\u53ef\u3002\n\n\n\u5bf9\u4e8e\u975e\u7ebf\u6027\u652f\u6301\u5411\u91cf\u673a\uff0c\u901a\u5e38\u505a\u6cd5\u662f\u628a\u7ebf\u6027\u4e0d\u53ef\u5206\u8f6c\u5316\u6210\u7ebf\u6027\u53ef\u5206\uff0c\u901a\u8fc7\u4e00\u4e2a\u975e\u7ebf\u6027\u6620\u5c04\u5c06\u4f4e\u7ef4\u8f93\u5165\u7a7a\u95f4\u4e2d\u7684\u6570\u636e\u7279\u6027\u6620\u5c04\u5230\u9ad8\u7ef4\u7ebf\u6027\u7279\u5f81\u7a7a\u95f4\u4e2d\uff0c\u5728\u9ad8\u7ef4\u7a7a\u95f4\u4e2d\u6c42\u7ebf\u6027\u6700\u4f18\u5206\u7c7b\u8d85\u5e73\u9762\u3002\n\n\n2\u3001scikit-learn (sklearn)\n\n\nSVM \u7684\u57fa\u672c\u539f\u7406\u57fa\u672c\u4e0a\u5df2\u7ecf\u8bf4\u7684\u5dee\u4e0d\u591a\u4e86\uff0c\u4e0b\u9762\u54b1\u4eec\u5c31\u6765\u770b\u770b SVM \u5728\u5b9e\u9645\u5e94\u7528\u8be5\u5982\u4f55\u4f7f\u7528\u4e86\u3002\u5e78\u8fd0\u7684\u662f\uff0c\u5728 python \u4e0b\u9762\uff0csklearn \u63d0\u4f9b\u4e86\u4e00\u4e2a\u975e\u5e38\u597d\u7528\u7684\u673a\u5668\u5b66\u4e60\u7b97\u6cd5\uff0c\u6211\u4eec\u8c03\u7528\u76f8\u5173\u7684\u5305\u5c31\u597d\u5566\u3002\n\n\n\n\n\u5c0f\u7ed3\n\n\n\u5b66\u4e60 SVM \u9700\u8981\u6709\u8010\u5fc3\uff0c\u5f53\u521d\u7814\u7a76\u8fd9\u4e2a\u90e8\u5206\u7684\u65f6\u5019\uff0c\u70bc\u54e5\uff08github \njiangzhonglian\n\uff09\uff0c\u6cd5\u8d85\u5927\u4f6c\uff08github \ngeekidentity\n\uff09\uff0c\u7f8a\u4e09\u5927\u4f6c\uff08github \nsheepmen\n\uff09\uff0c\u5ead\u54e5\uff08github \nwangyangting\n\uff09\u90fd\u82b1\u8d39\u4e86\u597d\u957f\u65f6\u95f4\uff0c\u6211\u53ea\u80fd\u8eb2\u5728\u89d2\u843d\u53d1\u6296....", 
            "title": "6.1.\u652f\u6301\u5411\u91cf\u673a\u7684\u51e0\u4e2a\u901a\u4fd7\u7406\u89e3"
        }, 
        {
            "location": "/\u4e66\u7c4d/\u673a\u5668\u5b66\u4e60\u5b9e\u6218/06.1.\u652f\u6301\u5411\u91cf\u673a\u7684\u51e0\u4e2a\u901a\u4fd7\u7406\u89e3/#svm", 
            "text": "\u58f0\u660e   \u9605\u8bfb\u672c\u6587\u524d\uff0c\u9700\u8981\u60a8\u61c2\u4e00\u4e9b\u9ad8\u7b49\u6570\u5b66\u3001\u6982\u7387\u8bba\u3001\u7ebf\u6027\u4ee3\u6570\u7684\u76f8\u5173\u77e5\u8bc6\uff0c\u4ee5\u4fbf\u66f4\u597d\u7406\u89e3\u3002  \u4e0b\u9762\u8fd9\u4e9b\u5173\u4e8e SVM \u7684\u7406\u89e3\uff0c\u662f\u6839\u636e\u77e5\u4e4e\u548c\u5176\u4ed6\u535a\u5ba2\u6216\u8005\u7f51\u7ad9\u4e2d\u67e5\u8be2\u5230\u7684\u8d44\u6599\u52a0\u4ee5\u6574\u7406\uff0c\n\u5e76\u7ed3\u5408 ApacheCN \u8fd9\u6bb5\u65f6\u95f4\u7684\u64b8\u4ee3\u7801\u548c\u76f8\u5173\u7814\u7a76\u5f97\u5230\uff0c\u6709\u7406\u89e3\u6709\u8bef\u7684\u5730\u65b9\u8fd8\u671b\u5927\u5bb6\u6307\u51fa\uff0c\u8c22\u8c22\u3002\n\u518d\u6b21\u611f\u8c22\u7f51\u4e0a\u7684\u5927\u4f6c\u4eec\u7684\u65e0\u79c1\u8d21\u732e\u3002\n\nApacheCN: http://www.apachecn.org/\nApacheCN MachineLearning github: https://github.com/apachecn/MachineLearning\n\n\u7f51\u4e0a\u8d44\u6599\u53c2\u8003\u94fe\u63a5:https://www.zhihu.com/question/21094489\n            http://docs.opencv.org/2.4/doc/tutorials/ml/introduction_to_svm/introduction_to_svm.html\n            https://zhuanlan.zhihu.com/p/26891427?utm_medium=social utm_source=qq\n            https://zhuanlan.zhihu.com/p/21308801?utm_medium=social utm_source=qq\n            http://blog.csdn.net/v_july_v/article/details/7624837", 
            "title": "SVM"
        }, 
        {
            "location": "/\u4e66\u7c4d/\u673a\u5668\u5b66\u4e60\u5b9e\u6218/06.1.\u652f\u6301\u5411\u91cf\u673a\u7684\u51e0\u4e2a\u901a\u4fd7\u7406\u89e3/#overview", 
            "text": "", 
            "title": "Overview"
        }, 
        {
            "location": "/\u4e66\u7c4d/\u673a\u5668\u5b66\u4e60\u5b9e\u6218/06.1.\u652f\u6301\u5411\u91cf\u673a\u7684\u51e0\u4e2a\u901a\u4fd7\u7406\u89e3/#whats-the-svm", 
            "text": "_  \u9996\u5148\uff0c\u652f\u6301\u5411\u91cf\u673a\u4e0d\u662f\u4e00\u79cd\u673a\u5668\uff0c\u800c\u662f\u4e00\u79cd\u673a\u5668\u5b66\u4e60\u7b97\u6cd5\u3002  1\u3001SVM - Support Vector Machine \uff0c\u4fd7\u79f0\u652f\u6301\u5411\u91cf\u673a\uff0c\u662f\u4e00\u79cd supervised learning \uff08\u76d1\u7763\u5b66\u4e60\uff09\u7b97\u6cd5\uff0c\u5c5e\u4e8e classification \uff08\u5206\u7c7b\uff09\u7684\u8303\u7574\u3002  2\u3001\u5728\u6570\u636e\u6316\u6398\u7684\u5e94\u7528\u4e2d\uff0c\u4e0e unsupervised learning \uff08\u65e0\u76d1\u7763\u5b66\u4e60\uff09\u7684 Clustering\uff08\u805a\u7c7b\uff09\u76f8\u5bf9\u5e94\u548c\u533a\u522b\u3002  3\u3001\u5e7f\u6cdb\u5e94\u7528\u4e8e Machine Learning \uff08\u673a\u5668\u5b66\u4e60\uff09\uff0cComputer Vision \uff08\u8ba1\u7b97\u673a\u89c6\u89c9\uff0c\u88c5\u903c\u4e00\u70b9\u8bf4\uff0c\u5c31\u662f cv\uff09\u548c Data Mining \uff08\u6570\u636e\u6316\u6398\uff09\u5f53\u4e2d\u3002", 
            "title": "What's the SVM?"
        }, 
        {
            "location": "/\u4e66\u7c4d/\u673a\u5668\u5b66\u4e60\u5b9e\u6218/06.1.\u652f\u6301\u5411\u91cf\u673a\u7684\u51e0\u4e2a\u901a\u4fd7\u7406\u89e3/#machine", 
            "text": "Classification Machine\uff0c\u662f\u5206\u7c7b\u5668\uff0c\u8fd9\u4e2a\u6ca1\u4ec0\u4e48\u597d\u8bf4\u7684\u3002\u4e5f\u53ef\u4ee5\u7406\u89e3\u4e3a\u7b97\u6cd5\uff0c\u673a\u5668\u5b66\u4e60\u9886\u57df\u91cc\u9762\u5e38\u5e38\u7528 \u201c\u673a\u201d \u4e5f\u5c31\u662f machine \u8fd9\u4e2a\u5b57\u8868\u793a\u7b97\u6cd5\u3002", 
            "title": "\u201c Machine \uff08\u673a\uff09\u201d \u662f\u4ec0\u4e48\uff1f"
        }, 
        {
            "location": "/\u4e66\u7c4d/\u673a\u5668\u5b66\u4e60\u5b9e\u6218/06.1.\u652f\u6301\u5411\u91cf\u673a\u7684\u51e0\u4e2a\u901a\u4fd7\u7406\u89e3/#_1", 
            "text": "\u901a\u4fd7\u7406\u89e3 \uff1a\nsupport vector \uff08\u652f\u6301\u5411\u91cf\uff09\u7684\u610f\u601d\u5c31\u662f  \u6570\u636e\u96c6\u4e2d\u7684\u67d0\u4e9b\u70b9 \uff0c\u4f4d\u7f6e\u6bd4\u8f83\u7279\u6b8a\u3002\u6bd4\u5982 x+y-2=0 \u8fd9\u6761\u76f4\u7ebf\uff0c\u76f4\u7ebf\u4e0a\u9762\u533a\u57df x+y-2 0 \u7684\u5168\u662f A \u7c7b\uff0c\u4e0b\u9762\u7684 x+y-2 0 \u7684\u5168\u662f B \u7c7b\uff0c\u6211\u4eec\u627e\u8fd9\u6761\u76f4\u7ebf\u7684\u65f6\u5019\uff0c\u4e00\u822c\u5c31\u770b\u805a\u96c6\u5728\u4e00\u8d77\u7684\u4e24\u7c7b\u6570\u636e\uff0c\u4ed6\u4eec\u5404\u81ea\u7684  \u6700\u8fb9\u7f18  \u4f4d\u7f6e\u7684\u70b9\uff0c\u4e5f\u5c31\u662f\u6700\u9760\u8fd1\u5212\u5206\u76f4\u7ebf\u7684\u90a3\u51e0\u4e2a\u70b9\uff0c\u800c\u5176\u4ed6\u70b9\u5bf9\u8fd9\u6761\u76f4\u7ebf\u7684\u6700\u7ec8\u4f4d\u7f6e\u7684\u786e\u5b9a\u8d77\u4e0d\u4e86\u4f5c\u7528\uff0c\u6240\u4ee5\u6211\u59d1\u4e14\u53eb\u8fd9\u4e9b\u70b9\u53eb \u201c\u652f\u6301\u70b9\u201d\uff08\u610f\u601d\u5c31\u662f\u6709\u7528\u7684\u70b9\uff09\uff0c\u4f46\u662f\u5728\u6570\u5b66\u4e0a\uff0c\u6ca1\u8fd9\u79cd\u8bf4\u6cd5\uff0c\u6570\u5b66\u91cc\u7684\u70b9\uff0c\u53c8\u53ef\u4ee5\u53eb\u5411\u91cf\uff0c\u6bd4\u5982 \u4e8c\u7ef4\u70b9 (x,y) \u5c31\u662f\u4e8c\u7ef4\u5411\u91cf\uff0c\u4e09\u7ef4\u5ea6\u7684\u5c31\u662f\u4e09\u7ef4\u5411\u91cf (x,y,z)\u3002\u6240\u4ee5 \u201c \u652f\u6301\u70b9 \u201d \u6539\u53eb \u201c \u652f\u6301\u5411\u91cf \u201d \uff0c\u542c\u8d77\u6765\u6bd4\u8f83\u4e13\u4e1a\uff0c\u800c\u4e14\u53c8\u88c5\u903c\uff0c\u4f55\u4e50\u800c\u4e0d\u4e3a\u5462\uff1f\u662f\u5427...   \u4e0d\u901a\u4fd7\u7684\u7406\u89e3 \uff1a\n\u5728 maximum margin \uff08\u6700\u5927\u95f4\u9694\uff09\u4e0a\u7684\u8fd9\u4e9b\u70b9\u5c31\u53eb \u201c\u652f\u6301\u5411\u91cf\u201d\uff0c\u6211\u60f3\u8865\u5145\u7684\u662f\u4e3a\u5565\u8fd9\u4e9b\u70b9\u5c31\u53eb \u201c\u652f\u6301\u5411\u91cf\u201d \uff0c\u56e0\u4e3a\u6700\u540e\u7684 classification machine \uff08\u5206\u7c7b\u5668\uff09\u7684\u8868\u8fbe\u5f0f\u91cc\u53ea\u542b\u7528\u8fd9\u4e9b \u201c\u652f\u6301\u5411\u91cf\u201d \u7684\u4fe1\u606f\uff0c\u800c\u4e0e\u5176\u4ed6\u6570\u636e\u70b9\u65e0\u5173\uff1a   \u5728\u8fd9\u4e2a\u8868\u8fbe\u5f0f\u4e2d\uff0c\u53ea\u6709\u652f\u6301\u5411\u91cf\u7684\u7cfb\u6570   \u4e0d\u7b49\u4e8e 0 \u3002  \u5982\u679c\u8fd8\u662f\u4e0d\u600e\u4e48\u7406\u89e3\uff0c\u4e0d\u8981\u7d27\uff0c\u770b\u4e0b\u56fe:   \u201c\u652f\u6301\u5411\u91cf\u201d \u5c31\u662f\u56fe\u4e2d\u7528\u7d2b\u8272\u6846\u6846\u5708\u51fa\u6765\u7684\u70b9...", 
            "title": "\u201c\u652f\u6301\u5411\u91cf\u201d \u53c8\u662f\u4ec0\u4e48\uff1f"
        }, 
        {
            "location": "/\u4e66\u7c4d/\u673a\u5668\u5b66\u4e60\u5b9e\u6218/06.1.\u652f\u6301\u5411\u91cf\u673a\u7684\u51e0\u4e2a\u901a\u4fd7\u7406\u89e3/#concept", 
            "text": "\u6211\u4eec\u5148\u770b\u4e00\u5f20\u56fe   linearly separable \uff08\u7ebf\u6027\u53ef\u5206\uff09 : \u5982\u4e0a\u56fe\u4e2d\u7684\u4e24\u7ec4\u6570\u636e\uff0c\u5b83\u4eec\u4e4b\u95f4\u5df2\u7ecf\u5206\u7684\u8db3\u591f\u5f00\u4e86\uff0c\u56e0\u6b64\u5f88\u5bb9\u6613\u5c31\u53ef\u4ee5\u5728\u56fe\u4e2d\u753b\u51fa\u4e00\u6761\u76f4\u7ebf\u5c06\u4e24\u7ec4\u6570\u636e\u70b9\u5206\u5f00\u3002\u5728\u8fd9\u79cd\u60c5\u51b5\u4e0b\uff0c\u8fd9\u7ec4\u6570\u636e\u5c31\u88ab\u79f0\u4e3a \u7ebf\u6027\u53ef\u5206\u6570\u636e \u3002  separating hyperplane\uff08\u5206\u9694\u8d85\u5e73\u9762\uff09 : \u4e0a\u8ff0\u5c06\u6570\u636e\u96c6\u5206\u9694\u5f00\u6765\u7684\u76f4\u7ebf\u79f0\u4e3a \u5206\u9694\u8d85\u5e73\u9762 \u3002  hyperplane\uff08\u8d85\u5e73\u9762\uff09 : \u5728\u4e0a\u9762\u7ed9\u51fa\u7684\u4f8b\u5b50\u4e2d\uff0c\u7531\u4e8e\u6570\u636e\u70b9\u90fd\u5728\u4e8c\u7ef4\u5e73\u9762\u4e0a\uff0c\u6240\u4ee5\u6b64\u65f6\u5206\u9694\u8d85\u5e73\u9762\u5c31\u53ea\u662f\u4e00\u6761\u76f4\u7ebf\u3002\u4f46\u662f\uff0c\u5982\u679c\u6240\u7ed9\u7684\u6570\u636e\u96c6\u662f\u4e09\u7ef4\u7684\uff0c\u90a3\u4e48\u6b64\u65f6\u7528\u6765\u5206\u9694\u6570\u636e\u7684\u5c31\u662f\u4e00\u4e2a\u5e73\u9762\u3002\u663e\u800c\u6613\u89c1\uff0c\u66f4\u9ad8\u7eac\u5ea6\u7684\u60c5\u51b5\u53ef\u4ee5\u4f9d\u6b64\u7c7b\u63a8\u3002\u5982\u679c\u6570\u636e\u662f 1024 \u7ef4\u7684\uff0c\u90a3\u4e48\u5c31\u9700\u8981\u4e00\u4e2a 1023 \u7ef4\u7684\u67d0\u67d0\u5bf9\u8c61\uff08\u4e0d\u662f\u4f60\u4eec\u7684\u7537\uff08\u5973\uff09\u7968\uff09\u6765\u5bf9\u6570\u636e\u8fdb\u884c\u5206\u9694\u3002\u8fd9\u4e2a 1023 \u7ef4\u7684\u67d0\u67d0\u5bf9\u8c61\u5230\u5e95\u5e94\u8be5\u53eb\u4ec0\u4e48\u5462\uff1f N-1 \u7ef4\u5462\uff1f\u8be5\u5bf9\u8c61\u88ab\u79f0\u4e3a \u8d85\u5e73\u9762 \uff0c\u4e5f\u5c31\u662f\u5206\u7c7b\u7684\u51b3\u7b56\u8fb9\u754c\u3002\u5206\u5e03\u5728\u8d85\u5e73\u9762\u4e00\u4fa7\u7684\u6240\u6709\u6570\u636e\u90fd\u5c5e\u4e8e\u67d0\u4e2a\u7c7b\u522b\uff0c\u800c\u5206\u5e03\u5728\u53e6\u4e00\u4fa7\u7684\u6240\u6709\u6570\u636e\u5219\u5c5e\u4e8e\u53e6\u4e00\u4e2a\u7c7b\u522b\u3002  margin\uff08\u95f4\u9694\uff09 : \u6211\u4eec\u5e0c\u671b\u80fd\u901a\u8fc7\u4e0a\u8ff0\u7684\u65b9\u5f0f\u6765\u6784\u5efa\u5206\u7c7b\u5668\uff0c\u5373\u5982\u679c\u6570\u636e\u70b9\u79bb\u51b3\u7b56\u8fb9\u754c\u8d8a\u8fdc\uff0c\u90a3\u4e48\u5176\u6700\u540e\u7684\u9884\u6d4b\u7ed3\u679c\u4e5f\u5c31\u8d8a\u53ef\u4fe1\u3002\u65e2\u7136\u8fd9\u6837\uff0c\u6211\u4eec\u5e0c\u671b\u627e\u5230\u79bb\u5206\u9694\u8d85\u5e73\u9762\u6700\u8fd1\u7684\u70b9\uff0c\u786e\u4fdd\u5b83\u4eec\u79bb\u5206\u9694\u9762\u7684\u8ddd\u79bb\u5c3d\u53ef\u80fd\u8fdc\u3002\u8fd9\u91cc\u6240\u8bf4\u7684\u70b9\u5230\u5206\u9694\u9762\u7684\u8ddd\u79bb\u5c31\u662f  \u95f4\u9694 \u3002\u6211\u4eec\u5e0c\u671b\u95f4\u9694\u5c3d\u53ef\u80fd\u5730\u5927\uff0c\u8fd9\u662f\u56e0\u4e3a\u5982\u679c\u6211\u4eec\u72af\u9519\u6216\u8005\u5728\u6709\u9650\u6570\u636e\u4e0a\u8bad\u7ec3\u5206\u7c7b\u5668\u7684\u8bdd\uff0c\u6211\u4eec\u5e0c\u671b\u5206\u7c7b\u5668\u5c3d\u53ef\u80fd\u5065\u58ee\u3002  \u652f\u6301\u5411\u91cf\uff08support vector\uff09  : \u5c31\u662f\u4e0a\u9762\u6240\u8bf4\u7684\u79bb\u5206\u9694\u8d85\u5e73\u9762\u6700\u8fd1\u7684\u90a3\u4e9b\u70b9\u3002  \u5206\u7c7b\u5668  : \u5206\u7c7b\u5668\u5c31\u662f\u7ed9\u5b9a\u4e00\u4e2a\u6837\u672c\u7684\u6570\u636e\uff0c\u5224\u5b9a\u8fd9\u4e2a\u6837\u672c\u5c5e\u4e8e\u54ea\u4e2a\u7c7b\u522b\u7684\u7b97\u6cd5\u3002\u4f8b\u5982\u5728\u80a1\u7968\u6da8\u8dcc\u9884\u6d4b\u4e2d\uff0c\u6211\u4eec\u8ba4\u4e3a\u524d\u4e00\u5929\u7684\u4ea4\u6613\u91cf\u548c\u6536\u76d8\u4ef7\u5bf9\u4e8e\u7b2c\u4e8c\u5929\u7684\u6da8\u8dcc\u662f\u6709\u5f71\u54cd\u7684\uff0c\u90a3\u4e48\u5206\u7c7b\u5668\u5c31\u662f\u901a\u8fc7\u6837\u672c\u7684\u4ea4\u6613\u91cf\u548c\u6536\u76d8\u4ef7\u9884\u6d4b\u7b2c\u4e8c\u5929\u7684\u6da8\u8dcc\u60c5\u51b5\u7684\u7b97\u6cd5\u3002  \u7279\u5f81  : \u5728\u5206\u7c7b\u95ee\u9898\u4e2d\uff0c\u8f93\u5165\u5230\u5206\u7c7b\u5668\u4e2d\u7684\u6570\u636e\u53eb\u505a\u7279\u5f81\u3002\u4ee5\u4e0a\u9762\u7684\u80a1\u7968\u6da8\u8dcc\u9884\u6d4b\u95ee\u9898\u4e3a\u4f8b\uff0c\u7279\u5f81\u5c31\u662f\u524d\u4e00\u5929\u7684\u4ea4\u6613\u91cf\u548c\u6536\u76d8\u4ef7\u3002  \u7ebf\u6027\u5206\u7c7b\u5668  : \u7ebf\u6027\u5206\u7c7b\u5668\u662f\u5206\u7c7b\u5668\u4e2d\u7684\u4e00\u79cd\uff0c\u5c31\u662f\u5224\u5b9a\u5206\u7c7b\u7ed3\u679c\u7684\u6839\u636e\u662f\u901a\u8fc7\u7279\u5f81\u7684\u7ebf\u6027\u7ec4\u5408\u5f97\u5230\u7684\uff0c\u4e0d\u80fd\u901a\u8fc7\u7279\u5f81\u7684\u975e\u7ebf\u6027\u8fd0\u7b97\u7ed3\u679c\u4f5c\u4e3a\u5224\u5b9a\u6839\u636e\u3002\u8fd8\u4ee5\u4e0a\u9762\u7684\u80a1\u7968\u6da8\u8dcc\u9884\u6d4b\u95ee\u9898\u4e3a\u4f8b\uff0c\u5224\u65ad\u7684\u4f9d\u636e\u53ea\u80fd\u662f\u524d\u4e00\u5929\u7684\u4ea4\u6613\u91cf\u548c\u6536\u76d8\u4ef7\u7684\u7ebf\u6027\u7ec4\u5408\uff0c\u4e0d\u80fd\u5c06\u4ea4\u6613\u91cf\u548c\u6536\u76d8\u4ef7\u8fdb\u884c\u5f00\u65b9\uff0c\u5e73\u65b9\u7b49\u8fd0\u7b97\u3002", 
            "title": "Concept \uff08\u76f8\u5173\u6982\u5ff5\uff09"
        }, 
        {
            "location": "/\u4e66\u7c4d/\u673a\u5668\u5b66\u4e60\u5b9e\u6218/06.1.\u652f\u6301\u5411\u91cf\u673a\u7684\u51e0\u4e2a\u901a\u4fd7\u7406\u89e3/#how-does-it-work-svm", 
            "text": "", 
            "title": "How does it work? \uff08SVM \u539f\u7406\uff09"
        }, 
        {
            "location": "/\u4e66\u7c4d/\u673a\u5668\u5b66\u4e60\u5b9e\u6218/06.1.\u652f\u6301\u5411\u91cf\u673a\u7684\u51e0\u4e2a\u901a\u4fd7\u7406\u89e3/#1", 
            "text": "\u9996\u5148\u6211\u4eec\u8bb2\u4e2a\u6545\u4e8b:  \u5728\u5f88\u4e45\u4ee5\u524d\u7684\u60c5\u4eba\u8282\uff0c\u5927\u4fa0\u8981\u53bb\u6551\u4ed6\u7684\u7231\u4eba\uff0c\u4f46\u9b54\u9b3c\u548c\u4ed6\u73a9\u4e86\u4e00\u4e2a\u6e38\u620f\u3002  \u9b54\u9b3c\u5728\u684c\u5b50\u4e0a\u4f3c\u4e4e\u6709\u89c4\u5f8b\u653e\u4e86\u4e24\u79cd\u989c\u8272\u7684\u7403\uff0c\u8bf4\uff1a\u201c\u4f60\u7528\u4e00\u6839\u68cd\u5206\u5f00\u5b83\u4eec\uff1f\u8981\u6c42\uff1a\u5c3d\u91cf\u5728\u653e\u66f4\u591a\u7403\u4e4b\u540e\uff0c\u4ecd\u7136\u9002\u7528\u3002\u201d   \u4e8e\u662f\u5927\u4fa0\u8fd9\u6837\u653e\uff0c\u5e72\u7684\u4e0d\u9519\uff1f    \u7136\u540e\u9b54\u9b3c\uff0c\u53c8\u5728\u684c\u4e0a\u653e\u4e86\u66f4\u591a\u7684\u7403\uff0c\u4f3c\u4e4e\u6709\u4e00\u4e2a\u7403\u7ad9\u9519\u4e86\u9635\u8425\u3002   SVM \u5c31\u662f\u8bd5\u56fe\u628a\u68cd\u653e\u5728\u6700\u4f73\u4f4d\u7f6e\uff0c\u597d\u8ba9\u5728\u68cd\u7684\u4e24\u8fb9\u6709\u5c3d\u53ef\u80fd\u5927\u7684\u95f4\u9699\u3002   \u73b0\u5728\u5373\u4f7f\u9b54\u9b3c\u653e\u4e86\u66f4\u591a\u7684\u7403\uff0c\u68cd\u4ecd\u7136\u662f\u4e00\u4e2a\u597d\u7684\u5206\u754c\u7ebf\u3002   \u7136\u540e\uff0c\u5728 SVM \u5de5\u5177\u7bb1\u4e2d\u6709\u53e6\u4e00\u4e2a\u66f4\u52a0\u91cd\u8981\u7684 trick\u3002 \u9b54\u9b3c\u770b\u5230\u5927\u4fa0\u5df2\u7ecf\u5b66\u4f1a\u4e86\u4e00\u4e2a trick \uff0c\u4e8e\u662f\u9b54\u9b3c\u7ed9\u4e86\u5927\u4fa0\u4e00\u4e2a\u65b0\u7684\u6311\u6218\u3002   \u73b0\u5728\uff0c\u5927\u4fa0\u6ca1\u6709\u68cd\u53ef\u4ee5\u5f88\u597d\u5e2e\u4ed6\u5206\u5f00\u4e24\u79cd\u7403\u4e86\uff0c\u73b0\u5728\u600e\u4e48\u529e\u5462\uff1f\u5f53\u7136\u50cf\u6240\u6709\u6b66\u4fa0\u7247\u4e2d\u4e00\u6837\u5927\u4fa0\u684c\u5b50\u4e00\u62cd\uff0c\u7403\u98de\u5230\u7a7a\u4e2d\u3002\u7136\u540e\uff0c\u51ed\u501f\u5927\u4fa0\u7684\u8f7b\u529f\uff0c\u5927\u4fa0\u6293\u8d77\u4e00\u5f20\u7eb8\uff0c\u63d2\u5230\u4e86\u4e24\u79cd\u7403\u7684\u4e2d\u95f4\u3002   \u73b0\u5728\uff0c\u4ece\u9b54\u9b3c\u7684\u89d2\u5ea6\u770b\u8fd9\u4e9b\u7403\uff0c\u8fd9\u4e9b\u7403\u770b\u8d77\u6765\u50cf\u662f\u88ab\u4e00\u6761\u66f2\u7ebf\u5206\u5f00\u4e86\u3002   \u518d\u4e4b\u540e\uff0c\u65e0\u804a\u7684\u5927\u4eba\u4eec\uff0c\u628a\u8fd9\u4e9b\u7403\u53eb\u505a  \u300cdata\u300d \uff0c\u628a\u68cd\u5b50\u53eb\u505a  \u300cclassifier\u300d , \u6700\u5927\u95f4\u9699 trick \u53eb\u505a \u300coptimization\u300d \uff0c \u62cd\u684c\u5b50\u53eb\u505a \u300ckernelling\u300d , \u90a3\u5f20\u7eb8\u53eb\u505a \u300chyperplane\u300d  \u3002  \u6709\u68af\u5b50\u7684\u7ae5\u978b\uff0c\u53ef\u4ee5\u770b\u4e00\u4e0b\u8fd9\u4e2a\u5730\u65b9\uff0c\u770b\u89c6\u9891\u6765\u66f4\u76f4\u89c2\u7684\u611f\u53d7\uff1a  https://www.youtube.com/watch?v=3liCbRZPrZA", 
            "title": "1\u3001\u5f15\u7528\u77e5\u4e4e\u4e0a @\u7b80\u4e4b \u5927\u4f6c\u7684\u56de\u7b54\uff1a"
        }, 
        {
            "location": "/\u4e66\u7c4d/\u673a\u5668\u5b66\u4e60\u5b9e\u6218/06.1.\u652f\u6301\u5411\u91cf\u673a\u7684\u51e0\u4e2a\u901a\u4fd7\u7406\u89e3/#2", 
            "text": "\u652f\u6301\u5411\u91cf\u673a\u662f\u7528\u6765\u89e3\u51b3\u5206\u7c7b\u95ee\u9898\u7684\u3002  \u5148\u8003\u8651\u6700\u7b80\u5355\u7684\u60c5\u51b5\uff0c\u8c4c\u8c46\u548c\u7c73\u7c92\uff0c\u7528\u6652\u5b50\u5f88\u5feb\u53ef\u4ee5\u5206\u5f00\uff0c\u5c0f\u9897\u7c92\u6f0f\u4e0b\u53bb\uff0c\u5927\u9897\u7c92\u4fdd\u7559\u3002  \u7528\u4e00\u4e2a\u51fd\u6570\u6765\u8868\u793a\u5c31\u662f\u5f53\u76f4\u5f84 d \u5927\u4e8e\u67d0\u4e2a\u503c D \uff0c\u5c31\u5224\u5b9a\u4e3a\u8c4c\u8c46\uff0c\u5c0f\u4e8e\u67d0\u4e2a\u503c\u5c31\u662f\u7c73\u7c92\u3002  d D, \u8c4c\u8c46  d D,\u7c73\u7c92  \u5728\u6570\u8f74\u4e0a\u5c31\u662f\u5728d\u5de6\u8fb9\u5c31\u662f\u7c73\u7c92\uff0c\u53f3\u8fb9\u5c31\u662f\u7eff\u8c46\uff0c\u8fd9\u662f\u4e00\u7ef4\u7684\u60c5\u51b5\u3002  \u4f46\u662f\u5b9e\u9645\u95ee\u9898\u6ca1\u8fd9\u4e48\u7b80\u5355\uff0c\u8003\u8651\u7684\u95ee\u9898\u4e0d\u5355\u5355\u662f\u5c3a\u5bf8\uff0c\u4e00\u4e2a\u82b1\u7684\u4e24\u4e2a\u54c1\u79cd\uff0c\u600e\u4e48\u5206\u7c7b\uff1f  \u5047\u8bbe\u51b3\u5b9a\u4ed6\u4eec\u5206\u7c7b\u7684\u6709\u4e24\u4e2a\u5c5e\u6027\uff0c\u82b1\u74e3\u5c3a\u5bf8\u548c\u989c\u8272\u3002\u5355\u72ec\u7528\u4e00\u4e2a\u5c5e\u6027\u6765\u5206\u7c7b\uff0c\u50cf\u521a\u624d\u5206\u7c73\u7c92\u90a3\u6837\uff0c\u5c31\u4e0d\u884c\u4e86\u3002\u8fd9\u4e2a\u65f6\u5019\u6211\u4eec\u8bbe\u7f6e\u4e24\u4e2a\u503c \u5c3a\u5bf8 x \u548c\u989c\u8272 y.  \u6211\u4eec\u628a\u6240\u6709\u7684\u6570\u636e\u90fd\u4e22\u5230 x-y \u5e73\u9762\u4e0a\u4f5c\u4e3a\u70b9\uff0c\u6309\u9053\u7406\u5982\u679c\u53ea\u6709\u8fd9\u4e24\u4e2a\u5c5e\u6027\u51b3\u5b9a\u4e86\u4e24\u4e2a\u54c1\u79cd\uff0c\u6570\u636e\u80af\u5b9a\u4f1a\u6309\u4e24\u7c7b\u805a\u96c6\u5728\u8fd9\u4e2a\u4e8c\u7ef4\u5e73\u9762\u4e0a\u3002  \u6211\u4eec\u53ea\u8981\u627e\u5230\u4e00\u6761\u76f4\u7ebf\uff0c\u628a\u8fd9\u4e24\u7c7b\u5212\u5206\u5f00\u6765\uff0c\u5206\u7c7b\u5c31\u5f88\u5bb9\u6613\u4e86\uff0c\u4ee5\u540e\u9047\u5230\u4e00\u4e2a\u6570\u636e\uff0c\u5c31\u4e22\u8fdb\u8fd9\u4e2a\u5e73\u9762\uff0c\u770b\u5728\u76f4\u7ebf\u7684\u54ea\u4e00\u8fb9\uff0c\u5c31\u662f\u54ea\u4e00\u7c7b\u3002  \u6bd4\u5982 x+y-2=0 \u8fd9\u6761\u76f4\u7ebf\uff0c\u6211\u4eec\u628a\u6570\u636e (x,y) \u4ee3\u5165\uff0c\u53ea\u8981\u8ba4\u4e3a x+y-2 0 \u7684\u5c31\u662f A \u7c7b\uff0c x+y-2 0 \u7684\u5c31\u662f B \u7c7b\u3002  \u4ee5\u6b64\u7c7b\u63a8\uff0c\u8fd8\u6709\u4e09\u7ef4\u7684\uff0c\u56db\u7ef4\u7684\uff0cN\u7ef4\u7684 \u5c5e\u6027\u7684\u5206\u7c7b\uff0c\u8fd9\u6837\u6784\u9020\u7684\u4e5f\u8bb8\u5c31\u4e0d\u662f\u76f4\u7ebf\uff0c\u800c\u662f\u5e73\u9762\uff0c\u8d85\u5e73\u9762\u3002  \u4e00\u4e2a\u4e09\u7ef4\u7684\u51fd\u6570\u5206\u7c7b \uff1ax+y+z-2=0\uff0c\u8fd9\u5c31\u662f\u4e2a\u5206\u7c7b\u7684\u5e73\u9762\u4e86\u3002  \u6709\u65f6\u5019\uff0c\u5206\u7c7b\u7684\u90a3\u6761\u7ebf\u4e0d\u4e00\u5b9a\u662f\u76f4\u7ebf\uff0c\u8fd8\u6709\u53ef\u80fd\u662f\u66f2\u7ebf\uff0c\u6211\u4eec\u901a\u8fc7\u67d0\u4e9b\u51fd\u6570\u6765\u8f6c\u6362\uff0c\u5c31\u53ef\u4ee5\u8f6c\u5316\u6210\u521a\u624d\u7684\u54ea\u79cd\u591a\u7ef4\u7684\u5206\u7c7b\u95ee\u9898\uff0c\u8fd9\u4e2a\u5c31\u662f\u6838\u51fd\u6570\u7684\u601d\u60f3\u3002  \u4f8b\u5982\uff1a\u5206\u7c7b\u7684\u51fd\u6570\u662f\u4e2a\u5706\u5f62 x 2+y 2-4=0 \u3002\u8fd9\u4e2a\u65f6\u5019\u4ee4 x^2=a ; y^2=b ,\u8fd8\u4e0d\u5c31\u53d8\u6210\u4e86a+b-4=0 \u8fd9\u79cd\u76f4\u7ebf\u95ee\u9898\u4e86\u3002  \u8fd9\u5c31\u662f\u652f\u6301\u5411\u91cf\u673a\u7684\u601d\u60f3\u3002", 
            "title": "2\u3001\u5f15\u7528\u77e5\u4e4e @\u5f00\u819b\u624b\u6c34\u8d27 \u5927\u4f6c\u7684\u56de\u7b54\uff0c\u6211\u8ba4\u4e3a\u662f\u8d85\u7ea7\u901a\u4fd7\u7684\u4e00\u4e2a\u7248\u672c\uff1a"
        }, 
        {
            "location": "/\u4e66\u7c4d/\u673a\u5668\u5b66\u4e60\u5b9e\u6218/06.1.\u652f\u6301\u5411\u91cf\u673a\u7684\u51e0\u4e2a\u901a\u4fd7\u7406\u89e3/#3-kf", 
            "text": "\u5982\u56fe\u7684\u4f8b\u5b50\uff0c\uff08\u8bad\u7ec3\u96c6\uff09\u7ea2\u8272\u70b9\u662f\u6211\u4eec\u5df2\u77e5\u7684\u5206\u7c7b1\uff0c\uff08\u8bad\u7ec3\u96c6\uff09\u84dd\u8272\u70b9\u662f\u5df2\u77e5\u7684\u5206\u7c7b2\uff0c\u6211\u4eec\u60f3\u5bfb\u627e\u4e00\u4e2a\u5206\u754c\u8d85\u5e73\u9762\uff08\u56fe\u4e2d\u7eff\u7ebf\uff09\uff08\u56e0\u4e3a\u793a\u4f8b\u662f\u4e8c\u7ef4\u6570\u636e\u70b9\uff0c\u6240\u4ee5\u53ea\u662f\u4e00\u6761\u7ebf\uff0c\u5982\u679c\u6570\u636e\u662f\u4e09\u7ef4\u7684\u5c31\u662f\u5e73\u9762\uff0c\u5982\u679c\u662f\u4e09\u7ef4\u4ee5\u4e0a\u5c31\u662f\u8d85\u5e73\u9762\uff09\u628a\u8fd9\u4e24\u7c7b\u5b8c\u5168\u5206\u5f00\uff0c\u8fd9\u6837\u7684\u8bdd\u518d\u6765\u4e00\u4e2a\u6837\u672c\u70b9\u9700\u8981\u6211\u4eec\u9884\u6d4b\u7684\u8bdd\uff0c\u6211\u4eec\u5c31\u53ef\u4ee5\u6839\u636e\u8fd9\u4e2a\u5206\u754c\u8d85\u5e73\u9762\u9884\u6d4b\u51fa\u5206\u7c7b\u7ed3\u679c\u3002   \u90a3\u6211\u4eec\u5982\u4f55\u9009\u62e9\u8fd9\u4e2a\u5206\u7c7b\u8d85\u5e73\u9762\u5462\uff1f\u4ece\u6570\u5b66\u4e0a\u8bf4\uff0c\u8d85\u5e73\u9762\u7684\u516c\u5f0f\u662f,\u4e5f\u5c31\u662f\u8bf4\u5982\u4f55\u9009\u53d6\u8fd9\u4e2a  \uff08\u662f\u4e2a\u5411\u91cf\uff09\u3002  \u4f20\u7edf\u65b9\u6cd5\u662f\u6839\u636e\u6700\u5c0f\u4e8c\u4e58\u9519\u8bef\u6cd5\uff08least squared error\uff09\uff0c\u9996\u5148\u968f\u4fbf\u5b9a\u9009\u53d6\u4e00\u4e2a\u968f\u673a\u5e73\u9762\uff0c\u4e5f\u5c31\u662f\u968f\u673a\u9009\u53d6   \u548c  \uff0c\u7136\u540e\u60f3\u5fc5\u4f1a\u5728\u8bad\u7ec3\u96c6\u4e2d\u4ea7\u751f\u5927\u91cf\u7684\u9519\u8bef\u5206\u7c7b\uff0c\u4e5f\u5c31\u662f\u8bf4\uff0c  \u7ed3\u679c\u5e94\u8be5\u5927\u4e8e 0 \u7684\u65f6\u5019\u5c0f\u4e8e 0 \uff0c\u5e94\u8be5\u5c0f\u4e8e 0 \u7684\u65f6\u5019\u5927\u4e8e 0 \u3002\u8fd9\u65f6\u5019\u6709\u4e00\u4e2a\u9519\u8bef\u635f\u5931\uff0c\u4e5f\u5c31\u662f\u8bf4\u5bf9\u4e8e\u6240\u6709\u9519\u8bef\u7684\u5206\u7c7b\uff0c\u4ed6\u4eec\u7684\u5e73\u65b9\u548c\uff08least squared error\uff09 \u4e3a:   , \u6700\u5c0f\u4e8c\u4e58\u6cd5\u7684\u76ee\u6807\u5c31\u662f\u8ba9\u8fd9\u4e2a\u503c\u8d8b\u4e8e\u6700\u5c0f\uff0c\u5bf9   \u6c42\u5bfc\u53d6 0 \uff0c\u91c7\u7528\u68af\u5ea6\u4e0b\u964d\u7b97\u6cd5\uff0c\u53ef\u4ee5\u6c42\u51fa\u9519\u8bef\u5e73\u65b9\u548c\u7684\u6781\u503c\uff0c\u6c42\u51fa\u6700\u4f18\u7684   \uff0c\u4e5f\u5c31\u662f\u6c42\u51fa\u6700\u4f18\u7684\u8d85\u5e73\u9762\u3002\uff08\u53ef\u4ee5\u8bc1\u660e\uff0c\u5982\u679c\u57fa\u51fd\u6570\u662f\u6307\u6570\u65cf\u51fd\u6570\uff0c\u6c42\u51fa\u7684\u8d85\u5e73\u9762\u662f\u5168\u5c40\u6700\u4f18\u7684\uff09\u3002  \u90a3\u6211\u4eec SVM \u7b97\u6cd5\u7684\u601d\u8def\u662f\u600e\u6837\u7684\u5462\uff1f  \u4e0d\u540c\u4e8e\u4f20\u7edf\u7684\u6700\u5c0f\u4e8c\u4e58\u7b56\u7565\u7684\u601d\u60f3\uff0c\u6211\u4eec\u91c7\u7528\u4e00\u79cd\u65b0\u7684\u601d\u8def\uff0c\u8fd9\u4e2a\u5206\u754c\u9762\u6709\u4ec0\u4e48\u6837\u7684\u7279\u5f81\u5462\uff1f  \u7b2c\u4e00\uff0c\u5b83 \u201c\u5939\u201d \u5728\u4e24\u7c7b\u6837\u672c\u70b9\u4e4b\u95f4\uff1b\u7b2c\u4e8c\uff0c\u5b83\u79bb\u4e24\u7c7b\u6837\u672c\u70b9\u4e2d\u6240\u6709 \u201c\u79bb\u5b83\u6700\u8fd1\u7684\u70b9\u201d \uff0c\u90fd\u79bb\u5b83\u5c3d\u53ef\u80fd\u7684\u8fdc\u3002\u5982\u56fe\u6240\u793a\uff1a   \u5728\u865a\u7ebf\u4e0a\u7684\u70b9\uff0c\u5c31\u662f\u6211\u4eec\u6240\u627e\u5230\u7684\u79bb\u5206\u89e3\u8d85\u5e73\u9762\u6700\u8fd1\u7684\u6837\u672c\u70b9\uff0cX \u7c7b\u4e2d\u627e\u5230\u4e86\u4e00\u4e2a\uff0cO \u7c7b\u627e\u5230\u4e86\u4e24\u4e2a\u3002\u6211\u4eec\u9700\u8981\u5206\u7c7b\u8d85\u5e73\u9762\u79bb\u8fd9\u4e09\u4e2a\u6837\u672c\u70b9\u90fd\u5c3d\u53ef\u80fd\u7684\u8fdc\uff0c\u4e5f\u5c31\u662f\u8bf4\uff0c\u5b83\u5904\u5728\u4e24\u6761\u865a\u7ebf\u7684\u4e2d\u95f4\u3002\u8fd9\u5c31\u662f\u6211\u4eec\u627e\u5230\u7684\u5206\u754c\u8d85\u5e73\u9762\u3002  \u53e6\u5916\uff0c\u8fd9\u91cc\u6211\u4eec\u5c31\u53ef\u4ee5\u89e3\u91ca\u4ec0\u4e48\u662f \u201c\u652f\u6301\u5411\u91cf\u201d \u4e86\uff0c\u652f\u6301\u5411\u91cf\u5c31\u662f\u865a\u7ebf\u4e0a\u7684\u79bb\u5206\u7c7b\u8d85\u5e73\u9762\u6700\u8fd1\u7684\u6837\u672c\u70b9\uff0c\u56e0\u4e3a\u6bcf\u4e00\u4e2a\u6837\u672c\u70b9\u90fd\u662f\u4e00\u4e2a\u591a\u7ef4\u7684\u5411\u91cf\uff0c\u5411\u91cf\u7684\u6bcf\u4e00\u4e2a\u7ef4\u5ea6\u90fd\u662f\u8fd9\u4e2a\u6837\u672c\u70b9\u7684\u4e00\u4e2a\u7279\u5f81\u3002\u6bd4\u5982\u5728\u6839\u636e\u8eab\u9ad8\uff0c\u4f53\u91cd\uff0c\u7279\u5f81\u8fdb\u884c\u7537\u5973\u5206\u7c7b\u7684\u65f6\u5019\uff0c\u6bcf\u4e00\u4e2a\u4eba\u662f\u4e00\u4e2a\u5411\u91cf\uff0c\u5411\u91cf\u6709\u4e24\u4e2a\u7ef4\u5ea6\uff0c\u7b2c\u4e00\u7ef4\u662f\u8eab\u9ad8\uff0c\u7b2c\u4e8c\u7ef4\u662f\u4f53\u91cd\u3002  \u4ecb\u7ecd\u5b8c SVM \u7684\u57fa\u672c\u601d\u60f3\uff0c\u6211\u4eec\u6765\u63a2\u8ba8\u4e00\u4e0b\u5982\u4f55\u7528\u6570\u5b66\u7684\u65b9\u6cd5\u8fdb\u884c SVM \u5206\u7c7b\u3002  \u9996\u5148\u6211\u4eec\u9700\u8981\u628a\u521a\u521a\u8bf4\u7684\u6700\u5927\u95f4\u9694\u5206\u7c7b\u5668\u7684\u601d\u60f3\u7528\u6570\u5b66\u516c\u5f0f\u8868\u8fbe\u51fa\u6765\u3002\u5148\u5b9a\u4e49\u51e0\u4f55\u95f4\u9694\u7684\u6982\u5ff5\uff0c\u51e0\u4f55\u95f4\u9694\u5c31\u662f\u5728\u591a\u7ef4\u7a7a\u95f4\u4e2d\u4e00\u4e2a\u591a\u7ef4\u70b9\u5230\u4e00\u4e2a\u8d85\u5e73\u9762\u7684\u8ddd\u79bb\uff0c\u6839\u636e\u5411\u91cf\u7684\u77e5\u8bc6\u53ef\u4ee5\u7b97\u51fa\u6765\uff1a   \u7136\u540e\u5bf9\u4e8e\u6240\u6709\u7684\u652f\u6301\u5411\u91cf\uff0c\u4f7f\u4ed6\u4eec\u5230\u8d85\u5e73\u9762   \u7684\u8ddd\u79bb\u6700\u5927\uff0c\u4e5f\u5c31\u662f   \u56e0\u4e3a\u5bf9\u4e8e\u6240\u6709\u652f\u6301\u5411\u91cf\uff0c\u4ed6\u4eec   \u7684\u503c\u90fd\u662f\u4e00\u5b9a\u7684\uff0c\u6211\u4eec\u5047\u8bbe\u6052\u7b49\u4e8e 1 \uff0c\u90a3\u4e48\u4e0a\u5f0f\u53d8\u6210\u4e86   ,\u5e76\u4e14\u5bf9\u4e8e\u6240\u6709\u7684\u6837\u672c\u70b9\uff0c\u6ee1\u8db3   \u7684\u7ea6\u675f\uff0c\u56e0\u6b64\uff0c\u53ef\u4ee5\u5229\u7528\u62c9\u683c\u6717\u65e5\u4e58\u6570\u6cd5\u8ba1\u7b97\u51fa\u5b83\u7684\u6781\u503c\u3002\u4e5f\u5c31\u662f\u6c42\u51fa\u8fd9\u4e2a\u8d85\u5e73\u9762\u3002  \u63a8\u5bfc\u8fc7\u7a0b\u7565\u4e3a\u590d\u6742\uff0c\u8be6\u7ec6\u4e86\u89e3\u53ef\u4ee5\u53c2\u8003\u51f8\u4e8c\u6b21\u89c4\u5212\u77e5\u8bc6\uff0c\u7ed3\u5408 SMO \u7b97\u6cd5\u7406\u89e3 SVM \u8ba1\u7b97\u8d85\u5e73\u9762\u7684\u8be6\u7ec6\u8fc7\u7a0b\u3002  \u603b\u4e4b\uff0c\u5728\u8ba1\u7b97\u7684\u8fc7\u7a0b\u4e2d\uff0c\u6211\u4eec\u4e0d\u9700\u8981\u4e86\u89e3\u652f\u6301\u5411\u91cf\u4ee5\u5916\u7684\u5176\u4ed6\u6837\u672c\u70b9\uff0c\u53ea\u9700\u8981\u5229\u7528\u76f8\u5bf9\u4e8e\u6240\u6709\u6837\u672c\u70b9\u6765\u8bf4\u4e3a\u6570\u4e0d\u591a\u7684\u652f\u6301\u5411\u91cf\uff0c\u5c31\u53ef\u4ee5\u6c42\u51fa\u5206\u7c7b\u8d85\u5e73\u9762\uff0c\u8ba1\u7b97\u590d\u6742\u5ea6\u5927\u4e3a\u964d\u4f4e\u3002", 
            "title": "3\u3001\u5f15\u7528 @\u80e1KF \u5927\u4f6c\u7684\u56de\u7b54\uff08\u8fd9\u4e2a\u9700\u8981\u4e00\u4e9b\u6570\u5b66\u77e5\u8bc6\uff09\uff1a"
        }, 
        {
            "location": "/\u4e66\u7c4d/\u673a\u5668\u5b66\u4e60\u5b9e\u6218/06.1.\u652f\u6301\u5411\u91cf\u673a\u7684\u51e0\u4e2a\u901a\u4fd7\u7406\u89e3/#4", 
            "text": "\u5148\u770b\u601d\u7ef4\u5bfc\u56fe\uff1a   \u5de6\u8fb9\u662f\u6c42\u89e3\u57fa\u672c\u7684SVM\u95ee\u9898  \u53f3\u8fb9\u662f\u76f8\u5173\u6269\u5c55    \u4ec0\u4e48\u662f SVM \uff1f  Support Vector Machine, \u4e00\u4e2a\u666e\u901a\u7684 SVM \u5c31\u662f\u4e00\u6761\u76f4\u7ebf\u7f62\u4e86\uff0c\u7528\u6765\u5b8c\u7f8e\u5212\u5206 linearly separable \u7684\u4e24\u7c7b\u3002\u4f46\u8fd9\u53c8\u4e0d\u662f\u4e00\u6761\u666e\u901a\u7684\u76f4\u7ebf\uff0c\u8fd9\u662f\u65e0\u6570\u6761\u53ef\u4ee5\u5206\u7c7b\u7684\u76f4\u7ebf\u5f53\u4e2d\u6700\u5b8c\u7f8e\u7684\uff0c\u56e0\u4e3a\u5b83\u6070\u597d\u5728\u4e24\u4e2a\u7c7b\u7684\u4e2d\u95f4\uff0c\u8ddd\u79bb\u4e24\u4e2a\u7c7b\u7684\u70b9\u90fd\u4e00\u6837\u8fdc\u3002\u800c\u6240\u8c13\u7684 Support vector \u5c31\u662f\u8fd9\u4e9b\u79bb\u5206\u754c\u7ebf\u6700\u8fd1\u7684\u300e\u70b9\u300f\u3002\u5982\u679c\u53bb\u6389\u8fd9\u4e9b\u70b9\uff0c\u76f4\u7ebf\u591a\u534a\u662f\u8981\u6539\u53d8\u4f4d\u7f6e\u7684\u3002\u53ef\u4ee5\u8bf4\u662f\u8fd9\u4e9b vectors \uff08\u4e3b\uff0c\u70b9\u70b9\uff09 support \uff08\u8c13\uff0c\u5b9a\u4e49\uff09\u4e86 machine \uff08\u5bbe\uff0c\u5206\u7c7b\u5668\uff09...   \u6240\u4ee5\u8c1c\u5e95\u5c31\u5728\u8c1c\u9762\u4e0a\u554a\u670b\u53cb\u4eec\uff0c\u53ea\u8981\u627e\u5230\u4e86\u8fd9\u4e9b\u6700\u9760\u8fd1\u7684\u70b9\u4e0d\u5c31\u627e\u5230\u4e86 SVM \u4e86\u561b\u3002  \u5982\u679c\u662f\u9ad8\u7ef4\u7684\u70b9\uff0cSVM \u7684\u5206\u754c\u7ebf\u5c31\u662f\u5e73\u9762\u6216\u8005\u8d85\u5e73\u9762\u3002\u5176\u5b9e\u6ca1\u6709\u5dee\uff0c\u90fd\u662f\u4e00\u5200\u5207\u4e24\u5757\uff0c\u6211\u5c31\u7edf\u7edf\u53eb\u76f4\u7ebf\u4e86\u3002  \u600e\u4e48\u6c42\u89e3 SVM \uff1f  \u5173\u4e8e\u8fd9\u6761\u76f4\u7ebf\uff0c\u6211\u4eec\u77e5\u9053   (1)\u5b83\u5728\u79bb\u4e24\u8fb9\u4e00\u6837\u8fdc\uff0c(2)\u6700\u8fd1\u8ddd\u79bb\u5c31\u662f\u5230support vector\uff0c\u5176\u4ed6\u8ddd\u79bb\u53ea\u80fd\u66f4\u8fdc\u3002  \u4e8e\u662f\u81ea\u7136\u800c\u7136\u53ef\u4ee5\u5f97\u5230\u91cd\u8981\u8868\u8fbe  I. direct representation   \uff08\u53ef\u4ee5\u628a margin \u770b\u4f5c\u662f boundary \u7684\u51fd\u6570\uff0c\u5e76\u4e14\u60f3\u8981\u627e\u5230\u4f7f\u5f97\u662f\u4f7f\u5f97 margin \u6700\u5927\u5316\u7684boundary\uff0c\u800c margin(*) \u8fd9\u4e2a\u51fd\u6570\u662f\uff1a\u8f93\u5165\u4e00\u4e2a boundary \uff0c\u8ba1\u7b97\uff08\u6b63\u786e\u5206\u7c7b\u7684\uff09\u6240\u6709\u82f9\u679c\u548c\u9999\u8549\u4e2d\uff0c\u5230 boundary \u7684\u6700\u5c0f\u8ddd\u79bb\u3002\uff09  \u53c8\u6709\u6700\u5927\u53c8\u6709\u6700\u5c0f\u770b\u8d77\u6765\u597d\u77db\u76fe\u3002\u5b9e\u9645\u4e0a\u300e\u6700\u5927\u300f\u662f\u5bf9\u8fd9\u4e2a\u6574\u4f53\u4f7f\u7528\u4e0d\u540c boundary \u5c42\u9762\u7684\u6700\u5927\uff0c\u300e\u6700\u5c0f\u300f\u662f\u5728\u6bd4\u8f83\u300e\u70b9\u300f\u7684\u5c42\u9762\u4e0a\u7684\u6700\u5c0f\u3002\u5916\u5c42\u5728\u6bd4\u8f83 boundary \u627e\u6700\u5927\u7684 margin \uff0c\u5185\u5c42\u5728\u6bd4\u8f83\u70b9\u70b9\u627e\u6700\u5c0f\u7684\u8ddd\u79bb\u3002  \u5176\u4e2d\u8ddd\u79bb\uff0c\u8bf4\u767d\u4e86\u5c31\u662f\u70b9\u5230\u76f4\u7ebf\u7684\u8ddd\u79bb\uff1b\u53ea\u8981\u5b9a\u4e49\u5e26\u6b63\u8d1f\u53f7\u7684\u8ddd\u79bb\uff0c\u662f {\u82f9\u679c+1} \u9762\u4e3a\u6b63 {\u9999\u8549-1} \u9762\u4e3a\u8d1f\u7684\u8ddd\u79bb\uff0c\u4e92\u76f8\u4e58\u4e0a\u5404\u81ea\u7684 label   \uff0c\u5c31\u548c\u8c10\u7edf\u4e00\u6c11\u4e3b\u5bcc\u5f3a\u4e86\u3002   \u5230\u8fd9\u91cc\u4e3a\u6b62\u5df2\u7ecf\u8bf4\u5b8c\u4e86\u6240\u6709\u5173\u4e8eSVM\u7684\u76f4\u89c2\u4e86\u89e3\uff0c\u5982\u679c\u4e0d\u60f3\u770b\u6c42\u89e3\uff0c\u53ef\u4ee5\u8df3\u8fc7\u4e0b\u9762\u4e00\u5927\u6bb5\u76f4\u63a5\u5230 objective function \u3002  \u76f4\u63a5\u8868\u8fbe\u867d\u7136\u6e05\u695a\u4f46\u662f\u6c42\u89e3\u65e0\u4ece\u4e0b\u624b\u3002\u505a\u4e00\u4e9b\u7b80\u5355\u5730\u7b49\u4ef7\u53d8\u6362\uff08\u5206\u6bcd\u5012\u4e0a\u6765\uff09\u53ef\u4ee5\u5f97\u5230  II. canonical representation   \uff08\u6572\u9ed1\u677f\uff09   \u8981\u5f97\u5230  III. dual representation  \u4e4b\u524d\u9700\u8981\u5927\u6982\u77e5\u9053\u4e00\u4e0b\u62c9\u683c\u6717\u65e5\u4e58\u5b50\u6cd5 (method of lagrange multiplier)\uff0c\u5b83\u662f\u7528\u5728\u6709\u5404\u79cd\u7ea6\u675f\u6761\u4ef6(\u5404\u79cd \"subject to\" )\u4e0b\u7684\u76ee\u6807\u51fd\u6570\uff0c\u4e5f\u5c31\u662f\u76f4\u63a5\u53ef\u4ee5\u6c42\u5bfc\u53ef\u4ee5\u5f15\u51fa dual representation\uff08\u600e\u4e48\u8fd8\u6ca1\u5b8c\u6454\uff09   \u7a0d\u5fae\u501f\u7528\u521a\u521a\u6570\u5b66\u8868\u8fbe\u91cc\u9762\u7684\u5185\u5bb9\u770b\u4e2a\u6709\u8da3\u7684\u4e1c\u897f\uff1a  \u8fd8\u8bb0\u5f97\u6211\u4eec\u600e\u4e48\u9884\u6d4b\u4e00\u4e2a\u65b0\u7684\u6c34\u679c\u662f\u82f9\u679c\u8fd8\u662f\u9999\u8549\u5417\uff1f\u6211\u4eec\u4ee3\u5165\u5230\u5206\u754c\u7684\u76f4\u7ebf\u91cc\uff0c\u7136\u540e\u901a\u8fc7\u7b26\u53f7\u6765\u5224\u65ad\u3002  \u521a\u521aw\u5df2\u7ecf\u88ab\u8868\u8fbe\u51fa\u6765\u4e86\u4e5f\u5c31\u662f\u8bf4\u8fd9\u4e2a\u76f4\u7ebf\u73b0\u5728\u53d8\u6210\u4e86\uff1a   \u770b\u4f3c\u4eff\u4f5b\u7528\u5230\u4e86\u6240\u6709\u7684\u8bad\u7ec3\u6c34\u679c\uff0c\u4f46\u662f\u5176\u4e2d   \u7684\u6c34\u679c\u90fd\u6ca1\u6709\u8d77\u5230\u4f5c\u7528\uff0c\u5269\u4e0b\u7684\u5c31\u662f\u5c0f\u90e8\u5206\u9760\u8fb9\u8fb9\u7684 Support vectors \u5440\u3002  III. dual representation   \u5982\u679c\u9999\u8549\u548c\u82f9\u679c\u4e0d\u80fd\u7528\u76f4\u7ebf\u5206\u5272\u5462\uff1f   Kernel trick.   \u5176\u5b9e\u7528\u76f4\u7ebf\u5206\u5272\u7684\u65f6\u5019\u6211\u4eec\u5df2\u7ecf\u4f7f\u7528\u4e86 kernel \uff0c\u90a3\u5c31\u662f\u7ebf\u6027 kernel ,   \u5982\u679c\u8981\u66ff\u6362 kernel \u90a3\u4e48\u628a\u76ee\u6807\u51fd\u6570\u91cc\u9762\u7684\u5185\u79ef\u5168\u90e8\u66ff\u6362\u6210\u65b0\u7684 kernel function \u5c31\u597d\u4e86\uff0c\u5c31\u662f\u8fd9\u4e48\u7b80\u5355\u3002  \u7b2c\u4e00\u4e2a\u6b66\u4fa0\u5927\u5e08\u7684\u6bd4\u55bb\u5df2\u7ecf\u8bf4\u5f97\u5f88\u76f4\u89c2\u4e86\uff0c\u4f4e\u7ef4\u975e\u7ebf\u6027\u7684\u5206\u754c\u7ebf\u5176\u5b9e\u5728\u9ad8\u7ef4\u662f\u53ef\u4ee5\u7ebf\u6027\u5206\u5272\u7684\uff0c\u53ef\u4ee5\u7406\u89e3\u4e3a\u2014\u2014\u300e\u4f60\u4eec\u662f\u866b\u5b50\uff01\u300f\u5206\u5f97\u5f00\u4e2ap...\uff08\u5927\u96fe\uff09  \u5982\u679c\u9999\u8549\u548c\u82f9\u679c\u6709\u4ea4\u96c6\u5462\uff1f    \u5982\u679c\u8fd8\u6709\u68a8\u5462\uff1f   \u53ef\u4ee5\u6bcf\u4e2a\u7c7b\u522b\u505a\u4e00\u6b21 SVM\uff1a\u662f\u82f9\u679c\u8fd8\u662f\u4e0d\u662f\u82f9\u679c\uff1f\u662f\u9999\u8549\u8fd8\u662f\u4e0d\u662f\u9999\u8549\uff1f\u662f\u68a8\u5b50\u8fd8\u662f\u4e0d\u662f\u68a8\u5b50\uff1f\u4ece\u4e2d\u9009\u51fa\u53ef\u80fd\u6027\u6700\u5927\u7684\u3002\u8fd9\u662f one-versus-the-rest approach\u3002  \u4e5f\u53ef\u4ee5\u4e24\u4e24\u505a\u4e00\u6b21 SVM\uff1a\u662f\u82f9\u679c\u8fd8\u662f\u9999\u8549\uff1f\u662f\u9999\u8549\u8fd8\u662f\u68a8\u5b50\uff1f\u662f\u68a8\u5b50\u8fd8\u662f\u82f9\u679c\uff1f\u6700\u540e\u4e09\u4e2a\u5206\u7c7b\u5668\u6295\u7968\u51b3\u5b9a\u3002\u8fd9\u662f one-versus-one approace\u3002  \u4f46\u8fd9\u5176\u5b9e\u90fd\u591a\u591a\u5c11\u5c11\u6709\u95ee\u9898\uff0c\u6bd4\u5982\u82f9\u679c\u7279\u522b\u591a\uff0c\u9999\u8549\u7279\u522b\u5c11\uff0c\u6211\u5c31\u65e0\u8111\u5224\u65ad\u4e3a\u82f9\u679c\u4e5f\u4e0d\u4f1a\u9519\u592a\u591a\uff1b\u591a\u4e2a\u5206\u7c7b\u5668\u8981\u653e\u5230\u4e00\u4e2a\u53f0\u9762\u4e0a\uff0c\u4e07\u4e00\u4ed6\u4eec\u7684 scale \u6ca1\u6709\u5728\u4e00\u4e2a\u53f0\u9762\u4e0a\u4e5f\u672a\u53ef\u77e5\u3002  \u8bfe\u540e\u9898\uff1a\n1\u3001vector \u4e0d\u613f\u610f support \u600e\u4e48\u529e\uff1f\n2\u3001\u82f9\u679c\u597d\u5403\u8fd8\u662f\u9999\u8549\u597d\u5403\uff1f  \u6700\u540e\u9001\u4e00\u5f20\u56fe\u6211\u597d\u7231\u54c8\u54c8\u54c8 (Credit: Burr Settles)   [1] Bishop C M. Pattern recognition[J]. Machine Learning, 2006, 128.  [2] Friedman J, Hastie T, Tibshirani R. The elements of statistical learning[M]. Springer, Berlin: Springer series in statistics, 2001.  [3] James G, Witten D, Hastie T, et al. An introduction to statistical learning[M]. New York: springer, 2013.", 
            "title": "4\u3001\u5f15\u7528\u77e5\u4e4e @\u9760\u9760\u9760\u8c31 \u5927\u4f6c\u7684\u7406\u89e3\uff08\u8fd9\u4e2a\u9700\u8981\u7684\u6570\u5b66\u77e5\u8bc6\u66f4\u52a0\u5389\u5bb3\u4e00\u70b9\uff09\uff1a"
        }, 
        {
            "location": "/\u4e66\u7c4d/\u673a\u5668\u5b66\u4e60\u5b9e\u6218/06.1.\u652f\u6301\u5411\u91cf\u673a\u7684\u51e0\u4e2a\u901a\u4fd7\u7406\u89e3/#_2", 
            "text": "", 
            "title": "\u7406\u89e3\u548c\u5e94\u7528"
        }, 
        {
            "location": "/\u4e66\u7c4d/\u673a\u5668\u5b66\u4e60\u5b9e\u6218/06.1.\u652f\u6301\u5411\u91cf\u673a\u7684\u51e0\u4e2a\u901a\u4fd7\u7406\u89e3/#1datamining", 
            "text": "\u505a\u6570\u636e\u6316\u6398\u5e94\u7528\u7684\u4e00\u79cd\u91cd\u8981\u7b97\u6cd5\uff0c\u4e5f\u662f\u6548\u679c\u6700\u597d\u7684\u5206\u7c7b\u7b97\u6cd5\u4e4b\u4e00\u3002  \u4e3e\u4e2a\u4f8b\u5b50\uff0c\u5c31\u662f\u5c3d\u91cf\u628a\u6837\u672c\u4e2d\u7684\u4ece\u66f4\u9ad8\u7eac\u5ea6\u770b\u8d77\u6765\u5728\u4e00\u8d77\u7684\u6837\u672c\u5408\u5728\u4e00\u8d77\uff0c\u6bd4\u5982\u5728\u4e00\u7ef4\uff08\u76f4\u7ebf\uff09\u7a7a\u95f4\u91cc\u7684\u6837\u672c\u4ece\u4e8c\u7ef4\u5e73\u9762\u4e0a\u53ef\u4ee5\u5206\u6210\u4e0d\u540c\u7c7b\u522b\uff0c\u800c\u5728\u4e8c\u7ef4\u5e73\u9762\u4e0a\u5206\u6563\u7684\u6837\u672c\u5982\u679c\u4ece\u7b2c\u4e09\u7ef4\u7a7a\u95f4\u4e0a\u6765\u770b\u5c31\u53ef\u4ee5\u5bf9\u4ed6\u4eec\u505a\u5206\u7c7b\u3002  \u652f\u6301\u5411\u91cf\u673a\u7b97\u6cd5\u76ee\u7684\u662f\u627e\u51fa\u6700\u4f18\u8d85\u5e73\u9762\uff0c\u4f7f\u5206\u7c7b\u95f4\u9694\u6700\u5927\uff0c\u8981\u6c42\u4e0d\u4f46\u6b63\u786e\u5206\u5f00\uff0c\u800c\u4e14\u4f7f\u5206\u7c7b\u95f4\u9694\u6700\u5927\uff0c\u5728\u4e24\u7c7b\u6837\u672c\u4e2d\u79bb\u5206\u7c7b\u5e73\u9762\u6700\u8fd1\u4e14\u4f4d\u4e8e\u5e73\u884c\u4e8e\u6700\u4f18\u8d85\u5e73\u9762\u7684\u8d85\u5e73\u9762\u4e0a\u7684\u70b9\u5c31\u662f\u652f\u6301\u5411\u91cf\uff0c\u4e3a\u627e\u5230\u6700\u4f18\u8d85\u5e73\u9762\u53ea\u8981\u627e\u5230\u6240\u6709\u652f\u6301\u5411\u91cf\u5373\u53ef\u3002  \u5bf9\u4e8e\u975e\u7ebf\u6027\u652f\u6301\u5411\u91cf\u673a\uff0c\u901a\u5e38\u505a\u6cd5\u662f\u628a\u7ebf\u6027\u4e0d\u53ef\u5206\u8f6c\u5316\u6210\u7ebf\u6027\u53ef\u5206\uff0c\u901a\u8fc7\u4e00\u4e2a\u975e\u7ebf\u6027\u6620\u5c04\u5c06\u4f4e\u7ef4\u8f93\u5165\u7a7a\u95f4\u4e2d\u7684\u6570\u636e\u7279\u6027\u6620\u5c04\u5230\u9ad8\u7ef4\u7ebf\u6027\u7279\u5f81\u7a7a\u95f4\u4e2d\uff0c\u5728\u9ad8\u7ef4\u7a7a\u95f4\u4e2d\u6c42\u7ebf\u6027\u6700\u4f18\u5206\u7c7b\u8d85\u5e73\u9762\u3002", 
            "title": "1\u3001DataMining \uff08\u6570\u636e\u6316\u6398\uff09"
        }, 
        {
            "location": "/\u4e66\u7c4d/\u673a\u5668\u5b66\u4e60\u5b9e\u6218/06.1.\u652f\u6301\u5411\u91cf\u673a\u7684\u51e0\u4e2a\u901a\u4fd7\u7406\u89e3/#2scikit-learn-sklearn", 
            "text": "SVM \u7684\u57fa\u672c\u539f\u7406\u57fa\u672c\u4e0a\u5df2\u7ecf\u8bf4\u7684\u5dee\u4e0d\u591a\u4e86\uff0c\u4e0b\u9762\u54b1\u4eec\u5c31\u6765\u770b\u770b SVM \u5728\u5b9e\u9645\u5e94\u7528\u8be5\u5982\u4f55\u4f7f\u7528\u4e86\u3002\u5e78\u8fd0\u7684\u662f\uff0c\u5728 python \u4e0b\u9762\uff0csklearn \u63d0\u4f9b\u4e86\u4e00\u4e2a\u975e\u5e38\u597d\u7528\u7684\u673a\u5668\u5b66\u4e60\u7b97\u6cd5\uff0c\u6211\u4eec\u8c03\u7528\u76f8\u5173\u7684\u5305\u5c31\u597d\u5566\u3002", 
            "title": "2\u3001scikit-learn (sklearn)"
        }, 
        {
            "location": "/\u4e66\u7c4d/\u673a\u5668\u5b66\u4e60\u5b9e\u6218/06.1.\u652f\u6301\u5411\u91cf\u673a\u7684\u51e0\u4e2a\u901a\u4fd7\u7406\u89e3/#_3", 
            "text": "\u5b66\u4e60 SVM \u9700\u8981\u6709\u8010\u5fc3\uff0c\u5f53\u521d\u7814\u7a76\u8fd9\u4e2a\u90e8\u5206\u7684\u65f6\u5019\uff0c\u70bc\u54e5\uff08github  jiangzhonglian \uff09\uff0c\u6cd5\u8d85\u5927\u4f6c\uff08github  geekidentity \uff09\uff0c\u7f8a\u4e09\u5927\u4f6c\uff08github  sheepmen \uff09\uff0c\u5ead\u54e5\uff08github  wangyangting \uff09\u90fd\u82b1\u8d39\u4e86\u597d\u957f\u65f6\u95f4\uff0c\u6211\u53ea\u80fd\u8eb2\u5728\u89d2\u843d\u53d1\u6296....", 
            "title": "\u5c0f\u7ed3"
        }, 
        {
            "location": "/\u4e66\u7c4d/\u673a\u5668\u5b66\u4e60\u5b9e\u6218/07.\u96c6\u6210\u65b9\u6cd5-\u968f\u673a\u68ee\u6797\u548cAdaBoost/", 
            "text": "\u7b2c7\u7ae0 \u96c6\u6210\u65b9\u6cd5 ensemble method\n\n\n\u96c6\u6210\u65b9\u6cd5: ensemble method\uff08\u5143\u7b97\u6cd5: meta algorithm\uff09 \u6982\u8ff0\n\n\n\n\n\u6982\u5ff5\uff1a\u662f\u5bf9\u5176\u4ed6\u7b97\u6cd5\u8fdb\u884c\u7ec4\u5408\u7684\u4e00\u79cd\u5f62\u5f0f\u3002\n\n\n\n\n\u901a\u4fd7\u6765\u8bf4\uff1a \u5f53\u505a\u91cd\u8981\u51b3\u5b9a\u65f6\uff0c\u5927\u5bb6\u53ef\u80fd\u90fd\u4f1a\u8003\u8651\u5438\u53d6\u591a\u4e2a\u4e13\u5bb6\u800c\u4e0d\u53ea\u662f\u4e00\u4e2a\u4eba\u7684\u610f\u89c1\u3002\n    \u673a\u5668\u5b66\u4e60\u5904\u7406\u95ee\u9898\u65f6\u53c8\u4f55\u5c1d\u4e0d\u662f\u5982\u6b64\uff1f \u8fd9\u5c31\u662f\u96c6\u6210\u65b9\u6cd5\u80cc\u540e\u7684\u601d\u60f3\u3002\n\n\n\n\n\n\n\u96c6\u6210\u65b9\u6cd5\uff1a  \n\n\n\n\n\u6295\u7968\u9009\u4e3e(bagging: \u81ea\u4e3e\u6c47\u805a\u6cd5 bootstrap aggregating): \u662f\u57fa\u4e8e\u6570\u636e\u968f\u673a\u91cd\u62bd\u6837\u5206\u7c7b\u5668\u6784\u9020\u7684\u65b9\u6cd5\n\n\n\u518d\u5b66\u4e60(boosting): \u662f\u57fa\u4e8e\u6240\u6709\u5206\u7c7b\u5668\u7684\u52a0\u6743\u6c42\u548c\u7684\u65b9\u6cd5\n\n\n\n\n\n\n\n\n\u96c6\u6210\u65b9\u6cd5 \u573a\u666f\n\n\n\u76ee\u524d bagging \u65b9\u6cd5\u6700\u6d41\u884c\u7684\u7248\u672c\u662f: \u968f\u673a\u68ee\u6797(random forest)\n\n\u9009\u7537\u53cb\uff1a\u7f8e\u5973\u9009\u62e9\u62e9\u5076\u5bf9\u8c61\u7684\u65f6\u5019\uff0c\u4f1a\u95ee\u51e0\u4e2a\u95fa\u871c\u7684\u5efa\u8bae\uff0c\u6700\u540e\u9009\u62e9\u4e00\u4e2a\u7efc\u5408\u5f97\u5206\u6700\u9ad8\u7684\u4e00\u4e2a\u4f5c\u4e3a\u7537\u670b\u53cb\n\n\n\u76ee\u524d boosting \u65b9\u6cd5\u6700\u6d41\u884c\u7684\u7248\u672c\u662f: AdaBoost\n\n\u8ffd\u5973\u53cb\uff1a3\u4e2a\u5e05\u54e5\u8ffd\u540c\u4e00\u4e2a\u7f8e\u5973\uff0c\u7b2c1\u4e2a\u5e05\u54e5\u5931\u8d25-\n(\u4f20\u6388\u7ecf\u9a8c\uff1a\u59d3\u540d\u3001\u5bb6\u5ead\u60c5\u51b5) \u7b2c2\u4e2a\u5e05\u54e5\u5931\u8d25-\n(\u4f20\u6388\u7ecf\u9a8c\uff1a\u5174\u8da3\u7231\u597d\u3001\u6027\u683c\u7279\u70b9) \u7b2c3\u4e2a\u5e05\u54e5\u6210\u529f\n\n\n\n\nbagging \u548c boosting \u533a\u522b\u662f\u4ec0\u4e48\uff1f\n\n\n\n\n\n\nbagging \u662f\u4e00\u79cd\u4e0e boosting \u5f88\u7c7b\u4f3c\u7684\u6280\u672f, \u6240\u4f7f\u7528\u7684\u591a\u4e2a\u5206\u7c7b\u5668\u7684\u7c7b\u578b\uff08\u6570\u636e\u91cf\u548c\u7279\u5f81\u91cf\uff09\u90fd\u662f\u4e00\u81f4\u7684\u3002\n\n\nbagging \u662f\u7531\u4e0d\u540c\u7684\u5206\u7c7b\u5668\uff081.\u6570\u636e\u968f\u673a\u5316 2.\u7279\u5f81\u968f\u673a\u5316\uff09\u7ecf\u8fc7\u8bad\u7ec3\uff0c\u7efc\u5408\u5f97\u51fa\u7684\u51fa\u73b0\u6700\u591a\u5206\u7c7b\u7ed3\u679c\uff1bboosting \u662f\u901a\u8fc7\u8c03\u6574\u5df2\u6709\u5206\u7c7b\u5668\u9519\u5206\u7684\u90a3\u4e9b\u6570\u636e\u6765\u83b7\u5f97\u65b0\u7684\u5206\u7c7b\u5668\uff0c\u5f97\u51fa\u76ee\u524d\u6700\u4f18\u7684\u7ed3\u679c\u3002\n\n\nbagging \u4e2d\u7684\u5206\u7c7b\u5668\u6743\u91cd\u662f\u76f8\u7b49\u7684\uff1b\u800c boosting \u4e2d\u7684\u5206\u7c7b\u5668\u52a0\u6743\u6c42\u548c\uff0c\u6240\u4ee5\u6743\u91cd\u5e76\u4e0d\u76f8\u7b49\uff0c\u6bcf\u4e2a\u6743\u91cd\u4ee3\u8868\u7684\u662f\u5176\u5bf9\u5e94\u5206\u7c7b\u5668\u5728\u4e0a\u4e00\u8f6e\u8fed\u4ee3\u4e2d\u7684\u6210\u529f\u5ea6\u3002\n\n\n\n\n\u968f\u673a\u68ee\u6797\n\n\n\u968f\u673a\u68ee\u6797 \u6982\u8ff0\n\n\n\n\n\u968f\u673a\u68ee\u6797\u6307\u7684\u662f\u5229\u7528\u591a\u68f5\u6811\u5bf9\u6837\u672c\u8fdb\u884c\u8bad\u7ec3\u5e76\u9884\u6d4b\u7684\u4e00\u79cd\u5206\u7c7b\u5668\u3002\n\n\n\u51b3\u7b56\u6811\u76f8\u5f53\u4e8e\u4e00\u4e2a\u5927\u5e08\uff0c\u901a\u8fc7\u81ea\u5df1\u5728\u6570\u636e\u96c6\u4e2d\u5b66\u5230\u7684\u77e5\u8bc6\u7528\u4e8e\u65b0\u6570\u636e\u7684\u5206\u7c7b\u3002\u4f46\u662f\u4fd7\u8bdd\u8bf4\u5f97\u597d\uff0c\u4e00\u4e2a\u8bf8\u845b\u4eae\uff0c\u73a9\u4e0d\u8fc7\u4e09\u4e2a\u81ed\u76ae\u5320\u3002\u968f\u673a\u68ee\u6797\u5c31\u662f\u5e0c\u671b\u6784\u5efa\u591a\u4e2a\u81ed\u76ae\u5320\uff0c\u5e0c\u671b\u6700\u7ec8\u7684\u5206\u7c7b\u6548\u679c\u80fd\u591f\u8d85\u8fc7\u5355\u4e2a\u5927\u5e08\u7684\u4e00\u79cd\u7b97\u6cd5\u3002\n\n\n\n\n\u968f\u673a\u68ee\u6797 \u539f\u7406\n\n\n\u90a3\u968f\u673a\u68ee\u6797\u5177\u4f53\u5982\u4f55\u6784\u5efa\u5462\uff1f\n\n\u6709\u4e24\u4e2a\u65b9\u9762\uff1a\n\n1. \u6570\u636e\u7684\u968f\u673a\u6027\u5316\n \n2. \u5f85\u9009\u7279\u5f81\u7684\u968f\u673a\u5316\n\n\n\u4f7f\u5f97\u968f\u673a\u68ee\u6797\u4e2d\u7684\u51b3\u7b56\u6811\u90fd\u80fd\u591f\u5f7c\u6b64\u4e0d\u540c\uff0c\u63d0\u5347\u7cfb\u7edf\u7684\u591a\u6837\u6027\uff0c\u4ece\u800c\u63d0\u5347\u5206\u7c7b\u6027\u80fd\u3002\n\n\n\n\n\u6570\u636e\u7684\u968f\u673a\u5316\uff1a\u4f7f\u5f97\u968f\u673a\u68ee\u6797\u4e2d\u7684\u51b3\u7b56\u6811\u66f4\u666e\u904d\u5316\u4e00\u70b9\uff0c\u9002\u5408\u66f4\u591a\u7684\u573a\u666f\u3002\n\n\n\n\n\uff08\u6709\u653e\u56de\u7684\u51c6\u786e\u7387\u5728\uff1a70% \u4ee5\u4e0a\uff0c \u65e0\u653e\u56de\u7684\u51c6\u786e\u7387\u5728\uff1a60% \u4ee5\u4e0a\uff09\n1. \u91c7\u53d6\u6709\u653e\u56de\u7684\u62bd\u6837\u65b9\u5f0f \u6784\u9020\u5b50\u6570\u636e\u96c6\uff0c\u4fdd\u8bc1\u4e0d\u540c\u5b50\u96c6\u4e4b\u95f4\u7684\u6570\u91cf\u7ea7\u4e00\u6837\uff08\u4e0d\u540c\u5b50\u96c6\uff0f\u540c\u4e00\u5b50\u96c6 \u4e4b\u95f4\u7684\u5143\u7d20\u53ef\u4ee5\u91cd\u590d\uff09\n2. \u5229\u7528\u5b50\u6570\u636e\u96c6\u6765\u6784\u5efa\u5b50\u51b3\u7b56\u6811\uff0c\u5c06\u8fd9\u4e2a\u6570\u636e\u653e\u5230\u6bcf\u4e2a\u5b50\u51b3\u7b56\u6811\u4e2d\uff0c\u6bcf\u4e2a\u5b50\u51b3\u7b56\u6811\u8f93\u51fa\u4e00\u4e2a\u7ed3\u679c\u3002\n3. \u7136\u540e\u7edf\u8ba1\u5b50\u51b3\u7b56\u6811\u7684\u6295\u7968\u7ed3\u679c\uff0c\u5f97\u5230\u6700\u7ec8\u7684\u5206\u7c7b \u5c31\u662f \u968f\u673a\u68ee\u6797\u7684\u8f93\u51fa\u7ed3\u679c\u3002\n4. \u5982\u4e0b\u56fe\uff0c\u5047\u8bbe\u968f\u673a\u68ee\u6797\u4e2d\u67093\u68f5\u5b50\u51b3\u7b56\u6811\uff0c2\u68f5\u5b50\u6811\u7684\u5206\u7c7b\u7ed3\u679c\u662fA\u7c7b\uff0c1\u68f5\u5b50\u6811\u7684\u5206\u7c7b\u7ed3\u679c\u662fB\u7c7b\uff0c\u90a3\u4e48\u968f\u673a\u68ee\u6797\u7684\u5206\u7c7b\u7ed3\u679c\u5c31\u662fA\u7c7b\u3002\n\n\n\n\n\n\n\u5f85\u9009\u7279\u5f81\u7684\u968f\u673a\u5316\n\n\n\n\n\n\n\u5b50\u6811\u4ece\u6240\u6709\u7684\u5f85\u9009\u7279\u5f81\u4e2d\u968f\u673a\u9009\u53d6\u4e00\u5b9a\u7684\u7279\u5f81\u3002\n\n\n\u5728\u9009\u53d6\u7684\u7279\u5f81\u4e2d\u9009\u53d6\u6700\u4f18\u7684\u7279\u5f81\u3002\n\n\n\n\n\u4e0b\u56fe\u4e2d\uff0c\u84dd\u8272\u7684\u65b9\u5757\u4ee3\u8868\u6240\u6709\u53ef\u4ee5\u88ab\u9009\u62e9\u7684\u7279\u5f81\uff0c\u4e5f\u5c31\u662f\u76ee\u524d\u7684\u5f85\u9009\u7279\u5f81\uff1b\u9ec4\u8272\u7684\u65b9\u5757\u662f\u5206\u88c2\u7279\u5f81\u3002\n\n\u5de6\u8fb9\u662f\u4e00\u68f5\u51b3\u7b56\u6811\u7684\u7279\u5f81\u9009\u53d6\u8fc7\u7a0b\uff0c\u901a\u8fc7\u5728\u5f85\u9009\u7279\u5f81\u4e2d\u9009\u53d6\u6700\u4f18\u7684\u5206\u88c2\u7279\u5f81\uff08\u522b\u5fd8\u4e86\u524d\u6587\u63d0\u5230\u7684ID3\u7b97\u6cd5\uff0cC4.5\u7b97\u6cd5\uff0cCART\u7b97\u6cd5\u7b49\u7b49\uff09\uff0c\u5b8c\u6210\u5206\u88c2\u3002\n\n\u53f3\u8fb9\u662f\u4e00\u4e2a\u968f\u673a\u68ee\u6797\u4e2d\u7684\u5b50\u6811\u7684\u7279\u5f81\u9009\u53d6\u8fc7\u7a0b\u3002\n\n\n\n\n\n\n\u968f\u673a\u68ee\u6797 \u5f00\u53d1\u6d41\u7a0b\n\n\n\n\n\u6536\u96c6\u6570\u636e\uff1a\u4efb\u4f55\u65b9\u6cd5\n\u51c6\u5907\u6570\u636e\uff1a\u8f6c\u6362\u6837\u672c\u96c6\n\u5206\u6790\u6570\u636e\uff1a\u4efb\u4f55\u65b9\u6cd5\n\u8bad\u7ec3\u7b97\u6cd5\uff1a\u901a\u8fc7\u6570\u636e\u968f\u673a\u5316\u548c\u7279\u5f81\u968f\u673a\u5316\uff0c\u8fdb\u884c\u591a\u5b9e\u4f8b\u7684\u5206\u7c7b\u8bc4\u4f30\n\u6d4b\u8bd5\u7b97\u6cd5\uff1a\u8ba1\u7b97\u9519\u8bef\u7387\n\u4f7f\u7528\u7b97\u6cd5\uff1a\u8f93\u5165\u6837\u672c\u6570\u636e\uff0c\u7136\u540e\u8fd0\u884c \u968f\u673a\u68ee\u6797 \u7b97\u6cd5\u5224\u65ad\u8f93\u5165\u6570\u636e\u5206\u7c7b\u5c5e\u4e8e\u54ea\u4e2a\u5206\u7c7b\uff0c\u6700\u540e\u5bf9\u8ba1\u7b97\u51fa\u7684\u5206\u7c7b\u6267\u884c\u540e\u7eed\u5904\u7406\n\n\n\n\n\n\n\u968f\u673a\u68ee\u6797 \u7b97\u6cd5\u7279\u70b9\n\n\n\n\n\u4f18\u70b9\uff1a\u51e0\u4e4e\u4e0d\u9700\u8981\u8f93\u5165\u51c6\u5907\u3001\u53ef\u5b9e\u73b0\u9690\u5f0f\u7279\u5f81\u9009\u62e9\u3001\u8bad\u7ec3\u901f\u5ea6\u975e\u5e38\u5feb\u3001\u5176\u4ed6\u6a21\u578b\u5f88\u96be\u8d85\u8d8a\u3001\u5f88\u96be\u5efa\u7acb\u4e00\u4e2a\u7cdf\u7cd5\u7684\u968f\u673a\u68ee\u6797\u6a21\u578b\u3001\u5927\u91cf\u4f18\u79c0\u3001\u514d\u8d39\u4ee5\u53ca\u5f00\u6e90\u7684\u5b9e\u73b0\u3002\n\u7f3a\u70b9\uff1a\u52a3\u52bf\u5728\u4e8e\u6a21\u578b\u5927\u5c0f\u3001\u662f\u4e2a\u5f88\u96be\u53bb\u89e3\u91ca\u7684\u9ed1\u76d2\u5b50\u3002\n\u9002\u7528\u6570\u636e\u8303\u56f4\uff1a\u6570\u503c\u578b\u548c\u6807\u79f0\u578b\n\n\n\n\n\u9879\u76ee\u6848\u4f8b: \u58f0\u7eb3\u4fe1\u53f7\u5206\u7c7b\n\n\n\u9879\u76ee\u6982\u8ff0\n\n\n\u8fd9\u662f Gorman \u548c Sejnowski \u5728\u7814\u7a76\u4f7f\u7528\u795e\u7ecf\u7f51\u7edc\u7684\u58f0\u7eb3\u4fe1\u53f7\u5206\u7c7b\u4e2d\u4f7f\u7528\u7684\u6570\u636e\u96c6\u3002\u4efb\u52a1\u662f\u8bad\u7ec3\u4e00\u4e2a\u6a21\u578b\u6765\u533a\u5206\u58f0\u7eb3\u4fe1\u53f7\u3002\n\n\n\u5f00\u53d1\u6d41\u7a0b\n\n\n\u6536\u96c6\u6570\u636e\uff1a\u63d0\u4f9b\u7684\u6587\u672c\u6587\u4ef6\n\u51c6\u5907\u6570\u636e\uff1a\u8f6c\u6362\u6837\u672c\u96c6\n\u5206\u6790\u6570\u636e\uff1a\u624b\u5de5\u68c0\u67e5\u6570\u636e\n\u8bad\u7ec3\u7b97\u6cd5\uff1a\u5728\u6570\u636e\u4e0a\uff0c\u5229\u7528 random_forest() \u51fd\u6570\u8fdb\u884c\u4f18\u5316\u8bc4\u4f30\uff0c\u8fd4\u56de\u6a21\u578b\u7684\u7efc\u5408\u5206\u7c7b\u7ed3\u679c\n\u6d4b\u8bd5\u7b97\u6cd5\uff1a\u5728\u91c7\u7528\u81ea\u5b9a\u4e49 n_folds \u4efd\u968f\u673a\u91cd\u62bd\u6837 \u8fdb\u884c\u6d4b\u8bd5\u8bc4\u4f30\uff0c\u5f97\u51fa\u7efc\u5408\u7684\u9884\u6d4b\u8bc4\u5206\n\u4f7f\u7528\u7b97\u6cd5\uff1a\u82e5\u4f60\u611f\u5174\u8da3\u53ef\u4ee5\u6784\u5efa\u5b8c\u6574\u7684\u5e94\u7528\u7a0b\u5e8f\uff0c\u4ece\u6848\u4f8b\u8fdb\u884c\u5c01\u88c5\uff0c\u4e5f\u53ef\u4ee5\u53c2\u8003\u6211\u4eec\u7684\u4ee3\u7801\n\n\n\n\n\n\n\u6536\u96c6\u6570\u636e\uff1a\u63d0\u4f9b\u7684\u6587\u672c\u6587\u4ef6\n\n\n\n\n\u6837\u672c\u6570\u636e\uff1asonar-all-data.txt\n\n\n0.02,0.0371,0.0428,0.0207,0.0954,0.0986,0.1539,0.1601,0.3109,0.2111,0.1609,0.1582,0.2238,0.0645,0.066,0.2273,0.31,0.2999,0.5078,0.4797,0.5783,0.5071,0.4328,0.555,0.6711,0.6415,0.7104,0.808,0.6791,0.3857,0.1307,0.2604,0.5121,0.7547,0.8537,0.8507,0.6692,0.6097,0.4943,0.2744,0.051,0.2834,0.2825,0.4256,0.2641,0.1386,0.1051,0.1343,0.0383,0.0324,0.0232,0.0027,0.0065,0.0159,0.0072,0.0167,0.018,0.0084,0.009,0.0032,R\n0.0453,0.0523,0.0843,0.0689,0.1183,0.2583,0.2156,0.3481,0.3337,0.2872,0.4918,0.6552,0.6919,0.7797,0.7464,0.9444,1,0.8874,0.8024,0.7818,0.5212,0.4052,0.3957,0.3914,0.325,0.32,0.3271,0.2767,0.4423,0.2028,0.3788,0.2947,0.1984,0.2341,0.1306,0.4182,0.3835,0.1057,0.184,0.197,0.1674,0.0583,0.1401,0.1628,0.0621,0.0203,0.053,0.0742,0.0409,0.0061,0.0125,0.0084,0.0089,0.0048,0.0094,0.0191,0.014,0.0049,0.0052,0.0044,R\n0.0262,0.0582,0.1099,0.1083,0.0974,0.228,0.2431,0.3771,0.5598,0.6194,0.6333,0.706,0.5544,0.532,0.6479,0.6931,0.6759,0.7551,0.8929,0.8619,0.7974,0.6737,0.4293,0.3648,0.5331,0.2413,0.507,0.8533,0.6036,0.8514,0.8512,0.5045,0.1862,0.2709,0.4232,0.3043,0.6116,0.6756,0.5375,0.4719,0.4647,0.2587,0.2129,0.2222,0.2111,0.0176,0.1348,0.0744,0.013,0.0106,0.0033,0.0232,0.0166,0.0095,0.018,0.0244,0.0316,0.0164,0.0095,0.0078,R\n\n\n\n\n\n\n\u51c6\u5907\u6570\u636e\uff1a\u8f6c\u6362\u6837\u672c\u96c6\n\n\n\n\n# \u5bfc\u5165csv\u6587\u4ef6\n\n\ndef\n \nloadDataSet\n(\nfilename\n):\n\n    \ndataset\n \n=\n \n[]\n\n    \nwith\n \nopen\n(\nfilename\n,\n \nr\n)\n \nas\n \nfr\n:\n\n        \nfor\n \nline\n \nin\n \nfr\n.\nreadlines\n():\n\n            \nif\n \nnot\n \nline\n:\n\n                \ncontinue\n\n            \nlineArr\n \n=\n \n[]\n\n            \nfor\n \nfeatrue\n \nin\n \nline\n.\nsplit\n(\n,\n):\n\n                \n# strip()\u8fd4\u56de\u79fb\u9664\u5b57\u7b26\u4e32\u5934\u5c3e\u6307\u5b9a\u7684\u5b57\u7b26\u751f\u6210\u7684\u65b0\u5b57\u7b26\u4e32\n\n                \nstr_f\n \n=\n \nfeatrue\n.\nstrip\n()\n\n                \nif\n \nstr_f\n.\nisdigit\n():\n \n# \u5224\u65ad\u662f\u5426\u662f\u6570\u5b57\n\n                    \n# \u5c06\u6570\u636e\u96c6\u7684\u7b2ccolumn\u5217\u8f6c\u6362\u6210float\u5f62\u5f0f\n\n                    \nlineArr\n.\nappend\n(\nfloat\n(\nstr_f\n))\n\n                \nelse\n:\n\n                    \n# \u6dfb\u52a0\u5206\u7c7b\u6807\u7b7e\n\n                    \nlineArr\n.\nappend\n(\nstr_f\n)\n\n            \ndataset\n.\nappend\n(\nlineArr\n)\n\n    \nreturn\n \ndataset\n\n\n\n\n\n\n\n\u5206\u6790\u6570\u636e\uff1a\u624b\u5de5\u68c0\u67e5\u6570\u636e\n\n\n\u8bad\u7ec3\u7b97\u6cd5\uff1a\u5728\u6570\u636e\u4e0a\uff0c\u5229\u7528 random_forest() \u51fd\u6570\u8fdb\u884c\u4f18\u5316\u8bc4\u4f30\uff0c\u8fd4\u56de\u6a21\u578b\u7684\u7efc\u5408\u5206\u7c7b\u7ed3\u679c\n\n\n\n\n\n\n\u6837\u672c\u6570\u636e\u968f\u673a\u65e0\u653e\u56de\u62bd\u6837-\u7528\u4e8e\u4ea4\u53c9\u9a8c\u8bc1\n\n\n\n\ndef\n \ncross_validation_split\n(\ndataset\n,\n \nn_folds\n):\n\n    \ncross_validation_split(\u5c06\u6570\u636e\u96c6\u8fdb\u884c\u62bd\u91cd\u62bd\u6837 n_folds \u4efd\uff0c\u6570\u636e\u53ef\u4ee5\u91cd\u590d\u91cd\u590d\u62bd\u53d6)\n\n\n\n    Args:\n\n\n        dataset     \u539f\u59cb\u6570\u636e\u96c6\n\n\n        n_folds     \u6570\u636e\u96c6dataset\u5206\u6210n_flods\u4efd\n\n\n    Returns:\n\n\n        dataset_split    list\u96c6\u5408\uff0c\u5b58\u653e\u7684\u662f\uff1a\u5c06\u6570\u636e\u96c6\u8fdb\u884c\u62bd\u91cd\u62bd\u6837 n_folds \u4efd\uff0c\u6570\u636e\u53ef\u4ee5\u91cd\u590d\u91cd\u590d\u62bd\u53d6\n\n\n    \n\n    \ndataset_split\n \n=\n \nlist\n()\n\n    \ndataset_copy\n \n=\n \nlist\n(\ndataset\n)\n       \n# \u590d\u5236\u4e00\u4efd dataset,\u9632\u6b62 dataset \u7684\u5185\u5bb9\u6539\u53d8\n\n    \nfold_size\n \n=\n \nlen\n(\ndataset\n)\n \n/\n \nn_folds\n\n    \nfor\n \ni\n \nin\n \nrange\n(\nn_folds\n):\n\n        \nfold\n \n=\n \nlist\n()\n                  \n# \u6bcf\u6b21\u5faa\u73af fold \u6e05\u96f6\uff0c\u9632\u6b62\u91cd\u590d\u5bfc\u5165 dataset_split\n\n        \nwhile\n \nlen\n(\nfold\n)\n \n \nfold_size\n:\n   \n# \u8fd9\u91cc\u4e0d\u80fd\u7528 if\uff0cif \u53ea\u662f\u5728\u7b2c\u4e00\u6b21\u5224\u65ad\u65f6\u8d77\u4f5c\u7528\uff0cwhile \u6267\u884c\u5faa\u73af\uff0c\u76f4\u5230\u6761\u4ef6\u4e0d\u6210\u7acb\n\n            \n# \u6709\u653e\u56de\u7684\u968f\u673a\u91c7\u6837\uff0c\u6709\u4e00\u4e9b\u6837\u672c\u88ab\u91cd\u590d\u91c7\u6837\uff0c\u4ece\u800c\u5728\u8bad\u7ec3\u96c6\u4e2d\u591a\u6b21\u51fa\u73b0\uff0c\u6709\u7684\u5219\u4ece\u672a\u5728\u8bad\u7ec3\u96c6\u4e2d\u51fa\u73b0\uff0c\u6b64\u5219\u81ea\u52a9\u91c7\u6837\u6cd5\u3002\u4ece\u800c\u4fdd\u8bc1\u6bcf\u68f5\u51b3\u7b56\u6811\u8bad\u7ec3\u96c6\u7684\u5dee\u5f02\u6027            \n\n            \nindex\n \n=\n \nrandrange\n(\nlen\n(\ndataset_copy\n))\n\n            \n# \u5c06\u5bf9\u5e94\u7d22\u5f15 index \u7684\u5185\u5bb9\u4ece dataset_copy \u4e2d\u5bfc\u51fa\uff0c\u5e76\u5c06\u8be5\u5185\u5bb9\u4ece dataset_copy \u4e2d\u5220\u9664\u3002\n\n            \n# pop() \u51fd\u6570\u7528\u4e8e\u79fb\u9664\u5217\u8868\u4e2d\u7684\u4e00\u4e2a\u5143\u7d20\uff08\u9ed8\u8ba4\u6700\u540e\u4e00\u4e2a\u5143\u7d20\uff09\uff0c\u5e76\u4e14\u8fd4\u56de\u8be5\u5143\u7d20\u7684\u503c\u3002\n\n            \nfold\n.\nappend\n(\ndataset_copy\n.\npop\n(\nindex\n))\n  \n# \u65e0\u653e\u56de\u7684\u65b9\u5f0f\n\n            \n# fold.append(dataset_copy[index])  # \u6709\u653e\u56de\u7684\u65b9\u5f0f\n\n        \ndataset_split\n.\nappend\n(\nfold\n)\n\n    \n# \u7531dataset\u5206\u5272\u51fa\u7684n_folds\u4e2a\u6570\u636e\u6784\u6210\u7684\u5217\u8868\uff0c\u4e3a\u4e86\u7528\u4e8e\u4ea4\u53c9\u9a8c\u8bc1\n\n    \nreturn\n \ndataset_split\n\n\n\n\n\n\n\n\u8bad\u7ec3\u6570\u636e\u96c6\u968f\u673a\u5316\n\n\n\n\n# Create a random subsample from the dataset with replacement\n\n\ndef\n \nsubsample\n(\ndataset\n,\n \nratio\n):\n   \n# \u521b\u5efa\u6570\u636e\u96c6\u7684\u968f\u673a\u5b50\u6837\u672c\n\n    \nrandom_forest(\u8bc4\u4f30\u7b97\u6cd5\u6027\u80fd\uff0c\u8fd4\u56de\u6a21\u578b\u5f97\u5206)\n\n\n\n    Args:\n\n\n        dataset         \u8bad\u7ec3\u6570\u636e\u96c6\n\n\n        ratio           \u8bad\u7ec3\u6570\u636e\u96c6\u7684\u6837\u672c\u6bd4\u4f8b\n\n\n    Returns:\n\n\n        sample          \u968f\u673a\u62bd\u6837\u7684\u8bad\u7ec3\u6837\u672c\n\n\n    \n\n\n    \nsample\n \n=\n \nlist\n()\n\n    \n# \u8bad\u7ec3\u6837\u672c\u7684\u6309\u6bd4\u4f8b\u62bd\u6837\u3002\n\n    \n# round() \u65b9\u6cd5\u8fd4\u56de\u6d6e\u70b9\u6570x\u7684\u56db\u820d\u4e94\u5165\u503c\u3002\n\n    \nn_sample\n \n=\n \nround\n(\nlen\n(\ndataset\n)\n \n*\n \nratio\n)\n\n    \nwhile\n \nlen\n(\nsample\n)\n \n \nn_sample\n:\n\n        \n# \u6709\u653e\u56de\u7684\u968f\u673a\u91c7\u6837\uff0c\u6709\u4e00\u4e9b\u6837\u672c\u88ab\u91cd\u590d\u91c7\u6837\uff0c\u4ece\u800c\u5728\u8bad\u7ec3\u96c6\u4e2d\u591a\u6b21\u51fa\u73b0\uff0c\u6709\u7684\u5219\u4ece\u672a\u5728\u8bad\u7ec3\u96c6\u4e2d\u51fa\u73b0\uff0c\u6b64\u5219\u81ea\u52a9\u91c7\u6837\u6cd5\u3002\u4ece\u800c\u4fdd\u8bc1\u6bcf\u68f5\u51b3\u7b56\u6811\u8bad\u7ec3\u96c6\u7684\u5dee\u5f02\u6027\n\n        \nindex\n \n=\n \nrandrange\n(\nlen\n(\ndataset\n))\n\n        \nsample\n.\nappend\n(\ndataset\n[\nindex\n])\n\n    \nreturn\n \nsample\n\n\n\n\n\n\n\n\u7279\u5f81\u968f\u673a\u5316\n\n\n\n\n# \u627e\u51fa\u5206\u5272\u6570\u636e\u96c6\u7684\u6700\u4f18\u7279\u5f81\uff0c\u5f97\u5230\u6700\u4f18\u7684\u7279\u5f81 index\uff0c\u7279\u5f81\u503c row[index]\uff0c\u4ee5\u53ca\u5206\u5272\u5b8c\u7684\u6570\u636e groups\uff08left, right\uff09\n\n\ndef\n \nget_split\n(\ndataset\n,\n \nn_features\n):\n\n    \nclass_values\n \n=\n \nlist\n(\nset\n(\nrow\n[\n-\n1\n]\n \nfor\n \nrow\n \nin\n \ndataset\n))\n  \n# class_values =[0, 1]\n\n    \nb_index\n,\n \nb_value\n,\n \nb_score\n,\n \nb_groups\n \n=\n \n999\n,\n \n999\n,\n \n999\n,\n \nNone\n\n    \nfeatures\n \n=\n \nlist\n()\n\n    \nwhile\n \nlen\n(\nfeatures\n)\n \n \nn_features\n:\n\n        \nindex\n \n=\n \nrandrange\n(\nlen\n(\ndataset\n[\n0\n])\n-\n1\n)\n  \n# \u5f80 features \u6dfb\u52a0 n_features \u4e2a\u7279\u5f81\uff08 n_feature \u7b49\u4e8e\u7279\u5f81\u6570\u7684\u6839\u53f7\uff09\uff0c\u7279\u5f81\u7d22\u5f15\u4ece dataset \u4e2d\u968f\u673a\u53d6\n\n        \nif\n \nindex\n \nnot\n \nin\n \nfeatures\n:\n\n            \nfeatures\n.\nappend\n(\nindex\n)\n\n    \nfor\n \nindex\n \nin\n \nfeatures\n:\n                    \n# \u5728 n_features \u4e2a\u7279\u5f81\u4e2d\u9009\u51fa\u6700\u4f18\u7684\u7279\u5f81\u7d22\u5f15\uff0c\u5e76\u6ca1\u6709\u904d\u5386\u6240\u6709\u7279\u5f81\uff0c\u4ece\u800c\u4fdd\u8bc1\u4e86\u6bcf\u8bfe\u51b3\u7b56\u6811\u7684\u5dee\u5f02\u6027\n\n        \nfor\n \nrow\n \nin\n \ndataset\n:\n\n            \ngroups\n \n=\n \ntest_split\n(\nindex\n,\n \nrow\n[\nindex\n],\n \ndataset\n)\n  \n# groups=(left, right), row[index] \u904d\u5386\u6bcf\u4e00\u884c index \u7d22\u5f15\u4e0b\u7684\u7279\u5f81\u503c\u4f5c\u4e3a\u5206\u7c7b\u503c value, \u627e\u51fa\u6700\u4f18\u7684\u5206\u7c7b\u7279\u5f81\u548c\u7279\u5f81\u503c\n\n            \ngini\n \n=\n \ngini_index\n(\ngroups\n,\n \nclass_values\n)\n\n            \n# \u5de6\u53f3\u4e24\u8fb9\u7684\u6570\u91cf\u8d8a\u4e00\u6837\uff0c\u8bf4\u660e\u6570\u636e\u533a\u5206\u5ea6\u4e0d\u9ad8\uff0cgini\u7cfb\u6570\u8d8a\u5927\n\n            \nif\n \ngini\n \n \nb_score\n:\n\n                \nb_index\n,\n \nb_value\n,\n \nb_score\n,\n \nb_groups\n \n=\n \nindex\n,\n \nrow\n[\nindex\n],\n \ngini\n,\n \ngroups\n  \n# \u6700\u540e\u5f97\u5230\u6700\u4f18\u7684\u5206\u7c7b\u7279\u5f81 b_index,\u5206\u7c7b\u7279\u5f81\u503c b_value,\u5206\u7c7b\u7ed3\u679c b_groups\u3002b_value \u4e3a\u5206\u9519\u7684\u4ee3\u4ef7\u6210\u672c\n\n    \n# print b_score\n\n    \nreturn\n \n{\nindex\n:\n \nb_index\n,\n \nvalue\n:\n \nb_value\n,\n \ngroups\n:\n \nb_groups\n}\n\n\n\n\n\n\n\n\u968f\u673a\u68ee\u6797\n\n\n\n\n# Random Forest Algorithm\n\n\ndef\n \nrandom_forest\n(\ntrain\n,\n \ntest\n,\n \nmax_depth\n,\n \nmin_size\n,\n \nsample_size\n,\n \nn_trees\n,\n \nn_features\n):\n\n    \nrandom_forest(\u8bc4\u4f30\u7b97\u6cd5\u6027\u80fd\uff0c\u8fd4\u56de\u6a21\u578b\u5f97\u5206)\n\n\n\n    Args:\n\n\n        train           \u8bad\u7ec3\u6570\u636e\u96c6\n\n\n        test            \u6d4b\u8bd5\u6570\u636e\u96c6\n\n\n        max_depth       \u51b3\u7b56\u6811\u6df1\u5ea6\u4e0d\u80fd\u592a\u6df1\uff0c\u4e0d\u7136\u5bb9\u6613\u5bfc\u81f4\u8fc7\u62df\u5408\n\n\n        min_size        \u53f6\u5b50\u8282\u70b9\u7684\u5927\u5c0f\n\n\n        sample_size     \u8bad\u7ec3\u6570\u636e\u96c6\u7684\u6837\u672c\u6bd4\u4f8b\n\n\n        n_trees         \u51b3\u7b56\u6811\u7684\u4e2a\u6570\n\n\n        n_features      \u9009\u53d6\u7684\u7279\u5f81\u7684\u4e2a\u6570\n\n\n    Returns:\n\n\n        predictions     \u6bcf\u4e00\u884c\u7684\u9884\u6d4b\u7ed3\u679c\uff0cbagging \u9884\u6d4b\u6700\u540e\u7684\u5206\u7c7b\u7ed3\u679c\n\n\n    \n\n\n    \ntrees\n \n=\n \nlist\n()\n\n    \n# n_trees \u8868\u793a\u51b3\u7b56\u6811\u7684\u6570\u91cf\n\n    \nfor\n \ni\n \nin\n \nrange\n(\nn_trees\n):\n\n        \n# \u968f\u673a\u62bd\u6837\u7684\u8bad\u7ec3\u6837\u672c\uff0c \u968f\u673a\u91c7\u6837\u4fdd\u8bc1\u4e86\u6bcf\u68f5\u51b3\u7b56\u6811\u8bad\u7ec3\u96c6\u7684\u5dee\u5f02\u6027\n\n        \nsample\n \n=\n \nsubsample\n(\ntrain\n,\n \nsample_size\n)\n\n        \n# \u521b\u5efa\u4e00\u4e2a\u51b3\u7b56\u6811\n\n        \ntree\n \n=\n \nbuild_tree\n(\nsample\n,\n \nmax_depth\n,\n \nmin_size\n,\n \nn_features\n)\n\n        \ntrees\n.\nappend\n(\ntree\n)\n\n\n    \n# \u6bcf\u4e00\u884c\u7684\u9884\u6d4b\u7ed3\u679c\uff0cbagging \u9884\u6d4b\u6700\u540e\u7684\u5206\u7c7b\u7ed3\u679c\n\n    \npredictions\n \n=\n \n[\nbagging_predict\n(\ntrees\n,\n \nrow\n)\n \nfor\n \nrow\n \nin\n \ntest\n]\n\n    \nreturn\n \npredictions\n\n\n\n\n\n\n\n\u6d4b\u8bd5\u7b97\u6cd5\uff1a\u5728\u91c7\u7528\u81ea\u5b9a\u4e49 n_folds \u4efd\u968f\u673a\u91cd\u62bd\u6837 \u8fdb\u884c\u6d4b\u8bd5\u8bc4\u4f30\uff0c\u5f97\u51fa\u7efc\u5408\u7684\u9884\u6d4b\u8bc4\u5206\u3002\n\n\n\n\n\n\n\u8ba1\u7b97\u968f\u673a\u68ee\u6797\u7684\u9884\u6d4b\u7ed3\u679c\u7684\u6b63\u786e\u7387\n\n\n\n\n# \u8bc4\u4f30\u7b97\u6cd5\u6027\u80fd\uff0c\u8fd4\u56de\u6a21\u578b\u5f97\u5206\n\n\ndef\n \nevaluate_algorithm\n(\ndataset\n,\n \nalgorithm\n,\n \nn_folds\n,\n \n*\nargs\n):\n\n    \nevaluate_algorithm(\u8bc4\u4f30\u7b97\u6cd5\u6027\u80fd\uff0c\u8fd4\u56de\u6a21\u578b\u5f97\u5206)\n\n\n\n    Args:\n\n\n        dataset     \u539f\u59cb\u6570\u636e\u96c6\n\n\n        algorithm   \u4f7f\u7528\u7684\u7b97\u6cd5\n\n\n        n_folds     \u6570\u636e\u7684\u4efd\u6570\n\n\n        *args       \u5176\u4ed6\u7684\u53c2\u6570\n\n\n    Returns:\n\n\n        scores      \u6a21\u578b\u5f97\u5206\n\n\n    \n\n\n    \n# \u5c06\u6570\u636e\u96c6\u8fdb\u884c\u968f\u673a\u62bd\u6837\uff0c\u5206\u6210 n_folds \u4efd\uff0c\u6570\u636e\u65e0\u91cd\u590d\u7684\u62bd\u53d6\n\n    \nfolds\n \n=\n \ncross_validation_split\n(\ndataset\n,\n \nn_folds\n)\n\n    \nscores\n \n=\n \nlist\n()\n\n    \n# \u6bcf\u6b21\u5faa\u73af\u4ece folds \u4ece\u53d6\u51fa\u4e00\u4e2a fold \u4f5c\u4e3a\u6d4b\u8bd5\u96c6\uff0c\u5176\u4f59\u4f5c\u4e3a\u8bad\u7ec3\u96c6\uff0c\u904d\u5386\u6574\u4e2a folds \uff0c\u5b9e\u73b0\u4ea4\u53c9\u9a8c\u8bc1\n\n    \nfor\n \nfold\n \nin\n \nfolds\n:\n\n        \ntrain_set\n \n=\n \nlist\n(\nfolds\n)\n\n        \ntrain_set\n.\nremove\n(\nfold\n)\n\n        \n# \u5c06\u591a\u4e2a fold \u5217\u8868\u7ec4\u5408\u6210\u4e00\u4e2a train_set \u5217\u8868, \u7c7b\u4f3c union all\n\n        \n\n\n        In [20]: l1=[[1, 2, \na\n], [11, 22, \nb\n]]\n\n\n        In [21]: l2=[[3, 4, \nc\n], [33, 44, \nd\n]]\n\n\n        In [22]: l=[]\n\n\n        In [23]: l.append(l1)\n\n\n        In [24]: l.append(l2)\n\n\n        In [25]: l\n\n\n        Out[25]: [[[1, 2, \na\n], [11, 22, \nb\n]], [[3, 4, \nc\n], [33, 44, \nd\n]]]\n\n\n        In [26]: sum(l, [])\n\n\n        Out[26]: [[1, 2, \na\n], [11, 22, \nb\n], [3, 4, \nc\n], [33, 44, \nd\n]]\n\n\n        \n\n        \ntrain_set\n \n=\n \nsum\n(\ntrain_set\n,\n \n[])\n\n        \ntest_set\n \n=\n \nlist\n()\n\n        \n# fold \u8868\u793a\u4ece\u539f\u59cb\u6570\u636e\u96c6 dataset \u63d0\u53d6\u51fa\u6765\u7684\u6d4b\u8bd5\u96c6\n\n        \nfor\n \nrow\n \nin\n \nfold\n:\n\n            \nrow_copy\n \n=\n \nlist\n(\nrow\n)\n\n            \nrow_copy\n[\n-\n1\n]\n \n=\n \nNone\n \n            \ntest_set\n.\nappend\n(\nrow_copy\n)\n\n        \npredicted\n \n=\n \nalgorithm\n(\ntrain_set\n,\n \ntest_set\n,\n \n*\nargs\n)\n\n        \nactual\n \n=\n \n[\nrow\n[\n-\n1\n]\n \nfor\n \nrow\n \nin\n \nfold\n]\n\n\n        \n# \u8ba1\u7b97\u968f\u673a\u68ee\u6797\u7684\u9884\u6d4b\u7ed3\u679c\u7684\u6b63\u786e\u7387\n\n        \naccuracy\n \n=\n \naccuracy_metric\n(\nactual\n,\n \npredicted\n)\n\n        \nscores\n.\nappend\n(\naccuracy\n)\n\n    \nreturn\n \nscores\n\n\n\n\n\n\n\n\u4f7f\u7528\u7b97\u6cd5\uff1a\u82e5\u4f60\u611f\u5174\u8da3\u53ef\u4ee5\u6784\u5efa\u5b8c\u6574\u7684\u5e94\u7528\u7a0b\u5e8f\uff0c\u4ece\u6848\u4f8b\u8fdb\u884c\u5c01\u88c5\uff0c\u4e5f\u53ef\u4ee5\u53c2\u8003\u6211\u4eec\u7684\u4ee3\u7801\n\n\n\n\n\u5b8c\u6574\u4ee3\u7801\u5730\u5740\n: \nhttps://github.com/apachecn/MachineLearning/blob/master/src/python/7.RandomForest/randomForest.py\n\n\nAdaBoost\n\n\nAdaBoost (adaptive boosting: \u81ea\u9002\u5e94 boosting) \u6982\u8ff0\n\n\n\u80fd\u5426\u4f7f\u7528\u5f31\u5206\u7c7b\u5668\u548c\u591a\u4e2a\u5b9e\u4f8b\u6765\u6784\u5efa\u4e00\u4e2a\u5f3a\u5206\u7c7b\u5668\uff1f \u8fd9\u662f\u4e00\u4e2a\u975e\u5e38\u6709\u8da3\u7684\u7406\u8bba\u95ee\u9898\u3002\n\n\nAdaBoost \u539f\u7406\n\n\n\n\nAdaBoost \u5de5\u4f5c\u539f\u7406\n\n\n\n\n\n\n\n\nAdaBoost \u5f00\u53d1\u6d41\u7a0b\n\n\n\n\n\u6536\u96c6\u6570\u636e\uff1a\u53ef\u4ee5\u4f7f\u7528\u4efb\u610f\u65b9\u6cd5\n\u51c6\u5907\u6570\u636e\uff1a\u4f9d\u8d56\u4e8e\u6240\u4f7f\u7528\u7684\u5f31\u5206\u7c7b\u5668\u7c7b\u578b\uff0c\u672c\u7ae0\u4f7f\u7528\u7684\u662f\u5355\u5c42\u51b3\u7b56\u6811\uff0c\u8fd9\u79cd\u5206\u7c7b\u5668\u53ef\u4ee5\u5904\u7406\u4efb\u4f55\u6570\u636e\u7c7b\u578b\u3002\n    \u5f53\u7136\u4e5f\u53ef\u4ee5\u4f7f\u7528\u4efb\u610f\u5206\u7c7b\u5668\u4f5c\u4e3a\u5f31\u5206\u7c7b\u5668\uff0c\u7b2c2\u7ae0\u5230\u7b2c6\u7ae0\u4e2d\u7684\u4efb\u4e00\u5206\u7c7b\u5668\u90fd\u53ef\u4ee5\u5145\u5f53\u5f31\u5206\u7c7b\u5668\u3002\n    \u4f5c\u4e3a\u5f31\u5206\u7c7b\u5668\uff0c\u7b80\u5355\u5206\u7c7b\u5668\u7684\u6548\u679c\u66f4\u597d\u3002\n\u5206\u6790\u6570\u636e\uff1a\u53ef\u4ee5\u4f7f\u7528\u4efb\u610f\u65b9\u6cd5\u3002\n\u8bad\u7ec3\u7b97\u6cd5\uff1aAdaBoost \u7684\u5927\u90e8\u5206\u65f6\u95f4\u90fd\u7528\u5728\u8bad\u7ec3\u4e0a\uff0c\u5206\u7c7b\u5668\u5c06\u591a\u6b21\u5728\u540c\u4e00\u6570\u636e\u96c6\u4e0a\u8bad\u7ec3\u5f31\u5206\u7c7b\u5668\u3002\n\u6d4b\u8bd5\u7b97\u6cd5\uff1a\u8ba1\u7b97\u5206\u7c7b\u7684\u9519\u8bef\u7387\u3002\n\u4f7f\u7528\u7b97\u6cd5\uff1a\u901aSVM\u4e00\u6837\uff0cAdaBoost \u9884\u6d4b\u4e24\u4e2a\u7c7b\u522b\u4e2d\u7684\u4e00\u4e2a\u3002\u5982\u679c\u60f3\u628a\u5b83\u5e94\u7528\u5230\u591a\u4e2a\u7c7b\u522b\u7684\u573a\u666f\uff0c\u90a3\u4e48\u5c31\u8981\u50cf\u591a\u7c7b SVM \u4e2d\u7684\u505a\u6cd5\u4e00\u6837\u5bf9 AdaBoost \u8fdb\u884c\u4fee\u6539\u3002\n\n\n\n\n\n\nAdaBoost \u7b97\u6cd5\u7279\u70b9\n\n\n\n\n* \u4f18\u70b9\uff1a\u6cdb\u5316\uff08\u7531\u5177\u4f53\u7684\u3001\u4e2a\u522b\u7684\u6269\u5927\u4e3a\u4e00\u822c\u7684\uff09\u9519\u8bef\u7387\u4f4e\uff0c\u6613\u7f16\u7801\uff0c\u53ef\u4ee5\u5e94\u7528\u5728\u5927\u90e8\u5206\u5206\u7c7b\u5668\u4e0a\uff0c\u65e0\u53c2\u6570\u8c03\u8282\u3002\n* \u7f3a\u70b9\uff1a\u5bf9\u79bb\u7fa4\u70b9\u654f\u611f\u3002\n* \u9002\u7528\u6570\u636e\u7c7b\u578b\uff1a\u6570\u503c\u578b\u548c\u6807\u79f0\u578b\u6570\u636e\u3002\n\n\n\n\n\u9879\u76ee\u6848\u4f8b: \u9a6c\u759d\u75c5\u7684\u9884\u6d4b\n\n\n\n\n\u9879\u76ee\u6d41\u7a0b\u56fe\n\n\n\n\n\n\n\u57fa\u4e8e\u5355\u5c42\u51b3\u7b56\u6811\u6784\u5efa\u5f31\u5206\u7c7b\u5668\n* \u5355\u5c42\u51b3\u7b56\u6811(decision stump, \u4e5f\u79f0\u51b3\u7b56\u6811\u6869)\u662f\u4e00\u79cd\u7b80\u5355\u7684\u51b3\u7b56\u6811\u3002\n\n\n\u9879\u76ee\u6982\u8ff0\n\n\n\u9884\u6d4b\u60a3\u6709\u759d\u6c14\u75c5\u7684\u9a6c\u7684\u5b58\u6d3b\u95ee\u9898\uff0c\u8fd9\u91cc\u7684\u6570\u636e\u5305\u62ec368\u4e2a\u6837\u672c\u548c28\u4e2a\u7279\u5f81\uff0c\u759d\u6c14\u75c5\u662f\u63cf\u8ff0\u9a6c\u80c3\u80a0\u75db\u7684\u672f\u8bed\uff0c\u7136\u800c\uff0c\u8fd9\u79cd\u75c5\u5e76\u4e0d\u4e00\u5b9a\u6e90\u81ea\u9a6c\u7684\u80c3\u80a0\u95ee\u9898\uff0c\u5176\u4ed6\u95ee\u9898\u4e5f\u53ef\u80fd\u5f15\u53d1\u759d\u6c14\u75c5\uff0c\u8be5\u6570\u636e\u96c6\u4e2d\u5305\u542b\u4e86\u533b\u9662\u68c0\u6d4b\u9a6c\u759d\u6c14\u75c5\u7684\u4e00\u4e9b\u6307\u6807\uff0c\u6709\u7684\u6307\u6807\u6bd4\u8f83\u4e3b\u89c2\uff0c\u6709\u7684\u6307\u6807\u96be\u4ee5\u6d4b\u91cf\uff0c\u4f8b\u5982\u9a6c\u7684\u75bc\u75db\u7ea7\u522b\u3002\u53e6\u5916\uff0c\u9664\u4e86\u90e8\u5206\u6307\u6807\u4e3b\u89c2\u548c\u96be\u4ee5\u6d4b\u91cf\u4e4b\u5916\uff0c\u8be5\u6570\u636e\u8fd8\u5b58\u5728\u4e00\u4e2a\u95ee\u9898\uff0c\u6570\u636e\u96c6\u4e2d\u670930%\u7684\u503c\u662f\u7f3a\u5931\u7684\u3002\n\n\n\u5f00\u53d1\u6d41\u7a0b\n\n\n\u6536\u96c6\u6570\u636e\uff1a\u63d0\u4f9b\u7684\u6587\u672c\u6587\u4ef6\n\u51c6\u5907\u6570\u636e\uff1a\u786e\u4fdd\u7c7b\u522b\u6807\u7b7e\u662f+1\u548c-1\uff0c\u800c\u975e1\u548c0\n\u5206\u6790\u6570\u636e\uff1a\u7edf\u8ba1\u5206\u6790\n\u8bad\u7ec3\u7b97\u6cd5\uff1a\u5728\u6570\u636e\u4e0a\uff0c\u5229\u7528 adaBoostTrainDS() \u51fd\u6570\u8bad\u7ec3\u51fa\u4e00\u7cfb\u5217\u7684\u5206\u7c7b\u5668\n\u6d4b\u8bd5\u7b97\u6cd5\uff1a\u6211\u4eec\u62e5\u6709\u4e24\u4e2a\u6570\u636e\u96c6\u3002\u5728\u4e0d\u91c7\u7528\u968f\u673a\u62bd\u6837\u7684\u65b9\u6cd5\u4e0b\uff0c\u6211\u4eec\u5c31\u4f1a\u5bf9 AdaBoost \u548c Logistic \u56de\u5f52\u7684\u7ed3\u679c\u8fdb\u884c\u5b8c\u5168\u5bf9\u7b49\u7684\u6bd4\u8f83\n\u4f7f\u7528\u7b97\u6cd5\uff1a\u89c2\u5bdf\u8be5\u4f8b\u5b50\u4e0a\u7684\u9519\u8bef\u7387\u3002\u4e0d\u8fc7\uff0c\u4e5f\u53ef\u4ee5\u6784\u5efa\u4e00\u4e2a Web \u7f51\u7ad9\uff0c\u8ba9\u9a6f\u9a6c\u5e08\u8f93\u5165\u9a6c\u7684\u75c7\u72b6\u7136\u540e\u9884\u6d4b\u9a6c\u662f\u5426\u4f1a\u6b7b\u53bb\n\n\n\n\n\n\n\u6536\u96c6\u6570\u636e\uff1a\u63d0\u4f9b\u7684\u6587\u672c\u6587\u4ef6\n\n\n\n\n\u8bad\u7ec3\u6570\u636e\uff1ahorseColicTraining.txt\n\n\u6d4b\u8bd5\u6570\u636e\uff1ahorseColicTest.txt\n\n\n2.000000    1.000000    38.500000   66.000000   28.000000   3.000000    3.000000    0.000000    2.000000    5.000000    4.000000    4.000000    0.000000    0.000000    0.000000    3.000000    5.000000    45.000000   8.400000    0.000000    0.000000    -1.000000\n1.000000    1.000000    39.200000   88.000000   20.000000   0.000000    0.000000    4.000000    1.000000    3.000000    4.000000    2.000000    0.000000    0.000000    0.000000    4.000000    2.000000    50.000000   85.000000   2.000000    2.000000    -1.000000\n2.000000    1.000000    38.300000   40.000000   24.000000   1.000000    1.000000    3.000000    1.000000    3.000000    3.000000    1.000000    0.000000    0.000000    0.000000    1.000000    1.000000    33.000000   6.700000    0.000000    0.000000    1.000000\n\n\n\n\n\n\n\u51c6\u5907\u6570\u636e\uff1a\u786e\u4fdd\u7c7b\u522b\u6807\u7b7e\u662f+1\u548c-1\uff0c\u800c\u975e1\u548c0\n\n\n\n\ndef\n \nloadDataSet\n(\nfileName\n):\n\n    \n# \u83b7\u53d6 feature \u7684\u6570\u91cf, \u4fbf\u4e8e\u83b7\u53d6\n\n    \nnumFeat\n \n=\n \nlen\n(\nopen\n(\nfileName\n)\n.\nreadline\n()\n.\nsplit\n(\n\\t\n))\n\n    \ndataArr\n \n=\n \n[]\n\n    \nlabelArr\n \n=\n \n[]\n\n    \nfr\n \n=\n \nopen\n(\nfileName\n)\n\n    \nfor\n \nline\n \nin\n \nfr\n.\nreadlines\n():\n\n        \nlineArr\n \n=\n \n[]\n\n        \ncurLine\n \n=\n \nline\n.\nstrip\n()\n.\nsplit\n(\n\\t\n)\n\n        \nfor\n \ni\n \nin\n \nrange\n(\nnumFeat\n-\n1\n):\n\n            \nlineArr\n.\nappend\n(\nfloat\n(\ncurLine\n[\ni\n]))\n\n        \ndataArr\n.\nappend\n(\nlineArr\n)\n\n        \nlabelArr\n.\nappend\n(\nfloat\n(\ncurLine\n[\n-\n1\n]))\n\n    \nreturn\n \ndataArr\n,\n \nlabelArr\n\n\n\n\n\n\n\n\u5206\u6790\u6570\u636e\uff1a\u7edf\u8ba1\u5206\u6790\n\n\n\n\n\u8fc7\u62df\u5408(overfitting, \u4e5f\u79f0\u4e3a\u8fc7\u5b66\u4e60)\n* \u53d1\u73b0\u6d4b\u8bd5\u9519\u8bef\u7387\u5728\u8fbe\u5230\u4e00\u4e2a\u6700\u5c0f\u503c\u4e4b\u540e\u6709\u5f00\u59cb\u4e0a\u5347\uff0c\u8fd9\u79cd\u73b0\u8c61\u79f0\u4e3a\u8fc7\u62df\u5408\u3002\n\n\n\n\n\n\n\u901a\u4fd7\u6765\u8bf4\uff1a\u5c31\u662f\u628a\u4e00\u4e9b\u566a\u97f3\u6570\u636e\u4e5f\u62df\u5408\u8fdb\u53bb\u7684\uff0c\u5982\u4e0b\u56fe\u3002\n\n\n\n\n\n\n\n\n\u8bad\u7ec3\u7b97\u6cd5\uff1a\u5728\u6570\u636e\u4e0a\uff0c\u5229\u7528 adaBoostTrainDS() \u51fd\u6570\u8bad\u7ec3\u51fa\u4e00\u7cfb\u5217\u7684\u5206\u7c7b\u5668\n\n\n\n\ndef\n \nadaBoostTrainDS\n(\ndataArr\n,\n \nlabelArr\n,\n \nnumIt\n=\n40\n):\n\n    \nadaBoostTrainDS(adaBoost\u8bad\u7ec3\u8fc7\u7a0b\u653e\u5927)\n\n\n    Args:\n\n\n        dataArr   \u7279\u5f81\u6807\u7b7e\u96c6\u5408\n\n\n        labelArr  \u5206\u7c7b\u6807\u7b7e\u96c6\u5408\n\n\n        numIt     \u5b9e\u4f8b\u6570\n\n\n    Returns:\n\n\n        weakClassArr  \u5f31\u5206\u7c7b\u5668\u7684\u96c6\u5408\n\n\n        aggClassEst   \u9884\u6d4b\u7684\u5206\u7c7b\u7ed3\u679c\u503c\n\n\n    \n\n    \nweakClassArr\n \n=\n \n[]\n\n    \nm\n \n=\n \nshape\n(\ndataArr\n)[\n0\n]\n\n    \n# \u521d\u59cb\u5316 D\uff0c\u8bbe\u7f6e\u6bcf\u4e2a\u6837\u672c\u7684\u6743\u91cd\u503c\uff0c\u5e73\u5747\u5206\u4e3am\u4efd\n\n    \nD\n \n=\n \nmat\n(\nones\n((\nm\n,\n \n1\n))\n/\nm\n)\n\n    \naggClassEst\n \n=\n \nmat\n(\nzeros\n((\nm\n,\n \n1\n)))\n\n    \nfor\n \ni\n \nin\n \nrange\n(\nnumIt\n):\n\n        \n# \u5f97\u5230\u51b3\u7b56\u6811\u7684\u6a21\u578b\n\n        \nbestStump\n,\n \nerror\n,\n \nclassEst\n \n=\n \nbuildStump\n(\ndataArr\n,\n \nlabelArr\n,\n \nD\n)\n\n\n        \n# alpha\u76ee\u7684\u4e3b\u8981\u662f\u8ba1\u7b97\u6bcf\u4e00\u4e2a\u5206\u7c7b\u5668\u5b9e\u4f8b\u7684\u6743\u91cd(\u7ec4\u5408\u5c31\u662f\u5206\u7c7b\u7ed3\u679c)\n\n        \n# \u8ba1\u7b97\u6bcf\u4e2a\u5206\u7c7b\u5668\u7684alpha\u6743\u91cd\u503c\n\n        \nalpha\n \n=\n \nfloat\n(\n0.5\n*\nlog\n((\n1.0\n-\nerror\n)\n/\nmax\n(\nerror\n,\n \n1e-16\n)))\n\n        \nbestStump\n[\nalpha\n]\n \n=\n \nalpha\n\n        \n# store Stump Params in Array\n\n        \nweakClassArr\n.\nappend\n(\nbestStump\n)\n\n\n        \nprint\n \nalpha=\n%s\n, classEst=\n%s\n, bestStump=\n%s\n, error=\n%s\n \n \n%\n \n(\nalpha\n,\n \nclassEst\n.\nT\n,\n \nbestStump\n,\n \nerror\n)\n\n        \n# \u5206\u7c7b\u6b63\u786e\uff1a\u4e58\u79ef\u4e3a1\uff0c\u4e0d\u4f1a\u5f71\u54cd\u7ed3\u679c\uff0c-1\u4e3b\u8981\u662f\u4e0b\u9762\u6c42e\u7684-alpha\u6b21\u65b9\n\n        \n# \u5206\u7c7b\u9519\u8bef\uff1a\u4e58\u79ef\u4e3a -1\uff0c\u7ed3\u679c\u4f1a\u53d7\u5f71\u54cd\uff0c\u6240\u4ee5\u4e5f\u4e58\u4ee5 -1\n\n        \nexpon\n \n=\n \nmultiply\n(\n-\n1\n*\nalpha\n*\nmat\n(\nlabelArr\n)\n.\nT\n,\n \nclassEst\n)\n\n        \nprint\n \n(-1\u53d6\u53cd)\u9884\u6d4b\u503cexpon=\n,\n \nexpon\n.\nT\n\n        \n# \u8ba1\u7b97e\u7684expon\u6b21\u65b9\uff0c\u7136\u540e\u8ba1\u7b97\u5f97\u5230\u4e00\u4e2a\u7efc\u5408\u7684\u6982\u7387\u7684\u503c\n\n        \n# \u7ed3\u679c\u53d1\u73b0\uff1a \u5224\u65ad\u9519\u8bef\u7684\u6837\u672c\uff0cD\u5bf9\u4e8e\u7684\u6837\u672c\u6743\u91cd\u503c\u4f1a\u53d8\u5927\u3002\n\n        \nD\n \n=\n \nmultiply\n(\nD\n,\n \nexp\n(\nexpon\n))\n\n        \nD\n \n=\n \nD\n/\nD\n.\nsum\n()\n\n\n        \n# \u9884\u6d4b\u7684\u5206\u7c7b\u7ed3\u679c\u503c\uff0c\u5728\u4e0a\u4e00\u8f6e\u7ed3\u679c\u7684\u57fa\u7840\u4e0a\uff0c\u8fdb\u884c\u52a0\u548c\u64cd\u4f5c\n\n        \nprint\n \n\u5f53\u524d\u7684\u5206\u7c7b\u7ed3\u679c\uff1a\n,\n \nalpha\n*\nclassEst\n.\nT\n\n        \naggClassEst\n \n+=\n \nalpha\n*\nclassEst\n\n        \nprint\n \n\u53e0\u52a0\u540e\u7684\u5206\u7c7b\u7ed3\u679caggClassEst: \n,\n \naggClassEst\n.\nT\n\n        \n# sign \u5224\u65ad\u6b63\u4e3a1\uff0c 0\u4e3a0\uff0c \u8d1f\u4e3a-1\uff0c\u901a\u8fc7\u6700\u7ec8\u52a0\u548c\u7684\u6743\u91cd\u503c\uff0c\u5224\u65ad\u7b26\u53f7\u3002\n\n        \n# \u7ed3\u679c\u4e3a\uff1a\u9519\u8bef\u7684\u6837\u672c\u6807\u7b7e\u96c6\u5408\uff0c\u56e0\u4e3a\u662f !=,\u90a3\u4e48\u7ed3\u679c\u5c31\u662f0 \u6b63, 1 \u8d1f\n\n        \naggErrors\n \n=\n \nmultiply\n(\nsign\n(\naggClassEst\n)\n \n!=\n \nmat\n(\nlabelArr\n)\n.\nT\n,\n \nones\n((\nm\n,\n \n1\n)))\n\n        \nerrorRate\n \n=\n \naggErrors\n.\nsum\n()\n/\nm\n\n        \n# print \ntotal error=%s \n % (errorRate)\n\n        \nif\n \nerrorRate\n \n==\n \n0.0\n:\n\n            \nbreak\n\n    \nreturn\n \nweakClassArr\n,\n \naggClassEst\n\n\n\n\n\n\u53d1\u73b0\uff1a\nalpha \uff08\u6a21\u578b\u6743\u91cd\uff09\u76ee\u7684\u4e3b\u8981\u662f\u8ba1\u7b97\u6bcf\u4e00\u4e2a\u5206\u7c7b\u5668\u5b9e\u4f8b\u7684\u6743\u91cd(\u52a0\u548c\u5c31\u662f\u5206\u7c7b\u7ed3\u679c)\n  \u5206\u7c7b\u7684\u6743\u91cd\u503c\uff1a\u6700\u5927\u7684\u503c= alpha \u7684\u52a0\u548c\uff0c\u6700\u5c0f\u503c=-\u6700\u5927\u503c\nD \uff08\u6837\u672c\u6743\u91cd\uff09\u7684\u76ee\u7684\u662f\u4e3a\u4e86\u8ba1\u7b97\u9519\u8bef\u6982\u7387\uff1a weightedError = D.T*errArr\uff0c\u6c42\u6700\u4f73\u5206\u7c7b\u5668\n  \u6837\u672c\u7684\u6743\u91cd\u503c\uff1a\u5982\u679c\u4e00\u4e2a\u503c\u8bef\u5224\u7684\u51e0\u7387\u8d8a\u5c0f\uff0c\u90a3\u4e48 D \u7684\u6837\u672c\u6743\u91cd\u8d8a\u5c0f\n\n\n\n\n\n\n\n\n\u6d4b\u8bd5\u7b97\u6cd5\uff1a\u6211\u4eec\u62e5\u6709\u4e24\u4e2a\u6570\u636e\u96c6\u3002\u5728\u4e0d\u91c7\u7528\u968f\u673a\u62bd\u6837\u7684\u65b9\u6cd5\u4e0b\uff0c\u6211\u4eec\u5c31\u4f1a\u5bf9 AdaBoost \u548c Logistic \u56de\u5f52\u7684\u7ed3\u679c\u8fdb\u884c\u5b8c\u5168\u5bf9\u7b49\u7684\u6bd4\u8f83\u3002\n\n\n\n\ndef\n \nadaClassify\n(\ndatToClass\n,\n \nclassifierArr\n):\n\n    \nadaClassify(ada\u5206\u7c7b\u6d4b\u8bd5)\n\n\n    Args:\n\n\n        datToClass     \u591a\u4e2a\u5f85\u5206\u7c7b\u7684\u6837\u4f8b\n\n\n        classifierArr  \u5f31\u5206\u7c7b\u5668\u7684\u96c6\u5408\n\n\n    Returns:\n\n\n        sign(aggClassEst) \u5206\u7c7b\u7ed3\u679c\n\n\n    \n\n    \n# do stuff similar to last aggClassEst in adaBoostTrainDS\n\n    \ndataMat\n \n=\n \nmat\n(\ndatToClass\n)\n\n    \nm\n \n=\n \nshape\n(\ndataMat\n)[\n0\n]\n\n    \naggClassEst\n \n=\n \nmat\n(\nzeros\n((\nm\n,\n \n1\n)))\n\n\n    \n# \u5faa\u73af \u591a\u4e2a\u5206\u7c7b\u5668\n\n    \nfor\n \ni\n \nin\n \nrange\n(\nlen\n(\nclassifierArr\n)):\n\n        \n# \u524d\u63d0\uff1a \u6211\u4eec\u5df2\u7ecf\u77e5\u9053\u4e86\u6700\u4f73\u7684\u5206\u7c7b\u5668\u7684\u5b9e\u4f8b\n\n        \n# \u901a\u8fc7\u5206\u7c7b\u5668\u6765\u6838\u7b97\u6bcf\u4e00\u6b21\u7684\u5206\u7c7b\u7ed3\u679c\uff0c\u7136\u540e\u901a\u8fc7alpha*\u6bcf\u4e00\u6b21\u7684\u7ed3\u679c \u5f97\u5230\u6700\u540e\u7684\u6743\u91cd\u52a0\u548c\u7684\u503c\u3002\n\n        \nclassEst\n \n=\n \nstumpClassify\n(\ndataMat\n,\n \nclassifierArr\n[\ni\n][\ndim\n],\n \nclassifierArr\n[\ni\n][\nthresh\n],\n \nclassifierArr\n[\ni\n][\nineq\n])\n\n        \naggClassEst\n \n+=\n \nclassifierArr\n[\ni\n][\nalpha\n]\n*\nclassEst\n\n    \nreturn\n \nsign\n(\naggClassEst\n)\n\n\n\n\n\n\n\n\u4f7f\u7528\u7b97\u6cd5\uff1a\u89c2\u5bdf\u8be5\u4f8b\u5b50\u4e0a\u7684\u9519\u8bef\u7387\u3002\u4e0d\u8fc7\uff0c\u4e5f\u53ef\u4ee5\u6784\u5efa\u4e00\u4e2a Web \u7f51\u7ad9\uff0c\u8ba9\u9a6f\u9a6c\u5e08\u8f93\u5165\u9a6c\u7684\u75c7\u72b6\u7136\u540e\u9884\u6d4b\u9a6c\u662f\u5426\u4f1a\u6b7b\u53bb\u3002\n\n\n\n\n# \u9a6c\u759d\u75c5\u6570\u636e\u96c6\n\n\n# \u8bad\u7ec3\u96c6\u5408\n\n\ndataArr\n,\n \nlabelArr\n \n=\n \nloadDataSet\n(\ninput/7.AdaBoost/horseColicTraining2.txt\n)\n\n\nweakClassArr\n,\n \naggClassEst\n \n=\n \nadaBoostTrainDS\n(\ndataArr\n,\n \nlabelArr\n,\n \n40\n)\n\n\nprint\n \nweakClassArr\n,\n \n\\n\n-----\n\\n\n,\n \naggClassEst\n.\nT\n\n\n# \u8ba1\u7b97ROC\u4e0b\u9762\u7684AUC\u7684\u9762\u79ef\u5927\u5c0f\n\n\nplotROC\n(\naggClassEst\n.\nT\n,\n \nlabelArr\n)\n\n\n# \u6d4b\u8bd5\u96c6\u5408\n\n\ndataArrTest\n,\n \nlabelArrTest\n \n=\n \nloadDataSet\n(\ninput/7.AdaBoost/horseColicTest2.txt\n)\n\n\nm\n \n=\n \nshape\n(\ndataArrTest\n)[\n0\n]\n\n\npredicting10\n \n=\n \nadaClassify\n(\ndataArrTest\n,\n \nweakClassArr\n)\n\n\nerrArr\n \n=\n \nmat\n(\nones\n((\nm\n,\n \n1\n)))\n\n\n# \u6d4b\u8bd5\uff1a\u8ba1\u7b97\u603b\u6837\u672c\u6570\uff0c\u9519\u8bef\u6837\u672c\u6570\uff0c\u9519\u8bef\u7387\n\n\nprint\n \nm\n,\n \nerrArr\n[\npredicting10\n \n!=\n \nmat\n(\nlabelArrTest\n)\n.\nT\n]\n.\nsum\n(),\n \nerrArr\n[\npredicting10\n \n!=\n \nmat\n(\nlabelArrTest\n)\n.\nT\n]\n.\nsum\n()\n/\nm\n\n\n\n\n\n\u5b8c\u6574\u4ee3\u7801\u5730\u5740\n: \nhttps://github.com/apachecn/MachineLearning/blob/master/src/python/7.AdaBoost/adaboost.py\n\n\n\u8981\u70b9\u8865\u5145\n\n\n\n\n\u975e\u5747\u8861\u73b0\u8c61\uff1a\n\n\n\n\n\u5728\u5206\u7c7b\u5668\u8bad\u7ec3\u65f6\uff0c\u6b63\u4f8b\u6570\u76ee\u548c\u53cd\u4f8b\u6570\u76ee\u4e0d\u76f8\u7b49\uff08\u76f8\u5dee\u5f88\u5927\uff09\n\n\n\n\n\u5224\u65ad\u9a6c\u662f\u5426\u80fd\u7ee7\u7eed\u751f\u5b58(\u4e0d\u53ef\u8bef\u6740)\n\n\n\u8fc7\u6ee4\u5783\u573e\u90ae\u4ef6(\u4e0d\u53ef\u6f0f\u5224)\n\n\n\u4e0d\u80fd\u653e\u8fc7\u4f20\u67d3\u75c5\u7684\u4eba\n\n\n\u4e0d\u80fd\u968f\u4fbf\u8ba4\u4e3a\u522b\u4eba\u72af\u7f6a\n\n\n\n\n\n\nROC \u8bc4\u4f30\u65b9\u6cd5\n\n\n\n\n\n\nROC \u66f2\u7ebf: \u6700\u4f73\u7684\u5206\u7c7b\u5668\u5e94\u8be5\u5c3d\u53ef\u80fd\u5730\u5904\u4e8e\u5de6\u4e0a\u89d2\n\n\n\n\n\n\n\n\n\u5bf9\u4e0d\u540c\u7684 ROC \u66f2\u7ebf\u8fdb\u884c\u6bd4\u8f83\u7684\u4e00\u4e2a\u6307\u6807\u662f\u66f2\u7ebf\u4e0b\u7684\u9762\u79ef(Area Unser the Curve, AUC). \n\n\nAUC \u7ed9\u51fa\u7684\u662f\u5206\u7c7b\u5668\u7684\u5e73\u5747\u6027\u80fd\u503c\uff0c\u5f53\u7136\u5b83\u5e76\u4e0d\u80fd\u5b8c\u5168\u4ee3\u66ff\u5bf9\u6574\u6761\u66f2\u7ebf\u7684\u89c2\u5bdf\u3002\n\n\n\u4e00\u4e2a\u5b8c\u7f8e\u5206\u7c7b\u5668\u7684 AUC \u4e3a1\uff0c\u800c\u968f\u673a\u731c\u6d4b\u7684 AUC \u5219\u4e3a0.5\u3002\n\n\n\n\n\n\n\u4ee3\u4ef7\u51fd\u6570\n\n\n\n\n\n\n\u57fa\u4e8e\u4ee3\u4ef7\u51fd\u6570\u7684\u5206\u7c7b\u5668\u51b3\u7b56\u63a7\u5236\uff1a\nTP*(-5)+FN*1+FP*50+TN*0\n\n\n\n\n\n\n\n\n\u62bd\u6837\n\n\n\n\n\n\n\u6b20\u62bd\u6837(undersampling)\u6216\u8005\u8fc7\u62bd\u6837(oversampling)\n\n\n\u6b20\u62bd\u6837: \u610f\u5473\u7740\u5220\u9664\u6837\u4f8b\n\n\n\u8fc7\u62bd\u6837: \u610f\u5473\u7740\u590d\u5236\u6837\u4f8b(\u91cd\u590d\u4f7f\u7528)\n\n\n\n\n\n\n\n\n\n\n\n\n\u4f5c\u8005\uff1a\n\u7247\u523b\n\n\nGitHub\u5730\u5740\n: \nhttps://github.com/apachecn/MachineLearning\n\n\n\u7248\u6743\u58f0\u660e\uff1a\u6b22\u8fce\u8f6c\u8f7d\u5b66\u4e60 =\n \u8bf7\u6807\u6ce8\u4fe1\u606f\u6765\u6e90\u4e8e \nApacheCN", 
            "title": "7.\u96c6\u6210\u65b9\u6cd5-\u968f\u673a\u68ee\u6797\u548cAdaBoost"
        }, 
        {
            "location": "/\u4e66\u7c4d/\u673a\u5668\u5b66\u4e60\u5b9e\u6218/07.\u96c6\u6210\u65b9\u6cd5-\u968f\u673a\u68ee\u6797\u548cAdaBoost/#7-ensemble-method", 
            "text": "", 
            "title": "\u7b2c7\u7ae0 \u96c6\u6210\u65b9\u6cd5 ensemble method"
        }, 
        {
            "location": "/\u4e66\u7c4d/\u673a\u5668\u5b66\u4e60\u5b9e\u6218/07.\u96c6\u6210\u65b9\u6cd5-\u968f\u673a\u68ee\u6797\u548cAdaBoost/#ensemble-method-meta-algorithm", 
            "text": "\u6982\u5ff5\uff1a\u662f\u5bf9\u5176\u4ed6\u7b97\u6cd5\u8fdb\u884c\u7ec4\u5408\u7684\u4e00\u79cd\u5f62\u5f0f\u3002   \u901a\u4fd7\u6765\u8bf4\uff1a \u5f53\u505a\u91cd\u8981\u51b3\u5b9a\u65f6\uff0c\u5927\u5bb6\u53ef\u80fd\u90fd\u4f1a\u8003\u8651\u5438\u53d6\u591a\u4e2a\u4e13\u5bb6\u800c\u4e0d\u53ea\u662f\u4e00\u4e2a\u4eba\u7684\u610f\u89c1\u3002\n    \u673a\u5668\u5b66\u4e60\u5904\u7406\u95ee\u9898\u65f6\u53c8\u4f55\u5c1d\u4e0d\u662f\u5982\u6b64\uff1f \u8fd9\u5c31\u662f\u96c6\u6210\u65b9\u6cd5\u80cc\u540e\u7684\u601d\u60f3\u3002    \u96c6\u6210\u65b9\u6cd5\uff1a     \u6295\u7968\u9009\u4e3e(bagging: \u81ea\u4e3e\u6c47\u805a\u6cd5 bootstrap aggregating): \u662f\u57fa\u4e8e\u6570\u636e\u968f\u673a\u91cd\u62bd\u6837\u5206\u7c7b\u5668\u6784\u9020\u7684\u65b9\u6cd5  \u518d\u5b66\u4e60(boosting): \u662f\u57fa\u4e8e\u6240\u6709\u5206\u7c7b\u5668\u7684\u52a0\u6743\u6c42\u548c\u7684\u65b9\u6cd5", 
            "title": "\u96c6\u6210\u65b9\u6cd5: ensemble method\uff08\u5143\u7b97\u6cd5: meta algorithm\uff09 \u6982\u8ff0"
        }, 
        {
            "location": "/\u4e66\u7c4d/\u673a\u5668\u5b66\u4e60\u5b9e\u6218/07.\u96c6\u6210\u65b9\u6cd5-\u968f\u673a\u68ee\u6797\u548cAdaBoost/#_1", 
            "text": "\u76ee\u524d bagging \u65b9\u6cd5\u6700\u6d41\u884c\u7684\u7248\u672c\u662f: \u968f\u673a\u68ee\u6797(random forest) \n\u9009\u7537\u53cb\uff1a\u7f8e\u5973\u9009\u62e9\u62e9\u5076\u5bf9\u8c61\u7684\u65f6\u5019\uff0c\u4f1a\u95ee\u51e0\u4e2a\u95fa\u871c\u7684\u5efa\u8bae\uff0c\u6700\u540e\u9009\u62e9\u4e00\u4e2a\u7efc\u5408\u5f97\u5206\u6700\u9ad8\u7684\u4e00\u4e2a\u4f5c\u4e3a\u7537\u670b\u53cb  \u76ee\u524d boosting \u65b9\u6cd5\u6700\u6d41\u884c\u7684\u7248\u672c\u662f: AdaBoost \n\u8ffd\u5973\u53cb\uff1a3\u4e2a\u5e05\u54e5\u8ffd\u540c\u4e00\u4e2a\u7f8e\u5973\uff0c\u7b2c1\u4e2a\u5e05\u54e5\u5931\u8d25- (\u4f20\u6388\u7ecf\u9a8c\uff1a\u59d3\u540d\u3001\u5bb6\u5ead\u60c5\u51b5) \u7b2c2\u4e2a\u5e05\u54e5\u5931\u8d25- (\u4f20\u6388\u7ecf\u9a8c\uff1a\u5174\u8da3\u7231\u597d\u3001\u6027\u683c\u7279\u70b9) \u7b2c3\u4e2a\u5e05\u54e5\u6210\u529f   bagging \u548c boosting \u533a\u522b\u662f\u4ec0\u4e48\uff1f    bagging \u662f\u4e00\u79cd\u4e0e boosting \u5f88\u7c7b\u4f3c\u7684\u6280\u672f, \u6240\u4f7f\u7528\u7684\u591a\u4e2a\u5206\u7c7b\u5668\u7684\u7c7b\u578b\uff08\u6570\u636e\u91cf\u548c\u7279\u5f81\u91cf\uff09\u90fd\u662f\u4e00\u81f4\u7684\u3002  bagging \u662f\u7531\u4e0d\u540c\u7684\u5206\u7c7b\u5668\uff081.\u6570\u636e\u968f\u673a\u5316 2.\u7279\u5f81\u968f\u673a\u5316\uff09\u7ecf\u8fc7\u8bad\u7ec3\uff0c\u7efc\u5408\u5f97\u51fa\u7684\u51fa\u73b0\u6700\u591a\u5206\u7c7b\u7ed3\u679c\uff1bboosting \u662f\u901a\u8fc7\u8c03\u6574\u5df2\u6709\u5206\u7c7b\u5668\u9519\u5206\u7684\u90a3\u4e9b\u6570\u636e\u6765\u83b7\u5f97\u65b0\u7684\u5206\u7c7b\u5668\uff0c\u5f97\u51fa\u76ee\u524d\u6700\u4f18\u7684\u7ed3\u679c\u3002  bagging \u4e2d\u7684\u5206\u7c7b\u5668\u6743\u91cd\u662f\u76f8\u7b49\u7684\uff1b\u800c boosting \u4e2d\u7684\u5206\u7c7b\u5668\u52a0\u6743\u6c42\u548c\uff0c\u6240\u4ee5\u6743\u91cd\u5e76\u4e0d\u76f8\u7b49\uff0c\u6bcf\u4e2a\u6743\u91cd\u4ee3\u8868\u7684\u662f\u5176\u5bf9\u5e94\u5206\u7c7b\u5668\u5728\u4e0a\u4e00\u8f6e\u8fed\u4ee3\u4e2d\u7684\u6210\u529f\u5ea6\u3002", 
            "title": "\u96c6\u6210\u65b9\u6cd5 \u573a\u666f"
        }, 
        {
            "location": "/\u4e66\u7c4d/\u673a\u5668\u5b66\u4e60\u5b9e\u6218/07.\u96c6\u6210\u65b9\u6cd5-\u968f\u673a\u68ee\u6797\u548cAdaBoost/#_2", 
            "text": "", 
            "title": "\u968f\u673a\u68ee\u6797"
        }, 
        {
            "location": "/\u4e66\u7c4d/\u673a\u5668\u5b66\u4e60\u5b9e\u6218/07.\u96c6\u6210\u65b9\u6cd5-\u968f\u673a\u68ee\u6797\u548cAdaBoost/#_3", 
            "text": "\u968f\u673a\u68ee\u6797\u6307\u7684\u662f\u5229\u7528\u591a\u68f5\u6811\u5bf9\u6837\u672c\u8fdb\u884c\u8bad\u7ec3\u5e76\u9884\u6d4b\u7684\u4e00\u79cd\u5206\u7c7b\u5668\u3002  \u51b3\u7b56\u6811\u76f8\u5f53\u4e8e\u4e00\u4e2a\u5927\u5e08\uff0c\u901a\u8fc7\u81ea\u5df1\u5728\u6570\u636e\u96c6\u4e2d\u5b66\u5230\u7684\u77e5\u8bc6\u7528\u4e8e\u65b0\u6570\u636e\u7684\u5206\u7c7b\u3002\u4f46\u662f\u4fd7\u8bdd\u8bf4\u5f97\u597d\uff0c\u4e00\u4e2a\u8bf8\u845b\u4eae\uff0c\u73a9\u4e0d\u8fc7\u4e09\u4e2a\u81ed\u76ae\u5320\u3002\u968f\u673a\u68ee\u6797\u5c31\u662f\u5e0c\u671b\u6784\u5efa\u591a\u4e2a\u81ed\u76ae\u5320\uff0c\u5e0c\u671b\u6700\u7ec8\u7684\u5206\u7c7b\u6548\u679c\u80fd\u591f\u8d85\u8fc7\u5355\u4e2a\u5927\u5e08\u7684\u4e00\u79cd\u7b97\u6cd5\u3002", 
            "title": "\u968f\u673a\u68ee\u6797 \u6982\u8ff0"
        }, 
        {
            "location": "/\u4e66\u7c4d/\u673a\u5668\u5b66\u4e60\u5b9e\u6218/07.\u96c6\u6210\u65b9\u6cd5-\u968f\u673a\u68ee\u6797\u548cAdaBoost/#_4", 
            "text": "\u90a3\u968f\u673a\u68ee\u6797\u5177\u4f53\u5982\u4f55\u6784\u5efa\u5462\uff1f \n\u6709\u4e24\u4e2a\u65b9\u9762\uff1a \n1. \u6570\u636e\u7684\u968f\u673a\u6027\u5316  \n2. \u5f85\u9009\u7279\u5f81\u7684\u968f\u673a\u5316  \u4f7f\u5f97\u968f\u673a\u68ee\u6797\u4e2d\u7684\u51b3\u7b56\u6811\u90fd\u80fd\u591f\u5f7c\u6b64\u4e0d\u540c\uff0c\u63d0\u5347\u7cfb\u7edf\u7684\u591a\u6837\u6027\uff0c\u4ece\u800c\u63d0\u5347\u5206\u7c7b\u6027\u80fd\u3002   \u6570\u636e\u7684\u968f\u673a\u5316\uff1a\u4f7f\u5f97\u968f\u673a\u68ee\u6797\u4e2d\u7684\u51b3\u7b56\u6811\u66f4\u666e\u904d\u5316\u4e00\u70b9\uff0c\u9002\u5408\u66f4\u591a\u7684\u573a\u666f\u3002   \uff08\u6709\u653e\u56de\u7684\u51c6\u786e\u7387\u5728\uff1a70% \u4ee5\u4e0a\uff0c \u65e0\u653e\u56de\u7684\u51c6\u786e\u7387\u5728\uff1a60% \u4ee5\u4e0a\uff09\n1. \u91c7\u53d6\u6709\u653e\u56de\u7684\u62bd\u6837\u65b9\u5f0f \u6784\u9020\u5b50\u6570\u636e\u96c6\uff0c\u4fdd\u8bc1\u4e0d\u540c\u5b50\u96c6\u4e4b\u95f4\u7684\u6570\u91cf\u7ea7\u4e00\u6837\uff08\u4e0d\u540c\u5b50\u96c6\uff0f\u540c\u4e00\u5b50\u96c6 \u4e4b\u95f4\u7684\u5143\u7d20\u53ef\u4ee5\u91cd\u590d\uff09\n2. \u5229\u7528\u5b50\u6570\u636e\u96c6\u6765\u6784\u5efa\u5b50\u51b3\u7b56\u6811\uff0c\u5c06\u8fd9\u4e2a\u6570\u636e\u653e\u5230\u6bcf\u4e2a\u5b50\u51b3\u7b56\u6811\u4e2d\uff0c\u6bcf\u4e2a\u5b50\u51b3\u7b56\u6811\u8f93\u51fa\u4e00\u4e2a\u7ed3\u679c\u3002\n3. \u7136\u540e\u7edf\u8ba1\u5b50\u51b3\u7b56\u6811\u7684\u6295\u7968\u7ed3\u679c\uff0c\u5f97\u5230\u6700\u7ec8\u7684\u5206\u7c7b \u5c31\u662f \u968f\u673a\u68ee\u6797\u7684\u8f93\u51fa\u7ed3\u679c\u3002\n4. \u5982\u4e0b\u56fe\uff0c\u5047\u8bbe\u968f\u673a\u68ee\u6797\u4e2d\u67093\u68f5\u5b50\u51b3\u7b56\u6811\uff0c2\u68f5\u5b50\u6811\u7684\u5206\u7c7b\u7ed3\u679c\u662fA\u7c7b\uff0c1\u68f5\u5b50\u6811\u7684\u5206\u7c7b\u7ed3\u679c\u662fB\u7c7b\uff0c\u90a3\u4e48\u968f\u673a\u68ee\u6797\u7684\u5206\u7c7b\u7ed3\u679c\u5c31\u662fA\u7c7b\u3002    \u5f85\u9009\u7279\u5f81\u7684\u968f\u673a\u5316    \u5b50\u6811\u4ece\u6240\u6709\u7684\u5f85\u9009\u7279\u5f81\u4e2d\u968f\u673a\u9009\u53d6\u4e00\u5b9a\u7684\u7279\u5f81\u3002  \u5728\u9009\u53d6\u7684\u7279\u5f81\u4e2d\u9009\u53d6\u6700\u4f18\u7684\u7279\u5f81\u3002   \u4e0b\u56fe\u4e2d\uff0c\u84dd\u8272\u7684\u65b9\u5757\u4ee3\u8868\u6240\u6709\u53ef\u4ee5\u88ab\u9009\u62e9\u7684\u7279\u5f81\uff0c\u4e5f\u5c31\u662f\u76ee\u524d\u7684\u5f85\u9009\u7279\u5f81\uff1b\u9ec4\u8272\u7684\u65b9\u5757\u662f\u5206\u88c2\u7279\u5f81\u3002 \n\u5de6\u8fb9\u662f\u4e00\u68f5\u51b3\u7b56\u6811\u7684\u7279\u5f81\u9009\u53d6\u8fc7\u7a0b\uff0c\u901a\u8fc7\u5728\u5f85\u9009\u7279\u5f81\u4e2d\u9009\u53d6\u6700\u4f18\u7684\u5206\u88c2\u7279\u5f81\uff08\u522b\u5fd8\u4e86\u524d\u6587\u63d0\u5230\u7684ID3\u7b97\u6cd5\uff0cC4.5\u7b97\u6cd5\uff0cCART\u7b97\u6cd5\u7b49\u7b49\uff09\uff0c\u5b8c\u6210\u5206\u88c2\u3002 \n\u53f3\u8fb9\u662f\u4e00\u4e2a\u968f\u673a\u68ee\u6797\u4e2d\u7684\u5b50\u6811\u7684\u7279\u5f81\u9009\u53d6\u8fc7\u7a0b\u3002    \u968f\u673a\u68ee\u6797 \u5f00\u53d1\u6d41\u7a0b   \u6536\u96c6\u6570\u636e\uff1a\u4efb\u4f55\u65b9\u6cd5\n\u51c6\u5907\u6570\u636e\uff1a\u8f6c\u6362\u6837\u672c\u96c6\n\u5206\u6790\u6570\u636e\uff1a\u4efb\u4f55\u65b9\u6cd5\n\u8bad\u7ec3\u7b97\u6cd5\uff1a\u901a\u8fc7\u6570\u636e\u968f\u673a\u5316\u548c\u7279\u5f81\u968f\u673a\u5316\uff0c\u8fdb\u884c\u591a\u5b9e\u4f8b\u7684\u5206\u7c7b\u8bc4\u4f30\n\u6d4b\u8bd5\u7b97\u6cd5\uff1a\u8ba1\u7b97\u9519\u8bef\u7387\n\u4f7f\u7528\u7b97\u6cd5\uff1a\u8f93\u5165\u6837\u672c\u6570\u636e\uff0c\u7136\u540e\u8fd0\u884c \u968f\u673a\u68ee\u6797 \u7b97\u6cd5\u5224\u65ad\u8f93\u5165\u6570\u636e\u5206\u7c7b\u5c5e\u4e8e\u54ea\u4e2a\u5206\u7c7b\uff0c\u6700\u540e\u5bf9\u8ba1\u7b97\u51fa\u7684\u5206\u7c7b\u6267\u884c\u540e\u7eed\u5904\u7406   \u968f\u673a\u68ee\u6797 \u7b97\u6cd5\u7279\u70b9   \u4f18\u70b9\uff1a\u51e0\u4e4e\u4e0d\u9700\u8981\u8f93\u5165\u51c6\u5907\u3001\u53ef\u5b9e\u73b0\u9690\u5f0f\u7279\u5f81\u9009\u62e9\u3001\u8bad\u7ec3\u901f\u5ea6\u975e\u5e38\u5feb\u3001\u5176\u4ed6\u6a21\u578b\u5f88\u96be\u8d85\u8d8a\u3001\u5f88\u96be\u5efa\u7acb\u4e00\u4e2a\u7cdf\u7cd5\u7684\u968f\u673a\u68ee\u6797\u6a21\u578b\u3001\u5927\u91cf\u4f18\u79c0\u3001\u514d\u8d39\u4ee5\u53ca\u5f00\u6e90\u7684\u5b9e\u73b0\u3002\n\u7f3a\u70b9\uff1a\u52a3\u52bf\u5728\u4e8e\u6a21\u578b\u5927\u5c0f\u3001\u662f\u4e2a\u5f88\u96be\u53bb\u89e3\u91ca\u7684\u9ed1\u76d2\u5b50\u3002\n\u9002\u7528\u6570\u636e\u8303\u56f4\uff1a\u6570\u503c\u578b\u548c\u6807\u79f0\u578b", 
            "title": "\u968f\u673a\u68ee\u6797 \u539f\u7406"
        }, 
        {
            "location": "/\u4e66\u7c4d/\u673a\u5668\u5b66\u4e60\u5b9e\u6218/07.\u96c6\u6210\u65b9\u6cd5-\u968f\u673a\u68ee\u6797\u548cAdaBoost/#_5", 
            "text": "", 
            "title": "\u9879\u76ee\u6848\u4f8b: \u58f0\u7eb3\u4fe1\u53f7\u5206\u7c7b"
        }, 
        {
            "location": "/\u4e66\u7c4d/\u673a\u5668\u5b66\u4e60\u5b9e\u6218/07.\u96c6\u6210\u65b9\u6cd5-\u968f\u673a\u68ee\u6797\u548cAdaBoost/#_6", 
            "text": "\u8fd9\u662f Gorman \u548c Sejnowski \u5728\u7814\u7a76\u4f7f\u7528\u795e\u7ecf\u7f51\u7edc\u7684\u58f0\u7eb3\u4fe1\u53f7\u5206\u7c7b\u4e2d\u4f7f\u7528\u7684\u6570\u636e\u96c6\u3002\u4efb\u52a1\u662f\u8bad\u7ec3\u4e00\u4e2a\u6a21\u578b\u6765\u533a\u5206\u58f0\u7eb3\u4fe1\u53f7\u3002", 
            "title": "\u9879\u76ee\u6982\u8ff0"
        }, 
        {
            "location": "/\u4e66\u7c4d/\u673a\u5668\u5b66\u4e60\u5b9e\u6218/07.\u96c6\u6210\u65b9\u6cd5-\u968f\u673a\u68ee\u6797\u548cAdaBoost/#_7", 
            "text": "\u6536\u96c6\u6570\u636e\uff1a\u63d0\u4f9b\u7684\u6587\u672c\u6587\u4ef6\n\u51c6\u5907\u6570\u636e\uff1a\u8f6c\u6362\u6837\u672c\u96c6\n\u5206\u6790\u6570\u636e\uff1a\u624b\u5de5\u68c0\u67e5\u6570\u636e\n\u8bad\u7ec3\u7b97\u6cd5\uff1a\u5728\u6570\u636e\u4e0a\uff0c\u5229\u7528 random_forest() \u51fd\u6570\u8fdb\u884c\u4f18\u5316\u8bc4\u4f30\uff0c\u8fd4\u56de\u6a21\u578b\u7684\u7efc\u5408\u5206\u7c7b\u7ed3\u679c\n\u6d4b\u8bd5\u7b97\u6cd5\uff1a\u5728\u91c7\u7528\u81ea\u5b9a\u4e49 n_folds \u4efd\u968f\u673a\u91cd\u62bd\u6837 \u8fdb\u884c\u6d4b\u8bd5\u8bc4\u4f30\uff0c\u5f97\u51fa\u7efc\u5408\u7684\u9884\u6d4b\u8bc4\u5206\n\u4f7f\u7528\u7b97\u6cd5\uff1a\u82e5\u4f60\u611f\u5174\u8da3\u53ef\u4ee5\u6784\u5efa\u5b8c\u6574\u7684\u5e94\u7528\u7a0b\u5e8f\uff0c\u4ece\u6848\u4f8b\u8fdb\u884c\u5c01\u88c5\uff0c\u4e5f\u53ef\u4ee5\u53c2\u8003\u6211\u4eec\u7684\u4ee3\u7801   \u6536\u96c6\u6570\u636e\uff1a\u63d0\u4f9b\u7684\u6587\u672c\u6587\u4ef6   \u6837\u672c\u6570\u636e\uff1asonar-all-data.txt  0.02,0.0371,0.0428,0.0207,0.0954,0.0986,0.1539,0.1601,0.3109,0.2111,0.1609,0.1582,0.2238,0.0645,0.066,0.2273,0.31,0.2999,0.5078,0.4797,0.5783,0.5071,0.4328,0.555,0.6711,0.6415,0.7104,0.808,0.6791,0.3857,0.1307,0.2604,0.5121,0.7547,0.8537,0.8507,0.6692,0.6097,0.4943,0.2744,0.051,0.2834,0.2825,0.4256,0.2641,0.1386,0.1051,0.1343,0.0383,0.0324,0.0232,0.0027,0.0065,0.0159,0.0072,0.0167,0.018,0.0084,0.009,0.0032,R\n0.0453,0.0523,0.0843,0.0689,0.1183,0.2583,0.2156,0.3481,0.3337,0.2872,0.4918,0.6552,0.6919,0.7797,0.7464,0.9444,1,0.8874,0.8024,0.7818,0.5212,0.4052,0.3957,0.3914,0.325,0.32,0.3271,0.2767,0.4423,0.2028,0.3788,0.2947,0.1984,0.2341,0.1306,0.4182,0.3835,0.1057,0.184,0.197,0.1674,0.0583,0.1401,0.1628,0.0621,0.0203,0.053,0.0742,0.0409,0.0061,0.0125,0.0084,0.0089,0.0048,0.0094,0.0191,0.014,0.0049,0.0052,0.0044,R\n0.0262,0.0582,0.1099,0.1083,0.0974,0.228,0.2431,0.3771,0.5598,0.6194,0.6333,0.706,0.5544,0.532,0.6479,0.6931,0.6759,0.7551,0.8929,0.8619,0.7974,0.6737,0.4293,0.3648,0.5331,0.2413,0.507,0.8533,0.6036,0.8514,0.8512,0.5045,0.1862,0.2709,0.4232,0.3043,0.6116,0.6756,0.5375,0.4719,0.4647,0.2587,0.2129,0.2222,0.2111,0.0176,0.1348,0.0744,0.013,0.0106,0.0033,0.0232,0.0166,0.0095,0.018,0.0244,0.0316,0.0164,0.0095,0.0078,R   \u51c6\u5907\u6570\u636e\uff1a\u8f6c\u6362\u6837\u672c\u96c6   # \u5bfc\u5165csv\u6587\u4ef6  def   loadDataSet ( filename ): \n     dataset   =   [] \n     with   open ( filename ,   r )   as   fr : \n         for   line   in   fr . readlines (): \n             if   not   line : \n                 continue \n             lineArr   =   [] \n             for   featrue   in   line . split ( , ): \n                 # strip()\u8fd4\u56de\u79fb\u9664\u5b57\u7b26\u4e32\u5934\u5c3e\u6307\u5b9a\u7684\u5b57\u7b26\u751f\u6210\u7684\u65b0\u5b57\u7b26\u4e32 \n                 str_f   =   featrue . strip () \n                 if   str_f . isdigit ():   # \u5224\u65ad\u662f\u5426\u662f\u6570\u5b57 \n                     # \u5c06\u6570\u636e\u96c6\u7684\u7b2ccolumn\u5217\u8f6c\u6362\u6210float\u5f62\u5f0f \n                     lineArr . append ( float ( str_f )) \n                 else : \n                     # \u6dfb\u52a0\u5206\u7c7b\u6807\u7b7e \n                     lineArr . append ( str_f ) \n             dataset . append ( lineArr ) \n     return   dataset    \u5206\u6790\u6570\u636e\uff1a\u624b\u5de5\u68c0\u67e5\u6570\u636e  \u8bad\u7ec3\u7b97\u6cd5\uff1a\u5728\u6570\u636e\u4e0a\uff0c\u5229\u7528 random_forest() \u51fd\u6570\u8fdb\u884c\u4f18\u5316\u8bc4\u4f30\uff0c\u8fd4\u56de\u6a21\u578b\u7684\u7efc\u5408\u5206\u7c7b\u7ed3\u679c    \u6837\u672c\u6570\u636e\u968f\u673a\u65e0\u653e\u56de\u62bd\u6837-\u7528\u4e8e\u4ea4\u53c9\u9a8c\u8bc1   def   cross_validation_split ( dataset ,   n_folds ): \n     cross_validation_split(\u5c06\u6570\u636e\u96c6\u8fdb\u884c\u62bd\u91cd\u62bd\u6837 n_folds \u4efd\uff0c\u6570\u636e\u53ef\u4ee5\u91cd\u590d\u91cd\u590d\u62bd\u53d6)      Args:          dataset     \u539f\u59cb\u6570\u636e\u96c6          n_folds     \u6570\u636e\u96c6dataset\u5206\u6210n_flods\u4efd      Returns:          dataset_split    list\u96c6\u5408\uff0c\u5b58\u653e\u7684\u662f\uff1a\u5c06\u6570\u636e\u96c6\u8fdb\u884c\u62bd\u91cd\u62bd\u6837 n_folds \u4efd\uff0c\u6570\u636e\u53ef\u4ee5\u91cd\u590d\u91cd\u590d\u62bd\u53d6       \n     dataset_split   =   list () \n     dataset_copy   =   list ( dataset )         # \u590d\u5236\u4e00\u4efd dataset,\u9632\u6b62 dataset \u7684\u5185\u5bb9\u6539\u53d8 \n     fold_size   =   len ( dataset )   /   n_folds \n     for   i   in   range ( n_folds ): \n         fold   =   list ()                    # \u6bcf\u6b21\u5faa\u73af fold \u6e05\u96f6\uff0c\u9632\u6b62\u91cd\u590d\u5bfc\u5165 dataset_split \n         while   len ( fold )     fold_size :     # \u8fd9\u91cc\u4e0d\u80fd\u7528 if\uff0cif \u53ea\u662f\u5728\u7b2c\u4e00\u6b21\u5224\u65ad\u65f6\u8d77\u4f5c\u7528\uff0cwhile \u6267\u884c\u5faa\u73af\uff0c\u76f4\u5230\u6761\u4ef6\u4e0d\u6210\u7acb \n             # \u6709\u653e\u56de\u7684\u968f\u673a\u91c7\u6837\uff0c\u6709\u4e00\u4e9b\u6837\u672c\u88ab\u91cd\u590d\u91c7\u6837\uff0c\u4ece\u800c\u5728\u8bad\u7ec3\u96c6\u4e2d\u591a\u6b21\u51fa\u73b0\uff0c\u6709\u7684\u5219\u4ece\u672a\u5728\u8bad\u7ec3\u96c6\u4e2d\u51fa\u73b0\uff0c\u6b64\u5219\u81ea\u52a9\u91c7\u6837\u6cd5\u3002\u4ece\u800c\u4fdd\u8bc1\u6bcf\u68f5\u51b3\u7b56\u6811\u8bad\u7ec3\u96c6\u7684\u5dee\u5f02\u6027             \n             index   =   randrange ( len ( dataset_copy )) \n             # \u5c06\u5bf9\u5e94\u7d22\u5f15 index \u7684\u5185\u5bb9\u4ece dataset_copy \u4e2d\u5bfc\u51fa\uff0c\u5e76\u5c06\u8be5\u5185\u5bb9\u4ece dataset_copy \u4e2d\u5220\u9664\u3002 \n             # pop() \u51fd\u6570\u7528\u4e8e\u79fb\u9664\u5217\u8868\u4e2d\u7684\u4e00\u4e2a\u5143\u7d20\uff08\u9ed8\u8ba4\u6700\u540e\u4e00\u4e2a\u5143\u7d20\uff09\uff0c\u5e76\u4e14\u8fd4\u56de\u8be5\u5143\u7d20\u7684\u503c\u3002 \n             fold . append ( dataset_copy . pop ( index ))    # \u65e0\u653e\u56de\u7684\u65b9\u5f0f \n             # fold.append(dataset_copy[index])  # \u6709\u653e\u56de\u7684\u65b9\u5f0f \n         dataset_split . append ( fold ) \n     # \u7531dataset\u5206\u5272\u51fa\u7684n_folds\u4e2a\u6570\u636e\u6784\u6210\u7684\u5217\u8868\uff0c\u4e3a\u4e86\u7528\u4e8e\u4ea4\u53c9\u9a8c\u8bc1 \n     return   dataset_split    \u8bad\u7ec3\u6570\u636e\u96c6\u968f\u673a\u5316   # Create a random subsample from the dataset with replacement  def   subsample ( dataset ,   ratio ):     # \u521b\u5efa\u6570\u636e\u96c6\u7684\u968f\u673a\u5b50\u6837\u672c \n     random_forest(\u8bc4\u4f30\u7b97\u6cd5\u6027\u80fd\uff0c\u8fd4\u56de\u6a21\u578b\u5f97\u5206)      Args:          dataset         \u8bad\u7ec3\u6570\u636e\u96c6          ratio           \u8bad\u7ec3\u6570\u636e\u96c6\u7684\u6837\u672c\u6bd4\u4f8b      Returns:          sample          \u968f\u673a\u62bd\u6837\u7684\u8bad\u7ec3\u6837\u672c       \n\n     sample   =   list () \n     # \u8bad\u7ec3\u6837\u672c\u7684\u6309\u6bd4\u4f8b\u62bd\u6837\u3002 \n     # round() \u65b9\u6cd5\u8fd4\u56de\u6d6e\u70b9\u6570x\u7684\u56db\u820d\u4e94\u5165\u503c\u3002 \n     n_sample   =   round ( len ( dataset )   *   ratio ) \n     while   len ( sample )     n_sample : \n         # \u6709\u653e\u56de\u7684\u968f\u673a\u91c7\u6837\uff0c\u6709\u4e00\u4e9b\u6837\u672c\u88ab\u91cd\u590d\u91c7\u6837\uff0c\u4ece\u800c\u5728\u8bad\u7ec3\u96c6\u4e2d\u591a\u6b21\u51fa\u73b0\uff0c\u6709\u7684\u5219\u4ece\u672a\u5728\u8bad\u7ec3\u96c6\u4e2d\u51fa\u73b0\uff0c\u6b64\u5219\u81ea\u52a9\u91c7\u6837\u6cd5\u3002\u4ece\u800c\u4fdd\u8bc1\u6bcf\u68f5\u51b3\u7b56\u6811\u8bad\u7ec3\u96c6\u7684\u5dee\u5f02\u6027 \n         index   =   randrange ( len ( dataset )) \n         sample . append ( dataset [ index ]) \n     return   sample    \u7279\u5f81\u968f\u673a\u5316   # \u627e\u51fa\u5206\u5272\u6570\u636e\u96c6\u7684\u6700\u4f18\u7279\u5f81\uff0c\u5f97\u5230\u6700\u4f18\u7684\u7279\u5f81 index\uff0c\u7279\u5f81\u503c row[index]\uff0c\u4ee5\u53ca\u5206\u5272\u5b8c\u7684\u6570\u636e groups\uff08left, right\uff09  def   get_split ( dataset ,   n_features ): \n     class_values   =   list ( set ( row [ - 1 ]   for   row   in   dataset ))    # class_values =[0, 1] \n     b_index ,   b_value ,   b_score ,   b_groups   =   999 ,   999 ,   999 ,   None \n     features   =   list () \n     while   len ( features )     n_features : \n         index   =   randrange ( len ( dataset [ 0 ]) - 1 )    # \u5f80 features \u6dfb\u52a0 n_features \u4e2a\u7279\u5f81\uff08 n_feature \u7b49\u4e8e\u7279\u5f81\u6570\u7684\u6839\u53f7\uff09\uff0c\u7279\u5f81\u7d22\u5f15\u4ece dataset \u4e2d\u968f\u673a\u53d6 \n         if   index   not   in   features : \n             features . append ( index ) \n     for   index   in   features :                      # \u5728 n_features \u4e2a\u7279\u5f81\u4e2d\u9009\u51fa\u6700\u4f18\u7684\u7279\u5f81\u7d22\u5f15\uff0c\u5e76\u6ca1\u6709\u904d\u5386\u6240\u6709\u7279\u5f81\uff0c\u4ece\u800c\u4fdd\u8bc1\u4e86\u6bcf\u8bfe\u51b3\u7b56\u6811\u7684\u5dee\u5f02\u6027 \n         for   row   in   dataset : \n             groups   =   test_split ( index ,   row [ index ],   dataset )    # groups=(left, right), row[index] \u904d\u5386\u6bcf\u4e00\u884c index \u7d22\u5f15\u4e0b\u7684\u7279\u5f81\u503c\u4f5c\u4e3a\u5206\u7c7b\u503c value, \u627e\u51fa\u6700\u4f18\u7684\u5206\u7c7b\u7279\u5f81\u548c\u7279\u5f81\u503c \n             gini   =   gini_index ( groups ,   class_values ) \n             # \u5de6\u53f3\u4e24\u8fb9\u7684\u6570\u91cf\u8d8a\u4e00\u6837\uff0c\u8bf4\u660e\u6570\u636e\u533a\u5206\u5ea6\u4e0d\u9ad8\uff0cgini\u7cfb\u6570\u8d8a\u5927 \n             if   gini     b_score : \n                 b_index ,   b_value ,   b_score ,   b_groups   =   index ,   row [ index ],   gini ,   groups    # \u6700\u540e\u5f97\u5230\u6700\u4f18\u7684\u5206\u7c7b\u7279\u5f81 b_index,\u5206\u7c7b\u7279\u5f81\u503c b_value,\u5206\u7c7b\u7ed3\u679c b_groups\u3002b_value \u4e3a\u5206\u9519\u7684\u4ee3\u4ef7\u6210\u672c \n     # print b_score \n     return   { index :   b_index ,   value :   b_value ,   groups :   b_groups }    \u968f\u673a\u68ee\u6797   # Random Forest Algorithm  def   random_forest ( train ,   test ,   max_depth ,   min_size ,   sample_size ,   n_trees ,   n_features ): \n     random_forest(\u8bc4\u4f30\u7b97\u6cd5\u6027\u80fd\uff0c\u8fd4\u56de\u6a21\u578b\u5f97\u5206)      Args:          train           \u8bad\u7ec3\u6570\u636e\u96c6          test            \u6d4b\u8bd5\u6570\u636e\u96c6          max_depth       \u51b3\u7b56\u6811\u6df1\u5ea6\u4e0d\u80fd\u592a\u6df1\uff0c\u4e0d\u7136\u5bb9\u6613\u5bfc\u81f4\u8fc7\u62df\u5408          min_size        \u53f6\u5b50\u8282\u70b9\u7684\u5927\u5c0f          sample_size     \u8bad\u7ec3\u6570\u636e\u96c6\u7684\u6837\u672c\u6bd4\u4f8b          n_trees         \u51b3\u7b56\u6811\u7684\u4e2a\u6570          n_features      \u9009\u53d6\u7684\u7279\u5f81\u7684\u4e2a\u6570      Returns:          predictions     \u6bcf\u4e00\u884c\u7684\u9884\u6d4b\u7ed3\u679c\uff0cbagging \u9884\u6d4b\u6700\u540e\u7684\u5206\u7c7b\u7ed3\u679c       \n\n     trees   =   list () \n     # n_trees \u8868\u793a\u51b3\u7b56\u6811\u7684\u6570\u91cf \n     for   i   in   range ( n_trees ): \n         # \u968f\u673a\u62bd\u6837\u7684\u8bad\u7ec3\u6837\u672c\uff0c \u968f\u673a\u91c7\u6837\u4fdd\u8bc1\u4e86\u6bcf\u68f5\u51b3\u7b56\u6811\u8bad\u7ec3\u96c6\u7684\u5dee\u5f02\u6027 \n         sample   =   subsample ( train ,   sample_size ) \n         # \u521b\u5efa\u4e00\u4e2a\u51b3\u7b56\u6811 \n         tree   =   build_tree ( sample ,   max_depth ,   min_size ,   n_features ) \n         trees . append ( tree ) \n\n     # \u6bcf\u4e00\u884c\u7684\u9884\u6d4b\u7ed3\u679c\uff0cbagging \u9884\u6d4b\u6700\u540e\u7684\u5206\u7c7b\u7ed3\u679c \n     predictions   =   [ bagging_predict ( trees ,   row )   for   row   in   test ] \n     return   predictions    \u6d4b\u8bd5\u7b97\u6cd5\uff1a\u5728\u91c7\u7528\u81ea\u5b9a\u4e49 n_folds \u4efd\u968f\u673a\u91cd\u62bd\u6837 \u8fdb\u884c\u6d4b\u8bd5\u8bc4\u4f30\uff0c\u5f97\u51fa\u7efc\u5408\u7684\u9884\u6d4b\u8bc4\u5206\u3002    \u8ba1\u7b97\u968f\u673a\u68ee\u6797\u7684\u9884\u6d4b\u7ed3\u679c\u7684\u6b63\u786e\u7387   # \u8bc4\u4f30\u7b97\u6cd5\u6027\u80fd\uff0c\u8fd4\u56de\u6a21\u578b\u5f97\u5206  def   evaluate_algorithm ( dataset ,   algorithm ,   n_folds ,   * args ): \n     evaluate_algorithm(\u8bc4\u4f30\u7b97\u6cd5\u6027\u80fd\uff0c\u8fd4\u56de\u6a21\u578b\u5f97\u5206)      Args:          dataset     \u539f\u59cb\u6570\u636e\u96c6          algorithm   \u4f7f\u7528\u7684\u7b97\u6cd5          n_folds     \u6570\u636e\u7684\u4efd\u6570          *args       \u5176\u4ed6\u7684\u53c2\u6570      Returns:          scores      \u6a21\u578b\u5f97\u5206       \n\n     # \u5c06\u6570\u636e\u96c6\u8fdb\u884c\u968f\u673a\u62bd\u6837\uff0c\u5206\u6210 n_folds \u4efd\uff0c\u6570\u636e\u65e0\u91cd\u590d\u7684\u62bd\u53d6 \n     folds   =   cross_validation_split ( dataset ,   n_folds ) \n     scores   =   list () \n     # \u6bcf\u6b21\u5faa\u73af\u4ece folds \u4ece\u53d6\u51fa\u4e00\u4e2a fold \u4f5c\u4e3a\u6d4b\u8bd5\u96c6\uff0c\u5176\u4f59\u4f5c\u4e3a\u8bad\u7ec3\u96c6\uff0c\u904d\u5386\u6574\u4e2a folds \uff0c\u5b9e\u73b0\u4ea4\u53c9\u9a8c\u8bc1 \n     for   fold   in   folds : \n         train_set   =   list ( folds ) \n         train_set . remove ( fold ) \n         # \u5c06\u591a\u4e2a fold \u5217\u8868\u7ec4\u5408\u6210\u4e00\u4e2a train_set \u5217\u8868, \u7c7b\u4f3c union all \n                  In [20]: l1=[[1, 2,  a ], [11, 22,  b ]]          In [21]: l2=[[3, 4,  c ], [33, 44,  d ]]          In [22]: l=[]          In [23]: l.append(l1)          In [24]: l.append(l2)          In [25]: l          Out[25]: [[[1, 2,  a ], [11, 22,  b ]], [[3, 4,  c ], [33, 44,  d ]]]          In [26]: sum(l, [])          Out[26]: [[1, 2,  a ], [11, 22,  b ], [3, 4,  c ], [33, 44,  d ]]           \n         train_set   =   sum ( train_set ,   []) \n         test_set   =   list () \n         # fold \u8868\u793a\u4ece\u539f\u59cb\u6570\u636e\u96c6 dataset \u63d0\u53d6\u51fa\u6765\u7684\u6d4b\u8bd5\u96c6 \n         for   row   in   fold : \n             row_copy   =   list ( row ) \n             row_copy [ - 1 ]   =   None  \n             test_set . append ( row_copy ) \n         predicted   =   algorithm ( train_set ,   test_set ,   * args ) \n         actual   =   [ row [ - 1 ]   for   row   in   fold ] \n\n         # \u8ba1\u7b97\u968f\u673a\u68ee\u6797\u7684\u9884\u6d4b\u7ed3\u679c\u7684\u6b63\u786e\u7387 \n         accuracy   =   accuracy_metric ( actual ,   predicted ) \n         scores . append ( accuracy ) \n     return   scores    \u4f7f\u7528\u7b97\u6cd5\uff1a\u82e5\u4f60\u611f\u5174\u8da3\u53ef\u4ee5\u6784\u5efa\u5b8c\u6574\u7684\u5e94\u7528\u7a0b\u5e8f\uff0c\u4ece\u6848\u4f8b\u8fdb\u884c\u5c01\u88c5\uff0c\u4e5f\u53ef\u4ee5\u53c2\u8003\u6211\u4eec\u7684\u4ee3\u7801   \u5b8c\u6574\u4ee3\u7801\u5730\u5740 :  https://github.com/apachecn/MachineLearning/blob/master/src/python/7.RandomForest/randomForest.py", 
            "title": "\u5f00\u53d1\u6d41\u7a0b"
        }, 
        {
            "location": "/\u4e66\u7c4d/\u673a\u5668\u5b66\u4e60\u5b9e\u6218/07.\u96c6\u6210\u65b9\u6cd5-\u968f\u673a\u68ee\u6797\u548cAdaBoost/#adaboost", 
            "text": "", 
            "title": "AdaBoost"
        }, 
        {
            "location": "/\u4e66\u7c4d/\u673a\u5668\u5b66\u4e60\u5b9e\u6218/07.\u96c6\u6210\u65b9\u6cd5-\u968f\u673a\u68ee\u6797\u548cAdaBoost/#adaboost-adaptive-boosting-boosting", 
            "text": "\u80fd\u5426\u4f7f\u7528\u5f31\u5206\u7c7b\u5668\u548c\u591a\u4e2a\u5b9e\u4f8b\u6765\u6784\u5efa\u4e00\u4e2a\u5f3a\u5206\u7c7b\u5668\uff1f \u8fd9\u662f\u4e00\u4e2a\u975e\u5e38\u6709\u8da3\u7684\u7406\u8bba\u95ee\u9898\u3002", 
            "title": "AdaBoost (adaptive boosting: \u81ea\u9002\u5e94 boosting) \u6982\u8ff0"
        }, 
        {
            "location": "/\u4e66\u7c4d/\u673a\u5668\u5b66\u4e60\u5b9e\u6218/07.\u96c6\u6210\u65b9\u6cd5-\u968f\u673a\u68ee\u6797\u548cAdaBoost/#adaboost_1", 
            "text": "AdaBoost \u5de5\u4f5c\u539f\u7406     AdaBoost \u5f00\u53d1\u6d41\u7a0b   \u6536\u96c6\u6570\u636e\uff1a\u53ef\u4ee5\u4f7f\u7528\u4efb\u610f\u65b9\u6cd5\n\u51c6\u5907\u6570\u636e\uff1a\u4f9d\u8d56\u4e8e\u6240\u4f7f\u7528\u7684\u5f31\u5206\u7c7b\u5668\u7c7b\u578b\uff0c\u672c\u7ae0\u4f7f\u7528\u7684\u662f\u5355\u5c42\u51b3\u7b56\u6811\uff0c\u8fd9\u79cd\u5206\u7c7b\u5668\u53ef\u4ee5\u5904\u7406\u4efb\u4f55\u6570\u636e\u7c7b\u578b\u3002\n    \u5f53\u7136\u4e5f\u53ef\u4ee5\u4f7f\u7528\u4efb\u610f\u5206\u7c7b\u5668\u4f5c\u4e3a\u5f31\u5206\u7c7b\u5668\uff0c\u7b2c2\u7ae0\u5230\u7b2c6\u7ae0\u4e2d\u7684\u4efb\u4e00\u5206\u7c7b\u5668\u90fd\u53ef\u4ee5\u5145\u5f53\u5f31\u5206\u7c7b\u5668\u3002\n    \u4f5c\u4e3a\u5f31\u5206\u7c7b\u5668\uff0c\u7b80\u5355\u5206\u7c7b\u5668\u7684\u6548\u679c\u66f4\u597d\u3002\n\u5206\u6790\u6570\u636e\uff1a\u53ef\u4ee5\u4f7f\u7528\u4efb\u610f\u65b9\u6cd5\u3002\n\u8bad\u7ec3\u7b97\u6cd5\uff1aAdaBoost \u7684\u5927\u90e8\u5206\u65f6\u95f4\u90fd\u7528\u5728\u8bad\u7ec3\u4e0a\uff0c\u5206\u7c7b\u5668\u5c06\u591a\u6b21\u5728\u540c\u4e00\u6570\u636e\u96c6\u4e0a\u8bad\u7ec3\u5f31\u5206\u7c7b\u5668\u3002\n\u6d4b\u8bd5\u7b97\u6cd5\uff1a\u8ba1\u7b97\u5206\u7c7b\u7684\u9519\u8bef\u7387\u3002\n\u4f7f\u7528\u7b97\u6cd5\uff1a\u901aSVM\u4e00\u6837\uff0cAdaBoost \u9884\u6d4b\u4e24\u4e2a\u7c7b\u522b\u4e2d\u7684\u4e00\u4e2a\u3002\u5982\u679c\u60f3\u628a\u5b83\u5e94\u7528\u5230\u591a\u4e2a\u7c7b\u522b\u7684\u573a\u666f\uff0c\u90a3\u4e48\u5c31\u8981\u50cf\u591a\u7c7b SVM \u4e2d\u7684\u505a\u6cd5\u4e00\u6837\u5bf9 AdaBoost \u8fdb\u884c\u4fee\u6539\u3002   AdaBoost \u7b97\u6cd5\u7279\u70b9   * \u4f18\u70b9\uff1a\u6cdb\u5316\uff08\u7531\u5177\u4f53\u7684\u3001\u4e2a\u522b\u7684\u6269\u5927\u4e3a\u4e00\u822c\u7684\uff09\u9519\u8bef\u7387\u4f4e\uff0c\u6613\u7f16\u7801\uff0c\u53ef\u4ee5\u5e94\u7528\u5728\u5927\u90e8\u5206\u5206\u7c7b\u5668\u4e0a\uff0c\u65e0\u53c2\u6570\u8c03\u8282\u3002\n* \u7f3a\u70b9\uff1a\u5bf9\u79bb\u7fa4\u70b9\u654f\u611f\u3002\n* \u9002\u7528\u6570\u636e\u7c7b\u578b\uff1a\u6570\u503c\u578b\u548c\u6807\u79f0\u578b\u6570\u636e\u3002", 
            "title": "AdaBoost \u539f\u7406"
        }, 
        {
            "location": "/\u4e66\u7c4d/\u673a\u5668\u5b66\u4e60\u5b9e\u6218/07.\u96c6\u6210\u65b9\u6cd5-\u968f\u673a\u68ee\u6797\u548cAdaBoost/#_8", 
            "text": "\u9879\u76ee\u6d41\u7a0b\u56fe    \u57fa\u4e8e\u5355\u5c42\u51b3\u7b56\u6811\u6784\u5efa\u5f31\u5206\u7c7b\u5668\n* \u5355\u5c42\u51b3\u7b56\u6811(decision stump, \u4e5f\u79f0\u51b3\u7b56\u6811\u6869)\u662f\u4e00\u79cd\u7b80\u5355\u7684\u51b3\u7b56\u6811\u3002", 
            "title": "\u9879\u76ee\u6848\u4f8b: \u9a6c\u759d\u75c5\u7684\u9884\u6d4b"
        }, 
        {
            "location": "/\u4e66\u7c4d/\u673a\u5668\u5b66\u4e60\u5b9e\u6218/07.\u96c6\u6210\u65b9\u6cd5-\u968f\u673a\u68ee\u6797\u548cAdaBoost/#_9", 
            "text": "\u9884\u6d4b\u60a3\u6709\u759d\u6c14\u75c5\u7684\u9a6c\u7684\u5b58\u6d3b\u95ee\u9898\uff0c\u8fd9\u91cc\u7684\u6570\u636e\u5305\u62ec368\u4e2a\u6837\u672c\u548c28\u4e2a\u7279\u5f81\uff0c\u759d\u6c14\u75c5\u662f\u63cf\u8ff0\u9a6c\u80c3\u80a0\u75db\u7684\u672f\u8bed\uff0c\u7136\u800c\uff0c\u8fd9\u79cd\u75c5\u5e76\u4e0d\u4e00\u5b9a\u6e90\u81ea\u9a6c\u7684\u80c3\u80a0\u95ee\u9898\uff0c\u5176\u4ed6\u95ee\u9898\u4e5f\u53ef\u80fd\u5f15\u53d1\u759d\u6c14\u75c5\uff0c\u8be5\u6570\u636e\u96c6\u4e2d\u5305\u542b\u4e86\u533b\u9662\u68c0\u6d4b\u9a6c\u759d\u6c14\u75c5\u7684\u4e00\u4e9b\u6307\u6807\uff0c\u6709\u7684\u6307\u6807\u6bd4\u8f83\u4e3b\u89c2\uff0c\u6709\u7684\u6307\u6807\u96be\u4ee5\u6d4b\u91cf\uff0c\u4f8b\u5982\u9a6c\u7684\u75bc\u75db\u7ea7\u522b\u3002\u53e6\u5916\uff0c\u9664\u4e86\u90e8\u5206\u6307\u6807\u4e3b\u89c2\u548c\u96be\u4ee5\u6d4b\u91cf\u4e4b\u5916\uff0c\u8be5\u6570\u636e\u8fd8\u5b58\u5728\u4e00\u4e2a\u95ee\u9898\uff0c\u6570\u636e\u96c6\u4e2d\u670930%\u7684\u503c\u662f\u7f3a\u5931\u7684\u3002", 
            "title": "\u9879\u76ee\u6982\u8ff0"
        }, 
        {
            "location": "/\u4e66\u7c4d/\u673a\u5668\u5b66\u4e60\u5b9e\u6218/07.\u96c6\u6210\u65b9\u6cd5-\u968f\u673a\u68ee\u6797\u548cAdaBoost/#_10", 
            "text": "\u6536\u96c6\u6570\u636e\uff1a\u63d0\u4f9b\u7684\u6587\u672c\u6587\u4ef6\n\u51c6\u5907\u6570\u636e\uff1a\u786e\u4fdd\u7c7b\u522b\u6807\u7b7e\u662f+1\u548c-1\uff0c\u800c\u975e1\u548c0\n\u5206\u6790\u6570\u636e\uff1a\u7edf\u8ba1\u5206\u6790\n\u8bad\u7ec3\u7b97\u6cd5\uff1a\u5728\u6570\u636e\u4e0a\uff0c\u5229\u7528 adaBoostTrainDS() \u51fd\u6570\u8bad\u7ec3\u51fa\u4e00\u7cfb\u5217\u7684\u5206\u7c7b\u5668\n\u6d4b\u8bd5\u7b97\u6cd5\uff1a\u6211\u4eec\u62e5\u6709\u4e24\u4e2a\u6570\u636e\u96c6\u3002\u5728\u4e0d\u91c7\u7528\u968f\u673a\u62bd\u6837\u7684\u65b9\u6cd5\u4e0b\uff0c\u6211\u4eec\u5c31\u4f1a\u5bf9 AdaBoost \u548c Logistic \u56de\u5f52\u7684\u7ed3\u679c\u8fdb\u884c\u5b8c\u5168\u5bf9\u7b49\u7684\u6bd4\u8f83\n\u4f7f\u7528\u7b97\u6cd5\uff1a\u89c2\u5bdf\u8be5\u4f8b\u5b50\u4e0a\u7684\u9519\u8bef\u7387\u3002\u4e0d\u8fc7\uff0c\u4e5f\u53ef\u4ee5\u6784\u5efa\u4e00\u4e2a Web \u7f51\u7ad9\uff0c\u8ba9\u9a6f\u9a6c\u5e08\u8f93\u5165\u9a6c\u7684\u75c7\u72b6\u7136\u540e\u9884\u6d4b\u9a6c\u662f\u5426\u4f1a\u6b7b\u53bb   \u6536\u96c6\u6570\u636e\uff1a\u63d0\u4f9b\u7684\u6587\u672c\u6587\u4ef6   \u8bad\u7ec3\u6570\u636e\uff1ahorseColicTraining.txt \n\u6d4b\u8bd5\u6570\u636e\uff1ahorseColicTest.txt  2.000000    1.000000    38.500000   66.000000   28.000000   3.000000    3.000000    0.000000    2.000000    5.000000    4.000000    4.000000    0.000000    0.000000    0.000000    3.000000    5.000000    45.000000   8.400000    0.000000    0.000000    -1.000000\n1.000000    1.000000    39.200000   88.000000   20.000000   0.000000    0.000000    4.000000    1.000000    3.000000    4.000000    2.000000    0.000000    0.000000    0.000000    4.000000    2.000000    50.000000   85.000000   2.000000    2.000000    -1.000000\n2.000000    1.000000    38.300000   40.000000   24.000000   1.000000    1.000000    3.000000    1.000000    3.000000    3.000000    1.000000    0.000000    0.000000    0.000000    1.000000    1.000000    33.000000   6.700000    0.000000    0.000000    1.000000   \u51c6\u5907\u6570\u636e\uff1a\u786e\u4fdd\u7c7b\u522b\u6807\u7b7e\u662f+1\u548c-1\uff0c\u800c\u975e1\u548c0   def   loadDataSet ( fileName ): \n     # \u83b7\u53d6 feature \u7684\u6570\u91cf, \u4fbf\u4e8e\u83b7\u53d6 \n     numFeat   =   len ( open ( fileName ) . readline () . split ( \\t )) \n     dataArr   =   [] \n     labelArr   =   [] \n     fr   =   open ( fileName ) \n     for   line   in   fr . readlines (): \n         lineArr   =   [] \n         curLine   =   line . strip () . split ( \\t ) \n         for   i   in   range ( numFeat - 1 ): \n             lineArr . append ( float ( curLine [ i ])) \n         dataArr . append ( lineArr ) \n         labelArr . append ( float ( curLine [ - 1 ])) \n     return   dataArr ,   labelArr    \u5206\u6790\u6570\u636e\uff1a\u7edf\u8ba1\u5206\u6790   \u8fc7\u62df\u5408(overfitting, \u4e5f\u79f0\u4e3a\u8fc7\u5b66\u4e60)\n* \u53d1\u73b0\u6d4b\u8bd5\u9519\u8bef\u7387\u5728\u8fbe\u5230\u4e00\u4e2a\u6700\u5c0f\u503c\u4e4b\u540e\u6709\u5f00\u59cb\u4e0a\u5347\uff0c\u8fd9\u79cd\u73b0\u8c61\u79f0\u4e3a\u8fc7\u62df\u5408\u3002    \u901a\u4fd7\u6765\u8bf4\uff1a\u5c31\u662f\u628a\u4e00\u4e9b\u566a\u97f3\u6570\u636e\u4e5f\u62df\u5408\u8fdb\u53bb\u7684\uff0c\u5982\u4e0b\u56fe\u3002     \u8bad\u7ec3\u7b97\u6cd5\uff1a\u5728\u6570\u636e\u4e0a\uff0c\u5229\u7528 adaBoostTrainDS() \u51fd\u6570\u8bad\u7ec3\u51fa\u4e00\u7cfb\u5217\u7684\u5206\u7c7b\u5668   def   adaBoostTrainDS ( dataArr ,   labelArr ,   numIt = 40 ): \n     adaBoostTrainDS(adaBoost\u8bad\u7ec3\u8fc7\u7a0b\u653e\u5927)      Args:          dataArr   \u7279\u5f81\u6807\u7b7e\u96c6\u5408          labelArr  \u5206\u7c7b\u6807\u7b7e\u96c6\u5408          numIt     \u5b9e\u4f8b\u6570      Returns:          weakClassArr  \u5f31\u5206\u7c7b\u5668\u7684\u96c6\u5408          aggClassEst   \u9884\u6d4b\u7684\u5206\u7c7b\u7ed3\u679c\u503c       \n     weakClassArr   =   [] \n     m   =   shape ( dataArr )[ 0 ] \n     # \u521d\u59cb\u5316 D\uff0c\u8bbe\u7f6e\u6bcf\u4e2a\u6837\u672c\u7684\u6743\u91cd\u503c\uff0c\u5e73\u5747\u5206\u4e3am\u4efd \n     D   =   mat ( ones (( m ,   1 )) / m ) \n     aggClassEst   =   mat ( zeros (( m ,   1 ))) \n     for   i   in   range ( numIt ): \n         # \u5f97\u5230\u51b3\u7b56\u6811\u7684\u6a21\u578b \n         bestStump ,   error ,   classEst   =   buildStump ( dataArr ,   labelArr ,   D ) \n\n         # alpha\u76ee\u7684\u4e3b\u8981\u662f\u8ba1\u7b97\u6bcf\u4e00\u4e2a\u5206\u7c7b\u5668\u5b9e\u4f8b\u7684\u6743\u91cd(\u7ec4\u5408\u5c31\u662f\u5206\u7c7b\u7ed3\u679c) \n         # \u8ba1\u7b97\u6bcf\u4e2a\u5206\u7c7b\u5668\u7684alpha\u6743\u91cd\u503c \n         alpha   =   float ( 0.5 * log (( 1.0 - error ) / max ( error ,   1e-16 ))) \n         bestStump [ alpha ]   =   alpha \n         # store Stump Params in Array \n         weakClassArr . append ( bestStump ) \n\n         print   alpha= %s , classEst= %s , bestStump= %s , error= %s     %   ( alpha ,   classEst . T ,   bestStump ,   error ) \n         # \u5206\u7c7b\u6b63\u786e\uff1a\u4e58\u79ef\u4e3a1\uff0c\u4e0d\u4f1a\u5f71\u54cd\u7ed3\u679c\uff0c-1\u4e3b\u8981\u662f\u4e0b\u9762\u6c42e\u7684-alpha\u6b21\u65b9 \n         # \u5206\u7c7b\u9519\u8bef\uff1a\u4e58\u79ef\u4e3a -1\uff0c\u7ed3\u679c\u4f1a\u53d7\u5f71\u54cd\uff0c\u6240\u4ee5\u4e5f\u4e58\u4ee5 -1 \n         expon   =   multiply ( - 1 * alpha * mat ( labelArr ) . T ,   classEst ) \n         print   (-1\u53d6\u53cd)\u9884\u6d4b\u503cexpon= ,   expon . T \n         # \u8ba1\u7b97e\u7684expon\u6b21\u65b9\uff0c\u7136\u540e\u8ba1\u7b97\u5f97\u5230\u4e00\u4e2a\u7efc\u5408\u7684\u6982\u7387\u7684\u503c \n         # \u7ed3\u679c\u53d1\u73b0\uff1a \u5224\u65ad\u9519\u8bef\u7684\u6837\u672c\uff0cD\u5bf9\u4e8e\u7684\u6837\u672c\u6743\u91cd\u503c\u4f1a\u53d8\u5927\u3002 \n         D   =   multiply ( D ,   exp ( expon )) \n         D   =   D / D . sum () \n\n         # \u9884\u6d4b\u7684\u5206\u7c7b\u7ed3\u679c\u503c\uff0c\u5728\u4e0a\u4e00\u8f6e\u7ed3\u679c\u7684\u57fa\u7840\u4e0a\uff0c\u8fdb\u884c\u52a0\u548c\u64cd\u4f5c \n         print   \u5f53\u524d\u7684\u5206\u7c7b\u7ed3\u679c\uff1a ,   alpha * classEst . T \n         aggClassEst   +=   alpha * classEst \n         print   \u53e0\u52a0\u540e\u7684\u5206\u7c7b\u7ed3\u679caggClassEst:  ,   aggClassEst . T \n         # sign \u5224\u65ad\u6b63\u4e3a1\uff0c 0\u4e3a0\uff0c \u8d1f\u4e3a-1\uff0c\u901a\u8fc7\u6700\u7ec8\u52a0\u548c\u7684\u6743\u91cd\u503c\uff0c\u5224\u65ad\u7b26\u53f7\u3002 \n         # \u7ed3\u679c\u4e3a\uff1a\u9519\u8bef\u7684\u6837\u672c\u6807\u7b7e\u96c6\u5408\uff0c\u56e0\u4e3a\u662f !=,\u90a3\u4e48\u7ed3\u679c\u5c31\u662f0 \u6b63, 1 \u8d1f \n         aggErrors   =   multiply ( sign ( aggClassEst )   !=   mat ( labelArr ) . T ,   ones (( m ,   1 ))) \n         errorRate   =   aggErrors . sum () / m \n         # print  total error=%s   % (errorRate) \n         if   errorRate   ==   0.0 : \n             break \n     return   weakClassArr ,   aggClassEst   \u53d1\u73b0\uff1a\nalpha \uff08\u6a21\u578b\u6743\u91cd\uff09\u76ee\u7684\u4e3b\u8981\u662f\u8ba1\u7b97\u6bcf\u4e00\u4e2a\u5206\u7c7b\u5668\u5b9e\u4f8b\u7684\u6743\u91cd(\u52a0\u548c\u5c31\u662f\u5206\u7c7b\u7ed3\u679c)\n  \u5206\u7c7b\u7684\u6743\u91cd\u503c\uff1a\u6700\u5927\u7684\u503c= alpha \u7684\u52a0\u548c\uff0c\u6700\u5c0f\u503c=-\u6700\u5927\u503c\nD \uff08\u6837\u672c\u6743\u91cd\uff09\u7684\u76ee\u7684\u662f\u4e3a\u4e86\u8ba1\u7b97\u9519\u8bef\u6982\u7387\uff1a weightedError = D.T*errArr\uff0c\u6c42\u6700\u4f73\u5206\u7c7b\u5668\n  \u6837\u672c\u7684\u6743\u91cd\u503c\uff1a\u5982\u679c\u4e00\u4e2a\u503c\u8bef\u5224\u7684\u51e0\u7387\u8d8a\u5c0f\uff0c\u90a3\u4e48 D \u7684\u6837\u672c\u6743\u91cd\u8d8a\u5c0f    \u6d4b\u8bd5\u7b97\u6cd5\uff1a\u6211\u4eec\u62e5\u6709\u4e24\u4e2a\u6570\u636e\u96c6\u3002\u5728\u4e0d\u91c7\u7528\u968f\u673a\u62bd\u6837\u7684\u65b9\u6cd5\u4e0b\uff0c\u6211\u4eec\u5c31\u4f1a\u5bf9 AdaBoost \u548c Logistic \u56de\u5f52\u7684\u7ed3\u679c\u8fdb\u884c\u5b8c\u5168\u5bf9\u7b49\u7684\u6bd4\u8f83\u3002   def   adaClassify ( datToClass ,   classifierArr ): \n     adaClassify(ada\u5206\u7c7b\u6d4b\u8bd5)      Args:          datToClass     \u591a\u4e2a\u5f85\u5206\u7c7b\u7684\u6837\u4f8b          classifierArr  \u5f31\u5206\u7c7b\u5668\u7684\u96c6\u5408      Returns:          sign(aggClassEst) \u5206\u7c7b\u7ed3\u679c       \n     # do stuff similar to last aggClassEst in adaBoostTrainDS \n     dataMat   =   mat ( datToClass ) \n     m   =   shape ( dataMat )[ 0 ] \n     aggClassEst   =   mat ( zeros (( m ,   1 ))) \n\n     # \u5faa\u73af \u591a\u4e2a\u5206\u7c7b\u5668 \n     for   i   in   range ( len ( classifierArr )): \n         # \u524d\u63d0\uff1a \u6211\u4eec\u5df2\u7ecf\u77e5\u9053\u4e86\u6700\u4f73\u7684\u5206\u7c7b\u5668\u7684\u5b9e\u4f8b \n         # \u901a\u8fc7\u5206\u7c7b\u5668\u6765\u6838\u7b97\u6bcf\u4e00\u6b21\u7684\u5206\u7c7b\u7ed3\u679c\uff0c\u7136\u540e\u901a\u8fc7alpha*\u6bcf\u4e00\u6b21\u7684\u7ed3\u679c \u5f97\u5230\u6700\u540e\u7684\u6743\u91cd\u52a0\u548c\u7684\u503c\u3002 \n         classEst   =   stumpClassify ( dataMat ,   classifierArr [ i ][ dim ],   classifierArr [ i ][ thresh ],   classifierArr [ i ][ ineq ]) \n         aggClassEst   +=   classifierArr [ i ][ alpha ] * classEst \n     return   sign ( aggClassEst )    \u4f7f\u7528\u7b97\u6cd5\uff1a\u89c2\u5bdf\u8be5\u4f8b\u5b50\u4e0a\u7684\u9519\u8bef\u7387\u3002\u4e0d\u8fc7\uff0c\u4e5f\u53ef\u4ee5\u6784\u5efa\u4e00\u4e2a Web \u7f51\u7ad9\uff0c\u8ba9\u9a6f\u9a6c\u5e08\u8f93\u5165\u9a6c\u7684\u75c7\u72b6\u7136\u540e\u9884\u6d4b\u9a6c\u662f\u5426\u4f1a\u6b7b\u53bb\u3002   # \u9a6c\u759d\u75c5\u6570\u636e\u96c6  # \u8bad\u7ec3\u96c6\u5408  dataArr ,   labelArr   =   loadDataSet ( input/7.AdaBoost/horseColicTraining2.txt )  weakClassArr ,   aggClassEst   =   adaBoostTrainDS ( dataArr ,   labelArr ,   40 )  print   weakClassArr ,   \\n ----- \\n ,   aggClassEst . T  # \u8ba1\u7b97ROC\u4e0b\u9762\u7684AUC\u7684\u9762\u79ef\u5927\u5c0f  plotROC ( aggClassEst . T ,   labelArr )  # \u6d4b\u8bd5\u96c6\u5408  dataArrTest ,   labelArrTest   =   loadDataSet ( input/7.AdaBoost/horseColicTest2.txt )  m   =   shape ( dataArrTest )[ 0 ]  predicting10   =   adaClassify ( dataArrTest ,   weakClassArr )  errArr   =   mat ( ones (( m ,   1 )))  # \u6d4b\u8bd5\uff1a\u8ba1\u7b97\u603b\u6837\u672c\u6570\uff0c\u9519\u8bef\u6837\u672c\u6570\uff0c\u9519\u8bef\u7387  print   m ,   errArr [ predicting10   !=   mat ( labelArrTest ) . T ] . sum (),   errArr [ predicting10   !=   mat ( labelArrTest ) . T ] . sum () / m   \u5b8c\u6574\u4ee3\u7801\u5730\u5740 :  https://github.com/apachecn/MachineLearning/blob/master/src/python/7.AdaBoost/adaboost.py", 
            "title": "\u5f00\u53d1\u6d41\u7a0b"
        }, 
        {
            "location": "/\u4e66\u7c4d/\u673a\u5668\u5b66\u4e60\u5b9e\u6218/07.\u96c6\u6210\u65b9\u6cd5-\u968f\u673a\u68ee\u6797\u548cAdaBoost/#_11", 
            "text": "\u975e\u5747\u8861\u73b0\u8c61\uff1a   \u5728\u5206\u7c7b\u5668\u8bad\u7ec3\u65f6\uff0c\u6b63\u4f8b\u6570\u76ee\u548c\u53cd\u4f8b\u6570\u76ee\u4e0d\u76f8\u7b49\uff08\u76f8\u5dee\u5f88\u5927\uff09   \u5224\u65ad\u9a6c\u662f\u5426\u80fd\u7ee7\u7eed\u751f\u5b58(\u4e0d\u53ef\u8bef\u6740)  \u8fc7\u6ee4\u5783\u573e\u90ae\u4ef6(\u4e0d\u53ef\u6f0f\u5224)  \u4e0d\u80fd\u653e\u8fc7\u4f20\u67d3\u75c5\u7684\u4eba  \u4e0d\u80fd\u968f\u4fbf\u8ba4\u4e3a\u522b\u4eba\u72af\u7f6a    ROC \u8bc4\u4f30\u65b9\u6cd5    ROC \u66f2\u7ebf: \u6700\u4f73\u7684\u5206\u7c7b\u5668\u5e94\u8be5\u5c3d\u53ef\u80fd\u5730\u5904\u4e8e\u5de6\u4e0a\u89d2     \u5bf9\u4e0d\u540c\u7684 ROC \u66f2\u7ebf\u8fdb\u884c\u6bd4\u8f83\u7684\u4e00\u4e2a\u6307\u6807\u662f\u66f2\u7ebf\u4e0b\u7684\u9762\u79ef(Area Unser the Curve, AUC).   AUC \u7ed9\u51fa\u7684\u662f\u5206\u7c7b\u5668\u7684\u5e73\u5747\u6027\u80fd\u503c\uff0c\u5f53\u7136\u5b83\u5e76\u4e0d\u80fd\u5b8c\u5168\u4ee3\u66ff\u5bf9\u6574\u6761\u66f2\u7ebf\u7684\u89c2\u5bdf\u3002  \u4e00\u4e2a\u5b8c\u7f8e\u5206\u7c7b\u5668\u7684 AUC \u4e3a1\uff0c\u800c\u968f\u673a\u731c\u6d4b\u7684 AUC \u5219\u4e3a0.5\u3002    \u4ee3\u4ef7\u51fd\u6570    \u57fa\u4e8e\u4ee3\u4ef7\u51fd\u6570\u7684\u5206\u7c7b\u5668\u51b3\u7b56\u63a7\u5236\uff1a TP*(-5)+FN*1+FP*50+TN*0     \u62bd\u6837    \u6b20\u62bd\u6837(undersampling)\u6216\u8005\u8fc7\u62bd\u6837(oversampling)  \u6b20\u62bd\u6837: \u610f\u5473\u7740\u5220\u9664\u6837\u4f8b  \u8fc7\u62bd\u6837: \u610f\u5473\u7740\u590d\u5236\u6837\u4f8b(\u91cd\u590d\u4f7f\u7528)       \u4f5c\u8005\uff1a \u7247\u523b  GitHub\u5730\u5740 :  https://github.com/apachecn/MachineLearning  \u7248\u6743\u58f0\u660e\uff1a\u6b22\u8fce\u8f6c\u8f7d\u5b66\u4e60 =  \u8bf7\u6807\u6ce8\u4fe1\u606f\u6765\u6e90\u4e8e  ApacheCN", 
            "title": "\u8981\u70b9\u8865\u5145"
        }, 
        {
            "location": "/\u4e66\u7c4d/\u673a\u5668\u5b66\u4e60\u5b9e\u6218/08.\u9884\u6d4b\u6570\u503c\u578b\u6570\u636e-\u56de\u5f52/", 
            "text": "\u7b2c8\u7ae0 \u9884\u6d4b\u6570\u503c\u578b\u6570\u636e\uff1a\u56de\u5f52\n\n\n\n\n\u56de\u5f52\uff08Regression\uff09 \u6982\u8ff0\n\n\n\u6211\u4eec\u524d\u8fb9\u63d0\u5230\u7684\u5206\u7c7b\u7684\u76ee\u6807\u53d8\u91cf\u662f\u6807\u79f0\u578b\u6570\u636e\uff0c\u800c\u56de\u5f52\u5219\u662f\u5bf9\u8fde\u7eed\u578b\u7684\u6570\u636e\u505a\u51fa\u5904\u7406\uff0c\u56de\u5f52\u7684\u76ee\u7684\u662f\u9884\u6d4b\u6570\u503c\u578b\u6570\u636e\u7684\u76ee\u6807\u503c\u3002\n\n\n\u56de\u5f52 \u573a\u666f\n\n\n\u56de\u5f52\u7684\u76ee\u7684\u662f\u9884\u6d4b\u6570\u503c\u578b\u7684\u76ee\u6807\u503c\u3002\u6700\u76f4\u63a5\u7684\u529e\u6cd5\u662f\u4f9d\u636e\u8f93\u5165\u5199\u51fa\u4e00\u4e2a\u76ee\u6807\u503c\u7684\u8ba1\u7b97\u516c\u5f0f\u3002\n\n\n\u5047\u5982\u4f60\u60f3\u8981\u9884\u6d4b\u5170\u535a\u57fa\u5c3c\u8dd1\u8f66\u7684\u529f\u7387\u5927\u5c0f\uff0c\u53ef\u80fd\u4f1a\u8fd9\u6837\u8ba1\u7b97:\n\n\nHorsePower = 0.0015 * annualSalary - 0.99 * hoursListeningToPublicRadio\n\n\n\u8fd9\u5c31\u662f\u6240\u8c13\u7684 \n\u56de\u5f52\u65b9\u7a0b(regression equation)\n\uff0c\u5176\u4e2d\u7684 0.0015 \u548c -0.99 \u79f0\u4f5c \n\u56de\u5f52\u7cfb\u6570\uff08regression weights\uff09\n\uff0c\u6c42\u8fd9\u4e9b\u56de\u5f52\u7cfb\u6570\u7684\u8fc7\u7a0b\u5c31\u662f\u56de\u5f52\u3002\u4e00\u65e6\u6709\u4e86\u8fd9\u4e9b\u56de\u5f52\u7cfb\u6570\uff0c\u518d\u7ed9\u5b9a\u8f93\u5165\uff0c\u505a\u9884\u6d4b\u5c31\u975e\u5e38\u5bb9\u6613\u4e86\u3002\u5177\u4f53\u7684\u505a\u6cd5\u662f\u7528\u56de\u5f52\u7cfb\u6570\u4e58\u4ee5\u8f93\u5165\u503c\uff0c\u518d\u5c06\u7ed3\u679c\u5168\u90e8\u52a0\u5728\u4e00\u8d77\uff0c\u5c31\u5f97\u5230\u4e86\u9884\u6d4b\u503c\u3002\u6211\u4eec\u8fd9\u91cc\u6240\u8bf4\u7684\uff0c\u56de\u5f52\u7cfb\u6570\u662f\u4e00\u4e2a\u5411\u91cf\uff0c\u8f93\u5165\u4e5f\u662f\u5411\u91cf\uff0c\u8fd9\u4e9b\u8fd0\u7b97\u4e5f\u5c31\u662f\u6c42\u51fa\u4e8c\u8005\u7684\u5185\u79ef\u3002\n\n\n\u8bf4\u5230\u56de\u5f52\uff0c\u4e00\u822c\u90fd\u662f\u6307 \n\u7ebf\u6027\u56de\u5f52(linear regression)\n\u3002\u7ebf\u6027\u56de\u5f52\u610f\u5473\u7740\u53ef\u4ee5\u5c06\u8f93\u5165\u9879\u5206\u522b\u4e58\u4ee5\u4e00\u4e9b\u5e38\u91cf\uff0c\u518d\u5c06\u7ed3\u679c\u52a0\u8d77\u6765\u5f97\u5230\u8f93\u51fa\u3002\n\n\n\u8865\u5145\uff1a\n\n\u7ebf\u6027\u56de\u5f52\u5047\u8bbe\u7279\u5f81\u548c\u7ed3\u679c\u6ee1\u8db3\u7ebf\u6027\u5173\u7cfb\u3002\u5176\u5b9e\u7ebf\u6027\u5173\u7cfb\u7684\u8868\u8fbe\u80fd\u529b\u975e\u5e38\u5f3a\u5927\uff0c\u6bcf\u4e2a\u7279\u5f81\u5bf9\u7ed3\u679c\u7684\u5f71\u54cd\u5f3a\u5f31\u53ef\u4ee5\u7531\u524d\u9762\u7684\u53c2\u6570\u4f53\u73b0\uff0c\u800c\u4e14\u6bcf\u4e2a\u7279\u5f81\u53d8\u91cf\u53ef\u4ee5\u9996\u5148\u6620\u5c04\u5230\u4e00\u4e2a\u51fd\u6570\uff0c\u7136\u540e\u518d\u53c2\u4e0e\u7ebf\u6027\u8ba1\u7b97\u3002\u8fd9\u6837\u5c31\u53ef\u4ee5\u8868\u8fbe\u7279\u5f81\u4e0e\u7ed3\u679c\u4e4b\u95f4\u7684\u975e\u7ebf\u6027\u5173\u7cfb\u3002\n\n\n\u56de\u5f52 \u539f\u7406\n\n\n1\u3001\u7ebf\u6027\u56de\u5f52\n\n\n\u6211\u4eec\u5e94\u8be5\u600e\u6837\u4ece\u4e00\u5927\u5806\u6570\u636e\u91cc\u6c42\u51fa\u56de\u5f52\u65b9\u7a0b\u5462\uff1f \u5047\u5b9a\u8f93\u5165\u6570\u636e\u5b58\u653e\u5728\u77e9\u9635 x \u4e2d\uff0c\u800c\u56de\u5f52\u7cfb\u6570\u5b58\u653e\u5728\u5411\u91cf w \u4e2d\u3002\u90a3\u4e48\u5bf9\u4e8e\u7ed9\u5b9a\u7684\u6570\u636e X1\uff0c\u9884\u6d4b\u7ed3\u679c\u5c06\u4f1a\u901a\u8fc7 Y = X1^T w \u7ed9\u51fa\u3002\u73b0\u5728\u7684\u95ee\u9898\u662f\uff0c\u624b\u91cc\u6709\u4e00\u4e9b X \u548c\u5bf9\u5e94\u7684 y\uff0c\u600e\u6837\u624d\u80fd\u627e\u5230 w \u5462\uff1f\u4e00\u4e2a\u5e38\u7528\u7684\u65b9\u6cd5\u5c31\u662f\u627e\u51fa\u4f7f\u8bef\u5dee\u6700\u5c0f\u7684 w \u3002\u8fd9\u91cc\u7684\u8bef\u5dee\u662f\u6307\u9884\u6d4b y \u503c\u548c\u771f\u5b9e y \u503c\u4e4b\u95f4\u7684\u5dee\u503c\uff0c\u4f7f\u7528\u8be5\u8bef\u5dee\u7684\u7b80\u5355\u7d2f\u52a0\u5c06\u4f7f\u5f97\u6b63\u5dee\u503c\u548c\u8d1f\u5dee\u503c\u76f8\u4e92\u62b5\u6d88\uff0c\u6240\u4ee5\u6211\u4eec\u91c7\u7528\u5e73\u65b9\u8bef\u5dee\uff08\u5b9e\u9645\u4e0a\u5c31\u662f\u6211\u4eec\u901a\u5e38\u6240\u8bf4\u7684\u6700\u5c0f\u4e8c\u4e58\u6cd5\uff09\u3002\n\n\n\u5e73\u65b9\u8bef\u5dee\u53ef\u4ee5\u5199\u505a\uff08\u5176\u5b9e\u6211\u4eec\u662f\u4f7f\u7528\u8fd9\u4e2a\u51fd\u6570\u4f5c\u4e3a loss function\uff09: \n\n\n\n\n\u7528\u77e9\u9635\u8868\u793a\u8fd8\u53ef\u4ee5\u5199\u505a \n \u3002\u5982\u679c\u5bf9 w \u6c42\u5bfc\uff0c\u5f97\u5230 \n \uff0c\u4ee4\u5176\u7b49\u4e8e\u96f6\uff0c\u89e3\u51fa w \u5982\u4e0b\uff08\u5177\u4f53\u6c42\u5bfc\u8fc7\u7a0b\u4e3a: \nhttp://blog.csdn.net/nomadlx53/article/details/50849941\n \uff09:\n\n\n\n\n1.1\u3001\u7ebf\u6027\u56de\u5f52 \u987b\u77e5\u6982\u5ff5\n\n\n1.1.1\u3001\u77e9\u9635\u6c42\u9006\n\n\n\u56e0\u4e3a\u6211\u4eec\u5728\u8ba1\u7b97\u56de\u5f52\u65b9\u7a0b\u7684\u56de\u5f52\u7cfb\u6570\u65f6\uff0c\u7528\u5230\u7684\u8ba1\u7b97\u516c\u5f0f\u5982\u4e0b: \n\n\n\n\n\u9700\u8981\u5bf9\u77e9\u9635\u6c42\u9006\uff0c\u56e0\u6b64\u8fd9\u4e2a\u65b9\u7a0b\u53ea\u5728\u9006\u77e9\u9635\u5b58\u5728\u7684\u65f6\u5019\u9002\u7528\uff0c\u6211\u4eec\u5728\u7a0b\u5e8f\u4ee3\u7801\u4e2d\u5bf9\u6b64\u4f5c\u51fa\u5224\u65ad\u3002\n\u5224\u65ad\u77e9\u9635\u662f\u5426\u53ef\u9006\u7684\u4e00\u4e2a\u53ef\u9009\u65b9\u6848\u662f: \n\n\n\u5224\u65ad\u77e9\u9635\u7684\u884c\u5217\u5f0f\u662f\u5426\u4e3a 0\uff0c\u82e5\u4e3a 0 \uff0c\u77e9\u9635\u5c31\u4e0d\u5b58\u5728\u9006\u77e9\u9635\uff0c\u4e0d\u4e3a 0 \u7684\u8bdd\uff0c\u77e9\u9635\u624d\u5b58\u5728\u9006\u77e9\u9635\u3002\n\n\n1.1.2\u3001\u6700\u5c0f\u4e8c\u4e58\u6cd5\n\n\n\u6700\u5c0f\u4e8c\u4e58\u6cd5\uff08\u53c8\u79f0\u6700\u5c0f\u5e73\u65b9\u6cd5\uff09\u662f\u4e00\u79cd\u6570\u5b66\u4f18\u5316\u6280\u672f\u3002\u5b83\u901a\u8fc7\u6700\u5c0f\u5316\u8bef\u5dee\u7684\u5e73\u65b9\u548c\u5bfb\u627e\u6570\u636e\u7684\u6700\u4f73\u51fd\u6570\u5339\u914d\u3002\n\n\n1.2\u3001\u7ebf\u6027\u56de\u5f52 \u5de5\u4f5c\u539f\u7406\n\n\n\u8bfb\u5165\u6570\u636e\uff0c\u5c06\u6570\u636e\u7279\u5f81x\u3001\u7279\u5f81\u6807\u7b7ey\u5b58\u50a8\u5728\u77e9\u9635x\u3001y\u4e2d\n\u9a8c\u8bc1 x^Tx \u77e9\u9635\u662f\u5426\u53ef\u9006\n\u4f7f\u7528\u6700\u5c0f\u4e8c\u4e58\u6cd5\u6c42\u5f97 \u56de\u5f52\u7cfb\u6570 w \u7684\u6700\u4f73\u4f30\u8ba1\n\n\n\n\n1.3\u3001\u7ebf\u6027\u56de\u5f52 \u5f00\u53d1\u6d41\u7a0b\n\n\n\u6536\u96c6\u6570\u636e: \u91c7\u7528\u4efb\u610f\u65b9\u6cd5\u6536\u96c6\u6570\u636e\n\u51c6\u5907\u6570\u636e: \u56de\u5f52\u9700\u8981\u6570\u503c\u578b\u6570\u636e\uff0c\u6807\u79f0\u578b\u6570\u636e\u5c06\u88ab\u8f6c\u6362\u6210\u4e8c\u503c\u578b\u6570\u636e\n\u5206\u6790\u6570\u636e: \u7ed8\u51fa\u6570\u636e\u7684\u53ef\u89c6\u5316\u4e8c\u7ef4\u56fe\u5c06\u6709\u52a9\u4e8e\u5bf9\u6570\u636e\u505a\u51fa\u7406\u89e3\u548c\u5206\u6790\uff0c\u5728\u91c7\u7528\u7f29\u51cf\u6cd5\u6c42\u5f97\u65b0\u56de\u5f52\u7cfb\u6570\u4e4b\u540e\uff0c\u53ef\u4ee5\u5c06\u65b0\u62df\u5408\u7ebf\u7ed8\u5728\u56fe\u4e0a\u4f5c\u4e3a\u5bf9\u6bd4\n\u8bad\u7ec3\u7b97\u6cd5: \u627e\u5230\u56de\u5f52\u7cfb\u6570\n\u6d4b\u8bd5\u7b97\u6cd5: \u4f7f\u7528 R^2 \u6216\u8005\u9884\u6d4b\u503c\u548c\u6570\u636e\u7684\u62df\u5408\u5ea6\uff0c\u6765\u5206\u6790\u6a21\u578b\u7684\u6548\u679c\n\u4f7f\u7528\u7b97\u6cd5: \u4f7f\u7528\u56de\u5f52\uff0c\u53ef\u4ee5\u5728\u7ed9\u5b9a\u8f93\u5165\u7684\u65f6\u5019\u9884\u6d4b\u51fa\u4e00\u4e2a\u6570\u503c\uff0c\u8fd9\u662f\u5bf9\u5206\u7c7b\u65b9\u6cd5\u7684\u63d0\u5347\uff0c\u56e0\u4e3a\u8fd9\u6837\u53ef\u4ee5\u9884\u6d4b\u8fde\u7eed\u578b\u6570\u636e\u800c\u4e0d\u4ec5\u4ec5\u662f\u79bb\u6563\u7684\u7c7b\u522b\u6807\u7b7e\n\n\n\n\n1.4\u3001\u7ebf\u6027\u56de\u5f52 \u7b97\u6cd5\u7279\u70b9\n\n\n\u4f18\u70b9\uff1a\u7ed3\u679c\u6613\u4e8e\u7406\u89e3\uff0c\u8ba1\u7b97\u4e0a\u4e0d\u590d\u6742\u3002\n\u7f3a\u70b9\uff1a\u5bf9\u975e\u7ebf\u6027\u7684\u6570\u636e\u62df\u5408\u4e0d\u597d\u3002\n\u9002\u7528\u4e8e\u6570\u636e\u7c7b\u578b\uff1a\u6570\u503c\u578b\u548c\u6807\u79f0\u578b\u6570\u636e\u3002\n\n\n\n\n1.5\u3001\u7ebf\u6027\u56de\u5f52 \u9879\u76ee\u6848\u4f8b\n\n\n1.5.1\u3001\u7ebf\u6027\u56de\u5f52 \u9879\u76ee\u6982\u8ff0\n\n\n\u6839\u636e\u4e0b\u56fe\u4e2d\u7684\u70b9\uff0c\u627e\u51fa\u8be5\u6570\u636e\u7684\u6700\u4f73\u62df\u5408\u76f4\u7ebf\u3002\n\n\n\n\n\u6570\u636e\u683c\u5f0f\u4e3a: \n\n\nx0          x1          y \n1.000000    0.067732    3.176513\n1.000000    0.427810    3.816464\n1.000000    0.995731    4.550095\n1.000000    0.738336    4.256571\n\n\n\n\n1.5.2\u3001\u7ebf\u6027\u56de\u5f52 \u7f16\u5199\u4ee3\u7801\n\n\ndef\n \nloadDataSet\n(\nfileName\n):\n                 \n    \n \u52a0\u8f7d\u6570\u636e\n\n\n        \u89e3\u6790\u4ee5tab\u952e\u5206\u9694\u7684\u6587\u4ef6\u4e2d\u7684\u6d6e\u70b9\u6570\n\n\n    Returns\uff1a\n\n\n        dataMat \uff1a  feature \u5bf9\u5e94\u7684\u6570\u636e\u96c6\n\n\n        labelMat \uff1a feature \u5bf9\u5e94\u7684\u5206\u7c7b\u6807\u7b7e\uff0c\u5373\u7c7b\u522b\u6807\u7b7e\n\n\n\n    \n\n    \n# \u83b7\u53d6\u6837\u672c\u7279\u5f81\u7684\u603b\u6570\uff0c\u4e0d\u7b97\u6700\u540e\u7684\u76ee\u6807\u53d8\u91cf \n\n    \nnumFeat\n \n=\n \nlen\n(\nopen\n(\nfileName\n)\n.\nreadline\n()\n.\nsplit\n(\n\\t\n))\n \n-\n \n1\n \n    \ndataMat\n \n=\n \n[]\n\n    \nlabelMat\n \n=\n \n[]\n\n    \nfr\n \n=\n \nopen\n(\nfileName\n)\n\n    \nfor\n \nline\n \nin\n \nfr\n.\nreadlines\n():\n\n        \n# \u8bfb\u53d6\u6bcf\u4e00\u884c\n\n        \nlineArr\n \n=\n[]\n\n        \n# \u5220\u9664\u4e00\u884c\u4e2d\u4ee5tab\u5206\u9694\u7684\u6570\u636e\u524d\u540e\u7684\u7a7a\u767d\u7b26\u53f7\n\n        \ncurLine\n \n=\n \nline\n.\nstrip\n()\n.\nsplit\n(\n\\t\n)\n\n        \n# i \u4ece0\u52302\uff0c\u4e0d\u5305\u62ec2 \n\n        \nfor\n \ni\n \nin\n \nrange\n(\nnumFeat\n):\n\n            \n# \u5c06\u6570\u636e\u6dfb\u52a0\u5230lineArr List\u4e2d\uff0c\u6bcf\u4e00\u884c\u6570\u636e\u6d4b\u8bd5\u6570\u636e\u7ec4\u6210\u4e00\u4e2a\u884c\u5411\u91cf           \n\n            \nlineArr\n.\nappend\n(\nfloat\n(\ncurLine\n[\ni\n]))\n\n            \n# \u5c06\u6d4b\u8bd5\u6570\u636e\u7684\u8f93\u5165\u6570\u636e\u90e8\u5206\u5b58\u50a8\u5230dataMat \u7684List\u4e2d\n\n        \ndataMat\n.\nappend\n(\nlineArr\n)\n\n        \n# \u5c06\u6bcf\u4e00\u884c\u7684\u6700\u540e\u4e00\u4e2a\u6570\u636e\uff0c\u5373\u7c7b\u522b\uff0c\u6216\u8005\u53eb\u76ee\u6807\u53d8\u91cf\u5b58\u50a8\u5230labelMat List\u4e2d\n\n        \nlabelMat\n.\nappend\n(\nfloat\n(\ncurLine\n[\n-\n1\n]))\n\n    \nreturn\n \ndataMat\n,\nlabelMat\n\n\n\n\ndef\n \nstandRegres\n(\nxArr\n,\nyArr\n):\n\n    \n\n\n    Description\uff1a\n\n\n        \u7ebf\u6027\u56de\u5f52\n\n\n    Args:\n\n\n        xArr \uff1a\u8f93\u5165\u7684\u6837\u672c\u6570\u636e\uff0c\u5305\u542b\u6bcf\u4e2a\u6837\u672c\u6570\u636e\u7684 feature\n\n\n        yArr \uff1a\u5bf9\u5e94\u4e8e\u8f93\u5165\u6570\u636e\u7684\u7c7b\u522b\u6807\u7b7e\uff0c\u4e5f\u5c31\u662f\u6bcf\u4e2a\u6837\u672c\u5bf9\u5e94\u7684\u76ee\u6807\u53d8\u91cf\n\n\n    Returns:\n\n\n        ws\uff1a\u56de\u5f52\u7cfb\u6570\n\n\n    \n\n\n    \n# mat()\u51fd\u6570\u5c06xArr\uff0cyArr\u8f6c\u6362\u4e3a\u77e9\u9635 mat().T \u4ee3\u8868\u7684\u662f\u5bf9\u77e9\u9635\u8fdb\u884c\u8f6c\u7f6e\u64cd\u4f5c\n\n    \nxMat\n \n=\n \nmat\n(\nxArr\n)\n\n    \nyMat\n \n=\n \nmat\n(\nyArr\n)\n.\nT\n\n    \n# \u77e9\u9635\u4e58\u6cd5\u7684\u6761\u4ef6\u662f\u5de6\u77e9\u9635\u7684\u5217\u6570\u7b49\u4e8e\u53f3\u77e9\u9635\u7684\u884c\u6570\n\n    \nxTx\n \n=\n \nxMat\n.\nT\n*\nxMat\n\n    \n# \u56e0\u4e3a\u8981\u7528\u5230xTx\u7684\u9006\u77e9\u9635\uff0c\u6240\u4ee5\u4e8b\u5148\u9700\u8981\u786e\u5b9a\u8ba1\u7b97\u5f97\u5230\u7684xTx\u662f\u5426\u53ef\u9006\uff0c\u6761\u4ef6\u662f\u77e9\u9635\u7684\u884c\u5217\u5f0f\u4e0d\u4e3a0\n\n    \n# linalg.det() \u51fd\u6570\u662f\u7528\u6765\u6c42\u5f97\u77e9\u9635\u7684\u884c\u5217\u5f0f\u7684\uff0c\u5982\u679c\u77e9\u9635\u7684\u884c\u5217\u5f0f\u4e3a0\uff0c\u5219\u8fd9\u4e2a\u77e9\u9635\u662f\u4e0d\u53ef\u9006\u7684\uff0c\u5c31\u65e0\u6cd5\u8fdb\u884c\u63a5\u4e0b\u6765\u7684\u8fd0\u7b97                   \n\n    \nif\n \nlinalg\n.\ndet\n(\nxTx\n)\n \n==\n \n0.0\n:\n\n        \nprint\n \nThis matrix is singular, cannot do inverse\n \n        \nreturn\n\n    \n# \u6700\u5c0f\u4e8c\u4e58\u6cd5\n\n    \n# http://www.apache.wiki/pages/viewpage.action?pageId=5505133\n\n    \n# \u4e66\u4e2d\u7684\u516c\u5f0f\uff0c\u6c42\u5f97w\u7684\u6700\u4f18\u89e3\n\n    \nws\n \n=\n \nxTx\n.\nI\n \n*\n \n(\nxMat\n.\nT\n*\nyMat\n)\n            \n    \nreturn\n \nws\n\n\n\n\ndef\n \nregression1\n():\n\n    \nxArr\n,\n \nyArr\n \n=\n \nloadDataSet\n(\ninput/8.Regression/data.txt\n)\n\n    \nxMat\n \n=\n \nmat\n(\nxArr\n)\n\n    \nyMat\n \n=\n \nmat\n(\nyArr\n)\n\n    \nws\n \n=\n \nstandRegres\n(\nxArr\n,\n \nyArr\n)\n\n    \nfig\n \n=\n \nplt\n.\nfigure\n()\n\n    \nax\n \n=\n \nfig\n.\nadd_subplot\n(\n111\n)\n               \n#add_subplot(349)\u51fd\u6570\u7684\u53c2\u6570\u7684\u610f\u601d\u662f\uff0c\u5c06\u753b\u5e03\u5206\u62103\u884c4\u5217\u56fe\u50cf\u753b\u5728\u4ece\u5de6\u5230\u53f3\u4ece\u4e0a\u5230\u4e0b\u7b2c9\u5757\n\n    \nax\n.\nscatter\n(\nxMat\n[:,\n \n1\n]\n.\nflatten\n(),\n \nyMat\n.\nT\n[:,\n \n0\n]\n.\nflatten\n()\n.\nA\n[\n0\n])\n \n#scatter \u7684x\u662fxMat\u4e2d\u7684\u7b2c\u4e8c\u5217\uff0cy\u662fyMat\u7684\u7b2c\u4e00\u5217\n\n    \nxCopy\n \n=\n \nxMat\n.\ncopy\n()\n \n    \nxCopy\n.\nsort\n(\n0\n)\n\n    \nyHat\n \n=\n \nxCopy\n \n*\n \nws\n\n    \nax\n.\nplot\n(\nxCopy\n[:,\n \n1\n],\n \nyHat\n)\n\n    \nplt\n.\nshow\n()\n\n\n\n\n\u5b8c\u6574\u4ee3\u7801\u5730\u5740\n: \nhttps://github.com/apachecn/MachineLearning/blob/master/src/python/8.PredictiveNumericalDataRegression/regression.py\n\n\n1.5.3\u3001\u7ebf\u6027\u56de\u5f52 \u62df\u5408\u6548\u679c\n\n\n\n\n2\u3001\u5c40\u90e8\u52a0\u6743\u7ebf\u6027\u56de\u5f52\n\n\n\u7ebf\u6027\u56de\u5f52\u7684\u4e00\u4e2a\u95ee\u9898\u662f\u6709\u53ef\u80fd\u51fa\u73b0\u6b20\u62df\u5408\u73b0\u8c61\uff0c\u56e0\u4e3a\u5b83\u6c42\u7684\u662f\u5177\u6709\u6700\u5c0f\u5747\u65b9\u5dee\u7684\u65e0\u504f\u4f30\u8ba1\u3002\u663e\u800c\u6613\u89c1\uff0c\u5982\u679c\u6a21\u578b\u6b20\u62df\u5408\u5c06\u4e0d\u80fd\u53d6\u5f97\u6700\u597d\u7684\u9884\u6d4b\u6548\u679c\u3002\u6240\u4ee5\u6709\u4e9b\u65b9\u6cd5\u5141\u8bb8\u5728\u4f30\u8ba1\u4e2d\u5f15\u5165\u4e00\u4e9b\u504f\u5dee\uff0c\u4ece\u800c\u964d\u4f4e\u9884\u6d4b\u7684\u5747\u65b9\u8bef\u5dee\u3002\n\n\n\u4e00\u4e2a\u65b9\u6cd5\u662f\u5c40\u90e8\u52a0\u6743\u7ebf\u6027\u56de\u5f52\uff08Locally Weighted Linear Regression\uff0cLWLR\uff09\u3002\u5728\u8fd9\u4e2a\u7b97\u6cd5\u4e2d\uff0c\u6211\u4eec\u7ed9\u9884\u6d4b\u70b9\u9644\u8fd1\u7684\u6bcf\u4e2a\u70b9\u8d4b\u4e88\u4e00\u5b9a\u7684\u6743\u91cd\uff0c\u7136\u540e\u4e0e \u7ebf\u6027\u56de\u5f52 \u7c7b\u4f3c\uff0c\u5728\u8fd9\u4e2a\u5b50\u96c6\u4e0a\u57fa\u4e8e\u6700\u5c0f\u5747\u65b9\u8bef\u5dee\u6765\u8fdb\u884c\u666e\u901a\u7684\u56de\u5f52\u3002\u6211\u4eec\u9700\u8981\u6700\u5c0f\u5316\u7684\u76ee\u6807\u51fd\u6570\u5927\u81f4\u4e3a:\n\n\n\n\n\u4e0e kNN \u4e00\u6837\uff0c\u8fd9\u79cd\u7b97\u6cd5\u6bcf\u6b21\u9884\u6d4b\u5747\u9700\u8981\u4e8b\u5148\u9009\u53d6\u51fa\u5bf9\u5e94\u7684\u6570\u636e\u5b50\u96c6\u3002\u8be5\u7b97\u6cd5\u89e3\u51fa\u56de\u5f52\u7cfb\u6570 w \u7684\u5f62\u5f0f\u5982\u4e0b: \n\n\n\n\n\u5176\u4e2d w \u662f\u4e00\u4e2a\u77e9\u9635\uff0c\u7528\u6765\u7ed9\u6bcf\u4e2a\u6570\u636e\u70b9\u8d4b\u4e88\u6743\u91cd\u3002\n\n\nLWLR \u4f7f\u7528 \u201c\u6838\u201d\uff08\u4e0e\u652f\u6301\u5411\u91cf\u673a\u4e2d\u7684\u6838\u7c7b\u4f3c\uff09\u6765\u5bf9\u9644\u8fd1\u7684\u70b9\u8d4b\u4e88\u66f4\u9ad8\u7684\u6743\u91cd\u3002\u6838\u7684\u7c7b\u578b\u53ef\u4ee5\u81ea\u7531\u9009\u62e9\uff0c\u6700\u5e38\u7528\u7684\u6838\u5c31\u662f\u9ad8\u65af\u6838\uff0c\u9ad8\u65af\u6838\u5bf9\u5e94\u7684\u6743\u91cd\u5982\u4e0b: \n\n\n\n\n\u8fd9\u6837\u5c31\u6784\u5efa\u4e86\u4e00\u4e2a\u53ea\u542b\u5bf9\u89d2\u5143\u7d20\u7684\u6743\u91cd\u77e9\u9635 \nw\n\uff0c\u5e76\u4e14\u70b9 x \u4e0e x(i) \u8d8a\u8fd1\uff0cw(i, i) \u5c06\u4f1a\u8d8a\u5927\u3002\u4e0a\u8ff0\u516c\u5f0f\u4e2d\u5305\u542b\u4e00\u4e2a\u9700\u8981\u7528\u6237\u6307\u5b9a\u7684\u53c2\u6570 k \uff0c\u5b83\u51b3\u5b9a\u4e86\u5bf9\u9644\u8fd1\u7684\u70b9\u8d4b\u4e88\u591a\u5927\u7684\u6743\u91cd\uff0c\u8fd9\u4e5f\u662f\u4f7f\u7528 LWLR \u65f6\u552f\u4e00\u9700\u8981\u8003\u8651\u7684\u53c2\u6570\uff0c\u4e0b\u9762\u7684\u56fe\u7ed9\u51fa\u4e86\u53c2\u6570 k \u4e0e\u6743\u91cd\u7684\u5173\u7cfb\u3002\n\n\n\n\n\u4e0a\u9762\u7684\u56fe\u662f \u6bcf\u4e2a\u70b9\u7684\u6743\u91cd\u56fe\uff08\u5047\u5b9a\u6211\u4eec\u6b63\u9884\u6d4b\u7684\u70b9\u662f x = 0.5\uff09\uff0c\u6700\u4e0a\u9762\u7684\u56fe\u662f\u539f\u59cb\u6570\u636e\u96c6\uff0c\u7b2c\u4e8c\u4e2a\u56fe\u663e\u793a\u4e86\u5f53 k = 0.5 \u65f6\uff0c\u5927\u90e8\u5206\u7684\u6570\u636e\u90fd\u7528\u4e8e\u8bad\u7ec3\u56de\u5f52\u6a21\u578b\uff1b\u800c\u6700\u4e0b\u9762\u7684\u56fe\u663e\u793a\u5f53 k=0.01 \u65f6\uff0c\u4ec5\u6709\u5f88\u5c11\u7684\u5c40\u90e8\u70b9\u88ab\u7528\u4e8e\u8bad\u7ec3\u56de\u5f52\u6a21\u578b\u3002\n\n\n2.1\u3001\u5c40\u90e8\u52a0\u6743\u7ebf\u6027\u56de\u5f52 \u5de5\u4f5c\u539f\u7406\n\n\n\u8bfb\u5165\u6570\u636e\uff0c\u5c06\u6570\u636e\u7279\u5f81x\u3001\u7279\u5f81\u6807\u7b7ey\u5b58\u50a8\u5728\u77e9\u9635x\u3001y\u4e2d\n\u5229\u7528\u9ad8\u65af\u6838\u6784\u9020\u4e00\u4e2a\u6743\u91cd\u77e9\u9635 W\uff0c\u5bf9\u9884\u6d4b\u70b9\u9644\u8fd1\u7684\u70b9\u65bd\u52a0\u6743\u91cd\n\u9a8c\u8bc1 X^TWX \u77e9\u9635\u662f\u5426\u53ef\u9006\n\u4f7f\u7528\u6700\u5c0f\u4e8c\u4e58\u6cd5\u6c42\u5f97 \u56de\u5f52\u7cfb\u6570 w \u7684\u6700\u4f73\u4f30\u8ba1\n\n\n\n\n2.2\u3001\u5c40\u90e8\u52a0\u6743\u7ebf\u6027\u56de\u5f52 \u9879\u76ee\u6848\u4f8b\n\n\n2.2.1\u3001\u5c40\u90e8\u52a0\u6743\u7ebf\u6027\u56de\u5f52 \u9879\u76ee\u6982\u8ff0\n\n\n\u6211\u4eec\u4ecd\u7136\u4f7f\u7528\u4e0a\u9762 \u7ebf\u6027\u56de\u5f52 \u7684\u6570\u636e\u96c6\uff0c\u5bf9\u8fd9\u4e9b\u70b9\u8fdb\u884c\u4e00\u4e2a \u5c40\u90e8\u52a0\u6743\u7ebf\u6027\u56de\u5f52 \u7684\u62df\u5408\u3002\n\n\n\n\n\u6570\u636e\u683c\u5f0f\u4e3a: \n\n\n1.000000    0.067732    3.176513\n1.000000    0.427810    3.816464\n1.000000    0.995731    4.550095\n1.000000    0.738336    4.256571\n\n\n\n\n2.2.2\u3001\u5c40\u90e8\u52a0\u6743\u7ebf\u6027\u56de\u5f52 \u7f16\u5199\u4ee3\u7801\n\n\n    \n# \u5c40\u90e8\u52a0\u6743\u7ebf\u6027\u56de\u5f52\n\n\ndef\n \nlwlr\n(\ntestPoint\n,\nxArr\n,\nyArr\n,\nk\n=\n1.0\n):\n\n    \n\n\n        Description\uff1a\n\n\n            \u5c40\u90e8\u52a0\u6743\u7ebf\u6027\u56de\u5f52\uff0c\u5728\u5f85\u9884\u6d4b\u70b9\u9644\u8fd1\u7684\u6bcf\u4e2a\u70b9\u8d4b\u4e88\u4e00\u5b9a\u7684\u6743\u91cd\uff0c\u5728\u5b50\u96c6\u4e0a\u57fa\u4e8e\u6700\u5c0f\u5747\u65b9\u5dee\u6765\u8fdb\u884c\u666e\u901a\u7684\u56de\u5f52\u3002\n\n\n        Args\uff1a\n\n\n            testPoint\uff1a\u6837\u672c\u70b9\n\n\n            xArr\uff1a\u6837\u672c\u7684\u7279\u5f81\u6570\u636e\uff0c\u5373 feature\n\n\n            yArr\uff1a\u6bcf\u4e2a\u6837\u672c\u5bf9\u5e94\u7684\u7c7b\u522b\u6807\u7b7e\uff0c\u5373\u76ee\u6807\u53d8\u91cf\n\n\n            k:\u5173\u4e8e\u8d4b\u4e88\u6743\u91cd\u77e9\u9635\u7684\u6838\u7684\u4e00\u4e2a\u53c2\u6570\uff0c\u4e0e\u6743\u91cd\u7684\u8870\u51cf\u901f\u7387\u6709\u5173\n\n\n        Returns:\n\n\n            testPoint * ws\uff1a\u6570\u636e\u70b9\u4e0e\u5177\u6709\u6743\u91cd\u7684\u7cfb\u6570\u76f8\u4e58\u5f97\u5230\u7684\u9884\u6d4b\u70b9\n\n\n        Notes:\n\n\n            \u8fd9\u5176\u4e2d\u4f1a\u7528\u5230\u8ba1\u7b97\u6743\u91cd\u7684\u516c\u5f0f\uff0cw = e^((x^((i))-x) / -2k^2)\n\n\n            \u7406\u89e3\uff1ax\u4e3a\u67d0\u4e2a\u9884\u6d4b\u70b9\uff0cx^((i))\u4e3a\u6837\u672c\u70b9\uff0c\u6837\u672c\u70b9\u8ddd\u79bb\u9884\u6d4b\u70b9\u8d8a\u8fd1\uff0c\u8d21\u732e\u7684\u8bef\u5dee\u8d8a\u5927\uff08\u6743\u503c\u8d8a\u5927\uff09\uff0c\u8d8a\u8fdc\u5219\u8d21\u732e\u7684\u8bef\u5dee\u8d8a\u5c0f\uff08\u6743\u503c\u8d8a\u5c0f\uff09\u3002\n\n\n            \u5173\u4e8e\u9884\u6d4b\u70b9\u7684\u9009\u53d6\uff0c\u5728\u6211\u7684\u4ee3\u7801\u4e2d\u53d6\u7684\u662f\u6837\u672c\u70b9\u3002\u5176\u4e2dk\u662f\u5e26\u5bbd\u53c2\u6570\uff0c\u63a7\u5236w\uff08\u949f\u5f62\u51fd\u6570\uff09\u7684\u5bbd\u7a84\u7a0b\u5ea6\uff0c\u7c7b\u4f3c\u4e8e\u9ad8\u65af\u51fd\u6570\u7684\u6807\u51c6\u5dee\u3002\n\n\n            \u7b97\u6cd5\u601d\u8def\uff1a\u5047\u8bbe\u9884\u6d4b\u70b9\u53d6\u6837\u672c\u70b9\u4e2d\u7684\u7b2ci\u4e2a\u6837\u672c\u70b9\uff08\u5171m\u4e2a\u6837\u672c\u70b9\uff09\uff0c\u904d\u53861\u5230m\u4e2a\u6837\u672c\u70b9\uff08\u542b\u7b2ci\u4e2a\uff09\uff0c\u7b97\u51fa\u6bcf\u4e00\u4e2a\u6837\u672c\u70b9\u4e0e\u9884\u6d4b\u70b9\u7684\u8ddd\u79bb\uff0c\n\n\n            \u4e5f\u5c31\u53ef\u4ee5\u8ba1\u7b97\u51fa\u6bcf\u4e2a\u6837\u672c\u8d21\u732e\u8bef\u5dee\u7684\u6743\u503c\uff0c\u53ef\u4ee5\u770b\u51faw\u662f\u4e00\u4e2a\u6709m\u4e2a\u5143\u7d20\u7684\u5411\u91cf\uff08\u5199\u6210\u5bf9\u89d2\u9635\u5f62\u5f0f\uff09\u3002\n\n\n    \n\n    \n# mat() \u51fd\u6570\u662f\u5c06array\u8f6c\u6362\u4e3a\u77e9\u9635\u7684\u51fd\u6570\uff0c mat().T \u662f\u8f6c\u6362\u4e3a\u77e9\u9635\u4e4b\u540e\uff0c\u518d\u8fdb\u884c\u8f6c\u7f6e\u64cd\u4f5c\n\n    \nxMat\n \n=\n \nmat\n(\nxArr\n)\n\n    \nyMat\n \n=\n \nmat\n(\nyArr\n)\n.\nT\n\n    \n# \u83b7\u5f97xMat\u77e9\u9635\u7684\u884c\u6570\n\n    \nm\n \n=\n \nshape\n(\nxMat\n)[\n0\n]\n\n    \n# eye()\u8fd4\u56de\u4e00\u4e2a\u5bf9\u89d2\u7ebf\u5143\u7d20\u4e3a1\uff0c\u5176\u4ed6\u5143\u7d20\u4e3a0\u7684\u4e8c\u7ef4\u6570\u7ec4\uff0c\u521b\u5efa\u6743\u91cd\u77e9\u9635weights\uff0c\u8be5\u77e9\u9635\u4e3a\u6bcf\u4e2a\u6837\u672c\u70b9\u521d\u59cb\u5316\u4e86\u4e00\u4e2a\u6743\u91cd                   \n\n    \nweights\n \n=\n \nmat\n(\neye\n((\nm\n)))\n\n    \nfor\n \nj\n \nin\n \nrange\n(\nm\n):\n\n        \n# testPoint \u7684\u5f62\u5f0f\u662f \u4e00\u4e2a\u884c\u5411\u91cf\u7684\u5f62\u5f0f\n\n        \n# \u8ba1\u7b97 testPoint \u4e0e\u8f93\u5165\u6837\u672c\u70b9\u4e4b\u95f4\u7684\u8ddd\u79bb\uff0c\u7136\u540e\u4e0b\u9762\u8ba1\u7b97\u51fa\u6bcf\u4e2a\u6837\u672c\u8d21\u732e\u8bef\u5dee\u7684\u6743\u503c\n\n        \ndiffMat\n \n=\n \ntestPoint\n \n-\n \nxMat\n[\nj\n,:]\n\n        \n# k\u63a7\u5236\u8870\u51cf\u7684\u901f\u5ea6\n\n        \nweights\n[\nj\n,\nj\n]\n \n=\n \nexp\n(\ndiffMat\n*\ndiffMat\n.\nT\n/\n(\n-\n2.0\n*\nk\n**\n2\n))\n\n    \n# \u6839\u636e\u77e9\u9635\u4e58\u6cd5\u8ba1\u7b97 xTx \uff0c\u5176\u4e2d\u7684 weights \u77e9\u9635\u662f\u6837\u672c\u70b9\u5bf9\u5e94\u7684\u6743\u91cd\u77e9\u9635\n\n    \nxTx\n \n=\n \nxMat\n.\nT\n \n*\n \n(\nweights\n \n*\n \nxMat\n)\n\n    \nif\n \nlinalg\n.\ndet\n(\nxTx\n)\n \n==\n \n0.0\n:\n\n        \nprint\n \n(\nThis matrix is singular, cannot do inverse\n)\n\n        \nreturn\n\n    \n# \u8ba1\u7b97\u51fa\u56de\u5f52\u7cfb\u6570\u7684\u4e00\u4e2a\u4f30\u8ba1\n\n    \nws\n \n=\n \nxTx\n.\nI\n \n*\n \n(\nxMat\n.\nT\n \n*\n \n(\nweights\n \n*\n \nyMat\n))\n\n    \nreturn\n \ntestPoint\n \n*\n \nws\n\n\n\ndef\n \nlwlrTest\n(\ntestArr\n,\nxArr\n,\nyArr\n,\nk\n=\n1.0\n):\n\n    \n\n\n        Description\uff1a\n\n\n            \u6d4b\u8bd5\u5c40\u90e8\u52a0\u6743\u7ebf\u6027\u56de\u5f52\uff0c\u5bf9\u6570\u636e\u96c6\u4e2d\u6bcf\u4e2a\u70b9\u8c03\u7528 lwlr() \u51fd\u6570\n\n\n        Args\uff1a\n\n\n            testArr\uff1a\u6d4b\u8bd5\u6240\u7528\u7684\u6240\u6709\u6837\u672c\u70b9\n\n\n            xArr\uff1a\u6837\u672c\u7684\u7279\u5f81\u6570\u636e\uff0c\u5373 feature\n\n\n            yArr\uff1a\u6bcf\u4e2a\u6837\u672c\u5bf9\u5e94\u7684\u7c7b\u522b\u6807\u7b7e\uff0c\u5373\u76ee\u6807\u53d8\u91cf\n\n\n            k\uff1a\u63a7\u5236\u6838\u51fd\u6570\u7684\u8870\u51cf\u901f\u7387\n\n\n        Returns\uff1a\n\n\n            yHat\uff1a\u9884\u6d4b\u70b9\u7684\u4f30\u8ba1\u503c\n\n\n    \n\n    \n# \u5f97\u5230\u6837\u672c\u70b9\u7684\u603b\u6570\n\n    \nm\n \n=\n \nshape\n(\ntestArr\n)[\n0\n]\n\n    \n# \u6784\u5efa\u4e00\u4e2a\u5168\u90e8\u90fd\u662f 0 \u7684 1 * m \u7684\u77e9\u9635\n\n    \nyHat\n \n=\n \nzeros\n(\nm\n)\n\n    \n# \u5faa\u73af\u6240\u6709\u7684\u6570\u636e\u70b9\uff0c\u5e76\u5c06lwlr\u8fd0\u7528\u4e8e\u6240\u6709\u7684\u6570\u636e\u70b9 \n\n    \nfor\n \ni\n \nin\n \nrange\n(\nm\n):\n\n        \nyHat\n[\ni\n]\n \n=\n \nlwlr\n(\ntestArr\n[\ni\n],\nxArr\n,\nyArr\n,\nk\n)\n\n    \n# \u8fd4\u56de\u4f30\u8ba1\u503c\n\n    \nreturn\n \nyHat\n\n\n\ndef\n \nlwlrTestPlot\n(\nxArr\n,\nyArr\n,\nk\n=\n1.0\n):\n  \n    \n\n\n        Description:\n\n\n            \u9996\u5148\u5c06 X \u6392\u5e8f\uff0c\u5176\u4f59\u7684\u90fd\u4e0elwlrTest\u76f8\u540c\uff0c\u8fd9\u6837\u66f4\u5bb9\u6613\u7ed8\u56fe\n\n\n        Args\uff1a\n\n\n            xArr\uff1a\u6837\u672c\u7684\u7279\u5f81\u6570\u636e\uff0c\u5373 feature\n\n\n            yArr\uff1a\u6bcf\u4e2a\u6837\u672c\u5bf9\u5e94\u7684\u7c7b\u522b\u6807\u7b7e\uff0c\u5373\u76ee\u6807\u53d8\u91cf\uff0c\u5b9e\u9645\u503c\n\n\n            k\uff1a\u63a7\u5236\u6838\u51fd\u6570\u7684\u8870\u51cf\u901f\u7387\u7684\u6709\u5173\u53c2\u6570\uff0c\u8fd9\u91cc\u8bbe\u5b9a\u7684\u662f\u5e38\u91cf\u503c 1\n\n\n        Return\uff1a\n\n\n            yHat\uff1a\u6837\u672c\u70b9\u7684\u4f30\u8ba1\u503c\n\n\n            xCopy\uff1axArr\u7684\u590d\u5236\n\n\n    \n\n    \n# \u751f\u6210\u4e00\u4e2a\u4e0e\u76ee\u6807\u53d8\u91cf\u6570\u76ee\u76f8\u540c\u7684 0 \u5411\u91cf\n\n    \nyHat\n \n=\n \nzeros\n(\nshape\n(\nyArr\n))\n\n    \n# \u5c06 xArr \u8f6c\u6362\u4e3a \u77e9\u9635\u5f62\u5f0f\n\n    \nxCopy\n \n=\n \nmat\n(\nxArr\n)\n\n    \n# \u6392\u5e8f\n\n    \nxCopy\n.\nsort\n(\n0\n)\n\n    \n# \u5f00\u59cb\u5faa\u73af\uff0c\u4e3a\u6bcf\u4e2a\u6837\u672c\u70b9\u8fdb\u884c\u5c40\u90e8\u52a0\u6743\u7ebf\u6027\u56de\u5f52\uff0c\u5f97\u5230\u6700\u7ec8\u7684\u76ee\u6807\u53d8\u91cf\u4f30\u8ba1\u503c\n\n    \nfor\n \ni\n \nin\n \nrange\n(\nshape\n(\nxArr\n)[\n0\n]):\n\n        \nyHat\n[\ni\n]\n \n=\n \nlwlr\n(\nxCopy\n[\ni\n],\nxArr\n,\nyArr\n,\nk\n)\n\n    \nreturn\n \nyHat\n,\nxCopy\n\n\n\n\n#test for LWLR\n\n\ndef\n \nregression2\n():\n\n    \nxArr\n,\n \nyArr\n \n=\n \nloadDataSet\n(\ninput/8.Regression/data.txt\n)\n\n    \nyHat\n \n=\n \nlwlrTest\n(\nxArr\n,\n \nxArr\n,\n \nyArr\n,\n \n0.003\n)\n\n    \nxMat\n \n=\n \nmat\n(\nxArr\n)\n\n    \nsrtInd\n \n=\n \nxMat\n[:,\n1\n]\n.\nargsort\n(\n0\n)\n           \n#argsort()\u51fd\u6570\u662f\u5c06x\u4e2d\u7684\u5143\u7d20\u4ece\u5c0f\u5230\u5927\u6392\u5217\uff0c\u63d0\u53d6\u5176\u5bf9\u5e94\u7684index(\u7d22\u5f15)\uff0c\u7136\u540e\u8f93\u51fa\n\n    \nxSort\n=\nxMat\n[\nsrtInd\n][:,\n0\n,:]\n\n    \nfig\n \n=\n \nplt\n.\nfigure\n()\n\n    \nax\n \n=\n \nfig\n.\nadd_subplot\n(\n111\n)\n\n    \nax\n.\nplot\n(\nxSort\n[:,\n1\n],\n \nyHat\n[\nsrtInd\n])\n\n    \nax\n.\nscatter\n(\nxMat\n[:,\n1\n]\n.\nflatten\n()\n.\nA\n[\n0\n],\n \nmat\n(\nyArr\n)\n.\nT\n.\nflatten\n()\n.\nA\n[\n0\n]\n \n,\n \ns\n=\n2\n,\n \nc\n=\nred\n)\n\n    \nplt\n.\nshow\n()\n\n\n\n\n\u5b8c\u6574\u4ee3\u7801\u5730\u5740\n: \nhttps://github.com/apachecn/MachineLearning/blob/master/src/python/8.PredictiveNumericalDataRegression/regression.py\n\n\n2.2.3\u3001\u5c40\u90e8\u52a0\u6743\u7ebf\u6027\u56de\u5f52 \u62df\u5408\u6548\u679c\n\n\n\n\n\u4e0a\u56fe\u4f7f\u7528\u4e86 3 \u79cd\u4e0d\u540c\u5e73\u6ed1\u503c\u7ed8\u51fa\u7684\u5c40\u90e8\u52a0\u6743\u7ebf\u6027\u56de\u5f52\u7684\u7ed3\u679c\u3002\u4e0a\u56fe\u4e2d\u7684\u5e73\u6ed1\u7cfb\u6570 k =1.0\uff0c\u4e2d\u56fe k = 0.01\uff0c\u4e0b\u56fe k = 0.003 \u3002\u53ef\u4ee5\u770b\u5230\uff0ck = 1.0 \u65f6\u7684\u6a21\u578b\u6548\u679c\u4e0e\u6700\u5c0f\u4e8c\u4e58\u6cd5\u5dee\u4e0d\u591a\uff0ck=0.01\u65f6\u8be5\u6a21\u578b\u53ef\u4ee5\u6316\u51fa\u6570\u636e\u7684\u6f5c\u5728\u89c4\u5f8b\uff0c\u800c k=0.003\u65f6\u5219\u8003\u8651\u4e86\u592a\u591a\u7684\u566a\u58f0\uff0c\u8fdb\u800c\u5bfc\u81f4\u4e86\u8fc7\u62df\u5408\u73b0\u8c61\u3002\n\n\n2.3\u3001\u5c40\u90e8\u52a0\u6743\u7ebf\u6027\u56de\u5f52 \u6ce8\u610f\u4e8b\u9879\n\n\n\u5c40\u90e8\u52a0\u6743\u7ebf\u6027\u56de\u5f52\u4e5f\u5b58\u5728\u4e00\u4e2a\u95ee\u9898\uff0c\u5373\u589e\u52a0\u4e86\u8ba1\u7b97\u91cf\uff0c\u56e0\u4e3a\u5b83\u5bf9\u6bcf\u4e2a\u70b9\u505a\u9884\u6d4b\u65f6\u90fd\u5fc5\u987b\u4f7f\u7528\u6574\u4e2a\u6570\u636e\u96c6\u3002\n\n\n3\u3001\u7ebf\u6027\u56de\u5f52 \n \u5c40\u90e8\u52a0\u6743\u7ebf\u6027\u56de\u5f52 \u9879\u76ee\u6848\u4f8b\n\n\n\u5230\u6b64\u4e3a\u6b62\uff0c\u6211\u4eec\u5df2\u7ecf\u4ecb\u7ecd\u4e86\u627e\u51fa\u6700\u4f73\u62df\u5408\u76f4\u7ebf\u7684\u4e24\u79cd\u65b9\u6cd5\uff0c\u4e0b\u9762\u6211\u4eec\u7528\u8fd9\u4e9b\u6280\u672f\u6765\u9884\u6d4b\u9c8d\u9c7c\u7684\u5e74\u9f84\u3002\n\n\n3.1\u3001\u9879\u76ee\u6982\u8ff0\n\n\n\u6211\u4eec\u6709\u4e00\u4efd\u6765\u81ea UCI \u7684\u6570\u636e\u96c6\u5408\u7684\u6570\u636e\uff0c\u8bb0\u5f55\u4e86\u9c8d\u9c7c\uff08\u4e00\u79cd\u4ecb\u58f3\u7c7b\u6c34\u751f\u52a8\u7269\uff09\u7684\u5e74\u9f84\u3002\u9c8d\u9c7c\u5e74\u9f84\u53ef\u4ee5\u4ece\u9c8d\u9c7c\u58f3\u7684\u5c42\u6570\u63a8\u7b97\u5f97\u5230\u3002\n\n\n3.2\u3001\u5f00\u53d1\u6d41\u7a0b\n\n\n\u6536\u96c6\u6570\u636e: \u91c7\u7528\u4efb\u610f\u65b9\u6cd5\u6536\u96c6\u6570\u636e\n\u51c6\u5907\u6570\u636e: \u56de\u5f52\u9700\u8981\u6570\u503c\u578b\u6570\u636e\uff0c\u6807\u79f0\u578b\u6570\u636e\u5c06\u88ab\u8f6c\u6362\u6210\u4e8c\u503c\u578b\u6570\u636e\n\u5206\u6790\u6570\u636e: \u7ed8\u51fa\u6570\u636e\u7684\u53ef\u89c6\u5316\u4e8c\u7ef4\u56fe\u5c06\u6709\u52a9\u4e8e\u5bf9\u6570\u636e\u505a\u51fa\u7406\u89e3\u548c\u5206\u6790\uff0c\u5728\u91c7\u7528\u7f29\u51cf\u6cd5\u6c42\u5f97\u65b0\u56de\u5f52\u7cfb\u6570\u4e4b\u540e\uff0c\u53ef\u4ee5\u5c06\u65b0\u62df\u5408\u7ebf\u7ed8\u5728\u56fe\u4e0a\u4f5c\u4e3a\u5bf9\u6bd4\n\u8bad\u7ec3\u7b97\u6cd5: \u627e\u5230\u56de\u5f52\u7cfb\u6570\n\u6d4b\u8bd5\u7b97\u6cd5: \u4f7f\u7528 rssError()\u51fd\u6570 \u8ba1\u7b97\u9884\u6d4b\u8bef\u5dee\u7684\u5927\u5c0f\uff0c\u6765\u5206\u6790\u6a21\u578b\u7684\u6548\u679c\n\u4f7f\u7528\u7b97\u6cd5: \u4f7f\u7528\u56de\u5f52\uff0c\u53ef\u4ee5\u5728\u7ed9\u5b9a\u8f93\u5165\u7684\u65f6\u5019\u9884\u6d4b\u51fa\u4e00\u4e2a\u6570\u503c\uff0c\u8fd9\u662f\u5bf9\u5206\u7c7b\u65b9\u6cd5\u7684\u63d0\u5347\uff0c\u56e0\u4e3a\u8fd9\u6837\u53ef\u4ee5\u9884\u6d4b\u8fde\u7eed\u578b\u6570\u636e\u800c\u4e0d\u4ec5\u4ec5\u662f\u79bb\u6563\u7684\u7c7b\u522b\u6807\u7b7e\n\n\n\n\n\n\n\u6536\u96c6\u6570\u636e: \u91c7\u7528\u4efb\u610f\u65b9\u6cd5\u6536\u96c6\u6570\u636e\n\n\n\u51c6\u5907\u6570\u636e: \u56de\u5f52\u9700\u8981\u6570\u503c\u578b\u6570\u636e\uff0c\u6807\u79f0\u578b\u6570\u636e\u5c06\u88ab\u8f6c\u6362\u6210\u4e8c\u503c\u578b\u6570\u636e\n\n\n\n\n\u6570\u636e\u5b58\u50a8\u683c\u5f0f:\n\n\n1   0.455   0.365   0.095   0.514   0.2245  0.101   0.15    15\n1   0.35    0.265   0.09    0.2255  0.0995  0.0485  0.07    7\n-1  0.53    0.42    0.135   0.677   0.2565  0.1415  0.21    9\n1   0.44    0.365   0.125   0.516   0.2155  0.114   0.155   10\n0   0.33    0.255   0.08    0.205   0.0895  0.0395  0.055   7\n\n\n\n\n\n\n\u5206\u6790\u6570\u636e: \u7ed8\u51fa\u6570\u636e\u7684\u53ef\u89c6\u5316\u4e8c\u7ef4\u56fe\u5c06\u6709\u52a9\u4e8e\u5bf9\u6570\u636e\u505a\u51fa\u7406\u89e3\u548c\u5206\u6790\uff0c\u5728\u91c7\u7528\u7f29\u51cf\u6cd5\u6c42\u5f97\u65b0\u56de\u5f52\u7cfb\u6570\u4e4b\u540e\uff0c\u53ef\u4ee5\u5c06\u65b0\u62df\u5408\u7ebf\u7ed8\u5728\u56fe\u4e0a\u4f5c\u4e3a\u5bf9\u6bd4\n\n\n\u8bad\u7ec3\u7b97\u6cd5: \u627e\u5230\u56de\u5f52\u7cfb\u6570\n\n\n\n\n\u4f7f\u7528\u4e0a\u9762\u6211\u4eec\u8bb2\u5230\u7684 \u5c40\u90e8\u52a0\u6743\u7ebf\u6027\u56de\u5f52 \u8bad\u7ec3\u7b97\u6cd5\uff0c\u6c42\u51fa\u56de\u5f52\u7cfb\u6570\n\n\n\n\n\u6d4b\u8bd5\u7b97\u6cd5: \u4f7f\u7528 rssError()\u51fd\u6570 \u8ba1\u7b97\u9884\u6d4b\u8bef\u5dee\u7684\u5927\u5c0f\uff0c\u6765\u5206\u6790\u6a21\u578b\u7684\u6548\u679c\n\n\n\n\n# test for abloneDataSet\n\n\ndef\n \nabaloneTest\n():\n\n    \n\n\n    Desc:\n\n\n        \u9884\u6d4b\u9c8d\u9c7c\u7684\u5e74\u9f84\n\n\n    Args:\n\n\n        None\n\n\n    Returns:\n\n\n        None\n\n\n    \n\n    \n# \u52a0\u8f7d\u6570\u636e\n\n    \nabX\n,\n \nabY\n \n=\n \nloadDataSet\n(\ninput/8.Regression/abalone.txt\n)\n\n    \n# \u4f7f\u7528\u4e0d\u540c\u7684\u6838\u8fdb\u884c\u9884\u6d4b\n\n    \noldyHat01\n \n=\n \nlwlrTest\n(\nabX\n[\n0\n:\n99\n],\n \nabX\n[\n0\n:\n99\n],\n \nabY\n[\n0\n:\n99\n],\n \n0.1\n)\n\n    \noldyHat1\n \n=\n \nlwlrTest\n(\nabX\n[\n0\n:\n99\n],\n \nabX\n[\n0\n:\n99\n],\n \nabY\n[\n0\n:\n99\n],\n \n1\n)\n\n    \noldyHat10\n \n=\n \nlwlrTest\n(\nabX\n[\n0\n:\n99\n],\n \nabX\n[\n0\n:\n99\n],\n \nabY\n[\n0\n:\n99\n],\n \n10\n)\n   \n    \n# \u6253\u5370\u51fa\u4e0d\u540c\u7684\u6838\u9884\u6d4b\u503c\u4e0e\u8bad\u7ec3\u6570\u636e\u96c6\u4e0a\u7684\u771f\u5b9e\u503c\u4e4b\u95f4\u7684\u8bef\u5dee\u5927\u5c0f\n\n    \nprint\n \nold yHat01 error Size is :\n \n,\n \nrssError\n(\nabY\n[\n0\n:\n99\n],\n \noldyHat01\n.\nT\n)\n\n    \nprint\n \nold yHat1 error Size is :\n \n,\n \nrssError\n(\nabY\n[\n0\n:\n99\n],\n \noldyHat1\n.\nT\n)\n\n    \nprint\n \nold yHat10 error Size is :\n \n,\n \nrssError\n(\nabY\n[\n0\n:\n99\n],\n \noldyHat10\n.\nT\n)\n\n\n    \n# \u6253\u5370\u51fa \u4e0d\u540c\u7684\u6838\u9884\u6d4b\u503c \u4e0e \u65b0\u6570\u636e\u96c6\uff08\u6d4b\u8bd5\u6570\u636e\u96c6\uff09\u4e0a\u7684\u771f\u5b9e\u503c\u4e4b\u95f4\u7684\u8bef\u5dee\u5927\u5c0f\n\n    \nnewyHat01\n \n=\n \nlwlrTest\n(\nabX\n[\n100\n:\n199\n],\n \nabX\n[\n0\n:\n99\n],\n \nabY\n[\n0\n:\n99\n],\n \n0.1\n)\n\n    \nprint\n \nnew yHat01 error Size is :\n \n,\n \nrssError\n(\nabY\n[\n0\n:\n99\n],\n \nnewyHat01\n.\nT\n)\n\n    \nnewyHat1\n \n=\n \nlwlrTest\n(\nabX\n[\n100\n:\n199\n],\n \nabX\n[\n0\n:\n99\n],\n \nabY\n[\n0\n:\n99\n],\n \n1\n)\n\n    \nprint\n \nnew yHat1 error Size is :\n \n,\n \nrssError\n(\nabY\n[\n0\n:\n99\n],\n \nnewyHat1\n.\nT\n)\n\n    \nnewyHat10\n \n=\n \nlwlrTest\n(\nabX\n[\n100\n:\n199\n],\n \nabX\n[\n0\n:\n99\n],\n \nabY\n[\n0\n:\n99\n],\n \n10\n)\n\n    \nprint\n \nnew yHat10 error Size is :\n \n,\n \nrssError\n(\nabY\n[\n0\n:\n99\n],\n \nnewyHat10\n.\nT\n)\n\n\n    \n# \u4f7f\u7528\u7b80\u5355\u7684 \u7ebf\u6027\u56de\u5f52 \u8fdb\u884c\u9884\u6d4b\uff0c\u4e0e\u4e0a\u9762\u7684\u8ba1\u7b97\u8fdb\u884c\u6bd4\u8f83\n\n    \nstandWs\n \n=\n \nstandRegres\n(\nabX\n[\n0\n:\n99\n],\n \nabY\n[\n0\n:\n99\n])\n\n    \nstandyHat\n \n=\n \nmat\n(\nabX\n[\n100\n:\n199\n])\n \n*\n \nstandWs\n\n    \nprint\n \nstandRegress error Size is:\n,\n \nrssError\n(\nabY\n[\n100\n:\n199\n],\n \nstandyHat\n.\nT\n.\nA\n)\n\n\n\n\n\u5b8c\u6574\u4ee3\u7801\u5730\u5740\n: \nhttps://github.com/apachecn/MachineLearning/blob/master/src/python/8.PredictiveNumericalDataRegression/regression.py\n\n\n\u6839\u636e\u6211\u4eec\u4e0a\u8fb9\u7684\u6d4b\u8bd5\uff0c\u53ef\u4ee5\u770b\u51fa: \n\n\n\u7b80\u5355\u7ebf\u6027\u56de\u5f52\u8fbe\u5230\u4e86\u4e0e\u5c40\u90e8\u52a0\u6743\u73b0\u884c\u56de\u5f52\u7c7b\u4f3c\u7684\u6548\u679c\u3002\u8fd9\u4e5f\u8bf4\u660e\u4e86\u4e00\u70b9\uff0c\u5fc5\u987b\u5728\u672a\u77e5\u6570\u636e\u4e0a\u6bd4\u8f83\u6548\u679c\u624d\u80fd\u9009\u53d6\u5230\u6700\u4f73\u6a21\u578b\u3002\u90a3\u4e48\u6700\u4f73\u7684\u6838\u5927\u5c0f\u662f 10 \u5417\uff1f\u6216\u8bb8\u662f\uff0c\u4f46\u5982\u679c\u60f3\u5f97\u5230\u66f4\u597d\u7684\u6548\u679c\uff0c\u5e94\u8be5\u7528 10 \u4e2a\u4e0d\u540c\u7684\u6837\u672c\u96c6\u505a 10 \u6b21\u6d4b\u8bd5\u6765\u6bd4\u8f83\u7ed3\u679c\u3002\n\n\n\n\n\u4f7f\u7528\u7b97\u6cd5: \u4f7f\u7528\u56de\u5f52\uff0c\u53ef\u4ee5\u5728\u7ed9\u5b9a\u8f93\u5165\u7684\u65f6\u5019\u9884\u6d4b\u51fa\u4e00\u4e2a\u6570\u503c\uff0c\u8fd9\u662f\u5bf9\u5206\u7c7b\u65b9\u6cd5\u7684\u63d0\u5347\uff0c\u56e0\u4e3a\u8fd9\u6837\u53ef\u4ee5\u9884\u6d4b\u8fde\u7eed\u578b\u6570\u636e\u800c\u4e0d\u4ec5\u4ec5\u662f\u79bb\u6563\u7684\u7c7b\u522b\u6807\u7b7e\n\n\n\n\n4\u3001\u7f29\u51cf\u7cfb\u6570\u6765 \u201c\u7406\u89e3\u201d \u6570\u636e\n\n\n\u5982\u679c\u6570\u636e\u7684\u7279\u5f81\u6bd4\u6837\u672c\u70b9\u8fd8\u591a\u5e94\u8be5\u600e\u4e48\u529e\uff1f\u662f\u5426\u8fd8\u53ef\u4ee5\u4f7f\u7528\u7ebf\u6027\u56de\u5f52\u548c\u4e4b\u524d\u7684\u65b9\u6cd5\u6765\u505a\u9884\u6d4b\uff1f\u7b54\u6848\u662f\u5426\u5b9a\u7684\uff0c\u5373\u6211\u4eec\u4e0d\u80fd\u518d\u4f7f\u7528\u524d\u9762\u4ecb\u7ecd\u7684\u65b9\u6cd5\u3002\u8fd9\u662f\u56e0\u4e3a\u5728\u8ba1\u7b97 \n \u7684\u65f6\u5019\u4f1a\u51fa\u9519\u3002\n\n\n\u5982\u679c\u7279\u5f81\u6bd4\u6837\u672c\u70b9\u8fd8\u591a(n \n m)\uff0c\u4e5f\u5c31\u662f\u8bf4\u8f93\u5165\u6570\u636e\u7684\u77e9\u9635 x \u4e0d\u662f\u6ee1\u79e9\u77e9\u9635\u3002\u975e\u6ee1\u79e9\u77e9\u9635\u6c42\u9006\u65f6\u4f1a\u51fa\u73b0\u95ee\u9898\u3002\n\n\n\u4e3a\u4e86\u89e3\u51b3\u8fd9\u4e2a\u95ee\u9898\uff0c\u6211\u4eec\u5f15\u5165\u4e86 \n\u5cad\u56de\u5f52\uff08ridge regression\uff09\n \u8fd9\u79cd\u7f29\u51cf\u65b9\u6cd5\u3002\u63a5\u7740\u662f \nlasso\u6cd5\n\uff0c\u6700\u540e\u4ecb\u7ecd \n\u524d\u5411\u9010\u6b65\u56de\u5f52\n\u3002\n\n\n4.1\u3001\u5cad\u56de\u5f52\n\n\n\u7b80\u5355\u6765\u8bf4\uff0c\u5cad\u56de\u5f52\u5c31\u662f\u5728\u77e9\u9635 \n \u4e0a\u52a0\u4e00\u4e2a \u03bbI \u4ece\u800c\u4f7f\u5f97\u77e9\u9635\u975e\u5947\u5f02\uff0c\u8fdb\u800c\u80fd\u5bf9 \n \u6c42\u9006\u3002\u5176\u4e2d\u77e9\u9635I\u662f\u4e00\u4e2a n * n \uff08\u7b49\u4e8e\u5217\u6570\uff09 \u7684\u5355\u4f4d\u77e9\u9635\uff0c\n\u5bf9\u89d2\u7ebf\u4e0a\u5143\u7d20\u5168\u4e3a1\uff0c\u5176\u4ed6\u5143\u7d20\u5168\u4e3a0\u3002\u800c\u03bb\u662f\u4e00\u4e2a\u7528\u6237\u5b9a\u4e49\u7684\u6570\u503c\uff0c\u540e\u9762\u4f1a\u505a\u4ecb\u7ecd\u3002\u5728\u8fd9\u79cd\u60c5\u51b5\u4e0b\uff0c\u56de\u5f52\u7cfb\u6570\u7684\u8ba1\u7b97\u516c\u5f0f\u5c06\u53d8\u6210\uff1a\n\n\n\n\n\u5cad\u56de\u5f52\u6700\u5148\u7528\u6765\u5904\u7406\u7279\u5f81\u6570\u591a\u4e8e\u6837\u672c\u6570\u7684\u60c5\u51b5\uff0c\u73b0\u5728\u4e5f\u7528\u4e8e\u5728\u4f30\u8ba1\u4e2d\u52a0\u5165\u504f\u5dee\uff0c\u4ece\u800c\u5f97\u5230\u66f4\u597d\u7684\u4f30\u8ba1\u3002\u8fd9\u91cc\u901a\u8fc7\u5f15\u5165 \u03bb \u6765\u9650\u5236\u4e86\u6240\u6709 w \u4e4b\u548c\uff0c\u901a\u8fc7\u5f15\u5165\u8be5\u60e9\u7f5a\u9879\uff0c\u80fd\u591f\u51cf\u5c11\u4e0d\u91cd\u8981\u7684\u53c2\u6570\uff0c\u8fd9\u4e2a\u6280\u672f\u5728\u7edf\u8ba1\u5b66\u4e2d\u4e5f\u53eb\u4f5c \n\u7f29\u51cf(shrinkage)\n\u3002\n\n\n\n\n\u7f29\u51cf\u65b9\u6cd5\u53ef\u4ee5\u53bb\u6389\u4e0d\u91cd\u8981\u7684\u53c2\u6570\uff0c\u56e0\u6b64\u80fd\u66f4\u597d\u5730\u7406\u89e3\u6570\u636e\u3002\u6b64\u5916\uff0c\u4e0e\u7b80\u5355\u7684\u7ebf\u6027\u56de\u5f52\u76f8\u6bd4\uff0c\u7f29\u51cf\u6cd5\u80fd\u53d6\u5f97\u66f4\u597d\u7684\u9884\u6d4b\u6548\u679c\u3002\n\n\n\u8fd9\u91cc\u901a\u8fc7\u9884\u6d4b\u8bef\u5dee\u6700\u5c0f\u5316\u5f97\u5230 \u03bb: \u6570\u636e\u83b7\u53d6\u4e4b\u540e\uff0c\u9996\u5148\u62bd\u4e00\u90e8\u5206\u6570\u636e\u7528\u4e8e\u6d4b\u8bd5\uff0c\u5269\u4f59\u7684\u4f5c\u4e3a\u8bad\u7ec3\u96c6\u7528\u4e8e\u8bad\u7ec3\u53c2\u6570 w\u3002\u8bad\u7ec3\u5b8c\u6bd5\u540e\u5728\u6d4b\u8bd5\u96c6\u4e0a\u6d4b\u8bd5\u9884\u6d4b\u6027\u80fd\u3002\u901a\u8fc7\u9009\u53d6\u4e0d\u540c\u7684 \u03bb \u6765\u91cd\u590d\u4e0a\u8ff0\u6d4b\u8bd5\u8fc7\u7a0b\uff0c\u6700\u7ec8\u5f97\u5230\u4e00\u4e2a\u4f7f\u9884\u6d4b\u8bef\u5dee\u6700\u5c0f\u7684 \u03bb \u3002\n\n\n4.1.1\u3001\u5cad\u56de\u5f52 \u539f\u59cb\u4ee3\u7801\n\n\ndef\n \nridgeRegres\n(\nxMat\n,\nyMat\n,\nlam\n=\n0.2\n):\n\n    \n\n\n        Desc\uff1a\n\n\n            \u8fd9\u4e2a\u51fd\u6570\u5b9e\u73b0\u4e86\u7ed9\u5b9a lambda \u4e0b\u7684\u5cad\u56de\u5f52\u6c42\u89e3\u3002\n\n\n            \u5982\u679c\u6570\u636e\u7684\u7279\u5f81\u6bd4\u6837\u672c\u70b9\u8fd8\u591a\uff0c\u5c31\u4e0d\u80fd\u518d\u4f7f\u7528\u4e0a\u9762\u4ecb\u7ecd\u7684\u7684\u7ebf\u6027\u56de\u5f52\u548c\u5c40\u90e8\u7ebf\u6027\u56de\u5f52\u4e86\uff0c\u56e0\u4e3a\u8ba1\u7b97 (xTx)^(-1)\u4f1a\u51fa\u73b0\u9519\u8bef\u3002\n\n\n            \u5982\u679c\u7279\u5f81\u6bd4\u6837\u672c\u70b9\u8fd8\u591a\uff08n \n m\uff09\uff0c\u4e5f\u5c31\u662f\u8bf4\uff0c\u8f93\u5165\u6570\u636e\u7684\u77e9\u9635x\u4e0d\u662f\u6ee1\u79e9\u77e9\u9635\u3002\u975e\u6ee1\u79e9\u77e9\u9635\u5728\u6c42\u9006\u65f6\u4f1a\u51fa\u73b0\u95ee\u9898\u3002\n\n\n            \u4e3a\u4e86\u89e3\u51b3\u8fd9\u4e2a\u95ee\u9898\uff0c\u6211\u4eec\u4e0b\u8fb9\u8bb2\u4e00\u4e0b\uff1a\u5cad\u56de\u5f52\uff0c\u8fd9\u662f\u6211\u4eec\u8981\u8bb2\u7684\u7b2c\u4e00\u79cd\u7f29\u51cf\u65b9\u6cd5\u3002\n\n\n        Args\uff1a\n\n\n            xMat\uff1a\u6837\u672c\u7684\u7279\u5f81\u6570\u636e\uff0c\u5373 feature\n\n\n            yMat\uff1a\u6bcf\u4e2a\u6837\u672c\u5bf9\u5e94\u7684\u7c7b\u522b\u6807\u7b7e\uff0c\u5373\u76ee\u6807\u53d8\u91cf\uff0c\u5b9e\u9645\u503c\n\n\n            lam\uff1a\u5f15\u5165\u7684\u4e00\u4e2a\u03bb\u503c\uff0c\u4f7f\u5f97\u77e9\u9635\u975e\u5947\u5f02\n\n\n        Returns\uff1a\n\n\n            \u7ecf\u8fc7\u5cad\u56de\u5f52\u516c\u5f0f\u8ba1\u7b97\u5f97\u5230\u7684\u56de\u5f52\u7cfb\u6570\n\n\n    \n\n\n    \nxTx\n \n=\n \nxMat\n.\nT\n*\nxMat\n\n    \n# \u5cad\u56de\u5f52\u5c31\u662f\u5728\u77e9\u9635 xTx \u4e0a\u52a0\u4e00\u4e2a \u03bbI \u4ece\u800c\u4f7f\u5f97\u77e9\u9635\u975e\u5947\u5f02\uff0c\u8fdb\u800c\u80fd\u5bf9 xTx + \u03bbI \u6c42\u9006\n\n    \ndenom\n \n=\n \nxTx\n \n+\n \neye\n(\nshape\n(\nxMat\n)[\n1\n])\n*\nlam\n\n    \n# \u68c0\u67e5\u884c\u5217\u5f0f\u662f\u5426\u4e3a\u96f6\uff0c\u5373\u77e9\u9635\u662f\u5426\u53ef\u9006\uff0c\u884c\u5217\u5f0f\u4e3a0\u7684\u8bdd\u5c31\u4e0d\u53ef\u9006\uff0c\u4e0d\u4e3a0\u7684\u8bdd\u5c31\u662f\u53ef\u9006\u3002\n\n    \nif\n \nlinalg\n.\ndet\n(\ndenom\n)\n \n==\n \n0.0\n:\n\n        \nprint\n \n(\nThis matrix is singular, cannot do inverse\n)\n\n        \nreturn\n\n    \nws\n \n=\n \ndenom\n.\nI\n \n*\n \n(\nxMat\n.\nT\n*\nyMat\n)\n\n    \nreturn\n \nws\n\n\n\n\ndef\n \nridgeTest\n(\nxArr\n,\nyArr\n):\n\n    \n\n\n        Desc\uff1a\n\n\n            \u51fd\u6570 ridgeTest() \u7528\u4e8e\u5728\u4e00\u7ec4 \u03bb \u4e0a\u6d4b\u8bd5\u7ed3\u679c\n\n\n        Args\uff1a\n\n\n            xArr\uff1a\u6837\u672c\u6570\u636e\u7684\u7279\u5f81\uff0c\u5373 feature\n\n\n            yArr\uff1a\u6837\u672c\u6570\u636e\u7684\u7c7b\u522b\u6807\u7b7e\uff0c\u5373\u771f\u5b9e\u6570\u636e\n\n\n        Returns\uff1a\n\n\n            wMat\uff1a\u5c06\u6240\u6709\u7684\u56de\u5f52\u7cfb\u6570\u8f93\u51fa\u5230\u4e00\u4e2a\u77e9\u9635\u5e76\u8fd4\u56de\n\n\n    \n\n\n    \nxMat\n \n=\n \nmat\n(\nxArr\n)\n\n    \nyMat\n=\nmat\n(\nyArr\n)\n.\nT\n\n    \n# \u8ba1\u7b97Y\u7684\u5747\u503c\n\n    \nyMean\n \n=\n \nmean\n(\nyMat\n,\n0\n)\n\n    \n# Y\u7684\u6240\u6709\u7684\u7279\u5f81\u51cf\u53bb\u5747\u503c\n\n    \nyMat\n \n=\n \nyMat\n \n-\n \nyMean\n\n    \n# \u6807\u51c6\u5316 x\uff0c\u8ba1\u7b97 xMat \u5e73\u5747\u503c\n\n    \nxMeans\n \n=\n \nmean\n(\nxMat\n,\n0\n)\n\n    \n# \u7136\u540e\u8ba1\u7b97 X\u7684\u65b9\u5dee\n\n    \nxVar\n \n=\n \nvar\n(\nxMat\n,\n0\n)\n\n    \n# \u6240\u6709\u7279\u5f81\u90fd\u51cf\u53bb\u5404\u81ea\u7684\u5747\u503c\u5e76\u9664\u4ee5\u65b9\u5dee\n\n    \nxMat\n \n=\n \n(\nxMat\n \n-\n \nxMeans\n)\n/\nxVar\n\n    \n# \u53ef\u4ee5\u5728 30 \u4e2a\u4e0d\u540c\u7684 lambda \u4e0b\u8c03\u7528 ridgeRegres() \u51fd\u6570\u3002\n\n    \nnumTestPts\n \n=\n \n30\n\n    \n# \u521b\u5efa30 * m \u7684\u5168\u90e8\u6570\u636e\u4e3a0 \u7684\u77e9\u9635\n\n    \nwMat\n \n=\n \nzeros\n((\nnumTestPts\n,\nshape\n(\nxMat\n)[\n1\n]))\n\n    \nfor\n \ni\n \nin\n \nrange\n(\nnumTestPts\n):\n\n        \n# exp() \u8fd4\u56de e^x \n\n        \nws\n \n=\n \nridgeRegres\n(\nxMat\n,\nyMat\n,\nexp\n(\ni\n-\n10\n))\n\n        \nwMat\n[\ni\n,:]\n=\nws\n.\nT\n\n    \nreturn\n \nwMat\n\n\n\n\n#test for ridgeRegression\n\n\ndef\n \nregression3\n():\n\n    \nabX\n,\nabY\n \n=\n \nloadDataSet\n(\ninput/8.Regression/abalone.txt\n)\n\n    \nridgeWeights\n \n=\n \nridgeTest\n(\nabX\n,\n \nabY\n)\n\n    \nfig\n \n=\n \nplt\n.\nfigure\n()\n\n    \nax\n \n=\n \nfig\n.\nadd_subplot\n(\n111\n)\n\n    \nax\n.\nplot\n(\nridgeWeights\n)\n\n    \nplt\n.\nshow\n()\n\n\n\n\n\u5b8c\u6574\u4ee3\u7801\u5730\u5740\n: \nhttps://github.com/apachecn/MachineLearning/blob/master/src/python/8.PredictiveNumericalDataRegression/regression.py\n\n\n4.1.2\u3001\u5cad\u56de\u5f52\u5728\u9c8d\u9c7c\u6570\u636e\u96c6\u4e0a\u7684\u8fd0\u884c\u6548\u679c\n\n\n\n\n\u4e0a\u56fe\u7ed8\u5236\u51fa\u4e86\u56de\u5f52\u7cfb\u6570\u4e0e log(\u03bb) \u7684\u5173\u7cfb\u3002\u5728\u6700\u5de6\u8fb9\uff0c\u5373 \u03bb \u6700\u5c0f\u65f6\uff0c\u53ef\u4ee5\u5f97\u5230\u6240\u6709\u7cfb\u6570\u7684\u539f\u59cb\u503c\uff08\u4e0e\u7ebf\u6027\u56de\u5f52\u4e00\u81f4\uff09\uff1b\u800c\u5728\u53f3\u8fb9\uff0c\u7cfb\u6570\u5168\u90e8\u7f29\u51cf\u4e3a0\uff1b\u5728\u4e2d\u95f4\u90e8\u5206\u7684\u67d0\u503c\u5c06\u53ef\u4ee5\u53d6\u5f97\u6700\u597d\u7684\u9884\u6d4b\u6548\u679c\u3002\u4e3a\u4e86\u5b9a\u91cf\u5730\u627e\u5230\u6700\u4f73\u53c2\u6570\u503c\uff0c\u8fd8\u9700\u8981\u8fdb\u884c\u4ea4\u53c9\u9a8c\u8bc1\u3002\u53e6\u5916\uff0c\u8981\u5224\u65ad\u54ea\u4e9b\u53d8\u91cf\u5bf9\u7ed3\u679c\u9884\u6d4b\u6700\u5177\u6709\u5f71\u54cd\u529b\uff0c\u5728\u4e0a\u56fe\u4e2d\u89c2\u5bdf\u5b83\u4eec\u5bf9\u5e94\u7684\u7cfb\u6570\u5927\u5c0f\u5c31\u53ef\u4ee5\u4e86\u3002\n\n\n4.2\u3001\u5957\u7d22\u65b9\u6cd5(Lasso\uff0cThe Least Absolute Shrinkage and Selection Operator)\n\n\n\u5728\u589e\u52a0\u5982\u4e0b\u7ea6\u675f\u65f6\uff0c\u666e\u901a\u7684\u6700\u5c0f\u4e8c\u4e58\u6cd5\u56de\u5f52\u4f1a\u5f97\u5230\u4e0e\u5cad\u56de\u5f52\u4e00\u6837\u7684\u516c\u5f0f: \n\n\n\n\n\u4e0a\u5f0f\u9650\u5b9a\u4e86\u6240\u6709\u56de\u5f52\u7cfb\u6570\u7684\u5e73\u65b9\u548c\u4e0d\u80fd\u5927\u4e8e \u03bb \u3002\u4f7f\u7528\u666e\u901a\u7684\u6700\u5c0f\u4e8c\u4e58\u6cd5\u56de\u5f52\u5728\u5f53\u4e24\u4e2a\u6216\u66f4\u591a\u7684\u7279\u5f81\u76f8\u5173\u65f6\uff0c\u53ef\u80fd\u4f1a\u5f97\u5230\u4e00\u4e2a\u5f88\u5927\u7684\u6b63\u7cfb\u6570\u548c\u4e00\u4e2a\u5f88\u5927\u7684\u8d1f\u7cfb\u6570\u3002\u6b63\u662f\u56e0\u4e3a\u4e0a\u8ff0\u9650\u5236\u6761\u4ef6\u7684\u5b58\u5728\uff0c\u4f7f\u7528\u5cad\u56de\u5f52\u53ef\u4ee5\u907f\u514d\u8fd9\u4e2a\u95ee\u9898\u3002\n\n\n\u4e0e\u5cad\u56de\u5f52\u7c7b\u4f3c\uff0c\u53e6\u4e00\u4e2a\u7f29\u51cf\u65b9\u6cd5lasso\u4e5f\u5bf9\u56de\u5f52\u7cfb\u6570\u505a\u4e86\u9650\u5b9a\uff0c\u5bf9\u5e94\u7684\u7ea6\u675f\u6761\u4ef6\u5982\u4e0b: \n\n\n\n\n\u552f\u4e00\u7684\u4e0d\u540c\u70b9\u5728\u4e8e\uff0c\u8fd9\u4e2a\u7ea6\u675f\u6761\u4ef6\u4f7f\u7528\u7edd\u5bf9\u503c\u53d6\u4ee3\u4e86\u5e73\u65b9\u548c\u3002\u867d\u7136\u7ea6\u675f\u5f62\u5f0f\u53ea\u662f\u7a0d\u4f5c\u53d8\u5316\uff0c\u7ed3\u679c\u5374\u5927\u76f8\u5f84\u5ead: \u5728 \u03bb \u8db3\u591f\u5c0f\u7684\u65f6\u5019\uff0c\u4e00\u4e9b\u7cfb\u6570\u4f1a\u56e0\u6b64\u88ab\u8feb\u7f29\u51cf\u5230 0.\u8fd9\u4e2a\u7279\u6027\u53ef\u4ee5\u5e2e\u52a9\u6211\u4eec\u66f4\u597d\u5730\u7406\u89e3\u6570\u636e\u3002\n\n\n4.3\u3001\u524d\u5411\u9010\u6b65\u56de\u5f52\n\n\n\u524d\u5411\u9010\u6b65\u56de\u5f52\u7b97\u6cd5\u53ef\u4ee5\u5f97\u5230\u4e0e lasso \u5dee\u4e0d\u591a\u7684\u6548\u679c\uff0c\u4f46\u66f4\u52a0\u7b80\u5355\u3002\u5b83\u5c5e\u4e8e\u4e00\u79cd\u8d2a\u5fc3\u7b97\u6cd5\uff0c\u5373\u6bcf\u4e00\u6b65\u90fd\u5c3d\u53ef\u80fd\u51cf\u5c11\u8bef\u5dee\u3002\u4e00\u5f00\u59cb\uff0c\u6240\u6709\u6743\u91cd\u90fd\u8bbe\u7f6e\u4e3a 1\uff0c\u7136\u540e\u6bcf\u4e00\u6b65\u6240\u505a\u7684\u51b3\u7b56\u662f\u5bf9\u67d0\u4e2a\u6743\u91cd\u589e\u52a0\u6216\u51cf\u5c11\u4e00\u4e2a\u5f88\u5c0f\u7684\u503c\u3002\n\n\n\u4f2a\u4ee3\u7801\u5982\u4e0b:\n\n\n\u6570\u636e\u6807\u51c6\u5316\uff0c\u4f7f\u5176\u5206\u5e03\u6ee1\u8db3 0 \u5747\u503c \u548c\u5355\u4f4d\u65b9\u5dee\n\u5728\u6bcf\u8f6e\u8fed\u4ee3\u8fc7\u7a0b\u4e2d: \n    \u8bbe\u7f6e\u5f53\u524d\u6700\u5c0f\u8bef\u5dee lowestError \u4e3a\u6b63\u65e0\u7a77\n    \u5bf9\u6bcf\u4e2a\u7279\u5f81:\n        \u589e\u5927\u6216\u7f29\u5c0f:\n            \u6539\u53d8\u4e00\u4e2a\u7cfb\u6570\u5f97\u5230\u4e00\u4e2a\u65b0\u7684 w\n            \u8ba1\u7b97\u65b0 w \u4e0b\u7684\u8bef\u5dee\n            \u5982\u679c\u8bef\u5dee Error \u5c0f\u4e8e\u5f53\u524d\u6700\u5c0f\u8bef\u5dee lowestError: \u8bbe\u7f6e Wbest \u7b49\u4e8e\u5f53\u524d\u7684 W\n        \u5c06 W \u8bbe\u7f6e\u4e3a\u65b0\u7684 Wbest\n\n\n\n\n4.3.1\u3001\u524d\u5411\u9010\u6b65\u56de\u5f52 \u539f\u59cb\u4ee3\u7801\n\n\ndef\n \nstageWise\n(\nxArr\n,\nyArr\n,\neps\n=\n0.01\n,\nnumIt\n=\n100\n):\n\n    \nxMat\n \n=\n \nmat\n(\nxArr\n);\n \nyMat\n=\nmat\n(\nyArr\n)\n.\nT\n\n    \nyMean\n \n=\n \nmean\n(\nyMat\n,\n0\n)\n\n    \nyMat\n \n=\n \nyMat\n \n-\n \nyMean\n     \n# \u4e5f\u53ef\u4ee5\u89c4\u5219\u5316ys\u4f46\u4f1a\u5f97\u5230\u66f4\u5c0f\u7684coef\n\n    \nxMat\n \n=\n \nregularize\n(\nxMat\n)\n\n    \nm\n,\nn\n=\nshape\n(\nxMat\n)\n\n    \n#returnMat = zeros((numIt,n)) # \u6d4b\u8bd5\u4ee3\u7801\u5220\u9664\n\n    \nws\n \n=\n \nzeros\n((\nn\n,\n1\n));\n \nwsTest\n \n=\n \nws\n.\ncopy\n();\n \nwsMax\n \n=\n \nws\n.\ncopy\n()\n\n    \nfor\n \ni\n \nin\n \nrange\n(\nnumIt\n):\n\n        \nprint\n \n(\nws\n.\nT\n)\n\n        \nlowestError\n \n=\n \ninf\n;\n \n        \nfor\n \nj\n \nin\n \nrange\n(\nn\n):\n\n            \nfor\n \nsign\n \nin\n \n[\n-\n1\n,\n1\n]:\n\n                \nwsTest\n \n=\n \nws\n.\ncopy\n()\n\n                \nwsTest\n[\nj\n]\n \n+=\n \neps\n*\nsign\n\n                \nyTest\n \n=\n \nxMat\n*\nwsTest\n\n                \nrssE\n \n=\n \nrssError\n(\nyMat\n.\nA\n,\nyTest\n.\nA\n)\n\n                \nif\n \nrssE\n \n \nlowestError\n:\n\n                    \nlowestError\n \n=\n \nrssE\n\n                    \nwsMax\n \n=\n \nwsTest\n\n        \nws\n \n=\n \nwsMax\n.\ncopy\n()\n\n        \nreturnMat\n[\ni\n,:]\n=\nws\n.\nT\n\n    \nreturn\n \nreturnMat\n\n\n\n\n#test for stageWise\n\n\ndef\n \nregression4\n():\n\n    \nxArr\n,\nyArr\n=\nloadDataSet\n(\ninput/8.Regression/abalone.txt\n)\n\n    \nstageWise\n(\nxArr\n,\nyArr\n,\n0.01\n,\n200\n)\n\n    \nxMat\n \n=\n \nmat\n(\nxArr\n)\n\n    \nyMat\n \n=\n \nmat\n(\nyArr\n)\n.\nT\n\n    \nxMat\n \n=\n \nregularize\n(\nxMat\n)\n\n    \nyM\n \n=\n \nmean\n(\nyMat\n,\n0\n)\n\n    \nyMat\n \n=\n \nyMat\n \n-\n \nyM\n\n    \nweights\n \n=\n \nstandRegres\n(\nxMat\n,\n \nyMat\n.\nT\n)\n\n    \nprint\n \n(\nweights\n.\nT\n)\n\n\n\n\n\u5b8c\u6574\u4ee3\u7801\u5730\u5740\n: \nhttps://github.com/apachecn/MachineLearning/blob/master/src/python/8.PredictiveNumericalDataRegression/regression.py\n\n\n4.3.2\u3001\u9010\u6b65\u7ebf\u6027\u56de\u5f52\u5728\u9c8d\u9c7c\u6570\u636e\u96c6\u4e0a\u7684\u8fd0\u884c\u6548\u679c\n\n\n\n\n\u9010\u6b65\u7ebf\u6027\u56de\u5f52\u7b97\u6cd5\u7684\u4e3b\u8981\u4f18\u70b9\u5728\u4e8e\u5b83\u53ef\u4ee5\u5e2e\u52a9\u4eba\u4eec\u7406\u89e3\u73b0\u6709\u7684\u6a21\u578b\u5e76\u4f5c\u51fa\u6539\u8fdb\u3002\u5f53\u6784\u5efa\u4e86\u4e00\u4e2a\u6a21\u578b\u540e\uff0c\u53ef\u4ee5\u8fd0\u884c\u8be5\u7b97\u6cd5\u627e\u51fa\u91cd\u8981\u7684\u7279\u5f81\uff0c\u8fd9\u6837\u5c31\u6709\u53ef\u80fd\u53ca\u65f6\u505c\u6b62\u5bf9\u90a3\u4e9b\u4e0d\u91cd\u8981\u7279\u5f81\u7684\u6536\u96c6\u3002\u6700\u540e\uff0c\u5982\u679c\u7528\u4e8e\u6d4b\u8bd5\uff0c\u8be5\u7b97\u6cd5\u6bcf100\u6b21\u8fed\u4ee3\u540e\u5c31\u53ef\u4ee5\u6784\u5efa\u51fa\u4e00\u4e2a\u6a21\u578b\uff0c\u53ef\u4ee5\u4f7f\u7528\u7c7b\u4f3c\u4e8e10\u6298\u4ea4\u53c9\u9a8c\u8bc1\u7684\u65b9\u6cd5\u6bd4\u8f83\u8fd9\u4e9b\u6a21\u578b\uff0c\u6700\u7ec8\u9009\u62e9\u4f7f\u8bef\u5dee\u6700\u5c0f\u7684\u6a21\u578b\u3002\n\n\n4.4\u3001\u5c0f\u7ed3\n\n\n\u5f53\u5e94\u7528\u7f29\u51cf\u65b9\u6cd5\uff08\u5982\u9010\u6b65\u7ebf\u6027\u56de\u5f52\u6216\u5cad\u56de\u5f52\uff09\u65f6\uff0c\u6a21\u578b\u4e5f\u5c31\u589e\u52a0\u4e86\u504f\u5dee\uff08bias\uff09\uff0c\u4e0e\u6b64\u540c\u65f6\u5374\u51cf\u5c0f\u4e86\u6a21\u578b\u7684\u65b9\u5dee\u3002\n\n\n5\u3001\u56de\u5f52 \u9879\u76ee\u6848\u4f8b\n\n\n\u9879\u76ee\u6848\u4f8b1: \u9884\u6d4b\u4e50\u9ad8\u73a9\u5177\u5957\u88c5\u7684\u4ef7\u683c\n\n\n\u9879\u76ee\u6982\u8ff0\n\n\nDangler \u559c\u6b22\u4e3a\u4e50\u9ad8\u5957\u88c5\u4f30\u4ef7\uff0c\u6211\u4eec\u7528\u56de\u5f52\u6280\u672f\u6765\u5e2e\u52a9\u4ed6\u5efa\u7acb\u4e00\u4e2a\u9884\u6d4b\u6a21\u578b\u3002\n\n\n\u5f00\u53d1\u6d41\u7a0b\n\n\n(1) \u6536\u96c6\u6570\u636e\uff1a\u7528 Google Shopping \u7684API\u6536\u96c6\u6570\u636e\u3002\n(2) \u51c6\u5907\u6570\u636e\uff1a\u4ece\u8fd4\u56de\u7684JSON\u6570\u636e\u4e2d\u62bd\u53d6\u4ef7\u683c\u3002\n(3) \u5206\u6790\u6570\u636e\uff1a\u53ef\u89c6\u5316\u5e76\u89c2\u5bdf\u6570\u636e\u3002\n(4) \u8bad\u7ec3\u7b97\u6cd5\uff1a\u6784\u5efa\u4e0d\u540c\u7684\u6a21\u578b\uff0c\u91c7\u7528\u9010\u6b65\u7ebf\u6027\u56de\u5f52\u548c\u76f4\u63a5\u7684\u7ebf\u6027\u56de\u5f52\u6a21\u578b\u3002\n(5) \u6d4b\u8bd5\u7b97\u6cd5\uff1a\u4f7f\u7528\u4ea4\u53c9\u9a8c\u8bc1\u6765\u6d4b\u8bd5\u4e0d\u540c\u7684\u6a21\u578b\uff0c\u5206\u6790\u54ea\u4e2a\u6548\u679c\u6700\u597d\u3002\n(6) \u4f7f\u7528\u7b97\u6cd5\uff1a\u8fd9\u6b21\u7ec3\u4e60\u7684\u76ee\u6807\u5c31\u662f\u751f\u6210\u6570\u636e\u6a21\u578b\u3002\n\n\n\n\n\n\n\u6536\u96c6\u6570\u636e: \u4f7f\u7528 Google \u8d2d\u7269\u7684 API \n\n\n\n\n\u7531\u4e8e Google \u63d0\u4f9b\u7684 api \u5931\u6548\uff0c\u6211\u4eec\u53ea\u80fd\u81ea\u5df1\u4e0b\u8f7d\u54af\uff0c\u5c06\u6570\u636e\u5b58\u50a8\u5728\u4e86 input \u6587\u4ef6\u5939\u4e0b\u7684 setHtml \u6587\u4ef6\u5939\u4e0b\n\n\n\n\n\u51c6\u5907\u6570\u636e: \u4ece\u8fd4\u56de\u7684 JSON \u6570\u636e\u4e2d\u62bd\u53d6\u4ef7\u683c\n\n\n\n\n\u56e0\u4e3a\u6211\u4eec\u8fd9\u91cc\u4e0d\u662f\u5728\u7ebf\u7684\uff0c\u5c31\u4e0d\u518d\u662f JSON \u4e86\uff0c\u6211\u4eec\u76f4\u63a5\u89e3\u6790\u7ebf\u4e0b\u7684\u7f51\u9875\uff0c\u5f97\u5230\u6211\u4eec\u60f3\u8981\u7684\u6570\u636e\u3002\n\n\n\n\n\u5206\u6790\u6570\u636e: \u53ef\u89c6\u5316\u5e76\u89c2\u5bdf\u6570\u636e\n\n\n\n\n\u8fd9\u91cc\u6211\u4eec\u5c06\u89e3\u6790\u5f97\u5230\u7684\u6570\u636e\u6253\u5370\u51fa\u6765\uff0c\u7136\u540e\u89c2\u5bdf\u6570\u636e\u3002\n\n\n\n\n\u8bad\u7ec3\u7b97\u6cd5: \u6784\u5efa\u4e0d\u540c\u7684\u6a21\u578b\n\n\n\n\nfrom\n \nnumpy\n \nimport\n \n*\n\n\nfrom\n \nbs4\n \nimport\n \nBeautifulSoup\n\n\n\n# \u4ece\u9875\u9762\u8bfb\u53d6\u6570\u636e\uff0c\u751f\u6210retX\u548cretY\u5217\u8868\n\n\ndef\n \nscrapePage\n(\nretX\n,\n \nretY\n,\n \ninFile\n,\n \nyr\n,\n \nnumPce\n,\n \norigPrc\n):\n\n\n    \n# \u6253\u5f00\u5e76\u8bfb\u53d6HTML\u6587\u4ef6\n\n    \nfr\n \n=\n \nopen\n(\ninFile\n)\n\n    \nsoup\n \n=\n \nBeautifulSoup\n(\nfr\n.\nread\n())\n\n    \ni\n=\n1\n\n\n    \n# \u6839\u636eHTML\u9875\u9762\u7ed3\u6784\u8fdb\u884c\u89e3\u6790\n\n    \ncurrentRow\n \n=\n \nsoup\n.\nfindAll\n(\ntable\n,\n \nr\n=\n%d\n \n%\n \ni\n)\n\n    \nwhile\n(\nlen\n(\ncurrentRow\n)\n!=\n0\n):\n\n        \ncurrentRow\n \n=\n \nsoup\n.\nfindAll\n(\ntable\n,\n \nr\n=\n%d\n \n%\n \ni\n)\n\n        \ntitle\n \n=\n \ncurrentRow\n[\n0\n]\n.\nfindAll\n(\na\n)[\n1\n]\n.\ntext\n\n        \nlwrTitle\n \n=\n \ntitle\n.\nlower\n()\n\n\n        \n# \u67e5\u627e\u662f\u5426\u6709\u5168\u65b0\u6807\u7b7e\n\n        \nif\n \n(\nlwrTitle\n.\nfind\n(\nnew\n)\n \n \n-\n1\n)\n \nor\n \n(\nlwrTitle\n.\nfind\n(\nnisb\n)\n \n \n-\n1\n):\n\n            \nnewFlag\n \n=\n \n1.0\n\n        \nelse\n:\n\n            \nnewFlag\n \n=\n \n0.0\n\n\n        \n# \u67e5\u627e\u662f\u5426\u5df2\u7ecf\u6807\u5fd7\u51fa\u552e\uff0c\u6211\u4eec\u53ea\u6536\u96c6\u5df2\u51fa\u552e\u7684\u6570\u636e\n\n        \nsoldUnicde\n \n=\n \ncurrentRow\n[\n0\n]\n.\nfindAll\n(\ntd\n)[\n3\n]\n.\nfindAll\n(\nspan\n)\n\n        \nif\n \nlen\n(\nsoldUnicde\n)\n==\n0\n:\n\n            \nprint\n \nitem #\n%d\n did not sell\n \n%\n \ni\n\n        \nelse\n:\n\n            \n# \u89e3\u6790\u9875\u9762\u83b7\u53d6\u5f53\u524d\u4ef7\u683c\n\n            \nsoldPrice\n \n=\n \ncurrentRow\n[\n0\n]\n.\nfindAll\n(\ntd\n)[\n4\n]\n\n            \npriceStr\n \n=\n \nsoldPrice\n.\ntext\n\n            \npriceStr\n \n=\n \npriceStr\n.\nreplace\n(\n$\n,\n)\n \n#strips out $\n\n            \npriceStr\n \n=\n \npriceStr\n.\nreplace\n(\n,\n,\n)\n \n#strips out ,\n\n            \nif\n \nlen\n(\nsoldPrice\n)\n1\n:\n\n                \npriceStr\n \n=\n \npriceStr\n.\nreplace\n(\nFree shipping\n,\n \n)\n\n            \nsellingPrice\n \n=\n \nfloat\n(\npriceStr\n)\n\n\n            \n# \u53bb\u6389\u4e0d\u5b8c\u6574\u7684\u5957\u88c5\u4ef7\u683c\n\n            \nif\n  \nsellingPrice\n \n \norigPrc\n \n*\n \n0.5\n:\n\n                    \nprint\n \n%d\n\\t\n%d\n\\t\n%d\n\\t\n%f\n\\t\n%f\n \n%\n \n(\nyr\n,\nnumPce\n,\nnewFlag\n,\norigPrc\n,\n \nsellingPrice\n)\n\n                    \nretX\n.\nappend\n([\nyr\n,\n \nnumPce\n,\n \nnewFlag\n,\n \norigPrc\n])\n\n                    \nretY\n.\nappend\n(\nsellingPrice\n)\n\n        \ni\n \n+=\n \n1\n\n        \ncurrentRow\n \n=\n \nsoup\n.\nfindAll\n(\ntable\n,\n \nr\n=\n%d\n \n%\n \ni\n)\n\n\n\n# \u4f9d\u6b21\u8bfb\u53d6\u516d\u79cd\u4e50\u9ad8\u5957\u88c5\u7684\u6570\u636e\uff0c\u5e76\u751f\u6210\u6570\u636e\u77e9\u9635        \n\n\ndef\n \nsetDataCollect\n(\nretX\n,\n \nretY\n):\n\n    \nscrapePage\n(\nretX\n,\n \nretY\n,\n \ninput/8.Regression/setHtml/lego8288.html\n,\n \n2006\n,\n \n800\n,\n \n49.99\n)\n\n    \nscrapePage\n(\nretX\n,\n \nretY\n,\n \ninput/8.Regression/setHtml/lego10030.html\n,\n \n2002\n,\n \n3096\n,\n \n269.99\n)\n\n    \nscrapePage\n(\nretX\n,\n \nretY\n,\n \ninput/8.Regression/setHtml/lego10179.html\n,\n \n2007\n,\n \n5195\n,\n \n499.99\n)\n\n    \nscrapePage\n(\nretX\n,\n \nretY\n,\n \ninput/8.Regression/setHtml/lego10181.html\n,\n \n2007\n,\n \n3428\n,\n \n199.99\n)\n\n    \nscrapePage\n(\nretX\n,\n \nretY\n,\n \ninput/8.Regression/setHtml/lego10189.html\n,\n \n2008\n,\n \n5922\n,\n \n299.99\n)\n\n    \nscrapePage\n(\nretX\n,\n \nretY\n,\n \ninput/8.Regression/setHtml/lego10196.html\n,\n \n2009\n,\n \n3263\n,\n \n249.99\n)\n\n\n\n\n\n\n\n\u6d4b\u8bd5\u7b97\u6cd5\uff1a\u4f7f\u7528\u4ea4\u53c9\u9a8c\u8bc1\u6765\u6d4b\u8bd5\u4e0d\u540c\u7684\u6a21\u578b\uff0c\u5206\u6790\u54ea\u4e2a\u6548\u679c\u6700\u597d\n\n\n\n\n# \u4ea4\u53c9\u9a8c\u8bc1\u6d4b\u8bd5\u5cad\u56de\u5f52\n\n\ndef\n \ncrossValidation\n(\nxArr\n,\nyArr\n,\nnumVal\n=\n10\n):\n\n    \n# \u83b7\u5f97\u6570\u636e\u70b9\u4e2a\u6570\uff0cxArr\u548cyArr\u5177\u6709\u76f8\u540c\u957f\u5ea6\n\n    \nm\n \n=\n \nlen\n(\nyArr\n)\n\n    \nindexList\n \n=\n \nrange\n(\nm\n)\n\n    \nerrorMat\n \n=\n \nzeros\n((\nnumVal\n,\n30\n))\n\n\n    \n# \u4e3b\u5faa\u73af \u4ea4\u53c9\u9a8c\u8bc1\u5faa\u73af\n\n    \nfor\n \ni\n \nin\n \nrange\n(\nnumVal\n):\n\n        \n# \u968f\u673a\u62c6\u5206\u6570\u636e\uff0c\u5c06\u6570\u636e\u5206\u4e3a\u8bad\u7ec3\u96c6\uff0890%\uff09\u548c\u6d4b\u8bd5\u96c6\uff0810%\uff09\n\n        \ntrainX\n=\n[];\n \ntrainY\n=\n[]\n\n        \ntestX\n \n=\n \n[];\n \ntestY\n \n=\n \n[]\n\n\n        \n# \u5bf9\u6570\u636e\u8fdb\u884c\u6df7\u6d17\u64cd\u4f5c\n\n        \nrandom\n.\nshuffle\n(\nindexList\n)\n\n\n        \n# \u5207\u5206\u8bad\u7ec3\u96c6\u548c\u6d4b\u8bd5\u96c6\n\n        \nfor\n \nj\n \nin\n \nrange\n(\nm\n):\n\n            \nif\n \nj\n \n \nm\n*\n0.9\n:\n \n                \ntrainX\n.\nappend\n(\nxArr\n[\nindexList\n[\nj\n]])\n\n                \ntrainY\n.\nappend\n(\nyArr\n[\nindexList\n[\nj\n]])\n\n            \nelse\n:\n\n                \ntestX\n.\nappend\n(\nxArr\n[\nindexList\n[\nj\n]])\n\n                \ntestY\n.\nappend\n(\nyArr\n[\nindexList\n[\nj\n]])\n\n\n        \n# \u83b7\u5f97\u56de\u5f52\u7cfb\u6570\u77e9\u9635\n\n        \nwMat\n \n=\n \nridgeTest\n(\ntrainX\n,\ntrainY\n)\n\n\n        \n# \u5faa\u73af\u904d\u5386\u77e9\u9635\u4e2d\u768430\u7ec4\u56de\u5f52\u7cfb\u6570\n\n        \nfor\n \nk\n \nin\n \nrange\n(\n30\n):\n\n            \n# \u8bfb\u53d6\u8bad\u7ec3\u96c6\u548c\u6570\u636e\u96c6\n\n            \nmatTestX\n \n=\n \nmat\n(\ntestX\n);\n \nmatTrainX\n=\nmat\n(\ntrainX\n)\n\n            \n# \u5bf9\u6570\u636e\u8fdb\u884c\u6807\u51c6\u5316\n\n            \nmeanTrain\n \n=\n \nmean\n(\nmatTrainX\n,\n0\n)\n\n            \nvarTrain\n \n=\n \nvar\n(\nmatTrainX\n,\n0\n)\n\n            \nmatTestX\n \n=\n \n(\nmatTestX\n-\nmeanTrain\n)\n/\nvarTrain\n\n\n            \n# \u6d4b\u8bd5\u56de\u5f52\u6548\u679c\u5e76\u5b58\u50a8\n\n            \nyEst\n \n=\n \nmatTestX\n \n*\n \nmat\n(\nwMat\n[\nk\n,:])\n.\nT\n \n+\n \nmean\n(\ntrainY\n)\n\n\n            \n# \u8ba1\u7b97\u8bef\u5dee\n\n            \nerrorMat\n[\ni\n,\nk\n]\n \n=\n \n((\nyEst\n.\nT\n.\nA\n-\narray\n(\ntestY\n))\n**\n2\n)\n.\nsum\n()\n\n\n    \n# \u8ba1\u7b97\u8bef\u5dee\u4f30\u8ba1\u503c\u7684\u5747\u503c\n\n    \nmeanErrors\n \n=\n \nmean\n(\nerrorMat\n,\n0\n)\n\n    \nminMean\n \n=\n \nfloat\n(\nmin\n(\nmeanErrors\n))\n\n    \nbestWeights\n \n=\n \nwMat\n[\nnonzero\n(\nmeanErrors\n==\nminMean\n)]\n\n\n    \n# \u4e0d\u8981\u4f7f\u7528\u6807\u51c6\u5316\u7684\u6570\u636e\uff0c\u9700\u8981\u5bf9\u6570\u636e\u8fdb\u884c\u8fd8\u539f\u6765\u5f97\u5230\u8f93\u51fa\u7ed3\u679c\n\n    \nxMat\n \n=\n \nmat\n(\nxArr\n);\n \nyMat\n=\nmat\n(\nyArr\n)\n.\nT\n\n    \nmeanX\n \n=\n \nmean\n(\nxMat\n,\n0\n);\n \nvarX\n \n=\n \nvar\n(\nxMat\n,\n0\n)\n\n    \nunReg\n \n=\n \nbestWeights\n/\nvarX\n\n\n    \n# \u8f93\u51fa\u6784\u5efa\u7684\u6a21\u578b\n\n    \nprint\n \nthe best model from Ridge Regression is:\n\\n\n,\nunReg\n\n    \nprint\n \nwith constant term: \n,\n-\n1\n*\nsum\n(\nmultiply\n(\nmeanX\n,\nunReg\n))\n \n+\n \nmean\n(\nyMat\n)\n\n\n\n\n# predict for lego\ns price\n\n\ndef\n \nregression5\n():\n\n    \nlgX\n \n=\n \n[]\n\n    \nlgY\n \n=\n \n[]\n\n\n    \nsetDataCollect\n(\nlgX\n,\n \nlgY\n)\n\n    \ncrossValidation\n(\nlgX\n,\n \nlgY\n,\n \n10\n)\n\n\n\n\n\n\n\n\u4f7f\u7528\u7b97\u6cd5\uff1a\u8fd9\u6b21\u7ec3\u4e60\u7684\u76ee\u6807\u5c31\u662f\u751f\u6210\u6570\u636e\u6a21\u578b\n\n\n\n\n\u5b8c\u6574\u4ee3\u7801\u5730\u5740\n: \nhttps://github.com/apachecn/MachineLearning/blob/master/src/python/8.PredictiveNumericalDataRegression/regression.py\n\n\n6\u3001\u9644\u52a0 \u6743\u8861\u504f\u5dee\u548c\u65b9\u5dee\n\n\n\u4efb\u4f55\u65f6\u5019\uff0c\u4e00\u65e6\u53d1\u73b0\u6a21\u578b\u548c\u6d4b\u91cf\u503c\u4e4b\u95f4\u5b58\u5728\u5dee\u5f02\uff0c\u5c31\u8bf4\u51fa\u73b0\u4e86\u8bef\u5dee\u3002\u5f53\u8003\u8651\u6a21\u578b\u4e2d\u7684 \u201c\u566a\u58f0\u201d \u6216\u8005\u8bf4\u8bef\u5dee\u65f6\uff0c\u5fc5\u987b\u8003\u8651\u5176\u6765\u6e90\u3002\u4f60\u53ef\u80fd\u4f1a\u5bf9\u590d\u6742\u7684\u8fc7\u7a0b\u8fdb\u884c\u7b80\u5316\uff0c\u8fd9\u5c06\u5bfc\u81f4\u5728\u6a21\u578b\u548c\u6d4b\u91cf\u503c\u4e4b\u95f4\u51fa\u73b0 \u201c\u566a\u58f0\u201d \u6216\u8bef\u5dee\uff0c\u82e5\u65e0\u6cd5\u7406\u89e3\u6570\u636e\u7684\u771f\u5b9e\u751f\u6210\u8fc7\u7a0b\uff0c\u4e5f\u4f1a\u5bfc\u81f4\u5dee\u5f02\u7684\u4ea7\u751f\u3002\u53e6\u5916\uff0c\u6d4b\u91cf\u8fc7\u7a0b\u672c\u8eab\u4e5f\u53ef\u80fd\u4ea7\u751f \u201c\u566a\u58f0\u201d \u6216\u8005\u95ee\u9898\u3002\u4e0b\u9762\u6211\u4eec\u4e3e\u4e00\u4e2a\u4f8b\u5b50\uff0c\u6211\u4eec\u4f7f\u7528 \n\u7ebf\u6027\u56de\u5f52\n \u548c \n\u5c40\u90e8\u52a0\u6743\u7ebf\u6027\u56de\u5f52\n \u5904\u7406\u8fc7\u4e00\u4e2a\u4ece\u6587\u4ef6\u5bfc\u5165\u7684\u4e8c\u7ef4\u6570\u636e\u3002\n\n\n\n\n\u5176\u4e2d\u7684 N(0, 1) \u662f\u4e00\u4e2a\u5747\u503c\u4e3a 0\u3001\u65b9\u5dee\u4e3a 1 \u7684\u6b63\u6001\u5206\u5e03\u3002\u6211\u4eec\u5c1d\u8bd5\u8fc7\u7981\u7528\u4e00\u6761\u76f4\u7ebf\u6765\u62df\u5408\u4e0a\u8ff0\u6570\u636e\u3002\u4e0d\u96be\u60f3\u5230\uff0c\u76f4\u7ebf\u6240\u80fd\u5f97\u5230\u7684\u6700\u4f73\u62df\u5408\u5e94\u8be5\u662f 3.0+1.7x \u8fd9\u4e00\u90e8\u5206\u3002\u8fd9\u6837\u7684\u8bdd\uff0c\u8bef\u5dee\u90e8\u5206\u5c31\u662f 0.1sin(30x)+0.06N(0, 1) \u3002\u5728\u4e0a\u9762\uff0c\u6211\u4eec\u4f7f\u7528\u4e86\u5c40\u90e8\u52a0\u6743\u7ebf\u6027\u56de\u5f52\u6765\u8bd5\u56fe\u6355\u6349\u6570\u636e\u80cc\u540e\u7684\u7ed3\u6784\u3002\u8be5\u7ed3\u6784\u62df\u5408\u8d77\u6765\u6709\u4e00\u5b9a\u7684\u96be\u5ea6\uff0c\u56e0\u6b64\u6211\u4eec\u6d4b\u8bd5\u4e86\u591a\u7ec4\u4e0d\u540c\u7684\u5c40\u90e8\u6743\u91cd\u6765\u627e\u5230\u5177\u6709\u6700\u5c0f\u6d4b\u8bd5\u8bef\u5dee\u7684\u89e3\u3002\n\n\n\u4e0b\u56fe\u7ed9\u51fa\u4e86\u8bad\u7ec3\u8bef\u5dee\u548c\u6d4b\u8bd5\u8bef\u5dee\u7684\u66f2\u7ebf\u56fe\uff0c\u4e0a\u9762\u7684\u66f2\u9762\u5c31\u662f\u6d4b\u8bd5\u8bef\u5dee\uff0c\u4e0b\u9762\u7684\u66f2\u7ebf\u662f\u8bad\u7ec3\u8bef\u5dee\u3002\u6211\u4eec\u6839\u636e \u9884\u6d4b\u9c8d\u9c7c\u5e74\u9f84 \u7684\u5b9e\u9a8c\u77e5\u9053: \u5982\u679c\u964d\u4f4e\u6838\u7684\u5927\u5c0f\uff0c\u90a3\u4e48\u8bad\u7ec3\u8bef\u5dee\u5c06\u53d8\u5c0f\u3002\u4ece\u4e0b\u56fe\u5f00\u770b\uff0c\u4ece\u5de6\u5230\u53f3\u5c31\u8868\u793a\u4e86\u6838\u9010\u6e10\u51cf\u5c0f\u7684\u8fc7\u7a0b\u3002\n\n\n\n\n\u4e00\u822c\u8ba4\u4e3a\uff0c\u4e0a\u8ff0\u4e24\u79cd\u8bef\u5dee\u7531\u4e09\u4e2a\u90e8\u5206\u7ec4\u6210: \u504f\u5dee\u3001\u6d4b\u91cf\u8bef\u5dee\u548c\u968f\u673a\u566a\u58f0\u3002\u5c40\u90e8\u52a0\u6743\u7ebf\u6027\u56de\u5f52 \u548c \u9884\u6d4b\u9c8d\u9c7c\u5e74\u9f84 \u4e2d\uff0c\u6211\u4eec\u901a\u8fc7\u5f15\u5165\u4e86\u4e09\u4e2a\u8d8a\u6765\u8d8a\u5c0f\u7684\u6838\u6765\u4e0d\u65ad\u589e\u5927\u6a21\u578b\u7684\u65b9\u5dee\u3002\n\n\n\u5728\u7f29\u51cf\u7cfb\u6570\u6765\u201c\u7406\u89e3\u201d\u6570\u636e\u8fd9\u4e00\u8282\u4e2d\uff0c\u6211\u4eec\u4ecb\u7ecd\u4e86\u7f29\u51cf\u6cd5\uff0c\u53ef\u4ee5\u5c06\u4e00\u4e9b\u7cfb\u6570\u7f29\u51cf\u6210\u5f88\u5c0f\u7684\u503c\u6216\u76f4\u63a5\u7f29\u51cf\u4e3a 0 \uff0c\u8fd9\u662f\u4e00\u4e2a\u589e\u5927\u6a21\u578b\u504f\u5dee\u7684\u4f8b\u5b50\u3002\u901a\u8fc7\u628a\u4e00\u4e9b\u7279\u5f81\u7684\u56de\u5f52\u7cfb\u6570\u7f29\u51cf\u5230 0 \uff0c\u540c\u65f6\u4e5f\u5c31\u51cf\u5c0f\u4e86\u6a21\u578b\u7684\u590d\u6742\u5ea6\u3002\u4f8b\u5b50\u4e2d\u6709 8 \u4e2a\u7279\u5f81\uff0c\u6d88\u9664\u5176\u4e2d\u4e24\u4e2a\u540e\u4e0d\u4ec5\u4f7f\u6a21\u578b\u66f4\u6613\u7406\u89e3\uff0c\u540c\u65f6\u8fd8\u964d\u4f4e\u4e86\u9884\u6d4b\u8bef\u5dee\u3002\u5bf9\u7167\u4e0a\u56fe\uff0c\u5de6\u4fa7\u662f\u53c2\u6570\u7f29\u51cf\u8fc7\u4e8e\u4e25\u5389\u7684\u7ed3\u679c\uff0c\u800c\u53f3\u4fa7\u662f\u65e0\u7f29\u51cf\u7684\u6548\u679c\u3002\n\n\n\u65b9\u5dee\u662f\u53ef\u4ee5\u5ea6\u91cf\u7684\u3002\u5982\u679c\u4ece\u9c8d\u9c7c\u6570\u636e\u4e2d\u53d6\u4e00\u4e2a\u968f\u673a\u6837\u672c\u96c6\uff08\u4f8b\u5982\u53d6\u5176\u4e2d 100 \u4e2a\u6570\u636e\uff09\u5e76\u7528\u7ebf\u6027\u6a21\u578b\u62df\u5408\uff0c\u5c06\u4f1a\u5f97\u5230\u4e00\u7ec4\u56de\u5f52\u7cfb\u6570\u3002\u540c\u7406\uff0c\u518d\u53d6\u51fa\u53e6\u4e00\u7ec4\u968f\u673a\u6837\u672c\u96c6\u5e76\u62df\u5408\uff0c\u5c06\u4f1a\u5f97\u5230\u53e6\u4e00\u7ec4\u56de\u5f52\u7cfb\u6570\u3002\u8fd9\u4e9b\u7cfb\u6570\u95f4\u7684\u5dee\u5f02\u5927\u5c0f\u4e5f\u5c31\u662f\u6a21\u578b\u65b9\u5dee\u7684\u53cd\u6620\u3002\n\n\n\n\n\n\n\u4f5c\u8005\uff1a\n\u5c0f\u7476\n \n\u7247\u523b\n\n\nGitHub\u5730\u5740\n: \nhttps://github.com/apachecn/MachineLearning\n\n\n\u7248\u6743\u58f0\u660e\uff1a\u6b22\u8fce\u8f6c\u8f7d\u5b66\u4e60 =\n \u8bf7\u6807\u6ce8\u4fe1\u606f\u6765\u6e90\u4e8e \nApacheCN", 
            "title": "8.\u9884\u6d4b\u6570\u503c\u578b\u6570\u636e\uff1a\u56de\u5f52"
        }, 
        {
            "location": "/\u4e66\u7c4d/\u673a\u5668\u5b66\u4e60\u5b9e\u6218/08.\u9884\u6d4b\u6570\u503c\u578b\u6570\u636e-\u56de\u5f52/#8", 
            "text": "", 
            "title": "\u7b2c8\u7ae0 \u9884\u6d4b\u6570\u503c\u578b\u6570\u636e\uff1a\u56de\u5f52"
        }, 
        {
            "location": "/\u4e66\u7c4d/\u673a\u5668\u5b66\u4e60\u5b9e\u6218/08.\u9884\u6d4b\u6570\u503c\u578b\u6570\u636e-\u56de\u5f52/#regression", 
            "text": "\u6211\u4eec\u524d\u8fb9\u63d0\u5230\u7684\u5206\u7c7b\u7684\u76ee\u6807\u53d8\u91cf\u662f\u6807\u79f0\u578b\u6570\u636e\uff0c\u800c\u56de\u5f52\u5219\u662f\u5bf9\u8fde\u7eed\u578b\u7684\u6570\u636e\u505a\u51fa\u5904\u7406\uff0c\u56de\u5f52\u7684\u76ee\u7684\u662f\u9884\u6d4b\u6570\u503c\u578b\u6570\u636e\u7684\u76ee\u6807\u503c\u3002", 
            "title": "\u56de\u5f52\uff08Regression\uff09 \u6982\u8ff0"
        }, 
        {
            "location": "/\u4e66\u7c4d/\u673a\u5668\u5b66\u4e60\u5b9e\u6218/08.\u9884\u6d4b\u6570\u503c\u578b\u6570\u636e-\u56de\u5f52/#_1", 
            "text": "\u56de\u5f52\u7684\u76ee\u7684\u662f\u9884\u6d4b\u6570\u503c\u578b\u7684\u76ee\u6807\u503c\u3002\u6700\u76f4\u63a5\u7684\u529e\u6cd5\u662f\u4f9d\u636e\u8f93\u5165\u5199\u51fa\u4e00\u4e2a\u76ee\u6807\u503c\u7684\u8ba1\u7b97\u516c\u5f0f\u3002  \u5047\u5982\u4f60\u60f3\u8981\u9884\u6d4b\u5170\u535a\u57fa\u5c3c\u8dd1\u8f66\u7684\u529f\u7387\u5927\u5c0f\uff0c\u53ef\u80fd\u4f1a\u8fd9\u6837\u8ba1\u7b97:  HorsePower = 0.0015 * annualSalary - 0.99 * hoursListeningToPublicRadio  \u8fd9\u5c31\u662f\u6240\u8c13\u7684  \u56de\u5f52\u65b9\u7a0b(regression equation) \uff0c\u5176\u4e2d\u7684 0.0015 \u548c -0.99 \u79f0\u4f5c  \u56de\u5f52\u7cfb\u6570\uff08regression weights\uff09 \uff0c\u6c42\u8fd9\u4e9b\u56de\u5f52\u7cfb\u6570\u7684\u8fc7\u7a0b\u5c31\u662f\u56de\u5f52\u3002\u4e00\u65e6\u6709\u4e86\u8fd9\u4e9b\u56de\u5f52\u7cfb\u6570\uff0c\u518d\u7ed9\u5b9a\u8f93\u5165\uff0c\u505a\u9884\u6d4b\u5c31\u975e\u5e38\u5bb9\u6613\u4e86\u3002\u5177\u4f53\u7684\u505a\u6cd5\u662f\u7528\u56de\u5f52\u7cfb\u6570\u4e58\u4ee5\u8f93\u5165\u503c\uff0c\u518d\u5c06\u7ed3\u679c\u5168\u90e8\u52a0\u5728\u4e00\u8d77\uff0c\u5c31\u5f97\u5230\u4e86\u9884\u6d4b\u503c\u3002\u6211\u4eec\u8fd9\u91cc\u6240\u8bf4\u7684\uff0c\u56de\u5f52\u7cfb\u6570\u662f\u4e00\u4e2a\u5411\u91cf\uff0c\u8f93\u5165\u4e5f\u662f\u5411\u91cf\uff0c\u8fd9\u4e9b\u8fd0\u7b97\u4e5f\u5c31\u662f\u6c42\u51fa\u4e8c\u8005\u7684\u5185\u79ef\u3002  \u8bf4\u5230\u56de\u5f52\uff0c\u4e00\u822c\u90fd\u662f\u6307  \u7ebf\u6027\u56de\u5f52(linear regression) \u3002\u7ebf\u6027\u56de\u5f52\u610f\u5473\u7740\u53ef\u4ee5\u5c06\u8f93\u5165\u9879\u5206\u522b\u4e58\u4ee5\u4e00\u4e9b\u5e38\u91cf\uff0c\u518d\u5c06\u7ed3\u679c\u52a0\u8d77\u6765\u5f97\u5230\u8f93\u51fa\u3002  \u8865\u5145\uff1a \n\u7ebf\u6027\u56de\u5f52\u5047\u8bbe\u7279\u5f81\u548c\u7ed3\u679c\u6ee1\u8db3\u7ebf\u6027\u5173\u7cfb\u3002\u5176\u5b9e\u7ebf\u6027\u5173\u7cfb\u7684\u8868\u8fbe\u80fd\u529b\u975e\u5e38\u5f3a\u5927\uff0c\u6bcf\u4e2a\u7279\u5f81\u5bf9\u7ed3\u679c\u7684\u5f71\u54cd\u5f3a\u5f31\u53ef\u4ee5\u7531\u524d\u9762\u7684\u53c2\u6570\u4f53\u73b0\uff0c\u800c\u4e14\u6bcf\u4e2a\u7279\u5f81\u53d8\u91cf\u53ef\u4ee5\u9996\u5148\u6620\u5c04\u5230\u4e00\u4e2a\u51fd\u6570\uff0c\u7136\u540e\u518d\u53c2\u4e0e\u7ebf\u6027\u8ba1\u7b97\u3002\u8fd9\u6837\u5c31\u53ef\u4ee5\u8868\u8fbe\u7279\u5f81\u4e0e\u7ed3\u679c\u4e4b\u95f4\u7684\u975e\u7ebf\u6027\u5173\u7cfb\u3002", 
            "title": "\u56de\u5f52 \u573a\u666f"
        }, 
        {
            "location": "/\u4e66\u7c4d/\u673a\u5668\u5b66\u4e60\u5b9e\u6218/08.\u9884\u6d4b\u6570\u503c\u578b\u6570\u636e-\u56de\u5f52/#_2", 
            "text": "", 
            "title": "\u56de\u5f52 \u539f\u7406"
        }, 
        {
            "location": "/\u4e66\u7c4d/\u673a\u5668\u5b66\u4e60\u5b9e\u6218/08.\u9884\u6d4b\u6570\u503c\u578b\u6570\u636e-\u56de\u5f52/#1", 
            "text": "\u6211\u4eec\u5e94\u8be5\u600e\u6837\u4ece\u4e00\u5927\u5806\u6570\u636e\u91cc\u6c42\u51fa\u56de\u5f52\u65b9\u7a0b\u5462\uff1f \u5047\u5b9a\u8f93\u5165\u6570\u636e\u5b58\u653e\u5728\u77e9\u9635 x \u4e2d\uff0c\u800c\u56de\u5f52\u7cfb\u6570\u5b58\u653e\u5728\u5411\u91cf w \u4e2d\u3002\u90a3\u4e48\u5bf9\u4e8e\u7ed9\u5b9a\u7684\u6570\u636e X1\uff0c\u9884\u6d4b\u7ed3\u679c\u5c06\u4f1a\u901a\u8fc7 Y = X1^T w \u7ed9\u51fa\u3002\u73b0\u5728\u7684\u95ee\u9898\u662f\uff0c\u624b\u91cc\u6709\u4e00\u4e9b X \u548c\u5bf9\u5e94\u7684 y\uff0c\u600e\u6837\u624d\u80fd\u627e\u5230 w \u5462\uff1f\u4e00\u4e2a\u5e38\u7528\u7684\u65b9\u6cd5\u5c31\u662f\u627e\u51fa\u4f7f\u8bef\u5dee\u6700\u5c0f\u7684 w \u3002\u8fd9\u91cc\u7684\u8bef\u5dee\u662f\u6307\u9884\u6d4b y \u503c\u548c\u771f\u5b9e y \u503c\u4e4b\u95f4\u7684\u5dee\u503c\uff0c\u4f7f\u7528\u8be5\u8bef\u5dee\u7684\u7b80\u5355\u7d2f\u52a0\u5c06\u4f7f\u5f97\u6b63\u5dee\u503c\u548c\u8d1f\u5dee\u503c\u76f8\u4e92\u62b5\u6d88\uff0c\u6240\u4ee5\u6211\u4eec\u91c7\u7528\u5e73\u65b9\u8bef\u5dee\uff08\u5b9e\u9645\u4e0a\u5c31\u662f\u6211\u4eec\u901a\u5e38\u6240\u8bf4\u7684\u6700\u5c0f\u4e8c\u4e58\u6cd5\uff09\u3002  \u5e73\u65b9\u8bef\u5dee\u53ef\u4ee5\u5199\u505a\uff08\u5176\u5b9e\u6211\u4eec\u662f\u4f7f\u7528\u8fd9\u4e2a\u51fd\u6570\u4f5c\u4e3a loss function\uff09:    \u7528\u77e9\u9635\u8868\u793a\u8fd8\u53ef\u4ee5\u5199\u505a   \u3002\u5982\u679c\u5bf9 w \u6c42\u5bfc\uff0c\u5f97\u5230   \uff0c\u4ee4\u5176\u7b49\u4e8e\u96f6\uff0c\u89e3\u51fa w \u5982\u4e0b\uff08\u5177\u4f53\u6c42\u5bfc\u8fc7\u7a0b\u4e3a:  http://blog.csdn.net/nomadlx53/article/details/50849941  \uff09:", 
            "title": "1\u3001\u7ebf\u6027\u56de\u5f52"
        }, 
        {
            "location": "/\u4e66\u7c4d/\u673a\u5668\u5b66\u4e60\u5b9e\u6218/08.\u9884\u6d4b\u6570\u503c\u578b\u6570\u636e-\u56de\u5f52/#11", 
            "text": "", 
            "title": "1.1\u3001\u7ebf\u6027\u56de\u5f52 \u987b\u77e5\u6982\u5ff5"
        }, 
        {
            "location": "/\u4e66\u7c4d/\u673a\u5668\u5b66\u4e60\u5b9e\u6218/08.\u9884\u6d4b\u6570\u503c\u578b\u6570\u636e-\u56de\u5f52/#111", 
            "text": "\u56e0\u4e3a\u6211\u4eec\u5728\u8ba1\u7b97\u56de\u5f52\u65b9\u7a0b\u7684\u56de\u5f52\u7cfb\u6570\u65f6\uff0c\u7528\u5230\u7684\u8ba1\u7b97\u516c\u5f0f\u5982\u4e0b:    \u9700\u8981\u5bf9\u77e9\u9635\u6c42\u9006\uff0c\u56e0\u6b64\u8fd9\u4e2a\u65b9\u7a0b\u53ea\u5728\u9006\u77e9\u9635\u5b58\u5728\u7684\u65f6\u5019\u9002\u7528\uff0c\u6211\u4eec\u5728\u7a0b\u5e8f\u4ee3\u7801\u4e2d\u5bf9\u6b64\u4f5c\u51fa\u5224\u65ad\u3002\n\u5224\u65ad\u77e9\u9635\u662f\u5426\u53ef\u9006\u7684\u4e00\u4e2a\u53ef\u9009\u65b9\u6848\u662f:   \u5224\u65ad\u77e9\u9635\u7684\u884c\u5217\u5f0f\u662f\u5426\u4e3a 0\uff0c\u82e5\u4e3a 0 \uff0c\u77e9\u9635\u5c31\u4e0d\u5b58\u5728\u9006\u77e9\u9635\uff0c\u4e0d\u4e3a 0 \u7684\u8bdd\uff0c\u77e9\u9635\u624d\u5b58\u5728\u9006\u77e9\u9635\u3002", 
            "title": "1.1.1\u3001\u77e9\u9635\u6c42\u9006"
        }, 
        {
            "location": "/\u4e66\u7c4d/\u673a\u5668\u5b66\u4e60\u5b9e\u6218/08.\u9884\u6d4b\u6570\u503c\u578b\u6570\u636e-\u56de\u5f52/#112", 
            "text": "\u6700\u5c0f\u4e8c\u4e58\u6cd5\uff08\u53c8\u79f0\u6700\u5c0f\u5e73\u65b9\u6cd5\uff09\u662f\u4e00\u79cd\u6570\u5b66\u4f18\u5316\u6280\u672f\u3002\u5b83\u901a\u8fc7\u6700\u5c0f\u5316\u8bef\u5dee\u7684\u5e73\u65b9\u548c\u5bfb\u627e\u6570\u636e\u7684\u6700\u4f73\u51fd\u6570\u5339\u914d\u3002", 
            "title": "1.1.2\u3001\u6700\u5c0f\u4e8c\u4e58\u6cd5"
        }, 
        {
            "location": "/\u4e66\u7c4d/\u673a\u5668\u5b66\u4e60\u5b9e\u6218/08.\u9884\u6d4b\u6570\u503c\u578b\u6570\u636e-\u56de\u5f52/#12", 
            "text": "\u8bfb\u5165\u6570\u636e\uff0c\u5c06\u6570\u636e\u7279\u5f81x\u3001\u7279\u5f81\u6807\u7b7ey\u5b58\u50a8\u5728\u77e9\u9635x\u3001y\u4e2d\n\u9a8c\u8bc1 x^Tx \u77e9\u9635\u662f\u5426\u53ef\u9006\n\u4f7f\u7528\u6700\u5c0f\u4e8c\u4e58\u6cd5\u6c42\u5f97 \u56de\u5f52\u7cfb\u6570 w \u7684\u6700\u4f73\u4f30\u8ba1", 
            "title": "1.2\u3001\u7ebf\u6027\u56de\u5f52 \u5de5\u4f5c\u539f\u7406"
        }, 
        {
            "location": "/\u4e66\u7c4d/\u673a\u5668\u5b66\u4e60\u5b9e\u6218/08.\u9884\u6d4b\u6570\u503c\u578b\u6570\u636e-\u56de\u5f52/#13", 
            "text": "\u6536\u96c6\u6570\u636e: \u91c7\u7528\u4efb\u610f\u65b9\u6cd5\u6536\u96c6\u6570\u636e\n\u51c6\u5907\u6570\u636e: \u56de\u5f52\u9700\u8981\u6570\u503c\u578b\u6570\u636e\uff0c\u6807\u79f0\u578b\u6570\u636e\u5c06\u88ab\u8f6c\u6362\u6210\u4e8c\u503c\u578b\u6570\u636e\n\u5206\u6790\u6570\u636e: \u7ed8\u51fa\u6570\u636e\u7684\u53ef\u89c6\u5316\u4e8c\u7ef4\u56fe\u5c06\u6709\u52a9\u4e8e\u5bf9\u6570\u636e\u505a\u51fa\u7406\u89e3\u548c\u5206\u6790\uff0c\u5728\u91c7\u7528\u7f29\u51cf\u6cd5\u6c42\u5f97\u65b0\u56de\u5f52\u7cfb\u6570\u4e4b\u540e\uff0c\u53ef\u4ee5\u5c06\u65b0\u62df\u5408\u7ebf\u7ed8\u5728\u56fe\u4e0a\u4f5c\u4e3a\u5bf9\u6bd4\n\u8bad\u7ec3\u7b97\u6cd5: \u627e\u5230\u56de\u5f52\u7cfb\u6570\n\u6d4b\u8bd5\u7b97\u6cd5: \u4f7f\u7528 R^2 \u6216\u8005\u9884\u6d4b\u503c\u548c\u6570\u636e\u7684\u62df\u5408\u5ea6\uff0c\u6765\u5206\u6790\u6a21\u578b\u7684\u6548\u679c\n\u4f7f\u7528\u7b97\u6cd5: \u4f7f\u7528\u56de\u5f52\uff0c\u53ef\u4ee5\u5728\u7ed9\u5b9a\u8f93\u5165\u7684\u65f6\u5019\u9884\u6d4b\u51fa\u4e00\u4e2a\u6570\u503c\uff0c\u8fd9\u662f\u5bf9\u5206\u7c7b\u65b9\u6cd5\u7684\u63d0\u5347\uff0c\u56e0\u4e3a\u8fd9\u6837\u53ef\u4ee5\u9884\u6d4b\u8fde\u7eed\u578b\u6570\u636e\u800c\u4e0d\u4ec5\u4ec5\u662f\u79bb\u6563\u7684\u7c7b\u522b\u6807\u7b7e", 
            "title": "1.3\u3001\u7ebf\u6027\u56de\u5f52 \u5f00\u53d1\u6d41\u7a0b"
        }, 
        {
            "location": "/\u4e66\u7c4d/\u673a\u5668\u5b66\u4e60\u5b9e\u6218/08.\u9884\u6d4b\u6570\u503c\u578b\u6570\u636e-\u56de\u5f52/#14", 
            "text": "\u4f18\u70b9\uff1a\u7ed3\u679c\u6613\u4e8e\u7406\u89e3\uff0c\u8ba1\u7b97\u4e0a\u4e0d\u590d\u6742\u3002\n\u7f3a\u70b9\uff1a\u5bf9\u975e\u7ebf\u6027\u7684\u6570\u636e\u62df\u5408\u4e0d\u597d\u3002\n\u9002\u7528\u4e8e\u6570\u636e\u7c7b\u578b\uff1a\u6570\u503c\u578b\u548c\u6807\u79f0\u578b\u6570\u636e\u3002", 
            "title": "1.4\u3001\u7ebf\u6027\u56de\u5f52 \u7b97\u6cd5\u7279\u70b9"
        }, 
        {
            "location": "/\u4e66\u7c4d/\u673a\u5668\u5b66\u4e60\u5b9e\u6218/08.\u9884\u6d4b\u6570\u503c\u578b\u6570\u636e-\u56de\u5f52/#15", 
            "text": "", 
            "title": "1.5\u3001\u7ebf\u6027\u56de\u5f52 \u9879\u76ee\u6848\u4f8b"
        }, 
        {
            "location": "/\u4e66\u7c4d/\u673a\u5668\u5b66\u4e60\u5b9e\u6218/08.\u9884\u6d4b\u6570\u503c\u578b\u6570\u636e-\u56de\u5f52/#151", 
            "text": "\u6839\u636e\u4e0b\u56fe\u4e2d\u7684\u70b9\uff0c\u627e\u51fa\u8be5\u6570\u636e\u7684\u6700\u4f73\u62df\u5408\u76f4\u7ebf\u3002   \u6570\u636e\u683c\u5f0f\u4e3a:   x0          x1          y \n1.000000    0.067732    3.176513\n1.000000    0.427810    3.816464\n1.000000    0.995731    4.550095\n1.000000    0.738336    4.256571", 
            "title": "1.5.1\u3001\u7ebf\u6027\u56de\u5f52 \u9879\u76ee\u6982\u8ff0"
        }, 
        {
            "location": "/\u4e66\u7c4d/\u673a\u5668\u5b66\u4e60\u5b9e\u6218/08.\u9884\u6d4b\u6570\u503c\u578b\u6570\u636e-\u56de\u5f52/#152", 
            "text": "def   loadDataSet ( fileName ):                  \n      \u52a0\u8f7d\u6570\u636e          \u89e3\u6790\u4ee5tab\u952e\u5206\u9694\u7684\u6587\u4ef6\u4e2d\u7684\u6d6e\u70b9\u6570      Returns\uff1a          dataMat \uff1a  feature \u5bf9\u5e94\u7684\u6570\u636e\u96c6          labelMat \uff1a feature \u5bf9\u5e94\u7684\u5206\u7c7b\u6807\u7b7e\uff0c\u5373\u7c7b\u522b\u6807\u7b7e       \n     # \u83b7\u53d6\u6837\u672c\u7279\u5f81\u7684\u603b\u6570\uff0c\u4e0d\u7b97\u6700\u540e\u7684\u76ee\u6807\u53d8\u91cf  \n     numFeat   =   len ( open ( fileName ) . readline () . split ( \\t ))   -   1  \n     dataMat   =   [] \n     labelMat   =   [] \n     fr   =   open ( fileName ) \n     for   line   in   fr . readlines (): \n         # \u8bfb\u53d6\u6bcf\u4e00\u884c \n         lineArr   = [] \n         # \u5220\u9664\u4e00\u884c\u4e2d\u4ee5tab\u5206\u9694\u7684\u6570\u636e\u524d\u540e\u7684\u7a7a\u767d\u7b26\u53f7 \n         curLine   =   line . strip () . split ( \\t ) \n         # i \u4ece0\u52302\uff0c\u4e0d\u5305\u62ec2  \n         for   i   in   range ( numFeat ): \n             # \u5c06\u6570\u636e\u6dfb\u52a0\u5230lineArr List\u4e2d\uff0c\u6bcf\u4e00\u884c\u6570\u636e\u6d4b\u8bd5\u6570\u636e\u7ec4\u6210\u4e00\u4e2a\u884c\u5411\u91cf            \n             lineArr . append ( float ( curLine [ i ])) \n             # \u5c06\u6d4b\u8bd5\u6570\u636e\u7684\u8f93\u5165\u6570\u636e\u90e8\u5206\u5b58\u50a8\u5230dataMat \u7684List\u4e2d \n         dataMat . append ( lineArr ) \n         # \u5c06\u6bcf\u4e00\u884c\u7684\u6700\u540e\u4e00\u4e2a\u6570\u636e\uff0c\u5373\u7c7b\u522b\uff0c\u6216\u8005\u53eb\u76ee\u6807\u53d8\u91cf\u5b58\u50a8\u5230labelMat List\u4e2d \n         labelMat . append ( float ( curLine [ - 1 ])) \n     return   dataMat , labelMat  def   standRegres ( xArr , yArr ): \n          Description\uff1a          \u7ebf\u6027\u56de\u5f52      Args:          xArr \uff1a\u8f93\u5165\u7684\u6837\u672c\u6570\u636e\uff0c\u5305\u542b\u6bcf\u4e2a\u6837\u672c\u6570\u636e\u7684 feature          yArr \uff1a\u5bf9\u5e94\u4e8e\u8f93\u5165\u6570\u636e\u7684\u7c7b\u522b\u6807\u7b7e\uff0c\u4e5f\u5c31\u662f\u6bcf\u4e2a\u6837\u672c\u5bf9\u5e94\u7684\u76ee\u6807\u53d8\u91cf      Returns:          ws\uff1a\u56de\u5f52\u7cfb\u6570       \n\n     # mat()\u51fd\u6570\u5c06xArr\uff0cyArr\u8f6c\u6362\u4e3a\u77e9\u9635 mat().T \u4ee3\u8868\u7684\u662f\u5bf9\u77e9\u9635\u8fdb\u884c\u8f6c\u7f6e\u64cd\u4f5c \n     xMat   =   mat ( xArr ) \n     yMat   =   mat ( yArr ) . T \n     # \u77e9\u9635\u4e58\u6cd5\u7684\u6761\u4ef6\u662f\u5de6\u77e9\u9635\u7684\u5217\u6570\u7b49\u4e8e\u53f3\u77e9\u9635\u7684\u884c\u6570 \n     xTx   =   xMat . T * xMat \n     # \u56e0\u4e3a\u8981\u7528\u5230xTx\u7684\u9006\u77e9\u9635\uff0c\u6240\u4ee5\u4e8b\u5148\u9700\u8981\u786e\u5b9a\u8ba1\u7b97\u5f97\u5230\u7684xTx\u662f\u5426\u53ef\u9006\uff0c\u6761\u4ef6\u662f\u77e9\u9635\u7684\u884c\u5217\u5f0f\u4e0d\u4e3a0 \n     # linalg.det() \u51fd\u6570\u662f\u7528\u6765\u6c42\u5f97\u77e9\u9635\u7684\u884c\u5217\u5f0f\u7684\uff0c\u5982\u679c\u77e9\u9635\u7684\u884c\u5217\u5f0f\u4e3a0\uff0c\u5219\u8fd9\u4e2a\u77e9\u9635\u662f\u4e0d\u53ef\u9006\u7684\uff0c\u5c31\u65e0\u6cd5\u8fdb\u884c\u63a5\u4e0b\u6765\u7684\u8fd0\u7b97                    \n     if   linalg . det ( xTx )   ==   0.0 : \n         print   This matrix is singular, cannot do inverse  \n         return \n     # \u6700\u5c0f\u4e8c\u4e58\u6cd5 \n     # http://www.apache.wiki/pages/viewpage.action?pageId=5505133 \n     # \u4e66\u4e2d\u7684\u516c\u5f0f\uff0c\u6c42\u5f97w\u7684\u6700\u4f18\u89e3 \n     ws   =   xTx . I   *   ( xMat . T * yMat )             \n     return   ws  def   regression1 (): \n     xArr ,   yArr   =   loadDataSet ( input/8.Regression/data.txt ) \n     xMat   =   mat ( xArr ) \n     yMat   =   mat ( yArr ) \n     ws   =   standRegres ( xArr ,   yArr ) \n     fig   =   plt . figure () \n     ax   =   fig . add_subplot ( 111 )                 #add_subplot(349)\u51fd\u6570\u7684\u53c2\u6570\u7684\u610f\u601d\u662f\uff0c\u5c06\u753b\u5e03\u5206\u62103\u884c4\u5217\u56fe\u50cf\u753b\u5728\u4ece\u5de6\u5230\u53f3\u4ece\u4e0a\u5230\u4e0b\u7b2c9\u5757 \n     ax . scatter ( xMat [:,   1 ] . flatten (),   yMat . T [:,   0 ] . flatten () . A [ 0 ])   #scatter \u7684x\u662fxMat\u4e2d\u7684\u7b2c\u4e8c\u5217\uff0cy\u662fyMat\u7684\u7b2c\u4e00\u5217 \n     xCopy   =   xMat . copy ()  \n     xCopy . sort ( 0 ) \n     yHat   =   xCopy   *   ws \n     ax . plot ( xCopy [:,   1 ],   yHat ) \n     plt . show ()   \u5b8c\u6574\u4ee3\u7801\u5730\u5740 :  https://github.com/apachecn/MachineLearning/blob/master/src/python/8.PredictiveNumericalDataRegression/regression.py", 
            "title": "1.5.2\u3001\u7ebf\u6027\u56de\u5f52 \u7f16\u5199\u4ee3\u7801"
        }, 
        {
            "location": "/\u4e66\u7c4d/\u673a\u5668\u5b66\u4e60\u5b9e\u6218/08.\u9884\u6d4b\u6570\u503c\u578b\u6570\u636e-\u56de\u5f52/#153", 
            "text": "", 
            "title": "1.5.3\u3001\u7ebf\u6027\u56de\u5f52 \u62df\u5408\u6548\u679c"
        }, 
        {
            "location": "/\u4e66\u7c4d/\u673a\u5668\u5b66\u4e60\u5b9e\u6218/08.\u9884\u6d4b\u6570\u503c\u578b\u6570\u636e-\u56de\u5f52/#2", 
            "text": "\u7ebf\u6027\u56de\u5f52\u7684\u4e00\u4e2a\u95ee\u9898\u662f\u6709\u53ef\u80fd\u51fa\u73b0\u6b20\u62df\u5408\u73b0\u8c61\uff0c\u56e0\u4e3a\u5b83\u6c42\u7684\u662f\u5177\u6709\u6700\u5c0f\u5747\u65b9\u5dee\u7684\u65e0\u504f\u4f30\u8ba1\u3002\u663e\u800c\u6613\u89c1\uff0c\u5982\u679c\u6a21\u578b\u6b20\u62df\u5408\u5c06\u4e0d\u80fd\u53d6\u5f97\u6700\u597d\u7684\u9884\u6d4b\u6548\u679c\u3002\u6240\u4ee5\u6709\u4e9b\u65b9\u6cd5\u5141\u8bb8\u5728\u4f30\u8ba1\u4e2d\u5f15\u5165\u4e00\u4e9b\u504f\u5dee\uff0c\u4ece\u800c\u964d\u4f4e\u9884\u6d4b\u7684\u5747\u65b9\u8bef\u5dee\u3002  \u4e00\u4e2a\u65b9\u6cd5\u662f\u5c40\u90e8\u52a0\u6743\u7ebf\u6027\u56de\u5f52\uff08Locally Weighted Linear Regression\uff0cLWLR\uff09\u3002\u5728\u8fd9\u4e2a\u7b97\u6cd5\u4e2d\uff0c\u6211\u4eec\u7ed9\u9884\u6d4b\u70b9\u9644\u8fd1\u7684\u6bcf\u4e2a\u70b9\u8d4b\u4e88\u4e00\u5b9a\u7684\u6743\u91cd\uff0c\u7136\u540e\u4e0e \u7ebf\u6027\u56de\u5f52 \u7c7b\u4f3c\uff0c\u5728\u8fd9\u4e2a\u5b50\u96c6\u4e0a\u57fa\u4e8e\u6700\u5c0f\u5747\u65b9\u8bef\u5dee\u6765\u8fdb\u884c\u666e\u901a\u7684\u56de\u5f52\u3002\u6211\u4eec\u9700\u8981\u6700\u5c0f\u5316\u7684\u76ee\u6807\u51fd\u6570\u5927\u81f4\u4e3a:   \u4e0e kNN \u4e00\u6837\uff0c\u8fd9\u79cd\u7b97\u6cd5\u6bcf\u6b21\u9884\u6d4b\u5747\u9700\u8981\u4e8b\u5148\u9009\u53d6\u51fa\u5bf9\u5e94\u7684\u6570\u636e\u5b50\u96c6\u3002\u8be5\u7b97\u6cd5\u89e3\u51fa\u56de\u5f52\u7cfb\u6570 w \u7684\u5f62\u5f0f\u5982\u4e0b:    \u5176\u4e2d w \u662f\u4e00\u4e2a\u77e9\u9635\uff0c\u7528\u6765\u7ed9\u6bcf\u4e2a\u6570\u636e\u70b9\u8d4b\u4e88\u6743\u91cd\u3002  LWLR \u4f7f\u7528 \u201c\u6838\u201d\uff08\u4e0e\u652f\u6301\u5411\u91cf\u673a\u4e2d\u7684\u6838\u7c7b\u4f3c\uff09\u6765\u5bf9\u9644\u8fd1\u7684\u70b9\u8d4b\u4e88\u66f4\u9ad8\u7684\u6743\u91cd\u3002\u6838\u7684\u7c7b\u578b\u53ef\u4ee5\u81ea\u7531\u9009\u62e9\uff0c\u6700\u5e38\u7528\u7684\u6838\u5c31\u662f\u9ad8\u65af\u6838\uff0c\u9ad8\u65af\u6838\u5bf9\u5e94\u7684\u6743\u91cd\u5982\u4e0b:    \u8fd9\u6837\u5c31\u6784\u5efa\u4e86\u4e00\u4e2a\u53ea\u542b\u5bf9\u89d2\u5143\u7d20\u7684\u6743\u91cd\u77e9\u9635  w \uff0c\u5e76\u4e14\u70b9 x \u4e0e x(i) \u8d8a\u8fd1\uff0cw(i, i) \u5c06\u4f1a\u8d8a\u5927\u3002\u4e0a\u8ff0\u516c\u5f0f\u4e2d\u5305\u542b\u4e00\u4e2a\u9700\u8981\u7528\u6237\u6307\u5b9a\u7684\u53c2\u6570 k \uff0c\u5b83\u51b3\u5b9a\u4e86\u5bf9\u9644\u8fd1\u7684\u70b9\u8d4b\u4e88\u591a\u5927\u7684\u6743\u91cd\uff0c\u8fd9\u4e5f\u662f\u4f7f\u7528 LWLR \u65f6\u552f\u4e00\u9700\u8981\u8003\u8651\u7684\u53c2\u6570\uff0c\u4e0b\u9762\u7684\u56fe\u7ed9\u51fa\u4e86\u53c2\u6570 k \u4e0e\u6743\u91cd\u7684\u5173\u7cfb\u3002   \u4e0a\u9762\u7684\u56fe\u662f \u6bcf\u4e2a\u70b9\u7684\u6743\u91cd\u56fe\uff08\u5047\u5b9a\u6211\u4eec\u6b63\u9884\u6d4b\u7684\u70b9\u662f x = 0.5\uff09\uff0c\u6700\u4e0a\u9762\u7684\u56fe\u662f\u539f\u59cb\u6570\u636e\u96c6\uff0c\u7b2c\u4e8c\u4e2a\u56fe\u663e\u793a\u4e86\u5f53 k = 0.5 \u65f6\uff0c\u5927\u90e8\u5206\u7684\u6570\u636e\u90fd\u7528\u4e8e\u8bad\u7ec3\u56de\u5f52\u6a21\u578b\uff1b\u800c\u6700\u4e0b\u9762\u7684\u56fe\u663e\u793a\u5f53 k=0.01 \u65f6\uff0c\u4ec5\u6709\u5f88\u5c11\u7684\u5c40\u90e8\u70b9\u88ab\u7528\u4e8e\u8bad\u7ec3\u56de\u5f52\u6a21\u578b\u3002", 
            "title": "2\u3001\u5c40\u90e8\u52a0\u6743\u7ebf\u6027\u56de\u5f52"
        }, 
        {
            "location": "/\u4e66\u7c4d/\u673a\u5668\u5b66\u4e60\u5b9e\u6218/08.\u9884\u6d4b\u6570\u503c\u578b\u6570\u636e-\u56de\u5f52/#21", 
            "text": "\u8bfb\u5165\u6570\u636e\uff0c\u5c06\u6570\u636e\u7279\u5f81x\u3001\u7279\u5f81\u6807\u7b7ey\u5b58\u50a8\u5728\u77e9\u9635x\u3001y\u4e2d\n\u5229\u7528\u9ad8\u65af\u6838\u6784\u9020\u4e00\u4e2a\u6743\u91cd\u77e9\u9635 W\uff0c\u5bf9\u9884\u6d4b\u70b9\u9644\u8fd1\u7684\u70b9\u65bd\u52a0\u6743\u91cd\n\u9a8c\u8bc1 X^TWX \u77e9\u9635\u662f\u5426\u53ef\u9006\n\u4f7f\u7528\u6700\u5c0f\u4e8c\u4e58\u6cd5\u6c42\u5f97 \u56de\u5f52\u7cfb\u6570 w \u7684\u6700\u4f73\u4f30\u8ba1", 
            "title": "2.1\u3001\u5c40\u90e8\u52a0\u6743\u7ebf\u6027\u56de\u5f52 \u5de5\u4f5c\u539f\u7406"
        }, 
        {
            "location": "/\u4e66\u7c4d/\u673a\u5668\u5b66\u4e60\u5b9e\u6218/08.\u9884\u6d4b\u6570\u503c\u578b\u6570\u636e-\u56de\u5f52/#22", 
            "text": "", 
            "title": "2.2\u3001\u5c40\u90e8\u52a0\u6743\u7ebf\u6027\u56de\u5f52 \u9879\u76ee\u6848\u4f8b"
        }, 
        {
            "location": "/\u4e66\u7c4d/\u673a\u5668\u5b66\u4e60\u5b9e\u6218/08.\u9884\u6d4b\u6570\u503c\u578b\u6570\u636e-\u56de\u5f52/#221", 
            "text": "\u6211\u4eec\u4ecd\u7136\u4f7f\u7528\u4e0a\u9762 \u7ebf\u6027\u56de\u5f52 \u7684\u6570\u636e\u96c6\uff0c\u5bf9\u8fd9\u4e9b\u70b9\u8fdb\u884c\u4e00\u4e2a \u5c40\u90e8\u52a0\u6743\u7ebf\u6027\u56de\u5f52 \u7684\u62df\u5408\u3002   \u6570\u636e\u683c\u5f0f\u4e3a:   1.000000    0.067732    3.176513\n1.000000    0.427810    3.816464\n1.000000    0.995731    4.550095\n1.000000    0.738336    4.256571", 
            "title": "2.2.1\u3001\u5c40\u90e8\u52a0\u6743\u7ebf\u6027\u56de\u5f52 \u9879\u76ee\u6982\u8ff0"
        }, 
        {
            "location": "/\u4e66\u7c4d/\u673a\u5668\u5b66\u4e60\u5b9e\u6218/08.\u9884\u6d4b\u6570\u503c\u578b\u6570\u636e-\u56de\u5f52/#222", 
            "text": "# \u5c40\u90e8\u52a0\u6743\u7ebf\u6027\u56de\u5f52  def   lwlr ( testPoint , xArr , yArr , k = 1.0 ): \n              Description\uff1a              \u5c40\u90e8\u52a0\u6743\u7ebf\u6027\u56de\u5f52\uff0c\u5728\u5f85\u9884\u6d4b\u70b9\u9644\u8fd1\u7684\u6bcf\u4e2a\u70b9\u8d4b\u4e88\u4e00\u5b9a\u7684\u6743\u91cd\uff0c\u5728\u5b50\u96c6\u4e0a\u57fa\u4e8e\u6700\u5c0f\u5747\u65b9\u5dee\u6765\u8fdb\u884c\u666e\u901a\u7684\u56de\u5f52\u3002          Args\uff1a              testPoint\uff1a\u6837\u672c\u70b9              xArr\uff1a\u6837\u672c\u7684\u7279\u5f81\u6570\u636e\uff0c\u5373 feature              yArr\uff1a\u6bcf\u4e2a\u6837\u672c\u5bf9\u5e94\u7684\u7c7b\u522b\u6807\u7b7e\uff0c\u5373\u76ee\u6807\u53d8\u91cf              k:\u5173\u4e8e\u8d4b\u4e88\u6743\u91cd\u77e9\u9635\u7684\u6838\u7684\u4e00\u4e2a\u53c2\u6570\uff0c\u4e0e\u6743\u91cd\u7684\u8870\u51cf\u901f\u7387\u6709\u5173          Returns:              testPoint * ws\uff1a\u6570\u636e\u70b9\u4e0e\u5177\u6709\u6743\u91cd\u7684\u7cfb\u6570\u76f8\u4e58\u5f97\u5230\u7684\u9884\u6d4b\u70b9          Notes:              \u8fd9\u5176\u4e2d\u4f1a\u7528\u5230\u8ba1\u7b97\u6743\u91cd\u7684\u516c\u5f0f\uff0cw = e^((x^((i))-x) / -2k^2)              \u7406\u89e3\uff1ax\u4e3a\u67d0\u4e2a\u9884\u6d4b\u70b9\uff0cx^((i))\u4e3a\u6837\u672c\u70b9\uff0c\u6837\u672c\u70b9\u8ddd\u79bb\u9884\u6d4b\u70b9\u8d8a\u8fd1\uff0c\u8d21\u732e\u7684\u8bef\u5dee\u8d8a\u5927\uff08\u6743\u503c\u8d8a\u5927\uff09\uff0c\u8d8a\u8fdc\u5219\u8d21\u732e\u7684\u8bef\u5dee\u8d8a\u5c0f\uff08\u6743\u503c\u8d8a\u5c0f\uff09\u3002              \u5173\u4e8e\u9884\u6d4b\u70b9\u7684\u9009\u53d6\uff0c\u5728\u6211\u7684\u4ee3\u7801\u4e2d\u53d6\u7684\u662f\u6837\u672c\u70b9\u3002\u5176\u4e2dk\u662f\u5e26\u5bbd\u53c2\u6570\uff0c\u63a7\u5236w\uff08\u949f\u5f62\u51fd\u6570\uff09\u7684\u5bbd\u7a84\u7a0b\u5ea6\uff0c\u7c7b\u4f3c\u4e8e\u9ad8\u65af\u51fd\u6570\u7684\u6807\u51c6\u5dee\u3002              \u7b97\u6cd5\u601d\u8def\uff1a\u5047\u8bbe\u9884\u6d4b\u70b9\u53d6\u6837\u672c\u70b9\u4e2d\u7684\u7b2ci\u4e2a\u6837\u672c\u70b9\uff08\u5171m\u4e2a\u6837\u672c\u70b9\uff09\uff0c\u904d\u53861\u5230m\u4e2a\u6837\u672c\u70b9\uff08\u542b\u7b2ci\u4e2a\uff09\uff0c\u7b97\u51fa\u6bcf\u4e00\u4e2a\u6837\u672c\u70b9\u4e0e\u9884\u6d4b\u70b9\u7684\u8ddd\u79bb\uff0c              \u4e5f\u5c31\u53ef\u4ee5\u8ba1\u7b97\u51fa\u6bcf\u4e2a\u6837\u672c\u8d21\u732e\u8bef\u5dee\u7684\u6743\u503c\uff0c\u53ef\u4ee5\u770b\u51faw\u662f\u4e00\u4e2a\u6709m\u4e2a\u5143\u7d20\u7684\u5411\u91cf\uff08\u5199\u6210\u5bf9\u89d2\u9635\u5f62\u5f0f\uff09\u3002       \n     # mat() \u51fd\u6570\u662f\u5c06array\u8f6c\u6362\u4e3a\u77e9\u9635\u7684\u51fd\u6570\uff0c mat().T \u662f\u8f6c\u6362\u4e3a\u77e9\u9635\u4e4b\u540e\uff0c\u518d\u8fdb\u884c\u8f6c\u7f6e\u64cd\u4f5c \n     xMat   =   mat ( xArr ) \n     yMat   =   mat ( yArr ) . T \n     # \u83b7\u5f97xMat\u77e9\u9635\u7684\u884c\u6570 \n     m   =   shape ( xMat )[ 0 ] \n     # eye()\u8fd4\u56de\u4e00\u4e2a\u5bf9\u89d2\u7ebf\u5143\u7d20\u4e3a1\uff0c\u5176\u4ed6\u5143\u7d20\u4e3a0\u7684\u4e8c\u7ef4\u6570\u7ec4\uff0c\u521b\u5efa\u6743\u91cd\u77e9\u9635weights\uff0c\u8be5\u77e9\u9635\u4e3a\u6bcf\u4e2a\u6837\u672c\u70b9\u521d\u59cb\u5316\u4e86\u4e00\u4e2a\u6743\u91cd                    \n     weights   =   mat ( eye (( m ))) \n     for   j   in   range ( m ): \n         # testPoint \u7684\u5f62\u5f0f\u662f \u4e00\u4e2a\u884c\u5411\u91cf\u7684\u5f62\u5f0f \n         # \u8ba1\u7b97 testPoint \u4e0e\u8f93\u5165\u6837\u672c\u70b9\u4e4b\u95f4\u7684\u8ddd\u79bb\uff0c\u7136\u540e\u4e0b\u9762\u8ba1\u7b97\u51fa\u6bcf\u4e2a\u6837\u672c\u8d21\u732e\u8bef\u5dee\u7684\u6743\u503c \n         diffMat   =   testPoint   -   xMat [ j ,:] \n         # k\u63a7\u5236\u8870\u51cf\u7684\u901f\u5ea6 \n         weights [ j , j ]   =   exp ( diffMat * diffMat . T / ( - 2.0 * k ** 2 )) \n     # \u6839\u636e\u77e9\u9635\u4e58\u6cd5\u8ba1\u7b97 xTx \uff0c\u5176\u4e2d\u7684 weights \u77e9\u9635\u662f\u6837\u672c\u70b9\u5bf9\u5e94\u7684\u6743\u91cd\u77e9\u9635 \n     xTx   =   xMat . T   *   ( weights   *   xMat ) \n     if   linalg . det ( xTx )   ==   0.0 : \n         print   ( This matrix is singular, cannot do inverse ) \n         return \n     # \u8ba1\u7b97\u51fa\u56de\u5f52\u7cfb\u6570\u7684\u4e00\u4e2a\u4f30\u8ba1 \n     ws   =   xTx . I   *   ( xMat . T   *   ( weights   *   yMat )) \n     return   testPoint   *   ws  def   lwlrTest ( testArr , xArr , yArr , k = 1.0 ): \n              Description\uff1a              \u6d4b\u8bd5\u5c40\u90e8\u52a0\u6743\u7ebf\u6027\u56de\u5f52\uff0c\u5bf9\u6570\u636e\u96c6\u4e2d\u6bcf\u4e2a\u70b9\u8c03\u7528 lwlr() \u51fd\u6570          Args\uff1a              testArr\uff1a\u6d4b\u8bd5\u6240\u7528\u7684\u6240\u6709\u6837\u672c\u70b9              xArr\uff1a\u6837\u672c\u7684\u7279\u5f81\u6570\u636e\uff0c\u5373 feature              yArr\uff1a\u6bcf\u4e2a\u6837\u672c\u5bf9\u5e94\u7684\u7c7b\u522b\u6807\u7b7e\uff0c\u5373\u76ee\u6807\u53d8\u91cf              k\uff1a\u63a7\u5236\u6838\u51fd\u6570\u7684\u8870\u51cf\u901f\u7387          Returns\uff1a              yHat\uff1a\u9884\u6d4b\u70b9\u7684\u4f30\u8ba1\u503c       \n     # \u5f97\u5230\u6837\u672c\u70b9\u7684\u603b\u6570 \n     m   =   shape ( testArr )[ 0 ] \n     # \u6784\u5efa\u4e00\u4e2a\u5168\u90e8\u90fd\u662f 0 \u7684 1 * m \u7684\u77e9\u9635 \n     yHat   =   zeros ( m ) \n     # \u5faa\u73af\u6240\u6709\u7684\u6570\u636e\u70b9\uff0c\u5e76\u5c06lwlr\u8fd0\u7528\u4e8e\u6240\u6709\u7684\u6570\u636e\u70b9  \n     for   i   in   range ( m ): \n         yHat [ i ]   =   lwlr ( testArr [ i ], xArr , yArr , k ) \n     # \u8fd4\u56de\u4f30\u8ba1\u503c \n     return   yHat  def   lwlrTestPlot ( xArr , yArr , k = 1.0 ):   \n              Description:              \u9996\u5148\u5c06 X \u6392\u5e8f\uff0c\u5176\u4f59\u7684\u90fd\u4e0elwlrTest\u76f8\u540c\uff0c\u8fd9\u6837\u66f4\u5bb9\u6613\u7ed8\u56fe          Args\uff1a              xArr\uff1a\u6837\u672c\u7684\u7279\u5f81\u6570\u636e\uff0c\u5373 feature              yArr\uff1a\u6bcf\u4e2a\u6837\u672c\u5bf9\u5e94\u7684\u7c7b\u522b\u6807\u7b7e\uff0c\u5373\u76ee\u6807\u53d8\u91cf\uff0c\u5b9e\u9645\u503c              k\uff1a\u63a7\u5236\u6838\u51fd\u6570\u7684\u8870\u51cf\u901f\u7387\u7684\u6709\u5173\u53c2\u6570\uff0c\u8fd9\u91cc\u8bbe\u5b9a\u7684\u662f\u5e38\u91cf\u503c 1          Return\uff1a              yHat\uff1a\u6837\u672c\u70b9\u7684\u4f30\u8ba1\u503c              xCopy\uff1axArr\u7684\u590d\u5236       \n     # \u751f\u6210\u4e00\u4e2a\u4e0e\u76ee\u6807\u53d8\u91cf\u6570\u76ee\u76f8\u540c\u7684 0 \u5411\u91cf \n     yHat   =   zeros ( shape ( yArr )) \n     # \u5c06 xArr \u8f6c\u6362\u4e3a \u77e9\u9635\u5f62\u5f0f \n     xCopy   =   mat ( xArr ) \n     # \u6392\u5e8f \n     xCopy . sort ( 0 ) \n     # \u5f00\u59cb\u5faa\u73af\uff0c\u4e3a\u6bcf\u4e2a\u6837\u672c\u70b9\u8fdb\u884c\u5c40\u90e8\u52a0\u6743\u7ebf\u6027\u56de\u5f52\uff0c\u5f97\u5230\u6700\u7ec8\u7684\u76ee\u6807\u53d8\u91cf\u4f30\u8ba1\u503c \n     for   i   in   range ( shape ( xArr )[ 0 ]): \n         yHat [ i ]   =   lwlr ( xCopy [ i ], xArr , yArr , k ) \n     return   yHat , xCopy  #test for LWLR  def   regression2 (): \n     xArr ,   yArr   =   loadDataSet ( input/8.Regression/data.txt ) \n     yHat   =   lwlrTest ( xArr ,   xArr ,   yArr ,   0.003 ) \n     xMat   =   mat ( xArr ) \n     srtInd   =   xMat [:, 1 ] . argsort ( 0 )             #argsort()\u51fd\u6570\u662f\u5c06x\u4e2d\u7684\u5143\u7d20\u4ece\u5c0f\u5230\u5927\u6392\u5217\uff0c\u63d0\u53d6\u5176\u5bf9\u5e94\u7684index(\u7d22\u5f15)\uff0c\u7136\u540e\u8f93\u51fa \n     xSort = xMat [ srtInd ][:, 0 ,:] \n     fig   =   plt . figure () \n     ax   =   fig . add_subplot ( 111 ) \n     ax . plot ( xSort [:, 1 ],   yHat [ srtInd ]) \n     ax . scatter ( xMat [:, 1 ] . flatten () . A [ 0 ],   mat ( yArr ) . T . flatten () . A [ 0 ]   ,   s = 2 ,   c = red ) \n     plt . show ()   \u5b8c\u6574\u4ee3\u7801\u5730\u5740 :  https://github.com/apachecn/MachineLearning/blob/master/src/python/8.PredictiveNumericalDataRegression/regression.py", 
            "title": "2.2.2\u3001\u5c40\u90e8\u52a0\u6743\u7ebf\u6027\u56de\u5f52 \u7f16\u5199\u4ee3\u7801"
        }, 
        {
            "location": "/\u4e66\u7c4d/\u673a\u5668\u5b66\u4e60\u5b9e\u6218/08.\u9884\u6d4b\u6570\u503c\u578b\u6570\u636e-\u56de\u5f52/#223", 
            "text": "\u4e0a\u56fe\u4f7f\u7528\u4e86 3 \u79cd\u4e0d\u540c\u5e73\u6ed1\u503c\u7ed8\u51fa\u7684\u5c40\u90e8\u52a0\u6743\u7ebf\u6027\u56de\u5f52\u7684\u7ed3\u679c\u3002\u4e0a\u56fe\u4e2d\u7684\u5e73\u6ed1\u7cfb\u6570 k =1.0\uff0c\u4e2d\u56fe k = 0.01\uff0c\u4e0b\u56fe k = 0.003 \u3002\u53ef\u4ee5\u770b\u5230\uff0ck = 1.0 \u65f6\u7684\u6a21\u578b\u6548\u679c\u4e0e\u6700\u5c0f\u4e8c\u4e58\u6cd5\u5dee\u4e0d\u591a\uff0ck=0.01\u65f6\u8be5\u6a21\u578b\u53ef\u4ee5\u6316\u51fa\u6570\u636e\u7684\u6f5c\u5728\u89c4\u5f8b\uff0c\u800c k=0.003\u65f6\u5219\u8003\u8651\u4e86\u592a\u591a\u7684\u566a\u58f0\uff0c\u8fdb\u800c\u5bfc\u81f4\u4e86\u8fc7\u62df\u5408\u73b0\u8c61\u3002", 
            "title": "2.2.3\u3001\u5c40\u90e8\u52a0\u6743\u7ebf\u6027\u56de\u5f52 \u62df\u5408\u6548\u679c"
        }, 
        {
            "location": "/\u4e66\u7c4d/\u673a\u5668\u5b66\u4e60\u5b9e\u6218/08.\u9884\u6d4b\u6570\u503c\u578b\u6570\u636e-\u56de\u5f52/#23", 
            "text": "\u5c40\u90e8\u52a0\u6743\u7ebf\u6027\u56de\u5f52\u4e5f\u5b58\u5728\u4e00\u4e2a\u95ee\u9898\uff0c\u5373\u589e\u52a0\u4e86\u8ba1\u7b97\u91cf\uff0c\u56e0\u4e3a\u5b83\u5bf9\u6bcf\u4e2a\u70b9\u505a\u9884\u6d4b\u65f6\u90fd\u5fc5\u987b\u4f7f\u7528\u6574\u4e2a\u6570\u636e\u96c6\u3002", 
            "title": "2.3\u3001\u5c40\u90e8\u52a0\u6743\u7ebf\u6027\u56de\u5f52 \u6ce8\u610f\u4e8b\u9879"
        }, 
        {
            "location": "/\u4e66\u7c4d/\u673a\u5668\u5b66\u4e60\u5b9e\u6218/08.\u9884\u6d4b\u6570\u503c\u578b\u6570\u636e-\u56de\u5f52/#3", 
            "text": "\u5230\u6b64\u4e3a\u6b62\uff0c\u6211\u4eec\u5df2\u7ecf\u4ecb\u7ecd\u4e86\u627e\u51fa\u6700\u4f73\u62df\u5408\u76f4\u7ebf\u7684\u4e24\u79cd\u65b9\u6cd5\uff0c\u4e0b\u9762\u6211\u4eec\u7528\u8fd9\u4e9b\u6280\u672f\u6765\u9884\u6d4b\u9c8d\u9c7c\u7684\u5e74\u9f84\u3002", 
            "title": "3\u3001\u7ebf\u6027\u56de\u5f52 &amp; \u5c40\u90e8\u52a0\u6743\u7ebf\u6027\u56de\u5f52 \u9879\u76ee\u6848\u4f8b"
        }, 
        {
            "location": "/\u4e66\u7c4d/\u673a\u5668\u5b66\u4e60\u5b9e\u6218/08.\u9884\u6d4b\u6570\u503c\u578b\u6570\u636e-\u56de\u5f52/#31", 
            "text": "\u6211\u4eec\u6709\u4e00\u4efd\u6765\u81ea UCI \u7684\u6570\u636e\u96c6\u5408\u7684\u6570\u636e\uff0c\u8bb0\u5f55\u4e86\u9c8d\u9c7c\uff08\u4e00\u79cd\u4ecb\u58f3\u7c7b\u6c34\u751f\u52a8\u7269\uff09\u7684\u5e74\u9f84\u3002\u9c8d\u9c7c\u5e74\u9f84\u53ef\u4ee5\u4ece\u9c8d\u9c7c\u58f3\u7684\u5c42\u6570\u63a8\u7b97\u5f97\u5230\u3002", 
            "title": "3.1\u3001\u9879\u76ee\u6982\u8ff0"
        }, 
        {
            "location": "/\u4e66\u7c4d/\u673a\u5668\u5b66\u4e60\u5b9e\u6218/08.\u9884\u6d4b\u6570\u503c\u578b\u6570\u636e-\u56de\u5f52/#32", 
            "text": "\u6536\u96c6\u6570\u636e: \u91c7\u7528\u4efb\u610f\u65b9\u6cd5\u6536\u96c6\u6570\u636e\n\u51c6\u5907\u6570\u636e: \u56de\u5f52\u9700\u8981\u6570\u503c\u578b\u6570\u636e\uff0c\u6807\u79f0\u578b\u6570\u636e\u5c06\u88ab\u8f6c\u6362\u6210\u4e8c\u503c\u578b\u6570\u636e\n\u5206\u6790\u6570\u636e: \u7ed8\u51fa\u6570\u636e\u7684\u53ef\u89c6\u5316\u4e8c\u7ef4\u56fe\u5c06\u6709\u52a9\u4e8e\u5bf9\u6570\u636e\u505a\u51fa\u7406\u89e3\u548c\u5206\u6790\uff0c\u5728\u91c7\u7528\u7f29\u51cf\u6cd5\u6c42\u5f97\u65b0\u56de\u5f52\u7cfb\u6570\u4e4b\u540e\uff0c\u53ef\u4ee5\u5c06\u65b0\u62df\u5408\u7ebf\u7ed8\u5728\u56fe\u4e0a\u4f5c\u4e3a\u5bf9\u6bd4\n\u8bad\u7ec3\u7b97\u6cd5: \u627e\u5230\u56de\u5f52\u7cfb\u6570\n\u6d4b\u8bd5\u7b97\u6cd5: \u4f7f\u7528 rssError()\u51fd\u6570 \u8ba1\u7b97\u9884\u6d4b\u8bef\u5dee\u7684\u5927\u5c0f\uff0c\u6765\u5206\u6790\u6a21\u578b\u7684\u6548\u679c\n\u4f7f\u7528\u7b97\u6cd5: \u4f7f\u7528\u56de\u5f52\uff0c\u53ef\u4ee5\u5728\u7ed9\u5b9a\u8f93\u5165\u7684\u65f6\u5019\u9884\u6d4b\u51fa\u4e00\u4e2a\u6570\u503c\uff0c\u8fd9\u662f\u5bf9\u5206\u7c7b\u65b9\u6cd5\u7684\u63d0\u5347\uff0c\u56e0\u4e3a\u8fd9\u6837\u53ef\u4ee5\u9884\u6d4b\u8fde\u7eed\u578b\u6570\u636e\u800c\u4e0d\u4ec5\u4ec5\u662f\u79bb\u6563\u7684\u7c7b\u522b\u6807\u7b7e   \u6536\u96c6\u6570\u636e: \u91c7\u7528\u4efb\u610f\u65b9\u6cd5\u6536\u96c6\u6570\u636e  \u51c6\u5907\u6570\u636e: \u56de\u5f52\u9700\u8981\u6570\u503c\u578b\u6570\u636e\uff0c\u6807\u79f0\u578b\u6570\u636e\u5c06\u88ab\u8f6c\u6362\u6210\u4e8c\u503c\u578b\u6570\u636e   \u6570\u636e\u5b58\u50a8\u683c\u5f0f:  1   0.455   0.365   0.095   0.514   0.2245  0.101   0.15    15\n1   0.35    0.265   0.09    0.2255  0.0995  0.0485  0.07    7\n-1  0.53    0.42    0.135   0.677   0.2565  0.1415  0.21    9\n1   0.44    0.365   0.125   0.516   0.2155  0.114   0.155   10\n0   0.33    0.255   0.08    0.205   0.0895  0.0395  0.055   7   \u5206\u6790\u6570\u636e: \u7ed8\u51fa\u6570\u636e\u7684\u53ef\u89c6\u5316\u4e8c\u7ef4\u56fe\u5c06\u6709\u52a9\u4e8e\u5bf9\u6570\u636e\u505a\u51fa\u7406\u89e3\u548c\u5206\u6790\uff0c\u5728\u91c7\u7528\u7f29\u51cf\u6cd5\u6c42\u5f97\u65b0\u56de\u5f52\u7cfb\u6570\u4e4b\u540e\uff0c\u53ef\u4ee5\u5c06\u65b0\u62df\u5408\u7ebf\u7ed8\u5728\u56fe\u4e0a\u4f5c\u4e3a\u5bf9\u6bd4  \u8bad\u7ec3\u7b97\u6cd5: \u627e\u5230\u56de\u5f52\u7cfb\u6570   \u4f7f\u7528\u4e0a\u9762\u6211\u4eec\u8bb2\u5230\u7684 \u5c40\u90e8\u52a0\u6743\u7ebf\u6027\u56de\u5f52 \u8bad\u7ec3\u7b97\u6cd5\uff0c\u6c42\u51fa\u56de\u5f52\u7cfb\u6570   \u6d4b\u8bd5\u7b97\u6cd5: \u4f7f\u7528 rssError()\u51fd\u6570 \u8ba1\u7b97\u9884\u6d4b\u8bef\u5dee\u7684\u5927\u5c0f\uff0c\u6765\u5206\u6790\u6a21\u578b\u7684\u6548\u679c   # test for abloneDataSet  def   abaloneTest (): \n          Desc:          \u9884\u6d4b\u9c8d\u9c7c\u7684\u5e74\u9f84      Args:          None      Returns:          None       \n     # \u52a0\u8f7d\u6570\u636e \n     abX ,   abY   =   loadDataSet ( input/8.Regression/abalone.txt ) \n     # \u4f7f\u7528\u4e0d\u540c\u7684\u6838\u8fdb\u884c\u9884\u6d4b \n     oldyHat01   =   lwlrTest ( abX [ 0 : 99 ],   abX [ 0 : 99 ],   abY [ 0 : 99 ],   0.1 ) \n     oldyHat1   =   lwlrTest ( abX [ 0 : 99 ],   abX [ 0 : 99 ],   abY [ 0 : 99 ],   1 ) \n     oldyHat10   =   lwlrTest ( abX [ 0 : 99 ],   abX [ 0 : 99 ],   abY [ 0 : 99 ],   10 )    \n     # \u6253\u5370\u51fa\u4e0d\u540c\u7684\u6838\u9884\u6d4b\u503c\u4e0e\u8bad\u7ec3\u6570\u636e\u96c6\u4e0a\u7684\u771f\u5b9e\u503c\u4e4b\u95f4\u7684\u8bef\u5dee\u5927\u5c0f \n     print   old yHat01 error Size is :   ,   rssError ( abY [ 0 : 99 ],   oldyHat01 . T ) \n     print   old yHat1 error Size is :   ,   rssError ( abY [ 0 : 99 ],   oldyHat1 . T ) \n     print   old yHat10 error Size is :   ,   rssError ( abY [ 0 : 99 ],   oldyHat10 . T ) \n\n     # \u6253\u5370\u51fa \u4e0d\u540c\u7684\u6838\u9884\u6d4b\u503c \u4e0e \u65b0\u6570\u636e\u96c6\uff08\u6d4b\u8bd5\u6570\u636e\u96c6\uff09\u4e0a\u7684\u771f\u5b9e\u503c\u4e4b\u95f4\u7684\u8bef\u5dee\u5927\u5c0f \n     newyHat01   =   lwlrTest ( abX [ 100 : 199 ],   abX [ 0 : 99 ],   abY [ 0 : 99 ],   0.1 ) \n     print   new yHat01 error Size is :   ,   rssError ( abY [ 0 : 99 ],   newyHat01 . T ) \n     newyHat1   =   lwlrTest ( abX [ 100 : 199 ],   abX [ 0 : 99 ],   abY [ 0 : 99 ],   1 ) \n     print   new yHat1 error Size is :   ,   rssError ( abY [ 0 : 99 ],   newyHat1 . T ) \n     newyHat10   =   lwlrTest ( abX [ 100 : 199 ],   abX [ 0 : 99 ],   abY [ 0 : 99 ],   10 ) \n     print   new yHat10 error Size is :   ,   rssError ( abY [ 0 : 99 ],   newyHat10 . T ) \n\n     # \u4f7f\u7528\u7b80\u5355\u7684 \u7ebf\u6027\u56de\u5f52 \u8fdb\u884c\u9884\u6d4b\uff0c\u4e0e\u4e0a\u9762\u7684\u8ba1\u7b97\u8fdb\u884c\u6bd4\u8f83 \n     standWs   =   standRegres ( abX [ 0 : 99 ],   abY [ 0 : 99 ]) \n     standyHat   =   mat ( abX [ 100 : 199 ])   *   standWs \n     print   standRegress error Size is: ,   rssError ( abY [ 100 : 199 ],   standyHat . T . A )   \u5b8c\u6574\u4ee3\u7801\u5730\u5740 :  https://github.com/apachecn/MachineLearning/blob/master/src/python/8.PredictiveNumericalDataRegression/regression.py  \u6839\u636e\u6211\u4eec\u4e0a\u8fb9\u7684\u6d4b\u8bd5\uff0c\u53ef\u4ee5\u770b\u51fa:   \u7b80\u5355\u7ebf\u6027\u56de\u5f52\u8fbe\u5230\u4e86\u4e0e\u5c40\u90e8\u52a0\u6743\u73b0\u884c\u56de\u5f52\u7c7b\u4f3c\u7684\u6548\u679c\u3002\u8fd9\u4e5f\u8bf4\u660e\u4e86\u4e00\u70b9\uff0c\u5fc5\u987b\u5728\u672a\u77e5\u6570\u636e\u4e0a\u6bd4\u8f83\u6548\u679c\u624d\u80fd\u9009\u53d6\u5230\u6700\u4f73\u6a21\u578b\u3002\u90a3\u4e48\u6700\u4f73\u7684\u6838\u5927\u5c0f\u662f 10 \u5417\uff1f\u6216\u8bb8\u662f\uff0c\u4f46\u5982\u679c\u60f3\u5f97\u5230\u66f4\u597d\u7684\u6548\u679c\uff0c\u5e94\u8be5\u7528 10 \u4e2a\u4e0d\u540c\u7684\u6837\u672c\u96c6\u505a 10 \u6b21\u6d4b\u8bd5\u6765\u6bd4\u8f83\u7ed3\u679c\u3002   \u4f7f\u7528\u7b97\u6cd5: \u4f7f\u7528\u56de\u5f52\uff0c\u53ef\u4ee5\u5728\u7ed9\u5b9a\u8f93\u5165\u7684\u65f6\u5019\u9884\u6d4b\u51fa\u4e00\u4e2a\u6570\u503c\uff0c\u8fd9\u662f\u5bf9\u5206\u7c7b\u65b9\u6cd5\u7684\u63d0\u5347\uff0c\u56e0\u4e3a\u8fd9\u6837\u53ef\u4ee5\u9884\u6d4b\u8fde\u7eed\u578b\u6570\u636e\u800c\u4e0d\u4ec5\u4ec5\u662f\u79bb\u6563\u7684\u7c7b\u522b\u6807\u7b7e", 
            "title": "3.2\u3001\u5f00\u53d1\u6d41\u7a0b"
        }, 
        {
            "location": "/\u4e66\u7c4d/\u673a\u5668\u5b66\u4e60\u5b9e\u6218/08.\u9884\u6d4b\u6570\u503c\u578b\u6570\u636e-\u56de\u5f52/#4", 
            "text": "\u5982\u679c\u6570\u636e\u7684\u7279\u5f81\u6bd4\u6837\u672c\u70b9\u8fd8\u591a\u5e94\u8be5\u600e\u4e48\u529e\uff1f\u662f\u5426\u8fd8\u53ef\u4ee5\u4f7f\u7528\u7ebf\u6027\u56de\u5f52\u548c\u4e4b\u524d\u7684\u65b9\u6cd5\u6765\u505a\u9884\u6d4b\uff1f\u7b54\u6848\u662f\u5426\u5b9a\u7684\uff0c\u5373\u6211\u4eec\u4e0d\u80fd\u518d\u4f7f\u7528\u524d\u9762\u4ecb\u7ecd\u7684\u65b9\u6cd5\u3002\u8fd9\u662f\u56e0\u4e3a\u5728\u8ba1\u7b97   \u7684\u65f6\u5019\u4f1a\u51fa\u9519\u3002  \u5982\u679c\u7279\u5f81\u6bd4\u6837\u672c\u70b9\u8fd8\u591a(n   m)\uff0c\u4e5f\u5c31\u662f\u8bf4\u8f93\u5165\u6570\u636e\u7684\u77e9\u9635 x \u4e0d\u662f\u6ee1\u79e9\u77e9\u9635\u3002\u975e\u6ee1\u79e9\u77e9\u9635\u6c42\u9006\u65f6\u4f1a\u51fa\u73b0\u95ee\u9898\u3002  \u4e3a\u4e86\u89e3\u51b3\u8fd9\u4e2a\u95ee\u9898\uff0c\u6211\u4eec\u5f15\u5165\u4e86  \u5cad\u56de\u5f52\uff08ridge regression\uff09  \u8fd9\u79cd\u7f29\u51cf\u65b9\u6cd5\u3002\u63a5\u7740\u662f  lasso\u6cd5 \uff0c\u6700\u540e\u4ecb\u7ecd  \u524d\u5411\u9010\u6b65\u56de\u5f52 \u3002", 
            "title": "4\u3001\u7f29\u51cf\u7cfb\u6570\u6765 \u201c\u7406\u89e3\u201d \u6570\u636e"
        }, 
        {
            "location": "/\u4e66\u7c4d/\u673a\u5668\u5b66\u4e60\u5b9e\u6218/08.\u9884\u6d4b\u6570\u503c\u578b\u6570\u636e-\u56de\u5f52/#41", 
            "text": "\u7b80\u5355\u6765\u8bf4\uff0c\u5cad\u56de\u5f52\u5c31\u662f\u5728\u77e9\u9635   \u4e0a\u52a0\u4e00\u4e2a \u03bbI \u4ece\u800c\u4f7f\u5f97\u77e9\u9635\u975e\u5947\u5f02\uff0c\u8fdb\u800c\u80fd\u5bf9   \u6c42\u9006\u3002\u5176\u4e2d\u77e9\u9635I\u662f\u4e00\u4e2a n * n \uff08\u7b49\u4e8e\u5217\u6570\uff09 \u7684\u5355\u4f4d\u77e9\u9635\uff0c\n\u5bf9\u89d2\u7ebf\u4e0a\u5143\u7d20\u5168\u4e3a1\uff0c\u5176\u4ed6\u5143\u7d20\u5168\u4e3a0\u3002\u800c\u03bb\u662f\u4e00\u4e2a\u7528\u6237\u5b9a\u4e49\u7684\u6570\u503c\uff0c\u540e\u9762\u4f1a\u505a\u4ecb\u7ecd\u3002\u5728\u8fd9\u79cd\u60c5\u51b5\u4e0b\uff0c\u56de\u5f52\u7cfb\u6570\u7684\u8ba1\u7b97\u516c\u5f0f\u5c06\u53d8\u6210\uff1a   \u5cad\u56de\u5f52\u6700\u5148\u7528\u6765\u5904\u7406\u7279\u5f81\u6570\u591a\u4e8e\u6837\u672c\u6570\u7684\u60c5\u51b5\uff0c\u73b0\u5728\u4e5f\u7528\u4e8e\u5728\u4f30\u8ba1\u4e2d\u52a0\u5165\u504f\u5dee\uff0c\u4ece\u800c\u5f97\u5230\u66f4\u597d\u7684\u4f30\u8ba1\u3002\u8fd9\u91cc\u901a\u8fc7\u5f15\u5165 \u03bb \u6765\u9650\u5236\u4e86\u6240\u6709 w \u4e4b\u548c\uff0c\u901a\u8fc7\u5f15\u5165\u8be5\u60e9\u7f5a\u9879\uff0c\u80fd\u591f\u51cf\u5c11\u4e0d\u91cd\u8981\u7684\u53c2\u6570\uff0c\u8fd9\u4e2a\u6280\u672f\u5728\u7edf\u8ba1\u5b66\u4e2d\u4e5f\u53eb\u4f5c  \u7f29\u51cf(shrinkage) \u3002   \u7f29\u51cf\u65b9\u6cd5\u53ef\u4ee5\u53bb\u6389\u4e0d\u91cd\u8981\u7684\u53c2\u6570\uff0c\u56e0\u6b64\u80fd\u66f4\u597d\u5730\u7406\u89e3\u6570\u636e\u3002\u6b64\u5916\uff0c\u4e0e\u7b80\u5355\u7684\u7ebf\u6027\u56de\u5f52\u76f8\u6bd4\uff0c\u7f29\u51cf\u6cd5\u80fd\u53d6\u5f97\u66f4\u597d\u7684\u9884\u6d4b\u6548\u679c\u3002  \u8fd9\u91cc\u901a\u8fc7\u9884\u6d4b\u8bef\u5dee\u6700\u5c0f\u5316\u5f97\u5230 \u03bb: \u6570\u636e\u83b7\u53d6\u4e4b\u540e\uff0c\u9996\u5148\u62bd\u4e00\u90e8\u5206\u6570\u636e\u7528\u4e8e\u6d4b\u8bd5\uff0c\u5269\u4f59\u7684\u4f5c\u4e3a\u8bad\u7ec3\u96c6\u7528\u4e8e\u8bad\u7ec3\u53c2\u6570 w\u3002\u8bad\u7ec3\u5b8c\u6bd5\u540e\u5728\u6d4b\u8bd5\u96c6\u4e0a\u6d4b\u8bd5\u9884\u6d4b\u6027\u80fd\u3002\u901a\u8fc7\u9009\u53d6\u4e0d\u540c\u7684 \u03bb \u6765\u91cd\u590d\u4e0a\u8ff0\u6d4b\u8bd5\u8fc7\u7a0b\uff0c\u6700\u7ec8\u5f97\u5230\u4e00\u4e2a\u4f7f\u9884\u6d4b\u8bef\u5dee\u6700\u5c0f\u7684 \u03bb \u3002", 
            "title": "4.1\u3001\u5cad\u56de\u5f52"
        }, 
        {
            "location": "/\u4e66\u7c4d/\u673a\u5668\u5b66\u4e60\u5b9e\u6218/08.\u9884\u6d4b\u6570\u503c\u578b\u6570\u636e-\u56de\u5f52/#411", 
            "text": "def   ridgeRegres ( xMat , yMat , lam = 0.2 ): \n              Desc\uff1a              \u8fd9\u4e2a\u51fd\u6570\u5b9e\u73b0\u4e86\u7ed9\u5b9a lambda \u4e0b\u7684\u5cad\u56de\u5f52\u6c42\u89e3\u3002              \u5982\u679c\u6570\u636e\u7684\u7279\u5f81\u6bd4\u6837\u672c\u70b9\u8fd8\u591a\uff0c\u5c31\u4e0d\u80fd\u518d\u4f7f\u7528\u4e0a\u9762\u4ecb\u7ecd\u7684\u7684\u7ebf\u6027\u56de\u5f52\u548c\u5c40\u90e8\u7ebf\u6027\u56de\u5f52\u4e86\uff0c\u56e0\u4e3a\u8ba1\u7b97 (xTx)^(-1)\u4f1a\u51fa\u73b0\u9519\u8bef\u3002              \u5982\u679c\u7279\u5f81\u6bd4\u6837\u672c\u70b9\u8fd8\u591a\uff08n   m\uff09\uff0c\u4e5f\u5c31\u662f\u8bf4\uff0c\u8f93\u5165\u6570\u636e\u7684\u77e9\u9635x\u4e0d\u662f\u6ee1\u79e9\u77e9\u9635\u3002\u975e\u6ee1\u79e9\u77e9\u9635\u5728\u6c42\u9006\u65f6\u4f1a\u51fa\u73b0\u95ee\u9898\u3002              \u4e3a\u4e86\u89e3\u51b3\u8fd9\u4e2a\u95ee\u9898\uff0c\u6211\u4eec\u4e0b\u8fb9\u8bb2\u4e00\u4e0b\uff1a\u5cad\u56de\u5f52\uff0c\u8fd9\u662f\u6211\u4eec\u8981\u8bb2\u7684\u7b2c\u4e00\u79cd\u7f29\u51cf\u65b9\u6cd5\u3002          Args\uff1a              xMat\uff1a\u6837\u672c\u7684\u7279\u5f81\u6570\u636e\uff0c\u5373 feature              yMat\uff1a\u6bcf\u4e2a\u6837\u672c\u5bf9\u5e94\u7684\u7c7b\u522b\u6807\u7b7e\uff0c\u5373\u76ee\u6807\u53d8\u91cf\uff0c\u5b9e\u9645\u503c              lam\uff1a\u5f15\u5165\u7684\u4e00\u4e2a\u03bb\u503c\uff0c\u4f7f\u5f97\u77e9\u9635\u975e\u5947\u5f02          Returns\uff1a              \u7ecf\u8fc7\u5cad\u56de\u5f52\u516c\u5f0f\u8ba1\u7b97\u5f97\u5230\u7684\u56de\u5f52\u7cfb\u6570       \n\n     xTx   =   xMat . T * xMat \n     # \u5cad\u56de\u5f52\u5c31\u662f\u5728\u77e9\u9635 xTx \u4e0a\u52a0\u4e00\u4e2a \u03bbI \u4ece\u800c\u4f7f\u5f97\u77e9\u9635\u975e\u5947\u5f02\uff0c\u8fdb\u800c\u80fd\u5bf9 xTx + \u03bbI \u6c42\u9006 \n     denom   =   xTx   +   eye ( shape ( xMat )[ 1 ]) * lam \n     # \u68c0\u67e5\u884c\u5217\u5f0f\u662f\u5426\u4e3a\u96f6\uff0c\u5373\u77e9\u9635\u662f\u5426\u53ef\u9006\uff0c\u884c\u5217\u5f0f\u4e3a0\u7684\u8bdd\u5c31\u4e0d\u53ef\u9006\uff0c\u4e0d\u4e3a0\u7684\u8bdd\u5c31\u662f\u53ef\u9006\u3002 \n     if   linalg . det ( denom )   ==   0.0 : \n         print   ( This matrix is singular, cannot do inverse ) \n         return \n     ws   =   denom . I   *   ( xMat . T * yMat ) \n     return   ws  def   ridgeTest ( xArr , yArr ): \n              Desc\uff1a              \u51fd\u6570 ridgeTest() \u7528\u4e8e\u5728\u4e00\u7ec4 \u03bb \u4e0a\u6d4b\u8bd5\u7ed3\u679c          Args\uff1a              xArr\uff1a\u6837\u672c\u6570\u636e\u7684\u7279\u5f81\uff0c\u5373 feature              yArr\uff1a\u6837\u672c\u6570\u636e\u7684\u7c7b\u522b\u6807\u7b7e\uff0c\u5373\u771f\u5b9e\u6570\u636e          Returns\uff1a              wMat\uff1a\u5c06\u6240\u6709\u7684\u56de\u5f52\u7cfb\u6570\u8f93\u51fa\u5230\u4e00\u4e2a\u77e9\u9635\u5e76\u8fd4\u56de       \n\n     xMat   =   mat ( xArr ) \n     yMat = mat ( yArr ) . T \n     # \u8ba1\u7b97Y\u7684\u5747\u503c \n     yMean   =   mean ( yMat , 0 ) \n     # Y\u7684\u6240\u6709\u7684\u7279\u5f81\u51cf\u53bb\u5747\u503c \n     yMat   =   yMat   -   yMean \n     # \u6807\u51c6\u5316 x\uff0c\u8ba1\u7b97 xMat \u5e73\u5747\u503c \n     xMeans   =   mean ( xMat , 0 ) \n     # \u7136\u540e\u8ba1\u7b97 X\u7684\u65b9\u5dee \n     xVar   =   var ( xMat , 0 ) \n     # \u6240\u6709\u7279\u5f81\u90fd\u51cf\u53bb\u5404\u81ea\u7684\u5747\u503c\u5e76\u9664\u4ee5\u65b9\u5dee \n     xMat   =   ( xMat   -   xMeans ) / xVar \n     # \u53ef\u4ee5\u5728 30 \u4e2a\u4e0d\u540c\u7684 lambda \u4e0b\u8c03\u7528 ridgeRegres() \u51fd\u6570\u3002 \n     numTestPts   =   30 \n     # \u521b\u5efa30 * m \u7684\u5168\u90e8\u6570\u636e\u4e3a0 \u7684\u77e9\u9635 \n     wMat   =   zeros (( numTestPts , shape ( xMat )[ 1 ])) \n     for   i   in   range ( numTestPts ): \n         # exp() \u8fd4\u56de e^x  \n         ws   =   ridgeRegres ( xMat , yMat , exp ( i - 10 )) \n         wMat [ i ,:] = ws . T \n     return   wMat  #test for ridgeRegression  def   regression3 (): \n     abX , abY   =   loadDataSet ( input/8.Regression/abalone.txt ) \n     ridgeWeights   =   ridgeTest ( abX ,   abY ) \n     fig   =   plt . figure () \n     ax   =   fig . add_subplot ( 111 ) \n     ax . plot ( ridgeWeights ) \n     plt . show ()   \u5b8c\u6574\u4ee3\u7801\u5730\u5740 :  https://github.com/apachecn/MachineLearning/blob/master/src/python/8.PredictiveNumericalDataRegression/regression.py", 
            "title": "4.1.1\u3001\u5cad\u56de\u5f52 \u539f\u59cb\u4ee3\u7801"
        }, 
        {
            "location": "/\u4e66\u7c4d/\u673a\u5668\u5b66\u4e60\u5b9e\u6218/08.\u9884\u6d4b\u6570\u503c\u578b\u6570\u636e-\u56de\u5f52/#412", 
            "text": "\u4e0a\u56fe\u7ed8\u5236\u51fa\u4e86\u56de\u5f52\u7cfb\u6570\u4e0e log(\u03bb) \u7684\u5173\u7cfb\u3002\u5728\u6700\u5de6\u8fb9\uff0c\u5373 \u03bb \u6700\u5c0f\u65f6\uff0c\u53ef\u4ee5\u5f97\u5230\u6240\u6709\u7cfb\u6570\u7684\u539f\u59cb\u503c\uff08\u4e0e\u7ebf\u6027\u56de\u5f52\u4e00\u81f4\uff09\uff1b\u800c\u5728\u53f3\u8fb9\uff0c\u7cfb\u6570\u5168\u90e8\u7f29\u51cf\u4e3a0\uff1b\u5728\u4e2d\u95f4\u90e8\u5206\u7684\u67d0\u503c\u5c06\u53ef\u4ee5\u53d6\u5f97\u6700\u597d\u7684\u9884\u6d4b\u6548\u679c\u3002\u4e3a\u4e86\u5b9a\u91cf\u5730\u627e\u5230\u6700\u4f73\u53c2\u6570\u503c\uff0c\u8fd8\u9700\u8981\u8fdb\u884c\u4ea4\u53c9\u9a8c\u8bc1\u3002\u53e6\u5916\uff0c\u8981\u5224\u65ad\u54ea\u4e9b\u53d8\u91cf\u5bf9\u7ed3\u679c\u9884\u6d4b\u6700\u5177\u6709\u5f71\u54cd\u529b\uff0c\u5728\u4e0a\u56fe\u4e2d\u89c2\u5bdf\u5b83\u4eec\u5bf9\u5e94\u7684\u7cfb\u6570\u5927\u5c0f\u5c31\u53ef\u4ee5\u4e86\u3002", 
            "title": "4.1.2\u3001\u5cad\u56de\u5f52\u5728\u9c8d\u9c7c\u6570\u636e\u96c6\u4e0a\u7684\u8fd0\u884c\u6548\u679c"
        }, 
        {
            "location": "/\u4e66\u7c4d/\u673a\u5668\u5b66\u4e60\u5b9e\u6218/08.\u9884\u6d4b\u6570\u503c\u578b\u6570\u636e-\u56de\u5f52/#42lassothe-least-absolute-shrinkage-and-selection-operator", 
            "text": "\u5728\u589e\u52a0\u5982\u4e0b\u7ea6\u675f\u65f6\uff0c\u666e\u901a\u7684\u6700\u5c0f\u4e8c\u4e58\u6cd5\u56de\u5f52\u4f1a\u5f97\u5230\u4e0e\u5cad\u56de\u5f52\u4e00\u6837\u7684\u516c\u5f0f:    \u4e0a\u5f0f\u9650\u5b9a\u4e86\u6240\u6709\u56de\u5f52\u7cfb\u6570\u7684\u5e73\u65b9\u548c\u4e0d\u80fd\u5927\u4e8e \u03bb \u3002\u4f7f\u7528\u666e\u901a\u7684\u6700\u5c0f\u4e8c\u4e58\u6cd5\u56de\u5f52\u5728\u5f53\u4e24\u4e2a\u6216\u66f4\u591a\u7684\u7279\u5f81\u76f8\u5173\u65f6\uff0c\u53ef\u80fd\u4f1a\u5f97\u5230\u4e00\u4e2a\u5f88\u5927\u7684\u6b63\u7cfb\u6570\u548c\u4e00\u4e2a\u5f88\u5927\u7684\u8d1f\u7cfb\u6570\u3002\u6b63\u662f\u56e0\u4e3a\u4e0a\u8ff0\u9650\u5236\u6761\u4ef6\u7684\u5b58\u5728\uff0c\u4f7f\u7528\u5cad\u56de\u5f52\u53ef\u4ee5\u907f\u514d\u8fd9\u4e2a\u95ee\u9898\u3002  \u4e0e\u5cad\u56de\u5f52\u7c7b\u4f3c\uff0c\u53e6\u4e00\u4e2a\u7f29\u51cf\u65b9\u6cd5lasso\u4e5f\u5bf9\u56de\u5f52\u7cfb\u6570\u505a\u4e86\u9650\u5b9a\uff0c\u5bf9\u5e94\u7684\u7ea6\u675f\u6761\u4ef6\u5982\u4e0b:    \u552f\u4e00\u7684\u4e0d\u540c\u70b9\u5728\u4e8e\uff0c\u8fd9\u4e2a\u7ea6\u675f\u6761\u4ef6\u4f7f\u7528\u7edd\u5bf9\u503c\u53d6\u4ee3\u4e86\u5e73\u65b9\u548c\u3002\u867d\u7136\u7ea6\u675f\u5f62\u5f0f\u53ea\u662f\u7a0d\u4f5c\u53d8\u5316\uff0c\u7ed3\u679c\u5374\u5927\u76f8\u5f84\u5ead: \u5728 \u03bb \u8db3\u591f\u5c0f\u7684\u65f6\u5019\uff0c\u4e00\u4e9b\u7cfb\u6570\u4f1a\u56e0\u6b64\u88ab\u8feb\u7f29\u51cf\u5230 0.\u8fd9\u4e2a\u7279\u6027\u53ef\u4ee5\u5e2e\u52a9\u6211\u4eec\u66f4\u597d\u5730\u7406\u89e3\u6570\u636e\u3002", 
            "title": "4.2\u3001\u5957\u7d22\u65b9\u6cd5(Lasso\uff0cThe Least Absolute Shrinkage and Selection Operator)"
        }, 
        {
            "location": "/\u4e66\u7c4d/\u673a\u5668\u5b66\u4e60\u5b9e\u6218/08.\u9884\u6d4b\u6570\u503c\u578b\u6570\u636e-\u56de\u5f52/#43", 
            "text": "\u524d\u5411\u9010\u6b65\u56de\u5f52\u7b97\u6cd5\u53ef\u4ee5\u5f97\u5230\u4e0e lasso \u5dee\u4e0d\u591a\u7684\u6548\u679c\uff0c\u4f46\u66f4\u52a0\u7b80\u5355\u3002\u5b83\u5c5e\u4e8e\u4e00\u79cd\u8d2a\u5fc3\u7b97\u6cd5\uff0c\u5373\u6bcf\u4e00\u6b65\u90fd\u5c3d\u53ef\u80fd\u51cf\u5c11\u8bef\u5dee\u3002\u4e00\u5f00\u59cb\uff0c\u6240\u6709\u6743\u91cd\u90fd\u8bbe\u7f6e\u4e3a 1\uff0c\u7136\u540e\u6bcf\u4e00\u6b65\u6240\u505a\u7684\u51b3\u7b56\u662f\u5bf9\u67d0\u4e2a\u6743\u91cd\u589e\u52a0\u6216\u51cf\u5c11\u4e00\u4e2a\u5f88\u5c0f\u7684\u503c\u3002  \u4f2a\u4ee3\u7801\u5982\u4e0b:  \u6570\u636e\u6807\u51c6\u5316\uff0c\u4f7f\u5176\u5206\u5e03\u6ee1\u8db3 0 \u5747\u503c \u548c\u5355\u4f4d\u65b9\u5dee\n\u5728\u6bcf\u8f6e\u8fed\u4ee3\u8fc7\u7a0b\u4e2d: \n    \u8bbe\u7f6e\u5f53\u524d\u6700\u5c0f\u8bef\u5dee lowestError \u4e3a\u6b63\u65e0\u7a77\n    \u5bf9\u6bcf\u4e2a\u7279\u5f81:\n        \u589e\u5927\u6216\u7f29\u5c0f:\n            \u6539\u53d8\u4e00\u4e2a\u7cfb\u6570\u5f97\u5230\u4e00\u4e2a\u65b0\u7684 w\n            \u8ba1\u7b97\u65b0 w \u4e0b\u7684\u8bef\u5dee\n            \u5982\u679c\u8bef\u5dee Error \u5c0f\u4e8e\u5f53\u524d\u6700\u5c0f\u8bef\u5dee lowestError: \u8bbe\u7f6e Wbest \u7b49\u4e8e\u5f53\u524d\u7684 W\n        \u5c06 W \u8bbe\u7f6e\u4e3a\u65b0\u7684 Wbest", 
            "title": "4.3\u3001\u524d\u5411\u9010\u6b65\u56de\u5f52"
        }, 
        {
            "location": "/\u4e66\u7c4d/\u673a\u5668\u5b66\u4e60\u5b9e\u6218/08.\u9884\u6d4b\u6570\u503c\u578b\u6570\u636e-\u56de\u5f52/#431", 
            "text": "def   stageWise ( xArr , yArr , eps = 0.01 , numIt = 100 ): \n     xMat   =   mat ( xArr );   yMat = mat ( yArr ) . T \n     yMean   =   mean ( yMat , 0 ) \n     yMat   =   yMat   -   yMean       # \u4e5f\u53ef\u4ee5\u89c4\u5219\u5316ys\u4f46\u4f1a\u5f97\u5230\u66f4\u5c0f\u7684coef \n     xMat   =   regularize ( xMat ) \n     m , n = shape ( xMat ) \n     #returnMat = zeros((numIt,n)) # \u6d4b\u8bd5\u4ee3\u7801\u5220\u9664 \n     ws   =   zeros (( n , 1 ));   wsTest   =   ws . copy ();   wsMax   =   ws . copy () \n     for   i   in   range ( numIt ): \n         print   ( ws . T ) \n         lowestError   =   inf ;  \n         for   j   in   range ( n ): \n             for   sign   in   [ - 1 , 1 ]: \n                 wsTest   =   ws . copy () \n                 wsTest [ j ]   +=   eps * sign \n                 yTest   =   xMat * wsTest \n                 rssE   =   rssError ( yMat . A , yTest . A ) \n                 if   rssE     lowestError : \n                     lowestError   =   rssE \n                     wsMax   =   wsTest \n         ws   =   wsMax . copy () \n         returnMat [ i ,:] = ws . T \n     return   returnMat  #test for stageWise  def   regression4 (): \n     xArr , yArr = loadDataSet ( input/8.Regression/abalone.txt ) \n     stageWise ( xArr , yArr , 0.01 , 200 ) \n     xMat   =   mat ( xArr ) \n     yMat   =   mat ( yArr ) . T \n     xMat   =   regularize ( xMat ) \n     yM   =   mean ( yMat , 0 ) \n     yMat   =   yMat   -   yM \n     weights   =   standRegres ( xMat ,   yMat . T ) \n     print   ( weights . T )   \u5b8c\u6574\u4ee3\u7801\u5730\u5740 :  https://github.com/apachecn/MachineLearning/blob/master/src/python/8.PredictiveNumericalDataRegression/regression.py", 
            "title": "4.3.1\u3001\u524d\u5411\u9010\u6b65\u56de\u5f52 \u539f\u59cb\u4ee3\u7801"
        }, 
        {
            "location": "/\u4e66\u7c4d/\u673a\u5668\u5b66\u4e60\u5b9e\u6218/08.\u9884\u6d4b\u6570\u503c\u578b\u6570\u636e-\u56de\u5f52/#432", 
            "text": "\u9010\u6b65\u7ebf\u6027\u56de\u5f52\u7b97\u6cd5\u7684\u4e3b\u8981\u4f18\u70b9\u5728\u4e8e\u5b83\u53ef\u4ee5\u5e2e\u52a9\u4eba\u4eec\u7406\u89e3\u73b0\u6709\u7684\u6a21\u578b\u5e76\u4f5c\u51fa\u6539\u8fdb\u3002\u5f53\u6784\u5efa\u4e86\u4e00\u4e2a\u6a21\u578b\u540e\uff0c\u53ef\u4ee5\u8fd0\u884c\u8be5\u7b97\u6cd5\u627e\u51fa\u91cd\u8981\u7684\u7279\u5f81\uff0c\u8fd9\u6837\u5c31\u6709\u53ef\u80fd\u53ca\u65f6\u505c\u6b62\u5bf9\u90a3\u4e9b\u4e0d\u91cd\u8981\u7279\u5f81\u7684\u6536\u96c6\u3002\u6700\u540e\uff0c\u5982\u679c\u7528\u4e8e\u6d4b\u8bd5\uff0c\u8be5\u7b97\u6cd5\u6bcf100\u6b21\u8fed\u4ee3\u540e\u5c31\u53ef\u4ee5\u6784\u5efa\u51fa\u4e00\u4e2a\u6a21\u578b\uff0c\u53ef\u4ee5\u4f7f\u7528\u7c7b\u4f3c\u4e8e10\u6298\u4ea4\u53c9\u9a8c\u8bc1\u7684\u65b9\u6cd5\u6bd4\u8f83\u8fd9\u4e9b\u6a21\u578b\uff0c\u6700\u7ec8\u9009\u62e9\u4f7f\u8bef\u5dee\u6700\u5c0f\u7684\u6a21\u578b\u3002", 
            "title": "4.3.2\u3001\u9010\u6b65\u7ebf\u6027\u56de\u5f52\u5728\u9c8d\u9c7c\u6570\u636e\u96c6\u4e0a\u7684\u8fd0\u884c\u6548\u679c"
        }, 
        {
            "location": "/\u4e66\u7c4d/\u673a\u5668\u5b66\u4e60\u5b9e\u6218/08.\u9884\u6d4b\u6570\u503c\u578b\u6570\u636e-\u56de\u5f52/#44", 
            "text": "\u5f53\u5e94\u7528\u7f29\u51cf\u65b9\u6cd5\uff08\u5982\u9010\u6b65\u7ebf\u6027\u56de\u5f52\u6216\u5cad\u56de\u5f52\uff09\u65f6\uff0c\u6a21\u578b\u4e5f\u5c31\u589e\u52a0\u4e86\u504f\u5dee\uff08bias\uff09\uff0c\u4e0e\u6b64\u540c\u65f6\u5374\u51cf\u5c0f\u4e86\u6a21\u578b\u7684\u65b9\u5dee\u3002", 
            "title": "4.4\u3001\u5c0f\u7ed3"
        }, 
        {
            "location": "/\u4e66\u7c4d/\u673a\u5668\u5b66\u4e60\u5b9e\u6218/08.\u9884\u6d4b\u6570\u503c\u578b\u6570\u636e-\u56de\u5f52/#5", 
            "text": "", 
            "title": "5\u3001\u56de\u5f52 \u9879\u76ee\u6848\u4f8b"
        }, 
        {
            "location": "/\u4e66\u7c4d/\u673a\u5668\u5b66\u4e60\u5b9e\u6218/08.\u9884\u6d4b\u6570\u503c\u578b\u6570\u636e-\u56de\u5f52/#1_1", 
            "text": "", 
            "title": "\u9879\u76ee\u6848\u4f8b1: \u9884\u6d4b\u4e50\u9ad8\u73a9\u5177\u5957\u88c5\u7684\u4ef7\u683c"
        }, 
        {
            "location": "/\u4e66\u7c4d/\u673a\u5668\u5b66\u4e60\u5b9e\u6218/08.\u9884\u6d4b\u6570\u503c\u578b\u6570\u636e-\u56de\u5f52/#_3", 
            "text": "Dangler \u559c\u6b22\u4e3a\u4e50\u9ad8\u5957\u88c5\u4f30\u4ef7\uff0c\u6211\u4eec\u7528\u56de\u5f52\u6280\u672f\u6765\u5e2e\u52a9\u4ed6\u5efa\u7acb\u4e00\u4e2a\u9884\u6d4b\u6a21\u578b\u3002", 
            "title": "\u9879\u76ee\u6982\u8ff0"
        }, 
        {
            "location": "/\u4e66\u7c4d/\u673a\u5668\u5b66\u4e60\u5b9e\u6218/08.\u9884\u6d4b\u6570\u503c\u578b\u6570\u636e-\u56de\u5f52/#_4", 
            "text": "(1) \u6536\u96c6\u6570\u636e\uff1a\u7528 Google Shopping \u7684API\u6536\u96c6\u6570\u636e\u3002\n(2) \u51c6\u5907\u6570\u636e\uff1a\u4ece\u8fd4\u56de\u7684JSON\u6570\u636e\u4e2d\u62bd\u53d6\u4ef7\u683c\u3002\n(3) \u5206\u6790\u6570\u636e\uff1a\u53ef\u89c6\u5316\u5e76\u89c2\u5bdf\u6570\u636e\u3002\n(4) \u8bad\u7ec3\u7b97\u6cd5\uff1a\u6784\u5efa\u4e0d\u540c\u7684\u6a21\u578b\uff0c\u91c7\u7528\u9010\u6b65\u7ebf\u6027\u56de\u5f52\u548c\u76f4\u63a5\u7684\u7ebf\u6027\u56de\u5f52\u6a21\u578b\u3002\n(5) \u6d4b\u8bd5\u7b97\u6cd5\uff1a\u4f7f\u7528\u4ea4\u53c9\u9a8c\u8bc1\u6765\u6d4b\u8bd5\u4e0d\u540c\u7684\u6a21\u578b\uff0c\u5206\u6790\u54ea\u4e2a\u6548\u679c\u6700\u597d\u3002\n(6) \u4f7f\u7528\u7b97\u6cd5\uff1a\u8fd9\u6b21\u7ec3\u4e60\u7684\u76ee\u6807\u5c31\u662f\u751f\u6210\u6570\u636e\u6a21\u578b\u3002   \u6536\u96c6\u6570\u636e: \u4f7f\u7528 Google \u8d2d\u7269\u7684 API    \u7531\u4e8e Google \u63d0\u4f9b\u7684 api \u5931\u6548\uff0c\u6211\u4eec\u53ea\u80fd\u81ea\u5df1\u4e0b\u8f7d\u54af\uff0c\u5c06\u6570\u636e\u5b58\u50a8\u5728\u4e86 input \u6587\u4ef6\u5939\u4e0b\u7684 setHtml \u6587\u4ef6\u5939\u4e0b   \u51c6\u5907\u6570\u636e: \u4ece\u8fd4\u56de\u7684 JSON \u6570\u636e\u4e2d\u62bd\u53d6\u4ef7\u683c   \u56e0\u4e3a\u6211\u4eec\u8fd9\u91cc\u4e0d\u662f\u5728\u7ebf\u7684\uff0c\u5c31\u4e0d\u518d\u662f JSON \u4e86\uff0c\u6211\u4eec\u76f4\u63a5\u89e3\u6790\u7ebf\u4e0b\u7684\u7f51\u9875\uff0c\u5f97\u5230\u6211\u4eec\u60f3\u8981\u7684\u6570\u636e\u3002   \u5206\u6790\u6570\u636e: \u53ef\u89c6\u5316\u5e76\u89c2\u5bdf\u6570\u636e   \u8fd9\u91cc\u6211\u4eec\u5c06\u89e3\u6790\u5f97\u5230\u7684\u6570\u636e\u6253\u5370\u51fa\u6765\uff0c\u7136\u540e\u89c2\u5bdf\u6570\u636e\u3002   \u8bad\u7ec3\u7b97\u6cd5: \u6784\u5efa\u4e0d\u540c\u7684\u6a21\u578b   from   numpy   import   *  from   bs4   import   BeautifulSoup  # \u4ece\u9875\u9762\u8bfb\u53d6\u6570\u636e\uff0c\u751f\u6210retX\u548cretY\u5217\u8868  def   scrapePage ( retX ,   retY ,   inFile ,   yr ,   numPce ,   origPrc ): \n\n     # \u6253\u5f00\u5e76\u8bfb\u53d6HTML\u6587\u4ef6 \n     fr   =   open ( inFile ) \n     soup   =   BeautifulSoup ( fr . read ()) \n     i = 1 \n\n     # \u6839\u636eHTML\u9875\u9762\u7ed3\u6784\u8fdb\u884c\u89e3\u6790 \n     currentRow   =   soup . findAll ( table ,   r = %d   %   i ) \n     while ( len ( currentRow ) != 0 ): \n         currentRow   =   soup . findAll ( table ,   r = %d   %   i ) \n         title   =   currentRow [ 0 ] . findAll ( a )[ 1 ] . text \n         lwrTitle   =   title . lower () \n\n         # \u67e5\u627e\u662f\u5426\u6709\u5168\u65b0\u6807\u7b7e \n         if   ( lwrTitle . find ( new )     - 1 )   or   ( lwrTitle . find ( nisb )     - 1 ): \n             newFlag   =   1.0 \n         else : \n             newFlag   =   0.0 \n\n         # \u67e5\u627e\u662f\u5426\u5df2\u7ecf\u6807\u5fd7\u51fa\u552e\uff0c\u6211\u4eec\u53ea\u6536\u96c6\u5df2\u51fa\u552e\u7684\u6570\u636e \n         soldUnicde   =   currentRow [ 0 ] . findAll ( td )[ 3 ] . findAll ( span ) \n         if   len ( soldUnicde ) == 0 : \n             print   item # %d  did not sell   %   i \n         else : \n             # \u89e3\u6790\u9875\u9762\u83b7\u53d6\u5f53\u524d\u4ef7\u683c \n             soldPrice   =   currentRow [ 0 ] . findAll ( td )[ 4 ] \n             priceStr   =   soldPrice . text \n             priceStr   =   priceStr . replace ( $ , )   #strips out $ \n             priceStr   =   priceStr . replace ( , , )   #strips out , \n             if   len ( soldPrice ) 1 : \n                 priceStr   =   priceStr . replace ( Free shipping ,   ) \n             sellingPrice   =   float ( priceStr ) \n\n             # \u53bb\u6389\u4e0d\u5b8c\u6574\u7684\u5957\u88c5\u4ef7\u683c \n             if    sellingPrice     origPrc   *   0.5 : \n                     print   %d \\t %d \\t %d \\t %f \\t %f   %   ( yr , numPce , newFlag , origPrc ,   sellingPrice ) \n                     retX . append ([ yr ,   numPce ,   newFlag ,   origPrc ]) \n                     retY . append ( sellingPrice ) \n         i   +=   1 \n         currentRow   =   soup . findAll ( table ,   r = %d   %   i )  # \u4f9d\u6b21\u8bfb\u53d6\u516d\u79cd\u4e50\u9ad8\u5957\u88c5\u7684\u6570\u636e\uff0c\u5e76\u751f\u6210\u6570\u636e\u77e9\u9635          def   setDataCollect ( retX ,   retY ): \n     scrapePage ( retX ,   retY ,   input/8.Regression/setHtml/lego8288.html ,   2006 ,   800 ,   49.99 ) \n     scrapePage ( retX ,   retY ,   input/8.Regression/setHtml/lego10030.html ,   2002 ,   3096 ,   269.99 ) \n     scrapePage ( retX ,   retY ,   input/8.Regression/setHtml/lego10179.html ,   2007 ,   5195 ,   499.99 ) \n     scrapePage ( retX ,   retY ,   input/8.Regression/setHtml/lego10181.html ,   2007 ,   3428 ,   199.99 ) \n     scrapePage ( retX ,   retY ,   input/8.Regression/setHtml/lego10189.html ,   2008 ,   5922 ,   299.99 ) \n     scrapePage ( retX ,   retY ,   input/8.Regression/setHtml/lego10196.html ,   2009 ,   3263 ,   249.99 )    \u6d4b\u8bd5\u7b97\u6cd5\uff1a\u4f7f\u7528\u4ea4\u53c9\u9a8c\u8bc1\u6765\u6d4b\u8bd5\u4e0d\u540c\u7684\u6a21\u578b\uff0c\u5206\u6790\u54ea\u4e2a\u6548\u679c\u6700\u597d   # \u4ea4\u53c9\u9a8c\u8bc1\u6d4b\u8bd5\u5cad\u56de\u5f52  def   crossValidation ( xArr , yArr , numVal = 10 ): \n     # \u83b7\u5f97\u6570\u636e\u70b9\u4e2a\u6570\uff0cxArr\u548cyArr\u5177\u6709\u76f8\u540c\u957f\u5ea6 \n     m   =   len ( yArr ) \n     indexList   =   range ( m ) \n     errorMat   =   zeros (( numVal , 30 )) \n\n     # \u4e3b\u5faa\u73af \u4ea4\u53c9\u9a8c\u8bc1\u5faa\u73af \n     for   i   in   range ( numVal ): \n         # \u968f\u673a\u62c6\u5206\u6570\u636e\uff0c\u5c06\u6570\u636e\u5206\u4e3a\u8bad\u7ec3\u96c6\uff0890%\uff09\u548c\u6d4b\u8bd5\u96c6\uff0810%\uff09 \n         trainX = [];   trainY = [] \n         testX   =   [];   testY   =   [] \n\n         # \u5bf9\u6570\u636e\u8fdb\u884c\u6df7\u6d17\u64cd\u4f5c \n         random . shuffle ( indexList ) \n\n         # \u5207\u5206\u8bad\u7ec3\u96c6\u548c\u6d4b\u8bd5\u96c6 \n         for   j   in   range ( m ): \n             if   j     m * 0.9 :  \n                 trainX . append ( xArr [ indexList [ j ]]) \n                 trainY . append ( yArr [ indexList [ j ]]) \n             else : \n                 testX . append ( xArr [ indexList [ j ]]) \n                 testY . append ( yArr [ indexList [ j ]]) \n\n         # \u83b7\u5f97\u56de\u5f52\u7cfb\u6570\u77e9\u9635 \n         wMat   =   ridgeTest ( trainX , trainY ) \n\n         # \u5faa\u73af\u904d\u5386\u77e9\u9635\u4e2d\u768430\u7ec4\u56de\u5f52\u7cfb\u6570 \n         for   k   in   range ( 30 ): \n             # \u8bfb\u53d6\u8bad\u7ec3\u96c6\u548c\u6570\u636e\u96c6 \n             matTestX   =   mat ( testX );   matTrainX = mat ( trainX ) \n             # \u5bf9\u6570\u636e\u8fdb\u884c\u6807\u51c6\u5316 \n             meanTrain   =   mean ( matTrainX , 0 ) \n             varTrain   =   var ( matTrainX , 0 ) \n             matTestX   =   ( matTestX - meanTrain ) / varTrain \n\n             # \u6d4b\u8bd5\u56de\u5f52\u6548\u679c\u5e76\u5b58\u50a8 \n             yEst   =   matTestX   *   mat ( wMat [ k ,:]) . T   +   mean ( trainY ) \n\n             # \u8ba1\u7b97\u8bef\u5dee \n             errorMat [ i , k ]   =   (( yEst . T . A - array ( testY )) ** 2 ) . sum () \n\n     # \u8ba1\u7b97\u8bef\u5dee\u4f30\u8ba1\u503c\u7684\u5747\u503c \n     meanErrors   =   mean ( errorMat , 0 ) \n     minMean   =   float ( min ( meanErrors )) \n     bestWeights   =   wMat [ nonzero ( meanErrors == minMean )] \n\n     # \u4e0d\u8981\u4f7f\u7528\u6807\u51c6\u5316\u7684\u6570\u636e\uff0c\u9700\u8981\u5bf9\u6570\u636e\u8fdb\u884c\u8fd8\u539f\u6765\u5f97\u5230\u8f93\u51fa\u7ed3\u679c \n     xMat   =   mat ( xArr );   yMat = mat ( yArr ) . T \n     meanX   =   mean ( xMat , 0 );   varX   =   var ( xMat , 0 ) \n     unReg   =   bestWeights / varX \n\n     # \u8f93\u51fa\u6784\u5efa\u7684\u6a21\u578b \n     print   the best model from Ridge Regression is: \\n , unReg \n     print   with constant term:  , - 1 * sum ( multiply ( meanX , unReg ))   +   mean ( yMat )  # predict for lego s price  def   regression5 (): \n     lgX   =   [] \n     lgY   =   [] \n\n     setDataCollect ( lgX ,   lgY ) \n     crossValidation ( lgX ,   lgY ,   10 )    \u4f7f\u7528\u7b97\u6cd5\uff1a\u8fd9\u6b21\u7ec3\u4e60\u7684\u76ee\u6807\u5c31\u662f\u751f\u6210\u6570\u636e\u6a21\u578b   \u5b8c\u6574\u4ee3\u7801\u5730\u5740 :  https://github.com/apachecn/MachineLearning/blob/master/src/python/8.PredictiveNumericalDataRegression/regression.py", 
            "title": "\u5f00\u53d1\u6d41\u7a0b"
        }, 
        {
            "location": "/\u4e66\u7c4d/\u673a\u5668\u5b66\u4e60\u5b9e\u6218/08.\u9884\u6d4b\u6570\u503c\u578b\u6570\u636e-\u56de\u5f52/#6", 
            "text": "\u4efb\u4f55\u65f6\u5019\uff0c\u4e00\u65e6\u53d1\u73b0\u6a21\u578b\u548c\u6d4b\u91cf\u503c\u4e4b\u95f4\u5b58\u5728\u5dee\u5f02\uff0c\u5c31\u8bf4\u51fa\u73b0\u4e86\u8bef\u5dee\u3002\u5f53\u8003\u8651\u6a21\u578b\u4e2d\u7684 \u201c\u566a\u58f0\u201d \u6216\u8005\u8bf4\u8bef\u5dee\u65f6\uff0c\u5fc5\u987b\u8003\u8651\u5176\u6765\u6e90\u3002\u4f60\u53ef\u80fd\u4f1a\u5bf9\u590d\u6742\u7684\u8fc7\u7a0b\u8fdb\u884c\u7b80\u5316\uff0c\u8fd9\u5c06\u5bfc\u81f4\u5728\u6a21\u578b\u548c\u6d4b\u91cf\u503c\u4e4b\u95f4\u51fa\u73b0 \u201c\u566a\u58f0\u201d \u6216\u8bef\u5dee\uff0c\u82e5\u65e0\u6cd5\u7406\u89e3\u6570\u636e\u7684\u771f\u5b9e\u751f\u6210\u8fc7\u7a0b\uff0c\u4e5f\u4f1a\u5bfc\u81f4\u5dee\u5f02\u7684\u4ea7\u751f\u3002\u53e6\u5916\uff0c\u6d4b\u91cf\u8fc7\u7a0b\u672c\u8eab\u4e5f\u53ef\u80fd\u4ea7\u751f \u201c\u566a\u58f0\u201d \u6216\u8005\u95ee\u9898\u3002\u4e0b\u9762\u6211\u4eec\u4e3e\u4e00\u4e2a\u4f8b\u5b50\uff0c\u6211\u4eec\u4f7f\u7528  \u7ebf\u6027\u56de\u5f52  \u548c  \u5c40\u90e8\u52a0\u6743\u7ebf\u6027\u56de\u5f52  \u5904\u7406\u8fc7\u4e00\u4e2a\u4ece\u6587\u4ef6\u5bfc\u5165\u7684\u4e8c\u7ef4\u6570\u636e\u3002   \u5176\u4e2d\u7684 N(0, 1) \u662f\u4e00\u4e2a\u5747\u503c\u4e3a 0\u3001\u65b9\u5dee\u4e3a 1 \u7684\u6b63\u6001\u5206\u5e03\u3002\u6211\u4eec\u5c1d\u8bd5\u8fc7\u7981\u7528\u4e00\u6761\u76f4\u7ebf\u6765\u62df\u5408\u4e0a\u8ff0\u6570\u636e\u3002\u4e0d\u96be\u60f3\u5230\uff0c\u76f4\u7ebf\u6240\u80fd\u5f97\u5230\u7684\u6700\u4f73\u62df\u5408\u5e94\u8be5\u662f 3.0+1.7x \u8fd9\u4e00\u90e8\u5206\u3002\u8fd9\u6837\u7684\u8bdd\uff0c\u8bef\u5dee\u90e8\u5206\u5c31\u662f 0.1sin(30x)+0.06N(0, 1) \u3002\u5728\u4e0a\u9762\uff0c\u6211\u4eec\u4f7f\u7528\u4e86\u5c40\u90e8\u52a0\u6743\u7ebf\u6027\u56de\u5f52\u6765\u8bd5\u56fe\u6355\u6349\u6570\u636e\u80cc\u540e\u7684\u7ed3\u6784\u3002\u8be5\u7ed3\u6784\u62df\u5408\u8d77\u6765\u6709\u4e00\u5b9a\u7684\u96be\u5ea6\uff0c\u56e0\u6b64\u6211\u4eec\u6d4b\u8bd5\u4e86\u591a\u7ec4\u4e0d\u540c\u7684\u5c40\u90e8\u6743\u91cd\u6765\u627e\u5230\u5177\u6709\u6700\u5c0f\u6d4b\u8bd5\u8bef\u5dee\u7684\u89e3\u3002  \u4e0b\u56fe\u7ed9\u51fa\u4e86\u8bad\u7ec3\u8bef\u5dee\u548c\u6d4b\u8bd5\u8bef\u5dee\u7684\u66f2\u7ebf\u56fe\uff0c\u4e0a\u9762\u7684\u66f2\u9762\u5c31\u662f\u6d4b\u8bd5\u8bef\u5dee\uff0c\u4e0b\u9762\u7684\u66f2\u7ebf\u662f\u8bad\u7ec3\u8bef\u5dee\u3002\u6211\u4eec\u6839\u636e \u9884\u6d4b\u9c8d\u9c7c\u5e74\u9f84 \u7684\u5b9e\u9a8c\u77e5\u9053: \u5982\u679c\u964d\u4f4e\u6838\u7684\u5927\u5c0f\uff0c\u90a3\u4e48\u8bad\u7ec3\u8bef\u5dee\u5c06\u53d8\u5c0f\u3002\u4ece\u4e0b\u56fe\u5f00\u770b\uff0c\u4ece\u5de6\u5230\u53f3\u5c31\u8868\u793a\u4e86\u6838\u9010\u6e10\u51cf\u5c0f\u7684\u8fc7\u7a0b\u3002   \u4e00\u822c\u8ba4\u4e3a\uff0c\u4e0a\u8ff0\u4e24\u79cd\u8bef\u5dee\u7531\u4e09\u4e2a\u90e8\u5206\u7ec4\u6210: \u504f\u5dee\u3001\u6d4b\u91cf\u8bef\u5dee\u548c\u968f\u673a\u566a\u58f0\u3002\u5c40\u90e8\u52a0\u6743\u7ebf\u6027\u56de\u5f52 \u548c \u9884\u6d4b\u9c8d\u9c7c\u5e74\u9f84 \u4e2d\uff0c\u6211\u4eec\u901a\u8fc7\u5f15\u5165\u4e86\u4e09\u4e2a\u8d8a\u6765\u8d8a\u5c0f\u7684\u6838\u6765\u4e0d\u65ad\u589e\u5927\u6a21\u578b\u7684\u65b9\u5dee\u3002  \u5728\u7f29\u51cf\u7cfb\u6570\u6765\u201c\u7406\u89e3\u201d\u6570\u636e\u8fd9\u4e00\u8282\u4e2d\uff0c\u6211\u4eec\u4ecb\u7ecd\u4e86\u7f29\u51cf\u6cd5\uff0c\u53ef\u4ee5\u5c06\u4e00\u4e9b\u7cfb\u6570\u7f29\u51cf\u6210\u5f88\u5c0f\u7684\u503c\u6216\u76f4\u63a5\u7f29\u51cf\u4e3a 0 \uff0c\u8fd9\u662f\u4e00\u4e2a\u589e\u5927\u6a21\u578b\u504f\u5dee\u7684\u4f8b\u5b50\u3002\u901a\u8fc7\u628a\u4e00\u4e9b\u7279\u5f81\u7684\u56de\u5f52\u7cfb\u6570\u7f29\u51cf\u5230 0 \uff0c\u540c\u65f6\u4e5f\u5c31\u51cf\u5c0f\u4e86\u6a21\u578b\u7684\u590d\u6742\u5ea6\u3002\u4f8b\u5b50\u4e2d\u6709 8 \u4e2a\u7279\u5f81\uff0c\u6d88\u9664\u5176\u4e2d\u4e24\u4e2a\u540e\u4e0d\u4ec5\u4f7f\u6a21\u578b\u66f4\u6613\u7406\u89e3\uff0c\u540c\u65f6\u8fd8\u964d\u4f4e\u4e86\u9884\u6d4b\u8bef\u5dee\u3002\u5bf9\u7167\u4e0a\u56fe\uff0c\u5de6\u4fa7\u662f\u53c2\u6570\u7f29\u51cf\u8fc7\u4e8e\u4e25\u5389\u7684\u7ed3\u679c\uff0c\u800c\u53f3\u4fa7\u662f\u65e0\u7f29\u51cf\u7684\u6548\u679c\u3002  \u65b9\u5dee\u662f\u53ef\u4ee5\u5ea6\u91cf\u7684\u3002\u5982\u679c\u4ece\u9c8d\u9c7c\u6570\u636e\u4e2d\u53d6\u4e00\u4e2a\u968f\u673a\u6837\u672c\u96c6\uff08\u4f8b\u5982\u53d6\u5176\u4e2d 100 \u4e2a\u6570\u636e\uff09\u5e76\u7528\u7ebf\u6027\u6a21\u578b\u62df\u5408\uff0c\u5c06\u4f1a\u5f97\u5230\u4e00\u7ec4\u56de\u5f52\u7cfb\u6570\u3002\u540c\u7406\uff0c\u518d\u53d6\u51fa\u53e6\u4e00\u7ec4\u968f\u673a\u6837\u672c\u96c6\u5e76\u62df\u5408\uff0c\u5c06\u4f1a\u5f97\u5230\u53e6\u4e00\u7ec4\u56de\u5f52\u7cfb\u6570\u3002\u8fd9\u4e9b\u7cfb\u6570\u95f4\u7684\u5dee\u5f02\u5927\u5c0f\u4e5f\u5c31\u662f\u6a21\u578b\u65b9\u5dee\u7684\u53cd\u6620\u3002    \u4f5c\u8005\uff1a \u5c0f\u7476   \u7247\u523b  GitHub\u5730\u5740 :  https://github.com/apachecn/MachineLearning  \u7248\u6743\u58f0\u660e\uff1a\u6b22\u8fce\u8f6c\u8f7d\u5b66\u4e60 =  \u8bf7\u6807\u6ce8\u4fe1\u606f\u6765\u6e90\u4e8e  ApacheCN", 
            "title": "6\u3001\u9644\u52a0 \u6743\u8861\u504f\u5dee\u548c\u65b9\u5dee"
        }, 
        {
            "location": "/\u4e66\u7c4d/\u673a\u5668\u5b66\u4e60\u5b9e\u6218/09.\u6811\u56de\u5f52/", 
            "text": "\u7b2c9\u7ae0 \u6811\u56de\u5f52\n\n\n\n\n\u6811\u56de\u5f52 \u6982\u8ff0\n\n\n\u6211\u4eec\u672c\u7ae0\u4ecb\u7ecd CART(Classification And Regression Trees\uff0c \u5206\u7c7b\u56de\u5f52\u6811) \u7684\u6811\u6784\u5efa\u7b97\u6cd5\u3002\u8be5\u7b97\u6cd5\u65e2\u53ef\u4ee5\u7528\u4e8e\u5206\u7c7b\u8fd8\u53ef\u4ee5\u7528\u4e8e\u56de\u5f52\u3002\n\n\n\u6811\u56de\u5f52 \u573a\u666f\n\n\n\u6211\u4eec\u5728\u7b2c 8 \u7ae0\u4e2d\u4ecb\u7ecd\u4e86\u7ebf\u6027\u56de\u5f52\u7684\u4e00\u4e9b\u5f3a\u5927\u7684\u65b9\u6cd5\uff0c\u4f46\u8fd9\u4e9b\u65b9\u6cd5\u521b\u5efa\u7684\u6a21\u578b\u9700\u8981\u62df\u5408\u6240\u6709\u7684\u6837\u672c\u70b9\uff08\u5c40\u90e8\u52a0\u6743\u7ebf\u6027\u56de\u5f52\u9664\u5916\uff09\u3002\u5f53\u6570\u636e\u62e5\u6709\u4f17\u591a\u7279\u5f81\u5e76\u4e14\u7279\u5f81\u4e4b\u95f4\u5173\u7cfb\u5341\u5206\u590d\u6742\u65f6\uff0c\u6784\u5efa\u5168\u5c40\u6a21\u578b\u7684\u60f3\u6cd5\u5c31\u663e\u5f97\u592a\u96be\u4e86\uff0c\u4e5f\u7565\u663e\u7b28\u62d9\u3002\u800c\u4e14\uff0c\u5b9e\u9645\u751f\u6d3b\u4e2d\u5f88\u591a\u95ee\u9898\u90fd\u662f\u975e\u7ebf\u6027\u7684\uff0c\u4e0d\u53ef\u80fd\u4f7f\u7528\u5168\u5c40\u7ebf\u6027\u6a21\u578b\u6765\u62df\u5408\u4efb\u4f55\u6570\u636e\u3002\n\n\n\u4e00\u79cd\u53ef\u884c\u7684\u65b9\u6cd5\u662f\u5c06\u6570\u636e\u96c6\u5207\u5206\u6210\u5f88\u591a\u4efd\u6613\u5efa\u6a21\u7684\u6570\u636e\uff0c\u7136\u540e\u5229\u7528\u6211\u4eec\u7684\u7ebf\u6027\u56de\u5f52\u6280\u672f\u6765\u5efa\u6a21\u3002\u5982\u679c\u9996\u6b21\u5207\u5206\u540e\u4ecd\u7136\u96be\u4ee5\u62df\u5408\u7ebf\u6027\u6a21\u578b\u5c31\u7ee7\u7eed\u5207\u5206\u3002\u5728\u8fd9\u79cd\u5207\u5206\u65b9\u5f0f\u4e0b\uff0c\u6811\u56de\u5f52\u548c\u56de\u5f52\u6cd5\u5c31\u76f8\u5f53\u6709\u7528\u3002\n\n\n\u9664\u4e86\u6211\u4eec\u5728 \u7b2c3\u7ae0 \u4e2d\u4ecb\u7ecd\u7684 \u51b3\u7b56\u6811\u7b97\u6cd5\uff0c\u6211\u4eec\u4ecb\u7ecd\u4e00\u4e2a\u65b0\u7684\u53eb\u505a CART(Classification And Regression Trees, \u5206\u7c7b\u56de\u5f52\u6811) \u7684\u6811\u6784\u5efa\u7b97\u6cd5\u3002\u8be5\u7b97\u6cd5\u65e2\u53ef\u4ee5\u7528\u4e8e\u5206\u7c7b\u8fd8\u53ef\u4ee5\u7528\u4e8e\u56de\u5f52\u3002\n\n\n1\u3001\u6811\u56de\u5f52 \u539f\u7406\n\n\n1.1\u3001\u6811\u56de\u5f52 \u539f\u7406\u6982\u8ff0\n\n\n\u4e3a\u6210\u529f\u6784\u5efa\u4ee5\u5206\u6bb5\u5e38\u6570\u4e3a\u53f6\u8282\u70b9\u7684\u6811\uff0c\u9700\u8981\u5ea6\u91cf\u51fa\u6570\u636e\u7684\u4e00\u81f4\u6027\u3002\u7b2c3\u7ae0\u4f7f\u7528\u6811\u8fdb\u884c\u5206\u7c7b\uff0c\u4f1a\u5728\u7ed9\u5b9a\u8282\u70b9\u65f6\u8ba1\u7b97\u6570\u636e\u7684\u6df7\u4e71\u5ea6\u3002\u90a3\u4e48\u5982\u4f55\u8ba1\u7b97\u8fde\u7eed\u578b\u6570\u503c\u7684\u6df7\u4e71\u5ea6\u5462\uff1f\n\n\n\u5728\u8fd9\u91cc\uff0c\u8ba1\u7b97\u8fde\u7eed\u578b\u6570\u503c\u7684\u6df7\u4e71\u5ea6\u662f\u975e\u5e38\u7b80\u5355\u7684\u3002\u9996\u5148\u8ba1\u7b97\u6240\u6709\u6570\u636e\u7684\u5747\u503c\uff0c\u7136\u540e\u8ba1\u7b97\u6bcf\u6761\u6570\u636e\u7684\u503c\u5230\u5747\u503c\u7684\u5dee\u503c\u3002\u4e3a\u4e86\u5bf9\u6b63\u8d1f\u5dee\u503c\u540c\u7b49\u770b\u5f85\uff0c\u4e00\u822c\u4f7f\u7528\u7edd\u5bf9\u503c\u6216\u5e73\u65b9\u503c\u6765\u4ee3\u66ff\u4e0a\u8ff0\u5dee\u503c\u3002\n\n\n\u4e0a\u8ff0\u505a\u6cd5\u6709\u70b9\u7c7b\u4f3c\u4e8e\u524d\u9762\u4ecb\u7ecd\u8fc7\u7684\u7edf\u8ba1\u5b66\u4e2d\u5e38\u7528\u7684\u65b9\u5dee\u8ba1\u7b97\u3002\u552f\u4e00\u4e0d\u540c\u5c31\u662f\uff0c\u65b9\u5dee\u662f\u5e73\u65b9\u8bef\u5dee\u7684\u5747\u503c(\u5747\u65b9\u5dee)\uff0c\u800c\u8fd9\u91cc\u9700\u8981\u7684\u662f\u5e73\u65b9\u8bef\u5dee\u7684\u603b\u503c(\u603b\u65b9\u5dee)\u3002\u603b\u65b9\u5dee\u53ef\u4ee5\u901a\u8fc7\u5747\u65b9\u5dee\u4e58\u4ee5\u6570\u636e\u96c6\u4e2d\u6837\u672c\u70b9\u7684\u4e2a\u6570\u6765\u5f97\u5230\u3002\n\n\n1.2\u3001\u6811\u6784\u5efa\u7b97\u6cd5 \u6bd4\u8f83\n\n\n\u6211\u4eec\u5728 \u7b2c3\u7ae0 \u4e2d\u4f7f\u7528\u7684\u6811\u6784\u5efa\u7b97\u6cd5\u662f ID3 \u3002ID3 \u7684\u505a\u6cd5\u662f\u6bcf\u6b21\u9009\u53d6\u5f53\u524d\u6700\u4f73\u7684\u7279\u5f81\u6765\u5206\u5272\u6570\u636e\uff0c\u5e76\u6309\u7167\u8be5\u7279\u5f81\u7684\u6240\u6709\u53ef\u80fd\u53d6\u503c\u6765\u5207\u5206\u3002\u4e5f\u5c31\u662f\u8bf4\uff0c\u5982\u679c\u4e00\u4e2a\u7279\u5f81\u6709 4 \u79cd\u53d6\u503c\uff0c\u90a3\u4e48\u6570\u636e\u5c06\u88ab\u5207\u5206\u6210 4 \u4efd\u3002\u4e00\u65e6\u6309\u7167\u67d0\u7279\u5f81\u5207\u5206\u540e\uff0c\u8be5\u7279\u5f81\u5728\u4e4b\u540e\u7684\u7b97\u6cd5\u6267\u884c\u8fc7\u7a0b\u4e2d\u5c06\u4e0d\u4f1a\u518d\u8d77\u4f5c\u7528\uff0c\u6240\u4ee5\u6709\u89c2\u70b9\u8ba4\u4e3a\u8fd9\u79cd\u5207\u5206\u65b9\u5f0f\u8fc7\u4e8e\u8fc5\u901f\u3002\u53e6\u5916\u4e00\u79cd\u65b9\u6cd5\u662f\u4e8c\u5143\u5207\u5206\u6cd5\uff0c\u5373\u6bcf\u6b21\u628a\u6570\u636e\u96c6\u5207\u5206\u6210\u4e24\u4efd\u3002\u5982\u679c\u6570\u636e\u7684\u67d0\u7279\u5f81\u503c\u7b49\u4e8e\u5207\u5206\u6240\u8981\u6c42\u7684\u503c\uff0c\u90a3\u4e48\u8fd9\u4e9b\u6570\u636e\u5c31\u8fdb\u5165\u6811\u7684\u5de6\u5b50\u6811\uff0c\u53cd\u4e4b\u5219\u8fdb\u5165\u6811\u7684\u53f3\u5b50\u6811\u3002\n\n\n\u9664\u4e86\u5207\u5206\u8fc7\u4e8e\u8fc5\u901f\u5916\uff0c ID3 \u7b97\u6cd5\u8fd8\u5b58\u5728\u53e6\u4e00\u4e2a\u95ee\u9898\uff0c\u5b83\u4e0d\u80fd\u76f4\u63a5\u5904\u7406\u8fde\u7eed\u578b\u7279\u5f81\u3002\u53ea\u6709\u4e8b\u5148\u5c06\u8fde\u7eed\u578b\u7279\u5f81\u8f6c\u6362\u6210\u79bb\u6563\u578b\uff0c\u624d\u80fd\u5728 ID3 \u7b97\u6cd5\u4e2d\u4f7f\u7528\u3002\u4f46\u8fd9\u79cd\u8f6c\u6362\u8fc7\u7a0b\u4f1a\u7834\u574f\u8fde\u7eed\u578b\u53d8\u91cf\u7684\u5185\u5728\u6027\u8d28\u3002\u800c\u4f7f\u7528\u4e8c\u5143\u5207\u5206\u6cd5\u5219\u6613\u4e8e\u5bf9\u6811\u6784\u9020\u8fc7\u7a0b\u8fdb\u884c\u8c03\u6574\u4ee5\u5904\u7406\u8fde\u7eed\u578b\u7279\u5f81\u3002\u5177\u4f53\u7684\u5904\u7406\u65b9\u6cd5\u662f: \u5982\u679c\u7279\u5f81\u503c\u5927\u4e8e\u7ed9\u5b9a\u503c\u5c31\u8d70\u5de6\u5b50\u6811\uff0c\u5426\u5219\u5c31\u8d70\u53f3\u5b50\u6811\u3002\u53e6\u5916\uff0c\u4e8c\u5143\u5207\u5206\u6cd5\u4e5f\u8282\u7701\u4e86\u6811\u7684\u6784\u5efa\u65f6\u95f4\uff0c\u4f46\u8fd9\u70b9\u610f\u4e49\u4e5f\u4e0d\u662f\u7279\u522b\u5927\uff0c\u56e0\u4e3a\u8fd9\u4e9b\u6811\u6784\u5efa\u4e00\u822c\u662f\u79bb\u7ebf\u5b8c\u6210\uff0c\u65f6\u95f4\u5e76\u975e\u9700\u8981\u91cd\u70b9\u5173\u6ce8\u7684\u56e0\u7d20\u3002\n\n\nCART \u662f\u5341\u5206\u8457\u540d\u4e14\u5e7f\u6cdb\u8bb0\u8f7d\u7684\u6811\u6784\u5efa\u7b97\u6cd5\uff0c\u5b83\u4f7f\u7528\u4e8c\u5143\u5207\u5206\u6765\u5904\u7406\u8fde\u7eed\u578b\u53d8\u91cf\u3002\u5bf9 CART \u7a0d\u4f5c\u4fee\u6539\u5c31\u53ef\u4ee5\u5904\u7406\u56de\u5f52\u95ee\u9898\u3002\u7b2c 3 \u7ae0\u4e2d\u4f7f\u7528\u9999\u519c\u71b5\u6765\u5ea6\u91cf\u96c6\u5408\u7684\u65e0\u7ec4\u7ec7\u7a0b\u5ea6\u3002\u5982\u679c\u9009\u7528\u5176\u4ed6\u65b9\u6cd5\u6765\u4ee3\u66ff\u9999\u519c\u71b5\uff0c\u5c31\u53ef\u4ee5\u4f7f\u7528\u6811\u6784\u5efa\u7b97\u6cd5\u6765\u5b8c\u6210\u56de\u5f52\u3002\n\n\n\u56de\u5f52\u6811\u4e0e\u5206\u7c7b\u6811\u7684\u601d\u8def\u7c7b\u4f3c\uff0c\u4f46\u662f\u53f6\u8282\u70b9\u7684\u6570\u636e\u7c7b\u578b\u4e0d\u662f\u79bb\u6563\u578b\uff0c\u800c\u662f\u8fde\u7eed\u578b\u3002\n\n\n1.2.1\u3001\u9644\u52a0 \u5404\u5e38\u89c1\u6811\u6784\u9020\u7b97\u6cd5\u7684\u5212\u5206\u5206\u652f\u65b9\u5f0f\n\n\n\u8fd8\u6709\u4e00\u70b9\u8981\u8bf4\u660e\uff0c\u6784\u5efa\u51b3\u7b56\u6811\u7b97\u6cd5\uff0c\u5e38\u7528\u5230\u7684\u662f\u4e09\u4e2a\u65b9\u6cd5: ID3, C4.5, CART.\n\n\u4e09\u79cd\u65b9\u6cd5\u533a\u522b\u662f\u5212\u5206\u6811\u7684\u5206\u652f\u7684\u65b9\u5f0f:\n1. ID3 \u662f\u4fe1\u606f\u589e\u76ca\u5206\u652f\n2. C4.5 \u662f\u4fe1\u606f\u589e\u76ca\u7387\u5206\u652f\n3. CART \u505a\u5206\u7c7b\u5de5\u4f5c\u65f6\uff0c\u91c7\u7528 GINI \u503c\u4f5c\u4e3a\u8282\u70b9\u5206\u88c2\u7684\u4f9d\u636e\uff1b\u56de\u5f52\u65f6\uff0c\u91c7\u7528\u6837\u672c\u7684\u6700\u5c0f\u65b9\u5dee\u4f5c\u4e3a\u8282\u70b9\u7684\u5206\u88c2\u4f9d\u636e\u3002\n\n\n\u5de5\u7a0b\u4e0a\u603b\u7684\u6765\u8bf4: \n\n\nCART \u548c C4.5 \u4e4b\u95f4\u4e3b\u8981\u5dee\u5f02\u5728\u4e8e\u5206\u7c7b\u7ed3\u679c\u4e0a\uff0cCART \u53ef\u4ee5\u56de\u5f52\u5206\u6790\u4e5f\u53ef\u4ee5\u5206\u7c7b\uff0cC4.5 \u53ea\u80fd\u505a\u5206\u7c7b\uff1bC4.5 \u5b50\u8282\u70b9\u662f\u53ef\u4ee5\u591a\u5206\u7684\uff0c\u800c CART \u662f\u65e0\u6570\u4e2a\u4e8c\u53c9\u5b50\u8282\u70b9\uff1b\n\n\n\u4ee5\u6b64\u62d3\u5c55\u51fa\u4ee5 CART \u4e3a\u57fa\u7840\u7684 \u201c\u6811\u7fa4\u201d Random forest \uff0c \u4ee5 \u56de\u5f52\u6811 \u4e3a\u57fa\u7840\u7684 \u201c\u6811\u7fa4\u201d GBDT \u3002\n\n\n1.3\u3001\u6811\u56de\u5f52 \u5de5\u4f5c\u539f\u7406\n\n\n1\u3001\u627e\u5230\u6570\u636e\u96c6\u5207\u5206\u7684\u6700\u4f73\u4f4d\u7f6e\uff0c\u51fd\u6570 chooseBestSplit() \u4f2a\u4ee3\u7801\u5927\u81f4\u5982\u4e0b:\n\n\n\u5bf9\u6bcf\u4e2a\u7279\u5f81:\n    \u5bf9\u6bcf\u4e2a\u7279\u5f81\u503c: \n        \u5c06\u6570\u636e\u96c6\u5207\u5206\u6210\u4e24\u4efd\uff08\u5c0f\u4e8e\u8be5\u7279\u5f81\u503c\u7684\u6570\u636e\u6837\u672c\u653e\u5728\u5de6\u5b50\u6811\uff0c\u5426\u5219\u653e\u5728\u53f3\u5b50\u6811\uff09\n        \u8ba1\u7b97\u5207\u5206\u7684\u8bef\u5dee\n        \u5982\u679c\u5f53\u524d\u8bef\u5dee\u5c0f\u4e8e\u5f53\u524d\u6700\u5c0f\u8bef\u5dee\uff0c\u90a3\u4e48\u5c06\u5f53\u524d\u5207\u5206\u8bbe\u5b9a\u4e3a\u6700\u4f73\u5207\u5206\u5e76\u66f4\u65b0\u6700\u5c0f\u8bef\u5dee\n\u8fd4\u56de\u6700\u4f73\u5207\u5206\u7684\u7279\u5f81\u548c\u9608\u503c\n\n\n2\u3001\u6811\u6784\u5efa\u7b97\u6cd5\uff0c\u51fd\u6570 createTree() \u4f2a\u4ee3\u7801\u5927\u81f4\u5982\u4e0b:   \n\n\n\u627e\u5230\u6700\u4f73\u7684\u5f85\u5207\u5206\u7279\u5f81:\n    \u5982\u679c\u8be5\u8282\u70b9\u4e0d\u80fd\u518d\u5206\uff0c\u5c06\u8be5\u8282\u70b9\u5b58\u4e3a\u53f6\u8282\u70b9\n    \u6267\u884c\u4e8c\u5143\u5207\u5206\n    \u5728\u53f3\u5b50\u6811\u8c03\u7528 createTree() \u65b9\u6cd5\n    \u5728\u5de6\u5b50\u6811\u8c03\u7528 createTree() \u65b9\u6cd5\n\n\n\n\n1.4\u3001\u6811\u56de\u5f52 \u5f00\u53d1\u6d41\u7a0b\n\n\n(1) \u6536\u96c6\u6570\u636e\uff1a\u91c7\u7528\u4efb\u610f\u65b9\u6cd5\u6536\u96c6\u6570\u636e\u3002\n(2) \u51c6\u5907\u6570\u636e\uff1a\u9700\u8981\u6570\u503c\u578b\u6570\u636e\uff0c\u6807\u79f0\u578b\u6570\u636e\u5e94\u8be5\u6620\u5c04\u6210\u4e8c\u503c\u578b\u6570\u636e\u3002\n(3) \u5206\u6790\u6570\u636e\uff1a\u7ed8\u51fa\u6570\u636e\u7684\u4e8c\u7ef4\u53ef\u89c6\u5316\u663e\u793a\u7ed3\u679c\uff0c\u4ee5\u5b57\u5178\u65b9\u5f0f\u751f\u6210\u6811\u3002\n(4) \u8bad\u7ec3\u7b97\u6cd5\uff1a\u5927\u90e8\u5206\u65f6\u95f4\u90fd\u82b1\u8d39\u5728\u53f6\u8282\u70b9\u6811\u6a21\u578b\u7684\u6784\u5efa\u4e0a\u3002\n(5) \u6d4b\u8bd5\u7b97\u6cd5\uff1a\u4f7f\u7528\u6d4b\u8bd5\u6570\u636e\u4e0a\u7684R^2\u503c\u6765\u5206\u6790\u6a21\u578b\u7684\u6548\u679c\u3002\n(6) \u4f7f\u7528\u7b97\u6cd5\uff1a\u4f7f\u7528\u8bad\u7ec3\u5904\u7684\u6811\u505a\u9884\u6d4b\uff0c\u9884\u6d4b\u7ed3\u679c\u8fd8\u53ef\u4ee5\u7528\u6765\u505a\u5f88\u591a\u4e8b\u60c5\u3002\n\n\n\n\n1.5\u3001\u6811\u56de\u5f52 \u7b97\u6cd5\u7279\u70b9\n\n\n\u4f18\u70b9\uff1a\u53ef\u4ee5\u5bf9\u590d\u6742\u548c\u975e\u7ebf\u6027\u7684\u6570\u636e\u5efa\u6a21\u3002\n\u7f3a\u70b9\uff1a\u7ed3\u679c\u4e0d\u6613\u7406\u89e3\u3002\n\u9002\u7528\u6570\u636e\u7c7b\u578b\uff1a\u6570\u503c\u578b\u548c\u6807\u79f0\u578b\u6570\u636e\u3002\n\n\n\n\n1.6\u3001\u56de\u5f52\u6811 \u9879\u76ee\u6848\u4f8b\n\n\n1.6.1\u3001\u9879\u76ee\u6982\u8ff0\n\n\n\u5728\u7b80\u5355\u6570\u636e\u96c6\u4e0a\u751f\u6210\u4e00\u68f5\u56de\u5f52\u6811\u3002\n\n\n1.6.2\u3001\u5f00\u53d1\u6d41\u7a0b\n\n\n\u6536\u96c6\u6570\u636e\uff1a\u91c7\u7528\u4efb\u610f\u65b9\u6cd5\u6536\u96c6\u6570\u636e\n\u51c6\u5907\u6570\u636e\uff1a\u9700\u8981\u6570\u503c\u578b\u6570\u636e\uff0c\u6807\u79f0\u578b\u6570\u636e\u5e94\u8be5\u6620\u5c04\u6210\u4e8c\u503c\u578b\u6570\u636e\n\u5206\u6790\u6570\u636e\uff1a\u7ed8\u51fa\u6570\u636e\u7684\u4e8c\u7ef4\u53ef\u89c6\u5316\u663e\u793a\u7ed3\u679c\uff0c\u4ee5\u5b57\u5178\u65b9\u5f0f\u751f\u6210\u6811\n\u8bad\u7ec3\u7b97\u6cd5\uff1a\u5927\u90e8\u5206\u65f6\u95f4\u90fd\u82b1\u8d39\u5728\u53f6\u8282\u70b9\u6811\u6a21\u578b\u7684\u6784\u5efa\u4e0a\n\u6d4b\u8bd5\u7b97\u6cd5\uff1a\u4f7f\u7528\u6d4b\u8bd5\u6570\u636e\u4e0a\u7684R^2\u503c\u6765\u5206\u6790\u6a21\u578b\u7684\u6548\u679c\n\u4f7f\u7528\u7b97\u6cd5\uff1a\u4f7f\u7528\u8bad\u7ec3\u51fa\u7684\u6811\u505a\u9884\u6d4b\uff0c\u9884\u6d4b\u7ed3\u679c\u8fd8\u53ef\u4ee5\u7528\u6765\u505a\u5f88\u591a\u4e8b\u60c5\n\n\n\n\n\n\n\u6536\u96c6\u6570\u636e\uff1a\u91c7\u7528\u4efb\u610f\u65b9\u6cd5\u6536\u96c6\u6570\u636e\n\n\n\n\ndata1.txt \u6587\u4ef6\u4e2d\u5b58\u50a8\u7684\u6570\u636e\u683c\u5f0f\u5982\u4e0b:\n\n\n0.036098    0.155096\n0.993349    1.077553\n0.530897    0.893462\n0.712386    0.564858\n0.343554    -0.371700\n0.098016    -0.332760\n\n\n\n\n\n\n\u51c6\u5907\u6570\u636e\uff1a\u9700\u8981\u6570\u503c\u578b\u6570\u636e\uff0c\u6807\u79f0\u578b\u6570\u636e\u5e94\u8be5\u6620\u5c04\u6210\u4e8c\u503c\u578b\u6570\u636e\n\n\n\u5206\u6790\u6570\u636e\uff1a\u7ed8\u51fa\u6570\u636e\u7684\u4e8c\u7ef4\u53ef\u89c6\u5316\u663e\u793a\u7ed3\u679c\uff0c\u4ee5\u5b57\u5178\u65b9\u5f0f\u751f\u6210\u6811\n\n\n\n\n\u57fa\u4e8e CART \u7b97\u6cd5\u6784\u5efa\u56de\u5f52\u6811\u7684\u7b80\u5355\u6570\u636e\u96c6\n\n\n  \n\n\n\u7528\u4e8e\u6d4b\u8bd5\u56de\u5f52\u6811\u7684\u5206\u6bb5\u5e38\u6570\u6570\u636e\u96c6\n\n\n  \n\n\n\n\n\u8bad\u7ec3\u7b97\u6cd5: \u6784\u9020\u6811\u7684\u6570\u636e\u7ed3\u6784\n\n\n\n\ndef\n \nbinSplitDataSet\n(\ndataSet\n,\n \nfeature\n,\n \nvalue\n):\n\n    \nbinSplitDataSet(\u5c06\u6570\u636e\u96c6\uff0c\u6309\u7167feature\u5217\u7684value\u8fdb\u884c \u4e8c\u5143\u5207\u5206)\n\n\n        Description\uff1a\u5728\u7ed9\u5b9a\u7279\u5f81\u548c\u7279\u5f81\u503c\u7684\u60c5\u51b5\u4e0b\uff0c\u8be5\u51fd\u6570\u901a\u8fc7\u6570\u7ec4\u8fc7\u6ee4\u65b9\u5f0f\u5c06\u4e0a\u8ff0\u6570\u636e\u96c6\u5408\u5207\u5206\u5f97\u5230\u4e24\u4e2a\u5b50\u96c6\u5e76\u8fd4\u56de\u3002\n\n\n    Args:\n\n\n        dataMat \u6570\u636e\u96c6\n\n\n        feature \u5f85\u5207\u5206\u7684\u7279\u5f81\u5217\n\n\n        value \u7279\u5f81\u5217\u8981\u6bd4\u8f83\u7684\u503c\n\n\n    Returns:\n\n\n        mat0 \u5c0f\u4e8e\u7b49\u4e8e value \u7684\u6570\u636e\u96c6\u5728\u5de6\u8fb9\n\n\n        mat1 \u5927\u4e8e value \u7684\u6570\u636e\u96c6\u5728\u53f3\u8fb9\n\n\n    Raises:\n\n\n    \n\n    \n# # \u6d4b\u8bd5\u6848\u4f8b\n\n    \n# print \ndataSet[:, feature]=\n, dataSet[:, feature]\n\n    \n# print \nnonzero(dataSet[:, feature] \n value)[0]=\n, nonzero(dataSet[:, feature] \n value)[0]\n\n    \n# print \nnonzero(dataSet[:, feature] \n= value)[0]=\n, nonzero(dataSet[:, feature] \n= value)[0]\n\n\n    \n# dataSet[:, feature] \u53d6\u53bb\u6bcf\u4e00\u884c\u4e2d\uff0c\u7b2c1\u5217\u7684\u503c(\u4ece0\u5f00\u59cb\u7b97)\n\n    \n# nonzero(dataSet[:, feature] \n value)  \u8fd4\u56de\u7ed3\u679c\u4e3atrue\u884c\u7684index\u4e0b\u6807\n\n    \nmat0\n \n=\n \ndataSet\n[\nnonzero\n(\ndataSet\n[:,\n \nfeature\n]\n \n=\n \nvalue\n)[\n0\n],\n \n:]\n\n    \nmat1\n \n=\n \ndataSet\n[\nnonzero\n(\ndataSet\n[:,\n \nfeature\n]\n \n \nvalue\n)[\n0\n],\n \n:]\n\n    \nreturn\n \nmat0\n,\n \nmat1\n\n\n\n\n# 1.\u7528\u6700\u4f73\u65b9\u5f0f\u5207\u5206\u6570\u636e\u96c6\n\n\n# 2.\u751f\u6210\u76f8\u5e94\u7684\u53f6\u8282\u70b9\n\n\ndef\n \nchooseBestSplit\n(\ndataSet\n,\n \nleafType\n=\nregLeaf\n,\n \nerrType\n=\nregErr\n,\n \nops\n=\n(\n1\n,\n \n4\n)):\n\n    \nchooseBestSplit(\u7528\u6700\u4f73\u65b9\u5f0f\u5207\u5206\u6570\u636e\u96c6 \u548c \u751f\u6210\u76f8\u5e94\u7684\u53f6\u8282\u70b9)\n\n\n\n    Args:\n\n\n        dataSet   \u52a0\u8f7d\u7684\u539f\u59cb\u6570\u636e\u96c6\n\n\n        leafType  \u5efa\u7acb\u53f6\u5b50\u70b9\u7684\u51fd\u6570\n\n\n        errType   \u8bef\u5dee\u8ba1\u7b97\u51fd\u6570(\u6c42\u603b\u65b9\u5dee)\n\n\n        ops       [\u5bb9\u8bb8\u8bef\u5dee\u4e0b\u964d\u503c\uff0c\u5207\u5206\u7684\u6700\u5c11\u6837\u672c\u6570]\u3002\n\n\n    Returns:\n\n\n        bestIndex feature\u7684index\u5750\u6807\n\n\n        bestValue \u5207\u5206\u7684\u6700\u4f18\u503c\n\n\n    Raises:\n\n\n    \n\n\n    \n# ops=(1,4)\uff0c\u975e\u5e38\u91cd\u8981\uff0c\u56e0\u4e3a\u5b83\u51b3\u5b9a\u4e86\u51b3\u7b56\u6811\u5212\u5206\u505c\u6b62\u7684threshold\u503c\uff0c\u88ab\u79f0\u4e3a\u9884\u526a\u679d\uff08prepruning\uff09\uff0c\u5176\u5b9e\u4e5f\u5c31\u662f\u7528\u4e8e\u63a7\u5236\u51fd\u6570\u7684\u505c\u6b62\u65f6\u673a\u3002\n\n    \n# \u4e4b\u6240\u4ee5\u8fd9\u6837\u8bf4\uff0c\u662f\u56e0\u4e3a\u5b83\u9632\u6b62\u51b3\u7b56\u6811\u7684\u8fc7\u62df\u5408\uff0c\u6240\u4ee5\u5f53\u8bef\u5dee\u7684\u4e0b\u964d\u503c\u5c0f\u4e8etolS\uff0c\u6216\u5212\u5206\u540e\u7684\u96c6\u5408size\u5c0f\u4e8etolN\u65f6\uff0c\u9009\u62e9\u505c\u6b62\u7ee7\u7eed\u5212\u5206\u3002\n\n    \n# \u6700\u5c0f\u8bef\u5dee\u4e0b\u964d\u503c\uff0c\u5212\u5206\u540e\u7684\u8bef\u5dee\u51cf\u5c0f\u5c0f\u4e8e\u8fd9\u4e2a\u5dee\u503c\uff0c\u5c31\u4e0d\u7528\u7ee7\u7eed\u5212\u5206\n\n    \ntolS\n \n=\n \nops\n[\n0\n]\n\n    \n# \u5212\u5206\u6700\u5c0f size \u5c0f\u4e8e\uff0c\u5c31\u4e0d\u7ee7\u7eed\u5212\u5206\u4e86\n\n    \ntolN\n \n=\n \nops\n[\n1\n]\n\n    \n# \u5982\u679c\u7ed3\u679c\u96c6(\u6700\u540e\u4e00\u5217\u4e3a1\u4e2a\u53d8\u91cf)\uff0c\u5c31\u8fd4\u56de\u9000\u51fa\n\n    \n# .T \u5bf9\u6570\u636e\u96c6\u8fdb\u884c\u8f6c\u7f6e\n\n    \n# .tolist()[0] \u8f6c\u5316\u4e3a\u6570\u7ec4\u5e76\u53d6\u7b2c0\u5217\n\n    \nif\n \nlen\n(\nset\n(\ndataSet\n[:,\n \n-\n1\n]\n.\nT\n.\ntolist\n()[\n0\n]))\n \n==\n \n1\n:\n \n# \u5982\u679c\u96c6\u5408size\u4e3a1\uff0c\u4e0d\u7528\u7ee7\u7eed\u5212\u5206\u3002\n\n        \n#  exit cond 1\n\n        \nreturn\n \nNone\n,\n \nleafType\n(\ndataSet\n)\n\n    \n# \u8ba1\u7b97\u884c\u5217\u503c\n\n    \nm\n,\n \nn\n \n=\n \nshape\n(\ndataSet\n)\n\n    \n# \u65e0\u5206\u7c7b\u8bef\u5dee\u7684\u603b\u65b9\u5dee\u548c\n\n    \n# the choice of the best feature is driven by Reduction in RSS error from mean\n\n    \nS\n \n=\n \nerrType\n(\ndataSet\n)\n\n    \n# inf \u6b63\u65e0\u7a77\u5927\n\n    \nbestS\n,\n \nbestIndex\n,\n \nbestValue\n \n=\n \ninf\n,\n \n0\n,\n \n0\n\n    \n# \u5faa\u73af\u5904\u7406\u6bcf\u4e00\u5217\u5bf9\u5e94\u7684feature\u503c\n\n    \nfor\n \nfeatIndex\n \nin\n \nrange\n(\nn\n-\n1\n):\n \n# \u5bf9\u4e8e\u6bcf\u4e2a\u7279\u5f81\n\n        \n# [0]\u8868\u793a\u8fd9\u4e00\u5217\u7684[\u6240\u6709\u884c]\uff0c\u4e0d\u8981[0]\u5c31\u662f\u4e00\u4e2aarray[[\u6240\u6709\u884c]]\n\n        \nfor\n \nsplitVal\n \nin\n \nset\n(\ndataSet\n[:,\n \nfeatIndex\n]\n.\nT\n.\ntolist\n()[\n0\n]):\n\n            \n# \u5bf9\u8be5\u5217\u8fdb\u884c\u5206\u7ec4\uff0c\u7136\u540e\u7ec4\u5185\u7684\u6210\u5458\u7684val\u503c\u8fdb\u884c \u4e8c\u5143\u5207\u5206\n\n            \nmat0\n,\n \nmat1\n \n=\n \nbinSplitDataSet\n(\ndataSet\n,\n \nfeatIndex\n,\n \nsplitVal\n)\n\n            \n# \u5224\u65ad\u4e8c\u5143\u5207\u5206\u7684\u65b9\u5f0f\u7684\u5143\u7d20\u6570\u91cf\u662f\u5426\u7b26\u5408\u9884\u671f\n\n            \nif\n \n(\nshape\n(\nmat0\n)[\n0\n]\n \n \ntolN\n)\n \nor\n \n(\nshape\n(\nmat1\n)[\n0\n]\n \n \ntolN\n):\n\n                \ncontinue\n\n            \nnewS\n \n=\n \nerrType\n(\nmat0\n)\n \n+\n \nerrType\n(\nmat1\n)\n\n            \n# \u5982\u679c\u4e8c\u5143\u5207\u5206\uff0c\u7b97\u51fa\u6765\u7684\u8bef\u5dee\u5728\u53ef\u63a5\u53d7\u8303\u56f4\u5185\uff0c\u90a3\u4e48\u5c31\u8bb0\u5f55\u5207\u5206\u70b9\uff0c\u5e76\u8bb0\u5f55\u6700\u5c0f\u8bef\u5dee\n\n            \n# \u5982\u679c\u5212\u5206\u540e\u8bef\u5dee\u5c0f\u4e8e bestS\uff0c\u5219\u8bf4\u660e\u627e\u5230\u4e86\u65b0\u7684bestS\n\n            \nif\n \nnewS\n \n \nbestS\n:\n\n                \nbestIndex\n \n=\n \nfeatIndex\n\n                \nbestValue\n \n=\n \nsplitVal\n\n                \nbestS\n \n=\n \nnewS\n\n    \n# \u5224\u65ad\u4e8c\u5143\u5207\u5206\u7684\u65b9\u5f0f\u7684\u5143\u7d20\u8bef\u5dee\u662f\u5426\u7b26\u5408\u9884\u671f\n\n    \n# if the decrease (S-bestS) is less than a threshold don\nt do the split\n\n    \nif\n \n(\nS\n \n-\n \nbestS\n)\n \n \ntolS\n:\n\n        \nreturn\n \nNone\n,\n \nleafType\n(\ndataSet\n)\n\n    \nmat0\n,\n \nmat1\n \n=\n \nbinSplitDataSet\n(\ndataSet\n,\n \nbestIndex\n,\n \nbestValue\n)\n\n    \n# \u5bf9\u6574\u4f53\u7684\u6210\u5458\u8fdb\u884c\u5224\u65ad\uff0c\u662f\u5426\u7b26\u5408\u9884\u671f\n\n    \n# \u5982\u679c\u96c6\u5408\u7684 size \u5c0f\u4e8e tolN \n\n    \nif\n \n(\nshape\n(\nmat0\n)[\n0\n]\n \n \ntolN\n)\n \nor\n \n(\nshape\n(\nmat1\n)[\n0\n]\n \n \ntolN\n):\n \n# \u5f53\u6700\u4f73\u5212\u5206\u540e\uff0c\u96c6\u5408\u8fc7\u5c0f\uff0c\u4e5f\u4e0d\u5212\u5206\uff0c\u4ea7\u751f\u53f6\u8282\u70b9\n\n        \nreturn\n \nNone\n,\n \nleafType\n(\ndataSet\n)\n\n    \nreturn\n \nbestIndex\n,\n \nbestValue\n\n\n\n\n# assume dataSet is NumPy Mat so we can array filtering\n\n\n# \u5047\u8bbe dataSet \u662f NumPy Mat \u7c7b\u578b\u7684\uff0c\u90a3\u4e48\u6211\u4eec\u53ef\u4ee5\u8fdb\u884c array \u8fc7\u6ee4\n\n\ndef\n \ncreateTree\n(\ndataSet\n,\n \nleafType\n=\nregLeaf\n,\n \nerrType\n=\nregErr\n,\n \nops\n=\n(\n1\n,\n \n4\n)):\n\n    \ncreateTree(\u83b7\u53d6\u56de\u5f52\u6811)\n\n\n        Description\uff1a\u9012\u5f52\u51fd\u6570\uff1a\u5982\u679c\u6784\u5efa\u7684\u662f\u56de\u5f52\u6811\uff0c\u8be5\u6a21\u578b\u662f\u4e00\u4e2a\u5e38\u6570\uff0c\u5982\u679c\u662f\u6a21\u578b\u6811\uff0c\u5176\u6a21\u578b\u5e08\u4e00\u4e2a\u7ebf\u6027\u65b9\u7a0b\u3002\n\n\n    Args:\n\n\n        dataSet      \u52a0\u8f7d\u7684\u539f\u59cb\u6570\u636e\u96c6\n\n\n        leafType     \u5efa\u7acb\u53f6\u5b50\u70b9\u7684\u51fd\u6570\n\n\n        errType      \u8bef\u5dee\u8ba1\u7b97\u51fd\u6570\n\n\n        ops=(1, 4)   [\u5bb9\u8bb8\u8bef\u5dee\u4e0b\u964d\u503c\uff0c\u5207\u5206\u7684\u6700\u5c11\u6837\u672c\u6570]\n\n\n    Returns:\n\n\n        retTree    \u51b3\u7b56\u6811\u6700\u540e\u7684\u7ed3\u679c\n\n\n    \n\n    \n# \u9009\u62e9\u6700\u597d\u7684\u5207\u5206\u65b9\u5f0f\uff1a feature\u7d22\u5f15\u503c\uff0c\u6700\u4f18\u5207\u5206\u503c\n\n    \n# choose the best split\n\n    \nfeat\n,\n \nval\n \n=\n \nchooseBestSplit\n(\ndataSet\n,\n \nleafType\n,\n \nerrType\n,\n \nops\n)\n\n    \n# if the splitting hit a stop condition return val\n\n    \n# \u5982\u679c splitting \u8fbe\u5230\u4e00\u4e2a\u505c\u6b62\u6761\u4ef6\uff0c\u90a3\u4e48\u8fd4\u56de val\n\n    \nif\n \nfeat\n \nis\n \nNone\n:\n\n        \nreturn\n \nval\n\n    \nretTree\n \n=\n \n{}\n\n    \nretTree\n[\nspInd\n]\n \n=\n \nfeat\n\n    \nretTree\n[\nspVal\n]\n \n=\n \nval\n\n    \n# \u5927\u4e8e\u5728\u53f3\u8fb9\uff0c\u5c0f\u4e8e\u5728\u5de6\u8fb9\uff0c\u5206\u4e3a2\u4e2a\u6570\u636e\u96c6\n\n    \nlSet\n,\n \nrSet\n \n=\n \nbinSplitDataSet\n(\ndataSet\n,\n \nfeat\n,\n \nval\n)\n\n    \n# \u9012\u5f52\u7684\u8fdb\u884c\u8c03\u7528\uff0c\u5728\u5de6\u53f3\u5b50\u6811\u4e2d\u7ee7\u7eed\u9012\u5f52\u751f\u6210\u6811\n\n    \nretTree\n[\nleft\n]\n \n=\n \ncreateTree\n(\nlSet\n,\n \nleafType\n,\n \nerrType\n,\n \nops\n)\n\n    \nretTree\n[\nright\n]\n \n=\n \ncreateTree\n(\nrSet\n,\n \nleafType\n,\n \nerrType\n,\n \nops\n)\n\n    \nreturn\n \nretTree\n\n\n\n\n\u5b8c\u6574\u4ee3\u7801\u5730\u5740\n: \nhttps://github.com/apachecn/MachineLearning/blob/master/src/python/9.RegTrees/regTrees.py\n\n\n\n\n\u6d4b\u8bd5\u7b97\u6cd5\uff1a\u4f7f\u7528\u6d4b\u8bd5\u6570\u636e\u4e0a\u7684R^2\u503c\u6765\u5206\u6790\u6a21\u578b\u7684\u6548\u679c\n\n\n\u4f7f\u7528\u7b97\u6cd5\uff1a\u4f7f\u7528\u8bad\u7ec3\u51fa\u7684\u6811\u505a\u9884\u6d4b\uff0c\u9884\u6d4b\u7ed3\u679c\u8fd8\u53ef\u4ee5\u7528\u6765\u505a\u5f88\u591a\u4e8b\u60c5\n\n\n\n\n2\u3001\u6811\u526a\u679d\n\n\n\u4e00\u68f5\u6811\u5982\u679c\u8282\u70b9\u8fc7\u591a\uff0c\u8868\u660e\u8be5\u6a21\u578b\u53ef\u80fd\u5bf9\u6570\u636e\u8fdb\u884c\u4e86 \u201c\u8fc7\u62df\u5408\u201d\u3002\n\n\n\u901a\u8fc7\u964d\u4f4e\u51b3\u7b56\u6811\u7684\u590d\u6742\u5ea6\u6765\u907f\u514d\u8fc7\u62df\u5408\u7684\u8fc7\u7a0b\u79f0\u4e3a \n\u526a\u679d\uff08pruning\uff09\n\u3002\u5728\u51fd\u6570 chooseBestSplit() \u4e2d\u63d0\u524d\u7ec8\u6b62\u6761\u4ef6\uff0c\u5b9e\u9645\u4e0a\u662f\u5728\u8fdb\u884c\u4e00\u79cd\u6240\u8c13\u7684 \n\u9884\u526a\u679d\uff08prepruning\uff09\n\u64cd\u4f5c\u3002\u53e6\u4e00\u4e2a\u5f62\u5f0f\u7684\u526a\u679d\u9700\u8981\u4f7f\u7528\u6d4b\u8bd5\u96c6\u548c\u8bad\u7ec3\u96c6\uff0c\u79f0\u4f5c \n\u540e\u526a\u679d\uff08postpruning\uff09\n\u3002\n\n\n2.1\u3001\u9884\u526a\u679d(prepruning)\n\n\n\u987e\u540d\u601d\u4e49\uff0c\u9884\u526a\u679d\u5c31\u662f\u53ca\u65e9\u7684\u505c\u6b62\u6811\u589e\u957f\uff0c\u5728\u6784\u9020\u51b3\u7b56\u6811\u7684\u540c\u65f6\u8fdb\u884c\u526a\u679d\u3002\n\n\n\u6240\u6709\u51b3\u7b56\u6811\u7684\u6784\u5efa\u65b9\u6cd5\uff0c\u90fd\u662f\u5728\u65e0\u6cd5\u8fdb\u4e00\u6b65\u964d\u4f4e\u71b5\u7684\u60c5\u51b5\u4e0b\u624d\u4f1a\u505c\u6b62\u521b\u5efa\u5206\u652f\u7684\u8fc7\u7a0b\uff0c\u4e3a\u4e86\u907f\u514d\u8fc7\u62df\u5408\uff0c\u53ef\u4ee5\u8bbe\u5b9a\u4e00\u4e2a\u9608\u503c\uff0c\u71b5\u51cf\u5c0f\u7684\u6570\u91cf\u5c0f\u4e8e\u8fd9\u4e2a\u9608\u503c\uff0c\u5373\u4f7f\u8fd8\u53ef\u4ee5\u7ee7\u7eed\u964d\u4f4e\u71b5\uff0c\u4e5f\u505c\u6b62\u7ee7\u7eed\u521b\u5efa\u5206\u652f\u3002\u4f46\u662f\u8fd9\u79cd\u65b9\u6cd5\u5b9e\u9645\u4e2d\u7684\u6548\u679c\u5e76\u4e0d\u597d\u3002\n\n\n2.2\u3001\u540e\u526a\u679d(postpruning)\n\n\n\u51b3\u7b56\u6811\u6784\u9020\u5b8c\u6210\u540e\u8fdb\u884c\u526a\u679d\u3002\u526a\u679d\u7684\u8fc7\u7a0b\u662f\u5bf9\u62e5\u6709\u540c\u6837\u7236\u8282\u70b9\u7684\u4e00\u7ec4\u8282\u70b9\u8fdb\u884c\u68c0\u67e5\uff0c\u5224\u65ad\u5982\u679c\u5c06\u5176\u5408\u5e76\uff0c\u71b5\u7684\u589e\u52a0\u91cf\u662f\u5426\u5c0f\u4e8e\u67d0\u4e00\u9608\u503c\u3002\u5982\u679c\u786e\u5b9e\u5c0f\uff0c\u5219\u8fd9\u4e00\u7ec4\u8282\u70b9\u53ef\u4ee5\u5408\u5e76\u4e00\u4e2a\u8282\u70b9\uff0c\u5176\u4e2d\u5305\u542b\u4e86\u6240\u6709\u53ef\u80fd\u7684\u7ed3\u679c\u3002\u5408\u5e76\u4e5f\u88ab\u79f0\u4f5c \n\u584c\u9677\u5904\u7406\n \uff0c\u5728\u56de\u5f52\u6811\u4e2d\u4e00\u822c\u91c7\u7528\u53d6\u9700\u8981\u5408\u5e76\u7684\u6240\u6709\u5b50\u6811\u7684\u5e73\u5747\u503c\u3002\u540e\u526a\u679d\u662f\u76ee\u524d\u6700\u666e\u904d\u7684\u505a\u6cd5\u3002\n\n\n\u540e\u526a\u679d prune() \u7684\u4f2a\u4ee3\u7801\u5982\u4e0b:\n\n\n\u57fa\u4e8e\u5df2\u6709\u7684\u6811\u5207\u5206\u6d4b\u8bd5\u6570\u636e:\n    \u5982\u679c\u5b58\u5728\u4efb\u4e00\u5b50\u96c6\u662f\u4e00\u68f5\u6811\uff0c\u5219\u5728\u8be5\u5b50\u96c6\u9012\u5f52\u526a\u679d\u8fc7\u7a0b\n    \u8ba1\u7b97\u5c06\u5f53\u524d\u4e24\u4e2a\u53f6\u8282\u70b9\u5408\u5e76\u540e\u7684\u8bef\u5dee\n    \u8ba1\u7b97\u4e0d\u5408\u5e76\u7684\u8bef\u5dee\n    \u5982\u679c\u5408\u5e76\u4f1a\u964d\u4f4e\u8bef\u5dee\u7684\u8bdd\uff0c\u5c31\u5c06\u53f6\u8282\u70b9\u5408\u5e76\n\n\n\n\n2.3\u3001\u526a\u679d \u4ee3\u7801\n\n\n\u56de\u5f52\u6811\u526a\u679d\u51fd\u6570\n\n\n# \u5224\u65ad\u8282\u70b9\u662f\u5426\u662f\u4e00\u4e2a\u5b57\u5178\n\n\ndef\n \nisTree\n(\nobj\n):\n\n    \n\n\n    Desc:\n\n\n        \u6d4b\u8bd5\u8f93\u5165\u53d8\u91cf\u662f\u5426\u662f\u4e00\u68f5\u6811,\u5373\u662f\u5426\u662f\u4e00\u4e2a\u5b57\u5178\n\n\n    Args:\n\n\n        obj -- \u8f93\u5165\u53d8\u91cf\n\n\n    Returns:\n\n\n        \u8fd4\u56de\u5e03\u5c14\u7c7b\u578b\u7684\u7ed3\u679c\u3002\u5982\u679c obj \u662f\u4e00\u4e2a\u5b57\u5178\uff0c\u8fd4\u56detrue\uff0c\u5426\u5219\u8fd4\u56de false\n\n\n    \n\n    \nreturn\n \n(\ntype\n(\nobj\n)\n.\n__name__\n \n==\n \ndict\n)\n\n\n\n\n# \u8ba1\u7b97\u5de6\u53f3\u679d\u4e2b\u7684\u5747\u503c\n\n\ndef\n \ngetMean\n(\ntree\n):\n\n    \n\n\n    Desc:\n\n\n        \u4ece\u4e0a\u5f80\u4e0b\u904d\u5386\u6811\u76f4\u5230\u53f6\u8282\u70b9\u4e3a\u6b62\uff0c\u5982\u679c\u627e\u5230\u4e24\u4e2a\u53f6\u8282\u70b9\u5219\u8ba1\u7b97\u5b83\u4eec\u7684\u5e73\u5747\u503c\u3002\n\n\n        \u5bf9 tree \u8fdb\u884c\u584c\u9677\u5904\u7406\uff0c\u5373\u8fd4\u56de\u6811\u5e73\u5747\u503c\u3002\n\n\n    Args:\n\n\n        tree -- \u8f93\u5165\u7684\u6811\n\n\n    Returns:\n\n\n        \u8fd4\u56de tree \u8282\u70b9\u7684\u5e73\u5747\u503c\n\n\n    \n\n    \nif\n \nisTree\n(\ntree\n[\nright\n]):\n\n        \ntree\n[\nright\n]\n \n=\n \ngetMean\n(\ntree\n[\nright\n])\n\n    \nif\n \nisTree\n(\ntree\n[\nleft\n]):\n\n        \ntree\n[\nleft\n]\n \n=\n \ngetMean\n(\ntree\n[\nleft\n])\n\n    \nreturn\n \n(\ntree\n[\nleft\n]\n+\ntree\n[\nright\n])\n/\n2.0\n\n\n\n\n# \u68c0\u67e5\u662f\u5426\u9002\u5408\u5408\u5e76\u5206\u679d\n\n\ndef\n \nprune\n(\ntree\n,\n \ntestData\n):\n\n    \n\n\n    Desc:\n\n\n        \u4ece\u4e0a\u800c\u4e0b\u627e\u5230\u53f6\u8282\u70b9\uff0c\u7528\u6d4b\u8bd5\u6570\u636e\u96c6\u6765\u5224\u65ad\u5c06\u8fd9\u4e9b\u53f6\u8282\u70b9\u5408\u5e76\u662f\u5426\u80fd\u964d\u4f4e\u6d4b\u8bd5\u8bef\u5dee\n\n\n    Args:\n\n\n        tree -- \u5f85\u526a\u679d\u7684\u6811\n\n\n        testData -- \u526a\u679d\u6240\u9700\u8981\u7684\u6d4b\u8bd5\u6570\u636e testData \n\n\n    Returns:\n\n\n        tree -- \u526a\u679d\u5b8c\u6210\u7684\u6811\n\n\n    \n\n    \n# \u5224\u65ad\u662f\u5426\u6d4b\u8bd5\u6570\u636e\u96c6\u6ca1\u6709\u6570\u636e\uff0c\u5982\u679c\u6ca1\u6709\uff0c\u5c31\u76f4\u63a5\u8fd4\u56detree\u672c\u8eab\u7684\u5747\u503c\n\n    \nif\n \nshape\n(\ntestData\n)[\n0\n]\n \n==\n \n0\n:\n\n        \nreturn\n \ngetMean\n(\ntree\n)\n\n\n    \n# \u5224\u65ad\u5206\u679d\u662f\u5426\u662fdict\u5b57\u5178\uff0c\u5982\u679c\u662f\u5c31\u5c06\u6d4b\u8bd5\u6570\u636e\u96c6\u8fdb\u884c\u5207\u5206\n\n    \nif\n \n(\nisTree\n(\ntree\n[\nright\n])\n \nor\n \nisTree\n(\ntree\n[\nleft\n])):\n\n        \nlSet\n,\n \nrSet\n \n=\n \nbinSplitDataSet\n(\ntestData\n,\n \ntree\n[\nspInd\n],\n \ntree\n[\nspVal\n])\n\n    \n# \u5982\u679c\u662f\u5de6\u8fb9\u5206\u679d\u662f\u5b57\u5178\uff0c\u5c31\u4f20\u5165\u5de6\u8fb9\u7684\u6570\u636e\u96c6\u548c\u5de6\u8fb9\u7684\u5206\u679d\uff0c\u8fdb\u884c\u9012\u5f52\n\n    \nif\n \nisTree\n(\ntree\n[\nleft\n]):\n\n        \ntree\n[\nleft\n]\n \n=\n \nprune\n(\ntree\n[\nleft\n],\n \nlSet\n)\n\n    \n# \u5982\u679c\u662f\u53f3\u8fb9\u5206\u679d\u662f\u5b57\u5178\uff0c\u5c31\u4f20\u5165\u5de6\u8fb9\u7684\u6570\u636e\u96c6\u548c\u5de6\u8fb9\u7684\u5206\u679d\uff0c\u8fdb\u884c\u9012\u5f52\n\n    \nif\n \nisTree\n(\ntree\n[\nright\n]):\n\n        \ntree\n[\nright\n]\n \n=\n \nprune\n(\ntree\n[\nright\n],\n \nrSet\n)\n\n\n    \n# \u4e0a\u9762\u7684\u4e00\u7cfb\u5217\u64cd\u4f5c\u672c\u8d28\u4e0a\u5c31\u662f\u5c06\u6d4b\u8bd5\u6570\u636e\u96c6\u6309\u7167\u8bad\u7ec3\u5b8c\u6210\u7684\u6811\u62c6\u5206\u597d\uff0c\u5bf9\u5e94\u7684\u503c\u653e\u5230\u5bf9\u5e94\u7684\u8282\u70b9\n\n\n    \n# \u5982\u679c\u5de6\u53f3\u4e24\u8fb9\u540c\u65f6\u90fd\u4e0d\u662fdict\u5b57\u5178\uff0c\u4e5f\u5c31\u662f\u5de6\u53f3\u4e24\u8fb9\u90fd\u662f\u53f6\u8282\u70b9\uff0c\u800c\u4e0d\u662f\u5b50\u6811\u4e86\uff0c\u90a3\u4e48\u5206\u5272\u6d4b\u8bd5\u6570\u636e\u96c6\u3002\n\n    \n# 1. \u5982\u679c\u6b63\u786e \n\n    \n#   * \u90a3\u4e48\u8ba1\u7b97\u4e00\u4e0b\u603b\u65b9\u5dee \u548c \u8be5\u7ed3\u679c\u96c6\u7684\u672c\u8eab\u4e0d\u5206\u679d\u7684\u603b\u65b9\u5dee\u6bd4\u8f83\n\n    \n#   * \u5982\u679c \u5408\u5e76\u7684\u603b\u65b9\u5dee \n \u4e0d\u5408\u5e76\u7684\u603b\u65b9\u5dee\uff0c\u90a3\u4e48\u5c31\u8fdb\u884c\u5408\u5e76\n\n    \n# \u6ce8\u610f\u8fd4\u56de\u7684\u7ed3\u679c\uff1a \u5982\u679c\u53ef\u4ee5\u5408\u5e76\uff0c\u539f\u6765\u7684dict\u5c31\u53d8\u4e3a\u4e86 \u6570\u503c\n\n    \nif\n \nnot\n \nisTree\n(\ntree\n[\nleft\n])\n \nand\n \nnot\n \nisTree\n(\ntree\n[\nright\n]):\n\n        \nlSet\n,\n \nrSet\n \n=\n \nbinSplitDataSet\n(\ntestData\n,\n \ntree\n[\nspInd\n],\n \ntree\n[\nspVal\n])\n\n        \n# power(x, y)\u8868\u793ax\u7684y\u6b21\u65b9\n\n        \nerrorNoMerge\n \n=\n \nsum\n(\npower\n(\nlSet\n[:,\n \n-\n1\n]\n \n-\n \ntree\n[\nleft\n],\n \n2\n))\n \n+\n \nsum\n(\npower\n(\nrSet\n[:,\n \n-\n1\n]\n \n-\n \ntree\n[\nright\n],\n \n2\n))\n\n        \ntreeMean\n \n=\n \n(\ntree\n[\nleft\n]\n \n+\n \ntree\n[\nright\n])\n/\n2.0\n\n        \nerrorMerge\n \n=\n \nsum\n(\npower\n(\ntestData\n[:,\n \n-\n1\n]\n \n-\n \ntreeMean\n,\n \n2\n))\n\n        \n# \u5982\u679c \u5408\u5e76\u7684\u603b\u65b9\u5dee \n \u4e0d\u5408\u5e76\u7684\u603b\u65b9\u5dee\uff0c\u90a3\u4e48\u5c31\u8fdb\u884c\u5408\u5e76\n\n        \nif\n \nerrorMerge\n \n \nerrorNoMerge\n:\n\n            \nprint\n \nmerging\n\n            \nreturn\n \ntreeMean\n\n        \nelse\n:\n\n            \nreturn\n \ntree\n\n    \nelse\n:\n\n        \nreturn\n \ntree\n\n\n\n\n\u5b8c\u6574\u4ee3\u7801\u5730\u5740\n: \nhttps://github.com/apachecn/MachineLearning/blob/master/src/python/9.RegTrees/regTrees.py\n\n\n3\u3001\u6a21\u578b\u6811\n\n\n3.1\u3001\u6a21\u578b\u6811 \u7b80\u4ecb\n\n\n\u7528\u6811\u6765\u5bf9\u6570\u636e\u5efa\u6a21\uff0c\u9664\u4e86\u628a\u53f6\u8282\u70b9\u7b80\u5355\u5730\u8bbe\u5b9a\u4e3a\u5e38\u6570\u503c\u4e4b\u5916\uff0c\u8fd8\u6709\u4e00\u79cd\u65b9\u6cd5\u662f\u628a\u53f6\u8282\u70b9\u8bbe\u5b9a\u4e3a\u5206\u6bb5\u7ebf\u6027\u51fd\u6570\uff0c\u8fd9\u91cc\u6240\u8c13\u7684 \n\u5206\u6bb5\u7ebf\u6027\uff08piecewise linear\uff09\n \u662f\u6307\u6a21\u578b\u7531\u591a\u4e2a\u7ebf\u6027\u7247\u6bb5\u7ec4\u6210\u3002\n\n\n\u6211\u4eec\u770b\u4e00\u4e0b\u56fe 9-4 \u4e2d\u7684\u6570\u636e\uff0c\u5982\u679c\u4f7f\u7528\u4e24\u6761\u76f4\u7ebf\u62df\u5408\u662f\u5426\u6bd4\u4f7f\u7528\u4e00\u7ec4\u5e38\u6570\u6765\u5efa\u6a21\u597d\u5462\uff1f\u7b54\u6848\u663e\u800c\u6613\u89c1\u3002\u53ef\u4ee5\u8bbe\u8ba1\u4e24\u6761\u5206\u522b\u4ece 0.0~0.3\u3001\u4ece 0.3~1.0 \u7684\u76f4\u7ebf\uff0c\u4e8e\u662f\u5c31\u53ef\u4ee5\u5f97\u5230\u4e24\u4e2a\u7ebf\u6027\u6a21\u578b\u3002\u56e0\u4e3a\u6570\u636e\u96c6\u91cc\u7684\u4e00\u90e8\u5206\u6570\u636e\uff080.0\n0.3\uff09\u4ee5\u67d0\u4e2a\u7ebf\u6027\u6a21\u578b\u5efa\u6a21\uff0c\u800c\u53e6\u4e00\u90e8\u5206\u6570\u636e\uff080.3\n1.0\uff09\u5219\u4ee5\u53e6\u4e00\u4e2a\u7ebf\u6027\u6a21\u578b\u5efa\u6a21\uff0c\u56e0\u6b64\u6211\u4eec\u8bf4\u91c7\u7528\u4e86\u6240\u8c13\u7684\u5206\u6bb5\u7ebf\u6027\u6a21\u578b\u3002\n\n\n\u51b3\u7b56\u6811\u76f8\u6bd4\u4e8e\u5176\u4ed6\u673a\u5668\u5b66\u4e60\u7b97\u6cd5\u7684\u4f18\u52bf\u4e4b\u4e00\u5728\u4e8e\u7ed3\u679c\u66f4\u6613\u7406\u89e3\u3002\u5f88\u663e\u7136\uff0c\u4e24\u6761\u76f4\u7ebf\u6bd4\u5f88\u591a\u8282\u70b9\u7ec4\u6210\u4e00\u68f5\u5927\u6811\u66f4\u5bb9\u6613\u89e3\u91ca\u3002\u6a21\u578b\u6811\u7684\u53ef\u89e3\u91ca\u6027\u662f\u5b83\u4f18\u4e8e\u56de\u5f52\u6811\u7684\u7279\u70b9\u4e4b\u4e00\u3002\u53e6\u5916\uff0c\u6a21\u578b\u6811\u4e5f\u5177\u6709\u66f4\u9ad8\u7684\u9884\u6d4b\u51c6\u786e\u5ea6\u3002\n\n\n\n\n\u5c06\u4e4b\u524d\u7684\u56de\u5f52\u6811\u7684\u4ee3\u7801\u7a0d\u4f5c\u4fee\u6539\uff0c\u5c31\u53ef\u4ee5\u5728\u53f6\u8282\u70b9\u751f\u6210\u7ebf\u6027\u6a21\u578b\u800c\u4e0d\u662f\u5e38\u6570\u503c\u3002\u4e0b\u9762\u5c06\u5229\u7528\u6811\u751f\u6210\u7b97\u6cd5\u5bf9\u6570\u636e\u8fdb\u884c\u5212\u5206\uff0c\u4e14\u6bcf\u4efd\u5207\u5206\u6570\u636e\u90fd\u80fd\u5f88\u5bb9\u6613\u88ab\u7ebf\u6027\u6a21\u578b\u6240\u8868\u793a\u3002\u8fd9\u4e2a\u7b97\u6cd5\u7684\u5173\u952e\u5728\u4e8e\u8bef\u5dee\u7684\u8ba1\u7b97\u3002\n\n\n\u90a3\u4e48\u4e3a\u4e86\u627e\u5230\u6700\u4f73\u5207\u5206\uff0c\u5e94\u8be5\u600e\u6837\u8ba1\u7b97\u8bef\u5dee\u5462\uff1f\u524d\u9762\u7528\u4e8e\u56de\u5f52\u6811\u7684\u8bef\u5dee\u8ba1\u7b97\u65b9\u6cd5\u8fd9\u91cc\u4e0d\u80fd\u518d\u7528\u3002\u7a0d\u52a0\u53d8\u5316\uff0c\u5bf9\u4e8e\u7ed9\u5b9a\u7684\u6570\u636e\u96c6\uff0c\u5e94\u8be5\u5148\u7528\u6a21\u578b\u6765\u5bf9\u5b83\u8fdb\u884c\u62df\u5408\uff0c\u7136\u540e\u8ba1\u7b97\u771f\u5b9e\u7684\u76ee\u6807\u503c\u4e0e\u6a21\u578b\u9884\u6d4b\u503c\u95f4\u7684\u5dee\u503c\u3002\u6700\u540e\u5c06\u8fd9\u4e9b\u5dee\u503c\u7684\u5e73\u65b9\u6c42\u548c\u5c31\u5f97\u5230\u4e86\u6240\u9700\u7684\u8bef\u5dee\u3002\n\n\n3.2\u3001\u6a21\u578b\u6811 \u4ee3\u7801\n\n\n\u6a21\u578b\u6811\u7684\u53f6\u8282\u70b9\u751f\u6210\u51fd\u6570\n\n\n# \u5f97\u5230\u6a21\u578b\u7684ws\u7cfb\u6570\uff1af(x) = x0 + x1*featrue1+ x3*featrue2 ...\n\n\n# create linear model and return coeficients\n\n\ndef\n \nmodelLeaf\n(\ndataSet\n):\n\n    \n\n\n    Desc:\n\n\n        \u5f53\u6570\u636e\u4e0d\u518d\u9700\u8981\u5207\u5206\u7684\u65f6\u5019\uff0c\u751f\u6210\u53f6\u8282\u70b9\u7684\u6a21\u578b\u3002\n\n\n    Args:\n\n\n        dataSet -- \u8f93\u5165\u6570\u636e\u96c6\n\n\n    Returns:\n\n\n        \u8c03\u7528 linearSolve \u51fd\u6570\uff0c\u8fd4\u56de\u5f97\u5230\u7684 \u56de\u5f52\u7cfb\u6570ws\n\n\n    \n\n    \nws\n,\n \nX\n,\n \nY\n \n=\n \nlinearSolve\n(\ndataSet\n)\n\n    \nreturn\n \nws\n\n\n\n\n# \u8ba1\u7b97\u7ebf\u6027\u6a21\u578b\u7684\u8bef\u5dee\u503c\n\n\ndef\n \nmodelErr\n(\ndataSet\n):\n\n    \n\n\n    Desc:\n\n\n        \u5728\u7ed9\u5b9a\u6570\u636e\u96c6\u4e0a\u8ba1\u7b97\u8bef\u5dee\u3002\n\n\n    Args:\n\n\n        dataSet -- \u8f93\u5165\u6570\u636e\u96c6\n\n\n    Returns:\n\n\n        \u8c03\u7528 linearSolve \u51fd\u6570\uff0c\u8fd4\u56de yHat \u548c Y \u4e4b\u95f4\u7684\u5e73\u65b9\u8bef\u5dee\u3002\n\n\n    \n\n    \nws\n,\n \nX\n,\n \nY\n \n=\n \nlinearSolve\n(\ndataSet\n)\n\n    \nyHat\n \n=\n \nX\n \n*\n \nws\n\n    \n# print corrcoef(yHat, Y, rowvar=0)\n\n    \nreturn\n \nsum\n(\npower\n(\nY\n \n-\n \nyHat\n,\n \n2\n))\n\n\n\n \n# helper function used in two places\n\n\ndef\n \nlinearSolve\n(\ndataSet\n):\n\n    \n\n\n    Desc:\n\n\n        \u5c06\u6570\u636e\u96c6\u683c\u5f0f\u5316\u6210\u76ee\u6807\u53d8\u91cfY\u548c\u81ea\u53d8\u91cfX\uff0c\u6267\u884c\u7b80\u5355\u7684\u7ebf\u6027\u56de\u5f52\uff0c\u5f97\u5230ws\n\n\n    Args:\n\n\n        dataSet -- \u8f93\u5165\u6570\u636e\n\n\n    Returns:\n\n\n        ws -- \u6267\u884c\u7ebf\u6027\u56de\u5f52\u7684\u56de\u5f52\u7cfb\u6570 \n\n\n        X -- \u683c\u5f0f\u5316\u81ea\u53d8\u91cfX\n\n\n        Y -- \u683c\u5f0f\u5316\u76ee\u6807\u53d8\u91cfY\n\n\n    \n\n    \nm\n,\n \nn\n \n=\n \nshape\n(\ndataSet\n)\n\n    \n# \u4ea7\u751f\u4e00\u4e2a\u5173\u4e8e1\u7684\u77e9\u9635\n\n    \nX\n \n=\n \nmat\n(\nones\n((\nm\n,\n \nn\n)))\n\n    \nY\n \n=\n \nmat\n(\nones\n((\nm\n,\n \n1\n)))\n\n    \n# X\u76840\u5217\u4e3a1\uff0c\u5e38\u6570\u9879\uff0c\u7528\u4e8e\u8ba1\u7b97\u5e73\u8861\u8bef\u5dee\n\n    \nX\n[:,\n \n1\n:\n \nn\n]\n \n=\n \ndataSet\n[:,\n \n0\n:\n \nn\n-\n1\n]\n\n    \nY\n \n=\n \ndataSet\n[:,\n \n-\n1\n]\n\n\n    \n# \u8f6c\u7f6e\u77e9\u9635*\u77e9\u9635\n\n    \nxTx\n \n=\n \nX\n.\nT\n \n*\n \nX\n\n    \n# \u5982\u679c\u77e9\u9635\u7684\u9006\u4e0d\u5b58\u5728\uff0c\u4f1a\u9020\u6210\u7a0b\u5e8f\u5f02\u5e38\n\n    \nif\n \nlinalg\n.\ndet\n(\nxTx\n)\n \n==\n \n0.0\n:\n\n        \nraise\n \nNameError\n(\nThis matrix is singular, cannot do inverse,\n\\n\ntry increasing the second value of ops\n)\n\n    \n# \u6700\u5c0f\u4e8c\u4e58\u6cd5\u6c42\u6700\u4f18\u89e3:  w0*1+w1*x1=y\n\n    \nws\n \n=\n \nxTx\n.\nI\n \n*\n \n(\nX\n.\nT\n \n*\n \nY\n)\n\n    \nreturn\n \nws\n,\n \nX\n,\n \nY\n\n\n\n\n\u5b8c\u6574\u4ee3\u7801\u5730\u5740\n: \nhttps://github.com/apachecn/MachineLearning/blob/master/src/python/9.RegTrees/regTrees.py\n\n\n3.3\u3001\u6a21\u578b\u6811 \u8fd0\u884c\u7ed3\u679c\n\n\n\n\n4\u3001\u6811\u56de\u5f52 \u9879\u76ee\u6848\u4f8b\n\n\n4.1\u3001\u9879\u76ee\u6848\u4f8b1: \u6811\u56de\u5f52\u4e0e\u6807\u51c6\u56de\u5f52\u7684\u6bd4\u8f83\n\n\n4.1.1\u3001\u9879\u76ee\u6982\u8ff0\n\n\n\u524d\u9762\u4ecb\u7ecd\u4e86\u6a21\u578b\u6811\u3001\u56de\u5f52\u6811\u548c\u4e00\u822c\u7684\u56de\u5f52\u65b9\u6cd5\uff0c\u4e0b\u9762\u6d4b\u8bd5\u4e00\u4e0b\u54ea\u4e2a\u6a21\u578b\u6700\u597d\u3002\n\n\n\u8fd9\u4e9b\u6a21\u578b\u5c06\u5728\u67d0\u4e2a\u6570\u636e\u4e0a\u8fdb\u884c\u6d4b\u8bd5\uff0c\u8be5\u6570\u636e\u6d89\u53ca\u4eba\u7684\u667a\u529b\u6c34\u5e73\u548c\u81ea\u884c\u8f66\u7684\u901f\u5ea6\u7684\u5173\u7cfb\u3002\u5f53\u7136\uff0c\u6570\u636e\u662f\u5047\u7684\u3002\n\n\n4.1.2\u3001\u5f00\u53d1\u6d41\u7a0b\n\n\n\u6536\u96c6\u6570\u636e\uff1a\u91c7\u7528\u4efb\u610f\u65b9\u6cd5\u6536\u96c6\u6570\u636e\n\u51c6\u5907\u6570\u636e\uff1a\u9700\u8981\u6570\u503c\u578b\u6570\u636e\uff0c\u6807\u79f0\u578b\u6570\u636e\u5e94\u8be5\u6620\u5c04\u6210\u4e8c\u503c\u578b\u6570\u636e\n\u5206\u6790\u6570\u636e\uff1a\u7ed8\u51fa\u6570\u636e\u7684\u4e8c\u7ef4\u53ef\u89c6\u5316\u663e\u793a\u7ed3\u679c\uff0c\u4ee5\u5b57\u5178\u65b9\u5f0f\u751f\u6210\u6811\n\u8bad\u7ec3\u7b97\u6cd5\uff1a\u6a21\u578b\u6811\u7684\u6784\u5efa\n\u6d4b\u8bd5\u7b97\u6cd5\uff1a\u4f7f\u7528\u6d4b\u8bd5\u6570\u636e\u4e0a\u7684R^2\u503c\u6765\u5206\u6790\u6a21\u578b\u7684\u6548\u679c\n\u4f7f\u7528\u7b97\u6cd5\uff1a\u4f7f\u7528\u8bad\u7ec3\u51fa\u7684\u6811\u505a\u9884\u6d4b\uff0c\u9884\u6d4b\u7ed3\u679c\u8fd8\u53ef\u4ee5\u7528\u6765\u505a\u5f88\u591a\u4e8b\u60c5\n\n\n\n\n\n\n\u6536\u96c6\u6570\u636e: \u91c7\u7528\u4efb\u610f\u65b9\u6cd5\u6536\u96c6\u6570\u636e\n\n\n\u51c6\u5907\u6570\u636e\uff1a\u9700\u8981\u6570\u503c\u578b\u6570\u636e\uff0c\u6807\u79f0\u578b\u6570\u636e\u5e94\u8be5\u6620\u5c04\u6210\u4e8c\u503c\u578b\u6570\u636e\n\n\n\n\n\u6570\u636e\u5b58\u50a8\u683c\u5f0f:\n\n3.000000    46.852122\n23.000000   178.676107\n0.000000    86.154024\n6.000000    68.707614\n15.000000   139.737693\n\n\n\n\n\n\u5206\u6790\u6570\u636e\uff1a\u7ed8\u51fa\u6570\u636e\u7684\u4e8c\u7ef4\u53ef\u89c6\u5316\u663e\u793a\u7ed3\u679c\uff0c\u4ee5\u5b57\u5178\u65b9\u5f0f\u751f\u6210\u6811\n\n\n\n\n\n\n\n\n\u8bad\u7ec3\u7b97\u6cd5\uff1a\u6a21\u578b\u6811\u7684\u6784\u5efa\n\n\n\n\n\u7528\u6811\u56de\u5f52\u8fdb\u884c\u9884\u6d4b\u7684\u4ee3\u7801\n\n# \u56de\u5f52\u6811\u6d4b\u8bd5\u6848\u4f8b\n\n\n# \u4e3a\u4e86\u548c modelTreeEval() \u4fdd\u6301\u4e00\u81f4\uff0c\u4fdd\u7559\u4e24\u4e2a\u8f93\u5165\u53c2\u6570\n\n\ndef\n \nregTreeEval\n(\nmodel\n,\n \ninDat\n):\n\n    \n\n\n    Desc:\n\n\n        \u5bf9 \u56de\u5f52\u6811 \u8fdb\u884c\u9884\u6d4b\n\n\n    Args:\n\n\n        model -- \u6307\u5b9a\u6a21\u578b\uff0c\u53ef\u9009\u503c\u4e3a \u56de\u5f52\u6811\u6a21\u578b \u6216\u8005 \u6a21\u578b\u6811\u6a21\u578b\uff0c\u8fd9\u91cc\u4e3a\u56de\u5f52\u6811\n\n\n        inDat -- \u8f93\u5165\u7684\u6d4b\u8bd5\u6570\u636e\n\n\n    Returns:\n\n\n        float(model) -- \u5c06\u8f93\u5165\u7684\u6a21\u578b\u6570\u636e\u8f6c\u6362\u4e3a \u6d6e\u70b9\u6570 \u8fd4\u56de\n\n\n    \n\n    \nreturn\n \nfloat\n(\nmodel\n)\n\n\n\n\n# \u6a21\u578b\u6811\u6d4b\u8bd5\u6848\u4f8b\n\n\n# \u5bf9\u8f93\u5165\u6570\u636e\u8fdb\u884c\u683c\u5f0f\u5316\u5904\u7406\uff0c\u5728\u539f\u6570\u636e\u77e9\u9635\u4e0a\u589e\u52a0\u7b2c0\u5217\uff0c\u5143\u7d20\u7684\u503c\u90fd\u662f1\uff0c\n\n\n# \u4e5f\u5c31\u662f\u589e\u52a0\u504f\u79fb\u503c\uff0c\u548c\u6211\u4eec\u4e4b\u524d\u7684\u7b80\u5355\u7ebf\u6027\u56de\u5f52\u662f\u4e00\u4e2a\u5957\u8def\uff0c\u589e\u52a0\u4e00\u4e2a\u504f\u79fb\u91cf\n\n\ndef\n \nmodelTreeEval\n(\nmodel\n,\n \ninDat\n):\n\n    \n\n\n    Desc:\n\n\n        \u5bf9 \u6a21\u578b\u6811 \u8fdb\u884c\u9884\u6d4b\n\n\n    Args:\n\n\n        model -- \u8f93\u5165\u6a21\u578b\uff0c\u53ef\u9009\u503c\u4e3a \u56de\u5f52\u6811\u6a21\u578b \u6216\u8005 \u6a21\u578b\u6811\u6a21\u578b\uff0c\u8fd9\u91cc\u4e3a\u6a21\u578b\u6811\u6a21\u578b\n\n\n        inDat -- \u8f93\u5165\u7684\u6d4b\u8bd5\u6570\u636e\n\n\n    Returns:\n\n\n        float(X * model) -- \u5c06\u6d4b\u8bd5\u6570\u636e\u4e58\u4ee5 \u56de\u5f52\u7cfb\u6570 \u5f97\u5230\u4e00\u4e2a\u9884\u6d4b\u503c \uff0c\u8f6c\u5316\u4e3a \u6d6e\u70b9\u6570 \u8fd4\u56de\n\n\n    \n\n    \nn\n \n=\n \nshape\n(\ninDat\n)[\n1\n]\n\n    \nX\n \n=\n \nmat\n(\nones\n((\n1\n,\n \nn\n+\n1\n)))\n\n    \nX\n[:,\n \n1\n:\n \nn\n+\n1\n]\n \n=\n \ninDat\n\n    \n# print X, model\n\n    \nreturn\n \nfloat\n(\nX\n \n*\n \nmodel\n)\n\n\n\n\n# \u8ba1\u7b97\u9884\u6d4b\u7684\u7ed3\u679c\n\n\n# \u5728\u7ed9\u5b9a\u6811\u7ed3\u6784\u7684\u60c5\u51b5\u4e0b\uff0c\u5bf9\u4e8e\u5355\u4e2a\u6570\u636e\u70b9\uff0c\u8be5\u51fd\u6570\u4f1a\u7ed9\u51fa\u4e00\u4e2a\u9884\u6d4b\u503c\u3002\n\n\n# modelEval\u662f\u5bf9\u53f6\u8282\u70b9\u8fdb\u884c\u9884\u6d4b\u7684\u51fd\u6570\u5f15\u7528\uff0c\u6307\u5b9a\u6811\u7684\u7c7b\u578b\uff0c\u4ee5\u4fbf\u5728\u53f6\u8282\u70b9\u4e0a\u8c03\u7528\u5408\u9002\u7684\u6a21\u578b\u3002\n\n\n# \u6b64\u51fd\u6570\u81ea\u9876\u5411\u4e0b\u904d\u5386\u6574\u68f5\u6811\uff0c\u76f4\u5230\u547d\u4e2d\u53f6\u8282\u70b9\u4e3a\u6b62\uff0c\u4e00\u65e6\u5230\u8fbe\u53f6\u8282\u70b9\uff0c\u5b83\u5c31\u4f1a\u5728\u8f93\u5165\u6570\u636e\u4e0a\n\n\n# \u8c03\u7528modelEval()\u51fd\u6570\uff0c\u8be5\u51fd\u6570\u7684\u9ed8\u8ba4\u503c\u4e3aregTreeEval()\n\n\ndef\n \ntreeForeCast\n(\ntree\n,\n \ninData\n,\n \nmodelEval\n=\nregTreeEval\n):\n\n    \n\n\n    Desc:\n\n\n        \u5bf9\u7279\u5b9a\u6a21\u578b\u7684\u6811\u8fdb\u884c\u9884\u6d4b\uff0c\u53ef\u4ee5\u662f \u56de\u5f52\u6811 \u4e5f\u53ef\u4ee5\u662f \u6a21\u578b\u6811\n\n\n    Args:\n\n\n        tree -- \u5df2\u7ecf\u8bad\u7ec3\u597d\u7684\u6811\u7684\u6a21\u578b\n\n\n        inData -- \u8f93\u5165\u7684\u6d4b\u8bd5\u6570\u636e\n\n\n        modelEval -- \u9884\u6d4b\u7684\u6811\u7684\u6a21\u578b\u7c7b\u578b\uff0c\u53ef\u9009\u503c\u4e3a regTreeEval\uff08\u56de\u5f52\u6811\uff09 \u6216 modelTreeEval\uff08\u6a21\u578b\u6811\uff09\uff0c\u9ed8\u8ba4\u4e3a\u56de\u5f52\u6811\n\n\n    Returns:\n\n\n        \u8fd4\u56de\u9884\u6d4b\u503c\n\n\n    \n\n    \nif\n \nnot\n \nisTree\n(\ntree\n):\n\n        \nreturn\n \nmodelEval\n(\ntree\n,\n \ninData\n)\n\n    \nif\n \ninData\n[\ntree\n[\nspInd\n]]\n \n=\n \ntree\n[\nspVal\n]:\n\n        \nif\n \nisTree\n(\ntree\n[\nleft\n]):\n\n            \nreturn\n \ntreeForeCast\n(\ntree\n[\nleft\n],\n \ninData\n,\n \nmodelEval\n)\n\n        \nelse\n:\n\n            \nreturn\n \nmodelEval\n(\ntree\n[\nleft\n],\n \ninData\n)\n\n    \nelse\n:\n\n        \nif\n \nisTree\n(\ntree\n[\nright\n]):\n\n            \nreturn\n \ntreeForeCast\n(\ntree\n[\nright\n],\n \ninData\n,\n \nmodelEval\n)\n\n        \nelse\n:\n\n            \nreturn\n \nmodelEval\n(\ntree\n[\nright\n],\n \ninData\n)\n\n\n\n\n# \u9884\u6d4b\u7ed3\u679c\n\n\ndef\n \ncreateForeCast\n(\ntree\n,\n \ntestData\n,\n \nmodelEval\n=\nregTreeEval\n):\n\n    \n\n\n    Desc:\n\n\n        \u8c03\u7528 treeForeCast \uff0c\u5bf9\u7279\u5b9a\u6a21\u578b\u7684\u6811\u8fdb\u884c\u9884\u6d4b\uff0c\u53ef\u4ee5\u662f \u56de\u5f52\u6811 \u4e5f\u53ef\u4ee5\u662f \u6a21\u578b\u6811\n\n\n    Args:\n\n\n        tree -- \u5df2\u7ecf\u8bad\u7ec3\u597d\u7684\u6811\u7684\u6a21\u578b\n\n\n        inData -- \u8f93\u5165\u7684\u6d4b\u8bd5\u6570\u636e\n\n\n        modelEval -- \u9884\u6d4b\u7684\u6811\u7684\u6a21\u578b\u7c7b\u578b\uff0c\u53ef\u9009\u503c\u4e3a regTreeEval\uff08\u56de\u5f52\u6811\uff09 \u6216 modelTreeEval\uff08\u6a21\u578b\u6811\uff09\uff0c\u9ed8\u8ba4\u4e3a\u56de\u5f52\u6811\n\n\n    Returns:\n\n\n        \u8fd4\u56de\u9884\u6d4b\u503c\u77e9\u9635\n\n\n    \n\n    \nm\n \n=\n \nlen\n(\ntestData\n)\n\n    \nyHat\n \n=\n \nmat\n(\nzeros\n((\nm\n,\n \n1\n)))\n\n    \n# print yHat\n\n    \nfor\n \ni\n \nin\n \nrange\n(\nm\n):\n\n        \nyHat\n[\ni\n,\n \n0\n]\n \n=\n \ntreeForeCast\n(\ntree\n,\n \nmat\n(\ntestData\n[\ni\n]),\n \nmodelEval\n)\n\n        \n# print \nyHat==\n, yHat[i, 0]\n\n    \nreturn\n \nyHat\n\n\n\n\n\u5b8c\u6574\u4ee3\u7801\u5730\u5740\n: \nhttps://github.com/apachecn/MachineLearning/blob/master/src/python/9.RegTrees/regTrees.py\n\n\n\n\n\u6d4b\u8bd5\u7b97\u6cd5\uff1a\u4f7f\u7528\u6d4b\u8bd5\u6570\u636e\u4e0a\u7684R^2\u503c\u6765\u5206\u6790\u6a21\u578b\u7684\u6548\u679c\n\n\n\n\nR^2 \u5224\u5b9a\u7cfb\u6570\u5c31\u662f\u62df\u5408\u4f18\u5ea6\u5224\u5b9a\u7cfb\u6570\uff0c\u5b83\u4f53\u73b0\u4e86\u56de\u5f52\u6a21\u578b\u4e2d\u81ea\u53d8\u91cf\u7684\u53d8\u5f02\u5728\u56e0\u53d8\u91cf\u7684\u53d8\u5f02\u4e2d\u6240\u5360\u7684\u6bd4\u4f8b\u3002\u5982 R^2=0.99999 \u8868\u793a\u5728\u56e0\u53d8\u91cf y \u7684\u53d8\u5f02\u4e2d\u6709 99.999% \u662f\u7531\u4e8e\u53d8\u91cf x \u5f15\u8d77\u3002\u5f53 R^2=1 \u65f6\u8868\u793a\uff0c\u6240\u6709\u89c2\u6d4b\u70b9\u90fd\u843d\u5728\u62df\u5408\u7684\u76f4\u7ebf\u6216\u66f2\u7ebf\u4e0a\uff1b\u5f53 R^2=0 \u65f6\uff0c\u8868\u793a\u81ea\u53d8\u91cf\u4e0e\u56e0\u53d8\u91cf\u4e0d\u5b58\u5728\u76f4\u7ebf\u6216\u66f2\u7ebf\u5173\u7cfb\u3002\n\n\n\u6240\u4ee5\u6211\u4eec\u770b\u51fa\uff0c R^2 \u7684\u503c\u8d8a\u63a5\u8fd1 1.0 \u8d8a\u597d\u3002\n\n\n\n\n\u4f7f\u7528\u7b97\u6cd5\uff1a\u4f7f\u7528\u8bad\u7ec3\u51fa\u7684\u6811\u505a\u9884\u6d4b\uff0c\u9884\u6d4b\u7ed3\u679c\u8fd8\u53ef\u4ee5\u7528\u6765\u505a\u5f88\u591a\u4e8b\u60c5\n\n\n\n\n5\u3001\u9644\u52a0 Python \u4e2d GUI \u7684\u4f7f\u7528\n\n\n5.1\u3001\u4f7f\u7528 Python \u7684 Tkinter \u5e93\u521b\u5efa GUI\n\n\n\u5982\u679c\u80fd\u8ba9\u7528\u6237\u4e0d\u9700\u8981\u4efb\u4f55\u6307\u4ee4\u5c31\u53ef\u4ee5\u6309\u7167\u4ed6\u4eec\u81ea\u5df1\u7684\u65b9\u5f0f\u6765\u5206\u6790\u6570\u636e\uff0c\u5c31\u4e0d\u9700\u8981\u5bf9\u6570\u636e\u505a\u51fa\u8fc7\u591a\u89e3\u91ca\u3002\u5176\u4e2d\u4e00\u4e2a\u80fd\u540c\u65f6\u652f\u6301\u6570\u636e\u5448\u73b0\u548c\u7528\u6237\u4ea4\u4e92\u7684\u65b9\u5f0f\u5c31\u662f\u6784\u5efa\u4e00\u4e2a\u56fe\u5f62\u7528\u6237\u754c\u9762(GUI\uff0cGraphical User Interface)\uff0c\u5982\u56fe9-7\u6240\u793a\u3002\n\n\n\n\n5.2\u3001\u7528 Tkinter \u521b\u5efa GUI\n\n\nPython \u6709\u5f88\u591a GUI \u6846\u67b6\uff0c\u5176\u4e2d\u4e00\u4e2a\u6613\u4e8e\u4f7f\u7528\u7684 Tkinter\uff0c\u662f\u968f Python \u7684\u6807\u51c6\u7248\u7f16\u8bd1\u7248\u672c\u53d1\u5e03\u7684\u3002Tkinter \u53ef\u4ee5\u5728 Windows\u3001Mac OS\u548c\u5927\u591a\u6570\u7684 Linux \u5e73\u53f0\u4e0a\u4f7f\u7528\u3002\n\n\n5.3\u3001\u96c6\u6210 Matplotlib \u548c Tkinter\n\n\nMatPlotlib \u7684\u6784\u5efa\u7a0b\u5e8f\u5305\u542b\u4e00\u4e2a\u524d\u7aef\uff0c\u4e5f\u5c31\u662f\u9762\u5411\u7528\u6237\u7684\u4e00\u4e9b\u4ee3\u7801\uff0c\u5982 plot() \u548c scatter() \u65b9\u6cd5\u7b49\u3002\u4e8b\u5b9e\u4e0a\uff0c\u5b83\u540c\u65f6\u521b\u5efa\u4e86\u4e00\u4e2a\u540e\u7aef\uff0c\u7528\u4e8e\u5b9e\u73b0\u7ed8\u56fe\u548c\u4e0d\u540c\u5e94\u7528\u4e4b\u95f4\u63a5\u53e3\u3002\n\n\n\u901a\u8fc7\u6539\u53d8\u540e\u7aef\u53ef\u4ee5\u5c06\u56fe\u50cf\u7ed8\u5236\u5728PNG\u3001PDF\u3001SVG\u7b49\u683c\u5f0f\u7684\u6587\u4ef6\u4e0a\u3002\u4e0b\u9762\u5c06\u8bbe\u7f6e\u540e\u7aef\u4e3a TkAgg (Agg \u662f\u4e00\u4e2a C++ \u7684\u5e93\uff0c\u53ef\u4ee5\u4ece\u56fe\u50cf\u521b\u5efa\u5149\u6805\u56fe)\u3002TkAgg\u53ef\u4ee5\u5728\u6240\u9009GUI\u6846\u67b6\u4e0a\u8c03\u7528Agg\uff0c\u628a Agg \u5448\u73b0\u5728\u753b\u5e03\u4e0a\u3002\u6211\u4eec\u53ef\u4ee5\u5728Tk\u7684GUI\u4e0a\u653e\u7f6e\u4e00\u4e2a\u753b\u5e03\uff0c\u5e76\u7528 .grid()\u6765\u8c03\u6574\u5e03\u5c40\u3002\n\n\n5.4\u3001\u7528treeExplore \u7684GUI\u6784\u5efa\u7684\u6a21\u578b\u6811\u793a\u4f8b\u56fe\n\n\n\n\n\u5b8c\u6574\u4ee3\u7801\u5730\u5740\n: \nhttps://github.com/apachecn/MachineLearning/blob/master/src/python/9.RegTrees/treeExplore.py\n\n\n6\u3001\u6811\u56de\u5f52 \u5c0f\u7ed3\n\n\n\u6570\u636e\u96c6\u4e2d\u7ecf\u5e38\u5305\u542b\u4e00\u4e9b\u590d\u6742\u7684\u76f8\u5173\u5173\u7cfb\uff0c\u4f7f\u5f97\u8f93\u5165\u6570\u636e\u548c\u76ee\u6807\u53d8\u91cf\u4e4b\u95f4\u5448\u73b0\u975e\u7ebf\u6027\u5173\u7cfb\u3002\u5bf9\u8fd9\u4e9b\u590d\u6742\u7684\u5173\u7cfb\u5efa\u6a21\uff0c\u4e00\u79cd\u53ef\u884c\u7684\u65b9\u5f0f\u662f\u4f7f\u7528\u6811\u6765\u5bf9\u9884\u6d4b\u503c\u5206\u6bb5\uff0c\u5305\u62ec\u5206\u6bb5\u5e38\u6570\u6216\u5206\u6bb5\u76f4\u7ebf\u3002\u4e00\u822c\u91c7\u7528\u6811\u7ed3\u6784\u6765\u5bf9\u8fd9\u79cd\u6570\u636e\u5efa\u6a21\u3002\u76f8\u5e94\u5730\uff0c\u82e5\u53f6\u8282\u70b9\u4f7f\u7528\u7684\u6a21\u578b\u662f\u5206\u6bb5\u5e38\u6570\u5219\u79f0\u4e3a\u56de\u5f52\u6811\uff0c\u82e5\u53f6\u8282\u70b9\u4f7f\u7528\u7684\u6a21\u578b\u5e08\u7ebf\u6027\u56de\u5f52\u65b9\u7a0b\u5219\u79f0\u4e3a\u6a21\u578b\u6811\u3002\n\n\nCART \u7b97\u6cd5\u53ef\u4ee5\u7528\u4e8e\u6784\u5efa\u4e8c\u5143\u6811\u5e76\u5904\u7406\u79bb\u6563\u578b\u6216\u8fde\u7eed\u578b\u6570\u636e\u7684\u5207\u5206\u3002\u82e5\u4f7f\u7528\u4e0d\u540c\u7684\u8bef\u5dee\u51c6\u5219\uff0c\u5c31\u53ef\u4ee5\u901a\u8fc7CART \u7b97\u6cd5\u6784\u5efa\u6a21\u578b\u6811\u548c\u56de\u5f52\u6811\u3002\u8be5\u7b97\u6cd5\u6784\u5efa\u51fa\u7684\u6811\u4f1a\u503e\u5411\u4e8e\u5bf9\u6570\u636e\u8fc7\u62df\u5408\u3002\u4e00\u68f5\u8fc7\u62df\u5408\u7684\u6811\u5e38\u5e38\u5341\u5206\u590d\u6742\uff0c\u526a\u679d\u6280\u672f\u7684\u51fa\u73b0\u5c31\u662f\u4e3a\u4e86\u89e3\u51b3\u8fd9\u4e2a\u95ee\u9898\u3002\u4e24\u79cd\u526a\u679d\u65b9\u6cd5\u5206\u522b\u662f\u9884\u526a\u679d\uff08\u5728\u6811\u7684\u6784\u5efa\u8fc7\u7a0b\u4e2d\u5c31\u8fdb\u884c\u526a\u679d\uff09\u548c\u540e\u526a\u679d\uff08\u5f53\u6811\u6784\u5efa\u5b8c\u6bd5\u518d\u8fdb\u884c\u526a\u679d\uff09\uff0c\u9884\u526a\u679d\u66f4\u6709\u6548\u4f46\u9700\u8981\u7528\u6237\u5b9a\u4e49\u4e00\u4e9b\u53c2\u6570\u3002\n\n\nTkinter \u662f Python \u7684\u4e00\u4e2a GUI \u5de5\u5177\u5305\u3002\u867d\u7136\u5e76\u4e0d\u662f\u552f\u4e00\u7684\u5305\uff0c\u4f46\u5b83\u6700\u5e38\u7528\u3002\u5229\u7528 Tkinter \uff0c\u6211\u4eec\u53ef\u4ee5\u8f7b\u8f7b\u677e\u677e\u7ed8\u5236\u5404\u79cd\u90e8\u4ef6\u5e76\u5b89\u6392\u5b83\u4eec\u7684\u4f4d\u7f6e\u3002\u53e6\u5916\uff0c\u53ef\u4ee5\u4e3a Tkinter \u6784\u9020\u4e00\u4e2a\u7279\u6b8a\u7684\u90e8\u4ef6\u6765\u663e\u793a Matplotlib \u7ed8\u51fa\u7684\u56fe\u3002\u6240\u4ee5\uff0cMatplotlib \u548c Tkinter \u7684\u96c6\u6210\u53ef\u4ee5\u6784\u5efa\u51fa\u66f4\u5f3a\u5927\u7684 GUI \uff0c\u7528\u6237\u53ef\u4ee5\u4ee5\u66f4\u81ea\u7136\u7684\u65b9\u5f0f\u6765\u63a2\u7d22\u673a\u5668\u5b66\u4e60\u7b97\u6cd5\u7684\u5965\u5999\u3002\n\n\n\n\n\n\n\u4f5c\u8005\uff1a\n\u7247\u523b\n \n\u5c0f\u7476\n\n\nGitHub\u5730\u5740\n: \nhttps://github.com/apachecn/MachineLearning\n\n\n\u7248\u6743\u58f0\u660e\uff1a\u6b22\u8fce\u8f6c\u8f7d\u5b66\u4e60 =\n \u8bf7\u6807\u6ce8\u4fe1\u606f\u6765\u6e90\u4e8e \nApacheCN", 
            "title": "9.\u6811\u56de\u5f52"
        }, 
        {
            "location": "/\u4e66\u7c4d/\u673a\u5668\u5b66\u4e60\u5b9e\u6218/09.\u6811\u56de\u5f52/#9", 
            "text": "", 
            "title": "\u7b2c9\u7ae0 \u6811\u56de\u5f52"
        }, 
        {
            "location": "/\u4e66\u7c4d/\u673a\u5668\u5b66\u4e60\u5b9e\u6218/09.\u6811\u56de\u5f52/#_1", 
            "text": "\u6211\u4eec\u672c\u7ae0\u4ecb\u7ecd CART(Classification And Regression Trees\uff0c \u5206\u7c7b\u56de\u5f52\u6811) \u7684\u6811\u6784\u5efa\u7b97\u6cd5\u3002\u8be5\u7b97\u6cd5\u65e2\u53ef\u4ee5\u7528\u4e8e\u5206\u7c7b\u8fd8\u53ef\u4ee5\u7528\u4e8e\u56de\u5f52\u3002", 
            "title": "\u6811\u56de\u5f52 \u6982\u8ff0"
        }, 
        {
            "location": "/\u4e66\u7c4d/\u673a\u5668\u5b66\u4e60\u5b9e\u6218/09.\u6811\u56de\u5f52/#_2", 
            "text": "\u6211\u4eec\u5728\u7b2c 8 \u7ae0\u4e2d\u4ecb\u7ecd\u4e86\u7ebf\u6027\u56de\u5f52\u7684\u4e00\u4e9b\u5f3a\u5927\u7684\u65b9\u6cd5\uff0c\u4f46\u8fd9\u4e9b\u65b9\u6cd5\u521b\u5efa\u7684\u6a21\u578b\u9700\u8981\u62df\u5408\u6240\u6709\u7684\u6837\u672c\u70b9\uff08\u5c40\u90e8\u52a0\u6743\u7ebf\u6027\u56de\u5f52\u9664\u5916\uff09\u3002\u5f53\u6570\u636e\u62e5\u6709\u4f17\u591a\u7279\u5f81\u5e76\u4e14\u7279\u5f81\u4e4b\u95f4\u5173\u7cfb\u5341\u5206\u590d\u6742\u65f6\uff0c\u6784\u5efa\u5168\u5c40\u6a21\u578b\u7684\u60f3\u6cd5\u5c31\u663e\u5f97\u592a\u96be\u4e86\uff0c\u4e5f\u7565\u663e\u7b28\u62d9\u3002\u800c\u4e14\uff0c\u5b9e\u9645\u751f\u6d3b\u4e2d\u5f88\u591a\u95ee\u9898\u90fd\u662f\u975e\u7ebf\u6027\u7684\uff0c\u4e0d\u53ef\u80fd\u4f7f\u7528\u5168\u5c40\u7ebf\u6027\u6a21\u578b\u6765\u62df\u5408\u4efb\u4f55\u6570\u636e\u3002  \u4e00\u79cd\u53ef\u884c\u7684\u65b9\u6cd5\u662f\u5c06\u6570\u636e\u96c6\u5207\u5206\u6210\u5f88\u591a\u4efd\u6613\u5efa\u6a21\u7684\u6570\u636e\uff0c\u7136\u540e\u5229\u7528\u6211\u4eec\u7684\u7ebf\u6027\u56de\u5f52\u6280\u672f\u6765\u5efa\u6a21\u3002\u5982\u679c\u9996\u6b21\u5207\u5206\u540e\u4ecd\u7136\u96be\u4ee5\u62df\u5408\u7ebf\u6027\u6a21\u578b\u5c31\u7ee7\u7eed\u5207\u5206\u3002\u5728\u8fd9\u79cd\u5207\u5206\u65b9\u5f0f\u4e0b\uff0c\u6811\u56de\u5f52\u548c\u56de\u5f52\u6cd5\u5c31\u76f8\u5f53\u6709\u7528\u3002  \u9664\u4e86\u6211\u4eec\u5728 \u7b2c3\u7ae0 \u4e2d\u4ecb\u7ecd\u7684 \u51b3\u7b56\u6811\u7b97\u6cd5\uff0c\u6211\u4eec\u4ecb\u7ecd\u4e00\u4e2a\u65b0\u7684\u53eb\u505a CART(Classification And Regression Trees, \u5206\u7c7b\u56de\u5f52\u6811) \u7684\u6811\u6784\u5efa\u7b97\u6cd5\u3002\u8be5\u7b97\u6cd5\u65e2\u53ef\u4ee5\u7528\u4e8e\u5206\u7c7b\u8fd8\u53ef\u4ee5\u7528\u4e8e\u56de\u5f52\u3002", 
            "title": "\u6811\u56de\u5f52 \u573a\u666f"
        }, 
        {
            "location": "/\u4e66\u7c4d/\u673a\u5668\u5b66\u4e60\u5b9e\u6218/09.\u6811\u56de\u5f52/#1", 
            "text": "", 
            "title": "1\u3001\u6811\u56de\u5f52 \u539f\u7406"
        }, 
        {
            "location": "/\u4e66\u7c4d/\u673a\u5668\u5b66\u4e60\u5b9e\u6218/09.\u6811\u56de\u5f52/#11", 
            "text": "\u4e3a\u6210\u529f\u6784\u5efa\u4ee5\u5206\u6bb5\u5e38\u6570\u4e3a\u53f6\u8282\u70b9\u7684\u6811\uff0c\u9700\u8981\u5ea6\u91cf\u51fa\u6570\u636e\u7684\u4e00\u81f4\u6027\u3002\u7b2c3\u7ae0\u4f7f\u7528\u6811\u8fdb\u884c\u5206\u7c7b\uff0c\u4f1a\u5728\u7ed9\u5b9a\u8282\u70b9\u65f6\u8ba1\u7b97\u6570\u636e\u7684\u6df7\u4e71\u5ea6\u3002\u90a3\u4e48\u5982\u4f55\u8ba1\u7b97\u8fde\u7eed\u578b\u6570\u503c\u7684\u6df7\u4e71\u5ea6\u5462\uff1f  \u5728\u8fd9\u91cc\uff0c\u8ba1\u7b97\u8fde\u7eed\u578b\u6570\u503c\u7684\u6df7\u4e71\u5ea6\u662f\u975e\u5e38\u7b80\u5355\u7684\u3002\u9996\u5148\u8ba1\u7b97\u6240\u6709\u6570\u636e\u7684\u5747\u503c\uff0c\u7136\u540e\u8ba1\u7b97\u6bcf\u6761\u6570\u636e\u7684\u503c\u5230\u5747\u503c\u7684\u5dee\u503c\u3002\u4e3a\u4e86\u5bf9\u6b63\u8d1f\u5dee\u503c\u540c\u7b49\u770b\u5f85\uff0c\u4e00\u822c\u4f7f\u7528\u7edd\u5bf9\u503c\u6216\u5e73\u65b9\u503c\u6765\u4ee3\u66ff\u4e0a\u8ff0\u5dee\u503c\u3002  \u4e0a\u8ff0\u505a\u6cd5\u6709\u70b9\u7c7b\u4f3c\u4e8e\u524d\u9762\u4ecb\u7ecd\u8fc7\u7684\u7edf\u8ba1\u5b66\u4e2d\u5e38\u7528\u7684\u65b9\u5dee\u8ba1\u7b97\u3002\u552f\u4e00\u4e0d\u540c\u5c31\u662f\uff0c\u65b9\u5dee\u662f\u5e73\u65b9\u8bef\u5dee\u7684\u5747\u503c(\u5747\u65b9\u5dee)\uff0c\u800c\u8fd9\u91cc\u9700\u8981\u7684\u662f\u5e73\u65b9\u8bef\u5dee\u7684\u603b\u503c(\u603b\u65b9\u5dee)\u3002\u603b\u65b9\u5dee\u53ef\u4ee5\u901a\u8fc7\u5747\u65b9\u5dee\u4e58\u4ee5\u6570\u636e\u96c6\u4e2d\u6837\u672c\u70b9\u7684\u4e2a\u6570\u6765\u5f97\u5230\u3002", 
            "title": "1.1\u3001\u6811\u56de\u5f52 \u539f\u7406\u6982\u8ff0"
        }, 
        {
            "location": "/\u4e66\u7c4d/\u673a\u5668\u5b66\u4e60\u5b9e\u6218/09.\u6811\u56de\u5f52/#12", 
            "text": "\u6211\u4eec\u5728 \u7b2c3\u7ae0 \u4e2d\u4f7f\u7528\u7684\u6811\u6784\u5efa\u7b97\u6cd5\u662f ID3 \u3002ID3 \u7684\u505a\u6cd5\u662f\u6bcf\u6b21\u9009\u53d6\u5f53\u524d\u6700\u4f73\u7684\u7279\u5f81\u6765\u5206\u5272\u6570\u636e\uff0c\u5e76\u6309\u7167\u8be5\u7279\u5f81\u7684\u6240\u6709\u53ef\u80fd\u53d6\u503c\u6765\u5207\u5206\u3002\u4e5f\u5c31\u662f\u8bf4\uff0c\u5982\u679c\u4e00\u4e2a\u7279\u5f81\u6709 4 \u79cd\u53d6\u503c\uff0c\u90a3\u4e48\u6570\u636e\u5c06\u88ab\u5207\u5206\u6210 4 \u4efd\u3002\u4e00\u65e6\u6309\u7167\u67d0\u7279\u5f81\u5207\u5206\u540e\uff0c\u8be5\u7279\u5f81\u5728\u4e4b\u540e\u7684\u7b97\u6cd5\u6267\u884c\u8fc7\u7a0b\u4e2d\u5c06\u4e0d\u4f1a\u518d\u8d77\u4f5c\u7528\uff0c\u6240\u4ee5\u6709\u89c2\u70b9\u8ba4\u4e3a\u8fd9\u79cd\u5207\u5206\u65b9\u5f0f\u8fc7\u4e8e\u8fc5\u901f\u3002\u53e6\u5916\u4e00\u79cd\u65b9\u6cd5\u662f\u4e8c\u5143\u5207\u5206\u6cd5\uff0c\u5373\u6bcf\u6b21\u628a\u6570\u636e\u96c6\u5207\u5206\u6210\u4e24\u4efd\u3002\u5982\u679c\u6570\u636e\u7684\u67d0\u7279\u5f81\u503c\u7b49\u4e8e\u5207\u5206\u6240\u8981\u6c42\u7684\u503c\uff0c\u90a3\u4e48\u8fd9\u4e9b\u6570\u636e\u5c31\u8fdb\u5165\u6811\u7684\u5de6\u5b50\u6811\uff0c\u53cd\u4e4b\u5219\u8fdb\u5165\u6811\u7684\u53f3\u5b50\u6811\u3002  \u9664\u4e86\u5207\u5206\u8fc7\u4e8e\u8fc5\u901f\u5916\uff0c ID3 \u7b97\u6cd5\u8fd8\u5b58\u5728\u53e6\u4e00\u4e2a\u95ee\u9898\uff0c\u5b83\u4e0d\u80fd\u76f4\u63a5\u5904\u7406\u8fde\u7eed\u578b\u7279\u5f81\u3002\u53ea\u6709\u4e8b\u5148\u5c06\u8fde\u7eed\u578b\u7279\u5f81\u8f6c\u6362\u6210\u79bb\u6563\u578b\uff0c\u624d\u80fd\u5728 ID3 \u7b97\u6cd5\u4e2d\u4f7f\u7528\u3002\u4f46\u8fd9\u79cd\u8f6c\u6362\u8fc7\u7a0b\u4f1a\u7834\u574f\u8fde\u7eed\u578b\u53d8\u91cf\u7684\u5185\u5728\u6027\u8d28\u3002\u800c\u4f7f\u7528\u4e8c\u5143\u5207\u5206\u6cd5\u5219\u6613\u4e8e\u5bf9\u6811\u6784\u9020\u8fc7\u7a0b\u8fdb\u884c\u8c03\u6574\u4ee5\u5904\u7406\u8fde\u7eed\u578b\u7279\u5f81\u3002\u5177\u4f53\u7684\u5904\u7406\u65b9\u6cd5\u662f: \u5982\u679c\u7279\u5f81\u503c\u5927\u4e8e\u7ed9\u5b9a\u503c\u5c31\u8d70\u5de6\u5b50\u6811\uff0c\u5426\u5219\u5c31\u8d70\u53f3\u5b50\u6811\u3002\u53e6\u5916\uff0c\u4e8c\u5143\u5207\u5206\u6cd5\u4e5f\u8282\u7701\u4e86\u6811\u7684\u6784\u5efa\u65f6\u95f4\uff0c\u4f46\u8fd9\u70b9\u610f\u4e49\u4e5f\u4e0d\u662f\u7279\u522b\u5927\uff0c\u56e0\u4e3a\u8fd9\u4e9b\u6811\u6784\u5efa\u4e00\u822c\u662f\u79bb\u7ebf\u5b8c\u6210\uff0c\u65f6\u95f4\u5e76\u975e\u9700\u8981\u91cd\u70b9\u5173\u6ce8\u7684\u56e0\u7d20\u3002  CART \u662f\u5341\u5206\u8457\u540d\u4e14\u5e7f\u6cdb\u8bb0\u8f7d\u7684\u6811\u6784\u5efa\u7b97\u6cd5\uff0c\u5b83\u4f7f\u7528\u4e8c\u5143\u5207\u5206\u6765\u5904\u7406\u8fde\u7eed\u578b\u53d8\u91cf\u3002\u5bf9 CART \u7a0d\u4f5c\u4fee\u6539\u5c31\u53ef\u4ee5\u5904\u7406\u56de\u5f52\u95ee\u9898\u3002\u7b2c 3 \u7ae0\u4e2d\u4f7f\u7528\u9999\u519c\u71b5\u6765\u5ea6\u91cf\u96c6\u5408\u7684\u65e0\u7ec4\u7ec7\u7a0b\u5ea6\u3002\u5982\u679c\u9009\u7528\u5176\u4ed6\u65b9\u6cd5\u6765\u4ee3\u66ff\u9999\u519c\u71b5\uff0c\u5c31\u53ef\u4ee5\u4f7f\u7528\u6811\u6784\u5efa\u7b97\u6cd5\u6765\u5b8c\u6210\u56de\u5f52\u3002  \u56de\u5f52\u6811\u4e0e\u5206\u7c7b\u6811\u7684\u601d\u8def\u7c7b\u4f3c\uff0c\u4f46\u662f\u53f6\u8282\u70b9\u7684\u6570\u636e\u7c7b\u578b\u4e0d\u662f\u79bb\u6563\u578b\uff0c\u800c\u662f\u8fde\u7eed\u578b\u3002", 
            "title": "1.2\u3001\u6811\u6784\u5efa\u7b97\u6cd5 \u6bd4\u8f83"
        }, 
        {
            "location": "/\u4e66\u7c4d/\u673a\u5668\u5b66\u4e60\u5b9e\u6218/09.\u6811\u56de\u5f52/#121", 
            "text": "\u8fd8\u6709\u4e00\u70b9\u8981\u8bf4\u660e\uff0c\u6784\u5efa\u51b3\u7b56\u6811\u7b97\u6cd5\uff0c\u5e38\u7528\u5230\u7684\u662f\u4e09\u4e2a\u65b9\u6cd5: ID3, C4.5, CART. \n\u4e09\u79cd\u65b9\u6cd5\u533a\u522b\u662f\u5212\u5206\u6811\u7684\u5206\u652f\u7684\u65b9\u5f0f:\n1. ID3 \u662f\u4fe1\u606f\u589e\u76ca\u5206\u652f\n2. C4.5 \u662f\u4fe1\u606f\u589e\u76ca\u7387\u5206\u652f\n3. CART \u505a\u5206\u7c7b\u5de5\u4f5c\u65f6\uff0c\u91c7\u7528 GINI \u503c\u4f5c\u4e3a\u8282\u70b9\u5206\u88c2\u7684\u4f9d\u636e\uff1b\u56de\u5f52\u65f6\uff0c\u91c7\u7528\u6837\u672c\u7684\u6700\u5c0f\u65b9\u5dee\u4f5c\u4e3a\u8282\u70b9\u7684\u5206\u88c2\u4f9d\u636e\u3002  \u5de5\u7a0b\u4e0a\u603b\u7684\u6765\u8bf4:   CART \u548c C4.5 \u4e4b\u95f4\u4e3b\u8981\u5dee\u5f02\u5728\u4e8e\u5206\u7c7b\u7ed3\u679c\u4e0a\uff0cCART \u53ef\u4ee5\u56de\u5f52\u5206\u6790\u4e5f\u53ef\u4ee5\u5206\u7c7b\uff0cC4.5 \u53ea\u80fd\u505a\u5206\u7c7b\uff1bC4.5 \u5b50\u8282\u70b9\u662f\u53ef\u4ee5\u591a\u5206\u7684\uff0c\u800c CART \u662f\u65e0\u6570\u4e2a\u4e8c\u53c9\u5b50\u8282\u70b9\uff1b  \u4ee5\u6b64\u62d3\u5c55\u51fa\u4ee5 CART \u4e3a\u57fa\u7840\u7684 \u201c\u6811\u7fa4\u201d Random forest \uff0c \u4ee5 \u56de\u5f52\u6811 \u4e3a\u57fa\u7840\u7684 \u201c\u6811\u7fa4\u201d GBDT \u3002", 
            "title": "1.2.1\u3001\u9644\u52a0 \u5404\u5e38\u89c1\u6811\u6784\u9020\u7b97\u6cd5\u7684\u5212\u5206\u5206\u652f\u65b9\u5f0f"
        }, 
        {
            "location": "/\u4e66\u7c4d/\u673a\u5668\u5b66\u4e60\u5b9e\u6218/09.\u6811\u56de\u5f52/#13", 
            "text": "1\u3001\u627e\u5230\u6570\u636e\u96c6\u5207\u5206\u7684\u6700\u4f73\u4f4d\u7f6e\uff0c\u51fd\u6570 chooseBestSplit() \u4f2a\u4ee3\u7801\u5927\u81f4\u5982\u4e0b:  \u5bf9\u6bcf\u4e2a\u7279\u5f81:\n    \u5bf9\u6bcf\u4e2a\u7279\u5f81\u503c: \n        \u5c06\u6570\u636e\u96c6\u5207\u5206\u6210\u4e24\u4efd\uff08\u5c0f\u4e8e\u8be5\u7279\u5f81\u503c\u7684\u6570\u636e\u6837\u672c\u653e\u5728\u5de6\u5b50\u6811\uff0c\u5426\u5219\u653e\u5728\u53f3\u5b50\u6811\uff09\n        \u8ba1\u7b97\u5207\u5206\u7684\u8bef\u5dee\n        \u5982\u679c\u5f53\u524d\u8bef\u5dee\u5c0f\u4e8e\u5f53\u524d\u6700\u5c0f\u8bef\u5dee\uff0c\u90a3\u4e48\u5c06\u5f53\u524d\u5207\u5206\u8bbe\u5b9a\u4e3a\u6700\u4f73\u5207\u5206\u5e76\u66f4\u65b0\u6700\u5c0f\u8bef\u5dee\n\u8fd4\u56de\u6700\u4f73\u5207\u5206\u7684\u7279\u5f81\u548c\u9608\u503c \n2\u3001\u6811\u6784\u5efa\u7b97\u6cd5\uff0c\u51fd\u6570 createTree() \u4f2a\u4ee3\u7801\u5927\u81f4\u5982\u4e0b:     \u627e\u5230\u6700\u4f73\u7684\u5f85\u5207\u5206\u7279\u5f81:\n    \u5982\u679c\u8be5\u8282\u70b9\u4e0d\u80fd\u518d\u5206\uff0c\u5c06\u8be5\u8282\u70b9\u5b58\u4e3a\u53f6\u8282\u70b9\n    \u6267\u884c\u4e8c\u5143\u5207\u5206\n    \u5728\u53f3\u5b50\u6811\u8c03\u7528 createTree() \u65b9\u6cd5\n    \u5728\u5de6\u5b50\u6811\u8c03\u7528 createTree() \u65b9\u6cd5", 
            "title": "1.3\u3001\u6811\u56de\u5f52 \u5de5\u4f5c\u539f\u7406"
        }, 
        {
            "location": "/\u4e66\u7c4d/\u673a\u5668\u5b66\u4e60\u5b9e\u6218/09.\u6811\u56de\u5f52/#14", 
            "text": "(1) \u6536\u96c6\u6570\u636e\uff1a\u91c7\u7528\u4efb\u610f\u65b9\u6cd5\u6536\u96c6\u6570\u636e\u3002\n(2) \u51c6\u5907\u6570\u636e\uff1a\u9700\u8981\u6570\u503c\u578b\u6570\u636e\uff0c\u6807\u79f0\u578b\u6570\u636e\u5e94\u8be5\u6620\u5c04\u6210\u4e8c\u503c\u578b\u6570\u636e\u3002\n(3) \u5206\u6790\u6570\u636e\uff1a\u7ed8\u51fa\u6570\u636e\u7684\u4e8c\u7ef4\u53ef\u89c6\u5316\u663e\u793a\u7ed3\u679c\uff0c\u4ee5\u5b57\u5178\u65b9\u5f0f\u751f\u6210\u6811\u3002\n(4) \u8bad\u7ec3\u7b97\u6cd5\uff1a\u5927\u90e8\u5206\u65f6\u95f4\u90fd\u82b1\u8d39\u5728\u53f6\u8282\u70b9\u6811\u6a21\u578b\u7684\u6784\u5efa\u4e0a\u3002\n(5) \u6d4b\u8bd5\u7b97\u6cd5\uff1a\u4f7f\u7528\u6d4b\u8bd5\u6570\u636e\u4e0a\u7684R^2\u503c\u6765\u5206\u6790\u6a21\u578b\u7684\u6548\u679c\u3002\n(6) \u4f7f\u7528\u7b97\u6cd5\uff1a\u4f7f\u7528\u8bad\u7ec3\u5904\u7684\u6811\u505a\u9884\u6d4b\uff0c\u9884\u6d4b\u7ed3\u679c\u8fd8\u53ef\u4ee5\u7528\u6765\u505a\u5f88\u591a\u4e8b\u60c5\u3002", 
            "title": "1.4\u3001\u6811\u56de\u5f52 \u5f00\u53d1\u6d41\u7a0b"
        }, 
        {
            "location": "/\u4e66\u7c4d/\u673a\u5668\u5b66\u4e60\u5b9e\u6218/09.\u6811\u56de\u5f52/#15", 
            "text": "\u4f18\u70b9\uff1a\u53ef\u4ee5\u5bf9\u590d\u6742\u548c\u975e\u7ebf\u6027\u7684\u6570\u636e\u5efa\u6a21\u3002\n\u7f3a\u70b9\uff1a\u7ed3\u679c\u4e0d\u6613\u7406\u89e3\u3002\n\u9002\u7528\u6570\u636e\u7c7b\u578b\uff1a\u6570\u503c\u578b\u548c\u6807\u79f0\u578b\u6570\u636e\u3002", 
            "title": "1.5\u3001\u6811\u56de\u5f52 \u7b97\u6cd5\u7279\u70b9"
        }, 
        {
            "location": "/\u4e66\u7c4d/\u673a\u5668\u5b66\u4e60\u5b9e\u6218/09.\u6811\u56de\u5f52/#16", 
            "text": "", 
            "title": "1.6\u3001\u56de\u5f52\u6811 \u9879\u76ee\u6848\u4f8b"
        }, 
        {
            "location": "/\u4e66\u7c4d/\u673a\u5668\u5b66\u4e60\u5b9e\u6218/09.\u6811\u56de\u5f52/#161", 
            "text": "\u5728\u7b80\u5355\u6570\u636e\u96c6\u4e0a\u751f\u6210\u4e00\u68f5\u56de\u5f52\u6811\u3002", 
            "title": "1.6.1\u3001\u9879\u76ee\u6982\u8ff0"
        }, 
        {
            "location": "/\u4e66\u7c4d/\u673a\u5668\u5b66\u4e60\u5b9e\u6218/09.\u6811\u56de\u5f52/#162", 
            "text": "\u6536\u96c6\u6570\u636e\uff1a\u91c7\u7528\u4efb\u610f\u65b9\u6cd5\u6536\u96c6\u6570\u636e\n\u51c6\u5907\u6570\u636e\uff1a\u9700\u8981\u6570\u503c\u578b\u6570\u636e\uff0c\u6807\u79f0\u578b\u6570\u636e\u5e94\u8be5\u6620\u5c04\u6210\u4e8c\u503c\u578b\u6570\u636e\n\u5206\u6790\u6570\u636e\uff1a\u7ed8\u51fa\u6570\u636e\u7684\u4e8c\u7ef4\u53ef\u89c6\u5316\u663e\u793a\u7ed3\u679c\uff0c\u4ee5\u5b57\u5178\u65b9\u5f0f\u751f\u6210\u6811\n\u8bad\u7ec3\u7b97\u6cd5\uff1a\u5927\u90e8\u5206\u65f6\u95f4\u90fd\u82b1\u8d39\u5728\u53f6\u8282\u70b9\u6811\u6a21\u578b\u7684\u6784\u5efa\u4e0a\n\u6d4b\u8bd5\u7b97\u6cd5\uff1a\u4f7f\u7528\u6d4b\u8bd5\u6570\u636e\u4e0a\u7684R^2\u503c\u6765\u5206\u6790\u6a21\u578b\u7684\u6548\u679c\n\u4f7f\u7528\u7b97\u6cd5\uff1a\u4f7f\u7528\u8bad\u7ec3\u51fa\u7684\u6811\u505a\u9884\u6d4b\uff0c\u9884\u6d4b\u7ed3\u679c\u8fd8\u53ef\u4ee5\u7528\u6765\u505a\u5f88\u591a\u4e8b\u60c5   \u6536\u96c6\u6570\u636e\uff1a\u91c7\u7528\u4efb\u610f\u65b9\u6cd5\u6536\u96c6\u6570\u636e   data1.txt \u6587\u4ef6\u4e2d\u5b58\u50a8\u7684\u6570\u636e\u683c\u5f0f\u5982\u4e0b:  0.036098    0.155096\n0.993349    1.077553\n0.530897    0.893462\n0.712386    0.564858\n0.343554    -0.371700\n0.098016    -0.332760   \u51c6\u5907\u6570\u636e\uff1a\u9700\u8981\u6570\u503c\u578b\u6570\u636e\uff0c\u6807\u79f0\u578b\u6570\u636e\u5e94\u8be5\u6620\u5c04\u6210\u4e8c\u503c\u578b\u6570\u636e  \u5206\u6790\u6570\u636e\uff1a\u7ed8\u51fa\u6570\u636e\u7684\u4e8c\u7ef4\u53ef\u89c6\u5316\u663e\u793a\u7ed3\u679c\uff0c\u4ee5\u5b57\u5178\u65b9\u5f0f\u751f\u6210\u6811   \u57fa\u4e8e CART \u7b97\u6cd5\u6784\u5efa\u56de\u5f52\u6811\u7684\u7b80\u5355\u6570\u636e\u96c6      \u7528\u4e8e\u6d4b\u8bd5\u56de\u5f52\u6811\u7684\u5206\u6bb5\u5e38\u6570\u6570\u636e\u96c6       \u8bad\u7ec3\u7b97\u6cd5: \u6784\u9020\u6811\u7684\u6570\u636e\u7ed3\u6784   def   binSplitDataSet ( dataSet ,   feature ,   value ): \n     binSplitDataSet(\u5c06\u6570\u636e\u96c6\uff0c\u6309\u7167feature\u5217\u7684value\u8fdb\u884c \u4e8c\u5143\u5207\u5206)          Description\uff1a\u5728\u7ed9\u5b9a\u7279\u5f81\u548c\u7279\u5f81\u503c\u7684\u60c5\u51b5\u4e0b\uff0c\u8be5\u51fd\u6570\u901a\u8fc7\u6570\u7ec4\u8fc7\u6ee4\u65b9\u5f0f\u5c06\u4e0a\u8ff0\u6570\u636e\u96c6\u5408\u5207\u5206\u5f97\u5230\u4e24\u4e2a\u5b50\u96c6\u5e76\u8fd4\u56de\u3002      Args:          dataMat \u6570\u636e\u96c6          feature \u5f85\u5207\u5206\u7684\u7279\u5f81\u5217          value \u7279\u5f81\u5217\u8981\u6bd4\u8f83\u7684\u503c      Returns:          mat0 \u5c0f\u4e8e\u7b49\u4e8e value \u7684\u6570\u636e\u96c6\u5728\u5de6\u8fb9          mat1 \u5927\u4e8e value \u7684\u6570\u636e\u96c6\u5728\u53f3\u8fb9      Raises:       \n     # # \u6d4b\u8bd5\u6848\u4f8b \n     # print  dataSet[:, feature]= , dataSet[:, feature] \n     # print  nonzero(dataSet[:, feature]   value)[0]= , nonzero(dataSet[:, feature]   value)[0] \n     # print  nonzero(dataSet[:, feature]  = value)[0]= , nonzero(dataSet[:, feature]  = value)[0] \n\n     # dataSet[:, feature] \u53d6\u53bb\u6bcf\u4e00\u884c\u4e2d\uff0c\u7b2c1\u5217\u7684\u503c(\u4ece0\u5f00\u59cb\u7b97) \n     # nonzero(dataSet[:, feature]   value)  \u8fd4\u56de\u7ed3\u679c\u4e3atrue\u884c\u7684index\u4e0b\u6807 \n     mat0   =   dataSet [ nonzero ( dataSet [:,   feature ]   =   value )[ 0 ],   :] \n     mat1   =   dataSet [ nonzero ( dataSet [:,   feature ]     value )[ 0 ],   :] \n     return   mat0 ,   mat1  # 1.\u7528\u6700\u4f73\u65b9\u5f0f\u5207\u5206\u6570\u636e\u96c6  # 2.\u751f\u6210\u76f8\u5e94\u7684\u53f6\u8282\u70b9  def   chooseBestSplit ( dataSet ,   leafType = regLeaf ,   errType = regErr ,   ops = ( 1 ,   4 )): \n     chooseBestSplit(\u7528\u6700\u4f73\u65b9\u5f0f\u5207\u5206\u6570\u636e\u96c6 \u548c \u751f\u6210\u76f8\u5e94\u7684\u53f6\u8282\u70b9)      Args:          dataSet   \u52a0\u8f7d\u7684\u539f\u59cb\u6570\u636e\u96c6          leafType  \u5efa\u7acb\u53f6\u5b50\u70b9\u7684\u51fd\u6570          errType   \u8bef\u5dee\u8ba1\u7b97\u51fd\u6570(\u6c42\u603b\u65b9\u5dee)          ops       [\u5bb9\u8bb8\u8bef\u5dee\u4e0b\u964d\u503c\uff0c\u5207\u5206\u7684\u6700\u5c11\u6837\u672c\u6570]\u3002      Returns:          bestIndex feature\u7684index\u5750\u6807          bestValue \u5207\u5206\u7684\u6700\u4f18\u503c      Raises:       \n\n     # ops=(1,4)\uff0c\u975e\u5e38\u91cd\u8981\uff0c\u56e0\u4e3a\u5b83\u51b3\u5b9a\u4e86\u51b3\u7b56\u6811\u5212\u5206\u505c\u6b62\u7684threshold\u503c\uff0c\u88ab\u79f0\u4e3a\u9884\u526a\u679d\uff08prepruning\uff09\uff0c\u5176\u5b9e\u4e5f\u5c31\u662f\u7528\u4e8e\u63a7\u5236\u51fd\u6570\u7684\u505c\u6b62\u65f6\u673a\u3002 \n     # \u4e4b\u6240\u4ee5\u8fd9\u6837\u8bf4\uff0c\u662f\u56e0\u4e3a\u5b83\u9632\u6b62\u51b3\u7b56\u6811\u7684\u8fc7\u62df\u5408\uff0c\u6240\u4ee5\u5f53\u8bef\u5dee\u7684\u4e0b\u964d\u503c\u5c0f\u4e8etolS\uff0c\u6216\u5212\u5206\u540e\u7684\u96c6\u5408size\u5c0f\u4e8etolN\u65f6\uff0c\u9009\u62e9\u505c\u6b62\u7ee7\u7eed\u5212\u5206\u3002 \n     # \u6700\u5c0f\u8bef\u5dee\u4e0b\u964d\u503c\uff0c\u5212\u5206\u540e\u7684\u8bef\u5dee\u51cf\u5c0f\u5c0f\u4e8e\u8fd9\u4e2a\u5dee\u503c\uff0c\u5c31\u4e0d\u7528\u7ee7\u7eed\u5212\u5206 \n     tolS   =   ops [ 0 ] \n     # \u5212\u5206\u6700\u5c0f size \u5c0f\u4e8e\uff0c\u5c31\u4e0d\u7ee7\u7eed\u5212\u5206\u4e86 \n     tolN   =   ops [ 1 ] \n     # \u5982\u679c\u7ed3\u679c\u96c6(\u6700\u540e\u4e00\u5217\u4e3a1\u4e2a\u53d8\u91cf)\uff0c\u5c31\u8fd4\u56de\u9000\u51fa \n     # .T \u5bf9\u6570\u636e\u96c6\u8fdb\u884c\u8f6c\u7f6e \n     # .tolist()[0] \u8f6c\u5316\u4e3a\u6570\u7ec4\u5e76\u53d6\u7b2c0\u5217 \n     if   len ( set ( dataSet [:,   - 1 ] . T . tolist ()[ 0 ]))   ==   1 :   # \u5982\u679c\u96c6\u5408size\u4e3a1\uff0c\u4e0d\u7528\u7ee7\u7eed\u5212\u5206\u3002 \n         #  exit cond 1 \n         return   None ,   leafType ( dataSet ) \n     # \u8ba1\u7b97\u884c\u5217\u503c \n     m ,   n   =   shape ( dataSet ) \n     # \u65e0\u5206\u7c7b\u8bef\u5dee\u7684\u603b\u65b9\u5dee\u548c \n     # the choice of the best feature is driven by Reduction in RSS error from mean \n     S   =   errType ( dataSet ) \n     # inf \u6b63\u65e0\u7a77\u5927 \n     bestS ,   bestIndex ,   bestValue   =   inf ,   0 ,   0 \n     # \u5faa\u73af\u5904\u7406\u6bcf\u4e00\u5217\u5bf9\u5e94\u7684feature\u503c \n     for   featIndex   in   range ( n - 1 ):   # \u5bf9\u4e8e\u6bcf\u4e2a\u7279\u5f81 \n         # [0]\u8868\u793a\u8fd9\u4e00\u5217\u7684[\u6240\u6709\u884c]\uff0c\u4e0d\u8981[0]\u5c31\u662f\u4e00\u4e2aarray[[\u6240\u6709\u884c]] \n         for   splitVal   in   set ( dataSet [:,   featIndex ] . T . tolist ()[ 0 ]): \n             # \u5bf9\u8be5\u5217\u8fdb\u884c\u5206\u7ec4\uff0c\u7136\u540e\u7ec4\u5185\u7684\u6210\u5458\u7684val\u503c\u8fdb\u884c \u4e8c\u5143\u5207\u5206 \n             mat0 ,   mat1   =   binSplitDataSet ( dataSet ,   featIndex ,   splitVal ) \n             # \u5224\u65ad\u4e8c\u5143\u5207\u5206\u7684\u65b9\u5f0f\u7684\u5143\u7d20\u6570\u91cf\u662f\u5426\u7b26\u5408\u9884\u671f \n             if   ( shape ( mat0 )[ 0 ]     tolN )   or   ( shape ( mat1 )[ 0 ]     tolN ): \n                 continue \n             newS   =   errType ( mat0 )   +   errType ( mat1 ) \n             # \u5982\u679c\u4e8c\u5143\u5207\u5206\uff0c\u7b97\u51fa\u6765\u7684\u8bef\u5dee\u5728\u53ef\u63a5\u53d7\u8303\u56f4\u5185\uff0c\u90a3\u4e48\u5c31\u8bb0\u5f55\u5207\u5206\u70b9\uff0c\u5e76\u8bb0\u5f55\u6700\u5c0f\u8bef\u5dee \n             # \u5982\u679c\u5212\u5206\u540e\u8bef\u5dee\u5c0f\u4e8e bestS\uff0c\u5219\u8bf4\u660e\u627e\u5230\u4e86\u65b0\u7684bestS \n             if   newS     bestS : \n                 bestIndex   =   featIndex \n                 bestValue   =   splitVal \n                 bestS   =   newS \n     # \u5224\u65ad\u4e8c\u5143\u5207\u5206\u7684\u65b9\u5f0f\u7684\u5143\u7d20\u8bef\u5dee\u662f\u5426\u7b26\u5408\u9884\u671f \n     # if the decrease (S-bestS) is less than a threshold don t do the split \n     if   ( S   -   bestS )     tolS : \n         return   None ,   leafType ( dataSet ) \n     mat0 ,   mat1   =   binSplitDataSet ( dataSet ,   bestIndex ,   bestValue ) \n     # \u5bf9\u6574\u4f53\u7684\u6210\u5458\u8fdb\u884c\u5224\u65ad\uff0c\u662f\u5426\u7b26\u5408\u9884\u671f \n     # \u5982\u679c\u96c6\u5408\u7684 size \u5c0f\u4e8e tolN  \n     if   ( shape ( mat0 )[ 0 ]     tolN )   or   ( shape ( mat1 )[ 0 ]     tolN ):   # \u5f53\u6700\u4f73\u5212\u5206\u540e\uff0c\u96c6\u5408\u8fc7\u5c0f\uff0c\u4e5f\u4e0d\u5212\u5206\uff0c\u4ea7\u751f\u53f6\u8282\u70b9 \n         return   None ,   leafType ( dataSet ) \n     return   bestIndex ,   bestValue  # assume dataSet is NumPy Mat so we can array filtering  # \u5047\u8bbe dataSet \u662f NumPy Mat \u7c7b\u578b\u7684\uff0c\u90a3\u4e48\u6211\u4eec\u53ef\u4ee5\u8fdb\u884c array \u8fc7\u6ee4  def   createTree ( dataSet ,   leafType = regLeaf ,   errType = regErr ,   ops = ( 1 ,   4 )): \n     createTree(\u83b7\u53d6\u56de\u5f52\u6811)          Description\uff1a\u9012\u5f52\u51fd\u6570\uff1a\u5982\u679c\u6784\u5efa\u7684\u662f\u56de\u5f52\u6811\uff0c\u8be5\u6a21\u578b\u662f\u4e00\u4e2a\u5e38\u6570\uff0c\u5982\u679c\u662f\u6a21\u578b\u6811\uff0c\u5176\u6a21\u578b\u5e08\u4e00\u4e2a\u7ebf\u6027\u65b9\u7a0b\u3002      Args:          dataSet      \u52a0\u8f7d\u7684\u539f\u59cb\u6570\u636e\u96c6          leafType     \u5efa\u7acb\u53f6\u5b50\u70b9\u7684\u51fd\u6570          errType      \u8bef\u5dee\u8ba1\u7b97\u51fd\u6570          ops=(1, 4)   [\u5bb9\u8bb8\u8bef\u5dee\u4e0b\u964d\u503c\uff0c\u5207\u5206\u7684\u6700\u5c11\u6837\u672c\u6570]      Returns:          retTree    \u51b3\u7b56\u6811\u6700\u540e\u7684\u7ed3\u679c       \n     # \u9009\u62e9\u6700\u597d\u7684\u5207\u5206\u65b9\u5f0f\uff1a feature\u7d22\u5f15\u503c\uff0c\u6700\u4f18\u5207\u5206\u503c \n     # choose the best split \n     feat ,   val   =   chooseBestSplit ( dataSet ,   leafType ,   errType ,   ops ) \n     # if the splitting hit a stop condition return val \n     # \u5982\u679c splitting \u8fbe\u5230\u4e00\u4e2a\u505c\u6b62\u6761\u4ef6\uff0c\u90a3\u4e48\u8fd4\u56de val \n     if   feat   is   None : \n         return   val \n     retTree   =   {} \n     retTree [ spInd ]   =   feat \n     retTree [ spVal ]   =   val \n     # \u5927\u4e8e\u5728\u53f3\u8fb9\uff0c\u5c0f\u4e8e\u5728\u5de6\u8fb9\uff0c\u5206\u4e3a2\u4e2a\u6570\u636e\u96c6 \n     lSet ,   rSet   =   binSplitDataSet ( dataSet ,   feat ,   val ) \n     # \u9012\u5f52\u7684\u8fdb\u884c\u8c03\u7528\uff0c\u5728\u5de6\u53f3\u5b50\u6811\u4e2d\u7ee7\u7eed\u9012\u5f52\u751f\u6210\u6811 \n     retTree [ left ]   =   createTree ( lSet ,   leafType ,   errType ,   ops ) \n     retTree [ right ]   =   createTree ( rSet ,   leafType ,   errType ,   ops ) \n     return   retTree   \u5b8c\u6574\u4ee3\u7801\u5730\u5740 :  https://github.com/apachecn/MachineLearning/blob/master/src/python/9.RegTrees/regTrees.py   \u6d4b\u8bd5\u7b97\u6cd5\uff1a\u4f7f\u7528\u6d4b\u8bd5\u6570\u636e\u4e0a\u7684R^2\u503c\u6765\u5206\u6790\u6a21\u578b\u7684\u6548\u679c  \u4f7f\u7528\u7b97\u6cd5\uff1a\u4f7f\u7528\u8bad\u7ec3\u51fa\u7684\u6811\u505a\u9884\u6d4b\uff0c\u9884\u6d4b\u7ed3\u679c\u8fd8\u53ef\u4ee5\u7528\u6765\u505a\u5f88\u591a\u4e8b\u60c5", 
            "title": "1.6.2\u3001\u5f00\u53d1\u6d41\u7a0b"
        }, 
        {
            "location": "/\u4e66\u7c4d/\u673a\u5668\u5b66\u4e60\u5b9e\u6218/09.\u6811\u56de\u5f52/#2", 
            "text": "\u4e00\u68f5\u6811\u5982\u679c\u8282\u70b9\u8fc7\u591a\uff0c\u8868\u660e\u8be5\u6a21\u578b\u53ef\u80fd\u5bf9\u6570\u636e\u8fdb\u884c\u4e86 \u201c\u8fc7\u62df\u5408\u201d\u3002  \u901a\u8fc7\u964d\u4f4e\u51b3\u7b56\u6811\u7684\u590d\u6742\u5ea6\u6765\u907f\u514d\u8fc7\u62df\u5408\u7684\u8fc7\u7a0b\u79f0\u4e3a  \u526a\u679d\uff08pruning\uff09 \u3002\u5728\u51fd\u6570 chooseBestSplit() \u4e2d\u63d0\u524d\u7ec8\u6b62\u6761\u4ef6\uff0c\u5b9e\u9645\u4e0a\u662f\u5728\u8fdb\u884c\u4e00\u79cd\u6240\u8c13\u7684  \u9884\u526a\u679d\uff08prepruning\uff09 \u64cd\u4f5c\u3002\u53e6\u4e00\u4e2a\u5f62\u5f0f\u7684\u526a\u679d\u9700\u8981\u4f7f\u7528\u6d4b\u8bd5\u96c6\u548c\u8bad\u7ec3\u96c6\uff0c\u79f0\u4f5c  \u540e\u526a\u679d\uff08postpruning\uff09 \u3002", 
            "title": "2\u3001\u6811\u526a\u679d"
        }, 
        {
            "location": "/\u4e66\u7c4d/\u673a\u5668\u5b66\u4e60\u5b9e\u6218/09.\u6811\u56de\u5f52/#21prepruning", 
            "text": "\u987e\u540d\u601d\u4e49\uff0c\u9884\u526a\u679d\u5c31\u662f\u53ca\u65e9\u7684\u505c\u6b62\u6811\u589e\u957f\uff0c\u5728\u6784\u9020\u51b3\u7b56\u6811\u7684\u540c\u65f6\u8fdb\u884c\u526a\u679d\u3002  \u6240\u6709\u51b3\u7b56\u6811\u7684\u6784\u5efa\u65b9\u6cd5\uff0c\u90fd\u662f\u5728\u65e0\u6cd5\u8fdb\u4e00\u6b65\u964d\u4f4e\u71b5\u7684\u60c5\u51b5\u4e0b\u624d\u4f1a\u505c\u6b62\u521b\u5efa\u5206\u652f\u7684\u8fc7\u7a0b\uff0c\u4e3a\u4e86\u907f\u514d\u8fc7\u62df\u5408\uff0c\u53ef\u4ee5\u8bbe\u5b9a\u4e00\u4e2a\u9608\u503c\uff0c\u71b5\u51cf\u5c0f\u7684\u6570\u91cf\u5c0f\u4e8e\u8fd9\u4e2a\u9608\u503c\uff0c\u5373\u4f7f\u8fd8\u53ef\u4ee5\u7ee7\u7eed\u964d\u4f4e\u71b5\uff0c\u4e5f\u505c\u6b62\u7ee7\u7eed\u521b\u5efa\u5206\u652f\u3002\u4f46\u662f\u8fd9\u79cd\u65b9\u6cd5\u5b9e\u9645\u4e2d\u7684\u6548\u679c\u5e76\u4e0d\u597d\u3002", 
            "title": "2.1\u3001\u9884\u526a\u679d(prepruning)"
        }, 
        {
            "location": "/\u4e66\u7c4d/\u673a\u5668\u5b66\u4e60\u5b9e\u6218/09.\u6811\u56de\u5f52/#22postpruning", 
            "text": "\u51b3\u7b56\u6811\u6784\u9020\u5b8c\u6210\u540e\u8fdb\u884c\u526a\u679d\u3002\u526a\u679d\u7684\u8fc7\u7a0b\u662f\u5bf9\u62e5\u6709\u540c\u6837\u7236\u8282\u70b9\u7684\u4e00\u7ec4\u8282\u70b9\u8fdb\u884c\u68c0\u67e5\uff0c\u5224\u65ad\u5982\u679c\u5c06\u5176\u5408\u5e76\uff0c\u71b5\u7684\u589e\u52a0\u91cf\u662f\u5426\u5c0f\u4e8e\u67d0\u4e00\u9608\u503c\u3002\u5982\u679c\u786e\u5b9e\u5c0f\uff0c\u5219\u8fd9\u4e00\u7ec4\u8282\u70b9\u53ef\u4ee5\u5408\u5e76\u4e00\u4e2a\u8282\u70b9\uff0c\u5176\u4e2d\u5305\u542b\u4e86\u6240\u6709\u53ef\u80fd\u7684\u7ed3\u679c\u3002\u5408\u5e76\u4e5f\u88ab\u79f0\u4f5c  \u584c\u9677\u5904\u7406  \uff0c\u5728\u56de\u5f52\u6811\u4e2d\u4e00\u822c\u91c7\u7528\u53d6\u9700\u8981\u5408\u5e76\u7684\u6240\u6709\u5b50\u6811\u7684\u5e73\u5747\u503c\u3002\u540e\u526a\u679d\u662f\u76ee\u524d\u6700\u666e\u904d\u7684\u505a\u6cd5\u3002  \u540e\u526a\u679d prune() \u7684\u4f2a\u4ee3\u7801\u5982\u4e0b:  \u57fa\u4e8e\u5df2\u6709\u7684\u6811\u5207\u5206\u6d4b\u8bd5\u6570\u636e:\n    \u5982\u679c\u5b58\u5728\u4efb\u4e00\u5b50\u96c6\u662f\u4e00\u68f5\u6811\uff0c\u5219\u5728\u8be5\u5b50\u96c6\u9012\u5f52\u526a\u679d\u8fc7\u7a0b\n    \u8ba1\u7b97\u5c06\u5f53\u524d\u4e24\u4e2a\u53f6\u8282\u70b9\u5408\u5e76\u540e\u7684\u8bef\u5dee\n    \u8ba1\u7b97\u4e0d\u5408\u5e76\u7684\u8bef\u5dee\n    \u5982\u679c\u5408\u5e76\u4f1a\u964d\u4f4e\u8bef\u5dee\u7684\u8bdd\uff0c\u5c31\u5c06\u53f6\u8282\u70b9\u5408\u5e76", 
            "title": "2.2\u3001\u540e\u526a\u679d(postpruning)"
        }, 
        {
            "location": "/\u4e66\u7c4d/\u673a\u5668\u5b66\u4e60\u5b9e\u6218/09.\u6811\u56de\u5f52/#23", 
            "text": "\u56de\u5f52\u6811\u526a\u679d\u51fd\u6570  # \u5224\u65ad\u8282\u70b9\u662f\u5426\u662f\u4e00\u4e2a\u5b57\u5178  def   isTree ( obj ): \n          Desc:          \u6d4b\u8bd5\u8f93\u5165\u53d8\u91cf\u662f\u5426\u662f\u4e00\u68f5\u6811,\u5373\u662f\u5426\u662f\u4e00\u4e2a\u5b57\u5178      Args:          obj -- \u8f93\u5165\u53d8\u91cf      Returns:          \u8fd4\u56de\u5e03\u5c14\u7c7b\u578b\u7684\u7ed3\u679c\u3002\u5982\u679c obj \u662f\u4e00\u4e2a\u5b57\u5178\uff0c\u8fd4\u56detrue\uff0c\u5426\u5219\u8fd4\u56de false       \n     return   ( type ( obj ) . __name__   ==   dict )  # \u8ba1\u7b97\u5de6\u53f3\u679d\u4e2b\u7684\u5747\u503c  def   getMean ( tree ): \n          Desc:          \u4ece\u4e0a\u5f80\u4e0b\u904d\u5386\u6811\u76f4\u5230\u53f6\u8282\u70b9\u4e3a\u6b62\uff0c\u5982\u679c\u627e\u5230\u4e24\u4e2a\u53f6\u8282\u70b9\u5219\u8ba1\u7b97\u5b83\u4eec\u7684\u5e73\u5747\u503c\u3002          \u5bf9 tree \u8fdb\u884c\u584c\u9677\u5904\u7406\uff0c\u5373\u8fd4\u56de\u6811\u5e73\u5747\u503c\u3002      Args:          tree -- \u8f93\u5165\u7684\u6811      Returns:          \u8fd4\u56de tree \u8282\u70b9\u7684\u5e73\u5747\u503c       \n     if   isTree ( tree [ right ]): \n         tree [ right ]   =   getMean ( tree [ right ]) \n     if   isTree ( tree [ left ]): \n         tree [ left ]   =   getMean ( tree [ left ]) \n     return   ( tree [ left ] + tree [ right ]) / 2.0  # \u68c0\u67e5\u662f\u5426\u9002\u5408\u5408\u5e76\u5206\u679d  def   prune ( tree ,   testData ): \n          Desc:          \u4ece\u4e0a\u800c\u4e0b\u627e\u5230\u53f6\u8282\u70b9\uff0c\u7528\u6d4b\u8bd5\u6570\u636e\u96c6\u6765\u5224\u65ad\u5c06\u8fd9\u4e9b\u53f6\u8282\u70b9\u5408\u5e76\u662f\u5426\u80fd\u964d\u4f4e\u6d4b\u8bd5\u8bef\u5dee      Args:          tree -- \u5f85\u526a\u679d\u7684\u6811          testData -- \u526a\u679d\u6240\u9700\u8981\u7684\u6d4b\u8bd5\u6570\u636e testData       Returns:          tree -- \u526a\u679d\u5b8c\u6210\u7684\u6811       \n     # \u5224\u65ad\u662f\u5426\u6d4b\u8bd5\u6570\u636e\u96c6\u6ca1\u6709\u6570\u636e\uff0c\u5982\u679c\u6ca1\u6709\uff0c\u5c31\u76f4\u63a5\u8fd4\u56detree\u672c\u8eab\u7684\u5747\u503c \n     if   shape ( testData )[ 0 ]   ==   0 : \n         return   getMean ( tree ) \n\n     # \u5224\u65ad\u5206\u679d\u662f\u5426\u662fdict\u5b57\u5178\uff0c\u5982\u679c\u662f\u5c31\u5c06\u6d4b\u8bd5\u6570\u636e\u96c6\u8fdb\u884c\u5207\u5206 \n     if   ( isTree ( tree [ right ])   or   isTree ( tree [ left ])): \n         lSet ,   rSet   =   binSplitDataSet ( testData ,   tree [ spInd ],   tree [ spVal ]) \n     # \u5982\u679c\u662f\u5de6\u8fb9\u5206\u679d\u662f\u5b57\u5178\uff0c\u5c31\u4f20\u5165\u5de6\u8fb9\u7684\u6570\u636e\u96c6\u548c\u5de6\u8fb9\u7684\u5206\u679d\uff0c\u8fdb\u884c\u9012\u5f52 \n     if   isTree ( tree [ left ]): \n         tree [ left ]   =   prune ( tree [ left ],   lSet ) \n     # \u5982\u679c\u662f\u53f3\u8fb9\u5206\u679d\u662f\u5b57\u5178\uff0c\u5c31\u4f20\u5165\u5de6\u8fb9\u7684\u6570\u636e\u96c6\u548c\u5de6\u8fb9\u7684\u5206\u679d\uff0c\u8fdb\u884c\u9012\u5f52 \n     if   isTree ( tree [ right ]): \n         tree [ right ]   =   prune ( tree [ right ],   rSet ) \n\n     # \u4e0a\u9762\u7684\u4e00\u7cfb\u5217\u64cd\u4f5c\u672c\u8d28\u4e0a\u5c31\u662f\u5c06\u6d4b\u8bd5\u6570\u636e\u96c6\u6309\u7167\u8bad\u7ec3\u5b8c\u6210\u7684\u6811\u62c6\u5206\u597d\uff0c\u5bf9\u5e94\u7684\u503c\u653e\u5230\u5bf9\u5e94\u7684\u8282\u70b9 \n\n     # \u5982\u679c\u5de6\u53f3\u4e24\u8fb9\u540c\u65f6\u90fd\u4e0d\u662fdict\u5b57\u5178\uff0c\u4e5f\u5c31\u662f\u5de6\u53f3\u4e24\u8fb9\u90fd\u662f\u53f6\u8282\u70b9\uff0c\u800c\u4e0d\u662f\u5b50\u6811\u4e86\uff0c\u90a3\u4e48\u5206\u5272\u6d4b\u8bd5\u6570\u636e\u96c6\u3002 \n     # 1. \u5982\u679c\u6b63\u786e  \n     #   * \u90a3\u4e48\u8ba1\u7b97\u4e00\u4e0b\u603b\u65b9\u5dee \u548c \u8be5\u7ed3\u679c\u96c6\u7684\u672c\u8eab\u4e0d\u5206\u679d\u7684\u603b\u65b9\u5dee\u6bd4\u8f83 \n     #   * \u5982\u679c \u5408\u5e76\u7684\u603b\u65b9\u5dee   \u4e0d\u5408\u5e76\u7684\u603b\u65b9\u5dee\uff0c\u90a3\u4e48\u5c31\u8fdb\u884c\u5408\u5e76 \n     # \u6ce8\u610f\u8fd4\u56de\u7684\u7ed3\u679c\uff1a \u5982\u679c\u53ef\u4ee5\u5408\u5e76\uff0c\u539f\u6765\u7684dict\u5c31\u53d8\u4e3a\u4e86 \u6570\u503c \n     if   not   isTree ( tree [ left ])   and   not   isTree ( tree [ right ]): \n         lSet ,   rSet   =   binSplitDataSet ( testData ,   tree [ spInd ],   tree [ spVal ]) \n         # power(x, y)\u8868\u793ax\u7684y\u6b21\u65b9 \n         errorNoMerge   =   sum ( power ( lSet [:,   - 1 ]   -   tree [ left ],   2 ))   +   sum ( power ( rSet [:,   - 1 ]   -   tree [ right ],   2 )) \n         treeMean   =   ( tree [ left ]   +   tree [ right ]) / 2.0 \n         errorMerge   =   sum ( power ( testData [:,   - 1 ]   -   treeMean ,   2 )) \n         # \u5982\u679c \u5408\u5e76\u7684\u603b\u65b9\u5dee   \u4e0d\u5408\u5e76\u7684\u603b\u65b9\u5dee\uff0c\u90a3\u4e48\u5c31\u8fdb\u884c\u5408\u5e76 \n         if   errorMerge     errorNoMerge : \n             print   merging \n             return   treeMean \n         else : \n             return   tree \n     else : \n         return   tree   \u5b8c\u6574\u4ee3\u7801\u5730\u5740 :  https://github.com/apachecn/MachineLearning/blob/master/src/python/9.RegTrees/regTrees.py", 
            "title": "2.3\u3001\u526a\u679d \u4ee3\u7801"
        }, 
        {
            "location": "/\u4e66\u7c4d/\u673a\u5668\u5b66\u4e60\u5b9e\u6218/09.\u6811\u56de\u5f52/#3", 
            "text": "", 
            "title": "3\u3001\u6a21\u578b\u6811"
        }, 
        {
            "location": "/\u4e66\u7c4d/\u673a\u5668\u5b66\u4e60\u5b9e\u6218/09.\u6811\u56de\u5f52/#31", 
            "text": "\u7528\u6811\u6765\u5bf9\u6570\u636e\u5efa\u6a21\uff0c\u9664\u4e86\u628a\u53f6\u8282\u70b9\u7b80\u5355\u5730\u8bbe\u5b9a\u4e3a\u5e38\u6570\u503c\u4e4b\u5916\uff0c\u8fd8\u6709\u4e00\u79cd\u65b9\u6cd5\u662f\u628a\u53f6\u8282\u70b9\u8bbe\u5b9a\u4e3a\u5206\u6bb5\u7ebf\u6027\u51fd\u6570\uff0c\u8fd9\u91cc\u6240\u8c13\u7684  \u5206\u6bb5\u7ebf\u6027\uff08piecewise linear\uff09  \u662f\u6307\u6a21\u578b\u7531\u591a\u4e2a\u7ebf\u6027\u7247\u6bb5\u7ec4\u6210\u3002  \u6211\u4eec\u770b\u4e00\u4e0b\u56fe 9-4 \u4e2d\u7684\u6570\u636e\uff0c\u5982\u679c\u4f7f\u7528\u4e24\u6761\u76f4\u7ebf\u62df\u5408\u662f\u5426\u6bd4\u4f7f\u7528\u4e00\u7ec4\u5e38\u6570\u6765\u5efa\u6a21\u597d\u5462\uff1f\u7b54\u6848\u663e\u800c\u6613\u89c1\u3002\u53ef\u4ee5\u8bbe\u8ba1\u4e24\u6761\u5206\u522b\u4ece 0.0~0.3\u3001\u4ece 0.3~1.0 \u7684\u76f4\u7ebf\uff0c\u4e8e\u662f\u5c31\u53ef\u4ee5\u5f97\u5230\u4e24\u4e2a\u7ebf\u6027\u6a21\u578b\u3002\u56e0\u4e3a\u6570\u636e\u96c6\u91cc\u7684\u4e00\u90e8\u5206\u6570\u636e\uff080.0 0.3\uff09\u4ee5\u67d0\u4e2a\u7ebf\u6027\u6a21\u578b\u5efa\u6a21\uff0c\u800c\u53e6\u4e00\u90e8\u5206\u6570\u636e\uff080.3 1.0\uff09\u5219\u4ee5\u53e6\u4e00\u4e2a\u7ebf\u6027\u6a21\u578b\u5efa\u6a21\uff0c\u56e0\u6b64\u6211\u4eec\u8bf4\u91c7\u7528\u4e86\u6240\u8c13\u7684\u5206\u6bb5\u7ebf\u6027\u6a21\u578b\u3002  \u51b3\u7b56\u6811\u76f8\u6bd4\u4e8e\u5176\u4ed6\u673a\u5668\u5b66\u4e60\u7b97\u6cd5\u7684\u4f18\u52bf\u4e4b\u4e00\u5728\u4e8e\u7ed3\u679c\u66f4\u6613\u7406\u89e3\u3002\u5f88\u663e\u7136\uff0c\u4e24\u6761\u76f4\u7ebf\u6bd4\u5f88\u591a\u8282\u70b9\u7ec4\u6210\u4e00\u68f5\u5927\u6811\u66f4\u5bb9\u6613\u89e3\u91ca\u3002\u6a21\u578b\u6811\u7684\u53ef\u89e3\u91ca\u6027\u662f\u5b83\u4f18\u4e8e\u56de\u5f52\u6811\u7684\u7279\u70b9\u4e4b\u4e00\u3002\u53e6\u5916\uff0c\u6a21\u578b\u6811\u4e5f\u5177\u6709\u66f4\u9ad8\u7684\u9884\u6d4b\u51c6\u786e\u5ea6\u3002   \u5c06\u4e4b\u524d\u7684\u56de\u5f52\u6811\u7684\u4ee3\u7801\u7a0d\u4f5c\u4fee\u6539\uff0c\u5c31\u53ef\u4ee5\u5728\u53f6\u8282\u70b9\u751f\u6210\u7ebf\u6027\u6a21\u578b\u800c\u4e0d\u662f\u5e38\u6570\u503c\u3002\u4e0b\u9762\u5c06\u5229\u7528\u6811\u751f\u6210\u7b97\u6cd5\u5bf9\u6570\u636e\u8fdb\u884c\u5212\u5206\uff0c\u4e14\u6bcf\u4efd\u5207\u5206\u6570\u636e\u90fd\u80fd\u5f88\u5bb9\u6613\u88ab\u7ebf\u6027\u6a21\u578b\u6240\u8868\u793a\u3002\u8fd9\u4e2a\u7b97\u6cd5\u7684\u5173\u952e\u5728\u4e8e\u8bef\u5dee\u7684\u8ba1\u7b97\u3002  \u90a3\u4e48\u4e3a\u4e86\u627e\u5230\u6700\u4f73\u5207\u5206\uff0c\u5e94\u8be5\u600e\u6837\u8ba1\u7b97\u8bef\u5dee\u5462\uff1f\u524d\u9762\u7528\u4e8e\u56de\u5f52\u6811\u7684\u8bef\u5dee\u8ba1\u7b97\u65b9\u6cd5\u8fd9\u91cc\u4e0d\u80fd\u518d\u7528\u3002\u7a0d\u52a0\u53d8\u5316\uff0c\u5bf9\u4e8e\u7ed9\u5b9a\u7684\u6570\u636e\u96c6\uff0c\u5e94\u8be5\u5148\u7528\u6a21\u578b\u6765\u5bf9\u5b83\u8fdb\u884c\u62df\u5408\uff0c\u7136\u540e\u8ba1\u7b97\u771f\u5b9e\u7684\u76ee\u6807\u503c\u4e0e\u6a21\u578b\u9884\u6d4b\u503c\u95f4\u7684\u5dee\u503c\u3002\u6700\u540e\u5c06\u8fd9\u4e9b\u5dee\u503c\u7684\u5e73\u65b9\u6c42\u548c\u5c31\u5f97\u5230\u4e86\u6240\u9700\u7684\u8bef\u5dee\u3002", 
            "title": "3.1\u3001\u6a21\u578b\u6811 \u7b80\u4ecb"
        }, 
        {
            "location": "/\u4e66\u7c4d/\u673a\u5668\u5b66\u4e60\u5b9e\u6218/09.\u6811\u56de\u5f52/#32", 
            "text": "\u6a21\u578b\u6811\u7684\u53f6\u8282\u70b9\u751f\u6210\u51fd\u6570  # \u5f97\u5230\u6a21\u578b\u7684ws\u7cfb\u6570\uff1af(x) = x0 + x1*featrue1+ x3*featrue2 ...  # create linear model and return coeficients  def   modelLeaf ( dataSet ): \n          Desc:          \u5f53\u6570\u636e\u4e0d\u518d\u9700\u8981\u5207\u5206\u7684\u65f6\u5019\uff0c\u751f\u6210\u53f6\u8282\u70b9\u7684\u6a21\u578b\u3002      Args:          dataSet -- \u8f93\u5165\u6570\u636e\u96c6      Returns:          \u8c03\u7528 linearSolve \u51fd\u6570\uff0c\u8fd4\u56de\u5f97\u5230\u7684 \u56de\u5f52\u7cfb\u6570ws       \n     ws ,   X ,   Y   =   linearSolve ( dataSet ) \n     return   ws  # \u8ba1\u7b97\u7ebf\u6027\u6a21\u578b\u7684\u8bef\u5dee\u503c  def   modelErr ( dataSet ): \n          Desc:          \u5728\u7ed9\u5b9a\u6570\u636e\u96c6\u4e0a\u8ba1\u7b97\u8bef\u5dee\u3002      Args:          dataSet -- \u8f93\u5165\u6570\u636e\u96c6      Returns:          \u8c03\u7528 linearSolve \u51fd\u6570\uff0c\u8fd4\u56de yHat \u548c Y \u4e4b\u95f4\u7684\u5e73\u65b9\u8bef\u5dee\u3002       \n     ws ,   X ,   Y   =   linearSolve ( dataSet ) \n     yHat   =   X   *   ws \n     # print corrcoef(yHat, Y, rowvar=0) \n     return   sum ( power ( Y   -   yHat ,   2 )) \n\n\n  # helper function used in two places  def   linearSolve ( dataSet ): \n          Desc:          \u5c06\u6570\u636e\u96c6\u683c\u5f0f\u5316\u6210\u76ee\u6807\u53d8\u91cfY\u548c\u81ea\u53d8\u91cfX\uff0c\u6267\u884c\u7b80\u5355\u7684\u7ebf\u6027\u56de\u5f52\uff0c\u5f97\u5230ws      Args:          dataSet -- \u8f93\u5165\u6570\u636e      Returns:          ws -- \u6267\u884c\u7ebf\u6027\u56de\u5f52\u7684\u56de\u5f52\u7cfb\u6570           X -- \u683c\u5f0f\u5316\u81ea\u53d8\u91cfX          Y -- \u683c\u5f0f\u5316\u76ee\u6807\u53d8\u91cfY       \n     m ,   n   =   shape ( dataSet ) \n     # \u4ea7\u751f\u4e00\u4e2a\u5173\u4e8e1\u7684\u77e9\u9635 \n     X   =   mat ( ones (( m ,   n ))) \n     Y   =   mat ( ones (( m ,   1 ))) \n     # X\u76840\u5217\u4e3a1\uff0c\u5e38\u6570\u9879\uff0c\u7528\u4e8e\u8ba1\u7b97\u5e73\u8861\u8bef\u5dee \n     X [:,   1 :   n ]   =   dataSet [:,   0 :   n - 1 ] \n     Y   =   dataSet [:,   - 1 ] \n\n     # \u8f6c\u7f6e\u77e9\u9635*\u77e9\u9635 \n     xTx   =   X . T   *   X \n     # \u5982\u679c\u77e9\u9635\u7684\u9006\u4e0d\u5b58\u5728\uff0c\u4f1a\u9020\u6210\u7a0b\u5e8f\u5f02\u5e38 \n     if   linalg . det ( xTx )   ==   0.0 : \n         raise   NameError ( This matrix is singular, cannot do inverse, \\n try increasing the second value of ops ) \n     # \u6700\u5c0f\u4e8c\u4e58\u6cd5\u6c42\u6700\u4f18\u89e3:  w0*1+w1*x1=y \n     ws   =   xTx . I   *   ( X . T   *   Y ) \n     return   ws ,   X ,   Y   \u5b8c\u6574\u4ee3\u7801\u5730\u5740 :  https://github.com/apachecn/MachineLearning/blob/master/src/python/9.RegTrees/regTrees.py", 
            "title": "3.2\u3001\u6a21\u578b\u6811 \u4ee3\u7801"
        }, 
        {
            "location": "/\u4e66\u7c4d/\u673a\u5668\u5b66\u4e60\u5b9e\u6218/09.\u6811\u56de\u5f52/#33", 
            "text": "", 
            "title": "3.3\u3001\u6a21\u578b\u6811 \u8fd0\u884c\u7ed3\u679c"
        }, 
        {
            "location": "/\u4e66\u7c4d/\u673a\u5668\u5b66\u4e60\u5b9e\u6218/09.\u6811\u56de\u5f52/#4", 
            "text": "", 
            "title": "4\u3001\u6811\u56de\u5f52 \u9879\u76ee\u6848\u4f8b"
        }, 
        {
            "location": "/\u4e66\u7c4d/\u673a\u5668\u5b66\u4e60\u5b9e\u6218/09.\u6811\u56de\u5f52/#411", 
            "text": "", 
            "title": "4.1\u3001\u9879\u76ee\u6848\u4f8b1: \u6811\u56de\u5f52\u4e0e\u6807\u51c6\u56de\u5f52\u7684\u6bd4\u8f83"
        }, 
        {
            "location": "/\u4e66\u7c4d/\u673a\u5668\u5b66\u4e60\u5b9e\u6218/09.\u6811\u56de\u5f52/#411_1", 
            "text": "\u524d\u9762\u4ecb\u7ecd\u4e86\u6a21\u578b\u6811\u3001\u56de\u5f52\u6811\u548c\u4e00\u822c\u7684\u56de\u5f52\u65b9\u6cd5\uff0c\u4e0b\u9762\u6d4b\u8bd5\u4e00\u4e0b\u54ea\u4e2a\u6a21\u578b\u6700\u597d\u3002  \u8fd9\u4e9b\u6a21\u578b\u5c06\u5728\u67d0\u4e2a\u6570\u636e\u4e0a\u8fdb\u884c\u6d4b\u8bd5\uff0c\u8be5\u6570\u636e\u6d89\u53ca\u4eba\u7684\u667a\u529b\u6c34\u5e73\u548c\u81ea\u884c\u8f66\u7684\u901f\u5ea6\u7684\u5173\u7cfb\u3002\u5f53\u7136\uff0c\u6570\u636e\u662f\u5047\u7684\u3002", 
            "title": "4.1.1\u3001\u9879\u76ee\u6982\u8ff0"
        }, 
        {
            "location": "/\u4e66\u7c4d/\u673a\u5668\u5b66\u4e60\u5b9e\u6218/09.\u6811\u56de\u5f52/#412", 
            "text": "\u6536\u96c6\u6570\u636e\uff1a\u91c7\u7528\u4efb\u610f\u65b9\u6cd5\u6536\u96c6\u6570\u636e\n\u51c6\u5907\u6570\u636e\uff1a\u9700\u8981\u6570\u503c\u578b\u6570\u636e\uff0c\u6807\u79f0\u578b\u6570\u636e\u5e94\u8be5\u6620\u5c04\u6210\u4e8c\u503c\u578b\u6570\u636e\n\u5206\u6790\u6570\u636e\uff1a\u7ed8\u51fa\u6570\u636e\u7684\u4e8c\u7ef4\u53ef\u89c6\u5316\u663e\u793a\u7ed3\u679c\uff0c\u4ee5\u5b57\u5178\u65b9\u5f0f\u751f\u6210\u6811\n\u8bad\u7ec3\u7b97\u6cd5\uff1a\u6a21\u578b\u6811\u7684\u6784\u5efa\n\u6d4b\u8bd5\u7b97\u6cd5\uff1a\u4f7f\u7528\u6d4b\u8bd5\u6570\u636e\u4e0a\u7684R^2\u503c\u6765\u5206\u6790\u6a21\u578b\u7684\u6548\u679c\n\u4f7f\u7528\u7b97\u6cd5\uff1a\u4f7f\u7528\u8bad\u7ec3\u51fa\u7684\u6811\u505a\u9884\u6d4b\uff0c\u9884\u6d4b\u7ed3\u679c\u8fd8\u53ef\u4ee5\u7528\u6765\u505a\u5f88\u591a\u4e8b\u60c5   \u6536\u96c6\u6570\u636e: \u91c7\u7528\u4efb\u610f\u65b9\u6cd5\u6536\u96c6\u6570\u636e  \u51c6\u5907\u6570\u636e\uff1a\u9700\u8981\u6570\u503c\u578b\u6570\u636e\uff0c\u6807\u79f0\u578b\u6570\u636e\u5e94\u8be5\u6620\u5c04\u6210\u4e8c\u503c\u578b\u6570\u636e   \u6570\u636e\u5b58\u50a8\u683c\u5f0f: 3.000000    46.852122\n23.000000   178.676107\n0.000000    86.154024\n6.000000    68.707614\n15.000000   139.737693   \u5206\u6790\u6570\u636e\uff1a\u7ed8\u51fa\u6570\u636e\u7684\u4e8c\u7ef4\u53ef\u89c6\u5316\u663e\u793a\u7ed3\u679c\uff0c\u4ee5\u5b57\u5178\u65b9\u5f0f\u751f\u6210\u6811     \u8bad\u7ec3\u7b97\u6cd5\uff1a\u6a21\u578b\u6811\u7684\u6784\u5efa   \u7528\u6811\u56de\u5f52\u8fdb\u884c\u9884\u6d4b\u7684\u4ee3\u7801 # \u56de\u5f52\u6811\u6d4b\u8bd5\u6848\u4f8b  # \u4e3a\u4e86\u548c modelTreeEval() \u4fdd\u6301\u4e00\u81f4\uff0c\u4fdd\u7559\u4e24\u4e2a\u8f93\u5165\u53c2\u6570  def   regTreeEval ( model ,   inDat ): \n          Desc:          \u5bf9 \u56de\u5f52\u6811 \u8fdb\u884c\u9884\u6d4b      Args:          model -- \u6307\u5b9a\u6a21\u578b\uff0c\u53ef\u9009\u503c\u4e3a \u56de\u5f52\u6811\u6a21\u578b \u6216\u8005 \u6a21\u578b\u6811\u6a21\u578b\uff0c\u8fd9\u91cc\u4e3a\u56de\u5f52\u6811          inDat -- \u8f93\u5165\u7684\u6d4b\u8bd5\u6570\u636e      Returns:          float(model) -- \u5c06\u8f93\u5165\u7684\u6a21\u578b\u6570\u636e\u8f6c\u6362\u4e3a \u6d6e\u70b9\u6570 \u8fd4\u56de       \n     return   float ( model )  # \u6a21\u578b\u6811\u6d4b\u8bd5\u6848\u4f8b  # \u5bf9\u8f93\u5165\u6570\u636e\u8fdb\u884c\u683c\u5f0f\u5316\u5904\u7406\uff0c\u5728\u539f\u6570\u636e\u77e9\u9635\u4e0a\u589e\u52a0\u7b2c0\u5217\uff0c\u5143\u7d20\u7684\u503c\u90fd\u662f1\uff0c  # \u4e5f\u5c31\u662f\u589e\u52a0\u504f\u79fb\u503c\uff0c\u548c\u6211\u4eec\u4e4b\u524d\u7684\u7b80\u5355\u7ebf\u6027\u56de\u5f52\u662f\u4e00\u4e2a\u5957\u8def\uff0c\u589e\u52a0\u4e00\u4e2a\u504f\u79fb\u91cf  def   modelTreeEval ( model ,   inDat ): \n          Desc:          \u5bf9 \u6a21\u578b\u6811 \u8fdb\u884c\u9884\u6d4b      Args:          model -- \u8f93\u5165\u6a21\u578b\uff0c\u53ef\u9009\u503c\u4e3a \u56de\u5f52\u6811\u6a21\u578b \u6216\u8005 \u6a21\u578b\u6811\u6a21\u578b\uff0c\u8fd9\u91cc\u4e3a\u6a21\u578b\u6811\u6a21\u578b          inDat -- \u8f93\u5165\u7684\u6d4b\u8bd5\u6570\u636e      Returns:          float(X * model) -- \u5c06\u6d4b\u8bd5\u6570\u636e\u4e58\u4ee5 \u56de\u5f52\u7cfb\u6570 \u5f97\u5230\u4e00\u4e2a\u9884\u6d4b\u503c \uff0c\u8f6c\u5316\u4e3a \u6d6e\u70b9\u6570 \u8fd4\u56de       \n     n   =   shape ( inDat )[ 1 ] \n     X   =   mat ( ones (( 1 ,   n + 1 ))) \n     X [:,   1 :   n + 1 ]   =   inDat \n     # print X, model \n     return   float ( X   *   model )  # \u8ba1\u7b97\u9884\u6d4b\u7684\u7ed3\u679c  # \u5728\u7ed9\u5b9a\u6811\u7ed3\u6784\u7684\u60c5\u51b5\u4e0b\uff0c\u5bf9\u4e8e\u5355\u4e2a\u6570\u636e\u70b9\uff0c\u8be5\u51fd\u6570\u4f1a\u7ed9\u51fa\u4e00\u4e2a\u9884\u6d4b\u503c\u3002  # modelEval\u662f\u5bf9\u53f6\u8282\u70b9\u8fdb\u884c\u9884\u6d4b\u7684\u51fd\u6570\u5f15\u7528\uff0c\u6307\u5b9a\u6811\u7684\u7c7b\u578b\uff0c\u4ee5\u4fbf\u5728\u53f6\u8282\u70b9\u4e0a\u8c03\u7528\u5408\u9002\u7684\u6a21\u578b\u3002  # \u6b64\u51fd\u6570\u81ea\u9876\u5411\u4e0b\u904d\u5386\u6574\u68f5\u6811\uff0c\u76f4\u5230\u547d\u4e2d\u53f6\u8282\u70b9\u4e3a\u6b62\uff0c\u4e00\u65e6\u5230\u8fbe\u53f6\u8282\u70b9\uff0c\u5b83\u5c31\u4f1a\u5728\u8f93\u5165\u6570\u636e\u4e0a  # \u8c03\u7528modelEval()\u51fd\u6570\uff0c\u8be5\u51fd\u6570\u7684\u9ed8\u8ba4\u503c\u4e3aregTreeEval()  def   treeForeCast ( tree ,   inData ,   modelEval = regTreeEval ): \n          Desc:          \u5bf9\u7279\u5b9a\u6a21\u578b\u7684\u6811\u8fdb\u884c\u9884\u6d4b\uff0c\u53ef\u4ee5\u662f \u56de\u5f52\u6811 \u4e5f\u53ef\u4ee5\u662f \u6a21\u578b\u6811      Args:          tree -- \u5df2\u7ecf\u8bad\u7ec3\u597d\u7684\u6811\u7684\u6a21\u578b          inData -- \u8f93\u5165\u7684\u6d4b\u8bd5\u6570\u636e          modelEval -- \u9884\u6d4b\u7684\u6811\u7684\u6a21\u578b\u7c7b\u578b\uff0c\u53ef\u9009\u503c\u4e3a regTreeEval\uff08\u56de\u5f52\u6811\uff09 \u6216 modelTreeEval\uff08\u6a21\u578b\u6811\uff09\uff0c\u9ed8\u8ba4\u4e3a\u56de\u5f52\u6811      Returns:          \u8fd4\u56de\u9884\u6d4b\u503c       \n     if   not   isTree ( tree ): \n         return   modelEval ( tree ,   inData ) \n     if   inData [ tree [ spInd ]]   =   tree [ spVal ]: \n         if   isTree ( tree [ left ]): \n             return   treeForeCast ( tree [ left ],   inData ,   modelEval ) \n         else : \n             return   modelEval ( tree [ left ],   inData ) \n     else : \n         if   isTree ( tree [ right ]): \n             return   treeForeCast ( tree [ right ],   inData ,   modelEval ) \n         else : \n             return   modelEval ( tree [ right ],   inData )  # \u9884\u6d4b\u7ed3\u679c  def   createForeCast ( tree ,   testData ,   modelEval = regTreeEval ): \n          Desc:          \u8c03\u7528 treeForeCast \uff0c\u5bf9\u7279\u5b9a\u6a21\u578b\u7684\u6811\u8fdb\u884c\u9884\u6d4b\uff0c\u53ef\u4ee5\u662f \u56de\u5f52\u6811 \u4e5f\u53ef\u4ee5\u662f \u6a21\u578b\u6811      Args:          tree -- \u5df2\u7ecf\u8bad\u7ec3\u597d\u7684\u6811\u7684\u6a21\u578b          inData -- \u8f93\u5165\u7684\u6d4b\u8bd5\u6570\u636e          modelEval -- \u9884\u6d4b\u7684\u6811\u7684\u6a21\u578b\u7c7b\u578b\uff0c\u53ef\u9009\u503c\u4e3a regTreeEval\uff08\u56de\u5f52\u6811\uff09 \u6216 modelTreeEval\uff08\u6a21\u578b\u6811\uff09\uff0c\u9ed8\u8ba4\u4e3a\u56de\u5f52\u6811      Returns:          \u8fd4\u56de\u9884\u6d4b\u503c\u77e9\u9635       \n     m   =   len ( testData ) \n     yHat   =   mat ( zeros (( m ,   1 ))) \n     # print yHat \n     for   i   in   range ( m ): \n         yHat [ i ,   0 ]   =   treeForeCast ( tree ,   mat ( testData [ i ]),   modelEval ) \n         # print  yHat== , yHat[i, 0] \n     return   yHat   \u5b8c\u6574\u4ee3\u7801\u5730\u5740 :  https://github.com/apachecn/MachineLearning/blob/master/src/python/9.RegTrees/regTrees.py   \u6d4b\u8bd5\u7b97\u6cd5\uff1a\u4f7f\u7528\u6d4b\u8bd5\u6570\u636e\u4e0a\u7684R^2\u503c\u6765\u5206\u6790\u6a21\u578b\u7684\u6548\u679c   R^2 \u5224\u5b9a\u7cfb\u6570\u5c31\u662f\u62df\u5408\u4f18\u5ea6\u5224\u5b9a\u7cfb\u6570\uff0c\u5b83\u4f53\u73b0\u4e86\u56de\u5f52\u6a21\u578b\u4e2d\u81ea\u53d8\u91cf\u7684\u53d8\u5f02\u5728\u56e0\u53d8\u91cf\u7684\u53d8\u5f02\u4e2d\u6240\u5360\u7684\u6bd4\u4f8b\u3002\u5982 R^2=0.99999 \u8868\u793a\u5728\u56e0\u53d8\u91cf y \u7684\u53d8\u5f02\u4e2d\u6709 99.999% \u662f\u7531\u4e8e\u53d8\u91cf x \u5f15\u8d77\u3002\u5f53 R^2=1 \u65f6\u8868\u793a\uff0c\u6240\u6709\u89c2\u6d4b\u70b9\u90fd\u843d\u5728\u62df\u5408\u7684\u76f4\u7ebf\u6216\u66f2\u7ebf\u4e0a\uff1b\u5f53 R^2=0 \u65f6\uff0c\u8868\u793a\u81ea\u53d8\u91cf\u4e0e\u56e0\u53d8\u91cf\u4e0d\u5b58\u5728\u76f4\u7ebf\u6216\u66f2\u7ebf\u5173\u7cfb\u3002  \u6240\u4ee5\u6211\u4eec\u770b\u51fa\uff0c R^2 \u7684\u503c\u8d8a\u63a5\u8fd1 1.0 \u8d8a\u597d\u3002   \u4f7f\u7528\u7b97\u6cd5\uff1a\u4f7f\u7528\u8bad\u7ec3\u51fa\u7684\u6811\u505a\u9884\u6d4b\uff0c\u9884\u6d4b\u7ed3\u679c\u8fd8\u53ef\u4ee5\u7528\u6765\u505a\u5f88\u591a\u4e8b\u60c5", 
            "title": "4.1.2\u3001\u5f00\u53d1\u6d41\u7a0b"
        }, 
        {
            "location": "/\u4e66\u7c4d/\u673a\u5668\u5b66\u4e60\u5b9e\u6218/09.\u6811\u56de\u5f52/#5-python-gui", 
            "text": "", 
            "title": "5\u3001\u9644\u52a0 Python \u4e2d GUI \u7684\u4f7f\u7528"
        }, 
        {
            "location": "/\u4e66\u7c4d/\u673a\u5668\u5b66\u4e60\u5b9e\u6218/09.\u6811\u56de\u5f52/#51-python-tkinter-gui", 
            "text": "\u5982\u679c\u80fd\u8ba9\u7528\u6237\u4e0d\u9700\u8981\u4efb\u4f55\u6307\u4ee4\u5c31\u53ef\u4ee5\u6309\u7167\u4ed6\u4eec\u81ea\u5df1\u7684\u65b9\u5f0f\u6765\u5206\u6790\u6570\u636e\uff0c\u5c31\u4e0d\u9700\u8981\u5bf9\u6570\u636e\u505a\u51fa\u8fc7\u591a\u89e3\u91ca\u3002\u5176\u4e2d\u4e00\u4e2a\u80fd\u540c\u65f6\u652f\u6301\u6570\u636e\u5448\u73b0\u548c\u7528\u6237\u4ea4\u4e92\u7684\u65b9\u5f0f\u5c31\u662f\u6784\u5efa\u4e00\u4e2a\u56fe\u5f62\u7528\u6237\u754c\u9762(GUI\uff0cGraphical User Interface)\uff0c\u5982\u56fe9-7\u6240\u793a\u3002", 
            "title": "5.1\u3001\u4f7f\u7528 Python \u7684 Tkinter \u5e93\u521b\u5efa GUI"
        }, 
        {
            "location": "/\u4e66\u7c4d/\u673a\u5668\u5b66\u4e60\u5b9e\u6218/09.\u6811\u56de\u5f52/#52-tkinter-gui", 
            "text": "Python \u6709\u5f88\u591a GUI \u6846\u67b6\uff0c\u5176\u4e2d\u4e00\u4e2a\u6613\u4e8e\u4f7f\u7528\u7684 Tkinter\uff0c\u662f\u968f Python \u7684\u6807\u51c6\u7248\u7f16\u8bd1\u7248\u672c\u53d1\u5e03\u7684\u3002Tkinter \u53ef\u4ee5\u5728 Windows\u3001Mac OS\u548c\u5927\u591a\u6570\u7684 Linux \u5e73\u53f0\u4e0a\u4f7f\u7528\u3002", 
            "title": "5.2\u3001\u7528 Tkinter \u521b\u5efa GUI"
        }, 
        {
            "location": "/\u4e66\u7c4d/\u673a\u5668\u5b66\u4e60\u5b9e\u6218/09.\u6811\u56de\u5f52/#53-matplotlib-tkinter", 
            "text": "MatPlotlib \u7684\u6784\u5efa\u7a0b\u5e8f\u5305\u542b\u4e00\u4e2a\u524d\u7aef\uff0c\u4e5f\u5c31\u662f\u9762\u5411\u7528\u6237\u7684\u4e00\u4e9b\u4ee3\u7801\uff0c\u5982 plot() \u548c scatter() \u65b9\u6cd5\u7b49\u3002\u4e8b\u5b9e\u4e0a\uff0c\u5b83\u540c\u65f6\u521b\u5efa\u4e86\u4e00\u4e2a\u540e\u7aef\uff0c\u7528\u4e8e\u5b9e\u73b0\u7ed8\u56fe\u548c\u4e0d\u540c\u5e94\u7528\u4e4b\u95f4\u63a5\u53e3\u3002  \u901a\u8fc7\u6539\u53d8\u540e\u7aef\u53ef\u4ee5\u5c06\u56fe\u50cf\u7ed8\u5236\u5728PNG\u3001PDF\u3001SVG\u7b49\u683c\u5f0f\u7684\u6587\u4ef6\u4e0a\u3002\u4e0b\u9762\u5c06\u8bbe\u7f6e\u540e\u7aef\u4e3a TkAgg (Agg \u662f\u4e00\u4e2a C++ \u7684\u5e93\uff0c\u53ef\u4ee5\u4ece\u56fe\u50cf\u521b\u5efa\u5149\u6805\u56fe)\u3002TkAgg\u53ef\u4ee5\u5728\u6240\u9009GUI\u6846\u67b6\u4e0a\u8c03\u7528Agg\uff0c\u628a Agg \u5448\u73b0\u5728\u753b\u5e03\u4e0a\u3002\u6211\u4eec\u53ef\u4ee5\u5728Tk\u7684GUI\u4e0a\u653e\u7f6e\u4e00\u4e2a\u753b\u5e03\uff0c\u5e76\u7528 .grid()\u6765\u8c03\u6574\u5e03\u5c40\u3002", 
            "title": "5.3\u3001\u96c6\u6210 Matplotlib \u548c Tkinter"
        }, 
        {
            "location": "/\u4e66\u7c4d/\u673a\u5668\u5b66\u4e60\u5b9e\u6218/09.\u6811\u56de\u5f52/#54treeexplore-gui", 
            "text": "\u5b8c\u6574\u4ee3\u7801\u5730\u5740 :  https://github.com/apachecn/MachineLearning/blob/master/src/python/9.RegTrees/treeExplore.py", 
            "title": "5.4\u3001\u7528treeExplore \u7684GUI\u6784\u5efa\u7684\u6a21\u578b\u6811\u793a\u4f8b\u56fe"
        }, 
        {
            "location": "/\u4e66\u7c4d/\u673a\u5668\u5b66\u4e60\u5b9e\u6218/09.\u6811\u56de\u5f52/#6", 
            "text": "\u6570\u636e\u96c6\u4e2d\u7ecf\u5e38\u5305\u542b\u4e00\u4e9b\u590d\u6742\u7684\u76f8\u5173\u5173\u7cfb\uff0c\u4f7f\u5f97\u8f93\u5165\u6570\u636e\u548c\u76ee\u6807\u53d8\u91cf\u4e4b\u95f4\u5448\u73b0\u975e\u7ebf\u6027\u5173\u7cfb\u3002\u5bf9\u8fd9\u4e9b\u590d\u6742\u7684\u5173\u7cfb\u5efa\u6a21\uff0c\u4e00\u79cd\u53ef\u884c\u7684\u65b9\u5f0f\u662f\u4f7f\u7528\u6811\u6765\u5bf9\u9884\u6d4b\u503c\u5206\u6bb5\uff0c\u5305\u62ec\u5206\u6bb5\u5e38\u6570\u6216\u5206\u6bb5\u76f4\u7ebf\u3002\u4e00\u822c\u91c7\u7528\u6811\u7ed3\u6784\u6765\u5bf9\u8fd9\u79cd\u6570\u636e\u5efa\u6a21\u3002\u76f8\u5e94\u5730\uff0c\u82e5\u53f6\u8282\u70b9\u4f7f\u7528\u7684\u6a21\u578b\u662f\u5206\u6bb5\u5e38\u6570\u5219\u79f0\u4e3a\u56de\u5f52\u6811\uff0c\u82e5\u53f6\u8282\u70b9\u4f7f\u7528\u7684\u6a21\u578b\u5e08\u7ebf\u6027\u56de\u5f52\u65b9\u7a0b\u5219\u79f0\u4e3a\u6a21\u578b\u6811\u3002  CART \u7b97\u6cd5\u53ef\u4ee5\u7528\u4e8e\u6784\u5efa\u4e8c\u5143\u6811\u5e76\u5904\u7406\u79bb\u6563\u578b\u6216\u8fde\u7eed\u578b\u6570\u636e\u7684\u5207\u5206\u3002\u82e5\u4f7f\u7528\u4e0d\u540c\u7684\u8bef\u5dee\u51c6\u5219\uff0c\u5c31\u53ef\u4ee5\u901a\u8fc7CART \u7b97\u6cd5\u6784\u5efa\u6a21\u578b\u6811\u548c\u56de\u5f52\u6811\u3002\u8be5\u7b97\u6cd5\u6784\u5efa\u51fa\u7684\u6811\u4f1a\u503e\u5411\u4e8e\u5bf9\u6570\u636e\u8fc7\u62df\u5408\u3002\u4e00\u68f5\u8fc7\u62df\u5408\u7684\u6811\u5e38\u5e38\u5341\u5206\u590d\u6742\uff0c\u526a\u679d\u6280\u672f\u7684\u51fa\u73b0\u5c31\u662f\u4e3a\u4e86\u89e3\u51b3\u8fd9\u4e2a\u95ee\u9898\u3002\u4e24\u79cd\u526a\u679d\u65b9\u6cd5\u5206\u522b\u662f\u9884\u526a\u679d\uff08\u5728\u6811\u7684\u6784\u5efa\u8fc7\u7a0b\u4e2d\u5c31\u8fdb\u884c\u526a\u679d\uff09\u548c\u540e\u526a\u679d\uff08\u5f53\u6811\u6784\u5efa\u5b8c\u6bd5\u518d\u8fdb\u884c\u526a\u679d\uff09\uff0c\u9884\u526a\u679d\u66f4\u6709\u6548\u4f46\u9700\u8981\u7528\u6237\u5b9a\u4e49\u4e00\u4e9b\u53c2\u6570\u3002  Tkinter \u662f Python \u7684\u4e00\u4e2a GUI \u5de5\u5177\u5305\u3002\u867d\u7136\u5e76\u4e0d\u662f\u552f\u4e00\u7684\u5305\uff0c\u4f46\u5b83\u6700\u5e38\u7528\u3002\u5229\u7528 Tkinter \uff0c\u6211\u4eec\u53ef\u4ee5\u8f7b\u8f7b\u677e\u677e\u7ed8\u5236\u5404\u79cd\u90e8\u4ef6\u5e76\u5b89\u6392\u5b83\u4eec\u7684\u4f4d\u7f6e\u3002\u53e6\u5916\uff0c\u53ef\u4ee5\u4e3a Tkinter \u6784\u9020\u4e00\u4e2a\u7279\u6b8a\u7684\u90e8\u4ef6\u6765\u663e\u793a Matplotlib \u7ed8\u51fa\u7684\u56fe\u3002\u6240\u4ee5\uff0cMatplotlib \u548c Tkinter \u7684\u96c6\u6210\u53ef\u4ee5\u6784\u5efa\u51fa\u66f4\u5f3a\u5927\u7684 GUI \uff0c\u7528\u6237\u53ef\u4ee5\u4ee5\u66f4\u81ea\u7136\u7684\u65b9\u5f0f\u6765\u63a2\u7d22\u673a\u5668\u5b66\u4e60\u7b97\u6cd5\u7684\u5965\u5999\u3002    \u4f5c\u8005\uff1a \u7247\u523b   \u5c0f\u7476  GitHub\u5730\u5740 :  https://github.com/apachecn/MachineLearning  \u7248\u6743\u58f0\u660e\uff1a\u6b22\u8fce\u8f6c\u8f7d\u5b66\u4e60 =  \u8bf7\u6807\u6ce8\u4fe1\u606f\u6765\u6e90\u4e8e  ApacheCN", 
            "title": "6\u3001\u6811\u56de\u5f52 \u5c0f\u7ed3"
        }, 
        {
            "location": "/\u4e66\u7c4d/\u673a\u5668\u5b66\u4e60\u5b9e\u6218/10.k-means\u805a\u7c7b/", 
            "text": "\u7b2c 10 \u7ae0 K-Means\uff08K-\u5747\u503c\uff09\u805a\u7c7b\u7b97\u6cd5\n\n\nK-Means \u7b97\u6cd5\n\n\n\u805a\u7c7b\u662f\u4e00\u79cd\u65e0\u76d1\u7763\u7684\u5b66\u4e60, \u5b83\u5c06\u76f8\u4f3c\u7684\u5bf9\u8c61\u5f52\u5230\u4e00\u4e2a\u7c07\u4e2d, \u5c06\u4e0d\u76f8\u4f3c\u5bf9\u8c61\u5f52\u5230\u4e0d\u540c\u7c07\u4e2d.\n\n\u76f8\u4f3c\u8fd9\u4e00\u6982\u5ff5\u53d6\u51b3\u4e8e\u6240\u9009\u62e9\u7684\u76f8\u4f3c\u5ea6\u8ba1\u7b97\u65b9\u6cd5.\n\nK-Means \u662f\u53d1\u73b0\u7ed9\u5b9a\u6570\u636e\u96c6\u7684 K \u4e2a\u7c07\u7684\u805a\u7c7b\u7b97\u6cd5, \u4e4b\u6240\u4ee5\u79f0\u4e4b\u4e3a \nK-\u5747\u503c\n \u662f\u56e0\u4e3a\u5b83\u53ef\u4ee5\u53d1\u73b0 K \u4e2a\u4e0d\u540c\u7684\u7c07, \u4e14\u6bcf\u4e2a\u7c07\u7684\u4e2d\u5fc3\u91c7\u7528\u7c07\u4e2d\u6240\u542b\u503c\u7684\u5747\u503c\u8ba1\u7b97\u800c\u6210.\n\n\u7c07\u4e2a\u6570 K \u662f\u7528\u6237\u6307\u5b9a\u7684, \u6bcf\u4e00\u4e2a\u7c07\u901a\u8fc7\u5176\u8d28\u5fc3\uff08centroid\uff09, \u5373\u7c07\u4e2d\u6240\u6709\u70b9\u7684\u4e2d\u5fc3\u6765\u63cf\u8ff0.\n\n\u805a\u7c7b\u4e0e\u5206\u7c7b\u7b97\u6cd5\u7684\u6700\u5927\u533a\u522b\u5728\u4e8e, \u5206\u7c7b\u7684\u76ee\u6807\u7c7b\u522b\u5df2\u77e5, \u800c\u805a\u7c7b\u7684\u76ee\u6807\u7c7b\u522b\u662f\u672a\u77e5\u7684.  \n\n\n\u4f18\u70b9: \u5bb9\u6613\u5b9e\u73b0\n\u7f3a\u70b9:\u53ef\u80fd\u6536\u655b\u5230\u5c40\u90e8\u6700\u5c0f\u503c, \u5728\u5927\u89c4\u6a21\u6570\u636e\u96c6\u4e0a\u6536\u655b\u8f83\u6162\n\u4f7f\u7528\u6570\u636e\u7c7b\u578b : \u6570\u503c\u578b\u6570\u636e\n\n\n\n\nK-Means \u573a\u666f\n\n\n\u4e3b\u8981\u7528\u6765\u805a\u7c7b, \u4f46\u662f\u7c7b\u522b\u662f\u672a\u77e5\u7684.\n\n\u4f8b\u5982: \u5bf9\u5730\u56fe\u4e0a\u7684\u70b9\u8fdb\u884c\u805a\u7c7b.\n\n\nK-Means \u672f\u8bed\n\n\n\n\n\u7c07: \u6240\u6709\u6570\u636e\u70b9\u70b9\u96c6\u5408\uff0c\u7c07\u4e2d\u7684\u5bf9\u8c61\u662f\u76f8\u4f3c\u7684\u3002\n\n\n\u8d28\u5fc3: \u7c07\u4e2d\u6240\u6709\u70b9\u7684\u4e2d\u5fc3\uff08\u8ba1\u7b97\u6240\u6709\u70b9\u7684\u5747\u503c\u800c\u6765\uff09.\n\n\nSSE: Sum of Sqared Error\uff08\u5e73\u65b9\u8bef\u5dee\u548c\uff09, SSE \u503c\u8d8a\u5c0f\uff0c\u8868\u793a\u8d8a\u63a5\u8fd1\u5b83\u4eec\u7684\u8d28\u5fc3. \u7531\u4e8e\u5bf9\u8bef\u5dee\u53d6\u4e86\u5e73\u65b9\uff0c\u56e0\u6b64\u66f4\u52a0\u6ce8\u91cd\u90a3\u4e48\u8fdc\u79bb\u4e2d\u5fc3\u7684\u70b9.\n\n\n\n\n\u6709\u5173 \n\u7c07\n \u548c \n\u8d28\u5fc3\n \u672f\u8bed\u66f4\u5f62\u8c61\u7684\u4ecb\u7ecd, \u8bf7\u53c2\u8003\u4e0b\u56fe:\n\n\n\n\nK-Means \u5de5\u4f5c\u6d41\u7a0b\n\n\n\n\n\u9996\u5148, \u968f\u673a\u786e\u5b9a K \u4e2a\u521d\u59cb\u70b9\u4f5c\u4e3a\u8d28\u5fc3\uff08\u4e0d\u662f\u6570\u636e\u4e2d\u7684\u70b9\uff09.\n\n\n\u7136\u540e\u5c06\u6570\u636e\u96c6\u4e2d\u7684\u6bcf\u4e2a\u70b9\u5206\u914d\u5230\u4e00\u4e2a\u7c07\u4e2d, \u5177\u4f53\u6765\u8bb2, \u5c31\u662f\u4e3a\u6bcf\u4e2a\u70b9\u627e\u5230\u8ddd\u5176\u6700\u8fd1\u7684\u8d28\u5fc3, \u5e76\u5c06\u5176\u5206\u914d\u8be5\u8d28\u5fc3\u6240\u5bf9\u5e94\u7684\u7c07. \u8fd9\u4e00\u6b65\u5b8c\u6210\u4e4b\u540e, \u6bcf\u4e2a\u7c07\u7684\u8d28\u5fc3\u66f4\u65b0\u4e3a\u8be5\u7c07\u6240\u6709\u70b9\u7684\u5e73\u5747\u503c.\n\n\n\n\n\u4e0a\u8ff0\u8fc7\u7a0b\u7684 \n\u4f2a\u4ee3\u7801\n \u5982\u4e0b:\n\n\n\n\n\u521b\u5efa k \u4e2a\u70b9\u4f5c\u4e3a\u8d77\u59cb\u8d28\u5fc3\uff08\u901a\u5e38\u662f\u968f\u673a\u9009\u62e9\uff09\n\n\n\u5f53\u4efb\u610f\u4e00\u4e2a\u70b9\u7684\u7c07\u5206\u914d\u7ed3\u679c\u53d1\u751f\u6539\u53d8\u65f6\n\n\n\u5bf9\u6570\u636e\u96c6\u4e2d\u7684\u6bcf\u4e2a\u6570\u636e\u70b9\n\n\n\u5bf9\u6bcf\u4e2a\u8d28\u5fc3\n\n\n\u8ba1\u7b97\u8d28\u5fc3\u4e0e\u6570\u636e\u70b9\u4e4b\u95f4\u7684\u8ddd\u79bb\n\n\n\n\n\n\n\u5c06\u6570\u636e\u70b9\u5206\u914d\u5230\u8ddd\u5176\u6700\u8fd1\u7684\u7c07\n\n\n\n\n\n\n\u5bf9\u6bcf\u4e00\u4e2a\u7c07, \u8ba1\u7b97\u7c07\u4e2d\u6240\u6709\u70b9\u7684\u5747\u503c\u5e76\u5c06\u5747\u503c\u4f5c\u4e3a\u8d28\u5fc3\n\n\n\n\n\n\n\n\nK-Means \u5f00\u53d1\u6d41\u7a0b\n\n\n\u6536\u96c6\u6570\u636e\uff1a\u4f7f\u7528\u4efb\u610f\u65b9\u6cd5\n\u51c6\u5907\u6570\u636e\uff1a\u9700\u8981\u6570\u503c\u578b\u6570\u636e\u7c7b\u8ba1\u7b97\u8ddd\u79bb, \u4e5f\u53ef\u4ee5\u5c06\u6807\u79f0\u578b\u6570\u636e\u6620\u5c04\u4e3a\u4e8c\u503c\u578b\u6570\u636e\u518d\u7528\u4e8e\u8ddd\u79bb\u8ba1\u7b97\n\u5206\u6790\u6570\u636e\uff1a\u4f7f\u7528\u4efb\u610f\u65b9\u6cd5\n\u8bad\u7ec3\u7b97\u6cd5\uff1a\u6b64\u6b65\u9aa4\u4e0d\u9002\u7528\u4e8e K-Means \u7b97\u6cd5\n\u6d4b\u8bd5\u7b97\u6cd5\uff1a\u5e94\u7528\u805a\u7c7b\u7b97\u6cd5\u3001\u89c2\u5bdf\u7ed3\u679c.\u53ef\u4ee5\u4f7f\u7528\u91cf\u5316\u7684\u8bef\u5dee\u6307\u6807\u5982\u8bef\u5dee\u5e73\u65b9\u548c\uff08\u540e\u9762\u4f1a\u4ecb\u7ecd\uff09\u6765\u8bc4\u4ef7\u7b97\u6cd5\u7684\u7ed3\u679c.\n\u4f7f\u7528\u7b97\u6cd5\uff1a\u53ef\u4ee5\u7528\u4e8e\u6240\u5e0c\u671b\u7684\u4efb\u4f55\u5e94\u7528.\u901a\u5e38\u60c5\u51b5\u4e0b, \u7c07\u8d28\u5fc3\u53ef\u4ee5\u4ee3\u8868\u6574\u4e2a\u7c07\u7684\u6570\u636e\u6765\u505a\u51fa\u51b3\u7b56.\n\n\n\n\nK-Means \u805a\u7c7b\u7b97\u6cd5\u51fd\u6570\n\n\n\u4ece\u6587\u4ef6\u52a0\u8f7d\u6570\u636e\u96c6\n\n\n# \u4ece\u6587\u672c\u4e2d\u6784\u5efa\u77e9\u9635\uff0c\u52a0\u8f7d\u6587\u672c\u6587\u4ef6\uff0c\u7136\u540e\u5904\u7406\n\n\ndef\n \nloadDataSet\n(\nfileName\n):\n    \n# \u901a\u7528\u51fd\u6570\uff0c\u7528\u6765\u89e3\u6790\u4ee5 tab \u952e\u5206\u9694\u7684 floats\uff08\u6d6e\u70b9\u6570\uff09\uff0c\u4f8b\u5982: 1.658985    4.285136\n\n    \ndataMat\n \n=\n \n[]\n\n    \nfr\n \n=\n \nopen\n(\nfileName\n)\n\n    \nfor\n \nline\n \nin\n \nfr\n.\nreadlines\n():\n\n        \ncurLine\n \n=\n \nline\n.\nstrip\n()\n.\nsplit\n(\n\\t\n)\n\n        \nfltLine\n \n=\n \nmap\n(\nfloat\n,\ncurLine\n)\n    \n# \u6620\u5c04\u6240\u6709\u7684\u5143\u7d20\u4e3a float\uff08\u6d6e\u70b9\u6570\uff09\u7c7b\u578b\n\n        \ndataMat\n.\nappend\n(\nfltLine\n)\n\n    \nreturn\n \ndataMat\n\n\n\n\n\n\u8ba1\u7b97\u4e24\u4e2a\u5411\u91cf\u7684\u6b27\u6c0f\u8ddd\u79bb\n\n\n# \u8ba1\u7b97\u4e24\u4e2a\u5411\u91cf\u7684\u6b27\u5f0f\u8ddd\u79bb\uff08\u53ef\u6839\u636e\u573a\u666f\u9009\u62e9\uff09\n\n\ndef\n \ndistEclud\n(\nvecA\n,\n \nvecB\n):\n\n    \nreturn\n \nsqrt\n(\nsum\n(\npower\n(\nvecA\n \n-\n \nvecB\n,\n \n2\n)))\n \n# la.norm(vecA-vecB)\n\n\n\n\n\n\u6784\u5efa\u4e00\u4e2a\u5305\u542b K \u4e2a\u968f\u673a\u8d28\u5fc3\u7684\u96c6\u5408\n\n\n# \u4e3a\u7ed9\u5b9a\u6570\u636e\u96c6\u6784\u5efa\u4e00\u4e2a\u5305\u542b k \u4e2a\u968f\u673a\u8d28\u5fc3\u7684\u96c6\u5408\u3002\u968f\u673a\u8d28\u5fc3\u5fc5\u987b\u8981\u5728\u6574\u4e2a\u6570\u636e\u96c6\u7684\u8fb9\u754c\u4e4b\u5185\uff0c\u8fd9\u53ef\u4ee5\u901a\u8fc7\u627e\u5230\u6570\u636e\u96c6\u6bcf\u4e00\u7ef4\u7684\u6700\u5c0f\u548c\u6700\u5927\u503c\u6765\u5b8c\u6210\u3002\u7136\u540e\u751f\u6210 0~1.0 \u4e4b\u95f4\u7684\u968f\u673a\u6570\u5e76\u901a\u8fc7\u53d6\u503c\u8303\u56f4\u548c\u6700\u5c0f\u503c\uff0c\u4ee5\u4fbf\u786e\u4fdd\u968f\u673a\u70b9\u5728\u6570\u636e\u7684\u8fb9\u754c\u4e4b\u5185\u3002\n\n\ndef\n \nrandCent\n(\ndataSet\n,\n \nk\n):\n\n    \nn\n \n=\n \nshape\n(\ndataSet\n)[\n1\n]\n \n# \u5217\u7684\u6570\u91cf\n\n    \ncentroids\n \n=\n \nmat\n(\nzeros\n((\nk\n,\nn\n)))\n \n# \u521b\u5efak\u4e2a\u8d28\u5fc3\u77e9\u9635\n\n    \nfor\n \nj\n \nin\n \nrange\n(\nn\n):\n \n# \u521b\u5efa\u968f\u673a\u7c07\u8d28\u5fc3\uff0c\u5e76\u4e14\u5728\u6bcf\u4e00\u7ef4\u7684\u8fb9\u754c\u5185\n\n        \nminJ\n \n=\n \nmin\n(\ndataSet\n[:,\nj\n])\n    \n# \u6700\u5c0f\u503c\n\n        \nrangeJ\n \n=\n \nfloat\n(\nmax\n(\ndataSet\n[:,\nj\n])\n \n-\n \nminJ\n)\n    \n# \u8303\u56f4 = \u6700\u5927\u503c - \u6700\u5c0f\u503c\n\n        \ncentroids\n[:,\nj\n]\n \n=\n \nmat\n(\nminJ\n \n+\n \nrangeJ\n \n*\n \nrandom\n.\nrand\n(\nk\n,\n1\n))\n    \n# \u968f\u673a\u751f\u6210\n\n    \nreturn\n \ncentroids\n\n\n\n\n\nK-Means \u805a\u7c7b\u7b97\u6cd5\n\n\n# k-means \u805a\u7c7b\u7b97\u6cd5\n\n\n# \u8be5\u7b97\u6cd5\u4f1a\u521b\u5efak\u4e2a\u8d28\u5fc3\uff0c\u7136\u540e\u5c06\u6bcf\u4e2a\u70b9\u5206\u914d\u5230\u6700\u8fd1\u7684\u8d28\u5fc3\uff0c\u518d\u91cd\u65b0\u8ba1\u7b97\u8d28\u5fc3\u3002\n\n\n# \u8fd9\u4e2a\u8fc7\u7a0b\u91cd\u590d\u6570\u6b21\uff0c\u76f4\u5230\u6570\u636e\u70b9\u7684\u7c07\u5206\u914d\u7ed3\u679c\u4e0d\u518d\u6539\u53d8\u4f4d\u7f6e\u3002\n\n\n# \u8fd0\u884c\u7ed3\u679c\uff08\u591a\u6b21\u8fd0\u884c\u7ed3\u679c\u53ef\u80fd\u4f1a\u4e0d\u4e00\u6837\uff0c\u53ef\u4ee5\u8bd5\u8bd5\uff0c\u539f\u56e0\u4e3a\u968f\u673a\u8d28\u5fc3\u7684\u5f71\u54cd\uff0c\u4f46\u603b\u7684\u7ed3\u679c\u662f\u5bf9\u7684\uff0c \u56e0\u4e3a\u6570\u636e\u8db3\u591f\u76f8\u4f3c\uff0c\u4e5f\u53ef\u80fd\u4f1a\u9677\u5165\u5c40\u90e8\u6700\u5c0f\u503c\uff09\n\n\ndef\n \nkMeans\n(\ndataSet\n,\n \nk\n,\n \ndistMeas\n=\ndistEclud\n,\n \ncreateCent\n=\nrandCent\n):\n\n    \nm\n \n=\n \nshape\n(\ndataSet\n)[\n0\n]\n    \n# \u884c\u6570\n\n    \nclusterAssment\n \n=\n \nmat\n(\nzeros\n((\nm\n,\n \n2\n)))\n    \n# \u521b\u5efa\u4e00\u4e2a\u4e0e dataSet \u884c\u6570\u4e00\u6837\uff0c\u4f46\u662f\u6709\u4e24\u5217\u7684\u77e9\u9635\uff0c\u7528\u6765\u4fdd\u5b58\u7c07\u5206\u914d\u7ed3\u679c\n\n    \ncentroids\n \n=\n \ncreateCent\n(\ndataSet\n,\n \nk\n)\n    \n# \u521b\u5efa\u8d28\u5fc3\uff0c\u968f\u673ak\u4e2a\u8d28\u5fc3\n\n    \nclusterChanged\n \n=\n \nTrue\n\n    \nwhile\n \nclusterChanged\n:\n\n        \nclusterChanged\n \n=\n \nFalse\n\n        \nfor\n \ni\n \nin\n \nrange\n(\nm\n):\n    \n# \u5faa\u73af\u6bcf\u4e00\u4e2a\u6570\u636e\u70b9\u5e76\u5206\u914d\u5230\u6700\u8fd1\u7684\u8d28\u5fc3\u4e2d\u53bb\n\n            \nminDist\n \n=\n \ninf\n;\n \nminIndex\n \n=\n \n-\n1\n\n            \nfor\n \nj\n \nin\n \nrange\n(\nk\n):\n\n                \ndistJI\n \n=\n \ndistMeas\n(\ncentroids\n[\nj\n,:],\ndataSet\n[\ni\n,:])\n    \n# \u8ba1\u7b97\u6570\u636e\u70b9\u5230\u8d28\u5fc3\u7684\u8ddd\u79bb\n\n                \nif\n \ndistJI\n \n \nminDist\n:\n    \n# \u5982\u679c\u8ddd\u79bb\u6bd4 minDist\uff08\u6700\u5c0f\u8ddd\u79bb\uff09\u8fd8\u5c0f\uff0c\u66f4\u65b0 minDist\uff08\u6700\u5c0f\u8ddd\u79bb\uff09\u548c\u6700\u5c0f\u8d28\u5fc3\u7684 index\uff08\u7d22\u5f15\uff09\n\n                    \nminDist\n \n=\n \ndistJI\n;\n \nminIndex\n \n=\n \nj\n\n            \nif\n \nclusterAssment\n[\ni\n,\n \n0\n]\n \n!=\n \nminIndex\n:\n    \n# \u7c07\u5206\u914d\u7ed3\u679c\u6539\u53d8\n\n                \nclusterChanged\n \n=\n \nTrue\n    \n# \u7c07\u6539\u53d8\n\n                \nclusterAssment\n[\ni\n,\n \n:]\n \n=\n \nminIndex\n,\nminDist\n**\n2\n    \n# \u66f4\u65b0\u7c07\u5206\u914d\u7ed3\u679c\u4e3a\u6700\u5c0f\u8d28\u5fc3\u7684 index\uff08\u7d22\u5f15\uff09\uff0cminDist\uff08\u6700\u5c0f\u8ddd\u79bb\uff09\u7684\u5e73\u65b9\n\n        \nprint\n \ncentroids\n\n        \nfor\n \ncent\n \nin\n \nrange\n(\nk\n):\n \n# \u66f4\u65b0\u8d28\u5fc3\n\n            \nptsInClust\n \n=\n \ndataSet\n[\nnonzero\n(\nclusterAssment\n[:,\n \n0\n]\n.\nA\n==\ncent\n)[\n0\n]]\n \n# \u83b7\u53d6\u8be5\u7c07\u4e2d\u7684\u6240\u6709\u70b9\n\n            \ncentroids\n[\ncent\n,:]\n \n=\n \nmean\n(\nptsInClust\n,\n \naxis\n=\n0\n)\n \n# \u5c06\u8d28\u5fc3\u4fee\u6539\u4e3a\u7c07\u4e2d\u6240\u6709\u70b9\u7684\u5e73\u5747\u503c\uff0cmean \u5c31\u662f\u6c42\u5e73\u5747\u503c\u7684\n\n    \nreturn\n \ncentroids\n,\n \nclusterAssment\n\n\n\n\n\n\u6d4b\u8bd5\u51fd\u6570\n\n\n\n\n\u6d4b\u8bd5\u4e00\u4e0b\u4ee5\u4e0a\u7684\u57fa\u7840\u51fd\u6570\u662f\u5426\u53ef\u4ee5\u5982\u9884\u671f\u8fd0\u884c, \u8bf7\u770b: \nhttps://github.com/apachecn/MachineLearning/blob/master/src/python/10.kmeans/kMeans.py\n\n\n\u6d4b\u8bd5\u4e00\u4e0b kMeans \u51fd\u6570\u662f\u5426\u53ef\u4ee5\u5982\u9884\u671f\u8fd0\u884c, \u8bf7\u770b: \nhttps://github.com/apachecn/MachineLearning/blob/master/src/python/10.kmeans/kMeans.py\n \n\n\n\n\n\u53c2\u8003\u8fd0\u884c\u7ed3\u679c\u5982\u4e0b:\n\n\n\n\n\n\n\u5728 kMeans \u7684\u51fd\u6570\u6d4b\u8bd5\u4e2d\uff0c\u53ef\u80fd\u5076\u5c14\u4f1a\u9677\u5165\u5c40\u90e8\u6700\u5c0f\u503c\uff08\u5c40\u90e8\u6700\u4f18\u7684\u7ed3\u679c\uff0c\u4f46\u4e0d\u662f\u5168\u5c40\u6700\u4f18\u7684\u7ed3\u679c\uff09.\n\n\n\n\nK-Means \u805a\u7c7b\u7b97\u6cd5\u7684\u7f3a\u9677\n\n\n\u5728 kMeans \u7684\u51fd\u6570\u6d4b\u8bd5\u4e2d\uff0c\u53ef\u80fd\u5076\u5c14\u4f1a\u9677\u5165\u5c40\u90e8\u6700\u5c0f\u503c\uff08\u5c40\u90e8\u6700\u4f18\u7684\u7ed3\u679c\uff0c\u4f46\u4e0d\u662f\u5168\u5c40\u6700\u4f18\u7684\u7ed3\u679c\uff09. \n\n\u5c40\u90e8\u6700\u5c0f\u503c\u7684\u7684\u60c5\u51b5\u5982\u4e0b:\n\n\n\n\n\u6240\u4ee5\u4e3a\u4e86\u514b\u670d KMeans \u7b97\u6cd5\u6536\u655b\u4e8e\u5c40\u90e8\u6700\u5c0f\u503c\u7684\u95ee\u9898\uff0c\u6709\u66f4\u5389\u5bb3\u7684\u5927\u4f6c\u63d0\u51fa\u4e86\u53e6\u4e00\u4e2a\u79f0\u4e4b\u4e3a\u4e8c\u5206K-\u5747\u503c\uff08bisecting K-Means\uff09\u7684\u7b97\u6cd5.   \n\n\n\u4e8c\u5206 K-Means \u805a\u7c7b\u7b97\u6cd5\n\n\n\u8be5\u7b97\u6cd5\u9996\u5148\u5c06\u6240\u6709\u70b9\u4f5c\u4e3a\u4e00\u4e2a\u7c07\uff0c\u7136\u540e\u5c06\u8be5\u7c07\u4e00\u5206\u4e3a\u4e8c\u3002\n\n\u4e4b\u540e\u9009\u62e9\u5176\u4e2d\u4e00\u4e2a\u7c07\u7ee7\u7eed\u8fdb\u884c\u5212\u5206\uff0c\u9009\u62e9\u54ea\u4e00\u4e2a\u7c07\u8fdb\u884c\u5212\u5206\u53d6\u51b3\u4e8e\u5bf9\u5176\u5212\u5206\u65f6\u5019\u53ef\u4ee5\u6700\u5927\u7a0b\u5ea6\u964d\u4f4e SSE\uff08\u5e73\u65b9\u548c\u8bef\u5dee\uff09\u7684\u503c\u3002\n\n\u4e0a\u8ff0\u57fa\u4e8e SSE \u7684\u5212\u5206\u8fc7\u7a0b\u4e0d\u65ad\u91cd\u590d\uff0c\u76f4\u5230\u5f97\u5230\u7528\u6237\u6307\u5b9a\u7684\u7c07\u6570\u76ee\u4e3a\u6b62\u3002  \n\n\n\u4e8c\u5206 K-Means \u805a\u7c7b\u7b97\u6cd5\u4f2a\u4ee3\u7801\n\n\n\n\n\u5c06\u6240\u6709\u70b9\u770b\u6210\u4e00\u4e2a\u7c07\n\n\n\u5f53\u7c07\u6570\u76ee\u5c0f\u96e8 k \u65f6\n\n\n\u5bf9\u4e8e\u6bcf\u4e00\u4e2a\u7c07\n\n\n\u8ba1\u7b97\u603b\u8bef\u5dee\n\n\n\u5728\u7ed9\u5b9a\u7684\u7c07\u4e0a\u9762\u8fdb\u884c KMeans \u805a\u7c7b\uff08k=2\uff09\n\n\n\u8ba1\u7b97\u5c06\u8be5\u7c07\u4e00\u5206\u4e3a\u4e8c\u4e4b\u540e\u7684\u603b\u8bef\u5dee\n\n\n\n\n\n\n\u9009\u62e9\u4f7f\u5f97\u8bef\u5dee\u6700\u5c0f\u7684\u90a3\u4e2a\u7c07\u8fdb\u884c\u5212\u5206\u64cd\u4f5c\n\n\n\n\n\u53e6\u4e00\u79cd\u505a\u6cd5\u662f\u9009\u62e9 SSE \u6700\u5927\u7684\u7c07\u8fdb\u884c\u5212\u5206\uff0c\u76f4\u5230\u7c07\u6570\u76ee\u8fbe\u5230\u7528\u6237\u6307\u5b9a\u7684\u6570\u76ee\u4f4d\u7f6e\u3002\n\u63a5\u4e0b\u6765\u4e3b\u8981\u4ecb\u7ecd\u8be5\u505a\u6cd5\u3002\n\n\n\u4e8c\u5206 K-Means \u805a\u7c7b\u7b97\u6cd5\u4ee3\u7801\n\n\n# \u4e8c\u5206 KMeans \u805a\u7c7b\u7b97\u6cd5, \u57fa\u4e8e kMeans \u57fa\u7840\u4e4b\u4e0a\u7684\u4f18\u5316\uff0c\u4ee5\u907f\u514d\u9677\u5165\u5c40\u90e8\u6700\u5c0f\u503c\n\n\ndef\n \nbiKMeans\n(\ndataSet\n,\n \nk\n,\n \ndistMeas\n=\ndistEclud\n):\n\n    \nm\n \n=\n \nshape\n(\ndataSet\n)[\n0\n]\n\n    \nclusterAssment\n \n=\n \nmat\n(\nzeros\n((\nm\n,\n2\n)))\n \n# \u4fdd\u5b58\u6bcf\u4e2a\u6570\u636e\u70b9\u7684\u7c07\u5206\u914d\u7ed3\u679c\u548c\u5e73\u65b9\u8bef\u5dee\n\n    \ncentroid0\n \n=\n \nmean\n(\ndataSet\n,\n \naxis\n=\n0\n)\n.\ntolist\n()[\n0\n]\n \n# \u8d28\u5fc3\u521d\u59cb\u5316\u4e3a\u6240\u6709\u6570\u636e\u70b9\u7684\u5747\u503c\n\n    \ncentList\n \n=\n[\ncentroid0\n]\n \n# \u521d\u59cb\u5316\u53ea\u6709 1 \u4e2a\u8d28\u5fc3\u7684 list\n\n    \nfor\n \nj\n \nin\n \nrange\n(\nm\n):\n \n# \u8ba1\u7b97\u6240\u6709\u6570\u636e\u70b9\u5230\u521d\u59cb\u8d28\u5fc3\u7684\u8ddd\u79bb\u5e73\u65b9\u8bef\u5dee\n\n        \nclusterAssment\n[\nj\n,\n1\n]\n \n=\n \ndistMeas\n(\nmat\n(\ncentroid0\n),\n \ndataSet\n[\nj\n,:])\n**\n2\n\n    \nwhile\n \n(\nlen\n(\ncentList\n)\n \n \nk\n):\n \n# \u5f53\u8d28\u5fc3\u6570\u91cf\u5c0f\u4e8e k \u65f6\n\n        \nlowestSSE\n \n=\n \ninf\n\n        \nfor\n \ni\n \nin\n \nrange\n(\nlen\n(\ncentList\n)):\n \n# \u5bf9\u6bcf\u4e00\u4e2a\u8d28\u5fc3\n\n            \nptsInCurrCluster\n \n=\n \ndataSet\n[\nnonzero\n(\nclusterAssment\n[:,\n0\n]\n.\nA\n==\ni\n)[\n0\n],:]\n \n# \u83b7\u53d6\u5f53\u524d\u7c07 i \u4e0b\u7684\u6240\u6709\u6570\u636e\u70b9\n\n            \ncentroidMat\n,\n \nsplitClustAss\n \n=\n \nkMeans\n(\nptsInCurrCluster\n,\n \n2\n,\n \ndistMeas\n)\n \n# \u5c06\u5f53\u524d\u7c07 i \u8fdb\u884c\u4e8c\u5206 kMeans \u5904\u7406\n\n            \nsseSplit\n \n=\n \nsum\n(\nsplitClustAss\n[:,\n1\n])\n \n# \u5c06\u4e8c\u5206 kMeans \u7ed3\u679c\u4e2d\u7684\u5e73\u65b9\u548c\u7684\u8ddd\u79bb\u8fdb\u884c\u6c42\u548c\n\n            \nsseNotSplit\n \n=\n \nsum\n(\nclusterAssment\n[\nnonzero\n(\nclusterAssment\n[:,\n0\n]\n.\nA\n!=\ni\n)[\n0\n],\n1\n])\n \n# \u5c06\u672a\u53c2\u4e0e\u4e8c\u5206 kMeans \u5206\u914d\u7ed3\u679c\u4e2d\u7684\u5e73\u65b9\u548c\u7684\u8ddd\u79bb\u8fdb\u884c\u6c42\u548c\n\n            \nprint\n \nsseSplit, and notSplit: \n,\nsseSplit\n,\nsseNotSplit\n\n            \nif\n \n(\nsseSplit\n \n+\n \nsseNotSplit\n)\n \n \nlowestSSE\n:\n \n# \u603b\u7684\uff08\u672a\u62c6\u5206\u548c\u5df2\u62c6\u5206\uff09\u8bef\u5dee\u548c\u8d8a\u5c0f\uff0c\u8d8a\u76f8\u4f3c\uff0c\u6548\u679c\u8d8a\u4f18\u5316\uff0c\u5212\u5206\u7684\u7ed3\u679c\u66f4\u597d\uff08\u6ce8\u610f\uff1a\u8fd9\u91cc\u7684\u7406\u89e3\u5f88\u91cd\u8981\uff0c\u4e0d\u660e\u767d\u7684\u5730\u65b9\u53ef\u4ee5\u548c\u6211\u4eec\u4e00\u8d77\u8ba8\u8bba\uff09\n\n                \nbestCentToSplit\n \n=\n \ni\n\n                \nbestNewCents\n \n=\n \ncentroidMat\n\n                \nbestClustAss\n \n=\n \nsplitClustAss\n.\ncopy\n()\n\n                \nlowestSSE\n \n=\n \nsseSplit\n \n+\n \nsseNotSplit\n\n        \n# \u627e\u51fa\u6700\u597d\u7684\u7c07\u5206\u914d\u7ed3\u679c    \n\n        \nbestClustAss\n[\nnonzero\n(\nbestClustAss\n[:,\n0\n]\n.\nA\n \n==\n \n1\n)[\n0\n],\n0\n]\n \n=\n \nlen\n(\ncentList\n)\n \n# \u8c03\u7528\u4e8c\u5206 kMeans \u7684\u7ed3\u679c\uff0c\u9ed8\u8ba4\u7c07\u662f 0,1. \u5f53\u7136\u4e5f\u53ef\u4ee5\u6539\u6210\u5176\u5b83\u7684\u6570\u5b57\n\n        \nbestClustAss\n[\nnonzero\n(\nbestClustAss\n[:,\n0\n]\n.\nA\n \n==\n \n0\n)[\n0\n],\n0\n]\n \n=\n \nbestCentToSplit\n \n# \u66f4\u65b0\u4e3a\u6700\u4f73\u8d28\u5fc3\n\n        \nprint\n \nthe bestCentToSplit is: \n,\nbestCentToSplit\n\n        \nprint\n \nthe len of bestClustAss is: \n,\n \nlen\n(\nbestClustAss\n)\n\n        \n# \u66f4\u65b0\u8d28\u5fc3\u5217\u8868\n\n        \ncentList\n[\nbestCentToSplit\n]\n \n=\n \nbestNewCents\n[\n0\n,:]\n.\ntolist\n()[\n0\n]\n \n# \u66f4\u65b0\u539f\u8d28\u5fc3 list \u4e2d\u7684\u7b2c i \u4e2a\u8d28\u5fc3\u4e3a\u4f7f\u7528\u4e8c\u5206 kMeans \u540e bestNewCents \u7684\u7b2c\u4e00\u4e2a\u8d28\u5fc3\n\n        \ncentList\n.\nappend\n(\nbestNewCents\n[\n1\n,:]\n.\ntolist\n()[\n0\n])\n \n# \u6dfb\u52a0 bestNewCents \u7684\u7b2c\u4e8c\u4e2a\u8d28\u5fc3\n\n        \nclusterAssment\n[\nnonzero\n(\nclusterAssment\n[:,\n0\n]\n.\nA\n \n==\n \nbestCentToSplit\n)[\n0\n],:]\n=\n \nbestClustAss\n \n# \u91cd\u65b0\u5206\u914d\u6700\u597d\u7c07\u4e0b\u7684\u6570\u636e\uff08\u8d28\u5fc3\uff09\u4ee5\u53caSSE\n\n    \nreturn\n \nmat\n(\ncentList\n),\n \nclusterAssment\n\n\n\n\n\n\u6d4b\u8bd5\u4e8c\u5206 KMeans \u805a\u7c7b\u7b97\u6cd5\n\n\n\n\n\u6d4b\u8bd5\u4e00\u4e0b\u4e8c\u5206 KMeans \u805a\u7c7b\u7b97\u6cd5\uff0c\u8bf7\u770b: \nhttps://github.com/apachecn/MachineLearning/blob/master/src/python/10.kmeans/kMeans.py\n\n\n\n\n\u4e0a\u8ff0\u51fd\u6570\u53ef\u4ee5\u8fd0\u884c\u591a\u6b21\uff0c\u805a\u7c7b\u4f1a\u6536\u655b\u5230\u5168\u5c40\u6700\u5c0f\u503c\uff0c\u800c\u539f\u59cb\u7684 kMeans() \u51fd\u6570\u5076\u5c14\u4f1a\u9677\u5165\u5c40\u90e8\u6700\u5c0f\u503c\u3002\n\n\u8fd0\u884c\u53c2\u8003\u7ed3\u679c\u5982\u4e0b:\n\n\n\n\n\n\n\u4f5c\u8005\uff1a\n\u90a3\u4f0a\u62b9\u5fae\u7b11\n\n\nGitHub\u5730\u5740\n: \nhttps://github.com/apachecn/MachineLearning\n\n\n\u7248\u6743\u58f0\u660e\uff1a\u6b22\u8fce\u8f6c\u8f7d\u5b66\u4e60 =\n \u8bf7\u6807\u6ce8\u4fe1\u606f\u6765\u6e90\u4e8e \nApacheCN", 
            "title": "10.k-means\u805a\u7c7b"
        }, 
        {
            "location": "/\u4e66\u7c4d/\u673a\u5668\u5b66\u4e60\u5b9e\u6218/10.k-means\u805a\u7c7b/#10-k-meansk-", 
            "text": "", 
            "title": "\u7b2c 10 \u7ae0 K-Means\uff08K-\u5747\u503c\uff09\u805a\u7c7b\u7b97\u6cd5"
        }, 
        {
            "location": "/\u4e66\u7c4d/\u673a\u5668\u5b66\u4e60\u5b9e\u6218/10.k-means\u805a\u7c7b/#k-means", 
            "text": "\u805a\u7c7b\u662f\u4e00\u79cd\u65e0\u76d1\u7763\u7684\u5b66\u4e60, \u5b83\u5c06\u76f8\u4f3c\u7684\u5bf9\u8c61\u5f52\u5230\u4e00\u4e2a\u7c07\u4e2d, \u5c06\u4e0d\u76f8\u4f3c\u5bf9\u8c61\u5f52\u5230\u4e0d\u540c\u7c07\u4e2d. \n\u76f8\u4f3c\u8fd9\u4e00\u6982\u5ff5\u53d6\u51b3\u4e8e\u6240\u9009\u62e9\u7684\u76f8\u4f3c\u5ea6\u8ba1\u7b97\u65b9\u6cd5. \nK-Means \u662f\u53d1\u73b0\u7ed9\u5b9a\u6570\u636e\u96c6\u7684 K \u4e2a\u7c07\u7684\u805a\u7c7b\u7b97\u6cd5, \u4e4b\u6240\u4ee5\u79f0\u4e4b\u4e3a  K-\u5747\u503c  \u662f\u56e0\u4e3a\u5b83\u53ef\u4ee5\u53d1\u73b0 K \u4e2a\u4e0d\u540c\u7684\u7c07, \u4e14\u6bcf\u4e2a\u7c07\u7684\u4e2d\u5fc3\u91c7\u7528\u7c07\u4e2d\u6240\u542b\u503c\u7684\u5747\u503c\u8ba1\u7b97\u800c\u6210. \n\u7c07\u4e2a\u6570 K \u662f\u7528\u6237\u6307\u5b9a\u7684, \u6bcf\u4e00\u4e2a\u7c07\u901a\u8fc7\u5176\u8d28\u5fc3\uff08centroid\uff09, \u5373\u7c07\u4e2d\u6240\u6709\u70b9\u7684\u4e2d\u5fc3\u6765\u63cf\u8ff0. \n\u805a\u7c7b\u4e0e\u5206\u7c7b\u7b97\u6cd5\u7684\u6700\u5927\u533a\u522b\u5728\u4e8e, \u5206\u7c7b\u7684\u76ee\u6807\u7c7b\u522b\u5df2\u77e5, \u800c\u805a\u7c7b\u7684\u76ee\u6807\u7c7b\u522b\u662f\u672a\u77e5\u7684.    \u4f18\u70b9: \u5bb9\u6613\u5b9e\u73b0\n\u7f3a\u70b9:\u53ef\u80fd\u6536\u655b\u5230\u5c40\u90e8\u6700\u5c0f\u503c, \u5728\u5927\u89c4\u6a21\u6570\u636e\u96c6\u4e0a\u6536\u655b\u8f83\u6162\n\u4f7f\u7528\u6570\u636e\u7c7b\u578b : \u6570\u503c\u578b\u6570\u636e", 
            "title": "K-Means \u7b97\u6cd5"
        }, 
        {
            "location": "/\u4e66\u7c4d/\u673a\u5668\u5b66\u4e60\u5b9e\u6218/10.k-means\u805a\u7c7b/#k-means_1", 
            "text": "\u4e3b\u8981\u7528\u6765\u805a\u7c7b, \u4f46\u662f\u7c7b\u522b\u662f\u672a\u77e5\u7684. \n\u4f8b\u5982: \u5bf9\u5730\u56fe\u4e0a\u7684\u70b9\u8fdb\u884c\u805a\u7c7b.", 
            "title": "K-Means \u573a\u666f"
        }, 
        {
            "location": "/\u4e66\u7c4d/\u673a\u5668\u5b66\u4e60\u5b9e\u6218/10.k-means\u805a\u7c7b/#k-means_2", 
            "text": "\u7c07: \u6240\u6709\u6570\u636e\u70b9\u70b9\u96c6\u5408\uff0c\u7c07\u4e2d\u7684\u5bf9\u8c61\u662f\u76f8\u4f3c\u7684\u3002  \u8d28\u5fc3: \u7c07\u4e2d\u6240\u6709\u70b9\u7684\u4e2d\u5fc3\uff08\u8ba1\u7b97\u6240\u6709\u70b9\u7684\u5747\u503c\u800c\u6765\uff09.  SSE: Sum of Sqared Error\uff08\u5e73\u65b9\u8bef\u5dee\u548c\uff09, SSE \u503c\u8d8a\u5c0f\uff0c\u8868\u793a\u8d8a\u63a5\u8fd1\u5b83\u4eec\u7684\u8d28\u5fc3. \u7531\u4e8e\u5bf9\u8bef\u5dee\u53d6\u4e86\u5e73\u65b9\uff0c\u56e0\u6b64\u66f4\u52a0\u6ce8\u91cd\u90a3\u4e48\u8fdc\u79bb\u4e2d\u5fc3\u7684\u70b9.   \u6709\u5173  \u7c07  \u548c  \u8d28\u5fc3  \u672f\u8bed\u66f4\u5f62\u8c61\u7684\u4ecb\u7ecd, \u8bf7\u53c2\u8003\u4e0b\u56fe:", 
            "title": "K-Means \u672f\u8bed"
        }, 
        {
            "location": "/\u4e66\u7c4d/\u673a\u5668\u5b66\u4e60\u5b9e\u6218/10.k-means\u805a\u7c7b/#k-means_3", 
            "text": "\u9996\u5148, \u968f\u673a\u786e\u5b9a K \u4e2a\u521d\u59cb\u70b9\u4f5c\u4e3a\u8d28\u5fc3\uff08\u4e0d\u662f\u6570\u636e\u4e2d\u7684\u70b9\uff09.  \u7136\u540e\u5c06\u6570\u636e\u96c6\u4e2d\u7684\u6bcf\u4e2a\u70b9\u5206\u914d\u5230\u4e00\u4e2a\u7c07\u4e2d, \u5177\u4f53\u6765\u8bb2, \u5c31\u662f\u4e3a\u6bcf\u4e2a\u70b9\u627e\u5230\u8ddd\u5176\u6700\u8fd1\u7684\u8d28\u5fc3, \u5e76\u5c06\u5176\u5206\u914d\u8be5\u8d28\u5fc3\u6240\u5bf9\u5e94\u7684\u7c07. \u8fd9\u4e00\u6b65\u5b8c\u6210\u4e4b\u540e, \u6bcf\u4e2a\u7c07\u7684\u8d28\u5fc3\u66f4\u65b0\u4e3a\u8be5\u7c07\u6240\u6709\u70b9\u7684\u5e73\u5747\u503c.   \u4e0a\u8ff0\u8fc7\u7a0b\u7684  \u4f2a\u4ee3\u7801  \u5982\u4e0b:   \u521b\u5efa k \u4e2a\u70b9\u4f5c\u4e3a\u8d77\u59cb\u8d28\u5fc3\uff08\u901a\u5e38\u662f\u968f\u673a\u9009\u62e9\uff09  \u5f53\u4efb\u610f\u4e00\u4e2a\u70b9\u7684\u7c07\u5206\u914d\u7ed3\u679c\u53d1\u751f\u6539\u53d8\u65f6  \u5bf9\u6570\u636e\u96c6\u4e2d\u7684\u6bcf\u4e2a\u6570\u636e\u70b9  \u5bf9\u6bcf\u4e2a\u8d28\u5fc3  \u8ba1\u7b97\u8d28\u5fc3\u4e0e\u6570\u636e\u70b9\u4e4b\u95f4\u7684\u8ddd\u79bb    \u5c06\u6570\u636e\u70b9\u5206\u914d\u5230\u8ddd\u5176\u6700\u8fd1\u7684\u7c07    \u5bf9\u6bcf\u4e00\u4e2a\u7c07, \u8ba1\u7b97\u7c07\u4e2d\u6240\u6709\u70b9\u7684\u5747\u503c\u5e76\u5c06\u5747\u503c\u4f5c\u4e3a\u8d28\u5fc3", 
            "title": "K-Means \u5de5\u4f5c\u6d41\u7a0b"
        }, 
        {
            "location": "/\u4e66\u7c4d/\u673a\u5668\u5b66\u4e60\u5b9e\u6218/10.k-means\u805a\u7c7b/#k-means_4", 
            "text": "\u6536\u96c6\u6570\u636e\uff1a\u4f7f\u7528\u4efb\u610f\u65b9\u6cd5\n\u51c6\u5907\u6570\u636e\uff1a\u9700\u8981\u6570\u503c\u578b\u6570\u636e\u7c7b\u8ba1\u7b97\u8ddd\u79bb, \u4e5f\u53ef\u4ee5\u5c06\u6807\u79f0\u578b\u6570\u636e\u6620\u5c04\u4e3a\u4e8c\u503c\u578b\u6570\u636e\u518d\u7528\u4e8e\u8ddd\u79bb\u8ba1\u7b97\n\u5206\u6790\u6570\u636e\uff1a\u4f7f\u7528\u4efb\u610f\u65b9\u6cd5\n\u8bad\u7ec3\u7b97\u6cd5\uff1a\u6b64\u6b65\u9aa4\u4e0d\u9002\u7528\u4e8e K-Means \u7b97\u6cd5\n\u6d4b\u8bd5\u7b97\u6cd5\uff1a\u5e94\u7528\u805a\u7c7b\u7b97\u6cd5\u3001\u89c2\u5bdf\u7ed3\u679c.\u53ef\u4ee5\u4f7f\u7528\u91cf\u5316\u7684\u8bef\u5dee\u6307\u6807\u5982\u8bef\u5dee\u5e73\u65b9\u548c\uff08\u540e\u9762\u4f1a\u4ecb\u7ecd\uff09\u6765\u8bc4\u4ef7\u7b97\u6cd5\u7684\u7ed3\u679c.\n\u4f7f\u7528\u7b97\u6cd5\uff1a\u53ef\u4ee5\u7528\u4e8e\u6240\u5e0c\u671b\u7684\u4efb\u4f55\u5e94\u7528.\u901a\u5e38\u60c5\u51b5\u4e0b, \u7c07\u8d28\u5fc3\u53ef\u4ee5\u4ee3\u8868\u6574\u4e2a\u7c07\u7684\u6570\u636e\u6765\u505a\u51fa\u51b3\u7b56.", 
            "title": "K-Means \u5f00\u53d1\u6d41\u7a0b"
        }, 
        {
            "location": "/\u4e66\u7c4d/\u673a\u5668\u5b66\u4e60\u5b9e\u6218/10.k-means\u805a\u7c7b/#k-means_5", 
            "text": "", 
            "title": "K-Means \u805a\u7c7b\u7b97\u6cd5\u51fd\u6570"
        }, 
        {
            "location": "/\u4e66\u7c4d/\u673a\u5668\u5b66\u4e60\u5b9e\u6218/10.k-means\u805a\u7c7b/#_1", 
            "text": "# \u4ece\u6587\u672c\u4e2d\u6784\u5efa\u77e9\u9635\uff0c\u52a0\u8f7d\u6587\u672c\u6587\u4ef6\uff0c\u7136\u540e\u5904\u7406  def   loadDataSet ( fileName ):      # \u901a\u7528\u51fd\u6570\uff0c\u7528\u6765\u89e3\u6790\u4ee5 tab \u952e\u5206\u9694\u7684 floats\uff08\u6d6e\u70b9\u6570\uff09\uff0c\u4f8b\u5982: 1.658985    4.285136 \n     dataMat   =   [] \n     fr   =   open ( fileName ) \n     for   line   in   fr . readlines (): \n         curLine   =   line . strip () . split ( \\t ) \n         fltLine   =   map ( float , curLine )      # \u6620\u5c04\u6240\u6709\u7684\u5143\u7d20\u4e3a float\uff08\u6d6e\u70b9\u6570\uff09\u7c7b\u578b \n         dataMat . append ( fltLine ) \n     return   dataMat", 
            "title": "\u4ece\u6587\u4ef6\u52a0\u8f7d\u6570\u636e\u96c6"
        }, 
        {
            "location": "/\u4e66\u7c4d/\u673a\u5668\u5b66\u4e60\u5b9e\u6218/10.k-means\u805a\u7c7b/#_2", 
            "text": "# \u8ba1\u7b97\u4e24\u4e2a\u5411\u91cf\u7684\u6b27\u5f0f\u8ddd\u79bb\uff08\u53ef\u6839\u636e\u573a\u666f\u9009\u62e9\uff09  def   distEclud ( vecA ,   vecB ): \n     return   sqrt ( sum ( power ( vecA   -   vecB ,   2 )))   # la.norm(vecA-vecB)", 
            "title": "\u8ba1\u7b97\u4e24\u4e2a\u5411\u91cf\u7684\u6b27\u6c0f\u8ddd\u79bb"
        }, 
        {
            "location": "/\u4e66\u7c4d/\u673a\u5668\u5b66\u4e60\u5b9e\u6218/10.k-means\u805a\u7c7b/#k", 
            "text": "# \u4e3a\u7ed9\u5b9a\u6570\u636e\u96c6\u6784\u5efa\u4e00\u4e2a\u5305\u542b k \u4e2a\u968f\u673a\u8d28\u5fc3\u7684\u96c6\u5408\u3002\u968f\u673a\u8d28\u5fc3\u5fc5\u987b\u8981\u5728\u6574\u4e2a\u6570\u636e\u96c6\u7684\u8fb9\u754c\u4e4b\u5185\uff0c\u8fd9\u53ef\u4ee5\u901a\u8fc7\u627e\u5230\u6570\u636e\u96c6\u6bcf\u4e00\u7ef4\u7684\u6700\u5c0f\u548c\u6700\u5927\u503c\u6765\u5b8c\u6210\u3002\u7136\u540e\u751f\u6210 0~1.0 \u4e4b\u95f4\u7684\u968f\u673a\u6570\u5e76\u901a\u8fc7\u53d6\u503c\u8303\u56f4\u548c\u6700\u5c0f\u503c\uff0c\u4ee5\u4fbf\u786e\u4fdd\u968f\u673a\u70b9\u5728\u6570\u636e\u7684\u8fb9\u754c\u4e4b\u5185\u3002  def   randCent ( dataSet ,   k ): \n     n   =   shape ( dataSet )[ 1 ]   # \u5217\u7684\u6570\u91cf \n     centroids   =   mat ( zeros (( k , n )))   # \u521b\u5efak\u4e2a\u8d28\u5fc3\u77e9\u9635 \n     for   j   in   range ( n ):   # \u521b\u5efa\u968f\u673a\u7c07\u8d28\u5fc3\uff0c\u5e76\u4e14\u5728\u6bcf\u4e00\u7ef4\u7684\u8fb9\u754c\u5185 \n         minJ   =   min ( dataSet [:, j ])      # \u6700\u5c0f\u503c \n         rangeJ   =   float ( max ( dataSet [:, j ])   -   minJ )      # \u8303\u56f4 = \u6700\u5927\u503c - \u6700\u5c0f\u503c \n         centroids [:, j ]   =   mat ( minJ   +   rangeJ   *   random . rand ( k , 1 ))      # \u968f\u673a\u751f\u6210 \n     return   centroids", 
            "title": "\u6784\u5efa\u4e00\u4e2a\u5305\u542b K \u4e2a\u968f\u673a\u8d28\u5fc3\u7684\u96c6\u5408"
        }, 
        {
            "location": "/\u4e66\u7c4d/\u673a\u5668\u5b66\u4e60\u5b9e\u6218/10.k-means\u805a\u7c7b/#k-means_6", 
            "text": "# k-means \u805a\u7c7b\u7b97\u6cd5  # \u8be5\u7b97\u6cd5\u4f1a\u521b\u5efak\u4e2a\u8d28\u5fc3\uff0c\u7136\u540e\u5c06\u6bcf\u4e2a\u70b9\u5206\u914d\u5230\u6700\u8fd1\u7684\u8d28\u5fc3\uff0c\u518d\u91cd\u65b0\u8ba1\u7b97\u8d28\u5fc3\u3002  # \u8fd9\u4e2a\u8fc7\u7a0b\u91cd\u590d\u6570\u6b21\uff0c\u76f4\u5230\u6570\u636e\u70b9\u7684\u7c07\u5206\u914d\u7ed3\u679c\u4e0d\u518d\u6539\u53d8\u4f4d\u7f6e\u3002  # \u8fd0\u884c\u7ed3\u679c\uff08\u591a\u6b21\u8fd0\u884c\u7ed3\u679c\u53ef\u80fd\u4f1a\u4e0d\u4e00\u6837\uff0c\u53ef\u4ee5\u8bd5\u8bd5\uff0c\u539f\u56e0\u4e3a\u968f\u673a\u8d28\u5fc3\u7684\u5f71\u54cd\uff0c\u4f46\u603b\u7684\u7ed3\u679c\u662f\u5bf9\u7684\uff0c \u56e0\u4e3a\u6570\u636e\u8db3\u591f\u76f8\u4f3c\uff0c\u4e5f\u53ef\u80fd\u4f1a\u9677\u5165\u5c40\u90e8\u6700\u5c0f\u503c\uff09  def   kMeans ( dataSet ,   k ,   distMeas = distEclud ,   createCent = randCent ): \n     m   =   shape ( dataSet )[ 0 ]      # \u884c\u6570 \n     clusterAssment   =   mat ( zeros (( m ,   2 )))      # \u521b\u5efa\u4e00\u4e2a\u4e0e dataSet \u884c\u6570\u4e00\u6837\uff0c\u4f46\u662f\u6709\u4e24\u5217\u7684\u77e9\u9635\uff0c\u7528\u6765\u4fdd\u5b58\u7c07\u5206\u914d\u7ed3\u679c \n     centroids   =   createCent ( dataSet ,   k )      # \u521b\u5efa\u8d28\u5fc3\uff0c\u968f\u673ak\u4e2a\u8d28\u5fc3 \n     clusterChanged   =   True \n     while   clusterChanged : \n         clusterChanged   =   False \n         for   i   in   range ( m ):      # \u5faa\u73af\u6bcf\u4e00\u4e2a\u6570\u636e\u70b9\u5e76\u5206\u914d\u5230\u6700\u8fd1\u7684\u8d28\u5fc3\u4e2d\u53bb \n             minDist   =   inf ;   minIndex   =   - 1 \n             for   j   in   range ( k ): \n                 distJI   =   distMeas ( centroids [ j ,:], dataSet [ i ,:])      # \u8ba1\u7b97\u6570\u636e\u70b9\u5230\u8d28\u5fc3\u7684\u8ddd\u79bb \n                 if   distJI     minDist :      # \u5982\u679c\u8ddd\u79bb\u6bd4 minDist\uff08\u6700\u5c0f\u8ddd\u79bb\uff09\u8fd8\u5c0f\uff0c\u66f4\u65b0 minDist\uff08\u6700\u5c0f\u8ddd\u79bb\uff09\u548c\u6700\u5c0f\u8d28\u5fc3\u7684 index\uff08\u7d22\u5f15\uff09 \n                     minDist   =   distJI ;   minIndex   =   j \n             if   clusterAssment [ i ,   0 ]   !=   minIndex :      # \u7c07\u5206\u914d\u7ed3\u679c\u6539\u53d8 \n                 clusterChanged   =   True      # \u7c07\u6539\u53d8 \n                 clusterAssment [ i ,   :]   =   minIndex , minDist ** 2      # \u66f4\u65b0\u7c07\u5206\u914d\u7ed3\u679c\u4e3a\u6700\u5c0f\u8d28\u5fc3\u7684 index\uff08\u7d22\u5f15\uff09\uff0cminDist\uff08\u6700\u5c0f\u8ddd\u79bb\uff09\u7684\u5e73\u65b9 \n         print   centroids \n         for   cent   in   range ( k ):   # \u66f4\u65b0\u8d28\u5fc3 \n             ptsInClust   =   dataSet [ nonzero ( clusterAssment [:,   0 ] . A == cent )[ 0 ]]   # \u83b7\u53d6\u8be5\u7c07\u4e2d\u7684\u6240\u6709\u70b9 \n             centroids [ cent ,:]   =   mean ( ptsInClust ,   axis = 0 )   # \u5c06\u8d28\u5fc3\u4fee\u6539\u4e3a\u7c07\u4e2d\u6240\u6709\u70b9\u7684\u5e73\u5747\u503c\uff0cmean \u5c31\u662f\u6c42\u5e73\u5747\u503c\u7684 \n     return   centroids ,   clusterAssment", 
            "title": "K-Means \u805a\u7c7b\u7b97\u6cd5"
        }, 
        {
            "location": "/\u4e66\u7c4d/\u673a\u5668\u5b66\u4e60\u5b9e\u6218/10.k-means\u805a\u7c7b/#_3", 
            "text": "\u6d4b\u8bd5\u4e00\u4e0b\u4ee5\u4e0a\u7684\u57fa\u7840\u51fd\u6570\u662f\u5426\u53ef\u4ee5\u5982\u9884\u671f\u8fd0\u884c, \u8bf7\u770b:  https://github.com/apachecn/MachineLearning/blob/master/src/python/10.kmeans/kMeans.py  \u6d4b\u8bd5\u4e00\u4e0b kMeans \u51fd\u6570\u662f\u5426\u53ef\u4ee5\u5982\u9884\u671f\u8fd0\u884c, \u8bf7\u770b:  https://github.com/apachecn/MachineLearning/blob/master/src/python/10.kmeans/kMeans.py     \u53c2\u8003\u8fd0\u884c\u7ed3\u679c\u5982\u4e0b:    \u5728 kMeans \u7684\u51fd\u6570\u6d4b\u8bd5\u4e2d\uff0c\u53ef\u80fd\u5076\u5c14\u4f1a\u9677\u5165\u5c40\u90e8\u6700\u5c0f\u503c\uff08\u5c40\u90e8\u6700\u4f18\u7684\u7ed3\u679c\uff0c\u4f46\u4e0d\u662f\u5168\u5c40\u6700\u4f18\u7684\u7ed3\u679c\uff09.", 
            "title": "\u6d4b\u8bd5\u51fd\u6570"
        }, 
        {
            "location": "/\u4e66\u7c4d/\u673a\u5668\u5b66\u4e60\u5b9e\u6218/10.k-means\u805a\u7c7b/#k-means_7", 
            "text": "\u5728 kMeans \u7684\u51fd\u6570\u6d4b\u8bd5\u4e2d\uff0c\u53ef\u80fd\u5076\u5c14\u4f1a\u9677\u5165\u5c40\u90e8\u6700\u5c0f\u503c\uff08\u5c40\u90e8\u6700\u4f18\u7684\u7ed3\u679c\uff0c\u4f46\u4e0d\u662f\u5168\u5c40\u6700\u4f18\u7684\u7ed3\u679c\uff09.  \n\u5c40\u90e8\u6700\u5c0f\u503c\u7684\u7684\u60c5\u51b5\u5982\u4e0b:   \u6240\u4ee5\u4e3a\u4e86\u514b\u670d KMeans \u7b97\u6cd5\u6536\u655b\u4e8e\u5c40\u90e8\u6700\u5c0f\u503c\u7684\u95ee\u9898\uff0c\u6709\u66f4\u5389\u5bb3\u7684\u5927\u4f6c\u63d0\u51fa\u4e86\u53e6\u4e00\u4e2a\u79f0\u4e4b\u4e3a\u4e8c\u5206K-\u5747\u503c\uff08bisecting K-Means\uff09\u7684\u7b97\u6cd5.", 
            "title": "K-Means \u805a\u7c7b\u7b97\u6cd5\u7684\u7f3a\u9677"
        }, 
        {
            "location": "/\u4e66\u7c4d/\u673a\u5668\u5b66\u4e60\u5b9e\u6218/10.k-means\u805a\u7c7b/#k-means_8", 
            "text": "\u8be5\u7b97\u6cd5\u9996\u5148\u5c06\u6240\u6709\u70b9\u4f5c\u4e3a\u4e00\u4e2a\u7c07\uff0c\u7136\u540e\u5c06\u8be5\u7c07\u4e00\u5206\u4e3a\u4e8c\u3002 \n\u4e4b\u540e\u9009\u62e9\u5176\u4e2d\u4e00\u4e2a\u7c07\u7ee7\u7eed\u8fdb\u884c\u5212\u5206\uff0c\u9009\u62e9\u54ea\u4e00\u4e2a\u7c07\u8fdb\u884c\u5212\u5206\u53d6\u51b3\u4e8e\u5bf9\u5176\u5212\u5206\u65f6\u5019\u53ef\u4ee5\u6700\u5927\u7a0b\u5ea6\u964d\u4f4e SSE\uff08\u5e73\u65b9\u548c\u8bef\u5dee\uff09\u7684\u503c\u3002 \n\u4e0a\u8ff0\u57fa\u4e8e SSE \u7684\u5212\u5206\u8fc7\u7a0b\u4e0d\u65ad\u91cd\u590d\uff0c\u76f4\u5230\u5f97\u5230\u7528\u6237\u6307\u5b9a\u7684\u7c07\u6570\u76ee\u4e3a\u6b62\u3002", 
            "title": "\u4e8c\u5206 K-Means \u805a\u7c7b\u7b97\u6cd5"
        }, 
        {
            "location": "/\u4e66\u7c4d/\u673a\u5668\u5b66\u4e60\u5b9e\u6218/10.k-means\u805a\u7c7b/#k-means_9", 
            "text": "\u5c06\u6240\u6709\u70b9\u770b\u6210\u4e00\u4e2a\u7c07  \u5f53\u7c07\u6570\u76ee\u5c0f\u96e8 k \u65f6  \u5bf9\u4e8e\u6bcf\u4e00\u4e2a\u7c07  \u8ba1\u7b97\u603b\u8bef\u5dee  \u5728\u7ed9\u5b9a\u7684\u7c07\u4e0a\u9762\u8fdb\u884c KMeans \u805a\u7c7b\uff08k=2\uff09  \u8ba1\u7b97\u5c06\u8be5\u7c07\u4e00\u5206\u4e3a\u4e8c\u4e4b\u540e\u7684\u603b\u8bef\u5dee    \u9009\u62e9\u4f7f\u5f97\u8bef\u5dee\u6700\u5c0f\u7684\u90a3\u4e2a\u7c07\u8fdb\u884c\u5212\u5206\u64cd\u4f5c   \u53e6\u4e00\u79cd\u505a\u6cd5\u662f\u9009\u62e9 SSE \u6700\u5927\u7684\u7c07\u8fdb\u884c\u5212\u5206\uff0c\u76f4\u5230\u7c07\u6570\u76ee\u8fbe\u5230\u7528\u6237\u6307\u5b9a\u7684\u6570\u76ee\u4f4d\u7f6e\u3002\n\u63a5\u4e0b\u6765\u4e3b\u8981\u4ecb\u7ecd\u8be5\u505a\u6cd5\u3002", 
            "title": "\u4e8c\u5206 K-Means \u805a\u7c7b\u7b97\u6cd5\u4f2a\u4ee3\u7801"
        }, 
        {
            "location": "/\u4e66\u7c4d/\u673a\u5668\u5b66\u4e60\u5b9e\u6218/10.k-means\u805a\u7c7b/#k-means_10", 
            "text": "# \u4e8c\u5206 KMeans \u805a\u7c7b\u7b97\u6cd5, \u57fa\u4e8e kMeans \u57fa\u7840\u4e4b\u4e0a\u7684\u4f18\u5316\uff0c\u4ee5\u907f\u514d\u9677\u5165\u5c40\u90e8\u6700\u5c0f\u503c  def   biKMeans ( dataSet ,   k ,   distMeas = distEclud ): \n     m   =   shape ( dataSet )[ 0 ] \n     clusterAssment   =   mat ( zeros (( m , 2 )))   # \u4fdd\u5b58\u6bcf\u4e2a\u6570\u636e\u70b9\u7684\u7c07\u5206\u914d\u7ed3\u679c\u548c\u5e73\u65b9\u8bef\u5dee \n     centroid0   =   mean ( dataSet ,   axis = 0 ) . tolist ()[ 0 ]   # \u8d28\u5fc3\u521d\u59cb\u5316\u4e3a\u6240\u6709\u6570\u636e\u70b9\u7684\u5747\u503c \n     centList   = [ centroid0 ]   # \u521d\u59cb\u5316\u53ea\u6709 1 \u4e2a\u8d28\u5fc3\u7684 list \n     for   j   in   range ( m ):   # \u8ba1\u7b97\u6240\u6709\u6570\u636e\u70b9\u5230\u521d\u59cb\u8d28\u5fc3\u7684\u8ddd\u79bb\u5e73\u65b9\u8bef\u5dee \n         clusterAssment [ j , 1 ]   =   distMeas ( mat ( centroid0 ),   dataSet [ j ,:]) ** 2 \n     while   ( len ( centList )     k ):   # \u5f53\u8d28\u5fc3\u6570\u91cf\u5c0f\u4e8e k \u65f6 \n         lowestSSE   =   inf \n         for   i   in   range ( len ( centList )):   # \u5bf9\u6bcf\u4e00\u4e2a\u8d28\u5fc3 \n             ptsInCurrCluster   =   dataSet [ nonzero ( clusterAssment [:, 0 ] . A == i )[ 0 ],:]   # \u83b7\u53d6\u5f53\u524d\u7c07 i \u4e0b\u7684\u6240\u6709\u6570\u636e\u70b9 \n             centroidMat ,   splitClustAss   =   kMeans ( ptsInCurrCluster ,   2 ,   distMeas )   # \u5c06\u5f53\u524d\u7c07 i \u8fdb\u884c\u4e8c\u5206 kMeans \u5904\u7406 \n             sseSplit   =   sum ( splitClustAss [:, 1 ])   # \u5c06\u4e8c\u5206 kMeans \u7ed3\u679c\u4e2d\u7684\u5e73\u65b9\u548c\u7684\u8ddd\u79bb\u8fdb\u884c\u6c42\u548c \n             sseNotSplit   =   sum ( clusterAssment [ nonzero ( clusterAssment [:, 0 ] . A != i )[ 0 ], 1 ])   # \u5c06\u672a\u53c2\u4e0e\u4e8c\u5206 kMeans \u5206\u914d\u7ed3\u679c\u4e2d\u7684\u5e73\u65b9\u548c\u7684\u8ddd\u79bb\u8fdb\u884c\u6c42\u548c \n             print   sseSplit, and notSplit:  , sseSplit , sseNotSplit \n             if   ( sseSplit   +   sseNotSplit )     lowestSSE :   # \u603b\u7684\uff08\u672a\u62c6\u5206\u548c\u5df2\u62c6\u5206\uff09\u8bef\u5dee\u548c\u8d8a\u5c0f\uff0c\u8d8a\u76f8\u4f3c\uff0c\u6548\u679c\u8d8a\u4f18\u5316\uff0c\u5212\u5206\u7684\u7ed3\u679c\u66f4\u597d\uff08\u6ce8\u610f\uff1a\u8fd9\u91cc\u7684\u7406\u89e3\u5f88\u91cd\u8981\uff0c\u4e0d\u660e\u767d\u7684\u5730\u65b9\u53ef\u4ee5\u548c\u6211\u4eec\u4e00\u8d77\u8ba8\u8bba\uff09 \n                 bestCentToSplit   =   i \n                 bestNewCents   =   centroidMat \n                 bestClustAss   =   splitClustAss . copy () \n                 lowestSSE   =   sseSplit   +   sseNotSplit \n         # \u627e\u51fa\u6700\u597d\u7684\u7c07\u5206\u914d\u7ed3\u679c     \n         bestClustAss [ nonzero ( bestClustAss [:, 0 ] . A   ==   1 )[ 0 ], 0 ]   =   len ( centList )   # \u8c03\u7528\u4e8c\u5206 kMeans \u7684\u7ed3\u679c\uff0c\u9ed8\u8ba4\u7c07\u662f 0,1. \u5f53\u7136\u4e5f\u53ef\u4ee5\u6539\u6210\u5176\u5b83\u7684\u6570\u5b57 \n         bestClustAss [ nonzero ( bestClustAss [:, 0 ] . A   ==   0 )[ 0 ], 0 ]   =   bestCentToSplit   # \u66f4\u65b0\u4e3a\u6700\u4f73\u8d28\u5fc3 \n         print   the bestCentToSplit is:  , bestCentToSplit \n         print   the len of bestClustAss is:  ,   len ( bestClustAss ) \n         # \u66f4\u65b0\u8d28\u5fc3\u5217\u8868 \n         centList [ bestCentToSplit ]   =   bestNewCents [ 0 ,:] . tolist ()[ 0 ]   # \u66f4\u65b0\u539f\u8d28\u5fc3 list \u4e2d\u7684\u7b2c i \u4e2a\u8d28\u5fc3\u4e3a\u4f7f\u7528\u4e8c\u5206 kMeans \u540e bestNewCents \u7684\u7b2c\u4e00\u4e2a\u8d28\u5fc3 \n         centList . append ( bestNewCents [ 1 ,:] . tolist ()[ 0 ])   # \u6dfb\u52a0 bestNewCents \u7684\u7b2c\u4e8c\u4e2a\u8d28\u5fc3 \n         clusterAssment [ nonzero ( clusterAssment [:, 0 ] . A   ==   bestCentToSplit )[ 0 ],:] =   bestClustAss   # \u91cd\u65b0\u5206\u914d\u6700\u597d\u7c07\u4e0b\u7684\u6570\u636e\uff08\u8d28\u5fc3\uff09\u4ee5\u53caSSE \n     return   mat ( centList ),   clusterAssment", 
            "title": "\u4e8c\u5206 K-Means \u805a\u7c7b\u7b97\u6cd5\u4ee3\u7801"
        }, 
        {
            "location": "/\u4e66\u7c4d/\u673a\u5668\u5b66\u4e60\u5b9e\u6218/10.k-means\u805a\u7c7b/#kmeans", 
            "text": "\u6d4b\u8bd5\u4e00\u4e0b\u4e8c\u5206 KMeans \u805a\u7c7b\u7b97\u6cd5\uff0c\u8bf7\u770b:  https://github.com/apachecn/MachineLearning/blob/master/src/python/10.kmeans/kMeans.py   \u4e0a\u8ff0\u51fd\u6570\u53ef\u4ee5\u8fd0\u884c\u591a\u6b21\uff0c\u805a\u7c7b\u4f1a\u6536\u655b\u5230\u5168\u5c40\u6700\u5c0f\u503c\uff0c\u800c\u539f\u59cb\u7684 kMeans() \u51fd\u6570\u5076\u5c14\u4f1a\u9677\u5165\u5c40\u90e8\u6700\u5c0f\u503c\u3002 \n\u8fd0\u884c\u53c2\u8003\u7ed3\u679c\u5982\u4e0b:    \u4f5c\u8005\uff1a \u90a3\u4f0a\u62b9\u5fae\u7b11  GitHub\u5730\u5740 :  https://github.com/apachecn/MachineLearning  \u7248\u6743\u58f0\u660e\uff1a\u6b22\u8fce\u8f6c\u8f7d\u5b66\u4e60 =  \u8bf7\u6807\u6ce8\u4fe1\u606f\u6765\u6e90\u4e8e  ApacheCN", 
            "title": "\u6d4b\u8bd5\u4e8c\u5206 KMeans \u805a\u7c7b\u7b97\u6cd5"
        }, 
        {
            "location": "/\u4e66\u7c4d/\u673a\u5668\u5b66\u4e60\u5b9e\u6218/11.\u4f7f\u7528Apriori\u7b97\u6cd5\u8fdb\u884c\u5173\u8054\u5206\u6790/", 
            "text": "\u7b2c 11 \u7ae0 \u4f7f\u7528 Apriori \u7b97\u6cd5\u8fdb\u884c\u5173\u8054\u5206\u6790\n\n\n\u5173\u8054\u5206\u6790\n\n\n\u5173\u8054\u5206\u6790\u662f\u4e00\u79cd\u5728\u5927\u89c4\u6a21\u6570\u636e\u96c6\u4e2d\u5bfb\u627e\u6709\u8da3\u5173\u7cfb\u7684\u4efb\u52a1\u3002\n\u8fd9\u4e9b\u5173\u7cfb\u53ef\u4ee5\u6709\u4e24\u79cd\u5f62\u5f0f: \n* \u9891\u7e41\u9879\u96c6\uff08frequent item sets\uff09: \u7ecf\u5e38\u51fa\u73b0\u5728\u4e00\u5757\u7684\u7269\u54c1\u7684\u96c6\u5408\u3002\n* \u5173\u8054\u89c4\u5219\uff08associational rules\uff09: \u6697\u793a\u4e24\u79cd\u7269\u54c1\u4e4b\u95f4\u53ef\u80fd\u5b58\u5728\u5f88\u5f3a\u7684\u5173\u7cfb\u3002\n\n\n\u76f8\u5173\u672f\u8bed\n\n\n\n\n\n\n\u5173\u8054\u5206\u6790\uff08\u5173\u8054\u89c4\u5219\u5b66\u4e60): \u4ece\u5927\u89c4\u6a21\u6570\u636e\u96c6\u4e2d\u5bfb\u627e\u7269\u54c1\u95f4\u7684\u9690\u542b\u5173\u7cfb\u88ab\u79f0\u4f5c \n\u5173\u8054\u5206\u6790(associati analysis)\n \u6216\u8005 \n\u5173\u8054\u89c4\u5219\u5b66\u4e60\uff08association rule learning\uff09\n \u3002\n\u4e0b\u9762\u662f\u7528\u4e00\u4e2a \n\u6742\u8d27\u5e97\n \u4f8b\u5b50\u6765\u8bf4\u660e\u8fd9\u4e24\u4e2a\u6982\u5ff5\uff0c\u5982\u4e0b\u56fe\u6240\u793a:\n\n\n\n\n\n\n\n\n\u9891\u7e41\u9879\u96c6: {\u8461\u8404\u9152, \u5c3f\u5e03, \u8c46\u5976} \u5c31\u662f\u4e00\u4e2a\u9891\u7e41\u9879\u96c6\u7684\u4f8b\u5b50\u3002\n\n\n\n\n\u5173\u8054\u89c4\u5219: \u5c3f\u5e03 -\n \u8461\u8404\u9152 \u5c31\u662f\u4e00\u4e2a\u5173\u8054\u89c4\u5219\u3002\u8fd9\u610f\u5473\u7740\u5982\u679c\u987e\u5ba2\u4e70\u4e86\u5c3f\u5e03\uff0c\u90a3\u4e48\u4ed6\u5f88\u53ef\u80fd\u4f1a\u4e70\u8461\u8404\u9152\u3002\n\n\n\n\n\u90a3\u4e48 \n\u9891\u7e41\n \u7684\u5b9a\u4e49\u662f\u4ec0\u4e48\u5462\uff1f\u600e\u4e48\u6837\u624d\u7b97\u9891\u7e41\u5462\uff1f\n\u5ea6\u91cf\u5b83\u4eec\u7684\u65b9\u6cd5\u6709\u5f88\u591a\u79cd\uff0c\u8fd9\u91cc\u6211\u4eec\u6765\u7b80\u5355\u7684\u4ecb\u7ecd\u4e0b\u652f\u6301\u5ea6\u548c\u53ef\u4fe1\u5ea6\u3002\n* \u652f\u6301\u5ea6: \u6570\u636e\u96c6\u4e2d\u5305\u542b\u8be5\u9879\u96c6\u7684\u8bb0\u5f55\u6240\u5360\u7684\u6bd4\u4f8b\u3002\u4f8b\u5982\u4e0a\u56fe\u4e2d\uff0c{\u8c46\u5976} \u7684\u652f\u6301\u5ea6\u4e3a \n\u3002{\u8c46\u5976, \u5c3f\u5e03} \u7684\u652f\u6301\u5ea6\u4e3a \n\u3002\n* \u53ef\u4fe1\u5ea6: \u9488\u5bf9\u4e00\u6761\u8bf8\u5982 {\u5c3f\u5e03} -\n {\u8461\u8404\u9152} \u8fd9\u6837\u5177\u4f53\u7684\u5173\u8054\u89c4\u5219\u6765\u5b9a\u4e49\u7684\u3002\u8fd9\u6761\u89c4\u5219\u7684 \n\u53ef\u4fe1\u5ea6\n \u88ab\u5b9a\u4e49\u4e3a \n\u652f\u6301\u5ea6({\u5c3f\u5e03, \u8461\u8404\u9152})/\u652f\u6301\u5ea6({\u5c3f\u5e03})\n\uff0c\u4ece\u56fe\u4e2d\u53ef\u4ee5\u770b\u51fa \u652f\u6301\u5ea6({\u5c3f\u5e03, \u8461\u8404\u9152}) = \n\uff0c\u652f\u6301\u5ea6({\u5c3f\u5e03}) = \n\uff0c\u6240\u4ee5 {\u5c3f\u5e03} -\n {\u8461\u8404\u9152} \u7684\u53ef\u4fe1\u5ea6 = \n / \n = \n = 0.75\u3002\n\n\n\u652f\u6301\u5ea6\n \u548c \n\u53ef\u4fe1\u5ea6\n \u662f\u7528\u6765\u91cf\u5316 \n\u5173\u8054\u5206\u6790\n \u662f\u5426\u6210\u529f\u7684\u4e00\u4e2a\u65b9\u6cd5\u3002\n\u5047\u8bbe\u60f3\u627e\u5230\u652f\u6301\u5ea6\u5927\u4e8e 0.8 \u7684\u6240\u6709\u9879\u96c6\uff0c\u5e94\u8be5\u5982\u4f55\u53bb\u505a\u5462\uff1f\n\u4e00\u4e2a\u529e\u6cd5\u662f\u751f\u6210\u4e00\u4e2a\u7269\u54c1\u6240\u6709\u53ef\u80fd\u7ec4\u5408\u7684\u6e05\u5355\uff0c\u7136\u540e\u5bf9\u6bcf\u4e00\u79cd\u7ec4\u5408\u7edf\u8ba1\u5b83\u51fa\u73b0\u7684\u9891\u7e41\u7a0b\u5ea6\uff0c\u4f46\u662f\u5f53\u7269\u54c1\u6210\u5343\u4e0a\u4e07\u65f6\uff0c\u4e0a\u8ff0\u505a\u6cd5\u5c31\u975e\u5e38\u975e\u5e38\u6162\u4e86\u3002\n\u6211\u4eec\u9700\u8981\u8be6\u7ec6\u5206\u6790\u4e0b\u8fd9\u79cd\u60c5\u51b5\u5e76\u8ba8\u8bba\u4e0b Apriori \u539f\u7406\uff0c\u8be5\u539f\u7406\u4f1a\u51cf\u5c11\u5173\u8054\u89c4\u5219\u5b66\u4e60\u65f6\u6240\u9700\u7684\u8ba1\u7b97\u91cf\u3002\n\n\nApriori \u539f\u7406\n\n\n\u5047\u8bbe\u6211\u4eec\u4e00\u5171\u6709 4 \u4e2a\u5546\u54c1: \u5546\u54c10, \u5546\u54c11, \u5546\u54c12, \u5546\u54c13\u3002\n\u6240\u6709\u53ef\u80fd\u7684\u60c5\u51b5\u5982\u4e0b:\n\n\n\n\u5982\u679c\u6211\u4eec\u8ba1\u7b97\u6240\u6709\u7ec4\u5408\u7684\u652f\u6301\u5ea6\uff0c\u4e5f\u9700\u8981\u8ba1\u7b97 15 \u6b21\u3002\u5373 2^N - 1 = 2^4 - 1 = 15\u3002\n\n\u968f\u7740\u7269\u54c1\u7684\u589e\u52a0\uff0c\u8ba1\u7b97\u7684\u6b21\u6570\u5448\u6307\u6570\u7684\u5f62\u5f0f\u589e\u957f ... \n\n\u4e3a\u4e86\u964d\u4f4e\u8ba1\u7b97\u6b21\u6570\u548c\u65f6\u95f4\uff0c\u7814\u7a76\u4eba\u5458\u53d1\u73b0\u4e86\u4e00\u79cd\u6240\u8c13\u7684 Apriori \u539f\u7406\uff0c\u5373\u67d0\u4e2a\u9879\u96c6\u662f\u9891\u7e41\u7684\uff0c\u90a3\u4e48\u5b83\u7684\u6240\u6709\u5b50\u96c6\u4e5f\u662f\u9891\u7e41\u7684\u3002\n\u4f8b\u5982\uff0c\u5982\u679c {0, 1} \u662f\u9891\u7e41\u7684\uff0c\u90a3\u4e48 {0}, {1} \u4e5f\u662f\u9891\u7e41\u7684\u3002\n\u8be5\u539f\u7406\u76f4\u89c2\u4e0a\u6ca1\u6709\u4ec0\u4e48\u5e2e\u52a9\uff0c\u4f46\u662f\u5982\u679c\u53cd\u8fc7\u6765\u770b\u5c31\u6709\u7528\u4e86\uff0c\u4e5f\u5c31\u662f\u8bf4\u5982\u679c\u4e00\u4e2a\u9879\u96c6\u662f \n\u975e\u9891\u7e41\u9879\u96c6\n\uff0c\u90a3\u4e48\u5b83\u7684\u6240\u6709\u8d85\u96c6\u4e5f\u662f\u975e\u9891\u7e41\u9879\u96c6\uff0c\u5982\u4e0b\u56fe\u6240\u793a:  \n\n\n\n\n\u5728\u56fe\u4e2d\u6211\u4eec\u53ef\u4ee5\u770b\u5230\uff0c\u5df2\u77e5\u7070\u8272\u90e8\u5206 {2,3} \u662f \n\u975e\u9891\u7e41\u9879\u96c6\n\uff0c\u90a3\u4e48\u5229\u7528\u4e0a\u9762\u7684\u77e5\u8bc6\uff0c\u6211\u4eec\u5c31\u53ef\u4ee5\u77e5\u9053 {0,2,3} {1,2,3} {0,1,2,3} \u90fd\u662f \n\u975e\u9891\u7e41\u7684\n\u3002\n\u4e5f\u5c31\u662f\u8bf4\uff0c\u8ba1\u7b97\u51fa {2,3} \u7684\u652f\u6301\u5ea6\uff0c\u77e5\u9053\u5b83\u662f \n\u975e\u9891\u7e41\n \u7684\u4e4b\u540e\uff0c\u5c31\u4e0d\u9700\u8981\u518d\u8ba1\u7b97 {0,2,3} {1,2,3} {0,1,2,3} \u7684\u652f\u6301\u5ea6\uff0c\u56e0\u4e3a\u6211\u4eec\u77e5\u9053\u8fd9\u4e9b\u96c6\u5408\u4e0d\u4f1a\u6ee1\u8db3\u6211\u4eec\u7684\u8981\u6c42\u3002\n\u4f7f\u7528\u8be5\u539f\u7406\u5c31\u53ef\u4ee5\u907f\u514d\u9879\u96c6\u6570\u76ee\u7684\u6307\u6570\u589e\u957f\uff0c\u4ece\u800c\u5728\u5408\u7406\u7684\u65f6\u95f4\u5185\u8ba1\u7b97\u51fa\u9891\u7e41\u9879\u96c6\u3002\n\n\nApriori \u7b97\u6cd5\u4f18\u7f3a\u70b9\n\n\n* \u4f18\u70b9\uff1a\u6613\u7f16\u7801\u5b9e\u73b0\n* \u7f3a\u70b9\uff1a\u5728\u5927\u6570\u636e\u96c6\u4e0a\u53ef\u80fd\u8f83\u6162\n* \u9002\u7528\u6570\u636e\u7c7b\u578b\uff1a\u6570\u503c\u578b \u6216\u8005 \u6807\u79f0\u578b\u6570\u636e\u3002\n\n\n\n\nApriori \u7b97\u6cd5\u6d41\u7a0b\u6b65\u9aa4\uff1a\n\n\n* \u6536\u96c6\u6570\u636e\uff1a\u4f7f\u7528\u4efb\u610f\u65b9\u6cd5\u3002\n* \u51c6\u5907\u6570\u636e\uff1a\u4efb\u4f55\u6570\u636e\u7c7b\u578b\u90fd\u53ef\u4ee5\uff0c\u56e0\u4e3a\u6211\u4eec\u53ea\u4fdd\u5b58\u96c6\u5408\u3002\n* \u5206\u6790\u6570\u636e\uff1a\u4f7f\u7528\u4efb\u610f\u65b9\u6cd5\u3002\n* \u8bad\u7ec3\u6570\u636e\uff1a\u4f7f\u7528Apiori\u7b97\u6cd5\u6765\u627e\u5230\u9891\u7e41\u9879\u96c6\u3002\n* \u6d4b\u8bd5\u7b97\u6cd5\uff1a\u4e0d\u9700\u8981\u6d4b\u8bd5\u8fc7\u7a0b\u3002\n* \u4f7f\u7528\u7b97\u6cd5\uff1a\u7528\u8bed\u53d1\u73b0\u9891\u7e41\u9879\u96c6\u4ee5\u53ca\u7269\u54c1\u4e4b\u95f4\u7684\u5173\u8054\u89c4\u5219\u3002\n\n\n\n\nApriori \u7b97\u6cd5\u7684\u4f7f\u7528\n\n\n\u524d\u9762\u63d0\u5230\uff0c\u5173\u8054\u5206\u6790\u7684\u76ee\u6807\u5305\u62ec\u4e24\u9879: \u53d1\u73b0 \n\u9891\u7e41\u9879\u96c6\n \u548c\u53d1\u73b0 \n\u5173\u8054\u89c4\u5219\n\u3002\n\u9996\u5148\u9700\u8981\u627e\u5230 \n\u9891\u7e41\u9879\u96c6\n\uff0c\u7136\u540e\u624d\u80fd\u53d1\u73b0 \n\u5173\u8054\u89c4\u5219\n\u3002\n\n\nApriori\n \u7b97\u6cd5\u662f\u53d1\u73b0 \n\u9891\u7e41\u9879\u96c6\n \u7684\u4e00\u79cd\u65b9\u6cd5\u3002\nApriori \u7b97\u6cd5\u7684\u4e24\u4e2a\u8f93\u5165\u53c2\u6570\u5206\u522b\u662f\u6700\u5c0f\u652f\u6301\u5ea6\u548c\u6570\u636e\u96c6\u3002\n\u8be5\u7b97\u6cd5\u9996\u5148\u4f1a\u751f\u6210\u6240\u6709\u5355\u4e2a\u7269\u54c1\u7684\u9879\u96c6\u5217\u8868\u3002\n\u63a5\u7740\u626b\u63cf\u4ea4\u6613\u8bb0\u5f55\u6765\u67e5\u770b\u54ea\u4e9b\u9879\u96c6\u6ee1\u8db3\u6700\u5c0f\u652f\u6301\u5ea6\u8981\u6c42\uff0c\u90a3\u4e9b\u4e0d\u6ee1\u8db3\u6700\u5c0f\u652f\u6301\u5ea6\u8981\u6c42\u7684\u96c6\u5408\u4f1a\u88ab\u53bb\u6389\u3002\n\u71c3\u5c3d\u540e\u5bf9\u751f\u4e0b\u6765\u7684\u96c6\u5408\u8fdb\u884c\u7ec4\u5408\u4ee5\u58f0\u573a\u5305\u542b\u4e24\u4e2a\u5143\u7d20\u7684\u9879\u96c6\u3002\n\u63a5\u4e0b\u6765\u518d\u91cd\u65b0\u626b\u63cf\u4ea4\u6613\u8bb0\u5f55\uff0c\u53bb\u6389\u4e0d\u6ee1\u8db3\u6700\u5c0f\u652f\u6301\u5ea6\u7684\u9879\u96c6\u3002\n\u8be5\u8fc7\u7a0b\u91cd\u590d\u8fdb\u884c\u76f4\u5230\u6240\u6709\u9879\u96c6\u88ab\u53bb\u6389\u3002\n\n\n\u751f\u6210\u5019\u9009\u9879\u96c6\n\n\n\u4e0b\u9762\u4f1a\u521b\u5efa\u4e00\u4e2a\u7528\u4e8e\u6784\u5efa\u521d\u59cb\u96c6\u5408\u7684\u51fd\u6570\uff0c\u4e5f\u4f1a\u521b\u5efa\u4e00\u4e2a\u901a\u8fc7\u626b\u63cf\u6570\u636e\u96c6\u4ee5\u5bfb\u627e\u4ea4\u6613\u8bb0\u5f55\u5b50\u96c6\u7684\u51fd\u6570\uff0c\n\u6570\u636e\u626b\u63cf\u7684\u4f2a\u4ee3\u7801\u5982\u4e0b: \n* \u5bf9\u6570\u636e\u96c6\u4e2d\u7684\u6bcf\u6761\u4ea4\u6613\u8bb0\u5f55 tran\n* \u5bf9\u6bcf\u4e2a\u5019\u9009\u9879\u96c6 can\n    * \u68c0\u67e5\u4e00\u4e0b can \u662f\u5426\u662f tran \u7684\u5b50\u96c6: \u5982\u679c\u662f\u5219\u589e\u52a0 can \u7684\u8ba1\u6570\u503c\n* \u5bf9\u6bcf\u4e2a\u5019\u9009\u9879\u96c6\n    * \u5982\u679c\u5176\u652f\u6301\u5ea6\u4e0d\u4f4e\u4e8e\u6700\u5c0f\u503c\uff0c\u5219\u4fdd\u7559\u8be5\u9879\u96c6\n    * \u8fd4\u56de\u6240\u6709\u9891\u7e41\u9879\u96c6\u5217\u8868\n\u4ee5\u4e0b\u662f\u4e00\u4e9b\u8f85\u52a9\u51fd\u6570\u3002\n\n\n\u52a0\u8f7d\u6570\u636e\u96c6\n\n\n# \u52a0\u8f7d\u6570\u636e\u96c6\n\n\ndef\n \nloadDataSet\n():\n\n    \nreturn\n \n[[\n1\n,\n \n3\n,\n \n4\n],\n \n[\n2\n,\n \n3\n,\n \n5\n],\n \n[\n1\n,\n \n2\n,\n \n3\n,\n \n5\n],\n \n[\n2\n,\n \n5\n]]\n\n\n\n\n\n\u521b\u5efa\u96c6\u5408 C1\u3002\u5373\u5bf9 dataSet \u8fdb\u884c\u53bb\u91cd\uff0c\u6392\u5e8f\uff0c\u653e\u5165 list \u4e2d\uff0c\u7136\u540e\u8f6c\u6362\u6240\u6709\u7684\u5143\u7d20\u4e3a frozenset\n\n\n# \u521b\u5efa\u96c6\u5408 C1\u3002\u5373\u5bf9 dataSet \u8fdb\u884c\u53bb\u91cd\uff0c\u6392\u5e8f\uff0c\u653e\u5165 list \u4e2d\uff0c\u7136\u540e\u8f6c\u6362\u6240\u6709\u7684\u5143\u7d20\u4e3a frozenset\n\n\ndef\n \ncreateC1\n(\ndataSet\n):\n\n    \ncreateC1\uff08\u521b\u5efa\u96c6\u5408 C1\uff09\n\n\n\n    Args:\n\n\n        dataSet \u539f\u59cb\u6570\u636e\u96c6\n\n\n    Returns:\n\n\n        frozenset \u8fd4\u56de\u4e00\u4e2a frozenset \u683c\u5f0f\u7684 list\n\n\n    \n\n\n    \nC1\n \n=\n \n[]\n\n    \nfor\n \ntransaction\n \nin\n \ndataSet\n:\n\n        \nfor\n \nitem\n \nin\n \ntransaction\n:\n\n            \nif\n \nnot\n \n[\nitem\n]\n \nin\n \nC1\n:\n\n                \n# \u904d\u5386\u6240\u6709\u7684\u5143\u7d20\uff0c\u5982\u679c\u4e0d\u5728 C1 \u51fa\u73b0\u8fc7\uff0c\u90a3\u4e48\u5c31 append\n\n                \nC1\n.\nappend\n([\nitem\n])\n\n    \n# \u5bf9\u6570\u7ec4\u8fdb\u884c `\u4ece\u5c0f\u5230\u5927` \u7684\u6392\u5e8f\n\n    \nprint\n \nsort \u524d=\n,\n \nC1\n\n    \nC1\n.\nsort\n()\n\n    \n# frozenset \u8868\u793a\u51bb\u7ed3\u7684 set \u96c6\u5408\uff0c\u5143\u7d20\u65e0\u6539\u53d8\uff1b\u53ef\u4ee5\u628a\u5b83\u5f53\u5b57\u5178\u7684 key \u6765\u4f7f\u7528\n\n    \nprint\n \nsort \u540e=\n,\n \nC1\n\n    \nprint\n \nfrozenset=\n,\n \nmap\n(\nfrozenset\n,\n \nC1\n)\n\n    \nreturn\n \nmap\n(\nfrozenset\n,\n \nC1\n)\n\n\n\n\n\n\u8ba1\u7b97\u5019\u9009\u6570\u636e\u96c6 CK \u5728\u6570\u636e\u96c6 D \u4e2d\u7684\u652f\u6301\u5ea6\uff0c\u5e76\u8fd4\u56de\u652f\u6301\u5ea6\u5927\u4e8e\u6700\u5c0f\u652f\u6301\u5ea6\uff08minSupport\uff09\u7684\u6570\u636e\n\n\n# \u8ba1\u7b97\u5019\u9009\u6570\u636e\u96c6 CK \u5728\u6570\u636e\u96c6 D \u4e2d\u7684\u652f\u6301\u5ea6\uff0c\u5e76\u8fd4\u56de\u652f\u6301\u5ea6\u5927\u4e8e\u6700\u5c0f\u652f\u6301\u5ea6\uff08minSupport\uff09\u7684\u6570\u636e\n\n\ndef\n \nscanD\n(\nD\n,\n \nCk\n,\n \nminSupport\n):\n\n    \nscanD\uff08\u8ba1\u7b97\u5019\u9009\u6570\u636e\u96c6 CK \u5728\u6570\u636e\u96c6 D \u4e2d\u7684\u652f\u6301\u5ea6\uff0c\u5e76\u8fd4\u56de\u652f\u6301\u5ea6\u5927\u4e8e\u6700\u5c0f\u652f\u6301\u5ea6 minSupport \u7684\u6570\u636e\uff09\n\n\n\n    Args:\n\n\n        D \u6570\u636e\u96c6\n\n\n        Ck \u5019\u9009\u9879\u96c6\u5217\u8868\n\n\n        minSupport \u6700\u5c0f\u652f\u6301\u5ea6\n\n\n    Returns:\n\n\n        retList \u652f\u6301\u5ea6\u5927\u4e8e minSupport \u7684\u96c6\u5408\n\n\n        supportData \u5019\u9009\u9879\u96c6\u652f\u6301\u5ea6\u6570\u636e\n\n\n    \n\n\n    \n# ssCnt \u4e34\u65f6\u5b58\u653e\u9009\u6570\u636e\u96c6 Ck \u7684\u9891\u7387. \u4f8b\u5982: a-\n10, b-\n5, c-\n8\n\n    \nssCnt\n \n=\n \n{}\n\n    \nfor\n \ntid\n \nin\n \nD\n:\n\n        \nfor\n \ncan\n \nin\n \nCk\n:\n\n            \n# s.issubset(t)  \u6d4b\u8bd5\u662f\u5426 s \u4e2d\u7684\u6bcf\u4e00\u4e2a\u5143\u7d20\u90fd\u5728 t \u4e2d\n\n            \nif\n \ncan\n.\nissubset\n(\ntid\n):\n\n                \nif\n \nnot\n \nssCnt\n.\nhas_key\n(\ncan\n):\n\n                    \nssCnt\n[\ncan\n]\n \n=\n \n1\n\n                \nelse\n:\n\n                    \nssCnt\n[\ncan\n]\n \n+=\n \n1\n\n    \nnumItems\n \n=\n \nfloat\n(\nlen\n(\nD\n))\n \n# \u6570\u636e\u96c6 D \u7684\u6570\u91cf\n\n    \nretList\n \n=\n \n[]\n\n    \nsupportData\n \n=\n \n{}\n\n    \nfor\n \nkey\n \nin\n \nssCnt\n:\n\n        \n# \u652f\u6301\u5ea6 = \u5019\u9009\u9879\uff08key\uff09\u51fa\u73b0\u7684\u6b21\u6570 / \u6240\u6709\u6570\u636e\u96c6\u7684\u6570\u91cf\n\n        \nsupport\n \n=\n \nssCnt\n[\nkey\n]\n/\nnumItems\n\n        \nif\n \nsupport\n \n=\n \nminSupport\n:\n\n            \n# \u5728 retList \u7684\u9996\u4f4d\u63d2\u5165\u5143\u7d20\uff0c\u53ea\u5b58\u50a8\u652f\u6301\u5ea6\u6ee1\u8db3\u9891\u7e41\u9879\u96c6\u7684\u503c\n\n            \nretList\n.\ninsert\n(\n0\n,\n \nkey\n)\n\n        \n# \u5b58\u50a8\u6240\u6709\u7684\u5019\u9009\u9879\uff08key\uff09\u548c\u5bf9\u5e94\u7684\u652f\u6301\u5ea6\uff08support\uff09\n\n        \nsupportData\n[\nkey\n]\n \n=\n \nsupport\n\n    \nreturn\n \nretList\n,\n \nsupportData\n\n\n\n\n\n\u5b8c\u6574\u4ee3\u7801\u5730\u5740: \nhttps://github.com/apachecn/MachineLearning/blob/master/src/python/11.Apriori/apriori.py\n\n\n\u7ec4\u7ec7\u5b8c\u6574\u7684 Apriori \u7b97\u6cd5\n\n\n\u8f93\u5165\u9891\u7e41\u9879\u96c6\u5217\u8868 Lk \u4e0e\u8fd4\u56de\u7684\u5143\u7d20\u4e2a\u6570 k\uff0c\u7136\u540e\u8f93\u51fa\u6240\u6709\u53ef\u80fd\u7684\u5019\u9009\u9879\u96c6 Ck\n\n\n# \u8f93\u5165\u9891\u7e41\u9879\u96c6\u5217\u8868 Lk \u4e0e\u8fd4\u56de\u7684\u5143\u7d20\u4e2a\u6570 k\uff0c\u7136\u540e\u8f93\u51fa\u6240\u6709\u53ef\u80fd\u7684\u5019\u9009\u9879\u96c6 Ck\n\n\ndef\n \naprioriGen\n(\nLk\n,\n \nk\n):\n\n    \naprioriGen\uff08\u8f93\u5165\u9891\u7e41\u9879\u96c6\u5217\u8868 Lk \u4e0e\u8fd4\u56de\u7684\u5143\u7d20\u4e2a\u6570 k\uff0c\u7136\u540e\u8f93\u51fa\u5019\u9009\u9879\u96c6 Ck\u3002\n\n\n       \u4f8b\u5982: \u4ee5 {0},{1},{2} \u4e3a\u8f93\u5165\u4e14 k = 2 \u5219\u8f93\u51fa {0,1}, {0,2}, {1,2}. \u4ee5 {0,1},{0,2},{1,2} \u4e3a\u8f93\u5165\u4e14 k = 3 \u5219\u8f93\u51fa {0,1,2}\n\n\n       \u4ec5\u9700\u8981\u8ba1\u7b97\u4e00\u6b21\uff0c\u4e0d\u9700\u8981\u5c06\u6240\u6709\u7684\u7ed3\u679c\u8ba1\u7b97\u51fa\u6765\uff0c\u7136\u540e\u8fdb\u884c\u53bb\u91cd\u64cd\u4f5c\n\n\n       \u8fd9\u662f\u4e00\u4e2a\u66f4\u9ad8\u6548\u7684\u7b97\u6cd5\uff09\n\n\n\n    Args:\n\n\n        Lk \u9891\u7e41\u9879\u96c6\u5217\u8868\n\n\n        k \u8fd4\u56de\u7684\u9879\u96c6\u5143\u7d20\u4e2a\u6570\uff08\u82e5\u5143\u7d20\u7684\u524d k-2 \u76f8\u540c\uff0c\u5c31\u8fdb\u884c\u5408\u5e76\uff09\n\n\n    Returns:\n\n\n        retList \u5143\u7d20\u4e24\u4e24\u5408\u5e76\u7684\u6570\u636e\u96c6\n\n\n    \n\n\n    \nretList\n \n=\n \n[]\n\n    \nlenLk\n \n=\n \nlen\n(\nLk\n)\n\n    \nfor\n \ni\n \nin\n \nrange\n(\nlenLk\n):\n\n        \nfor\n \nj\n \nin\n \nrange\n(\ni\n+\n1\n,\n \nlenLk\n):\n\n            \nL1\n \n=\n \nlist\n(\nLk\n[\ni\n])[:\n \nk\n-\n2\n]\n\n            \nL2\n \n=\n \nlist\n(\nLk\n[\nj\n])[:\n \nk\n-\n2\n]\n\n            \n# print \n-----i=\n, i, k-2, Lk, Lk[i], list(Lk[i])[: k-2]\n\n            \n# print \n-----j=\n, j, k-2, Lk, Lk[j], list(Lk[j])[: k-2]\n\n            \nL1\n.\nsort\n()\n\n            \nL2\n.\nsort\n()\n\n            \n# \u7b2c\u4e00\u6b21 L1,L2 \u4e3a\u7a7a\uff0c\u5143\u7d20\u76f4\u63a5\u8fdb\u884c\u5408\u5e76\uff0c\u8fd4\u56de\u5143\u7d20\u4e24\u4e24\u5408\u5e76\u7684\u6570\u636e\u96c6\n\n            \n# if first k-2 elements are equal\n\n            \nif\n \nL1\n \n==\n \nL2\n:\n\n                \n# set union\n\n                \n# print \nunion=\n, Lk[i] | Lk[j], Lk[i], Lk[j]\n\n                \nretList\n.\nappend\n(\nLk\n[\ni\n]\n \n|\n \nLk\n[\nj\n])\n\n    \nreturn\n \nretList\n\n\n\n\n\n\u627e\u51fa\u6570\u636e\u96c6 dataSet \u4e2d\u652f\u6301\u5ea6 \n= \u6700\u5c0f\u652f\u6301\u5ea6\u7684\u5019\u9009\u9879\u96c6\u4ee5\u53ca\u5b83\u4eec\u7684\u652f\u6301\u5ea6\u3002\u5373\u6211\u4eec\u7684\u9891\u7e41\u9879\u96c6\u3002\n\n\n# \u627e\u51fa\u6570\u636e\u96c6 dataSet \u4e2d\u652f\u6301\u5ea6 \n= \u6700\u5c0f\u652f\u6301\u5ea6\u7684\u5019\u9009\u9879\u96c6\u4ee5\u53ca\u5b83\u4eec\u7684\u652f\u6301\u5ea6\u3002\u5373\u6211\u4eec\u7684\u9891\u7e41\u9879\u96c6\u3002\n\n\ndef\n \napriori\n(\ndataSet\n,\n \nminSupport\n=\n0.5\n):\n\n    \napriori\uff08\u9996\u5148\u6784\u5efa\u96c6\u5408 C1\uff0c\u7136\u540e\u626b\u63cf\u6570\u636e\u96c6\u6765\u5224\u65ad\u8fd9\u4e9b\u53ea\u6709\u4e00\u4e2a\u5143\u7d20\u7684\u9879\u96c6\u662f\u5426\u6ee1\u8db3\u6700\u5c0f\u652f\u6301\u5ea6\u7684\u8981\u6c42\u3002\u90a3\u4e48\u6ee1\u8db3\u6700\u5c0f\u652f\u6301\u5ea6\u8981\u6c42\u7684\u9879\u96c6\u6784\u6210\u96c6\u5408 L1\u3002\u7136\u540e L1 \u4e2d\u7684\u5143\u7d20\u76f8\u4e92\u7ec4\u5408\u6210 C2\uff0cC2 \u518d\u8fdb\u4e00\u6b65\u8fc7\u6ee4\u53d8\u6210 L2\uff0c\u7136\u540e\u4ee5\u6b64\u7c7b\u63a8\uff0c\u77e5\u9053 CN \u7684\u957f\u5ea6\u4e3a 0 \u65f6\u7ed3\u675f\uff0c\u5373\u53ef\u627e\u51fa\u6240\u6709\u9891\u7e41\u9879\u96c6\u7684\u652f\u6301\u5ea6\u3002\uff09\n\n\n\n    Args:\n\n\n        dataSet \u539f\u59cb\u6570\u636e\u96c6\n\n\n        minSupport \u652f\u6301\u5ea6\u7684\u9608\u503c\n\n\n    Returns:\n\n\n        L \u9891\u7e41\u9879\u96c6\u7684\u5168\u96c6\n\n\n        supportData \u6240\u6709\u5143\u7d20\u548c\u652f\u6301\u5ea6\u7684\u5168\u96c6\n\n\n    \n\n    \n# C1 \u5373\u5bf9 dataSet \u8fdb\u884c\u53bb\u91cd\uff0c\u6392\u5e8f\uff0c\u653e\u5165 list \u4e2d\uff0c\u7136\u540e\u8f6c\u6362\u6240\u6709\u7684\u5143\u7d20\u4e3a frozenset\n\n    \nC1\n \n=\n \ncreateC1\n(\ndataSet\n)\n\n    \n# \u5bf9\u6bcf\u4e00\u884c\u8fdb\u884c set \u8f6c\u6362\uff0c\u7136\u540e\u5b58\u653e\u5230\u96c6\u5408\u4e2d\n\n    \nD\n \n=\n \nmap\n(\nset\n,\n \ndataSet\n)\n\n    \nprint\n \nD=\n,\n \nD\n\n    \n# \u8ba1\u7b97\u5019\u9009\u6570\u636e\u96c6 C1 \u5728\u6570\u636e\u96c6 D \u4e2d\u7684\u652f\u6301\u5ea6\uff0c\u5e76\u8fd4\u56de\u652f\u6301\u5ea6\u5927\u4e8e minSupport \u7684\u6570\u636e\n\n    \nL1\n,\n \nsupportData\n \n=\n \nscanD\n(\nD\n,\n \nC1\n,\n \nminSupport\n)\n\n    \n# print \nL1=\n, L1, \n\\n\n, \noutcome: \n, supportData\n\n\n    \n# L \u52a0\u4e86\u4e00\u5c42 list, L \u4e00\u5171 2 \u5c42 list\n\n    \nL\n \n=\n \n[\nL1\n]\n\n    \nk\n \n=\n \n2\n\n    \n# \u5224\u65ad L \u7684\u7b2c k-2 \u9879\u7684\u6570\u636e\u957f\u5ea6\u662f\u5426 \n 0\u3002\u7b2c\u4e00\u6b21\u6267\u884c\u65f6 L \u4e3a [[frozenset([1]), frozenset([3]), frozenset([2]), frozenset([5])]]\u3002L[k-2]=L[0]=[frozenset([1]), frozenset([3]), frozenset([2]), frozenset([5])]\uff0c\u6700\u540e\u9762 k += 1\n\n    \nwhile\n \n(\nlen\n(\nL\n[\nk\n-\n2\n])\n \n \n0\n):\n\n        \nprint\n \nk=\n,\n \nk\n,\n \nL\n,\n \nL\n[\nk\n-\n2\n]\n\n        \nCk\n \n=\n \naprioriGen\n(\nL\n[\nk\n-\n2\n],\n \nk\n)\n \n# \u4f8b\u5982: \u4ee5 {0},{1},{2} \u4e3a\u8f93\u5165\u4e14 k = 2 \u5219\u8f93\u51fa {0,1}, {0,2}, {1,2}. \u4ee5 {0,1},{0,2},{1,2} \u4e3a\u8f93\u5165\u4e14 k = 3 \u5219\u8f93\u51fa {0,1,2}\n\n        \nprint\n \nCk\n,\n \nCk\n\n\n        \nLk\n,\n \nsupK\n \n=\n \nscanD\n(\nD\n,\n \nCk\n,\n \nminSupport\n)\n \n# \u8ba1\u7b97\u5019\u9009\u6570\u636e\u96c6 CK \u5728\u6570\u636e\u96c6 D \u4e2d\u7684\u652f\u6301\u5ea6\uff0c\u5e76\u8fd4\u56de\u652f\u6301\u5ea6\u5927\u4e8e minSupport \u7684\u6570\u636e\n\n        \n# \u4fdd\u5b58\u6240\u6709\u5019\u9009\u9879\u96c6\u7684\u652f\u6301\u5ea6\uff0c\u5982\u679c\u5b57\u5178\u6ca1\u6709\uff0c\u5c31\u8ffd\u52a0\u5143\u7d20\uff0c\u5982\u679c\u6709\uff0c\u5c31\u66f4\u65b0\u5143\u7d20\n\n        \nsupportData\n.\nupdate\n(\nsupK\n)\n\n        \nif\n \nlen\n(\nLk\n)\n \n==\n \n0\n:\n\n            \nbreak\n\n        \n# Lk \u8868\u793a\u6ee1\u8db3\u9891\u7e41\u5b50\u9879\u7684\u96c6\u5408\uff0cL \u5143\u7d20\u5728\u589e\u52a0\uff0c\u4f8b\u5982: \n\n        \n# l=[[set(1), set(2), set(3)]]\n\n        \n# l=[[set(1), set(2), set(3)], [set(1, 2), set(2, 3)]]\n\n        \nL\n.\nappend\n(\nLk\n)\n\n        \nk\n \n+=\n \n1\n\n        \n# print \nk=\n, k, len(L[k-2])\n\n    \nreturn\n \nL\n,\n \nsupportData\n\n\n\n\n\n\u5230\u8fd9\u4e00\u6b65\uff0c\u6211\u4eec\u5c31\u627e\u51fa\u6211\u4eec\u6240\u9700\u8981\u7684 \n\u9891\u7e41\u9879\u96c6\n \u548c\u4ed6\u4eec\u7684 \n\u652f\u6301\u5ea6\n \u4e86\uff0c\u63a5\u4e0b\u6765\u518d\u627e\u51fa\u5173\u8054\u89c4\u5219\u5373\u53ef\uff01\n\n\n\u5b8c\u6574\u4ee3\u7801\u5730\u5740: \nhttps://github.com/apachecn/MachineLearning/blob/master/src/python/11.Apriori/apriori.py\n\n\n\u4ece\u9891\u7e41\u9879\u96c6\u4e2d\u6316\u6398\u5173\u8054\u89c4\u5219\n\n\n\u524d\u9762\u6211\u4eec\u4ecb\u7ecd\u4e86\u7528\u4e8e\u53d1\u73b0 \n\u9891\u7e41\u9879\u96c6\n \u7684 Apriori \u7b97\u6cd5\uff0c\u73b0\u5728\u8981\u89e3\u51b3\u7684\u95ee\u9898\u662f\u5982\u4f55\u627e\u51fa \n\u5173\u8054\u89c4\u5219\n\u3002\n\n\n\u8981\u627e\u5230 \n\u5173\u8054\u89c4\u5219\n\uff0c\u6211\u4eec\u9996\u5148\u4ece\u4e00\u4e2a \n\u9891\u7e41\u9879\u96c6\n \u5f00\u59cb\u3002\n\u6211\u4eec\u77e5\u9053\u96c6\u5408\u4e2d\u7684\u5143\u7d20\u662f\u4e0d\u91cd\u590d\u7684\uff0c\u4f46\u6211\u4eec\u60f3\u77e5\u9053\u57fa\u4e8e\u8fd9\u4e9b\u5143\u7d20\u80fd\u5426\u83b7\u5f97\u5176\u5b83\u5185\u5bb9\u3002\n\u67d0\u4e2a\u5143\u7d20\u6216\u67d0\u4e2a\u5143\u7d20\u96c6\u5408\u53ef\u80fd\u4f1a\u63a8\u5bfc\u51fa\u53e6\u4e00\u4e2a\u5143\u7d20\u3002\n\u4ece\u5148\u524d \n\u6742\u8d27\u5e97\n \u7684\u4f8b\u5b50\u53ef\u4ee5\u5f97\u5230\uff0c\u5982\u679c\u6709\u4e00\u4e2a\u9891\u7e41\u9879\u96c6 {\u8c46\u5976,\u83b4\u82e3}\uff0c\u90a3\u4e48\u5c31\u53ef\u80fd\u6709\u4e00\u6761\u5173\u8054\u89c4\u5219 \u201c\u8c46\u5976 -\n \u83b4\u82e3\u201d\u3002\n\u8fd9\u610f\u5473\u7740\u5982\u679c\u6709\u4eba\u4e70\u4e86\u8c46\u5976\uff0c\u90a3\u4e48\u5728\u7edf\u8ba1\u4e0a\u4ed6\u4f1a\u8d2d\u4e70\u83b4\u82e3\u7684\u6982\u7387\u6bd4\u8f83\u5927\u3002\n\u4f46\u662f\uff0c\u8fd9\u4e00\u6761\u4ef6\u53cd\u8fc7\u6765\u5e76\u4e0d\u603b\u662f\u6210\u7acb\u3002\n\u4e5f\u5c31\u662f\u8bf4 \u201c\u8c46\u5976 -\n \u83b4\u82e3\u201d \u7edf\u8ba1\u4e0a\u663e\u8457\uff0c\u90a3\u4e48 \u201c\u83b4\u82e3 -\n \u8c46\u5976\u201d \u4e5f\u4e0d\u4e00\u5b9a\u6210\u7acb\u3002\n\n\n\u524d\u9762\u6211\u4eec\u7ed9\u51fa\u4e86 \n\u9891\u7e41\u9879\u96c6\n \u7684\u91cf\u5316\u5b9a\u4e49\uff0c\u5373\u5b83\u6ee1\u8db3\u6700\u5c0f\u652f\u6301\u5ea6\u8981\u6c42\u3002\n\n\u5bf9\u4e8e \n\u5173\u8054\u89c4\u5219\n\uff0c\u6211\u4eec\u4e5f\u6709\u7c7b\u4f3c\u7684\u91cf\u5316\u65b9\u6cd5\uff0c\u8fd9\u79cd\u91cf\u5316\u6307\u6807\u79f0\u4e4b\u4e3a \n\u53ef\u4fe1\u5ea6\n\u3002\n\n\u4e00\u6761\u89c4\u5219 A -\n B \u7684\u53ef\u4fe1\u5ea6\u5b9a\u4e49\u4e3a support(A | B) / support(A)\u3002\uff08\u6ce8\u610f: \u5728 python \u4e2d | \u8868\u793a\u96c6\u5408\u7684\u5e76\u64cd\u4f5c\uff0c\u800c\u6570\u5b66\u4e66\u96c6\u5408\u5e76\u7684\u7b26\u53f7\u662f U\uff09\u3002\n\n\nA | B\n \u662f\u6307\u6240\u6709\u51fa\u73b0\u5728\u96c6\u5408 A \u6216\u8005\u96c6\u5408 B \u4e2d\u7684\u5143\u7d20\u3002\n\n\u7531\u4e8e\u6211\u4eec\u5148\u524d\u5df2\u7ecf\u8ba1\u7b97\u51fa\u6240\u6709 \n\u9891\u7e41\u9879\u96c6\n \u7684\u652f\u6301\u5ea6\u4e86\uff0c\u73b0\u5728\u6211\u4eec\u8981\u505a\u7684\u53ea\u4e0d\u8fc7\u662f\u63d0\u53d6\u8fd9\u4e9b\u6570\u636e\u505a\u4e00\u6b21\u9664\u6cd5\u8fd0\u7b97\u5373\u53ef\u3002\n\n\n\u4e00\u4e2a\u9891\u7e41\u9879\u96c6\u53ef\u4ee5\u4ea7\u751f\u591a\u5c11\u6761\u5173\u8054\u89c4\u5219\u5462\uff1f\n\n\n\u5982\u4e0b\u56fe\u6240\u793a\uff0c\u7ed9\u51fa\u7684\u662f\u9879\u96c6 {0,1,2,3} \u4ea7\u751f\u7684\u6240\u6709\u5173\u8054\u89c4\u5219:\n\n\n\n\u4e0e\u6211\u4eec\u524d\u9762\u7684 \n\u9891\u7e41\u9879\u96c6\n \u751f\u6210\u4e00\u6837\uff0c\u6211\u4eec\u53ef\u4ee5\u4e3a\u6bcf\u4e2a\u9891\u7e41\u9879\u96c6\u4ea7\u751f\u8bb8\u591a\u5173\u8054\u89c4\u5219\u3002\n\n\u5982\u679c\u80fd\u51cf\u5c11\u89c4\u5219\u7684\u6570\u76ee\u6765\u786e\u4fdd\u95ee\u9898\u7684\u53ef\u89e3\u6790\uff0c\u90a3\u4e48\u8ba1\u7b97\u8d77\u6765\u5c31\u4f1a\u597d\u5f88\u591a\u3002\n\n\u901a\u8fc7\u89c2\u5bdf\uff0c\u6211\u4eec\u53ef\u4ee5\u77e5\u9053\uff0c\u5982\u679c\u67d0\u6761\u89c4\u5219\u5e76\u4e0d\u6ee1\u8db3 \n\u6700\u5c0f\u53ef\u4fe1\u5ea6\n \u8981\u6c42\uff0c\u90a3\u4e48\u8be5\u89c4\u5219\u7684\u6240\u6709\u5b50\u96c6\u4e5f\u4e0d\u4f1a\u6ee1\u8db3 \n\u6700\u5c0f\u53ef\u4fe1\u5ea6\n \u7684\u8981\u6c42\u3002\n\n\u5982\u4e0a\u56fe\u6240\u793a\uff0c\u5047\u8bbe \n123 -\n 3\n  \u5e76\u4e0d\u6ee1\u8db3\u6700\u5c0f\u53ef\u4fe1\u5ea6\u8981\u6c42\uff0c\u90a3\u4e48\u5c31\u77e5\u9053\u4efb\u4f55\u5de6\u90e8\u4e3a {0,1,2} \u5b50\u96c6\u7684\u89c4\u5219\u4e5f\u4e0d\u4f1a\u6ee1\u8db3 \n\u6700\u5c0f\u53ef\u4fe1\u5ea6\n \u7684\u8981\u6c42\u3002\n\u5373 \n12 -\n 03\n , \n02 -\n 13\n , \n01 -\n 23\n , \n2 -\n 013\n, \n1 -\n 023\n, \n0 -\n 123\n \u90fd\u4e0d\u6ee1\u8db3 \n\u6700\u5c0f\u53ef\u4fe1\u5ea6\n \u8981\u6c42\u3002  \n\n\n\u53ef\u4ee5\u5229\u7528\u5173\u8054\u89c4\u5219\u7684\u4e0a\u8ff0\u6027\u8d28\u5c5e\u6027\u6765\u51cf\u5c11\u9700\u8981\u6d4b\u8bd5\u7684\u89c4\u5219\u6570\u76ee\uff0c\u8ddf\u5148\u524d Apriori \u7b97\u6cd5\u7684\u5957\u8def\u4e00\u6837\u3002\n\n\u4ee5\u4e0b\u662f\u4e00\u4e9b\u8f85\u52a9\u51fd\u6570: \n\n\n\u8ba1\u7b97\u53ef\u4fe1\u5ea6\n\n\n# \u8ba1\u7b97\u53ef\u4fe1\u5ea6\uff08confidence\uff09\n\n\ndef\n \ncalcConf\n(\nfreqSet\n,\n \nH\n\n\n,\n \nsupportData\n,\n \nbrl\n,\n \nminConf\n=\n0.7\n):\n\n    \ncalcConf\uff08\u5bf9\u4e24\u4e2a\u5143\u7d20\u7684\u9891\u7e41\u9879\uff0c\u8ba1\u7b97\u53ef\u4fe1\u5ea6\uff0c\u4f8b\u5982\uff1a {1,2}/{1} \u6216\u8005 {1,2}/{2} \u770b\u662f\u5426\u6ee1\u8db3\u6761\u4ef6\uff09\n\n\n\n    Args:\n\n\n        freqSet \u9891\u7e41\u9879\u96c6\u4e2d\u7684\u5143\u7d20\uff0c\u4f8b\u5982: frozenset([1, 3])    \n\n\n        H \u9891\u7e41\u9879\u96c6\u4e2d\u7684\u5143\u7d20\u7684\u96c6\u5408\uff0c\u4f8b\u5982: [frozenset([1]), frozenset([3])]\n\n\n        supportData \u6240\u6709\u5143\u7d20\u7684\u652f\u6301\u5ea6\u7684\u5b57\u5178\n\n\n        brl \u5173\u8054\u89c4\u5219\u5217\u8868\u7684\u7a7a\u6570\u7ec4\n\n\n        minConf \u6700\u5c0f\u53ef\u4fe1\u5ea6\n\n\n    Returns:\n\n\n        prunedH \u8bb0\u5f55 \u53ef\u4fe1\u5ea6\u5927\u4e8e\u9608\u503c\u7684\u96c6\u5408\n\n\n    \n\n    \n# \u8bb0\u5f55\u53ef\u4fe1\u5ea6\u5927\u4e8e\u6700\u5c0f\u53ef\u4fe1\u5ea6\uff08minConf\uff09\u7684\u96c6\u5408\n\n    \nprunedH\n \n=\n \n[]\n\n    \nfor\n \nconseq\n \nin\n \nH\n:\n \n# \u5047\u8bbe freqSet = frozenset([1, 3]), H = [frozenset([1]), frozenset([3])]\uff0c\u90a3\u4e48\u73b0\u5728\u9700\u8981\u6c42\u51fa frozenset([1]) -\n frozenset([3]) \u7684\u53ef\u4fe1\u5ea6\u548c frozenset([3]) -\n frozenset([1]) \u7684\u53ef\u4fe1\u5ea6\n\n\n        \n# print \nconfData=\n, freqSet, H, conseq, freqSet-conseq\n\n        \nconf\n \n=\n \nsupportData\n[\nfreqSet\n]\n/\nsupportData\n[\nfreqSet\n-\nconseq\n]\n \n# \u652f\u6301\u5ea6\u5b9a\u4e49: a -\n b = support(a | b) / support(a). \u5047\u8bbe  freqSet = frozenset([1, 3]), conseq = [frozenset([1])]\uff0c\u90a3\u4e48 frozenset([1]) \u81f3 frozenset([3]) \u7684\u53ef\u4fe1\u5ea6\u4e3a = support(a | b) / support(a) = supportData[freqSet]/supportData[freqSet-conseq] = supportData[frozenset([1, 3])] / supportData[frozenset([1])]\n\n        \nif\n \nconf\n \n=\n \nminConf\n:\n\n            \n# \u53ea\u8981\u4e70\u4e86 freqSet-conseq \u96c6\u5408\uff0c\u4e00\u5b9a\u4f1a\u4e70 conseq \u96c6\u5408\uff08freqSet-conseq \u96c6\u5408\u548c conseq \u96c6\u5408\u662f\u5168\u96c6\uff09\n\n            \nprint\n \nfreqSet\n-\nconseq\n,\n \n--\n,\n \nconseq\n,\n \nconf:\n,\n \nconf\n\n            \nbrl\n.\nappend\n((\nfreqSet\n-\nconseq\n,\n \nconseq\n,\n \nconf\n))\n\n            \nprunedH\n.\nappend\n(\nconseq\n)\n\n    \nreturn\n \nprunedH\n\n\n````\n\n\n\n#### \u9012\u5f52\u8ba1\u7b97\u9891\u7e41\u9879\u96c6\u7684\u89c4\u5219\n\n\n\n``\n`\npython\n\n\n# \u9012\u5f52\u8ba1\u7b97\u9891\u7e41\u9879\u96c6\u7684\u89c4\u5219\n\n\ndef\n \nrulesFromConseq\n(\nfreqSet\n,\n \nH\n,\n \nsupportData\n,\n \nbrl\n,\n \nminConf\n=\n0.7\n):\n\n    \nrulesFromConseq\n\n\n\n    Args:\n\n\n        freqSet \u9891\u7e41\u9879\u96c6\u4e2d\u7684\u5143\u7d20\uff0c\u4f8b\u5982: frozenset([2, 3, 5])    \n\n\n        H \u9891\u7e41\u9879\u96c6\u4e2d\u7684\u5143\u7d20\u7684\u96c6\u5408\uff0c\u4f8b\u5982: [frozenset([2]), frozenset([3]), frozenset([5])]\n\n\n        supportData \u6240\u6709\u5143\u7d20\u7684\u652f\u6301\u5ea6\u7684\u5b57\u5178\n\n\n        brl \u5173\u8054\u89c4\u5219\u5217\u8868\u7684\u6570\u7ec4\n\n\n        minConf \u6700\u5c0f\u53ef\u4fe1\u5ea6\n\n\n    \n\n    \n# H[0] \u662f freqSet \u7684\u5143\u7d20\u7ec4\u5408\u7684\u7b2c\u4e00\u4e2a\u5143\u7d20\uff0c\u5e76\u4e14 H \u4e2d\u6240\u6709\u5143\u7d20\u7684\u957f\u5ea6\u90fd\u4e00\u6837\uff0c\u957f\u5ea6\u7531 aprioriGen(H, m+1) \u8fd9\u91cc\u7684 m + 1 \u6765\u63a7\u5236\n\n    \n# \u8be5\u51fd\u6570\u9012\u5f52\u65f6\uff0cH[0] \u7684\u957f\u5ea6\u4ece 1 \u5f00\u59cb\u589e\u957f 1 2 3 ...\n\n    \n# \u5047\u8bbe freqSet = frozenset([2, 3, 5]), H = [frozenset([2]), frozenset([3]), frozenset([5])]\n\n    \n# \u90a3\u4e48 m = len(H[0]) \u7684\u9012\u5f52\u7684\u503c\u4f9d\u6b21\u4e3a 1 2\n\n    \n# \u5728 m = 2 \u65f6, \u8df3\u51fa\u8be5\u9012\u5f52\u3002\u5047\u8bbe\u518d\u9012\u5f52\u4e00\u6b21\uff0c\u90a3\u4e48 H[0] = frozenset([2, 3, 5])\uff0cfreqSet = frozenset([2, 3, 5]) \uff0c\u6ca1\u5fc5\u8981\u518d\u8ba1\u7b97 freqSet \u4e0e H[0] \u7684\u5173\u8054\u89c4\u5219\u4e86\u3002\n\n    \nm\n \n=\n \nlen\n(\nH\n[\n0\n])\n\n    \nif\n \n(\nlen\n(\nfreqSet\n)\n \n \n(\nm\n \n+\n \n1\n)):\n\n        \nprint\n \nfreqSet******************\n,\n \nlen\n(\nfreqSet\n),\n \nm\n \n+\n \n1\n,\n \nfreqSet\n,\n \nH\n,\n \nH\n[\n0\n]\n\n        \n# \u751f\u6210 m+1 \u4e2a\u957f\u5ea6\u7684\u6240\u6709\u53ef\u80fd\u7684 H \u4e2d\u7684\u7ec4\u5408\uff0c\u5047\u8bbe H = [frozenset([2]), frozenset([3]), frozenset([5])]\n\n        \n# \u7b2c\u4e00\u6b21\u9012\u5f52\u8c03\u7528\u65f6\u751f\u6210 [frozenset([2, 3]), frozenset([2, 5]), frozenset([3, 5])]\n\n        \n# \u7b2c\u4e8c\u6b21 \u3002\u3002\u3002\u6ca1\u6709\u7b2c\u4e8c\u6b21\uff0c\u9012\u5f52\u6761\u4ef6\u5224\u65ad\u65f6\u5df2\u7ecf\u9000\u51fa\u4e86\n\n        \nHmp1\n \n=\n \naprioriGen\n(\nH\n,\n \nm\n+\n1\n)\n\n        \n# \u8fd4\u56de\u53ef\u4fe1\u5ea6\u5927\u4e8e\u6700\u5c0f\u53ef\u4fe1\u5ea6\u7684\u96c6\u5408\n\n        \nHmp1\n \n=\n \ncalcConf\n(\nfreqSet\n,\n \nHmp1\n,\n \nsupportData\n,\n \nbrl\n,\n \nminConf\n)\n\n        \nprint\n \nHmp1=\n,\n \nHmp1\n\n        \nprint\n \nlen(Hmp1)=\n,\n \nlen\n(\nHmp1\n),\n \nlen(freqSet)=\n,\n \nlen\n(\nfreqSet\n)\n\n        \n# \u8ba1\u7b97\u53ef\u4fe1\u5ea6\u540e\uff0c\u8fd8\u6709\u6570\u636e\u5927\u4e8e\u6700\u5c0f\u53ef\u4fe1\u5ea6\u7684\u8bdd\uff0c\u90a3\u4e48\u7ee7\u7eed\u9012\u5f52\u8c03\u7528\uff0c\u5426\u5219\u8df3\u51fa\u9012\u5f52\n\n        \nif\n \n(\nlen\n(\nHmp1\n)\n \n \n1\n):\n\n            \nprint\n \n----------------------\n,\n \nHmp1\n\n            \n# print len(freqSet),  len(Hmp1[0]) + 1\n\n            \nrulesFromConseq\n(\nfreqSet\n,\n \nHmp1\n,\n \nsupportData\n,\n \nbrl\n,\n \nminConf\n)\n\n\n\n\n\n\u751f\u6210\u5173\u8054\u89c4\u5219\n\n\n# \u751f\u6210\u5173\u8054\u89c4\u5219\n\n\ndef\n \ngenerateRules\n(\nL\n,\n \nsupportData\n,\n \nminConf\n=\n0.7\n):\n\n    \ngenerateRules\n\n\n\n    Args:\n\n\n        L \u9891\u7e41\u9879\u96c6\u5217\u8868\n\n\n        supportData \u9891\u7e41\u9879\u96c6\u652f\u6301\u5ea6\u7684\u5b57\u5178\n\n\n        minConf \u6700\u5c0f\u7f6e\u4fe1\u5ea6\n\n\n    Returns:\n\n\n        bigRuleList \u53ef\u4fe1\u5ea6\u89c4\u5219\u5217\u8868\uff08\u5173\u4e8e (A-\nB+\u7f6e\u4fe1\u5ea6) 3\u4e2a\u5b57\u6bb5\u7684\u7ec4\u5408\uff09\n\n\n    \n\n    \nbigRuleList\n \n=\n \n[]\n\n    \n# \u5047\u8bbe L = [[frozenset([1]), frozenset([3]), frozenset([2]), frozenset([5])], [frozenset([1, 3]), frozenset([2, 5]), frozenset([2, 3]), frozenset([3, 5])], [frozenset([2, 3, 5])]]\n\n    \nfor\n \ni\n \nin\n \nrange\n(\n1\n,\n \nlen\n(\nL\n)):\n\n        \n# \u83b7\u53d6\u9891\u7e41\u9879\u96c6\u4e2d\u6bcf\u4e2a\u7ec4\u5408\u7684\u6240\u6709\u5143\u7d20\n\n        \nfor\n \nfreqSet\n \nin\n \nL\n[\ni\n]:\n\n            \n# \u5047\u8bbe\uff1afreqSet= frozenset([1, 3]), H1=[frozenset([1]), frozenset([3])]\n\n            \n# \u7ec4\u5408\u603b\u7684\u5143\u7d20\u5e76\u904d\u5386\u5b50\u5143\u7d20\uff0c\u5e76\u8f6c\u5316\u4e3a frozenset \u96c6\u5408\uff0c\u518d\u5b58\u653e\u5230 list \u5217\u8868\u4e2d\n\n            \nH1\n \n=\n \n[\nfrozenset\n([\nitem\n])\n \nfor\n \nitem\n \nin\n \nfreqSet\n]\n\n            \n# 2 \u4e2a\u7684\u7ec4\u5408\uff0c\u8d70 else, 2 \u4e2a\u4ee5\u4e0a\u7684\u7ec4\u5408\uff0c\u8d70 if\n\n            \nif\n \n(\ni\n \n \n1\n):\n\n                \nrulesFromConseq\n(\nfreqSet\n,\n \nH1\n,\n \nsupportData\n,\n \nbigRuleList\n,\n \nminConf\n)\n\n            \nelse\n:\n\n                \ncalcConf\n(\nfreqSet\n,\n \nH1\n,\n \nsupportData\n,\n \nbigRuleList\n,\n \nminConf\n)\n\n    \nreturn\n \nbigRuleList\n\n\n\n\n\n\u5230\u8fd9\u91cc\u4e3a\u6b62\uff0c\u901a\u8fc7\u8c03\u7528 generateRules \u51fd\u6570\u5373\u53ef\u5f97\u51fa\u6211\u4eec\u6240\u9700\u7684 \n\u5173\u8054\u89c4\u5219\n\u3002\n\n\n\n\n\u5206\u7ea7\u6cd5\uff1a \u9891\u7e41\u9879\u96c6-\n\u5173\u8054\u89c4\u5219\n\n\n1.\u9996\u5148\u4ece\u4e00\u4e2a\u9891\u7e41\u9879\u96c6\u5f00\u59cb\uff0c\u63a5\u7740\u521b\u5efa\u4e00\u4e2a\u89c4\u5219\u5217\u8868\uff0c\u5176\u4e2d\u89c4\u5219\u53f3\u90e8\u5206\u53ea\u5305\u542b\u4e00\u4e2a\u5143\u7d20\uff0c\u7136\u540e\u5bf9\u8fd9\u4e2a\u89c4\u5219\u8fdb\u884c\u6d4b\u8bd5\u3002\n\n\n2.\u63a5\u4e0b\u6765\u5408\u5e76\u6240\u6709\u5269\u4f59\u89c4\u5219\u6765\u521b\u5efa\u4e00\u4e2a\u65b0\u7684\u89c4\u5219\u5217\u8868\uff0c\u5176\u4e2d\u89c4\u5219\u53f3\u90e8\u5305\u542b\u4e24\u4e2a\u5143\u7d20\u3002\n\n\n\u5982\u4e0b\u56fe\uff1a\n\n\n\n\n\n\n\n\n\u6700\u540e\uff1a \u6bcf\u6b21\u589e\u52a0\u9891\u7e41\u9879\u96c6\u7684\u5927\u5c0f\uff0cApriori \u7b97\u6cd5\u90fd\u4f1a\u91cd\u65b0\u626b\u63cf\u6574\u4e2a\u6570\u636e\u96c6\uff0c\u662f\u5426\u6709\u4f18\u5316\u7a7a\u95f4\u5462\uff1f \u4e0b\u4e00\u7ae0\uff1aFP-growth\u7b97\u6cd5\u7b49\u7740\u4f60\u7684\u5230\u6765\n\n\n\n\n\n\n\n\n\u4f5c\u8005\uff1a\n\u7247\u523b\n\n\nGitHub\u5730\u5740\n: \nhttps://github.com/apachecn/MachineLearning\n\n\n\u7248\u6743\u58f0\u660e\uff1a\u6b22\u8fce\u8f6c\u8f7d\u5b66\u4e60 =\n \u8bf7\u6807\u6ce8\u4fe1\u606f\u6765\u6e90\u4e8e \nApacheCN", 
            "title": "11.\u4f7f\u7528Apriori\u7b97\u6cd5\u8fdb\u884c\u5173\u8054\u5206\u6790"
        }, 
        {
            "location": "/\u4e66\u7c4d/\u673a\u5668\u5b66\u4e60\u5b9e\u6218/11.\u4f7f\u7528Apriori\u7b97\u6cd5\u8fdb\u884c\u5173\u8054\u5206\u6790/#11-apriori", 
            "text": "", 
            "title": "\u7b2c 11 \u7ae0 \u4f7f\u7528 Apriori \u7b97\u6cd5\u8fdb\u884c\u5173\u8054\u5206\u6790"
        }, 
        {
            "location": "/\u4e66\u7c4d/\u673a\u5668\u5b66\u4e60\u5b9e\u6218/11.\u4f7f\u7528Apriori\u7b97\u6cd5\u8fdb\u884c\u5173\u8054\u5206\u6790/#_1", 
            "text": "\u5173\u8054\u5206\u6790\u662f\u4e00\u79cd\u5728\u5927\u89c4\u6a21\u6570\u636e\u96c6\u4e2d\u5bfb\u627e\u6709\u8da3\u5173\u7cfb\u7684\u4efb\u52a1\u3002\n\u8fd9\u4e9b\u5173\u7cfb\u53ef\u4ee5\u6709\u4e24\u79cd\u5f62\u5f0f: \n* \u9891\u7e41\u9879\u96c6\uff08frequent item sets\uff09: \u7ecf\u5e38\u51fa\u73b0\u5728\u4e00\u5757\u7684\u7269\u54c1\u7684\u96c6\u5408\u3002\n* \u5173\u8054\u89c4\u5219\uff08associational rules\uff09: \u6697\u793a\u4e24\u79cd\u7269\u54c1\u4e4b\u95f4\u53ef\u80fd\u5b58\u5728\u5f88\u5f3a\u7684\u5173\u7cfb\u3002", 
            "title": "\u5173\u8054\u5206\u6790"
        }, 
        {
            "location": "/\u4e66\u7c4d/\u673a\u5668\u5b66\u4e60\u5b9e\u6218/11.\u4f7f\u7528Apriori\u7b97\u6cd5\u8fdb\u884c\u5173\u8054\u5206\u6790/#_2", 
            "text": "\u5173\u8054\u5206\u6790\uff08\u5173\u8054\u89c4\u5219\u5b66\u4e60): \u4ece\u5927\u89c4\u6a21\u6570\u636e\u96c6\u4e2d\u5bfb\u627e\u7269\u54c1\u95f4\u7684\u9690\u542b\u5173\u7cfb\u88ab\u79f0\u4f5c  \u5173\u8054\u5206\u6790(associati analysis)  \u6216\u8005  \u5173\u8054\u89c4\u5219\u5b66\u4e60\uff08association rule learning\uff09  \u3002\n\u4e0b\u9762\u662f\u7528\u4e00\u4e2a  \u6742\u8d27\u5e97  \u4f8b\u5b50\u6765\u8bf4\u660e\u8fd9\u4e24\u4e2a\u6982\u5ff5\uff0c\u5982\u4e0b\u56fe\u6240\u793a:     \u9891\u7e41\u9879\u96c6: {\u8461\u8404\u9152, \u5c3f\u5e03, \u8c46\u5976} \u5c31\u662f\u4e00\u4e2a\u9891\u7e41\u9879\u96c6\u7684\u4f8b\u5b50\u3002   \u5173\u8054\u89c4\u5219: \u5c3f\u5e03 -  \u8461\u8404\u9152 \u5c31\u662f\u4e00\u4e2a\u5173\u8054\u89c4\u5219\u3002\u8fd9\u610f\u5473\u7740\u5982\u679c\u987e\u5ba2\u4e70\u4e86\u5c3f\u5e03\uff0c\u90a3\u4e48\u4ed6\u5f88\u53ef\u80fd\u4f1a\u4e70\u8461\u8404\u9152\u3002   \u90a3\u4e48  \u9891\u7e41  \u7684\u5b9a\u4e49\u662f\u4ec0\u4e48\u5462\uff1f\u600e\u4e48\u6837\u624d\u7b97\u9891\u7e41\u5462\uff1f\n\u5ea6\u91cf\u5b83\u4eec\u7684\u65b9\u6cd5\u6709\u5f88\u591a\u79cd\uff0c\u8fd9\u91cc\u6211\u4eec\u6765\u7b80\u5355\u7684\u4ecb\u7ecd\u4e0b\u652f\u6301\u5ea6\u548c\u53ef\u4fe1\u5ea6\u3002\n* \u652f\u6301\u5ea6: \u6570\u636e\u96c6\u4e2d\u5305\u542b\u8be5\u9879\u96c6\u7684\u8bb0\u5f55\u6240\u5360\u7684\u6bd4\u4f8b\u3002\u4f8b\u5982\u4e0a\u56fe\u4e2d\uff0c{\u8c46\u5976} \u7684\u652f\u6301\u5ea6\u4e3a  \u3002{\u8c46\u5976, \u5c3f\u5e03} \u7684\u652f\u6301\u5ea6\u4e3a  \u3002\n* \u53ef\u4fe1\u5ea6: \u9488\u5bf9\u4e00\u6761\u8bf8\u5982 {\u5c3f\u5e03} -  {\u8461\u8404\u9152} \u8fd9\u6837\u5177\u4f53\u7684\u5173\u8054\u89c4\u5219\u6765\u5b9a\u4e49\u7684\u3002\u8fd9\u6761\u89c4\u5219\u7684  \u53ef\u4fe1\u5ea6  \u88ab\u5b9a\u4e49\u4e3a  \u652f\u6301\u5ea6({\u5c3f\u5e03, \u8461\u8404\u9152})/\u652f\u6301\u5ea6({\u5c3f\u5e03}) \uff0c\u4ece\u56fe\u4e2d\u53ef\u4ee5\u770b\u51fa \u652f\u6301\u5ea6({\u5c3f\u5e03, \u8461\u8404\u9152}) =  \uff0c\u652f\u6301\u5ea6({\u5c3f\u5e03}) =  \uff0c\u6240\u4ee5 {\u5c3f\u5e03} -  {\u8461\u8404\u9152} \u7684\u53ef\u4fe1\u5ea6 =   /   =   = 0.75\u3002  \u652f\u6301\u5ea6  \u548c  \u53ef\u4fe1\u5ea6  \u662f\u7528\u6765\u91cf\u5316  \u5173\u8054\u5206\u6790  \u662f\u5426\u6210\u529f\u7684\u4e00\u4e2a\u65b9\u6cd5\u3002\n\u5047\u8bbe\u60f3\u627e\u5230\u652f\u6301\u5ea6\u5927\u4e8e 0.8 \u7684\u6240\u6709\u9879\u96c6\uff0c\u5e94\u8be5\u5982\u4f55\u53bb\u505a\u5462\uff1f\n\u4e00\u4e2a\u529e\u6cd5\u662f\u751f\u6210\u4e00\u4e2a\u7269\u54c1\u6240\u6709\u53ef\u80fd\u7ec4\u5408\u7684\u6e05\u5355\uff0c\u7136\u540e\u5bf9\u6bcf\u4e00\u79cd\u7ec4\u5408\u7edf\u8ba1\u5b83\u51fa\u73b0\u7684\u9891\u7e41\u7a0b\u5ea6\uff0c\u4f46\u662f\u5f53\u7269\u54c1\u6210\u5343\u4e0a\u4e07\u65f6\uff0c\u4e0a\u8ff0\u505a\u6cd5\u5c31\u975e\u5e38\u975e\u5e38\u6162\u4e86\u3002\n\u6211\u4eec\u9700\u8981\u8be6\u7ec6\u5206\u6790\u4e0b\u8fd9\u79cd\u60c5\u51b5\u5e76\u8ba8\u8bba\u4e0b Apriori \u539f\u7406\uff0c\u8be5\u539f\u7406\u4f1a\u51cf\u5c11\u5173\u8054\u89c4\u5219\u5b66\u4e60\u65f6\u6240\u9700\u7684\u8ba1\u7b97\u91cf\u3002", 
            "title": "\u76f8\u5173\u672f\u8bed"
        }, 
        {
            "location": "/\u4e66\u7c4d/\u673a\u5668\u5b66\u4e60\u5b9e\u6218/11.\u4f7f\u7528Apriori\u7b97\u6cd5\u8fdb\u884c\u5173\u8054\u5206\u6790/#apriori", 
            "text": "\u5047\u8bbe\u6211\u4eec\u4e00\u5171\u6709 4 \u4e2a\u5546\u54c1: \u5546\u54c10, \u5546\u54c11, \u5546\u54c12, \u5546\u54c13\u3002\n\u6240\u6709\u53ef\u80fd\u7684\u60c5\u51b5\u5982\u4e0b:  \n\u5982\u679c\u6211\u4eec\u8ba1\u7b97\u6240\u6709\u7ec4\u5408\u7684\u652f\u6301\u5ea6\uff0c\u4e5f\u9700\u8981\u8ba1\u7b97 15 \u6b21\u3002\u5373 2^N - 1 = 2^4 - 1 = 15\u3002 \n\u968f\u7740\u7269\u54c1\u7684\u589e\u52a0\uff0c\u8ba1\u7b97\u7684\u6b21\u6570\u5448\u6307\u6570\u7684\u5f62\u5f0f\u589e\u957f ...  \n\u4e3a\u4e86\u964d\u4f4e\u8ba1\u7b97\u6b21\u6570\u548c\u65f6\u95f4\uff0c\u7814\u7a76\u4eba\u5458\u53d1\u73b0\u4e86\u4e00\u79cd\u6240\u8c13\u7684 Apriori \u539f\u7406\uff0c\u5373\u67d0\u4e2a\u9879\u96c6\u662f\u9891\u7e41\u7684\uff0c\u90a3\u4e48\u5b83\u7684\u6240\u6709\u5b50\u96c6\u4e5f\u662f\u9891\u7e41\u7684\u3002\n\u4f8b\u5982\uff0c\u5982\u679c {0, 1} \u662f\u9891\u7e41\u7684\uff0c\u90a3\u4e48 {0}, {1} \u4e5f\u662f\u9891\u7e41\u7684\u3002\n\u8be5\u539f\u7406\u76f4\u89c2\u4e0a\u6ca1\u6709\u4ec0\u4e48\u5e2e\u52a9\uff0c\u4f46\u662f\u5982\u679c\u53cd\u8fc7\u6765\u770b\u5c31\u6709\u7528\u4e86\uff0c\u4e5f\u5c31\u662f\u8bf4\u5982\u679c\u4e00\u4e2a\u9879\u96c6\u662f  \u975e\u9891\u7e41\u9879\u96c6 \uff0c\u90a3\u4e48\u5b83\u7684\u6240\u6709\u8d85\u96c6\u4e5f\u662f\u975e\u9891\u7e41\u9879\u96c6\uff0c\u5982\u4e0b\u56fe\u6240\u793a:     \u5728\u56fe\u4e2d\u6211\u4eec\u53ef\u4ee5\u770b\u5230\uff0c\u5df2\u77e5\u7070\u8272\u90e8\u5206 {2,3} \u662f  \u975e\u9891\u7e41\u9879\u96c6 \uff0c\u90a3\u4e48\u5229\u7528\u4e0a\u9762\u7684\u77e5\u8bc6\uff0c\u6211\u4eec\u5c31\u53ef\u4ee5\u77e5\u9053 {0,2,3} {1,2,3} {0,1,2,3} \u90fd\u662f  \u975e\u9891\u7e41\u7684 \u3002\n\u4e5f\u5c31\u662f\u8bf4\uff0c\u8ba1\u7b97\u51fa {2,3} \u7684\u652f\u6301\u5ea6\uff0c\u77e5\u9053\u5b83\u662f  \u975e\u9891\u7e41  \u7684\u4e4b\u540e\uff0c\u5c31\u4e0d\u9700\u8981\u518d\u8ba1\u7b97 {0,2,3} {1,2,3} {0,1,2,3} \u7684\u652f\u6301\u5ea6\uff0c\u56e0\u4e3a\u6211\u4eec\u77e5\u9053\u8fd9\u4e9b\u96c6\u5408\u4e0d\u4f1a\u6ee1\u8db3\u6211\u4eec\u7684\u8981\u6c42\u3002\n\u4f7f\u7528\u8be5\u539f\u7406\u5c31\u53ef\u4ee5\u907f\u514d\u9879\u96c6\u6570\u76ee\u7684\u6307\u6570\u589e\u957f\uff0c\u4ece\u800c\u5728\u5408\u7406\u7684\u65f6\u95f4\u5185\u8ba1\u7b97\u51fa\u9891\u7e41\u9879\u96c6\u3002  Apriori \u7b97\u6cd5\u4f18\u7f3a\u70b9  * \u4f18\u70b9\uff1a\u6613\u7f16\u7801\u5b9e\u73b0\n* \u7f3a\u70b9\uff1a\u5728\u5927\u6570\u636e\u96c6\u4e0a\u53ef\u80fd\u8f83\u6162\n* \u9002\u7528\u6570\u636e\u7c7b\u578b\uff1a\u6570\u503c\u578b \u6216\u8005 \u6807\u79f0\u578b\u6570\u636e\u3002  Apriori \u7b97\u6cd5\u6d41\u7a0b\u6b65\u9aa4\uff1a  * \u6536\u96c6\u6570\u636e\uff1a\u4f7f\u7528\u4efb\u610f\u65b9\u6cd5\u3002\n* \u51c6\u5907\u6570\u636e\uff1a\u4efb\u4f55\u6570\u636e\u7c7b\u578b\u90fd\u53ef\u4ee5\uff0c\u56e0\u4e3a\u6211\u4eec\u53ea\u4fdd\u5b58\u96c6\u5408\u3002\n* \u5206\u6790\u6570\u636e\uff1a\u4f7f\u7528\u4efb\u610f\u65b9\u6cd5\u3002\n* \u8bad\u7ec3\u6570\u636e\uff1a\u4f7f\u7528Apiori\u7b97\u6cd5\u6765\u627e\u5230\u9891\u7e41\u9879\u96c6\u3002\n* \u6d4b\u8bd5\u7b97\u6cd5\uff1a\u4e0d\u9700\u8981\u6d4b\u8bd5\u8fc7\u7a0b\u3002\n* \u4f7f\u7528\u7b97\u6cd5\uff1a\u7528\u8bed\u53d1\u73b0\u9891\u7e41\u9879\u96c6\u4ee5\u53ca\u7269\u54c1\u4e4b\u95f4\u7684\u5173\u8054\u89c4\u5219\u3002", 
            "title": "Apriori \u539f\u7406"
        }, 
        {
            "location": "/\u4e66\u7c4d/\u673a\u5668\u5b66\u4e60\u5b9e\u6218/11.\u4f7f\u7528Apriori\u7b97\u6cd5\u8fdb\u884c\u5173\u8054\u5206\u6790/#apriori_1", 
            "text": "\u524d\u9762\u63d0\u5230\uff0c\u5173\u8054\u5206\u6790\u7684\u76ee\u6807\u5305\u62ec\u4e24\u9879: \u53d1\u73b0  \u9891\u7e41\u9879\u96c6  \u548c\u53d1\u73b0  \u5173\u8054\u89c4\u5219 \u3002\n\u9996\u5148\u9700\u8981\u627e\u5230  \u9891\u7e41\u9879\u96c6 \uff0c\u7136\u540e\u624d\u80fd\u53d1\u73b0  \u5173\u8054\u89c4\u5219 \u3002  Apriori  \u7b97\u6cd5\u662f\u53d1\u73b0  \u9891\u7e41\u9879\u96c6  \u7684\u4e00\u79cd\u65b9\u6cd5\u3002\nApriori \u7b97\u6cd5\u7684\u4e24\u4e2a\u8f93\u5165\u53c2\u6570\u5206\u522b\u662f\u6700\u5c0f\u652f\u6301\u5ea6\u548c\u6570\u636e\u96c6\u3002\n\u8be5\u7b97\u6cd5\u9996\u5148\u4f1a\u751f\u6210\u6240\u6709\u5355\u4e2a\u7269\u54c1\u7684\u9879\u96c6\u5217\u8868\u3002\n\u63a5\u7740\u626b\u63cf\u4ea4\u6613\u8bb0\u5f55\u6765\u67e5\u770b\u54ea\u4e9b\u9879\u96c6\u6ee1\u8db3\u6700\u5c0f\u652f\u6301\u5ea6\u8981\u6c42\uff0c\u90a3\u4e9b\u4e0d\u6ee1\u8db3\u6700\u5c0f\u652f\u6301\u5ea6\u8981\u6c42\u7684\u96c6\u5408\u4f1a\u88ab\u53bb\u6389\u3002\n\u71c3\u5c3d\u540e\u5bf9\u751f\u4e0b\u6765\u7684\u96c6\u5408\u8fdb\u884c\u7ec4\u5408\u4ee5\u58f0\u573a\u5305\u542b\u4e24\u4e2a\u5143\u7d20\u7684\u9879\u96c6\u3002\n\u63a5\u4e0b\u6765\u518d\u91cd\u65b0\u626b\u63cf\u4ea4\u6613\u8bb0\u5f55\uff0c\u53bb\u6389\u4e0d\u6ee1\u8db3\u6700\u5c0f\u652f\u6301\u5ea6\u7684\u9879\u96c6\u3002\n\u8be5\u8fc7\u7a0b\u91cd\u590d\u8fdb\u884c\u76f4\u5230\u6240\u6709\u9879\u96c6\u88ab\u53bb\u6389\u3002", 
            "title": "Apriori \u7b97\u6cd5\u7684\u4f7f\u7528"
        }, 
        {
            "location": "/\u4e66\u7c4d/\u673a\u5668\u5b66\u4e60\u5b9e\u6218/11.\u4f7f\u7528Apriori\u7b97\u6cd5\u8fdb\u884c\u5173\u8054\u5206\u6790/#_3", 
            "text": "\u4e0b\u9762\u4f1a\u521b\u5efa\u4e00\u4e2a\u7528\u4e8e\u6784\u5efa\u521d\u59cb\u96c6\u5408\u7684\u51fd\u6570\uff0c\u4e5f\u4f1a\u521b\u5efa\u4e00\u4e2a\u901a\u8fc7\u626b\u63cf\u6570\u636e\u96c6\u4ee5\u5bfb\u627e\u4ea4\u6613\u8bb0\u5f55\u5b50\u96c6\u7684\u51fd\u6570\uff0c\n\u6570\u636e\u626b\u63cf\u7684\u4f2a\u4ee3\u7801\u5982\u4e0b: \n* \u5bf9\u6570\u636e\u96c6\u4e2d\u7684\u6bcf\u6761\u4ea4\u6613\u8bb0\u5f55 tran\n* \u5bf9\u6bcf\u4e2a\u5019\u9009\u9879\u96c6 can\n    * \u68c0\u67e5\u4e00\u4e0b can \u662f\u5426\u662f tran \u7684\u5b50\u96c6: \u5982\u679c\u662f\u5219\u589e\u52a0 can \u7684\u8ba1\u6570\u503c\n* \u5bf9\u6bcf\u4e2a\u5019\u9009\u9879\u96c6\n    * \u5982\u679c\u5176\u652f\u6301\u5ea6\u4e0d\u4f4e\u4e8e\u6700\u5c0f\u503c\uff0c\u5219\u4fdd\u7559\u8be5\u9879\u96c6\n    * \u8fd4\u56de\u6240\u6709\u9891\u7e41\u9879\u96c6\u5217\u8868\n\u4ee5\u4e0b\u662f\u4e00\u4e9b\u8f85\u52a9\u51fd\u6570\u3002", 
            "title": "\u751f\u6210\u5019\u9009\u9879\u96c6"
        }, 
        {
            "location": "/\u4e66\u7c4d/\u673a\u5668\u5b66\u4e60\u5b9e\u6218/11.\u4f7f\u7528Apriori\u7b97\u6cd5\u8fdb\u884c\u5173\u8054\u5206\u6790/#_4", 
            "text": "# \u52a0\u8f7d\u6570\u636e\u96c6  def   loadDataSet (): \n     return   [[ 1 ,   3 ,   4 ],   [ 2 ,   3 ,   5 ],   [ 1 ,   2 ,   3 ,   5 ],   [ 2 ,   5 ]]", 
            "title": "\u52a0\u8f7d\u6570\u636e\u96c6"
        }, 
        {
            "location": "/\u4e66\u7c4d/\u673a\u5668\u5b66\u4e60\u5b9e\u6218/11.\u4f7f\u7528Apriori\u7b97\u6cd5\u8fdb\u884c\u5173\u8054\u5206\u6790/#c1-dataset-list-frozenset", 
            "text": "# \u521b\u5efa\u96c6\u5408 C1\u3002\u5373\u5bf9 dataSet \u8fdb\u884c\u53bb\u91cd\uff0c\u6392\u5e8f\uff0c\u653e\u5165 list \u4e2d\uff0c\u7136\u540e\u8f6c\u6362\u6240\u6709\u7684\u5143\u7d20\u4e3a frozenset  def   createC1 ( dataSet ): \n     createC1\uff08\u521b\u5efa\u96c6\u5408 C1\uff09      Args:          dataSet \u539f\u59cb\u6570\u636e\u96c6      Returns:          frozenset \u8fd4\u56de\u4e00\u4e2a frozenset \u683c\u5f0f\u7684 list       \n\n     C1   =   [] \n     for   transaction   in   dataSet : \n         for   item   in   transaction : \n             if   not   [ item ]   in   C1 : \n                 # \u904d\u5386\u6240\u6709\u7684\u5143\u7d20\uff0c\u5982\u679c\u4e0d\u5728 C1 \u51fa\u73b0\u8fc7\uff0c\u90a3\u4e48\u5c31 append \n                 C1 . append ([ item ]) \n     # \u5bf9\u6570\u7ec4\u8fdb\u884c `\u4ece\u5c0f\u5230\u5927` \u7684\u6392\u5e8f \n     print   sort \u524d= ,   C1 \n     C1 . sort () \n     # frozenset \u8868\u793a\u51bb\u7ed3\u7684 set \u96c6\u5408\uff0c\u5143\u7d20\u65e0\u6539\u53d8\uff1b\u53ef\u4ee5\u628a\u5b83\u5f53\u5b57\u5178\u7684 key \u6765\u4f7f\u7528 \n     print   sort \u540e= ,   C1 \n     print   frozenset= ,   map ( frozenset ,   C1 ) \n     return   map ( frozenset ,   C1 )", 
            "title": "\u521b\u5efa\u96c6\u5408 C1\u3002\u5373\u5bf9 dataSet \u8fdb\u884c\u53bb\u91cd\uff0c\u6392\u5e8f\uff0c\u653e\u5165 list \u4e2d\uff0c\u7136\u540e\u8f6c\u6362\u6240\u6709\u7684\u5143\u7d20\u4e3a frozenset"
        }, 
        {
            "location": "/\u4e66\u7c4d/\u673a\u5668\u5b66\u4e60\u5b9e\u6218/11.\u4f7f\u7528Apriori\u7b97\u6cd5\u8fdb\u884c\u5173\u8054\u5206\u6790/#ck-d-minsupport", 
            "text": "# \u8ba1\u7b97\u5019\u9009\u6570\u636e\u96c6 CK \u5728\u6570\u636e\u96c6 D \u4e2d\u7684\u652f\u6301\u5ea6\uff0c\u5e76\u8fd4\u56de\u652f\u6301\u5ea6\u5927\u4e8e\u6700\u5c0f\u652f\u6301\u5ea6\uff08minSupport\uff09\u7684\u6570\u636e  def   scanD ( D ,   Ck ,   minSupport ): \n     scanD\uff08\u8ba1\u7b97\u5019\u9009\u6570\u636e\u96c6 CK \u5728\u6570\u636e\u96c6 D \u4e2d\u7684\u652f\u6301\u5ea6\uff0c\u5e76\u8fd4\u56de\u652f\u6301\u5ea6\u5927\u4e8e\u6700\u5c0f\u652f\u6301\u5ea6 minSupport \u7684\u6570\u636e\uff09      Args:          D \u6570\u636e\u96c6          Ck \u5019\u9009\u9879\u96c6\u5217\u8868          minSupport \u6700\u5c0f\u652f\u6301\u5ea6      Returns:          retList \u652f\u6301\u5ea6\u5927\u4e8e minSupport \u7684\u96c6\u5408          supportData \u5019\u9009\u9879\u96c6\u652f\u6301\u5ea6\u6570\u636e       \n\n     # ssCnt \u4e34\u65f6\u5b58\u653e\u9009\u6570\u636e\u96c6 Ck \u7684\u9891\u7387. \u4f8b\u5982: a- 10, b- 5, c- 8 \n     ssCnt   =   {} \n     for   tid   in   D : \n         for   can   in   Ck : \n             # s.issubset(t)  \u6d4b\u8bd5\u662f\u5426 s \u4e2d\u7684\u6bcf\u4e00\u4e2a\u5143\u7d20\u90fd\u5728 t \u4e2d \n             if   can . issubset ( tid ): \n                 if   not   ssCnt . has_key ( can ): \n                     ssCnt [ can ]   =   1 \n                 else : \n                     ssCnt [ can ]   +=   1 \n     numItems   =   float ( len ( D ))   # \u6570\u636e\u96c6 D \u7684\u6570\u91cf \n     retList   =   [] \n     supportData   =   {} \n     for   key   in   ssCnt : \n         # \u652f\u6301\u5ea6 = \u5019\u9009\u9879\uff08key\uff09\u51fa\u73b0\u7684\u6b21\u6570 / \u6240\u6709\u6570\u636e\u96c6\u7684\u6570\u91cf \n         support   =   ssCnt [ key ] / numItems \n         if   support   =   minSupport : \n             # \u5728 retList \u7684\u9996\u4f4d\u63d2\u5165\u5143\u7d20\uff0c\u53ea\u5b58\u50a8\u652f\u6301\u5ea6\u6ee1\u8db3\u9891\u7e41\u9879\u96c6\u7684\u503c \n             retList . insert ( 0 ,   key ) \n         # \u5b58\u50a8\u6240\u6709\u7684\u5019\u9009\u9879\uff08key\uff09\u548c\u5bf9\u5e94\u7684\u652f\u6301\u5ea6\uff08support\uff09 \n         supportData [ key ]   =   support \n     return   retList ,   supportData   \u5b8c\u6574\u4ee3\u7801\u5730\u5740:  https://github.com/apachecn/MachineLearning/blob/master/src/python/11.Apriori/apriori.py", 
            "title": "\u8ba1\u7b97\u5019\u9009\u6570\u636e\u96c6 CK \u5728\u6570\u636e\u96c6 D \u4e2d\u7684\u652f\u6301\u5ea6\uff0c\u5e76\u8fd4\u56de\u652f\u6301\u5ea6\u5927\u4e8e\u6700\u5c0f\u652f\u6301\u5ea6\uff08minSupport\uff09\u7684\u6570\u636e"
        }, 
        {
            "location": "/\u4e66\u7c4d/\u673a\u5668\u5b66\u4e60\u5b9e\u6218/11.\u4f7f\u7528Apriori\u7b97\u6cd5\u8fdb\u884c\u5173\u8054\u5206\u6790/#apriori_2", 
            "text": "", 
            "title": "\u7ec4\u7ec7\u5b8c\u6574\u7684 Apriori \u7b97\u6cd5"
        }, 
        {
            "location": "/\u4e66\u7c4d/\u673a\u5668\u5b66\u4e60\u5b9e\u6218/11.\u4f7f\u7528Apriori\u7b97\u6cd5\u8fdb\u884c\u5173\u8054\u5206\u6790/#lk-k-ck", 
            "text": "# \u8f93\u5165\u9891\u7e41\u9879\u96c6\u5217\u8868 Lk \u4e0e\u8fd4\u56de\u7684\u5143\u7d20\u4e2a\u6570 k\uff0c\u7136\u540e\u8f93\u51fa\u6240\u6709\u53ef\u80fd\u7684\u5019\u9009\u9879\u96c6 Ck  def   aprioriGen ( Lk ,   k ): \n     aprioriGen\uff08\u8f93\u5165\u9891\u7e41\u9879\u96c6\u5217\u8868 Lk \u4e0e\u8fd4\u56de\u7684\u5143\u7d20\u4e2a\u6570 k\uff0c\u7136\u540e\u8f93\u51fa\u5019\u9009\u9879\u96c6 Ck\u3002         \u4f8b\u5982: \u4ee5 {0},{1},{2} \u4e3a\u8f93\u5165\u4e14 k = 2 \u5219\u8f93\u51fa {0,1}, {0,2}, {1,2}. \u4ee5 {0,1},{0,2},{1,2} \u4e3a\u8f93\u5165\u4e14 k = 3 \u5219\u8f93\u51fa {0,1,2}         \u4ec5\u9700\u8981\u8ba1\u7b97\u4e00\u6b21\uff0c\u4e0d\u9700\u8981\u5c06\u6240\u6709\u7684\u7ed3\u679c\u8ba1\u7b97\u51fa\u6765\uff0c\u7136\u540e\u8fdb\u884c\u53bb\u91cd\u64cd\u4f5c         \u8fd9\u662f\u4e00\u4e2a\u66f4\u9ad8\u6548\u7684\u7b97\u6cd5\uff09      Args:          Lk \u9891\u7e41\u9879\u96c6\u5217\u8868          k \u8fd4\u56de\u7684\u9879\u96c6\u5143\u7d20\u4e2a\u6570\uff08\u82e5\u5143\u7d20\u7684\u524d k-2 \u76f8\u540c\uff0c\u5c31\u8fdb\u884c\u5408\u5e76\uff09      Returns:          retList \u5143\u7d20\u4e24\u4e24\u5408\u5e76\u7684\u6570\u636e\u96c6       \n\n     retList   =   [] \n     lenLk   =   len ( Lk ) \n     for   i   in   range ( lenLk ): \n         for   j   in   range ( i + 1 ,   lenLk ): \n             L1   =   list ( Lk [ i ])[:   k - 2 ] \n             L2   =   list ( Lk [ j ])[:   k - 2 ] \n             # print  -----i= , i, k-2, Lk, Lk[i], list(Lk[i])[: k-2] \n             # print  -----j= , j, k-2, Lk, Lk[j], list(Lk[j])[: k-2] \n             L1 . sort () \n             L2 . sort () \n             # \u7b2c\u4e00\u6b21 L1,L2 \u4e3a\u7a7a\uff0c\u5143\u7d20\u76f4\u63a5\u8fdb\u884c\u5408\u5e76\uff0c\u8fd4\u56de\u5143\u7d20\u4e24\u4e24\u5408\u5e76\u7684\u6570\u636e\u96c6 \n             # if first k-2 elements are equal \n             if   L1   ==   L2 : \n                 # set union \n                 # print  union= , Lk[i] | Lk[j], Lk[i], Lk[j] \n                 retList . append ( Lk [ i ]   |   Lk [ j ]) \n     return   retList", 
            "title": "\u8f93\u5165\u9891\u7e41\u9879\u96c6\u5217\u8868 Lk \u4e0e\u8fd4\u56de\u7684\u5143\u7d20\u4e2a\u6570 k\uff0c\u7136\u540e\u8f93\u51fa\u6240\u6709\u53ef\u80fd\u7684\u5019\u9009\u9879\u96c6 Ck"
        }, 
        {
            "location": "/\u4e66\u7c4d/\u673a\u5668\u5b66\u4e60\u5b9e\u6218/11.\u4f7f\u7528Apriori\u7b97\u6cd5\u8fdb\u884c\u5173\u8054\u5206\u6790/#dataset", 
            "text": "# \u627e\u51fa\u6570\u636e\u96c6 dataSet \u4e2d\u652f\u6301\u5ea6  = \u6700\u5c0f\u652f\u6301\u5ea6\u7684\u5019\u9009\u9879\u96c6\u4ee5\u53ca\u5b83\u4eec\u7684\u652f\u6301\u5ea6\u3002\u5373\u6211\u4eec\u7684\u9891\u7e41\u9879\u96c6\u3002  def   apriori ( dataSet ,   minSupport = 0.5 ): \n     apriori\uff08\u9996\u5148\u6784\u5efa\u96c6\u5408 C1\uff0c\u7136\u540e\u626b\u63cf\u6570\u636e\u96c6\u6765\u5224\u65ad\u8fd9\u4e9b\u53ea\u6709\u4e00\u4e2a\u5143\u7d20\u7684\u9879\u96c6\u662f\u5426\u6ee1\u8db3\u6700\u5c0f\u652f\u6301\u5ea6\u7684\u8981\u6c42\u3002\u90a3\u4e48\u6ee1\u8db3\u6700\u5c0f\u652f\u6301\u5ea6\u8981\u6c42\u7684\u9879\u96c6\u6784\u6210\u96c6\u5408 L1\u3002\u7136\u540e L1 \u4e2d\u7684\u5143\u7d20\u76f8\u4e92\u7ec4\u5408\u6210 C2\uff0cC2 \u518d\u8fdb\u4e00\u6b65\u8fc7\u6ee4\u53d8\u6210 L2\uff0c\u7136\u540e\u4ee5\u6b64\u7c7b\u63a8\uff0c\u77e5\u9053 CN \u7684\u957f\u5ea6\u4e3a 0 \u65f6\u7ed3\u675f\uff0c\u5373\u53ef\u627e\u51fa\u6240\u6709\u9891\u7e41\u9879\u96c6\u7684\u652f\u6301\u5ea6\u3002\uff09      Args:          dataSet \u539f\u59cb\u6570\u636e\u96c6          minSupport \u652f\u6301\u5ea6\u7684\u9608\u503c      Returns:          L \u9891\u7e41\u9879\u96c6\u7684\u5168\u96c6          supportData \u6240\u6709\u5143\u7d20\u548c\u652f\u6301\u5ea6\u7684\u5168\u96c6       \n     # C1 \u5373\u5bf9 dataSet \u8fdb\u884c\u53bb\u91cd\uff0c\u6392\u5e8f\uff0c\u653e\u5165 list \u4e2d\uff0c\u7136\u540e\u8f6c\u6362\u6240\u6709\u7684\u5143\u7d20\u4e3a frozenset \n     C1   =   createC1 ( dataSet ) \n     # \u5bf9\u6bcf\u4e00\u884c\u8fdb\u884c set \u8f6c\u6362\uff0c\u7136\u540e\u5b58\u653e\u5230\u96c6\u5408\u4e2d \n     D   =   map ( set ,   dataSet ) \n     print   D= ,   D \n     # \u8ba1\u7b97\u5019\u9009\u6570\u636e\u96c6 C1 \u5728\u6570\u636e\u96c6 D \u4e2d\u7684\u652f\u6301\u5ea6\uff0c\u5e76\u8fd4\u56de\u652f\u6301\u5ea6\u5927\u4e8e minSupport \u7684\u6570\u636e \n     L1 ,   supportData   =   scanD ( D ,   C1 ,   minSupport ) \n     # print  L1= , L1,  \\n ,  outcome:  , supportData \n\n     # L \u52a0\u4e86\u4e00\u5c42 list, L \u4e00\u5171 2 \u5c42 list \n     L   =   [ L1 ] \n     k   =   2 \n     # \u5224\u65ad L \u7684\u7b2c k-2 \u9879\u7684\u6570\u636e\u957f\u5ea6\u662f\u5426   0\u3002\u7b2c\u4e00\u6b21\u6267\u884c\u65f6 L \u4e3a [[frozenset([1]), frozenset([3]), frozenset([2]), frozenset([5])]]\u3002L[k-2]=L[0]=[frozenset([1]), frozenset([3]), frozenset([2]), frozenset([5])]\uff0c\u6700\u540e\u9762 k += 1 \n     while   ( len ( L [ k - 2 ])     0 ): \n         print   k= ,   k ,   L ,   L [ k - 2 ] \n         Ck   =   aprioriGen ( L [ k - 2 ],   k )   # \u4f8b\u5982: \u4ee5 {0},{1},{2} \u4e3a\u8f93\u5165\u4e14 k = 2 \u5219\u8f93\u51fa {0,1}, {0,2}, {1,2}. \u4ee5 {0,1},{0,2},{1,2} \u4e3a\u8f93\u5165\u4e14 k = 3 \u5219\u8f93\u51fa {0,1,2} \n         print   Ck ,   Ck \n\n         Lk ,   supK   =   scanD ( D ,   Ck ,   minSupport )   # \u8ba1\u7b97\u5019\u9009\u6570\u636e\u96c6 CK \u5728\u6570\u636e\u96c6 D \u4e2d\u7684\u652f\u6301\u5ea6\uff0c\u5e76\u8fd4\u56de\u652f\u6301\u5ea6\u5927\u4e8e minSupport \u7684\u6570\u636e \n         # \u4fdd\u5b58\u6240\u6709\u5019\u9009\u9879\u96c6\u7684\u652f\u6301\u5ea6\uff0c\u5982\u679c\u5b57\u5178\u6ca1\u6709\uff0c\u5c31\u8ffd\u52a0\u5143\u7d20\uff0c\u5982\u679c\u6709\uff0c\u5c31\u66f4\u65b0\u5143\u7d20 \n         supportData . update ( supK ) \n         if   len ( Lk )   ==   0 : \n             break \n         # Lk \u8868\u793a\u6ee1\u8db3\u9891\u7e41\u5b50\u9879\u7684\u96c6\u5408\uff0cL \u5143\u7d20\u5728\u589e\u52a0\uff0c\u4f8b\u5982:  \n         # l=[[set(1), set(2), set(3)]] \n         # l=[[set(1), set(2), set(3)], [set(1, 2), set(2, 3)]] \n         L . append ( Lk ) \n         k   +=   1 \n         # print  k= , k, len(L[k-2]) \n     return   L ,   supportData   \u5230\u8fd9\u4e00\u6b65\uff0c\u6211\u4eec\u5c31\u627e\u51fa\u6211\u4eec\u6240\u9700\u8981\u7684  \u9891\u7e41\u9879\u96c6  \u548c\u4ed6\u4eec\u7684  \u652f\u6301\u5ea6  \u4e86\uff0c\u63a5\u4e0b\u6765\u518d\u627e\u51fa\u5173\u8054\u89c4\u5219\u5373\u53ef\uff01  \u5b8c\u6574\u4ee3\u7801\u5730\u5740:  https://github.com/apachecn/MachineLearning/blob/master/src/python/11.Apriori/apriori.py", 
            "title": "\u627e\u51fa\u6570\u636e\u96c6 dataSet \u4e2d\u652f\u6301\u5ea6 &gt;= \u6700\u5c0f\u652f\u6301\u5ea6\u7684\u5019\u9009\u9879\u96c6\u4ee5\u53ca\u5b83\u4eec\u7684\u652f\u6301\u5ea6\u3002\u5373\u6211\u4eec\u7684\u9891\u7e41\u9879\u96c6\u3002"
        }, 
        {
            "location": "/\u4e66\u7c4d/\u673a\u5668\u5b66\u4e60\u5b9e\u6218/11.\u4f7f\u7528Apriori\u7b97\u6cd5\u8fdb\u884c\u5173\u8054\u5206\u6790/#_5", 
            "text": "\u524d\u9762\u6211\u4eec\u4ecb\u7ecd\u4e86\u7528\u4e8e\u53d1\u73b0  \u9891\u7e41\u9879\u96c6  \u7684 Apriori \u7b97\u6cd5\uff0c\u73b0\u5728\u8981\u89e3\u51b3\u7684\u95ee\u9898\u662f\u5982\u4f55\u627e\u51fa  \u5173\u8054\u89c4\u5219 \u3002  \u8981\u627e\u5230  \u5173\u8054\u89c4\u5219 \uff0c\u6211\u4eec\u9996\u5148\u4ece\u4e00\u4e2a  \u9891\u7e41\u9879\u96c6  \u5f00\u59cb\u3002\n\u6211\u4eec\u77e5\u9053\u96c6\u5408\u4e2d\u7684\u5143\u7d20\u662f\u4e0d\u91cd\u590d\u7684\uff0c\u4f46\u6211\u4eec\u60f3\u77e5\u9053\u57fa\u4e8e\u8fd9\u4e9b\u5143\u7d20\u80fd\u5426\u83b7\u5f97\u5176\u5b83\u5185\u5bb9\u3002\n\u67d0\u4e2a\u5143\u7d20\u6216\u67d0\u4e2a\u5143\u7d20\u96c6\u5408\u53ef\u80fd\u4f1a\u63a8\u5bfc\u51fa\u53e6\u4e00\u4e2a\u5143\u7d20\u3002\n\u4ece\u5148\u524d  \u6742\u8d27\u5e97  \u7684\u4f8b\u5b50\u53ef\u4ee5\u5f97\u5230\uff0c\u5982\u679c\u6709\u4e00\u4e2a\u9891\u7e41\u9879\u96c6 {\u8c46\u5976,\u83b4\u82e3}\uff0c\u90a3\u4e48\u5c31\u53ef\u80fd\u6709\u4e00\u6761\u5173\u8054\u89c4\u5219 \u201c\u8c46\u5976 -  \u83b4\u82e3\u201d\u3002\n\u8fd9\u610f\u5473\u7740\u5982\u679c\u6709\u4eba\u4e70\u4e86\u8c46\u5976\uff0c\u90a3\u4e48\u5728\u7edf\u8ba1\u4e0a\u4ed6\u4f1a\u8d2d\u4e70\u83b4\u82e3\u7684\u6982\u7387\u6bd4\u8f83\u5927\u3002\n\u4f46\u662f\uff0c\u8fd9\u4e00\u6761\u4ef6\u53cd\u8fc7\u6765\u5e76\u4e0d\u603b\u662f\u6210\u7acb\u3002\n\u4e5f\u5c31\u662f\u8bf4 \u201c\u8c46\u5976 -  \u83b4\u82e3\u201d \u7edf\u8ba1\u4e0a\u663e\u8457\uff0c\u90a3\u4e48 \u201c\u83b4\u82e3 -  \u8c46\u5976\u201d \u4e5f\u4e0d\u4e00\u5b9a\u6210\u7acb\u3002  \u524d\u9762\u6211\u4eec\u7ed9\u51fa\u4e86  \u9891\u7e41\u9879\u96c6  \u7684\u91cf\u5316\u5b9a\u4e49\uff0c\u5373\u5b83\u6ee1\u8db3\u6700\u5c0f\u652f\u6301\u5ea6\u8981\u6c42\u3002 \n\u5bf9\u4e8e  \u5173\u8054\u89c4\u5219 \uff0c\u6211\u4eec\u4e5f\u6709\u7c7b\u4f3c\u7684\u91cf\u5316\u65b9\u6cd5\uff0c\u8fd9\u79cd\u91cf\u5316\u6307\u6807\u79f0\u4e4b\u4e3a  \u53ef\u4fe1\u5ea6 \u3002 \n\u4e00\u6761\u89c4\u5219 A -  B \u7684\u53ef\u4fe1\u5ea6\u5b9a\u4e49\u4e3a support(A | B) / support(A)\u3002\uff08\u6ce8\u610f: \u5728 python \u4e2d | \u8868\u793a\u96c6\u5408\u7684\u5e76\u64cd\u4f5c\uff0c\u800c\u6570\u5b66\u4e66\u96c6\u5408\u5e76\u7684\u7b26\u53f7\u662f U\uff09\u3002  A | B  \u662f\u6307\u6240\u6709\u51fa\u73b0\u5728\u96c6\u5408 A \u6216\u8005\u96c6\u5408 B \u4e2d\u7684\u5143\u7d20\u3002 \n\u7531\u4e8e\u6211\u4eec\u5148\u524d\u5df2\u7ecf\u8ba1\u7b97\u51fa\u6240\u6709  \u9891\u7e41\u9879\u96c6  \u7684\u652f\u6301\u5ea6\u4e86\uff0c\u73b0\u5728\u6211\u4eec\u8981\u505a\u7684\u53ea\u4e0d\u8fc7\u662f\u63d0\u53d6\u8fd9\u4e9b\u6570\u636e\u505a\u4e00\u6b21\u9664\u6cd5\u8fd0\u7b97\u5373\u53ef\u3002", 
            "title": "\u4ece\u9891\u7e41\u9879\u96c6\u4e2d\u6316\u6398\u5173\u8054\u89c4\u5219"
        }, 
        {
            "location": "/\u4e66\u7c4d/\u673a\u5668\u5b66\u4e60\u5b9e\u6218/11.\u4f7f\u7528Apriori\u7b97\u6cd5\u8fdb\u884c\u5173\u8054\u5206\u6790/#_6", 
            "text": "\u5982\u4e0b\u56fe\u6240\u793a\uff0c\u7ed9\u51fa\u7684\u662f\u9879\u96c6 {0,1,2,3} \u4ea7\u751f\u7684\u6240\u6709\u5173\u8054\u89c4\u5219:  \n\u4e0e\u6211\u4eec\u524d\u9762\u7684  \u9891\u7e41\u9879\u96c6  \u751f\u6210\u4e00\u6837\uff0c\u6211\u4eec\u53ef\u4ee5\u4e3a\u6bcf\u4e2a\u9891\u7e41\u9879\u96c6\u4ea7\u751f\u8bb8\u591a\u5173\u8054\u89c4\u5219\u3002 \n\u5982\u679c\u80fd\u51cf\u5c11\u89c4\u5219\u7684\u6570\u76ee\u6765\u786e\u4fdd\u95ee\u9898\u7684\u53ef\u89e3\u6790\uff0c\u90a3\u4e48\u8ba1\u7b97\u8d77\u6765\u5c31\u4f1a\u597d\u5f88\u591a\u3002 \n\u901a\u8fc7\u89c2\u5bdf\uff0c\u6211\u4eec\u53ef\u4ee5\u77e5\u9053\uff0c\u5982\u679c\u67d0\u6761\u89c4\u5219\u5e76\u4e0d\u6ee1\u8db3  \u6700\u5c0f\u53ef\u4fe1\u5ea6  \u8981\u6c42\uff0c\u90a3\u4e48\u8be5\u89c4\u5219\u7684\u6240\u6709\u5b50\u96c6\u4e5f\u4e0d\u4f1a\u6ee1\u8db3  \u6700\u5c0f\u53ef\u4fe1\u5ea6  \u7684\u8981\u6c42\u3002 \n\u5982\u4e0a\u56fe\u6240\u793a\uff0c\u5047\u8bbe  123 -  3   \u5e76\u4e0d\u6ee1\u8db3\u6700\u5c0f\u53ef\u4fe1\u5ea6\u8981\u6c42\uff0c\u90a3\u4e48\u5c31\u77e5\u9053\u4efb\u4f55\u5de6\u90e8\u4e3a {0,1,2} \u5b50\u96c6\u7684\u89c4\u5219\u4e5f\u4e0d\u4f1a\u6ee1\u8db3  \u6700\u5c0f\u53ef\u4fe1\u5ea6  \u7684\u8981\u6c42\u3002\n\u5373  12 -  03  ,  02 -  13  ,  01 -  23  ,  2 -  013 ,  1 -  023 ,  0 -  123  \u90fd\u4e0d\u6ee1\u8db3  \u6700\u5c0f\u53ef\u4fe1\u5ea6  \u8981\u6c42\u3002    \u53ef\u4ee5\u5229\u7528\u5173\u8054\u89c4\u5219\u7684\u4e0a\u8ff0\u6027\u8d28\u5c5e\u6027\u6765\u51cf\u5c11\u9700\u8981\u6d4b\u8bd5\u7684\u89c4\u5219\u6570\u76ee\uff0c\u8ddf\u5148\u524d Apriori \u7b97\u6cd5\u7684\u5957\u8def\u4e00\u6837\u3002 \n\u4ee5\u4e0b\u662f\u4e00\u4e9b\u8f85\u52a9\u51fd\u6570:", 
            "title": "\u4e00\u4e2a\u9891\u7e41\u9879\u96c6\u53ef\u4ee5\u4ea7\u751f\u591a\u5c11\u6761\u5173\u8054\u89c4\u5219\u5462\uff1f"
        }, 
        {
            "location": "/\u4e66\u7c4d/\u673a\u5668\u5b66\u4e60\u5b9e\u6218/11.\u4f7f\u7528Apriori\u7b97\u6cd5\u8fdb\u884c\u5173\u8054\u5206\u6790/#_7", 
            "text": "# \u8ba1\u7b97\u53ef\u4fe1\u5ea6\uff08confidence\uff09  def   calcConf ( freqSet ,   H  ,   supportData ,   brl ,   minConf = 0.7 ): \n     calcConf\uff08\u5bf9\u4e24\u4e2a\u5143\u7d20\u7684\u9891\u7e41\u9879\uff0c\u8ba1\u7b97\u53ef\u4fe1\u5ea6\uff0c\u4f8b\u5982\uff1a {1,2}/{1} \u6216\u8005 {1,2}/{2} \u770b\u662f\u5426\u6ee1\u8db3\u6761\u4ef6\uff09      Args:          freqSet \u9891\u7e41\u9879\u96c6\u4e2d\u7684\u5143\u7d20\uff0c\u4f8b\u5982: frozenset([1, 3])              H \u9891\u7e41\u9879\u96c6\u4e2d\u7684\u5143\u7d20\u7684\u96c6\u5408\uff0c\u4f8b\u5982: [frozenset([1]), frozenset([3])]          supportData \u6240\u6709\u5143\u7d20\u7684\u652f\u6301\u5ea6\u7684\u5b57\u5178          brl \u5173\u8054\u89c4\u5219\u5217\u8868\u7684\u7a7a\u6570\u7ec4          minConf \u6700\u5c0f\u53ef\u4fe1\u5ea6      Returns:          prunedH \u8bb0\u5f55 \u53ef\u4fe1\u5ea6\u5927\u4e8e\u9608\u503c\u7684\u96c6\u5408       \n     # \u8bb0\u5f55\u53ef\u4fe1\u5ea6\u5927\u4e8e\u6700\u5c0f\u53ef\u4fe1\u5ea6\uff08minConf\uff09\u7684\u96c6\u5408 \n     prunedH   =   [] \n     for   conseq   in   H :   # \u5047\u8bbe freqSet = frozenset([1, 3]), H = [frozenset([1]), frozenset([3])]\uff0c\u90a3\u4e48\u73b0\u5728\u9700\u8981\u6c42\u51fa frozenset([1]) -  frozenset([3]) \u7684\u53ef\u4fe1\u5ea6\u548c frozenset([3]) -  frozenset([1]) \u7684\u53ef\u4fe1\u5ea6 \n\n         # print  confData= , freqSet, H, conseq, freqSet-conseq \n         conf   =   supportData [ freqSet ] / supportData [ freqSet - conseq ]   # \u652f\u6301\u5ea6\u5b9a\u4e49: a -  b = support(a | b) / support(a). \u5047\u8bbe  freqSet = frozenset([1, 3]), conseq = [frozenset([1])]\uff0c\u90a3\u4e48 frozenset([1]) \u81f3 frozenset([3]) \u7684\u53ef\u4fe1\u5ea6\u4e3a = support(a | b) / support(a) = supportData[freqSet]/supportData[freqSet-conseq] = supportData[frozenset([1, 3])] / supportData[frozenset([1])] \n         if   conf   =   minConf : \n             # \u53ea\u8981\u4e70\u4e86 freqSet-conseq \u96c6\u5408\uff0c\u4e00\u5b9a\u4f1a\u4e70 conseq \u96c6\u5408\uff08freqSet-conseq \u96c6\u5408\u548c conseq \u96c6\u5408\u662f\u5168\u96c6\uff09 \n             print   freqSet - conseq ,   -- ,   conseq ,   conf: ,   conf \n             brl . append (( freqSet - conseq ,   conseq ,   conf )) \n             prunedH . append ( conseq ) \n     return   prunedH  ````  #### \u9012\u5f52\u8ba1\u7b97\u9891\u7e41\u9879\u96c6\u7684\u89c4\u5219  `` ` python  # \u9012\u5f52\u8ba1\u7b97\u9891\u7e41\u9879\u96c6\u7684\u89c4\u5219  def   rulesFromConseq ( freqSet ,   H ,   supportData ,   brl ,   minConf = 0.7 ): \n     rulesFromConseq      Args:          freqSet \u9891\u7e41\u9879\u96c6\u4e2d\u7684\u5143\u7d20\uff0c\u4f8b\u5982: frozenset([2, 3, 5])              H \u9891\u7e41\u9879\u96c6\u4e2d\u7684\u5143\u7d20\u7684\u96c6\u5408\uff0c\u4f8b\u5982: [frozenset([2]), frozenset([3]), frozenset([5])]          supportData \u6240\u6709\u5143\u7d20\u7684\u652f\u6301\u5ea6\u7684\u5b57\u5178          brl \u5173\u8054\u89c4\u5219\u5217\u8868\u7684\u6570\u7ec4          minConf \u6700\u5c0f\u53ef\u4fe1\u5ea6       \n     # H[0] \u662f freqSet \u7684\u5143\u7d20\u7ec4\u5408\u7684\u7b2c\u4e00\u4e2a\u5143\u7d20\uff0c\u5e76\u4e14 H \u4e2d\u6240\u6709\u5143\u7d20\u7684\u957f\u5ea6\u90fd\u4e00\u6837\uff0c\u957f\u5ea6\u7531 aprioriGen(H, m+1) \u8fd9\u91cc\u7684 m + 1 \u6765\u63a7\u5236 \n     # \u8be5\u51fd\u6570\u9012\u5f52\u65f6\uff0cH[0] \u7684\u957f\u5ea6\u4ece 1 \u5f00\u59cb\u589e\u957f 1 2 3 ... \n     # \u5047\u8bbe freqSet = frozenset([2, 3, 5]), H = [frozenset([2]), frozenset([3]), frozenset([5])] \n     # \u90a3\u4e48 m = len(H[0]) \u7684\u9012\u5f52\u7684\u503c\u4f9d\u6b21\u4e3a 1 2 \n     # \u5728 m = 2 \u65f6, \u8df3\u51fa\u8be5\u9012\u5f52\u3002\u5047\u8bbe\u518d\u9012\u5f52\u4e00\u6b21\uff0c\u90a3\u4e48 H[0] = frozenset([2, 3, 5])\uff0cfreqSet = frozenset([2, 3, 5]) \uff0c\u6ca1\u5fc5\u8981\u518d\u8ba1\u7b97 freqSet \u4e0e H[0] \u7684\u5173\u8054\u89c4\u5219\u4e86\u3002 \n     m   =   len ( H [ 0 ]) \n     if   ( len ( freqSet )     ( m   +   1 )): \n         print   freqSet****************** ,   len ( freqSet ),   m   +   1 ,   freqSet ,   H ,   H [ 0 ] \n         # \u751f\u6210 m+1 \u4e2a\u957f\u5ea6\u7684\u6240\u6709\u53ef\u80fd\u7684 H \u4e2d\u7684\u7ec4\u5408\uff0c\u5047\u8bbe H = [frozenset([2]), frozenset([3]), frozenset([5])] \n         # \u7b2c\u4e00\u6b21\u9012\u5f52\u8c03\u7528\u65f6\u751f\u6210 [frozenset([2, 3]), frozenset([2, 5]), frozenset([3, 5])] \n         # \u7b2c\u4e8c\u6b21 \u3002\u3002\u3002\u6ca1\u6709\u7b2c\u4e8c\u6b21\uff0c\u9012\u5f52\u6761\u4ef6\u5224\u65ad\u65f6\u5df2\u7ecf\u9000\u51fa\u4e86 \n         Hmp1   =   aprioriGen ( H ,   m + 1 ) \n         # \u8fd4\u56de\u53ef\u4fe1\u5ea6\u5927\u4e8e\u6700\u5c0f\u53ef\u4fe1\u5ea6\u7684\u96c6\u5408 \n         Hmp1   =   calcConf ( freqSet ,   Hmp1 ,   supportData ,   brl ,   minConf ) \n         print   Hmp1= ,   Hmp1 \n         print   len(Hmp1)= ,   len ( Hmp1 ),   len(freqSet)= ,   len ( freqSet ) \n         # \u8ba1\u7b97\u53ef\u4fe1\u5ea6\u540e\uff0c\u8fd8\u6709\u6570\u636e\u5927\u4e8e\u6700\u5c0f\u53ef\u4fe1\u5ea6\u7684\u8bdd\uff0c\u90a3\u4e48\u7ee7\u7eed\u9012\u5f52\u8c03\u7528\uff0c\u5426\u5219\u8df3\u51fa\u9012\u5f52 \n         if   ( len ( Hmp1 )     1 ): \n             print   ---------------------- ,   Hmp1 \n             # print len(freqSet),  len(Hmp1[0]) + 1 \n             rulesFromConseq ( freqSet ,   Hmp1 ,   supportData ,   brl ,   minConf )", 
            "title": "\u8ba1\u7b97\u53ef\u4fe1\u5ea6"
        }, 
        {
            "location": "/\u4e66\u7c4d/\u673a\u5668\u5b66\u4e60\u5b9e\u6218/11.\u4f7f\u7528Apriori\u7b97\u6cd5\u8fdb\u884c\u5173\u8054\u5206\u6790/#_8", 
            "text": "# \u751f\u6210\u5173\u8054\u89c4\u5219  def   generateRules ( L ,   supportData ,   minConf = 0.7 ): \n     generateRules      Args:          L \u9891\u7e41\u9879\u96c6\u5217\u8868          supportData \u9891\u7e41\u9879\u96c6\u652f\u6301\u5ea6\u7684\u5b57\u5178          minConf \u6700\u5c0f\u7f6e\u4fe1\u5ea6      Returns:          bigRuleList \u53ef\u4fe1\u5ea6\u89c4\u5219\u5217\u8868\uff08\u5173\u4e8e (A- B+\u7f6e\u4fe1\u5ea6) 3\u4e2a\u5b57\u6bb5\u7684\u7ec4\u5408\uff09       \n     bigRuleList   =   [] \n     # \u5047\u8bbe L = [[frozenset([1]), frozenset([3]), frozenset([2]), frozenset([5])], [frozenset([1, 3]), frozenset([2, 5]), frozenset([2, 3]), frozenset([3, 5])], [frozenset([2, 3, 5])]] \n     for   i   in   range ( 1 ,   len ( L )): \n         # \u83b7\u53d6\u9891\u7e41\u9879\u96c6\u4e2d\u6bcf\u4e2a\u7ec4\u5408\u7684\u6240\u6709\u5143\u7d20 \n         for   freqSet   in   L [ i ]: \n             # \u5047\u8bbe\uff1afreqSet= frozenset([1, 3]), H1=[frozenset([1]), frozenset([3])] \n             # \u7ec4\u5408\u603b\u7684\u5143\u7d20\u5e76\u904d\u5386\u5b50\u5143\u7d20\uff0c\u5e76\u8f6c\u5316\u4e3a frozenset \u96c6\u5408\uff0c\u518d\u5b58\u653e\u5230 list \u5217\u8868\u4e2d \n             H1   =   [ frozenset ([ item ])   for   item   in   freqSet ] \n             # 2 \u4e2a\u7684\u7ec4\u5408\uff0c\u8d70 else, 2 \u4e2a\u4ee5\u4e0a\u7684\u7ec4\u5408\uff0c\u8d70 if \n             if   ( i     1 ): \n                 rulesFromConseq ( freqSet ,   H1 ,   supportData ,   bigRuleList ,   minConf ) \n             else : \n                 calcConf ( freqSet ,   H1 ,   supportData ,   bigRuleList ,   minConf ) \n     return   bigRuleList   \u5230\u8fd9\u91cc\u4e3a\u6b62\uff0c\u901a\u8fc7\u8c03\u7528 generateRules \u51fd\u6570\u5373\u53ef\u5f97\u51fa\u6211\u4eec\u6240\u9700\u7684  \u5173\u8054\u89c4\u5219 \u3002   \u5206\u7ea7\u6cd5\uff1a \u9891\u7e41\u9879\u96c6- \u5173\u8054\u89c4\u5219  1.\u9996\u5148\u4ece\u4e00\u4e2a\u9891\u7e41\u9879\u96c6\u5f00\u59cb\uff0c\u63a5\u7740\u521b\u5efa\u4e00\u4e2a\u89c4\u5219\u5217\u8868\uff0c\u5176\u4e2d\u89c4\u5219\u53f3\u90e8\u5206\u53ea\u5305\u542b\u4e00\u4e2a\u5143\u7d20\uff0c\u7136\u540e\u5bf9\u8fd9\u4e2a\u89c4\u5219\u8fdb\u884c\u6d4b\u8bd5\u3002  2.\u63a5\u4e0b\u6765\u5408\u5e76\u6240\u6709\u5269\u4f59\u89c4\u5219\u6765\u521b\u5efa\u4e00\u4e2a\u65b0\u7684\u89c4\u5219\u5217\u8868\uff0c\u5176\u4e2d\u89c4\u5219\u53f3\u90e8\u5305\u542b\u4e24\u4e2a\u5143\u7d20\u3002  \u5982\u4e0b\u56fe\uff1a     \u6700\u540e\uff1a \u6bcf\u6b21\u589e\u52a0\u9891\u7e41\u9879\u96c6\u7684\u5927\u5c0f\uff0cApriori \u7b97\u6cd5\u90fd\u4f1a\u91cd\u65b0\u626b\u63cf\u6574\u4e2a\u6570\u636e\u96c6\uff0c\u662f\u5426\u6709\u4f18\u5316\u7a7a\u95f4\u5462\uff1f \u4e0b\u4e00\u7ae0\uff1aFP-growth\u7b97\u6cd5\u7b49\u7740\u4f60\u7684\u5230\u6765     \u4f5c\u8005\uff1a \u7247\u523b  GitHub\u5730\u5740 :  https://github.com/apachecn/MachineLearning  \u7248\u6743\u58f0\u660e\uff1a\u6b22\u8fce\u8f6c\u8f7d\u5b66\u4e60 =  \u8bf7\u6807\u6ce8\u4fe1\u606f\u6765\u6e90\u4e8e  ApacheCN", 
            "title": "\u751f\u6210\u5173\u8054\u89c4\u5219"
        }, 
        {
            "location": "/\u4e66\u7c4d/\u673a\u5668\u5b66\u4e60\u5b9e\u6218/12.\u4f7f\u7528FP-growth\u7b97\u6cd5\u6765\u9ad8\u6548\u53d1\u73b0\u9891\u7e41\u9879\u96c6/", 
            "text": "\u7b2c12\u7ae0 \u4f7f\u7528FP-growth\u7b97\u6cd5\u6765\u9ad8\u6548\u53d1\u73b0\u9891\u7e41\u9879\u96c6\n\n\n\u524d\u8a00\n\n\n\u5728 \n\u7b2c11\u7ae0\n \u65f6\u6211\u4eec\u5df2\u7ecf\u4ecb\u7ecd\u4e86\u7528 \nApriori\n \u7b97\u6cd5\u53d1\u73b0 \n\u9891\u7e41\u9879\u96c6\n \u4e0e \n\u5173\u8054\u89c4\u5219\n\u3002\n\n\u672c\u7ae0\u5c06\u7ee7\u7eed\u5173\u6ce8\u53d1\u73b0 \n\u9891\u7e41\u9879\u96c6\n \u8fd9\u4e00\u4efb\u52a1\uff0c\u5e76\u4f7f\u7528 \nFP-growth\n \u7b97\u6cd5\u66f4\u6709\u6548\u7684\u6316\u6398 \n\u9891\u7e41\u9879\u96c6\n\u3002\n\n\nFP-growth \u7b97\u6cd5\u7b80\u4ecb\n\n\n\n\n\u4e00\u79cd\u975e\u5e38\u597d\u7684\u53d1\u73b0\u9891\u7e41\u9879\u96c6\u7b97\u6cd5\u3002\n\n\n\u57fa\u4e8eApriori\u7b97\u6cd5\u6784\u5efa,\u4f46\u662f\u6570\u636e\u7ed3\u6784\u4e0d\u540c\uff0c\u4f7f\u7528\u53eb\u505a \nFP\u6811\n \u7684\u6570\u636e\u7ed3\u6784\u7ed3\u6784\u6765\u5b58\u50a8\u96c6\u5408\u3002\u4e0b\u9762\u6211\u4eec\u4f1a\u4ecb\u7ecd\u8fd9\u79cd\u6570\u636e\u7ed3\u6784\u3002\n\n\n\n\nFP-growth \u7b97\u6cd5\u6b65\u9aa4\n\n\n\n\n\u57fa\u4e8e\u6570\u636e\u6784\u5efaFP\u6811   \n\n\n\u4eceFP\u6811\u79cd\u6316\u6398\u9891\u7e41\u9879\u96c6 \n\n\n\n\nFP\u6811 \u4ecb\u7ecd\n\n\n\n\nFP\u6811\u7684\u8282\u70b9\u7ed3\u6784\u5982\u4e0b:\n\n\n\n\nclass\n \ntreeNode\n:\n\n    \ndef\n \n__init__\n(\nself\n,\n \nnameValue\n,\n \nnumOccur\n,\n \nparentNode\n):\n\n        \nself\n.\nname\n \n=\n \nnameValue\n     \n# \u8282\u70b9\u540d\u79f0\n\n        \nself\n.\ncount\n \n=\n \nnumOccur\n     \n# \u8282\u70b9\u51fa\u73b0\u6b21\u6570\n\n        \nself\n.\nnodeLink\n \n=\n \nNone\n      \n# \u4e0d\u540c\u9879\u96c6\u7684\u76f8\u540c\u9879\u901a\u8fc7nodeLink\u8fde\u63a5\u5728\u4e00\u8d77\n\n        \n# needs to be updated\n\n        \nself\n.\nparent\n \n=\n \nparentNode\n  \n# \u6307\u5411\u7236\u8282\u70b9\n\n        \nself\n.\nchildren\n \n=\n \n{}\n        \n# \u5b58\u50a8\u53f6\u5b50\u8282\u70b9\n\n\n\n\n\nFP-growth \u539f\u7406\n\n\n\u57fa\u4e8e\u6570\u636e\u6784\u5efaFP\u6811\n\n\n\u6b65\u9aa41:\n   1. \u904d\u5386\u6240\u6709\u7684\u6570\u636e\u96c6\u5408\uff0c\u8ba1\u7b97\u6240\u6709\u9879\u7684\u652f\u6301\u5ea6\u3002\n   2. \u4e22\u5f03\u975e\u9891\u7e41\u7684\u9879\u3002\n   3. \u57fa\u4e8e \u652f\u6301\u5ea6 \u964d\u5e8f\u6392\u5e8f\u6240\u6709\u7684\u9879\u3002\n   \n\n   4. \u6240\u6709\u6570\u636e\u96c6\u5408\u6309\u7167\u5f97\u5230\u7684\u987a\u5e8f\u91cd\u65b0\u6574\u7406\u3002\n   5. \u91cd\u65b0\u6574\u7406\u5b8c\u6210\u540e\uff0c\u4e22\u5f03\u6bcf\u4e2a\u96c6\u5408\u672b\u5c3e\u975e\u9891\u7e41\u7684\u9879\u3002\n   \n\n\n\u6b65\u9aa42:\n   6. \u8bfb\u53d6\u6bcf\u4e2a\u96c6\u5408\u63d2\u5165FP\u6811\u4e2d\uff0c\u540c\u65f6\u7528\u4e00\u4e2a\u5934\u90e8\u94fe\u8868\u6570\u636e\u7ed3\u6784\u7ef4\u62a4\u4e0d\u540c\u96c6\u5408\u7684\u76f8\u540c\u9879\u3002\n\n\n\n   \u6700\u7ec8\u5f97\u5230\u4e0b\u9762\u8fd9\u6837\u4e00\u68f5FP\u6811\n   \n\n\n\u4eceFP\u6811\u4e2d\u6316\u6398\u51fa\u9891\u7e41\u9879\u96c6\n\n\n\u6b65\u9aa43:\n   1. \u5bf9\u5934\u90e8\u94fe\u8868\u8fdb\u884c\u964d\u5e8f\u6392\u5e8f\n   2. \u5bf9\u5934\u90e8\u94fe\u8868\u8282\u70b9\u4ece\u5c0f\u5230\u5927\u904d\u5386\uff0c\u5f97\u5230\u6761\u4ef6\u6a21\u5f0f\u57fa\uff0c\u540c\u65f6\u83b7\u5f97\u4e00\u4e2a\u9891\u7e41\u9879\u96c6\u3002\n        \n\n        \u5982\u4e0a\u56fe\uff0c\u4ece\u5934\u90e8\u94fe\u8868 t \u8282\u70b9\u5f00\u59cb\u904d\u5386\uff0ct \u8282\u70b9\u52a0\u5165\u5230\u9891\u7e41\u9879\u96c6\u3002\u627e\u5230\u4ee5 t \u8282\u70b9\u4e3a\u7ed3\u5c3e\u7684\u8def\u5f84\u5982\u4e0b:\n        \n\n        \u53bb\u6389FP\u6811\u4e2d\u7684t\u8282\u70b9\uff0c\u5f97\u5230\u6761\u4ef6\u6a21\u5f0f\u57fa\n\u5de6\u8fb9\u8def\u5f84,\u5de6\u8fb9\u662f\u503c\n[z,x,y,s,t]:2\uff0c[z,x,y,r,t]:1 \u3002\u6761\u4ef6\u6a21\u5f0f\u57fa\u7684\u503c\u53d6\u51b3\u4e8e\u672b\u5c3e\u8282\u70b9 t \uff0c\u56e0\u4e3a t \u7684\u51fa\u73b0\u6b21\u6570\u6700\u5c0f\uff0c\u4e00\u4e2a\u9891\u7e41\u9879\u96c6\u7684\u652f\u6301\u5ea6\u7531\u652f\u6301\u5ea6\u6700\u5c0f\u7684\u9879\u51b3\u5b9a\u3002\u6240\u4ee5 t \u8282\u70b9\u7684\u6761\u4ef6\u6a21\u5f0f\u57fa\u7684\u503c\u53ef\u4ee5\u7406\u89e3\u4e3a\u5bf9\u4e8e\u4ee5 t \u8282\u70b9\u4e3a\u672b\u5c3e\u7684\u524d\u7f00\u8def\u5f84\u51fa\u73b0\u6b21\u6570\u3002\n\n\n\n\n\u6761\u4ef6\u6a21\u5f0f\u57fa\u7ee7\u7eed\u6784\u9020\u6761\u4ef6 FP\u6811\uff0c \u5f97\u5230\u9891\u7e41\u9879\u96c6\uff0c\u548c\u4e4b\u524d\u7684\u9891\u7e41\u9879\u7ec4\u5408\u8d77\u6765\uff0c\u8fd9\u662f\u4e00\u4e2a\u9012\u5f52\u904d\u5386\u5934\u90e8\u94fe\u8868\u751f\u6210FP\u6811\u7684\u8fc7\u7a0b\uff0c\u9012\u5f52\u622a\u6b62\u6761\u4ef6\u662f\u751f\u6210\u7684FP\u6811\u7684\u5934\u90e8\u94fe\u8868\u4e3a\u7a7a\u3002\n        \u6839\u636e\u6b65\u9aa4 2 \u5f97\u5230\u7684\u6761\u4ef6\u6a21\u5f0f\u57fa [z,x,y,s,t]:2\uff0c[z,x,y,r,t]:1 \u4f5c\u4e3a\u6570\u636e\u96c6\u7ee7\u7eed\u6784\u9020\u51fa\u4e00\u68f5FP\u6811\uff0c\u8ba1\u7b97\u652f\u6301\u5ea6\uff0c\u53bb\u9664\u975e\u9891\u7e41\u9879\uff0c\u96c6\u5408\u6309\u7167\u652f\u6301\u5ea6\u964d\u5e8f\u6392\u5e8f\uff0c\u91cd\u590d\u4e0a\u9762\u6784\u9020FP\u6811\u7684\u6b65\u9aa4\u3002\u6700\u540e\u5f97\u5230\u4e0b\u9762 t-\u6761\u4ef6FP\u6811 :\n        \n\n        \u7136\u540e\u6839\u636e t-\u6761\u4ef6FP\u6811 \u7684\u5934\u90e8\u94fe\u8868\u8fdb\u884c\u904d\u5386\uff0c\u4ece y \u5f00\u59cb\u3002\u5f97\u5230\u9891\u7e41\u9879\u96c6 ty \u3002\u7136\u540e\u53c8\u5f97\u5230 y \u7684\u6761\u4ef6\u6a21\u5f0f\u57fa\uff0c\u6784\u9020\u51fa ty\u7684\u6761\u4ef6FP\u6811\uff0c\u5373 ty-\u6761\u4ef6FP\u6811\u3002\u7ee7\u7eed\u904d\u5386ty-\u6761\u4ef6FP\u6811\u7684\u5934\u90e8\u94fe\u8868\uff0c\u5f97\u5230\u9891\u7e41\u9879\u96c6 tyx\uff0c\u7136\u540e\u53c8\u5f97\u5230\u9891\u7e41\u9879\u96c6 tyxz. \u7136\u540e\u5f97\u5230\u6784\u9020tyxz-\u6761\u4ef6FP\u6811\u7684\u5934\u90e8\u94fe\u8868\u662f\u7a7a\u7684\uff0c\u7ec8\u6b62\u904d\u5386\u3002\u6211\u4eec\u5f97\u5230\u7684\u9891\u7e41\u9879\u96c6\u6709 t-\nty-\ntyz-\ntyzx\uff0c\u8fd9\u53ea\u662f\u4e00\u5c0f\u90e8\u5206\u3002\n\n\n\u6761\u4ef6\u6a21\u5f0f\u57fa:\u5934\u90e8\u94fe\u8868\u4e2d\u7684\u67d0\u4e00\u70b9\u7684\u524d\u7f00\u8def\u5f84\u7ec4\u5408\u5c31\u662f\u6761\u4ef6\u6a21\u5f0f\u57fa\uff0c\u6761\u4ef6\u6a21\u5f0f\u57fa\u7684\u503c\u53d6\u51b3\u4e8e\u672b\u5c3e\u8282\u70b9\u7684\u503c\u3002\n\n\n\u6761\u4ef6FP\u6811:\u4ee5\u6761\u4ef6\u6a21\u5f0f\u57fa\u4e3a\u6570\u636e\u96c6\u6784\u9020\u7684FP\u6811\u53eb\u505a\u6761\u4ef6FP\u6811\u3002\n\n\n\n\nFP-growth \u7b97\u6cd5\u4f18\u7f3a\u70b9:\n\n\n* \u4f18\u70b9\uff1a 1. \u56e0\u4e3a FP-growth \u7b97\u6cd5\u53ea\u9700\u8981\u5bf9\u6570\u636e\u96c6\u904d\u5386\u4e24\u6b21\uff0c\u6240\u4ee5\u901f\u5ea6\u66f4\u5feb\u3002\n        2. FP\u6811\u5c06\u96c6\u5408\u6309\u7167\u652f\u6301\u5ea6\u964d\u5e8f\u6392\u5e8f\uff0c\u4e0d\u540c\u8def\u5f84\u5982\u679c\u6709\u76f8\u540c\u524d\u7f00\u8def\u5f84\u5171\u7528\u5b58\u50a8\u7a7a\u95f4\uff0c\u4f7f\u5f97\u6570\u636e\u5f97\u5230\u4e86\u538b\u7f29\u3002\n        3. \u4e0d\u9700\u8981\u751f\u6210\u5019\u9009\u96c6\u3002\n        4. \u6bd4Apriori\u66f4\u5feb\u3002\n* \u7f3a\u70b9\uff1a 1. FP-Tree\u7b2c\u4e8c\u6b21\u904d\u5386\u4f1a\u5b58\u50a8\u5f88\u591a\u4e2d\u95f4\u8fc7\u7a0b\u7684\u503c\uff0c\u4f1a\u5360\u7528\u5f88\u591a\u5185\u5b58\u3002\n        2. \u6784\u5efaFP-Tree\u662f\u6bd4\u8f83\u6602\u8d35\u7684\u3002\n* \u9002\u7528\u6570\u636e\u7c7b\u578b\uff1a\u6807\u79f0\u578b\u6570\u636e(\u79bb\u6563\u578b\u6570\u636e)\u3002\n\n\n\n\nFP-growth \u4ee3\u7801\u8bb2\u89e3\n\n\n\u5b8c\u6574\u4ee3\u7801\u5730\u5740: \nhttps://github.com/apachecn/MachineLearning/blob/master/src/python/12.FrequentPattemTree/fpGrowth.py\n\n\nmain \u65b9\u6cd5\u5927\u81f4\u6b65\u9aa4:\n\npython\nif __name__ == \n__main__\n:\n    simpDat = loadSimpDat()                       #\u52a0\u8f7d\u6570\u636e\u96c6\u3002\n    initSet = createInitSet(simpDat)              #\u5bf9\u6570\u636e\u96c6\u8fdb\u884c\u6574\u7406\uff0c\u76f8\u540c\u96c6\u5408\u8fdb\u884c\u5408\u5e76\u3002\n    myFPtree, myHeaderTab = createTree(initSet, 3)#\u521b\u5efaFP\u6811\u3002\n    freqItemList = []\n    mineTree(myFPtree, myHeaderTab, 3, set([]), freqItemList) #\u9012\u5f52\u7684\u4eceFP\u6811\u4e2d\u6316\u6398\u51fa\u9891\u7e41\u9879\u96c6\u3002\n    print freqItemList\n \n\n\u5927\u5bb6\u770b\u61c2\u539f\u7406\uff0c\u518d\u4ed4\u7ec6\u8ddf\u8e2a\u4e00\u4e0b\u4ee3\u7801\u3002\u57fa\u672c\u5c31\u6ca1\u6709\u95ee\u9898\u4e86\u3002\n\n\n\n\n\n\n\u4f5c\u8005\uff1a\nmikechengwei\n\n\nGitHub\u5730\u5740\n: \nhttps://github.com/apachecn/MachineLearning\n\n\n\u7248\u6743\u58f0\u660e\uff1a\u6b22\u8fce\u8f6c\u8f7d\u5b66\u4e60 =\n \u8bf7\u6807\u6ce8\u4fe1\u606f\u6765\u6e90\u4e8e \nApacheCN", 
            "title": "12.\u4f7f\u7528FP-growth\u7b97\u6cd5\u6765\u9ad8\u6548\u53d1\u73b0\u9891\u7e41\u9879\u96c6"
        }, 
        {
            "location": "/\u4e66\u7c4d/\u673a\u5668\u5b66\u4e60\u5b9e\u6218/12.\u4f7f\u7528FP-growth\u7b97\u6cd5\u6765\u9ad8\u6548\u53d1\u73b0\u9891\u7e41\u9879\u96c6/#12-fp-growth", 
            "text": "", 
            "title": "\u7b2c12\u7ae0 \u4f7f\u7528FP-growth\u7b97\u6cd5\u6765\u9ad8\u6548\u53d1\u73b0\u9891\u7e41\u9879\u96c6"
        }, 
        {
            "location": "/\u4e66\u7c4d/\u673a\u5668\u5b66\u4e60\u5b9e\u6218/12.\u4f7f\u7528FP-growth\u7b97\u6cd5\u6765\u9ad8\u6548\u53d1\u73b0\u9891\u7e41\u9879\u96c6/#_1", 
            "text": "\u5728  \u7b2c11\u7ae0  \u65f6\u6211\u4eec\u5df2\u7ecf\u4ecb\u7ecd\u4e86\u7528  Apriori  \u7b97\u6cd5\u53d1\u73b0  \u9891\u7e41\u9879\u96c6  \u4e0e  \u5173\u8054\u89c4\u5219 \u3002 \n\u672c\u7ae0\u5c06\u7ee7\u7eed\u5173\u6ce8\u53d1\u73b0  \u9891\u7e41\u9879\u96c6  \u8fd9\u4e00\u4efb\u52a1\uff0c\u5e76\u4f7f\u7528  FP-growth  \u7b97\u6cd5\u66f4\u6709\u6548\u7684\u6316\u6398  \u9891\u7e41\u9879\u96c6 \u3002", 
            "title": "\u524d\u8a00"
        }, 
        {
            "location": "/\u4e66\u7c4d/\u673a\u5668\u5b66\u4e60\u5b9e\u6218/12.\u4f7f\u7528FP-growth\u7b97\u6cd5\u6765\u9ad8\u6548\u53d1\u73b0\u9891\u7e41\u9879\u96c6/#fp-growth", 
            "text": "\u4e00\u79cd\u975e\u5e38\u597d\u7684\u53d1\u73b0\u9891\u7e41\u9879\u96c6\u7b97\u6cd5\u3002  \u57fa\u4e8eApriori\u7b97\u6cd5\u6784\u5efa,\u4f46\u662f\u6570\u636e\u7ed3\u6784\u4e0d\u540c\uff0c\u4f7f\u7528\u53eb\u505a  FP\u6811  \u7684\u6570\u636e\u7ed3\u6784\u7ed3\u6784\u6765\u5b58\u50a8\u96c6\u5408\u3002\u4e0b\u9762\u6211\u4eec\u4f1a\u4ecb\u7ecd\u8fd9\u79cd\u6570\u636e\u7ed3\u6784\u3002", 
            "title": "FP-growth \u7b97\u6cd5\u7b80\u4ecb"
        }, 
        {
            "location": "/\u4e66\u7c4d/\u673a\u5668\u5b66\u4e60\u5b9e\u6218/12.\u4f7f\u7528FP-growth\u7b97\u6cd5\u6765\u9ad8\u6548\u53d1\u73b0\u9891\u7e41\u9879\u96c6/#fp-growth_1", 
            "text": "\u57fa\u4e8e\u6570\u636e\u6784\u5efaFP\u6811     \u4eceFP\u6811\u79cd\u6316\u6398\u9891\u7e41\u9879\u96c6", 
            "title": "FP-growth \u7b97\u6cd5\u6b65\u9aa4"
        }, 
        {
            "location": "/\u4e66\u7c4d/\u673a\u5668\u5b66\u4e60\u5b9e\u6218/12.\u4f7f\u7528FP-growth\u7b97\u6cd5\u6765\u9ad8\u6548\u53d1\u73b0\u9891\u7e41\u9879\u96c6/#fp", 
            "text": "FP\u6811\u7684\u8282\u70b9\u7ed3\u6784\u5982\u4e0b:   class   treeNode : \n     def   __init__ ( self ,   nameValue ,   numOccur ,   parentNode ): \n         self . name   =   nameValue       # \u8282\u70b9\u540d\u79f0 \n         self . count   =   numOccur       # \u8282\u70b9\u51fa\u73b0\u6b21\u6570 \n         self . nodeLink   =   None        # \u4e0d\u540c\u9879\u96c6\u7684\u76f8\u540c\u9879\u901a\u8fc7nodeLink\u8fde\u63a5\u5728\u4e00\u8d77 \n         # needs to be updated \n         self . parent   =   parentNode    # \u6307\u5411\u7236\u8282\u70b9 \n         self . children   =   {}          # \u5b58\u50a8\u53f6\u5b50\u8282\u70b9", 
            "title": "FP\u6811 \u4ecb\u7ecd"
        }, 
        {
            "location": "/\u4e66\u7c4d/\u673a\u5668\u5b66\u4e60\u5b9e\u6218/12.\u4f7f\u7528FP-growth\u7b97\u6cd5\u6765\u9ad8\u6548\u53d1\u73b0\u9891\u7e41\u9879\u96c6/#fp-growth_2", 
            "text": "\u57fa\u4e8e\u6570\u636e\u6784\u5efaFP\u6811  \u6b65\u9aa41:\n   1. \u904d\u5386\u6240\u6709\u7684\u6570\u636e\u96c6\u5408\uff0c\u8ba1\u7b97\u6240\u6709\u9879\u7684\u652f\u6301\u5ea6\u3002\n   2. \u4e22\u5f03\u975e\u9891\u7e41\u7684\u9879\u3002\n   3. \u57fa\u4e8e \u652f\u6301\u5ea6 \u964d\u5e8f\u6392\u5e8f\u6240\u6709\u7684\u9879\u3002\n    \n   4. \u6240\u6709\u6570\u636e\u96c6\u5408\u6309\u7167\u5f97\u5230\u7684\u987a\u5e8f\u91cd\u65b0\u6574\u7406\u3002\n   5. \u91cd\u65b0\u6574\u7406\u5b8c\u6210\u540e\uff0c\u4e22\u5f03\u6bcf\u4e2a\u96c6\u5408\u672b\u5c3e\u975e\u9891\u7e41\u7684\u9879\u3002\n     \u6b65\u9aa42:\n   6. \u8bfb\u53d6\u6bcf\u4e2a\u96c6\u5408\u63d2\u5165FP\u6811\u4e2d\uff0c\u540c\u65f6\u7528\u4e00\u4e2a\u5934\u90e8\u94fe\u8868\u6570\u636e\u7ed3\u6784\u7ef4\u62a4\u4e0d\u540c\u96c6\u5408\u7684\u76f8\u540c\u9879\u3002  \n   \u6700\u7ec8\u5f97\u5230\u4e0b\u9762\u8fd9\u6837\u4e00\u68f5FP\u6811\n     \u4eceFP\u6811\u4e2d\u6316\u6398\u51fa\u9891\u7e41\u9879\u96c6  \u6b65\u9aa43:\n   1. \u5bf9\u5934\u90e8\u94fe\u8868\u8fdb\u884c\u964d\u5e8f\u6392\u5e8f\n   2. \u5bf9\u5934\u90e8\u94fe\u8868\u8282\u70b9\u4ece\u5c0f\u5230\u5927\u904d\u5386\uff0c\u5f97\u5230\u6761\u4ef6\u6a21\u5f0f\u57fa\uff0c\u540c\u65f6\u83b7\u5f97\u4e00\u4e2a\u9891\u7e41\u9879\u96c6\u3002\n         \n        \u5982\u4e0a\u56fe\uff0c\u4ece\u5934\u90e8\u94fe\u8868 t \u8282\u70b9\u5f00\u59cb\u904d\u5386\uff0ct \u8282\u70b9\u52a0\u5165\u5230\u9891\u7e41\u9879\u96c6\u3002\u627e\u5230\u4ee5 t \u8282\u70b9\u4e3a\u7ed3\u5c3e\u7684\u8def\u5f84\u5982\u4e0b:\n         \n        \u53bb\u6389FP\u6811\u4e2d\u7684t\u8282\u70b9\uff0c\u5f97\u5230\u6761\u4ef6\u6a21\u5f0f\u57fa \u5de6\u8fb9\u8def\u5f84,\u5de6\u8fb9\u662f\u503c [z,x,y,s,t]:2\uff0c[z,x,y,r,t]:1 \u3002\u6761\u4ef6\u6a21\u5f0f\u57fa\u7684\u503c\u53d6\u51b3\u4e8e\u672b\u5c3e\u8282\u70b9 t \uff0c\u56e0\u4e3a t \u7684\u51fa\u73b0\u6b21\u6570\u6700\u5c0f\uff0c\u4e00\u4e2a\u9891\u7e41\u9879\u96c6\u7684\u652f\u6301\u5ea6\u7531\u652f\u6301\u5ea6\u6700\u5c0f\u7684\u9879\u51b3\u5b9a\u3002\u6240\u4ee5 t \u8282\u70b9\u7684\u6761\u4ef6\u6a21\u5f0f\u57fa\u7684\u503c\u53ef\u4ee5\u7406\u89e3\u4e3a\u5bf9\u4e8e\u4ee5 t \u8282\u70b9\u4e3a\u672b\u5c3e\u7684\u524d\u7f00\u8def\u5f84\u51fa\u73b0\u6b21\u6570\u3002   \u6761\u4ef6\u6a21\u5f0f\u57fa\u7ee7\u7eed\u6784\u9020\u6761\u4ef6 FP\u6811\uff0c \u5f97\u5230\u9891\u7e41\u9879\u96c6\uff0c\u548c\u4e4b\u524d\u7684\u9891\u7e41\u9879\u7ec4\u5408\u8d77\u6765\uff0c\u8fd9\u662f\u4e00\u4e2a\u9012\u5f52\u904d\u5386\u5934\u90e8\u94fe\u8868\u751f\u6210FP\u6811\u7684\u8fc7\u7a0b\uff0c\u9012\u5f52\u622a\u6b62\u6761\u4ef6\u662f\u751f\u6210\u7684FP\u6811\u7684\u5934\u90e8\u94fe\u8868\u4e3a\u7a7a\u3002\n        \u6839\u636e\u6b65\u9aa4 2 \u5f97\u5230\u7684\u6761\u4ef6\u6a21\u5f0f\u57fa [z,x,y,s,t]:2\uff0c[z,x,y,r,t]:1 \u4f5c\u4e3a\u6570\u636e\u96c6\u7ee7\u7eed\u6784\u9020\u51fa\u4e00\u68f5FP\u6811\uff0c\u8ba1\u7b97\u652f\u6301\u5ea6\uff0c\u53bb\u9664\u975e\u9891\u7e41\u9879\uff0c\u96c6\u5408\u6309\u7167\u652f\u6301\u5ea6\u964d\u5e8f\u6392\u5e8f\uff0c\u91cd\u590d\u4e0a\u9762\u6784\u9020FP\u6811\u7684\u6b65\u9aa4\u3002\u6700\u540e\u5f97\u5230\u4e0b\u9762 t-\u6761\u4ef6FP\u6811 :\n         \n        \u7136\u540e\u6839\u636e t-\u6761\u4ef6FP\u6811 \u7684\u5934\u90e8\u94fe\u8868\u8fdb\u884c\u904d\u5386\uff0c\u4ece y \u5f00\u59cb\u3002\u5f97\u5230\u9891\u7e41\u9879\u96c6 ty \u3002\u7136\u540e\u53c8\u5f97\u5230 y \u7684\u6761\u4ef6\u6a21\u5f0f\u57fa\uff0c\u6784\u9020\u51fa ty\u7684\u6761\u4ef6FP\u6811\uff0c\u5373 ty-\u6761\u4ef6FP\u6811\u3002\u7ee7\u7eed\u904d\u5386ty-\u6761\u4ef6FP\u6811\u7684\u5934\u90e8\u94fe\u8868\uff0c\u5f97\u5230\u9891\u7e41\u9879\u96c6 tyx\uff0c\u7136\u540e\u53c8\u5f97\u5230\u9891\u7e41\u9879\u96c6 tyxz. \u7136\u540e\u5f97\u5230\u6784\u9020tyxz-\u6761\u4ef6FP\u6811\u7684\u5934\u90e8\u94fe\u8868\u662f\u7a7a\u7684\uff0c\u7ec8\u6b62\u904d\u5386\u3002\u6211\u4eec\u5f97\u5230\u7684\u9891\u7e41\u9879\u96c6\u6709 t- ty- tyz- tyzx\uff0c\u8fd9\u53ea\u662f\u4e00\u5c0f\u90e8\u5206\u3002  \u6761\u4ef6\u6a21\u5f0f\u57fa:\u5934\u90e8\u94fe\u8868\u4e2d\u7684\u67d0\u4e00\u70b9\u7684\u524d\u7f00\u8def\u5f84\u7ec4\u5408\u5c31\u662f\u6761\u4ef6\u6a21\u5f0f\u57fa\uff0c\u6761\u4ef6\u6a21\u5f0f\u57fa\u7684\u503c\u53d6\u51b3\u4e8e\u672b\u5c3e\u8282\u70b9\u7684\u503c\u3002  \u6761\u4ef6FP\u6811:\u4ee5\u6761\u4ef6\u6a21\u5f0f\u57fa\u4e3a\u6570\u636e\u96c6\u6784\u9020\u7684FP\u6811\u53eb\u505a\u6761\u4ef6FP\u6811\u3002   FP-growth \u7b97\u6cd5\u4f18\u7f3a\u70b9:  * \u4f18\u70b9\uff1a 1. \u56e0\u4e3a FP-growth \u7b97\u6cd5\u53ea\u9700\u8981\u5bf9\u6570\u636e\u96c6\u904d\u5386\u4e24\u6b21\uff0c\u6240\u4ee5\u901f\u5ea6\u66f4\u5feb\u3002\n        2. FP\u6811\u5c06\u96c6\u5408\u6309\u7167\u652f\u6301\u5ea6\u964d\u5e8f\u6392\u5e8f\uff0c\u4e0d\u540c\u8def\u5f84\u5982\u679c\u6709\u76f8\u540c\u524d\u7f00\u8def\u5f84\u5171\u7528\u5b58\u50a8\u7a7a\u95f4\uff0c\u4f7f\u5f97\u6570\u636e\u5f97\u5230\u4e86\u538b\u7f29\u3002\n        3. \u4e0d\u9700\u8981\u751f\u6210\u5019\u9009\u96c6\u3002\n        4. \u6bd4Apriori\u66f4\u5feb\u3002\n* \u7f3a\u70b9\uff1a 1. FP-Tree\u7b2c\u4e8c\u6b21\u904d\u5386\u4f1a\u5b58\u50a8\u5f88\u591a\u4e2d\u95f4\u8fc7\u7a0b\u7684\u503c\uff0c\u4f1a\u5360\u7528\u5f88\u591a\u5185\u5b58\u3002\n        2. \u6784\u5efaFP-Tree\u662f\u6bd4\u8f83\u6602\u8d35\u7684\u3002\n* \u9002\u7528\u6570\u636e\u7c7b\u578b\uff1a\u6807\u79f0\u578b\u6570\u636e(\u79bb\u6563\u578b\u6570\u636e)\u3002", 
            "title": "FP-growth \u539f\u7406"
        }, 
        {
            "location": "/\u4e66\u7c4d/\u673a\u5668\u5b66\u4e60\u5b9e\u6218/12.\u4f7f\u7528FP-growth\u7b97\u6cd5\u6765\u9ad8\u6548\u53d1\u73b0\u9891\u7e41\u9879\u96c6/#fp-growth_3", 
            "text": "\u5b8c\u6574\u4ee3\u7801\u5730\u5740:  https://github.com/apachecn/MachineLearning/blob/master/src/python/12.FrequentPattemTree/fpGrowth.py  main \u65b9\u6cd5\u5927\u81f4\u6b65\u9aa4: python\nif __name__ ==  __main__ :\n    simpDat = loadSimpDat()                       #\u52a0\u8f7d\u6570\u636e\u96c6\u3002\n    initSet = createInitSet(simpDat)              #\u5bf9\u6570\u636e\u96c6\u8fdb\u884c\u6574\u7406\uff0c\u76f8\u540c\u96c6\u5408\u8fdb\u884c\u5408\u5e76\u3002\n    myFPtree, myHeaderTab = createTree(initSet, 3)#\u521b\u5efaFP\u6811\u3002\n    freqItemList = []\n    mineTree(myFPtree, myHeaderTab, 3, set([]), freqItemList) #\u9012\u5f52\u7684\u4eceFP\u6811\u4e2d\u6316\u6398\u51fa\u9891\u7e41\u9879\u96c6\u3002\n    print freqItemList   \n\u5927\u5bb6\u770b\u61c2\u539f\u7406\uff0c\u518d\u4ed4\u7ec6\u8ddf\u8e2a\u4e00\u4e0b\u4ee3\u7801\u3002\u57fa\u672c\u5c31\u6ca1\u6709\u95ee\u9898\u4e86\u3002    \u4f5c\u8005\uff1a mikechengwei  GitHub\u5730\u5740 :  https://github.com/apachecn/MachineLearning  \u7248\u6743\u58f0\u660e\uff1a\u6b22\u8fce\u8f6c\u8f7d\u5b66\u4e60 =  \u8bf7\u6807\u6ce8\u4fe1\u606f\u6765\u6e90\u4e8e  ApacheCN", 
            "title": "FP-growth \u4ee3\u7801\u8bb2\u89e3"
        }, 
        {
            "location": "/\u4e66\u7c4d/\u673a\u5668\u5b66\u4e60\u5b9e\u6218/13.\u5229\u7528PCA\u6765\u7b80\u5316\u6570\u636e/", 
            "text": "\u7b2c13\u7ae0 \u5229\u7528 PCA \u6765\u7b80\u5316\u6570\u636e\n\n\n\u964d\u7ef4\u6280\u672f\n\n\n\n\n\u573a\u666f\n\n\n\n\n\n\n\u6211\u4eec\u6b63\u901a\u8fc7\u7535\u89c6\u89c2\u770b\u4f53\u80b2\u6bd4\u8d5b\uff0c\u5728\u7535\u89c6\u7684\u663e\u793a\u5668\u4e0a\u6709\u4e00\u4e2a\u7403\u3002\n\n\n\u663e\u793a\u5668\u5927\u6982\u5305\u542b\u4e86100\u4e07\u50cf\u7d20\u70b9\uff0c\u800c\u7403\u5219\u53ef\u80fd\u662f\u7531\u8f83\u5c11\u7684\u50cf\u7d20\u70b9\u7ec4\u6210\uff0c\u4f8b\u5982\u8bf4\u4e00\u5343\u4e2a\u50cf\u7d20\u70b9\u3002\n\n\n\u4eba\u4eec\u5b9e\u65f6\u7684\u5c06\u663e\u793a\u5668\u4e0a\u7684\u767e\u4e07\u50cf\u7d20\u8f6c\u6362\u6210\u4e3a\u4e00\u4e2a\u4e09\u7ef4\u56fe\u50cf\uff0c\u8be5\u56fe\u50cf\u5c31\u7ed9\u51fa\u8fd0\u52a8\u573a\u4e0a\u7403\u7684\u4f4d\u7f6e\u3002\n\n\n\u5728\u8fd9\u4e2a\u8fc7\u7a0b\u4e2d\uff0c\u4eba\u4eec\u5df2\u7ecf\u5c06\u767e\u4e07\u50cf\u7d20\u70b9\u7684\u6570\u636e\uff0c\u964d\u81f3\u4e3a\u4e09\u7ef4\u3002\u8fd9\u4e2a\u8fc7\u7a0b\u5c31\u79f0\u4e3a\n\u964d\u7ef4(dimensionality reduction)\n\n\n\n\n\n\n\u6570\u636e\u663e\u793a \u5e76\u975e\u5927\u89c4\u6a21\u7279\u5f81\u4e0b\u7684\u552f\u4e00\u96be\u9898\uff0c\u5bf9\u6570\u636e\u8fdb\u884c\u7b80\u5316\u8fd8\u6709\u5982\u4e0b\u4e00\u7cfb\u5217\u7684\u539f\u56e0\uff1a\n\n\n\n\n\n\n1) \u4f7f\u5f97\u6570\u636e\u96c6\u66f4\u5bb9\u6613\u4f7f\u7528\n\n\n2) \u964d\u4f4e\u5f88\u591a\u7b97\u6cd5\u7684\u8ba1\u7b97\u5f00\u9500\n\n\n3) \u53bb\u9664\u566a\u97f3\n\n\n4) \u4f7f\u5f97\u7ed3\u679c\u6613\u61c2\n\n\n\n\n\n\n\u9002\u7528\u8303\u56f4: \n\n\n\n\n\n\n\u5728\u5df2\u6807\u6ce8\u4e0e\u672a\u6807\u6ce8\u7684\u6570\u636e\u4e0a\u90fd\u6709\u964d\u7ef4\u6280\u672f\u3002\n\n\n\u8fd9\u91cc\u6211\u4eec\u5c06\u4e3b\u8981\u5173\u6ce8\u672a\u6807\u6ce8\u6570\u636e\u4e0a\u7684\u964d\u7ef4\u6280\u672f\uff0c\u5c06\u6280\u672f\u540c\u6837\u4e5f\u53ef\u4ee5\u5e94\u7528\u4e8e\u5df2\u6807\u6ce8\u7684\u6570\u636e\u3002\n\n\n\n\n\n\n\u5728\u4ee5\u4e0b3\u79cd\u964d\u7ef4\u6280\u672f\u4e2d\uff0c PCA\u7684\u5e94\u7528\u76ee\u524d\u6700\u4e3a\u5e7f\u6cdb\uff0c\u56e0\u6b64\u672c\u7ae0\u4e3b\u8981\u5173\u6ce8PCA\u3002\n\n\n\n\n\n\n1) \u4e3b\u6210\u5206\u5206\u6790(Principal Component Analysis, PCA)\n\n\n\u901a\u4fd7\u7406\u89e3\uff1a\u5c31\u662f\u627e\u51fa\u4e00\u4e2a\u6700\u4e3b\u8981\u7684\u7279\u5f81\uff0c\u7136\u540e\u8fdb\u884c\u5206\u6790\u3002\n\n\n\u4f8b\u5982\uff1a \u8003\u5bdf\u4e00\u4e2a\u4eba\u7684\u667a\u529b\u60c5\u51b5\uff0c\u5c31\u76f4\u63a5\u770b\u6570\u5b66\u6210\u7ee9\u5c31\u884c(\u5b58\u5728\uff1a\u6570\u5b66\u3001\u8bed\u6587\u3001\u82f1\u8bed\u6210\u7ee9)\n\n\n\n\n\n\n2) \u56e0\u5b50\u5206\u6790(Factor Analysis)\n\n\n\u901a\u4fd7\u7406\u89e3\uff1a\u5c06\u591a\u4e2a\u5b9e\u6d4b\u53d8\u91cf\u8f6c\u6362\u4e3a\u5c11\u6570\u51e0\u4e2a\u7efc\u5408\u6307\u6807\u3002\u5b83\u53cd\u6620\u4e00\u79cd\u964d\u7ef4\u7684\u601d\u60f3\uff0c\u901a\u8fc7\u964d\u7ef4\u5c06\u76f8\u5173\u6027\u9ad8\u7684\u53d8\u91cf\u805a\u5728\u4e00\u8d77,\u4ece\u800c\u51cf\u5c11\u9700\u8981\u5206\u6790\u7684\u53d8\u91cf\u7684\u6570\u91cf,\u800c\u51cf\u5c11\u95ee\u9898\u5206\u6790\u7684\u590d\u6742\u6027\n\n\n\u4f8b\u5982\uff1a \u8003\u5bdf\u4e00\u4e2a\u4eba\u7684\u6574\u4f53\u60c5\u51b5\uff0c\u5c31\u76f4\u63a5\u7ec4\u54083\u6837\u6210\u7ee9(\u9690\u53d8\u91cf)\uff0c\u770b\u5e73\u5747\u6210\u7ee9\u5c31\u884c(\u5b58\u5728\uff1a\u6570\u5b66\u3001\u8bed\u6587\u3001\u82f1\u8bed\u6210\u7ee9)\n\n\n\u5e94\u7528\u7684\u9886\u57df\uff1a\u793e\u4f1a\u79d1\u5b66\u3001\u91d1\u878d\u548c\u5176\u4ed6\u9886\u57df\n\n\n\u5728\u56e0\u5b50\u5206\u6790\u4e2d\uff0c\u6211\u4eec\n\n\n\u5047\u8bbe\u89c2\u5bdf\u6570\u636e\u7684\u6210\u5206\u4e2d\u6709\u4e00\u4e9b\u89c2\u5bdf\u4e0d\u5230\u7684\u9690\u53d8\u91cf(latent variable)\u3002\n\n\n\u5047\u8bbe\u89c2\u5bdf\u6570\u636e\u662f\u8fd9\u4e9b\u9690\u53d8\u91cf\u548c\u67d0\u4e9b\u566a\u97f3\u7684\u7ebf\u6027\u7ec4\u5408\u3002\n\n\n\u90a3\u4e48\u9690\u53d8\u91cf\u7684\u6570\u636e\u53ef\u80fd\u6bd4\u89c2\u5bdf\u6570\u636e\u7684\u6570\u76ee\u5c11\uff0c\u4e5f\u5c31\u8bf4\u901a\u8fc7\u627e\u5230\u9690\u53d8\u91cf\u5c31\u53ef\u4ee5\u5b9e\u73b0\u6570\u636e\u7684\u964d\u7ef4\u3002\n\n\n\n\n\n\n\n\n\n\n3) \u72ec\u7acb\u6210\u5206\u5206\u6790(Independ Component Analysis, ICA)\n\n\n\u901a\u4fd7\u7406\u89e3\uff1aICA \u8ba4\u4e3a\u89c2\u6d4b\u4fe1\u53f7\u662f\u82e5\u5e72\u4e2a\u72ec\u7acb\u4fe1\u53f7\u7684\u7ebf\u6027\u7ec4\u5408\uff0cICA \u8981\u505a\u7684\u662f\u4e00\u4e2a\u89e3\u6df7\u8fc7\u7a0b\u3002\n\n\n\u4f8b\u5982\uff1a\u6211\u4eec\u53bbktv\u5531\u6b4c\uff0c\u60f3\u8fa8\u522b\u5531\u7684\u662f\u4ec0\u4e48\u6b4c\u66f2\uff1fICA \u662f\u89c2\u5bdf\u53d1\u73b0\u662f\u539f\u5531\u5531\u7684\u4e00\u9996\u6b4c\u30102\u4e2a\u72ec\u7acb\u7684\u58f0\u97f3\uff08\u539f\u5531\uff0f\u4e3b\u5531\uff09\u3011\u3002\n\n\nICA \u662f\u5047\u8bbe\u6570\u636e\u662f\u4ece N \u4e2a\u6570\u636e\u6e90\u6df7\u5408\u7ec4\u6210\u7684\uff0c\u8fd9\u4e00\u70b9\u548c\u56e0\u5b50\u5206\u6790\u6709\u4e9b\u7c7b\u4f3c\uff0c\u8fd9\u4e9b\u6570\u636e\u6e90\u4e4b\u95f4\u5728\u7edf\u8ba1\u4e0a\u662f\u76f8\u4e92\u72ec\u7acb\u7684\uff0c\u800c\u5728 PCA \u4e2d\u53ea\u5047\u8bbe\u6570\u636e\u662f\u4e0d \u76f8\u5173\uff08\u7ebf\u6027\u5173\u7cfb\uff09\u7684\u3002\n\n\n\u540c\u56e0\u5b50\u5206\u6790\u4e00\u6837\uff0c\u5982\u679c\u6570\u636e\u6e90\u7684\u6570\u76ee\u5c11\u4e8e\u89c2\u5bdf\u6570\u636e\u7684\u6570\u76ee\uff0c\u5219\u53ef\u4ee5\u5b9e\u73b0\u964d\u7ef4\u8fc7\u7a0b\u3002\n\n\n\n\n\n\n\n\nPCA\n\n\nPCA \u6982\u8ff0\n\n\n\u4e3b\u6210\u5206\u5206\u6790(Principal Component Analysis, PCA)\uff1a\n\u901a\u4fd7\u7406\u89e3\uff1a\u5c31\u662f\u627e\u51fa\u4e00\u4e2a\u6700\u4e3b\u8981\u7684\u7279\u5f81\uff0c\u7136\u540e\u8fdb\u884c\u5206\u6790\u3002\n\n\nPCA \u573a\u666f\n\n\n\u4f8b\u5982\uff1a \u8003\u5bdf\u4e00\u4e2a\u4eba\u7684\u667a\u529b\u60c5\u51b5\uff0c\u5c31\u76f4\u63a5\u770b\u6570\u5b66\u6210\u7ee9\u5c31\u884c(\u5b58\u5728\uff1a\u6570\u5b66\u3001\u8bed\u6587\u3001\u82f1\u8bed\u6210\u7ee9)\n\n\nPCA \u539f\u7406\n\n\n\n\nPCA \u5de5\u4f5c\u539f\u7406\n\n\n\n\n\n\n\u627e\u51fa\u7b2c\u4e00\u4e2a\u4e3b\u6210\u5206\u7684\u65b9\u5411\uff0c\u4e5f\u5c31\u662f\u6570\u636e \n\u65b9\u5dee\u6700\u5927\n \u7684\u65b9\u5411\u3002\n\n\n\u627e\u51fa\u7b2c\u4e8c\u4e2a\u4e3b\u6210\u5206\u7684\u65b9\u5411\uff0c\u4e5f\u5c31\u662f\u6570\u636e \n\u65b9\u5dee\u6b21\u5927\n \u7684\u65b9\u5411\uff0c\u5e76\u4e14\u8be5\u65b9\u5411\u4e0e\u7b2c\u4e00\u4e2a\u4e3b\u6210\u5206\u65b9\u5411 \n\u6b63\u4ea4(orthogonal \u5982\u679c\u662f\u4e8c\u7ef4\u7a7a\u95f4\u5c31\u53eb\u5782\u76f4)\n\u3002\n\n\n\u901a\u8fc7\u8fd9\u79cd\u65b9\u5f0f\u8ba1\u7b97\u51fa\u6240\u6709\u7684\u4e3b\u6210\u5206\u65b9\u5411\u3002\n\n\n\u901a\u8fc7\u6570\u636e\u96c6\u7684\u534f\u65b9\u5dee\u77e9\u9635\u53ca\u5176\u7279\u5f81\u503c\u5206\u6790\uff0c\u6211\u4eec\u5c31\u53ef\u4ee5\u5f97\u5230\u8fd9\u4e9b\u4e3b\u6210\u5206\u7684\u503c\u3002\n\n\n\u4e00\u65e6\u5f97\u5230\u4e86\u534f\u65b9\u5dee\u77e9\u9635\u7684\u7279\u5f81\u503c\u548c\u7279\u5f81\u5411\u91cf\uff0c\u6211\u4eec\u5c31\u53ef\u4ee5\u4fdd\u7559\u6700\u5927\u7684 N \u4e2a\u7279\u5f81\u3002\u8fd9\u4e9b\u7279\u5f81\u5411\u91cf\u4e5f\u7ed9\u51fa\u4e86 N \u4e2a\u6700\u91cd\u8981\u7279\u5f81\u7684\u771f\u5b9e\u7ed3\u6784\uff0c\u6211\u4eec\u5c31\u53ef\u4ee5\u901a\u8fc7\u5c06\u6570\u636e\u4e58\u4e0a\u8fd9 N \u4e2a\u7279\u5f81\u5411\u91cf \u4ece\u800c\u5c06\u5b83\u8f6c\u6362\u5230\u65b0\u7684\u7a7a\u95f4\u4e0a\u3002\n\n\n\n\n\u4e3a\u4ec0\u4e48\u6b63\u4ea4\uff1f\n\n\n\n\n\u6b63\u4ea4\u662f\u4e3a\u4e86\u6570\u636e\u6709\u6548\u6027\u635f\u5931\u6700\u5c0f\n\n\n\u6b63\u4ea4\u7684\u4e00\u4e2a\u539f\u56e0\u662f\u7279\u5f81\u503c\u7684\u7279\u5f81\u5411\u91cf\u662f\u6b63\u4ea4\u7684\n\n\n\n\n\u4f8b\u5982\u4e0b\u56fe\uff1a\n\n\n\n\n\n\nPCA \u4f18\u7f3a\u70b9\n\n\n\n\n\u4f18\u70b9\uff1a\u964d\u4f4e\u6570\u636e\u7684\u590d\u6742\u6027\uff0c\u8bc6\u522b\u6700\u91cd\u8981\u7684\u591a\u4e2a\u7279\u5f81\u3002\n\u7f3a\u70b9\uff1a\u4e0d\u4e00\u5b9a\u9700\u8981\uff0c\u4e14\u53ef\u80fd\u635f\u5931\u6709\u7528\u4fe1\u606f\u3002\n\u9002\u7528\u6570\u636e\u7c7b\u578b\uff1a\u6570\u503c\u578b\u6570\u636e\u3002\n\n\n\n\n\u9879\u76ee\u6848\u4f8b: \u5bf9\u534a\u5bfc\u4f53\u6570\u636e\u8fdb\u884c\u964d\u7ef4\u5904\u7406\n\n\n\u9879\u76ee\u6982\u8ff0\n\n\n\u534a\u5bfc\u4f53\u662f\u5728\u4e00\u4e9b\u6781\u4e3a\u5148\u8fdb\u7684\u5de5\u5382\u4e2d\u5236\u9020\u51fa\u6765\u7684\u3002\u8bbe\u5907\u7684\u751f\u547d\u65e9\u671f\u6709\u9650\uff0c\u5e76\u4e14\u82b1\u8d39\u6781\u5176\u5de8\u5927\u3002\n\u867d\u7136\u901a\u8fc7\u65e9\u671f\u6d4b\u8bd5\u548c\u9891\u7e41\u6d4b\u8bd5\u6765\u53d1\u73b0\u6709\u7455\u75b5\u7684\u4ea7\u54c1\uff0c\u4f46\u4ecd\u6709\u4e00\u4e9b\u5b58\u5728\u7455\u75b5\u7684\u4ea7\u54c1\u901a\u8fc7\u6d4b\u8bd5\u3002\n\u5982\u679c\u6211\u4eec\u901a\u8fc7\u673a\u5668\u5b66\u4e60\u6280\u672f\u7528\u4e8e\u53d1\u73b0\u7455\u75b5\u4ea7\u54c1\uff0c\u90a3\u4e48\u5b83\u5c31\u4f1a\u4e3a\u5236\u9020\u5546\u8282\u7701\u5927\u91cf\u7684\u8d44\u91d1\u3002\n\n\u5177\u4f53\u6765\u8bb2\uff0c\u5b83\u62e5\u6709590\u4e2a\u7279\u5f81\u3002\u6211\u4eec\u770b\u770b\u80fd\u5426\u5bf9\u8fd9\u4e9b\u7279\u5f81\u8fdb\u884c\u964d\u7ef4\u5904\u7406\u3002\n\n\u5bf9\u4e8e\u6570\u636e\u7684\u7f3a\u5931\u503c\u7684\u95ee\u9898\uff0c\u6211\u4eec\u6709\u4e00\u4e9b\u5904\u7406\u65b9\u6cd5(\u53c2\u8003\u7b2c5\u7ae0)\n\u76ee\u524d\u8be5\u7ae0\u8282\u5904\u7406\u7684\u65b9\u6848\u662f\uff1a\u5c06\u7f3a\u5931\u503cNaN(Not a Number\u7f29\u5199)\uff0c\u5168\u90e8\u7528\u5e73\u5747\u503c\u6765\u66ff\u4ee3(\u5982\u679c\u75280\u6765\u5904\u7406\u7684\u7b56\u7565\u5c31\u592a\u5dee\u52b2\u4e86)\u3002\n\n\n\n\n\u5f00\u53d1\u6d41\u7a0b\n\n\n\n\n\u6536\u96c6\u6570\u636e\uff1a\u63d0\u4f9b\u6587\u672c\u6587\u4ef6\n\n\n\n\n\u6587\u4ef6\u540d\uff1asecom.data\n\n\n\u6587\u672c\u6587\u4ef6\u6570\u636e\u683c\u5f0f\u5982\u4e0b\uff1a\n\n\n3030.93 2564 2187.7333 1411.1265 1.3602 100 97.6133 0.1242 1.5005 0.0162 -0.0034 0.9455 202.4396 0 7.9558 414.871 10.0433 0.968 192.3963 12.519 1.4026 -5419 2916.5 -4043.75 751 0.8955 1.773 3.049 64.2333 2.0222 0.1632 3.5191 83.3971 9.5126 50.617 64.2588 49.383 66.3141 86.9555 117.5132 61.29 4.515 70 352.7173 10.1841 130.3691 723.3092 1.3072 141.2282 1 624.3145 218.3174 0 4.592 4.841 2834 0.9317 0.9484 4.7057 -1.7264 350.9264 10.6231 108.6427 16.1445 21.7264 29.5367 693.7724 0.9226 148.6009 1 608.17 84.0793 NaN NaN 0 0.0126 -0.0206 0.0141 -0.0307 -0.0083 -0.0026 -0.0567 -0.0044 7.2163 0.132 NaN 2.3895 0.969 1747.6049 0.1841 8671.9301 -0.3274 -0.0055 -0.0001 0.0001 0.0003 -0.2786 0 0.3974 -0.0251 0.0002 0.0002 0.135 -0.0042 0.0003 0.0056 0 -0.2468 0.3196 NaN NaN NaN NaN 0.946 0 748.6115 0.9908 58.4306 0.6002 0.9804 6.3788 15.88 2.639 15.94 15.93 0.8656 3.353 0.4098 3.188 -0.0473 0.7243 0.996 2.2967 1000.7263 39.2373 123 111.3 75.2 46.2 350.671 0.3948 0 6.78 0.0034 0.0898 0.085 0.0358 0.0328 12.2566 0 4.271 10.284 0.4734 0.0167 11.8901 0.41 0.0506 NaN NaN 1017 967 1066 368 0.09 0.048 0.095 2 0.9 0.069 0.046 0.725 0.1139 0.3183 0.5888 0.3184 0.9499 0.3979 0.16 0 0 20.95 0.333 12.49 16.713 0.0803 5.72 0 11.19 65.363 0 0 0 0 0 0 0.292 5.38 20.1 0.296 10.62 10.3 5.38 4.04 16.23 0.2951 8.64 0 10.3 97.314 0 0.0772 0.0599 0.07 0.0547 0.0704 0.052 0.0301 0.1135 3.4789 0.001 NaN 0.0707 0.0211 175.2173 0.0315 1940.3994 0 0.0744 0.0546 0 0 0 0 0 0 0 0 0 0.0027 0.004 0 0 0 0 NaN NaN NaN NaN 0.0188 0 219.9453 0.0011 2.8374 0.0189 0.005 0.4269 0 0 0 0 0 0 0 0 0 0 0 0.0472 40.855 4.5152 30.9815 33.9606 22.9057 15.9525 110.2144 0.131 0 2.5883 0.001 0.0319 0.0197 0.012 0.0109 3.9321 0 1.5123 3.5811 0.1337 0.0055 3.8447 0.1077 0.0167 NaN NaN 418.1363 398.3185 496.1582 158.333 0.0373 0.0202 0.0462 0.6083 0.3032 0.02 0.0174 0.2827 0.0434 0.1342 0.2419 0.1343 0.367 0.1431 0.061 0 0 0 6.2698 0.1181 3.8208 5.3737 0.0254 1.6252 0 3.2461 18.0118 0 0 0 0 0 0 0.0752 1.5989 6.5893 0.0913 3.0911 8.4654 1.5989 1.2293 5.3406 0.0867 2.8551 0 2.9971 31.8843 NaN NaN 0 0.0215 0.0274 0.0315 0.0238 0.0206 0.0238 0.0144 0.0491 1.2708 0.0004 NaN 0.0229 0.0065 55.2039 0.0105 560.2658 0 0.017 0.0148 0.0124 0.0114 0 0 0 0 0 0 0 0.001 0.0013 0 0 0 0 NaN NaN NaN NaN 0.0055 0 61.5932 0.0003 0.9967 0.0082 0.0017 0.1437 0 0 0 0 0 0 0 0 0 0 0 0.0151 14.2396 1.4392 5.6188 3.6721 2.9329 2.1118 24.8504 29.0271 0 6.9458 2.738 5.9846 525.0965 0 3.4641 6.0544 0 53.684 2.4788 4.7141 1.7275 6.18 3.275 3.6084 18.7673 33.1562 26.3617 49.0013 10.0503 2.7073 3.1158 3.1136 44.5055 42.2737 1.3071 0.8693 1.1975 0.6288 0.9163 0.6448 1.4324 0.4576 0.1362 0 0 0 5.9396 3.2698 9.5805 2.3106 6.1463 4.0502 0 1.7924 29.9394 0 0 0 0 0 0 6.2052 311.6377 5.7277 2.7864 9.7752 63.7987 24.7625 13.6778 2.3394 31.9893 5.8142 0 1.6936 115.7408 0 613.3069 291.4842 494.6996 178.1759 843.1138 0 53.1098 0 48.2091 0.7578 NaN 2.957 2.1739 10.0261 17.1202 22.3756 0 0 0 0 0 0 0 0 0 0 0 0 64.6707 0 0 0 0 0 NaN NaN NaN NaN 1.9864 0 29.3804 0.1094 4.856 3.1406 0.5064 6.6926 0 0 0 0 0 0 0 0 0 0 0 2.057 4.0825 11.5074 0.1096 0.0078 0.0026 7.116 1.0616 395.57 75.752 0.4234 12.93 0.78 0.1827 5.7349 0.3363 39.8842 3.2687 1.0297 1.0344 0.4385 0.1039 42.3877 NaN NaN NaN NaN NaN NaN NaN NaN 533.85 2.1113 8.95 0.3157 3.0624 0.1026 1.6765 14.9509 NaN NaN NaN NaN 0.5005 0.0118 0.0035 2.363 NaN NaN NaN NaN\n3095.78 2465.14 2230.4222 1463.6606 0.8294 100 102.3433 0.1247 1.4966 -0.0005 -0.0148 0.9627 200.547 0 10.1548 414.7347 9.2599 0.9701 191.2872 12.4608 1.3825 -5441.5 2604.25 -3498.75 -1640.25 1.2973 2.0143 7.39 68.4222 2.2667 0.2102 3.4171 84.9052 9.7997 50.6596 64.2828 49.3404 64.9193 87.5241 118.1188 78.25 2.773 70 352.2445 10.0373 133.1727 724.8264 1.2887 145.8445 1 631.2618 205.1695 0 4.59 4.842 2853 0.9324 0.9479 4.682 0.8073 352.0073 10.3092 113.98 10.9036 19.1927 27.6301 697.1964 1.1598 154.3709 1 620.3582 82.3494 NaN NaN 0 -0.0039 -0.0198 0.0004 -0.044 -0.0358 -0.012 -0.0377 0.0017 6.8043 0.1358 NaN 2.3754 0.9894 1931.6464 0.1874 8407.0299 0.1455 -0.0015 0 -0.0005 0.0001 0.5854 0 -0.9353 -0.0158 -0.0004 -0.0004 -0.0752 -0.0045 0.0002 0.0015 0 0.0772 -0.0903 NaN NaN NaN NaN 0.9425 0 731.2517 0.9902 58.668 0.5958 0.9731 6.5061 15.88 2.541 15.91 15.88 0.8703 2.771 0.4138 3.272 -0.0946 0.8122 0.9985 2.2932 998.1081 37.9213 98 80.3 81 56.2 219.7679 0.2301 0 5.7 0.0049 0.1356 0.06 0.0547 0.0204 12.3319 0 6.285 13.077 0.5666 0.0144 11.8428 0.35 0.0437 NaN NaN 568 59 297 3277 0.112 0.115 0.124 2.2 1.1 0.079 0.561 1.0498 0.1917 0.4115 0.6582 0.4115 1.0181 0.2315 0.325 0 0 17.99 0.439 10.14 16.358 0.0892 6.92 0 9.05 82.986 0 0 0 0 0 0 0.222 3.74 19.59 0.316 11.65 8.02 3.74 3.659 15.078 0.358 8.96 0 8.02 134.25 0 0.0566 0.0488 0.1651 0.1578 0.0468 0.0987 0.0734 0.0747 3.9578 0.005 NaN 0.0761 0.0014 128.4285 0.0238 1988 0 0.0203 0.0236 0 0 0 0 0 0 0 0 0 0.0064 0.0036 0 0 0 0 NaN NaN NaN NaN 0.0154 0 193.0287 0.0007 3.8999 0.0187 0.0086 0.5749 0 0 0 0 0 0 0 0 0 0 0 0.0411 29.743 3.6327 29.0598 28.9862 22.3163 17.4008 83.5542 0.0767 0 1.8459 0.0012 0.044 0.0171 0.0154 0.0069 3.9011 0 2.1016 3.9483 0.1662 0.0049 3.7836 0.1 0.0139 NaN NaN 233.9865 26.5879 139.2082 1529.7622 0.0502 0.0561 0.0591 0.8151 0.3464 0.0291 0.1822 0.3814 0.0715 0.1667 0.263 0.1667 0.3752 0.0856 0.1214 0 0 0 5.6522 0.1417 2.9939 5.2445 0.0264 1.8045 0 2.7661 23.623 0 0 0 0 0 0 0.0778 1.1506 5.9247 0.0878 3.3604 7.7421 1.1506 1.1265 5.0108 0.1013 2.4278 0 2.489 41.708 NaN NaN 0 0.0142 0.023 0.0768 0.0729 0.0143 0.0513 0.0399 0.0365 1.2474 0.0017 NaN 0.0248 0.0005 46.3453 0.0069 677.1873 0 0.0053 0.0059 0.0081 0.0033 0 0 0 0 0 0 0 0.0022 0.0013 0 0 0 0 NaN NaN NaN NaN 0.0049 0 65.0999 0.0002 1.1655 0.0068 0.0027 0.1921 0 0 0 0 0 0 0 0 0 0 0 0.012 10.5837 1.0323 4.3465 2.5939 3.2858 2.5197 15.015 27.7464 0 5.5695 3.93 9.0604 0 368.9713 2.1196 6.1491 0 61.8918 3.1531 6.1188 1.4857 6.1911 2.8088 3.1595 10.4383 2.2655 8.4887 199.7866 8.6336 5.7093 1.6779 3.2153 48.5294 37.5793 16.4174 1.2364 1.9562 0.8123 1.0239 0.834 1.5683 0.2645 0.2751 0 0 0 5.1072 4.3737 7.6142 2.2568 6.9233 4.7448 0 1.4336 40.4475 0 0 0 0 0 0 4.7415 463.2883 5.5652 3.0652 10.2211 73.5536 19.4865 13.243 2.1627 30.8643 5.8042 0 1.2928 163.0249 0 0 246.7762 0 359.0444 130.635 820.79 194.4371 0 58.1666 3.6822 NaN 3.2029 0.1441 6.6487 12.6788 23.6469 0 0 0 0 0 0 0 0 0 0 0 0 141.4365 0 0 0 0 0 NaN NaN NaN NaN 1.6292 0 26.397 0.0673 6.6475 3.131 0.8832 8.837 0 0 0 0 0 0 0 0 0 0 0 1.791 2.9799 9.5796 0.1096 0.0078 0.0026 7.116 1.3526 408.798 74.64 0.7193 16 1.33 0.2829 7.1196 0.4989 53.1836 3.9139 1.7819 0.9634 0.1745 0.0375 18.1087 NaN NaN NaN NaN NaN NaN NaN NaN 535.0164 2.4335 5.92 0.2653 2.0111 0.0772 1.1065 10.9003 0.0096 0.0201 0.006 208.2045 0.5019 0.0223 0.0055 4.4447 0.0096 0.0201 0.006 208.2045\n2932.61 2559.94 2186.4111 1698.0172 1.5102 100 95.4878 0.1241 1.4436 0.0041 0.0013 0.9615 202.0179 0 9.5157 416.7075 9.3144 0.9674 192.7035 12.5404 1.4123 -5447.75 2701.75 -4047 -1916.5 1.3122 2.0295 7.5788 67.1333 2.3333 0.1734 3.5986 84.7569 8.659 50.153 64.1114 49.847 65.8389 84.7327 118.6128 14.37 5.434 70 364.3782 9.8783 131.8027 734.7924 1.2992 141.0845 1 637.2655 185.7574 0 4.486 4.748 2936 0.9139 0.9447 4.5873 23.8245 364.5364 10.1685 115.6273 11.3019 16.1755 24.2829 710.5095 0.8694 145.8 1 625.9636 84.7681 140.6972 485.2665 0 -0.0078 -0.0326 -0.0052 0.0213 -0.0054 -0.1134 -0.0182 0.0287 7.1041 0.1362 NaN 2.4532 0.988 1685.8514 0.1497 9317.1698 0.0553 0.0006 -0.0013 0 0.0002 -0.1343 0 -0.1427 0.1218 0.0006 -0.0001 0.0134 -0.0026 -0.0016 -0.0006 0.0013 -0.0301 -0.0728 NaN NaN NaN 0.4684 0.9231 0 718.5777 0.9899 58.4808 0.6015 0.9772 6.4527 15.9 2.882 15.94 15.95 0.8798 3.094 0.4777 3.272 -0.1892 0.8194 0.9978 2.2592 998.444 42.0579 89 126.4 96.5 45.1001 306.038 0.3263 0 8.33 0.0038 0.0754 0.0483 0.0619 0.0221 8.266 0 4.819 8.443 0.4909 0.0177 8.2054 0.47 0.0497 NaN NaN 562 788 759 2100 0.187 0.117 0.068 2.1 1.4 0.123 0.319 1.0824 0.0369 0.3141 0.5753 0.3141 0.9677 0.2706 0.326 0 0 17.78 0.745 13.31 22.912 0.1959 9.21 0 17.87 60.11 0 0 0 0 0 0 0.139 5.09 19.75 0.949 9.71 16.73 5.09 11.059 22.624 0.1164 13.3 0 16.73 79.618 0 0.0339 0.0494 0.0696 0.0406 0.0401 0.084 0.0349 0.0718 2.4266 0.0014 NaN 0.0963 0.0152 182.4956 0.0284 839.6006 0 0.0192 0.017 0 0 0 0 0 0 0 0 0 0.0062 0.004 0 0 0 0 NaN NaN NaN 0.1729 0.0273 0 104.4042 0.0007 4.1446 0.0733 0.0063 0.4166 0 0 0 0 0 0 0 0 0 0 0 0.0487 29.621 3.9133 23.551 41.3837 32.6256 15.7716 97.3868 0.1117 0 2.5274 0.0012 0.0249 0.0152 0.0157 0.0075 2.8705 0 1.5306 2.5493 0.1479 0.0059 2.8046 0.1185 0.0167 NaN NaN 251.4536 329.6406 325.0672 902.4576 0.08 0.0583 0.0326 0.6964 0.4031 0.0416 0.1041 0.3846 0.0151 0.1288 0.2268 0.1288 0.3677 0.1175 0.1261 0 0 0 5.7247 0.2682 3.8541 6.1797 0.0546 2.568 0 4.6067 16.0104 0 0 0 0 0 0 0.0243 1.5481 5.9453 0.2777 3.16 8.9855 1.5481 2.9844 6.2277 0.0353 3.7663 0 5.6983 24.7959 13.5664 15.4488 0 0.0105 0.0208 0.0327 0.0171 0.0116 0.0428 0.0154 0.0383 0.7786 0.0005 NaN 0.0302 0.0046 58.0575 0.0092 283.6616 0 0.0054 0.0043 0.003 0.0037 0 0 0 0 0 0 0 0.0021 0.0015 0 0 0 0 NaN NaN NaN 0.0221 0.01 0 28.7334 0.0003 1.2356 0.019 0.002 0.1375 0 0 0 0 0 0 0 0 0 0 0 0.019 11.4871 1.1798 4.0782 4.3102 3.7696 2.0627 18.0233 21.6062 0 8.7236 3.0609 5.2231 0 0 2.2943 4.0917 0 50.6425 2.0261 5.2707 1.8268 4.2581 3.7479 3.522 10.3162 29.1663 18.7546 109.5747 14.2503 5.765 0.8972 3.1281 60 70.9161 8.8647 1.2771 0.4264 0.6263 0.8973 0.6301 1.4698 0.3194 0.2748 0 0 0 4.8795 7.5418 10.0984 3.1182 15.079 6.528 0 2.8042 32.3594 0 0 0 0 0 0 3.0301 21.3645 5.4178 9.3327 8.3977 148.0287 31.4674 45.5423 3.1842 13.3923 9.1221 0 2.6727 93.9245 0 434.2674 151.7665 0 190.3869 746.915 74.0741 191.7582 250.1742 34.1573 1.0281 NaN 3.9238 1.5357 10.8251 18.9849 9.0113 0 0 0 0 0 0 0 0 0 0 0 0 240.7767 244.2748 0 0 0 0 NaN NaN NaN 36.9067 2.9626 0 14.5293 0.0751 7.087 12.1831 0.6451 6.4568 0 0 0 0 0 0 0 0 0 0 0 2.1538 2.9667 9.3046 0.1096 0.0078 0.0026 7.116 0.7942 411.136 74.654 0.1832 16.16 0.85 0.0857 7.1619 0.3752 23.0713 3.9306 1.1386 1.5021 0.3718 0.1233 24.7524 267.064 0.9032 1.1 0.6219 0.4122 0.2562 0.4119 68.8489 535.0245 2.0293 11.21 0.1882 4.0923 0.064 2.0952 9.2721 0.0584 0.0484 0.0148 82.8602 0.4958 0.0157 0.0039 3.1745 0.0584 0.0484 0.0148 82.8602\n2988.72 2479.9 2199.0333 909.7926 1.3204 100 104.2367 0.1217 1.4882 -0.0124 -0.0033 0.9629 201.8482 0 9.6052 422.2894 9.6924 0.9687 192.1557 12.4782 1.4011 -5468.25 2648.25 -4515 -1657.25 1.3137 2.0038 7.3145 62.9333 2.6444 0.2071 3.3813 84.9105 8.6789 50.51 64.1125 49.49 65.1951 86.6867 117.0442 76.9 1.279 70 363.0273 9.9305 131.8027 733.8778 1.3027 142.5427 1 637.3727 189.9079 0 4.486 4.748 2936 0.9139 0.9447 4.5873 24.3791 361.4582 10.2112 116.1818 13.5597 15.6209 23.4736 710.4043 0.9761 147.6545 1 625.2945 70.2289 160.321 464.9735 0 -0.0555 -0.0461 -0.04 0.04 0.0676 -0.1051 0.0028 0.0277 7.5925 0.1302 NaN 2.4004 0.9904 1752.0968 0.1958 8205.7 0.0697 -0.0003 -0.0021 -0.0001 0.0002 0.0411 0 0.0177 -0.0195 -0.0002 0 -0.0699 -0.0059 0.0003 0.0003 0.0021 -0.0483 -0.118 NaN NaN NaN 0.4647 0.9564 0 709.0867 0.9906 58.6635 0.6016 0.9761 6.4935 15.55 3.132 15.61 15.59 1.366 2.48 0.5176 3.119 0.2838 0.7244 0.9961 2.3802 980.451 41.1025 127 118 123.7 47.8 162.432 0.1915 0 5.51 0.003 0.114 0.0393 0.0613 0.019 13.2651 0 9.073 15.241 1.3029 0.015 11.9738 0.35 0.0699 NaN NaN 859 355 3433 3004 0.068 0.108 0.1 1.7 0.9 0.086 0.241 0.9386 0.0356 0.2618 0.4391 0.2618 0.8567 0.2452 0.39 0 0 16.22 0.693 14.67 22.562 0.1786 5.69 0 18.2 52.571 0 0 0 0 0 0 0.139 5.92 23.6 1.264 10.63 13.56 5.92 11.382 24.32 0.3458 9.56 0 21.97 104.95 0 0.1248 0.0463 0.1223 0.0354 0.0708 0.0754 0.0643 0.0932 5.5398 0.0023 NaN 0.0764 0.0015 152.0885 0.0573 820.3999 0 0.0152 0.0149 0 0 0 0 0 0 0 0 0 0.0067 0.004 0 0 0 0 NaN NaN NaN 0.0191 0.0234 0 94.0954 0.001 3.2119 0.0406 0.0072 0.4212 0 0 0 0 0 0 0 0 0 0 0 0.0513 31.83 3.1959 33.896 37.8477 44.3906 16.9347 50.3631 0.0581 0 2.1775 0.0007 0.0417 0.0115 0.0172 0.0063 4.2154 0 2.896 4.0526 0.3882 0.0049 3.9403 0.0916 0.0245 NaN NaN 415.5048 157.0889 1572.6896 1377.4276 0.0285 0.0445 0.0465 0.6305 0.3046 0.0286 0.0824 0.3483 0.0128 0.1004 0.1701 0.1004 0.3465 0.0973 0.1675 0 0 0 5.444 0.2004 4.19 6.3329 0.0479 1.7339 0 4.966 15.7375 0 0 0 0 0 0 0.0243 1.7317 6.6262 0.3512 3.2699 9.402 1.7317 3.0672 6.6839 0.0928 3.0229 0 6.3292 29.0339 8.4026 4.8851 0 0.0407 0.0198 0.0531 0.0167 0.0224 0.0422 0.0273 0.0484 1.8222 0.0006 NaN 0.0252 0.0004 45.7058 0.0188 309.8492 0 0.0046 0.0049 0.0028 0.0034 0 0 0 0 0 0 0 0.0024 0.0014 0 0 0 0 NaN NaN NaN 0.0038 0.0068 0 32.4228 0.0003 1.1135 0.0132 0.0023 0.1348 0 0 0 0 0 0 0 0 0 0 0 0.0155 13.3972 1.1907 5.6363 3.9482 4.9881 2.1737 17.8537 14.5054 0 5.286 2.4643 7.6602 317.7362 0 1.9689 6.5718 0 94.4594 3.6091 13.442 1.5441 6.2313 2.8049 4.9898 15.7089 13.4051 76.0354 181.2641 5.176 5.3899 1.3671 2.7013 34.0336 41.5236 7.1274 1.1054 0.4097 0.5183 0.6849 0.529 1.3141 0.2829 0.3332 0 0 0 4.468 6.9785 11.1303 3.0744 13.7105 3.9918 0 2.8555 27.6824 0 0 0 0 0 0 3.0301 24.2831 6.5291 12.3786 9.1494 100.0021 37.8979 48.4887 3.4234 35.4323 6.4746 0 3.5135 149.4399 0 225.0169 100.4883 305.75 88.5553 104.666 71.7583 0 336.766 72.9635 1.767 NaN 3.1817 0.1488 8.6804 29.2542 9.9979 0 0 711.6418 0 0 0 0 0 0 0 0 0 113.5593 0 0 0 0 0 NaN NaN NaN 4.12 2.4416 0 13.2699 0.0977 5.4751 6.7553 0.7404 6.4865 0 0 0 0 0 0 0 0 0 0 0 2.1565 3.2465 7.7754 0.1096 0.0078 0.0026 7.116 1.165 372.822 72.442 1.8804 131.68 39.33 0.6812 56.9303 17.4781 161.4081 35.3198 54.2917 1.1613 0.7288 0.271 62.7572 268.228 0.6511 7.32 0.163 3.5611 0.067 2.729 25.0363 530.5682 2.0253 9.33 0.1738 2.8971 0.0525 1.7585 8.5831 0.0202 0.0149 0.0044 73.8432 0.499 0.0103 0.0025 2.0544 0.0202 0.0149 0.0044 73.8432\n3032.24 2502.87 2233.3667 1326.52 1.5334 100 100.3967 0.1235 1.5031 -0.0031 -0.0072 0.9569 201.9424 0 10.5661 420.5925 10.3387 0.9735 191.6037 12.4735 1.3888 -5476.25 2635.25 -3987.5 117 1.2887 1.9912 7.2748 62.8333 3.1556 0.2696 3.2728 86.3269 8.7677 50.248 64.1511 49.752 66.1542 86.1468 121.4364 76.39 2.209 70 353.34 10.4091 176.3136 789.7523 1.0341 138.0882 1 667.7418 233.5491 0 4.624 4.894 2865 0.9298 0.9449 4.6414 -12.2945 355.0809 9.7948 144.0191 21.9782 32.2945 44.1498 745.6025 0.9256 146.6636 1 645.7636 65.8417 NaN NaN 0 -0.0534 0.0183 -0.0167 -0.0449 0.0034 -0.0178 -0.0123 -0.0048 7.5017 0.1342 NaN 2.453 0.9902 1828.3846 0.1829 9014.46 0.0448 -0.0077 -0.0001 -0.0001 -0.0001 0.2189 0 -0.6704 -0.0167 0.0004 -0.0003 0.0696 -0.0045 0.0002 0.0078 0 -0.0799 -0.2038 NaN NaN NaN NaN 0.9424 0 796.595 0.9908 58.3858 0.5913 0.9628 6.3551 15.75 3.148 15.73 15.71 0.946 3.027 0.5328 3.299 -0.5677 0.778 1.001 2.3715 993.1274 38.1448 119 143.2 123.1 48.8 296.303 0.3744 0 3.64 0.0041 0.0634 0.0451 0.0623 0.024 14.2354 0 9.005 12.506 0.4434 0.0126 13.9047 0.43 0.0538 NaN NaN 699 283 1747 1443 0.147 0.04 0.113 3.9 0.8 0.101 0.499 0.576 0.0631 0.3053 0.583 0.3053 0.8285 0.1308 0.922 0 0 15.24 0.282 10.85 37.715 0.1189 3.98 0 25.54 72.149 0 0 0 0 0 0 0.25 5.52 15.76 0.519 10.71 19.77 5.52 8.446 33.832 0.3951 9.09 0 19.77 92.307 0 0.0915 0.0506 0.0769 0.1079 0.0797 0.1047 0.0924 0.1015 4.1338 0.003 NaN 0.0802 0.0004 69.151 0.197 1406.4004 0 0.0227 0.0272 0 0 0 0 0 0 0 0 0 0.0067 0.0031 0 0 0 0 NaN NaN NaN NaN 0.024 0 149.2172 0.0006 2.5775 0.0177 0.0214 0.4051 0 0 0 0 0 0 0 0 0 0 0 0.0488 19.862 3.6163 34.125 55.9626 53.0876 17.4864 88.7672 0.1092 0 1.0929 0.0013 0.0257 0.0116 0.0163 0.008 4.4239 0 3.2376 3.6536 0.1293 0.004 4.3474 0.1275 0.0181 NaN NaN 319.1252 128.0296 799.5884 628.3083 0.0755 0.0181 0.0476 1.35 0.2698 0.032 0.1541 0.2155 0.031 0.1354 0.2194 0.1354 0.3072 0.0582 0.3574 0 0 0 4.8956 0.0766 2.913 11.0583 0.0327 1.1229 0 7.3296 23.116 0 0 0 0 0 0 0.0822 1.6216 4.7279 0.1773 3.155 9.7777 1.6216 2.5923 10.5352 0.1301 3.0939 0 6.3767 32.0537 NaN NaN 0 0.0246 0.0221 0.0329 0.0522 0.0256 0.0545 0.0476 0.0463 1.553 0.001 NaN 0.0286 0.0001 21.0312 0.0573 494.7368 0 0.0063 0.0077 0.0052 0.0027 0 0 0 0 0 0 0 0.0025 0.0012 0 0 0 0 NaN NaN NaN NaN 0.0089 0 57.2692 0.0002 0.8495 0.0065 0.0077 0.1356 0 0 0 0 0 0 0 0 0 0 0 0.0165 7.1493 1.1704 5.3823 4.7226 4.9184 2.185 22.3369 24.4142 0 3.6256 3.3208 4.2178 0 866.0295 2.5046 7.0492 0 85.2255 2.9734 4.2892 1.2943 7.257 3.4473 3.8754 12.7642 10.739 43.8119 0 11.4064 2.0088 1.5533 6.2069 25.3521 37.4691 15.247 0.6672 0.7198 0.6076 0.9088 0.6136 1.2524 0.1518 0.7592 0 0 0 4.3131 2.7092 6.1538 4.7756 11.4945 2.8822 0 3.8248 30.8924 0 0 0 0 0 0 5.3863 44.898 4.4384 5.2987 7.4365 89.9529 17.0927 19.1303 4.5375 42.6838 6.1979 0 3.0615 140.1953 0 171.4486 276.881 461.8619 240.1781 0 587.3773 748.1781 0 55.1057 2.2358 NaN 3.2712 0.0372 3.7821 107.6905 15.6016 0 293.1396 0 0 0 0 0 0 0 0 0 0 148.0663 0 0 0 0 0 NaN NaN NaN NaN 2.5512 0 18.7319 0.0616 4.4146 2.9954 2.2181 6.3745 0 0 0 0 0 0 0 0 0 0 0 2.0579 1.9999 9.4805 0.1096 0.0078 0.0026 7.116 1.4636 399.914 79.156 1.0388 19.63 1.98 0.4287 9.7608 0.8311 70.9706 4.9086 2.5014 0.9778 0.2156 0.0461 22.05 NaN NaN NaN NaN NaN NaN NaN NaN 532.0155 2.0275 8.83 0.2224 3.1776 0.0706 1.6597 10.9698 NaN NaN NaN NaN 0.48 0.4766 0.1045 99.3032 0.0202 0.0149 0.0044 73.8432\n\n\n\n\n\n\n\u51c6\u5907\u6570\u636e\uff1a\u5c06value\u4e3aNaN\u7684\u6c42\u5747\u503c\n\n\n\n\ndef\n \nreplaceNanWithMean\n():\n\n    \ndatMat\n \n=\n \nloadDataSet\n(\ninput/13.PCA/secom.data\n,\n \n \n)\n\n    \nnumFeat\n \n=\n \nshape\n(\ndatMat\n)[\n1\n]\n\n    \nfor\n \ni\n \nin\n \nrange\n(\nnumFeat\n):\n\n        \n# \u5bf9value\u4e0d\u4e3aNaN\u7684\u6c42\u5747\u503c\n\n        \n# .A \u8fd4\u56de\u77e9\u9635\u57fa\u4e8e\u7684\u6570\u7ec4\n\n        \nmeanVal\n \n=\n \nmean\n(\ndatMat\n[\nnonzero\n(\n~\nisnan\n(\ndatMat\n[:,\n \ni\n]\n.\nA\n))[\n0\n],\n \ni\n])\n\n        \n# \u5c06value\u4e3aNaN\u7684\u503c\u8d4b\u503c\u4e3a\u5747\u503c\n\n        \ndatMat\n[\nnonzero\n(\nisnan\n(\ndatMat\n[:,\n \ni\n]\n.\nA\n))[\n0\n],\ni\n]\n \n=\n \nmeanVal\n\n    \nreturn\n \ndatMat\n\n\n\n\n\n\n\n\u5206\u6790\u6570\u636e\uff1a\u7edf\u8ba1\u5206\u6790 N \u7684\u9608\u503c\n\n\n\n\n\n\n\n\nPCA \u6570\u636e\u964d\u7ef4\n\n\n\n\n\u5728\u7b49\u5f0f Av=\u5165v \u4e2d\uff0cv \u662f\u7279\u5f81\u5411\u91cf\uff0c \u5165\u662f\u7279\u5f81\u503c\u3002\n\n\u8868\u793a \u5982\u679c\u7279\u5f81\u5411\u91cf v \u88ab\u67d0\u4e2a\u77e9\u9635 A \u5de6\u4e58\uff0c\u90a3\u4e48\u5b83\u5c31\u7b49\u4e8e\u67d0\u4e2a\u6807\u91cf \u5165 \u4e58\u4ee5 v.\n\n\u5e78\u8fd0\u7684\u662f\uff1a Numpy \u4e2d\u6709\u5bfb\u627e\u7279\u5f81\u5411\u91cf\u548c\u7279\u5f81\u503c\u7684\u6a21\u5757 linalg\uff0c\u5b83\u6709 eig() \u65b9\u6cd5\uff0c\u8be5\u65b9\u6cd5\u7528\u4e8e\u6c42\u89e3\u7279\u5f81\u5411\u91cf\u548c\u7279\u5f81\u503c\u3002\n\n\ndef\n \npca\n(\ndataMat\n,\n \ntopNfeat\n=\n9999999\n):\n\n    \npca\n\n\n\n    Args:\n\n\n        dataMat   \u539f\u6570\u636e\u96c6\u77e9\u9635\n\n\n        topNfeat  \u5e94\u7528\u7684N\u4e2a\u7279\u5f81\n\n\n    Returns:\n\n\n        lowDDataMat  \u964d\u7ef4\u540e\u6570\u636e\u96c6\n\n\n        reconMat     \u65b0\u7684\u6570\u636e\u96c6\u7a7a\u95f4\n\n\n    \n\n\n    \n# \u8ba1\u7b97\u6bcf\u4e00\u5217\u7684\u5747\u503c\n\n    \nmeanVals\n \n=\n \nmean\n(\ndataMat\n,\n \naxis\n=\n0\n)\n\n    \n# print \nmeanVals\n, meanVals\n\n\n    \n# \u6bcf\u4e2a\u5411\u91cf\u540c\u65f6\u90fd\u51cf\u53bb \u5747\u503c\n\n    \nmeanRemoved\n \n=\n \ndataMat\n \n-\n \nmeanVals\n\n    \n# print \nmeanRemoved=\n, meanRemoved\n\n\n    \n# cov\u534f\u65b9\u5dee=[(x1-x\u5747\u503c)*(y1-y\u5747\u503c)+(x2-x\u5747\u503c)*(y2-y\u5747\u503c)+...+(xn-x\u5747\u503c)*(yn-y\u5747\u503c)+]/(n-1)\n\n    \n\n\n    \u65b9\u5dee\uff1a\uff08\u4e00\u7ef4\uff09\u5ea6\u91cf\u4e24\u4e2a\u968f\u673a\u53d8\u91cf\u5173\u7cfb\u7684\u7edf\u8ba1\u91cf\n\n\n    \u534f\u65b9\u5dee\uff1a \uff08\u4e8c\u7ef4\uff09\u5ea6\u91cf\u5404\u4e2a\u7ef4\u5ea6\u504f\u79bb\u5176\u5747\u503c\u7684\u7a0b\u5ea6\n\n\n    \u534f\u65b9\u5dee\u77e9\u9635\uff1a\uff08\u591a\u7ef4\uff09\u5ea6\u91cf\u5404\u4e2a\u7ef4\u5ea6\u504f\u79bb\u5176\u5747\u503c\u7684\u7a0b\u5ea6\n\n\n\n    \u5f53\u00a0cov(X, Y)\n0\u65f6\uff0c\u8868\u660eX\u4e0eY\u6b63\u76f8\u5173\uff1b(X\u8d8a\u5927\uff0cY\u4e5f\u8d8a\u5927\uff1bX\u8d8a\u5c0fY\uff0c\u4e5f\u8d8a\u5c0f\u3002\u8fd9\u79cd\u60c5\u51b5\uff0c\u6211\u4eec\u79f0\u4e3a\u201c\u6b63\u76f8\u5173\u201d\u3002)\n\n\n    \u5f53\u00a0cov(X, Y)\n0\u65f6\uff0c\u8868\u660eX\u4e0eY\u8d1f\u76f8\u5173\uff1b\n\n\n    \u5f53\u00a0cov(X, Y)=0\u65f6\uff0c\u8868\u660eX\u4e0eY\u4e0d\u76f8\u5173\u3002\n\n\n    \n\n    \ncovMat\n \n=\n \ncov\n(\nmeanRemoved\n,\n \nrowvar\n=\n0\n)\n\n\n    \n# eigVals\u4e3a\u7279\u5f81\u503c\uff0c eigVects\u4e3a\u7279\u5f81\u5411\u91cf\n\n    \neigVals\n,\n \neigVects\n \n=\n \nlinalg\n.\neig\n(\nmat\n(\ncovMat\n))\n\n    \n# print \neigVals=\n, eigVals\n\n    \n# print \neigVects=\n, eigVects\n\n    \n# \u5bf9\u7279\u5f81\u503c\uff0c\u8fdb\u884c\u4ece\u5c0f\u5230\u5927\u7684\u6392\u5e8f\uff0c\u8fd4\u56de\u4ece\u5c0f\u5230\u5927\u7684index\u5e8f\u53f7\n\n    \n# \u7279\u5f81\u503c\u7684\u9006\u5e8f\u5c31\u53ef\u4ee5\u5f97\u5230topNfeat\u4e2a\u6700\u5927\u7684\u7279\u5f81\u5411\u91cf\n\n    \n\n\n    \n x = np.array([3, 1, 2])\n\n\n    \n np.argsort(x)\n\n\n    array([1, 2, 0])  # index,1 = 1; index,2 = 2; index,0 = 3\n\n\n    \n y = np.argsort(x)\n\n\n    \n y[::-1]\n\n\n    array([0, 2, 1])\n\n\n    \n y[:-3:-1]\n\n\n    array([0, 2])  # \u53d6\u51fa -1, -2\n\n\n    \n y[:-6:-1]\n\n\n    array([0, 2, 1])\n\n\n    \n\n    \neigValInd\n \n=\n \nargsort\n(\neigVals\n)\n\n    \n# print \neigValInd1=\n, eigValInd\n\n\n    \n# -1\u8868\u793a\u5012\u5e8f\uff0c\u8fd4\u56detopN\u7684\u7279\u5f81\u503c[-1 \u5230 -(topNfeat+1) \u4f46\u662f\u4e0d\u5305\u62ec-(topNfeat+1)\u672c\u8eab\u7684\u5012\u53d9]\n\n    \neigValInd\n \n=\n \neigValInd\n[:\n-\n(\ntopNfeat\n+\n1\n):\n-\n1\n]\n\n    \n# print \neigValInd2=\n, eigValInd\n\n    \n# \u91cd\u7ec4 eigVects \u6700\u5927\u5230\u6700\u5c0f\n\n    \nredEigVects\n \n=\n \neigVects\n[:,\n \neigValInd\n]\n\n    \n# print \nredEigVects=\n, redEigVects.T\n\n    \n# \u5c06\u6570\u636e\u8f6c\u6362\u5230\u65b0\u7a7a\u95f4\n\n    \n# --- (1567, 590) (590, 20)\n\n    \n# print \n---\n, shape(meanRemoved), shape(redEigVects)\n\n    \nlowDDataMat\n \n=\n \nmeanRemoved\n \n*\n \nredEigVects\n\n    \nreconMat\n \n=\n \n(\nlowDDataMat\n \n*\n \nredEigVects\n.\nT\n)\n \n+\n \nmeanVals\n\n    \n# print \nlowDDataMat=\n, lowDDataMat\n\n    \n# print \nreconMat=\n, reconMat\n\n    \nreturn\n \nlowDDataMat\n,\n \nreconMat\n\n\n\n\n\n\u5b8c\u6574\u4ee3\u7801\u5730\u5740\n: \nhttps://github.com/apachecn/MachineLearning/blob/master/src/python/13.PCA/pca.py\n\n\n\u8981\u70b9\u8865\u5145\n\n\n\u964d\u7ef4\u6280\u672f\u4f7f\u5f97\u6570\u636e\u53d8\u7684\u66f4\u6613\u4f7f\u7528\uff0c\u5e76\u4e14\u5b83\u4eec\u5f80\u5f80\u80fd\u591f\u53bb\u9664\u6570\u636e\u4e2d\u7684\u566a\u97f3\uff0c\u4f7f\u5f97\u5176\u4ed6\u673a\u5668\u5b66\u4e60\u4efb\u52a1\u66f4\u52a0\u7cbe\u786e\u3002\n\u964d\u7ef4\u5f80\u5f80\u4f5c\u4e3a\u9884\u5904\u7406\u6b65\u9aa4\uff0c\u5728\u6570\u636e\u5e94\u7528\u5230\u5176\u4ed6\u7b97\u6cd5\u4e4b\u524d\u6e05\u6d17\u6570\u636e\u3002\n\u6bd4\u8f83\u6d41\u884c\u7684\u964d\u7ef4\u6280\u672f\uff1a \u72ec\u7acb\u6210\u5206\u5206\u6790\u3001\u56e0\u5b50\u5206\u6790 \u548c \u4e3b\u6210\u5206\u5206\u6790\uff0c \u5176\u4e2d\u53c8\u4ee5\u4e3b\u6210\u5206\u5206\u6790\u5e94\u7528\u6700\u5e7f\u6cdb\u3002\n\n\u672c\u7ae0\u4e2d\u7684PCA\u5c06\u6240\u6709\u7684\u6570\u636e\u96c6\u90fd\u8c03\u5165\u4e86\u5185\u5b58\uff0c\u5982\u679c\u65e0\u6cd5\u505a\u5230\uff0c\u5c31\u9700\u8981\u5176\u4ed6\u7684\u65b9\u6cd5\u6765\u5bfb\u627e\u5176\u7279\u5f81\u503c\u3002\n\u5982\u679c\u4f7f\u7528\u5728\u7ebfPCA\u5206\u6790\u7684\u65b9\u6cd5\uff0c\u4f60\u53ef\u4ee5\u53c2\u8003\u4e00\u7bc7\u4f18\u79c0\u7684\u8bba\u6587 \nIncremental Eigenanalysis for Classification\n\u3002 \n\u4e0b\u4e00\u7ae0\u8981\u8ba8\u8bba\u7684\u5947\u5f02\u503c\u5206\u89e3\u65b9\u6cd5\u4e5f\u53ef\u4ee5\u7528\u4e8e\u7279\u5f81\u503c\u5206\u6790\u3002\n\n\n\n\n\n\n\n\n\u4f5c\u8005\uff1a\n\u7247\u523b\n \n1988\n\n\nGitHub\u5730\u5740\n: \nhttps://github.com/apachecn/MachineLearning\n\n\n\u7248\u6743\u58f0\u660e\uff1a\u6b22\u8fce\u8f6c\u8f7d\u5b66\u4e60 =\n \u8bf7\u6807\u6ce8\u4fe1\u606f\u6765\u6e90\u4e8e \nApacheCN", 
            "title": "13.\u5229\u7528PCA\u6765\u7b80\u5316\u6570\u636e"
        }, 
        {
            "location": "/\u4e66\u7c4d/\u673a\u5668\u5b66\u4e60\u5b9e\u6218/13.\u5229\u7528PCA\u6765\u7b80\u5316\u6570\u636e/#13-pca", 
            "text": "", 
            "title": "\u7b2c13\u7ae0 \u5229\u7528 PCA \u6765\u7b80\u5316\u6570\u636e"
        }, 
        {
            "location": "/\u4e66\u7c4d/\u673a\u5668\u5b66\u4e60\u5b9e\u6218/13.\u5229\u7528PCA\u6765\u7b80\u5316\u6570\u636e/#_1", 
            "text": "\u573a\u666f    \u6211\u4eec\u6b63\u901a\u8fc7\u7535\u89c6\u89c2\u770b\u4f53\u80b2\u6bd4\u8d5b\uff0c\u5728\u7535\u89c6\u7684\u663e\u793a\u5668\u4e0a\u6709\u4e00\u4e2a\u7403\u3002  \u663e\u793a\u5668\u5927\u6982\u5305\u542b\u4e86100\u4e07\u50cf\u7d20\u70b9\uff0c\u800c\u7403\u5219\u53ef\u80fd\u662f\u7531\u8f83\u5c11\u7684\u50cf\u7d20\u70b9\u7ec4\u6210\uff0c\u4f8b\u5982\u8bf4\u4e00\u5343\u4e2a\u50cf\u7d20\u70b9\u3002  \u4eba\u4eec\u5b9e\u65f6\u7684\u5c06\u663e\u793a\u5668\u4e0a\u7684\u767e\u4e07\u50cf\u7d20\u8f6c\u6362\u6210\u4e3a\u4e00\u4e2a\u4e09\u7ef4\u56fe\u50cf\uff0c\u8be5\u56fe\u50cf\u5c31\u7ed9\u51fa\u8fd0\u52a8\u573a\u4e0a\u7403\u7684\u4f4d\u7f6e\u3002  \u5728\u8fd9\u4e2a\u8fc7\u7a0b\u4e2d\uff0c\u4eba\u4eec\u5df2\u7ecf\u5c06\u767e\u4e07\u50cf\u7d20\u70b9\u7684\u6570\u636e\uff0c\u964d\u81f3\u4e3a\u4e09\u7ef4\u3002\u8fd9\u4e2a\u8fc7\u7a0b\u5c31\u79f0\u4e3a \u964d\u7ef4(dimensionality reduction)    \u6570\u636e\u663e\u793a \u5e76\u975e\u5927\u89c4\u6a21\u7279\u5f81\u4e0b\u7684\u552f\u4e00\u96be\u9898\uff0c\u5bf9\u6570\u636e\u8fdb\u884c\u7b80\u5316\u8fd8\u6709\u5982\u4e0b\u4e00\u7cfb\u5217\u7684\u539f\u56e0\uff1a    1) \u4f7f\u5f97\u6570\u636e\u96c6\u66f4\u5bb9\u6613\u4f7f\u7528  2) \u964d\u4f4e\u5f88\u591a\u7b97\u6cd5\u7684\u8ba1\u7b97\u5f00\u9500  3) \u53bb\u9664\u566a\u97f3  4) \u4f7f\u5f97\u7ed3\u679c\u6613\u61c2    \u9002\u7528\u8303\u56f4:     \u5728\u5df2\u6807\u6ce8\u4e0e\u672a\u6807\u6ce8\u7684\u6570\u636e\u4e0a\u90fd\u6709\u964d\u7ef4\u6280\u672f\u3002  \u8fd9\u91cc\u6211\u4eec\u5c06\u4e3b\u8981\u5173\u6ce8\u672a\u6807\u6ce8\u6570\u636e\u4e0a\u7684\u964d\u7ef4\u6280\u672f\uff0c\u5c06\u6280\u672f\u540c\u6837\u4e5f\u53ef\u4ee5\u5e94\u7528\u4e8e\u5df2\u6807\u6ce8\u7684\u6570\u636e\u3002    \u5728\u4ee5\u4e0b3\u79cd\u964d\u7ef4\u6280\u672f\u4e2d\uff0c PCA\u7684\u5e94\u7528\u76ee\u524d\u6700\u4e3a\u5e7f\u6cdb\uff0c\u56e0\u6b64\u672c\u7ae0\u4e3b\u8981\u5173\u6ce8PCA\u3002    1) \u4e3b\u6210\u5206\u5206\u6790(Principal Component Analysis, PCA)  \u901a\u4fd7\u7406\u89e3\uff1a\u5c31\u662f\u627e\u51fa\u4e00\u4e2a\u6700\u4e3b\u8981\u7684\u7279\u5f81\uff0c\u7136\u540e\u8fdb\u884c\u5206\u6790\u3002  \u4f8b\u5982\uff1a \u8003\u5bdf\u4e00\u4e2a\u4eba\u7684\u667a\u529b\u60c5\u51b5\uff0c\u5c31\u76f4\u63a5\u770b\u6570\u5b66\u6210\u7ee9\u5c31\u884c(\u5b58\u5728\uff1a\u6570\u5b66\u3001\u8bed\u6587\u3001\u82f1\u8bed\u6210\u7ee9)    2) \u56e0\u5b50\u5206\u6790(Factor Analysis)  \u901a\u4fd7\u7406\u89e3\uff1a\u5c06\u591a\u4e2a\u5b9e\u6d4b\u53d8\u91cf\u8f6c\u6362\u4e3a\u5c11\u6570\u51e0\u4e2a\u7efc\u5408\u6307\u6807\u3002\u5b83\u53cd\u6620\u4e00\u79cd\u964d\u7ef4\u7684\u601d\u60f3\uff0c\u901a\u8fc7\u964d\u7ef4\u5c06\u76f8\u5173\u6027\u9ad8\u7684\u53d8\u91cf\u805a\u5728\u4e00\u8d77,\u4ece\u800c\u51cf\u5c11\u9700\u8981\u5206\u6790\u7684\u53d8\u91cf\u7684\u6570\u91cf,\u800c\u51cf\u5c11\u95ee\u9898\u5206\u6790\u7684\u590d\u6742\u6027  \u4f8b\u5982\uff1a \u8003\u5bdf\u4e00\u4e2a\u4eba\u7684\u6574\u4f53\u60c5\u51b5\uff0c\u5c31\u76f4\u63a5\u7ec4\u54083\u6837\u6210\u7ee9(\u9690\u53d8\u91cf)\uff0c\u770b\u5e73\u5747\u6210\u7ee9\u5c31\u884c(\u5b58\u5728\uff1a\u6570\u5b66\u3001\u8bed\u6587\u3001\u82f1\u8bed\u6210\u7ee9)  \u5e94\u7528\u7684\u9886\u57df\uff1a\u793e\u4f1a\u79d1\u5b66\u3001\u91d1\u878d\u548c\u5176\u4ed6\u9886\u57df  \u5728\u56e0\u5b50\u5206\u6790\u4e2d\uff0c\u6211\u4eec  \u5047\u8bbe\u89c2\u5bdf\u6570\u636e\u7684\u6210\u5206\u4e2d\u6709\u4e00\u4e9b\u89c2\u5bdf\u4e0d\u5230\u7684\u9690\u53d8\u91cf(latent variable)\u3002  \u5047\u8bbe\u89c2\u5bdf\u6570\u636e\u662f\u8fd9\u4e9b\u9690\u53d8\u91cf\u548c\u67d0\u4e9b\u566a\u97f3\u7684\u7ebf\u6027\u7ec4\u5408\u3002  \u90a3\u4e48\u9690\u53d8\u91cf\u7684\u6570\u636e\u53ef\u80fd\u6bd4\u89c2\u5bdf\u6570\u636e\u7684\u6570\u76ee\u5c11\uff0c\u4e5f\u5c31\u8bf4\u901a\u8fc7\u627e\u5230\u9690\u53d8\u91cf\u5c31\u53ef\u4ee5\u5b9e\u73b0\u6570\u636e\u7684\u964d\u7ef4\u3002      3) \u72ec\u7acb\u6210\u5206\u5206\u6790(Independ Component Analysis, ICA)  \u901a\u4fd7\u7406\u89e3\uff1aICA \u8ba4\u4e3a\u89c2\u6d4b\u4fe1\u53f7\u662f\u82e5\u5e72\u4e2a\u72ec\u7acb\u4fe1\u53f7\u7684\u7ebf\u6027\u7ec4\u5408\uff0cICA \u8981\u505a\u7684\u662f\u4e00\u4e2a\u89e3\u6df7\u8fc7\u7a0b\u3002  \u4f8b\u5982\uff1a\u6211\u4eec\u53bbktv\u5531\u6b4c\uff0c\u60f3\u8fa8\u522b\u5531\u7684\u662f\u4ec0\u4e48\u6b4c\u66f2\uff1fICA \u662f\u89c2\u5bdf\u53d1\u73b0\u662f\u539f\u5531\u5531\u7684\u4e00\u9996\u6b4c\u30102\u4e2a\u72ec\u7acb\u7684\u58f0\u97f3\uff08\u539f\u5531\uff0f\u4e3b\u5531\uff09\u3011\u3002  ICA \u662f\u5047\u8bbe\u6570\u636e\u662f\u4ece N \u4e2a\u6570\u636e\u6e90\u6df7\u5408\u7ec4\u6210\u7684\uff0c\u8fd9\u4e00\u70b9\u548c\u56e0\u5b50\u5206\u6790\u6709\u4e9b\u7c7b\u4f3c\uff0c\u8fd9\u4e9b\u6570\u636e\u6e90\u4e4b\u95f4\u5728\u7edf\u8ba1\u4e0a\u662f\u76f8\u4e92\u72ec\u7acb\u7684\uff0c\u800c\u5728 PCA \u4e2d\u53ea\u5047\u8bbe\u6570\u636e\u662f\u4e0d \u76f8\u5173\uff08\u7ebf\u6027\u5173\u7cfb\uff09\u7684\u3002  \u540c\u56e0\u5b50\u5206\u6790\u4e00\u6837\uff0c\u5982\u679c\u6570\u636e\u6e90\u7684\u6570\u76ee\u5c11\u4e8e\u89c2\u5bdf\u6570\u636e\u7684\u6570\u76ee\uff0c\u5219\u53ef\u4ee5\u5b9e\u73b0\u964d\u7ef4\u8fc7\u7a0b\u3002", 
            "title": "\u964d\u7ef4\u6280\u672f"
        }, 
        {
            "location": "/\u4e66\u7c4d/\u673a\u5668\u5b66\u4e60\u5b9e\u6218/13.\u5229\u7528PCA\u6765\u7b80\u5316\u6570\u636e/#pca", 
            "text": "", 
            "title": "PCA"
        }, 
        {
            "location": "/\u4e66\u7c4d/\u673a\u5668\u5b66\u4e60\u5b9e\u6218/13.\u5229\u7528PCA\u6765\u7b80\u5316\u6570\u636e/#pca_1", 
            "text": "\u4e3b\u6210\u5206\u5206\u6790(Principal Component Analysis, PCA)\uff1a \u901a\u4fd7\u7406\u89e3\uff1a\u5c31\u662f\u627e\u51fa\u4e00\u4e2a\u6700\u4e3b\u8981\u7684\u7279\u5f81\uff0c\u7136\u540e\u8fdb\u884c\u5206\u6790\u3002", 
            "title": "PCA \u6982\u8ff0"
        }, 
        {
            "location": "/\u4e66\u7c4d/\u673a\u5668\u5b66\u4e60\u5b9e\u6218/13.\u5229\u7528PCA\u6765\u7b80\u5316\u6570\u636e/#pca_2", 
            "text": "\u4f8b\u5982\uff1a \u8003\u5bdf\u4e00\u4e2a\u4eba\u7684\u667a\u529b\u60c5\u51b5\uff0c\u5c31\u76f4\u63a5\u770b\u6570\u5b66\u6210\u7ee9\u5c31\u884c(\u5b58\u5728\uff1a\u6570\u5b66\u3001\u8bed\u6587\u3001\u82f1\u8bed\u6210\u7ee9)", 
            "title": "PCA \u573a\u666f"
        }, 
        {
            "location": "/\u4e66\u7c4d/\u673a\u5668\u5b66\u4e60\u5b9e\u6218/13.\u5229\u7528PCA\u6765\u7b80\u5316\u6570\u636e/#pca_3", 
            "text": "PCA \u5de5\u4f5c\u539f\u7406    \u627e\u51fa\u7b2c\u4e00\u4e2a\u4e3b\u6210\u5206\u7684\u65b9\u5411\uff0c\u4e5f\u5c31\u662f\u6570\u636e  \u65b9\u5dee\u6700\u5927  \u7684\u65b9\u5411\u3002  \u627e\u51fa\u7b2c\u4e8c\u4e2a\u4e3b\u6210\u5206\u7684\u65b9\u5411\uff0c\u4e5f\u5c31\u662f\u6570\u636e  \u65b9\u5dee\u6b21\u5927  \u7684\u65b9\u5411\uff0c\u5e76\u4e14\u8be5\u65b9\u5411\u4e0e\u7b2c\u4e00\u4e2a\u4e3b\u6210\u5206\u65b9\u5411  \u6b63\u4ea4(orthogonal \u5982\u679c\u662f\u4e8c\u7ef4\u7a7a\u95f4\u5c31\u53eb\u5782\u76f4) \u3002  \u901a\u8fc7\u8fd9\u79cd\u65b9\u5f0f\u8ba1\u7b97\u51fa\u6240\u6709\u7684\u4e3b\u6210\u5206\u65b9\u5411\u3002  \u901a\u8fc7\u6570\u636e\u96c6\u7684\u534f\u65b9\u5dee\u77e9\u9635\u53ca\u5176\u7279\u5f81\u503c\u5206\u6790\uff0c\u6211\u4eec\u5c31\u53ef\u4ee5\u5f97\u5230\u8fd9\u4e9b\u4e3b\u6210\u5206\u7684\u503c\u3002  \u4e00\u65e6\u5f97\u5230\u4e86\u534f\u65b9\u5dee\u77e9\u9635\u7684\u7279\u5f81\u503c\u548c\u7279\u5f81\u5411\u91cf\uff0c\u6211\u4eec\u5c31\u53ef\u4ee5\u4fdd\u7559\u6700\u5927\u7684 N \u4e2a\u7279\u5f81\u3002\u8fd9\u4e9b\u7279\u5f81\u5411\u91cf\u4e5f\u7ed9\u51fa\u4e86 N \u4e2a\u6700\u91cd\u8981\u7279\u5f81\u7684\u771f\u5b9e\u7ed3\u6784\uff0c\u6211\u4eec\u5c31\u53ef\u4ee5\u901a\u8fc7\u5c06\u6570\u636e\u4e58\u4e0a\u8fd9 N \u4e2a\u7279\u5f81\u5411\u91cf \u4ece\u800c\u5c06\u5b83\u8f6c\u6362\u5230\u65b0\u7684\u7a7a\u95f4\u4e0a\u3002   \u4e3a\u4ec0\u4e48\u6b63\u4ea4\uff1f   \u6b63\u4ea4\u662f\u4e3a\u4e86\u6570\u636e\u6709\u6548\u6027\u635f\u5931\u6700\u5c0f  \u6b63\u4ea4\u7684\u4e00\u4e2a\u539f\u56e0\u662f\u7279\u5f81\u503c\u7684\u7279\u5f81\u5411\u91cf\u662f\u6b63\u4ea4\u7684   \u4f8b\u5982\u4e0b\u56fe\uff1a    PCA \u4f18\u7f3a\u70b9   \u4f18\u70b9\uff1a\u964d\u4f4e\u6570\u636e\u7684\u590d\u6742\u6027\uff0c\u8bc6\u522b\u6700\u91cd\u8981\u7684\u591a\u4e2a\u7279\u5f81\u3002\n\u7f3a\u70b9\uff1a\u4e0d\u4e00\u5b9a\u9700\u8981\uff0c\u4e14\u53ef\u80fd\u635f\u5931\u6709\u7528\u4fe1\u606f\u3002\n\u9002\u7528\u6570\u636e\u7c7b\u578b\uff1a\u6570\u503c\u578b\u6570\u636e\u3002", 
            "title": "PCA \u539f\u7406"
        }, 
        {
            "location": "/\u4e66\u7c4d/\u673a\u5668\u5b66\u4e60\u5b9e\u6218/13.\u5229\u7528PCA\u6765\u7b80\u5316\u6570\u636e/#_2", 
            "text": "", 
            "title": "\u9879\u76ee\u6848\u4f8b: \u5bf9\u534a\u5bfc\u4f53\u6570\u636e\u8fdb\u884c\u964d\u7ef4\u5904\u7406"
        }, 
        {
            "location": "/\u4e66\u7c4d/\u673a\u5668\u5b66\u4e60\u5b9e\u6218/13.\u5229\u7528PCA\u6765\u7b80\u5316\u6570\u636e/#_3", 
            "text": "\u534a\u5bfc\u4f53\u662f\u5728\u4e00\u4e9b\u6781\u4e3a\u5148\u8fdb\u7684\u5de5\u5382\u4e2d\u5236\u9020\u51fa\u6765\u7684\u3002\u8bbe\u5907\u7684\u751f\u547d\u65e9\u671f\u6709\u9650\uff0c\u5e76\u4e14\u82b1\u8d39\u6781\u5176\u5de8\u5927\u3002\n\u867d\u7136\u901a\u8fc7\u65e9\u671f\u6d4b\u8bd5\u548c\u9891\u7e41\u6d4b\u8bd5\u6765\u53d1\u73b0\u6709\u7455\u75b5\u7684\u4ea7\u54c1\uff0c\u4f46\u4ecd\u6709\u4e00\u4e9b\u5b58\u5728\u7455\u75b5\u7684\u4ea7\u54c1\u901a\u8fc7\u6d4b\u8bd5\u3002\n\u5982\u679c\u6211\u4eec\u901a\u8fc7\u673a\u5668\u5b66\u4e60\u6280\u672f\u7528\u4e8e\u53d1\u73b0\u7455\u75b5\u4ea7\u54c1\uff0c\u90a3\u4e48\u5b83\u5c31\u4f1a\u4e3a\u5236\u9020\u5546\u8282\u7701\u5927\u91cf\u7684\u8d44\u91d1\u3002\n\n\u5177\u4f53\u6765\u8bb2\uff0c\u5b83\u62e5\u6709590\u4e2a\u7279\u5f81\u3002\u6211\u4eec\u770b\u770b\u80fd\u5426\u5bf9\u8fd9\u4e9b\u7279\u5f81\u8fdb\u884c\u964d\u7ef4\u5904\u7406\u3002\n\n\u5bf9\u4e8e\u6570\u636e\u7684\u7f3a\u5931\u503c\u7684\u95ee\u9898\uff0c\u6211\u4eec\u6709\u4e00\u4e9b\u5904\u7406\u65b9\u6cd5(\u53c2\u8003\u7b2c5\u7ae0)\n\u76ee\u524d\u8be5\u7ae0\u8282\u5904\u7406\u7684\u65b9\u6848\u662f\uff1a\u5c06\u7f3a\u5931\u503cNaN(Not a Number\u7f29\u5199)\uff0c\u5168\u90e8\u7528\u5e73\u5747\u503c\u6765\u66ff\u4ee3(\u5982\u679c\u75280\u6765\u5904\u7406\u7684\u7b56\u7565\u5c31\u592a\u5dee\u52b2\u4e86)\u3002", 
            "title": "\u9879\u76ee\u6982\u8ff0"
        }, 
        {
            "location": "/\u4e66\u7c4d/\u673a\u5668\u5b66\u4e60\u5b9e\u6218/13.\u5229\u7528PCA\u6765\u7b80\u5316\u6570\u636e/#_4", 
            "text": "\u6536\u96c6\u6570\u636e\uff1a\u63d0\u4f9b\u6587\u672c\u6587\u4ef6   \u6587\u4ef6\u540d\uff1asecom.data  \u6587\u672c\u6587\u4ef6\u6570\u636e\u683c\u5f0f\u5982\u4e0b\uff1a  3030.93 2564 2187.7333 1411.1265 1.3602 100 97.6133 0.1242 1.5005 0.0162 -0.0034 0.9455 202.4396 0 7.9558 414.871 10.0433 0.968 192.3963 12.519 1.4026 -5419 2916.5 -4043.75 751 0.8955 1.773 3.049 64.2333 2.0222 0.1632 3.5191 83.3971 9.5126 50.617 64.2588 49.383 66.3141 86.9555 117.5132 61.29 4.515 70 352.7173 10.1841 130.3691 723.3092 1.3072 141.2282 1 624.3145 218.3174 0 4.592 4.841 2834 0.9317 0.9484 4.7057 -1.7264 350.9264 10.6231 108.6427 16.1445 21.7264 29.5367 693.7724 0.9226 148.6009 1 608.17 84.0793 NaN NaN 0 0.0126 -0.0206 0.0141 -0.0307 -0.0083 -0.0026 -0.0567 -0.0044 7.2163 0.132 NaN 2.3895 0.969 1747.6049 0.1841 8671.9301 -0.3274 -0.0055 -0.0001 0.0001 0.0003 -0.2786 0 0.3974 -0.0251 0.0002 0.0002 0.135 -0.0042 0.0003 0.0056 0 -0.2468 0.3196 NaN NaN NaN NaN 0.946 0 748.6115 0.9908 58.4306 0.6002 0.9804 6.3788 15.88 2.639 15.94 15.93 0.8656 3.353 0.4098 3.188 -0.0473 0.7243 0.996 2.2967 1000.7263 39.2373 123 111.3 75.2 46.2 350.671 0.3948 0 6.78 0.0034 0.0898 0.085 0.0358 0.0328 12.2566 0 4.271 10.284 0.4734 0.0167 11.8901 0.41 0.0506 NaN NaN 1017 967 1066 368 0.09 0.048 0.095 2 0.9 0.069 0.046 0.725 0.1139 0.3183 0.5888 0.3184 0.9499 0.3979 0.16 0 0 20.95 0.333 12.49 16.713 0.0803 5.72 0 11.19 65.363 0 0 0 0 0 0 0.292 5.38 20.1 0.296 10.62 10.3 5.38 4.04 16.23 0.2951 8.64 0 10.3 97.314 0 0.0772 0.0599 0.07 0.0547 0.0704 0.052 0.0301 0.1135 3.4789 0.001 NaN 0.0707 0.0211 175.2173 0.0315 1940.3994 0 0.0744 0.0546 0 0 0 0 0 0 0 0 0 0.0027 0.004 0 0 0 0 NaN NaN NaN NaN 0.0188 0 219.9453 0.0011 2.8374 0.0189 0.005 0.4269 0 0 0 0 0 0 0 0 0 0 0 0.0472 40.855 4.5152 30.9815 33.9606 22.9057 15.9525 110.2144 0.131 0 2.5883 0.001 0.0319 0.0197 0.012 0.0109 3.9321 0 1.5123 3.5811 0.1337 0.0055 3.8447 0.1077 0.0167 NaN NaN 418.1363 398.3185 496.1582 158.333 0.0373 0.0202 0.0462 0.6083 0.3032 0.02 0.0174 0.2827 0.0434 0.1342 0.2419 0.1343 0.367 0.1431 0.061 0 0 0 6.2698 0.1181 3.8208 5.3737 0.0254 1.6252 0 3.2461 18.0118 0 0 0 0 0 0 0.0752 1.5989 6.5893 0.0913 3.0911 8.4654 1.5989 1.2293 5.3406 0.0867 2.8551 0 2.9971 31.8843 NaN NaN 0 0.0215 0.0274 0.0315 0.0238 0.0206 0.0238 0.0144 0.0491 1.2708 0.0004 NaN 0.0229 0.0065 55.2039 0.0105 560.2658 0 0.017 0.0148 0.0124 0.0114 0 0 0 0 0 0 0 0.001 0.0013 0 0 0 0 NaN NaN NaN NaN 0.0055 0 61.5932 0.0003 0.9967 0.0082 0.0017 0.1437 0 0 0 0 0 0 0 0 0 0 0 0.0151 14.2396 1.4392 5.6188 3.6721 2.9329 2.1118 24.8504 29.0271 0 6.9458 2.738 5.9846 525.0965 0 3.4641 6.0544 0 53.684 2.4788 4.7141 1.7275 6.18 3.275 3.6084 18.7673 33.1562 26.3617 49.0013 10.0503 2.7073 3.1158 3.1136 44.5055 42.2737 1.3071 0.8693 1.1975 0.6288 0.9163 0.6448 1.4324 0.4576 0.1362 0 0 0 5.9396 3.2698 9.5805 2.3106 6.1463 4.0502 0 1.7924 29.9394 0 0 0 0 0 0 6.2052 311.6377 5.7277 2.7864 9.7752 63.7987 24.7625 13.6778 2.3394 31.9893 5.8142 0 1.6936 115.7408 0 613.3069 291.4842 494.6996 178.1759 843.1138 0 53.1098 0 48.2091 0.7578 NaN 2.957 2.1739 10.0261 17.1202 22.3756 0 0 0 0 0 0 0 0 0 0 0 0 64.6707 0 0 0 0 0 NaN NaN NaN NaN 1.9864 0 29.3804 0.1094 4.856 3.1406 0.5064 6.6926 0 0 0 0 0 0 0 0 0 0 0 2.057 4.0825 11.5074 0.1096 0.0078 0.0026 7.116 1.0616 395.57 75.752 0.4234 12.93 0.78 0.1827 5.7349 0.3363 39.8842 3.2687 1.0297 1.0344 0.4385 0.1039 42.3877 NaN NaN NaN NaN NaN NaN NaN NaN 533.85 2.1113 8.95 0.3157 3.0624 0.1026 1.6765 14.9509 NaN NaN NaN NaN 0.5005 0.0118 0.0035 2.363 NaN NaN NaN NaN\n3095.78 2465.14 2230.4222 1463.6606 0.8294 100 102.3433 0.1247 1.4966 -0.0005 -0.0148 0.9627 200.547 0 10.1548 414.7347 9.2599 0.9701 191.2872 12.4608 1.3825 -5441.5 2604.25 -3498.75 -1640.25 1.2973 2.0143 7.39 68.4222 2.2667 0.2102 3.4171 84.9052 9.7997 50.6596 64.2828 49.3404 64.9193 87.5241 118.1188 78.25 2.773 70 352.2445 10.0373 133.1727 724.8264 1.2887 145.8445 1 631.2618 205.1695 0 4.59 4.842 2853 0.9324 0.9479 4.682 0.8073 352.0073 10.3092 113.98 10.9036 19.1927 27.6301 697.1964 1.1598 154.3709 1 620.3582 82.3494 NaN NaN 0 -0.0039 -0.0198 0.0004 -0.044 -0.0358 -0.012 -0.0377 0.0017 6.8043 0.1358 NaN 2.3754 0.9894 1931.6464 0.1874 8407.0299 0.1455 -0.0015 0 -0.0005 0.0001 0.5854 0 -0.9353 -0.0158 -0.0004 -0.0004 -0.0752 -0.0045 0.0002 0.0015 0 0.0772 -0.0903 NaN NaN NaN NaN 0.9425 0 731.2517 0.9902 58.668 0.5958 0.9731 6.5061 15.88 2.541 15.91 15.88 0.8703 2.771 0.4138 3.272 -0.0946 0.8122 0.9985 2.2932 998.1081 37.9213 98 80.3 81 56.2 219.7679 0.2301 0 5.7 0.0049 0.1356 0.06 0.0547 0.0204 12.3319 0 6.285 13.077 0.5666 0.0144 11.8428 0.35 0.0437 NaN NaN 568 59 297 3277 0.112 0.115 0.124 2.2 1.1 0.079 0.561 1.0498 0.1917 0.4115 0.6582 0.4115 1.0181 0.2315 0.325 0 0 17.99 0.439 10.14 16.358 0.0892 6.92 0 9.05 82.986 0 0 0 0 0 0 0.222 3.74 19.59 0.316 11.65 8.02 3.74 3.659 15.078 0.358 8.96 0 8.02 134.25 0 0.0566 0.0488 0.1651 0.1578 0.0468 0.0987 0.0734 0.0747 3.9578 0.005 NaN 0.0761 0.0014 128.4285 0.0238 1988 0 0.0203 0.0236 0 0 0 0 0 0 0 0 0 0.0064 0.0036 0 0 0 0 NaN NaN NaN NaN 0.0154 0 193.0287 0.0007 3.8999 0.0187 0.0086 0.5749 0 0 0 0 0 0 0 0 0 0 0 0.0411 29.743 3.6327 29.0598 28.9862 22.3163 17.4008 83.5542 0.0767 0 1.8459 0.0012 0.044 0.0171 0.0154 0.0069 3.9011 0 2.1016 3.9483 0.1662 0.0049 3.7836 0.1 0.0139 NaN NaN 233.9865 26.5879 139.2082 1529.7622 0.0502 0.0561 0.0591 0.8151 0.3464 0.0291 0.1822 0.3814 0.0715 0.1667 0.263 0.1667 0.3752 0.0856 0.1214 0 0 0 5.6522 0.1417 2.9939 5.2445 0.0264 1.8045 0 2.7661 23.623 0 0 0 0 0 0 0.0778 1.1506 5.9247 0.0878 3.3604 7.7421 1.1506 1.1265 5.0108 0.1013 2.4278 0 2.489 41.708 NaN NaN 0 0.0142 0.023 0.0768 0.0729 0.0143 0.0513 0.0399 0.0365 1.2474 0.0017 NaN 0.0248 0.0005 46.3453 0.0069 677.1873 0 0.0053 0.0059 0.0081 0.0033 0 0 0 0 0 0 0 0.0022 0.0013 0 0 0 0 NaN NaN NaN NaN 0.0049 0 65.0999 0.0002 1.1655 0.0068 0.0027 0.1921 0 0 0 0 0 0 0 0 0 0 0 0.012 10.5837 1.0323 4.3465 2.5939 3.2858 2.5197 15.015 27.7464 0 5.5695 3.93 9.0604 0 368.9713 2.1196 6.1491 0 61.8918 3.1531 6.1188 1.4857 6.1911 2.8088 3.1595 10.4383 2.2655 8.4887 199.7866 8.6336 5.7093 1.6779 3.2153 48.5294 37.5793 16.4174 1.2364 1.9562 0.8123 1.0239 0.834 1.5683 0.2645 0.2751 0 0 0 5.1072 4.3737 7.6142 2.2568 6.9233 4.7448 0 1.4336 40.4475 0 0 0 0 0 0 4.7415 463.2883 5.5652 3.0652 10.2211 73.5536 19.4865 13.243 2.1627 30.8643 5.8042 0 1.2928 163.0249 0 0 246.7762 0 359.0444 130.635 820.79 194.4371 0 58.1666 3.6822 NaN 3.2029 0.1441 6.6487 12.6788 23.6469 0 0 0 0 0 0 0 0 0 0 0 0 141.4365 0 0 0 0 0 NaN NaN NaN NaN 1.6292 0 26.397 0.0673 6.6475 3.131 0.8832 8.837 0 0 0 0 0 0 0 0 0 0 0 1.791 2.9799 9.5796 0.1096 0.0078 0.0026 7.116 1.3526 408.798 74.64 0.7193 16 1.33 0.2829 7.1196 0.4989 53.1836 3.9139 1.7819 0.9634 0.1745 0.0375 18.1087 NaN NaN NaN NaN NaN NaN NaN NaN 535.0164 2.4335 5.92 0.2653 2.0111 0.0772 1.1065 10.9003 0.0096 0.0201 0.006 208.2045 0.5019 0.0223 0.0055 4.4447 0.0096 0.0201 0.006 208.2045\n2932.61 2559.94 2186.4111 1698.0172 1.5102 100 95.4878 0.1241 1.4436 0.0041 0.0013 0.9615 202.0179 0 9.5157 416.7075 9.3144 0.9674 192.7035 12.5404 1.4123 -5447.75 2701.75 -4047 -1916.5 1.3122 2.0295 7.5788 67.1333 2.3333 0.1734 3.5986 84.7569 8.659 50.153 64.1114 49.847 65.8389 84.7327 118.6128 14.37 5.434 70 364.3782 9.8783 131.8027 734.7924 1.2992 141.0845 1 637.2655 185.7574 0 4.486 4.748 2936 0.9139 0.9447 4.5873 23.8245 364.5364 10.1685 115.6273 11.3019 16.1755 24.2829 710.5095 0.8694 145.8 1 625.9636 84.7681 140.6972 485.2665 0 -0.0078 -0.0326 -0.0052 0.0213 -0.0054 -0.1134 -0.0182 0.0287 7.1041 0.1362 NaN 2.4532 0.988 1685.8514 0.1497 9317.1698 0.0553 0.0006 -0.0013 0 0.0002 -0.1343 0 -0.1427 0.1218 0.0006 -0.0001 0.0134 -0.0026 -0.0016 -0.0006 0.0013 -0.0301 -0.0728 NaN NaN NaN 0.4684 0.9231 0 718.5777 0.9899 58.4808 0.6015 0.9772 6.4527 15.9 2.882 15.94 15.95 0.8798 3.094 0.4777 3.272 -0.1892 0.8194 0.9978 2.2592 998.444 42.0579 89 126.4 96.5 45.1001 306.038 0.3263 0 8.33 0.0038 0.0754 0.0483 0.0619 0.0221 8.266 0 4.819 8.443 0.4909 0.0177 8.2054 0.47 0.0497 NaN NaN 562 788 759 2100 0.187 0.117 0.068 2.1 1.4 0.123 0.319 1.0824 0.0369 0.3141 0.5753 0.3141 0.9677 0.2706 0.326 0 0 17.78 0.745 13.31 22.912 0.1959 9.21 0 17.87 60.11 0 0 0 0 0 0 0.139 5.09 19.75 0.949 9.71 16.73 5.09 11.059 22.624 0.1164 13.3 0 16.73 79.618 0 0.0339 0.0494 0.0696 0.0406 0.0401 0.084 0.0349 0.0718 2.4266 0.0014 NaN 0.0963 0.0152 182.4956 0.0284 839.6006 0 0.0192 0.017 0 0 0 0 0 0 0 0 0 0.0062 0.004 0 0 0 0 NaN NaN NaN 0.1729 0.0273 0 104.4042 0.0007 4.1446 0.0733 0.0063 0.4166 0 0 0 0 0 0 0 0 0 0 0 0.0487 29.621 3.9133 23.551 41.3837 32.6256 15.7716 97.3868 0.1117 0 2.5274 0.0012 0.0249 0.0152 0.0157 0.0075 2.8705 0 1.5306 2.5493 0.1479 0.0059 2.8046 0.1185 0.0167 NaN NaN 251.4536 329.6406 325.0672 902.4576 0.08 0.0583 0.0326 0.6964 0.4031 0.0416 0.1041 0.3846 0.0151 0.1288 0.2268 0.1288 0.3677 0.1175 0.1261 0 0 0 5.7247 0.2682 3.8541 6.1797 0.0546 2.568 0 4.6067 16.0104 0 0 0 0 0 0 0.0243 1.5481 5.9453 0.2777 3.16 8.9855 1.5481 2.9844 6.2277 0.0353 3.7663 0 5.6983 24.7959 13.5664 15.4488 0 0.0105 0.0208 0.0327 0.0171 0.0116 0.0428 0.0154 0.0383 0.7786 0.0005 NaN 0.0302 0.0046 58.0575 0.0092 283.6616 0 0.0054 0.0043 0.003 0.0037 0 0 0 0 0 0 0 0.0021 0.0015 0 0 0 0 NaN NaN NaN 0.0221 0.01 0 28.7334 0.0003 1.2356 0.019 0.002 0.1375 0 0 0 0 0 0 0 0 0 0 0 0.019 11.4871 1.1798 4.0782 4.3102 3.7696 2.0627 18.0233 21.6062 0 8.7236 3.0609 5.2231 0 0 2.2943 4.0917 0 50.6425 2.0261 5.2707 1.8268 4.2581 3.7479 3.522 10.3162 29.1663 18.7546 109.5747 14.2503 5.765 0.8972 3.1281 60 70.9161 8.8647 1.2771 0.4264 0.6263 0.8973 0.6301 1.4698 0.3194 0.2748 0 0 0 4.8795 7.5418 10.0984 3.1182 15.079 6.528 0 2.8042 32.3594 0 0 0 0 0 0 3.0301 21.3645 5.4178 9.3327 8.3977 148.0287 31.4674 45.5423 3.1842 13.3923 9.1221 0 2.6727 93.9245 0 434.2674 151.7665 0 190.3869 746.915 74.0741 191.7582 250.1742 34.1573 1.0281 NaN 3.9238 1.5357 10.8251 18.9849 9.0113 0 0 0 0 0 0 0 0 0 0 0 0 240.7767 244.2748 0 0 0 0 NaN NaN NaN 36.9067 2.9626 0 14.5293 0.0751 7.087 12.1831 0.6451 6.4568 0 0 0 0 0 0 0 0 0 0 0 2.1538 2.9667 9.3046 0.1096 0.0078 0.0026 7.116 0.7942 411.136 74.654 0.1832 16.16 0.85 0.0857 7.1619 0.3752 23.0713 3.9306 1.1386 1.5021 0.3718 0.1233 24.7524 267.064 0.9032 1.1 0.6219 0.4122 0.2562 0.4119 68.8489 535.0245 2.0293 11.21 0.1882 4.0923 0.064 2.0952 9.2721 0.0584 0.0484 0.0148 82.8602 0.4958 0.0157 0.0039 3.1745 0.0584 0.0484 0.0148 82.8602\n2988.72 2479.9 2199.0333 909.7926 1.3204 100 104.2367 0.1217 1.4882 -0.0124 -0.0033 0.9629 201.8482 0 9.6052 422.2894 9.6924 0.9687 192.1557 12.4782 1.4011 -5468.25 2648.25 -4515 -1657.25 1.3137 2.0038 7.3145 62.9333 2.6444 0.2071 3.3813 84.9105 8.6789 50.51 64.1125 49.49 65.1951 86.6867 117.0442 76.9 1.279 70 363.0273 9.9305 131.8027 733.8778 1.3027 142.5427 1 637.3727 189.9079 0 4.486 4.748 2936 0.9139 0.9447 4.5873 24.3791 361.4582 10.2112 116.1818 13.5597 15.6209 23.4736 710.4043 0.9761 147.6545 1 625.2945 70.2289 160.321 464.9735 0 -0.0555 -0.0461 -0.04 0.04 0.0676 -0.1051 0.0028 0.0277 7.5925 0.1302 NaN 2.4004 0.9904 1752.0968 0.1958 8205.7 0.0697 -0.0003 -0.0021 -0.0001 0.0002 0.0411 0 0.0177 -0.0195 -0.0002 0 -0.0699 -0.0059 0.0003 0.0003 0.0021 -0.0483 -0.118 NaN NaN NaN 0.4647 0.9564 0 709.0867 0.9906 58.6635 0.6016 0.9761 6.4935 15.55 3.132 15.61 15.59 1.366 2.48 0.5176 3.119 0.2838 0.7244 0.9961 2.3802 980.451 41.1025 127 118 123.7 47.8 162.432 0.1915 0 5.51 0.003 0.114 0.0393 0.0613 0.019 13.2651 0 9.073 15.241 1.3029 0.015 11.9738 0.35 0.0699 NaN NaN 859 355 3433 3004 0.068 0.108 0.1 1.7 0.9 0.086 0.241 0.9386 0.0356 0.2618 0.4391 0.2618 0.8567 0.2452 0.39 0 0 16.22 0.693 14.67 22.562 0.1786 5.69 0 18.2 52.571 0 0 0 0 0 0 0.139 5.92 23.6 1.264 10.63 13.56 5.92 11.382 24.32 0.3458 9.56 0 21.97 104.95 0 0.1248 0.0463 0.1223 0.0354 0.0708 0.0754 0.0643 0.0932 5.5398 0.0023 NaN 0.0764 0.0015 152.0885 0.0573 820.3999 0 0.0152 0.0149 0 0 0 0 0 0 0 0 0 0.0067 0.004 0 0 0 0 NaN NaN NaN 0.0191 0.0234 0 94.0954 0.001 3.2119 0.0406 0.0072 0.4212 0 0 0 0 0 0 0 0 0 0 0 0.0513 31.83 3.1959 33.896 37.8477 44.3906 16.9347 50.3631 0.0581 0 2.1775 0.0007 0.0417 0.0115 0.0172 0.0063 4.2154 0 2.896 4.0526 0.3882 0.0049 3.9403 0.0916 0.0245 NaN NaN 415.5048 157.0889 1572.6896 1377.4276 0.0285 0.0445 0.0465 0.6305 0.3046 0.0286 0.0824 0.3483 0.0128 0.1004 0.1701 0.1004 0.3465 0.0973 0.1675 0 0 0 5.444 0.2004 4.19 6.3329 0.0479 1.7339 0 4.966 15.7375 0 0 0 0 0 0 0.0243 1.7317 6.6262 0.3512 3.2699 9.402 1.7317 3.0672 6.6839 0.0928 3.0229 0 6.3292 29.0339 8.4026 4.8851 0 0.0407 0.0198 0.0531 0.0167 0.0224 0.0422 0.0273 0.0484 1.8222 0.0006 NaN 0.0252 0.0004 45.7058 0.0188 309.8492 0 0.0046 0.0049 0.0028 0.0034 0 0 0 0 0 0 0 0.0024 0.0014 0 0 0 0 NaN NaN NaN 0.0038 0.0068 0 32.4228 0.0003 1.1135 0.0132 0.0023 0.1348 0 0 0 0 0 0 0 0 0 0 0 0.0155 13.3972 1.1907 5.6363 3.9482 4.9881 2.1737 17.8537 14.5054 0 5.286 2.4643 7.6602 317.7362 0 1.9689 6.5718 0 94.4594 3.6091 13.442 1.5441 6.2313 2.8049 4.9898 15.7089 13.4051 76.0354 181.2641 5.176 5.3899 1.3671 2.7013 34.0336 41.5236 7.1274 1.1054 0.4097 0.5183 0.6849 0.529 1.3141 0.2829 0.3332 0 0 0 4.468 6.9785 11.1303 3.0744 13.7105 3.9918 0 2.8555 27.6824 0 0 0 0 0 0 3.0301 24.2831 6.5291 12.3786 9.1494 100.0021 37.8979 48.4887 3.4234 35.4323 6.4746 0 3.5135 149.4399 0 225.0169 100.4883 305.75 88.5553 104.666 71.7583 0 336.766 72.9635 1.767 NaN 3.1817 0.1488 8.6804 29.2542 9.9979 0 0 711.6418 0 0 0 0 0 0 0 0 0 113.5593 0 0 0 0 0 NaN NaN NaN 4.12 2.4416 0 13.2699 0.0977 5.4751 6.7553 0.7404 6.4865 0 0 0 0 0 0 0 0 0 0 0 2.1565 3.2465 7.7754 0.1096 0.0078 0.0026 7.116 1.165 372.822 72.442 1.8804 131.68 39.33 0.6812 56.9303 17.4781 161.4081 35.3198 54.2917 1.1613 0.7288 0.271 62.7572 268.228 0.6511 7.32 0.163 3.5611 0.067 2.729 25.0363 530.5682 2.0253 9.33 0.1738 2.8971 0.0525 1.7585 8.5831 0.0202 0.0149 0.0044 73.8432 0.499 0.0103 0.0025 2.0544 0.0202 0.0149 0.0044 73.8432\n3032.24 2502.87 2233.3667 1326.52 1.5334 100 100.3967 0.1235 1.5031 -0.0031 -0.0072 0.9569 201.9424 0 10.5661 420.5925 10.3387 0.9735 191.6037 12.4735 1.3888 -5476.25 2635.25 -3987.5 117 1.2887 1.9912 7.2748 62.8333 3.1556 0.2696 3.2728 86.3269 8.7677 50.248 64.1511 49.752 66.1542 86.1468 121.4364 76.39 2.209 70 353.34 10.4091 176.3136 789.7523 1.0341 138.0882 1 667.7418 233.5491 0 4.624 4.894 2865 0.9298 0.9449 4.6414 -12.2945 355.0809 9.7948 144.0191 21.9782 32.2945 44.1498 745.6025 0.9256 146.6636 1 645.7636 65.8417 NaN NaN 0 -0.0534 0.0183 -0.0167 -0.0449 0.0034 -0.0178 -0.0123 -0.0048 7.5017 0.1342 NaN 2.453 0.9902 1828.3846 0.1829 9014.46 0.0448 -0.0077 -0.0001 -0.0001 -0.0001 0.2189 0 -0.6704 -0.0167 0.0004 -0.0003 0.0696 -0.0045 0.0002 0.0078 0 -0.0799 -0.2038 NaN NaN NaN NaN 0.9424 0 796.595 0.9908 58.3858 0.5913 0.9628 6.3551 15.75 3.148 15.73 15.71 0.946 3.027 0.5328 3.299 -0.5677 0.778 1.001 2.3715 993.1274 38.1448 119 143.2 123.1 48.8 296.303 0.3744 0 3.64 0.0041 0.0634 0.0451 0.0623 0.024 14.2354 0 9.005 12.506 0.4434 0.0126 13.9047 0.43 0.0538 NaN NaN 699 283 1747 1443 0.147 0.04 0.113 3.9 0.8 0.101 0.499 0.576 0.0631 0.3053 0.583 0.3053 0.8285 0.1308 0.922 0 0 15.24 0.282 10.85 37.715 0.1189 3.98 0 25.54 72.149 0 0 0 0 0 0 0.25 5.52 15.76 0.519 10.71 19.77 5.52 8.446 33.832 0.3951 9.09 0 19.77 92.307 0 0.0915 0.0506 0.0769 0.1079 0.0797 0.1047 0.0924 0.1015 4.1338 0.003 NaN 0.0802 0.0004 69.151 0.197 1406.4004 0 0.0227 0.0272 0 0 0 0 0 0 0 0 0 0.0067 0.0031 0 0 0 0 NaN NaN NaN NaN 0.024 0 149.2172 0.0006 2.5775 0.0177 0.0214 0.4051 0 0 0 0 0 0 0 0 0 0 0 0.0488 19.862 3.6163 34.125 55.9626 53.0876 17.4864 88.7672 0.1092 0 1.0929 0.0013 0.0257 0.0116 0.0163 0.008 4.4239 0 3.2376 3.6536 0.1293 0.004 4.3474 0.1275 0.0181 NaN NaN 319.1252 128.0296 799.5884 628.3083 0.0755 0.0181 0.0476 1.35 0.2698 0.032 0.1541 0.2155 0.031 0.1354 0.2194 0.1354 0.3072 0.0582 0.3574 0 0 0 4.8956 0.0766 2.913 11.0583 0.0327 1.1229 0 7.3296 23.116 0 0 0 0 0 0 0.0822 1.6216 4.7279 0.1773 3.155 9.7777 1.6216 2.5923 10.5352 0.1301 3.0939 0 6.3767 32.0537 NaN NaN 0 0.0246 0.0221 0.0329 0.0522 0.0256 0.0545 0.0476 0.0463 1.553 0.001 NaN 0.0286 0.0001 21.0312 0.0573 494.7368 0 0.0063 0.0077 0.0052 0.0027 0 0 0 0 0 0 0 0.0025 0.0012 0 0 0 0 NaN NaN NaN NaN 0.0089 0 57.2692 0.0002 0.8495 0.0065 0.0077 0.1356 0 0 0 0 0 0 0 0 0 0 0 0.0165 7.1493 1.1704 5.3823 4.7226 4.9184 2.185 22.3369 24.4142 0 3.6256 3.3208 4.2178 0 866.0295 2.5046 7.0492 0 85.2255 2.9734 4.2892 1.2943 7.257 3.4473 3.8754 12.7642 10.739 43.8119 0 11.4064 2.0088 1.5533 6.2069 25.3521 37.4691 15.247 0.6672 0.7198 0.6076 0.9088 0.6136 1.2524 0.1518 0.7592 0 0 0 4.3131 2.7092 6.1538 4.7756 11.4945 2.8822 0 3.8248 30.8924 0 0 0 0 0 0 5.3863 44.898 4.4384 5.2987 7.4365 89.9529 17.0927 19.1303 4.5375 42.6838 6.1979 0 3.0615 140.1953 0 171.4486 276.881 461.8619 240.1781 0 587.3773 748.1781 0 55.1057 2.2358 NaN 3.2712 0.0372 3.7821 107.6905 15.6016 0 293.1396 0 0 0 0 0 0 0 0 0 0 148.0663 0 0 0 0 0 NaN NaN NaN NaN 2.5512 0 18.7319 0.0616 4.4146 2.9954 2.2181 6.3745 0 0 0 0 0 0 0 0 0 0 0 2.0579 1.9999 9.4805 0.1096 0.0078 0.0026 7.116 1.4636 399.914 79.156 1.0388 19.63 1.98 0.4287 9.7608 0.8311 70.9706 4.9086 2.5014 0.9778 0.2156 0.0461 22.05 NaN NaN NaN NaN NaN NaN NaN NaN 532.0155 2.0275 8.83 0.2224 3.1776 0.0706 1.6597 10.9698 NaN NaN NaN NaN 0.48 0.4766 0.1045 99.3032 0.0202 0.0149 0.0044 73.8432   \u51c6\u5907\u6570\u636e\uff1a\u5c06value\u4e3aNaN\u7684\u6c42\u5747\u503c   def   replaceNanWithMean (): \n     datMat   =   loadDataSet ( input/13.PCA/secom.data ,     ) \n     numFeat   =   shape ( datMat )[ 1 ] \n     for   i   in   range ( numFeat ): \n         # \u5bf9value\u4e0d\u4e3aNaN\u7684\u6c42\u5747\u503c \n         # .A \u8fd4\u56de\u77e9\u9635\u57fa\u4e8e\u7684\u6570\u7ec4 \n         meanVal   =   mean ( datMat [ nonzero ( ~ isnan ( datMat [:,   i ] . A ))[ 0 ],   i ]) \n         # \u5c06value\u4e3aNaN\u7684\u503c\u8d4b\u503c\u4e3a\u5747\u503c \n         datMat [ nonzero ( isnan ( datMat [:,   i ] . A ))[ 0 ], i ]   =   meanVal \n     return   datMat    \u5206\u6790\u6570\u636e\uff1a\u7edf\u8ba1\u5206\u6790 N \u7684\u9608\u503c     PCA \u6570\u636e\u964d\u7ef4   \u5728\u7b49\u5f0f Av=\u5165v \u4e2d\uff0cv \u662f\u7279\u5f81\u5411\u91cf\uff0c \u5165\u662f\u7279\u5f81\u503c\u3002 \n\u8868\u793a \u5982\u679c\u7279\u5f81\u5411\u91cf v \u88ab\u67d0\u4e2a\u77e9\u9635 A \u5de6\u4e58\uff0c\u90a3\u4e48\u5b83\u5c31\u7b49\u4e8e\u67d0\u4e2a\u6807\u91cf \u5165 \u4e58\u4ee5 v. \n\u5e78\u8fd0\u7684\u662f\uff1a Numpy \u4e2d\u6709\u5bfb\u627e\u7279\u5f81\u5411\u91cf\u548c\u7279\u5f81\u503c\u7684\u6a21\u5757 linalg\uff0c\u5b83\u6709 eig() \u65b9\u6cd5\uff0c\u8be5\u65b9\u6cd5\u7528\u4e8e\u6c42\u89e3\u7279\u5f81\u5411\u91cf\u548c\u7279\u5f81\u503c\u3002  def   pca ( dataMat ,   topNfeat = 9999999 ): \n     pca      Args:          dataMat   \u539f\u6570\u636e\u96c6\u77e9\u9635          topNfeat  \u5e94\u7528\u7684N\u4e2a\u7279\u5f81      Returns:          lowDDataMat  \u964d\u7ef4\u540e\u6570\u636e\u96c6          reconMat     \u65b0\u7684\u6570\u636e\u96c6\u7a7a\u95f4       \n\n     # \u8ba1\u7b97\u6bcf\u4e00\u5217\u7684\u5747\u503c \n     meanVals   =   mean ( dataMat ,   axis = 0 ) \n     # print  meanVals , meanVals \n\n     # \u6bcf\u4e2a\u5411\u91cf\u540c\u65f6\u90fd\u51cf\u53bb \u5747\u503c \n     meanRemoved   =   dataMat   -   meanVals \n     # print  meanRemoved= , meanRemoved \n\n     # cov\u534f\u65b9\u5dee=[(x1-x\u5747\u503c)*(y1-y\u5747\u503c)+(x2-x\u5747\u503c)*(y2-y\u5747\u503c)+...+(xn-x\u5747\u503c)*(yn-y\u5747\u503c)+]/(n-1) \n          \u65b9\u5dee\uff1a\uff08\u4e00\u7ef4\uff09\u5ea6\u91cf\u4e24\u4e2a\u968f\u673a\u53d8\u91cf\u5173\u7cfb\u7684\u7edf\u8ba1\u91cf      \u534f\u65b9\u5dee\uff1a \uff08\u4e8c\u7ef4\uff09\u5ea6\u91cf\u5404\u4e2a\u7ef4\u5ea6\u504f\u79bb\u5176\u5747\u503c\u7684\u7a0b\u5ea6      \u534f\u65b9\u5dee\u77e9\u9635\uff1a\uff08\u591a\u7ef4\uff09\u5ea6\u91cf\u5404\u4e2a\u7ef4\u5ea6\u504f\u79bb\u5176\u5747\u503c\u7684\u7a0b\u5ea6      \u5f53\u00a0cov(X, Y) 0\u65f6\uff0c\u8868\u660eX\u4e0eY\u6b63\u76f8\u5173\uff1b(X\u8d8a\u5927\uff0cY\u4e5f\u8d8a\u5927\uff1bX\u8d8a\u5c0fY\uff0c\u4e5f\u8d8a\u5c0f\u3002\u8fd9\u79cd\u60c5\u51b5\uff0c\u6211\u4eec\u79f0\u4e3a\u201c\u6b63\u76f8\u5173\u201d\u3002)      \u5f53\u00a0cov(X, Y) 0\u65f6\uff0c\u8868\u660eX\u4e0eY\u8d1f\u76f8\u5173\uff1b      \u5f53\u00a0cov(X, Y)=0\u65f6\uff0c\u8868\u660eX\u4e0eY\u4e0d\u76f8\u5173\u3002       \n     covMat   =   cov ( meanRemoved ,   rowvar = 0 ) \n\n     # eigVals\u4e3a\u7279\u5f81\u503c\uff0c eigVects\u4e3a\u7279\u5f81\u5411\u91cf \n     eigVals ,   eigVects   =   linalg . eig ( mat ( covMat )) \n     # print  eigVals= , eigVals \n     # print  eigVects= , eigVects \n     # \u5bf9\u7279\u5f81\u503c\uff0c\u8fdb\u884c\u4ece\u5c0f\u5230\u5927\u7684\u6392\u5e8f\uff0c\u8fd4\u56de\u4ece\u5c0f\u5230\u5927\u7684index\u5e8f\u53f7 \n     # \u7279\u5f81\u503c\u7684\u9006\u5e8f\u5c31\u53ef\u4ee5\u5f97\u5230topNfeat\u4e2a\u6700\u5927\u7684\u7279\u5f81\u5411\u91cf \n            x = np.array([3, 1, 2])        np.argsort(x)      array([1, 2, 0])  # index,1 = 1; index,2 = 2; index,0 = 3        y = np.argsort(x)        y[::-1]      array([0, 2, 1])        y[:-3:-1]      array([0, 2])  # \u53d6\u51fa -1, -2        y[:-6:-1]      array([0, 2, 1])       \n     eigValInd   =   argsort ( eigVals ) \n     # print  eigValInd1= , eigValInd \n\n     # -1\u8868\u793a\u5012\u5e8f\uff0c\u8fd4\u56detopN\u7684\u7279\u5f81\u503c[-1 \u5230 -(topNfeat+1) \u4f46\u662f\u4e0d\u5305\u62ec-(topNfeat+1)\u672c\u8eab\u7684\u5012\u53d9] \n     eigValInd   =   eigValInd [: - ( topNfeat + 1 ): - 1 ] \n     # print  eigValInd2= , eigValInd \n     # \u91cd\u7ec4 eigVects \u6700\u5927\u5230\u6700\u5c0f \n     redEigVects   =   eigVects [:,   eigValInd ] \n     # print  redEigVects= , redEigVects.T \n     # \u5c06\u6570\u636e\u8f6c\u6362\u5230\u65b0\u7a7a\u95f4 \n     # --- (1567, 590) (590, 20) \n     # print  --- , shape(meanRemoved), shape(redEigVects) \n     lowDDataMat   =   meanRemoved   *   redEigVects \n     reconMat   =   ( lowDDataMat   *   redEigVects . T )   +   meanVals \n     # print  lowDDataMat= , lowDDataMat \n     # print  reconMat= , reconMat \n     return   lowDDataMat ,   reconMat   \u5b8c\u6574\u4ee3\u7801\u5730\u5740 :  https://github.com/apachecn/MachineLearning/blob/master/src/python/13.PCA/pca.py", 
            "title": "\u5f00\u53d1\u6d41\u7a0b"
        }, 
        {
            "location": "/\u4e66\u7c4d/\u673a\u5668\u5b66\u4e60\u5b9e\u6218/13.\u5229\u7528PCA\u6765\u7b80\u5316\u6570\u636e/#_5", 
            "text": "\u964d\u7ef4\u6280\u672f\u4f7f\u5f97\u6570\u636e\u53d8\u7684\u66f4\u6613\u4f7f\u7528\uff0c\u5e76\u4e14\u5b83\u4eec\u5f80\u5f80\u80fd\u591f\u53bb\u9664\u6570\u636e\u4e2d\u7684\u566a\u97f3\uff0c\u4f7f\u5f97\u5176\u4ed6\u673a\u5668\u5b66\u4e60\u4efb\u52a1\u66f4\u52a0\u7cbe\u786e\u3002\n\u964d\u7ef4\u5f80\u5f80\u4f5c\u4e3a\u9884\u5904\u7406\u6b65\u9aa4\uff0c\u5728\u6570\u636e\u5e94\u7528\u5230\u5176\u4ed6\u7b97\u6cd5\u4e4b\u524d\u6e05\u6d17\u6570\u636e\u3002\n\u6bd4\u8f83\u6d41\u884c\u7684\u964d\u7ef4\u6280\u672f\uff1a \u72ec\u7acb\u6210\u5206\u5206\u6790\u3001\u56e0\u5b50\u5206\u6790 \u548c \u4e3b\u6210\u5206\u5206\u6790\uff0c \u5176\u4e2d\u53c8\u4ee5\u4e3b\u6210\u5206\u5206\u6790\u5e94\u7528\u6700\u5e7f\u6cdb\u3002\n\n\u672c\u7ae0\u4e2d\u7684PCA\u5c06\u6240\u6709\u7684\u6570\u636e\u96c6\u90fd\u8c03\u5165\u4e86\u5185\u5b58\uff0c\u5982\u679c\u65e0\u6cd5\u505a\u5230\uff0c\u5c31\u9700\u8981\u5176\u4ed6\u7684\u65b9\u6cd5\u6765\u5bfb\u627e\u5176\u7279\u5f81\u503c\u3002\n\u5982\u679c\u4f7f\u7528\u5728\u7ebfPCA\u5206\u6790\u7684\u65b9\u6cd5\uff0c\u4f60\u53ef\u4ee5\u53c2\u8003\u4e00\u7bc7\u4f18\u79c0\u7684\u8bba\u6587  Incremental Eigenanalysis for Classification \u3002 \n\u4e0b\u4e00\u7ae0\u8981\u8ba8\u8bba\u7684\u5947\u5f02\u503c\u5206\u89e3\u65b9\u6cd5\u4e5f\u53ef\u4ee5\u7528\u4e8e\u7279\u5f81\u503c\u5206\u6790\u3002    \u4f5c\u8005\uff1a \u7247\u523b   1988  GitHub\u5730\u5740 :  https://github.com/apachecn/MachineLearning  \u7248\u6743\u58f0\u660e\uff1a\u6b22\u8fce\u8f6c\u8f7d\u5b66\u4e60 =  \u8bf7\u6807\u6ce8\u4fe1\u606f\u6765\u6e90\u4e8e  ApacheCN", 
            "title": "\u8981\u70b9\u8865\u5145"
        }, 
        {
            "location": "/\u4e66\u7c4d/\u673a\u5668\u5b66\u4e60\u5b9e\u6218/14.\u5229\u7528SVD\u7b80\u5316\u6570\u636e/", 
            "text": "\u7b2c14\u7ae0 \u5229\u7528SVD\u7b80\u5316\u6570\u636e\n\n\n\n\nSVD \u6982\u8ff0\n\n\n\u5947\u5f02\u503c\u5206\u89e3\uff08SVD, Singular Value Decomposition\uff09:\n    \u63d0\u53d6\u4fe1\u606f\u7684\u4e00\u79cd\u65b9\u6cd5\uff0c\u53ef\u4ee5\u628a SVD \u770b\u6210\u662f\u4ece\u566a\u58f0\u6570\u636e\u4e2d\u62bd\u53d6\u76f8\u5173\u7279\u5f81\u3002\u4ece\u751f\u7269\u4fe1\u606f\u5b66\u5230\u91d1\u878d\u5b66\uff0cSVD \u662f\u63d0\u53d6\u4fe1\u606f\u7684\u5f3a\u5927\u5de5\u5177\u3002\n\n\n\n\nSVD \u573a\u666f\n\n\n\n\n\u4fe1\u606f\u68c0\u7d22-\u9690\u6027\u8bed\u4e49\u68c0\u7d22\uff08Lstent Semantic Indexing, LSI\uff09\u6216 \u9690\u5f62\u8bed\u4e49\u5206\u6790\uff08Latent Semantic Analysis, LSA\uff09\n\n\n\n\n\u9690\u6027\u8bed\u4e49\u7d22\u5f15\uff1a\u77e9\u9635 = \u6587\u6863 + \u8bcd\u8bed\n* \u662f\u6700\u65e9\u7684 SVD \u5e94\u7528\u4e4b\u4e00\uff0c\u6211\u4eec\u79f0\u5229\u7528 SVD \u7684\u65b9\u6cd5\u4e3a\u9690\u6027\u8bed\u4e49\u7d22\u5f15\uff08LSI\uff09\u6216\u9690\u6027\u8bed\u4e49\u5206\u6790\uff08LSA\uff09\u3002\n\n\n\n\n\n\n\u63a8\u8350\u7cfb\u7edf\n\n\n\n\n\n\n\u5229\u7528 SVD \u4ece\u6570\u636e\u4e2d\u6784\u5efa\u4e00\u4e2a\u4e3b\u9898\u7a7a\u95f4\u3002\n\n\n\u518d\u5728\u8be5\u7a7a\u95f4\u4e0b\u8ba1\u7b97\u5176\u76f8\u4f3c\u5ea6\u3002(\u4ece\u9ad8\u7ef4-\u4f4e\u7ef4\u7a7a\u95f4\u7684\u8f6c\u5316\uff0c\u5728\u4f4e\u7ef4\u7a7a\u95f4\u6765\u8ba1\u7b97\u76f8\u4f3c\u5ea6\uff0cSVD \u63d0\u5347\u4e86\u63a8\u8350\u7cfb\u7edf\u7684\u6548\u7387\u3002)\n\n\n\n\n\n\n\n\n\u4e0a\u56fe\u53f3\u8fb9\u6807\u6ce8\u7684\u4e3a\u4e00\u7ec4\u5171\u540c\u7279\u5f81\uff0c\u8868\u793a\u7f8e\u5f0f BBQ \u7a7a\u95f4\uff1b\u53e6\u4e00\u7ec4\u5728\u4e0a\u56fe\u53f3\u8fb9\u672a\u6807\u6ce8\u7684\u4e3a\u65e5\u5f0f\u98df\u54c1 \u7a7a\u95f4\u3002\n\n\n\n\n\n\n\u56fe\u50cf\u538b\u7f29\n\n\n\n\n\u4f8b\u5982\uff1a\n32*32=1024 =\n 32*2+2*1+32*2=130\n(2*1\u8868\u793a\u53bb\u6389\u4e86\u9664\u5bf9\u89d2\u7ebf\u76840), \u51e0\u4e4e\u83b7\u5f97\u4e8610\u500d\u7684\u538b\u7f29\u6bd4\u3002\n\n\n\n\nSVD \u539f\u7406\n\n\nSVD \u5de5\u4f5c\u539f\u7406\n\n\n\n\n\u77e9\u9635\u5206\u89e3\n\n\n\n\n\n\n\u77e9\u9635\u5206\u89e3\u662f\u5c06\u6570\u636e\u77e9\u9635\u5206\u89e3\u4e3a\u591a\u4e2a\u72ec\u7acb\u90e8\u5206\u7684\u8fc7\u7a0b\u3002\n\n\n\u77e9\u9635\u5206\u89e3\u53ef\u4ee5\u5c06\u539f\u59cb\u77e9\u9635\u8868\u793a\u6210\u65b0\u7684\u6613\u4e8e\u5904\u7406\u7684\u5f62\u5f0f\uff0c\u8fd9\u79cd\u65b0\u5f62\u5f0f\u662f\u4e24\u4e2a\u6216\u591a\u4e2a\u77e9\u9635\u7684\u4e58\u79ef\u3002\uff08\u7c7b\u4f3c\u4ee3\u6570\u4e2d\u7684\u56e0\u6570\u5206\u89e3\uff09\n\n\n\u4e3e\u4f8b\uff1a\u5982\u4f55\u5c0612\u5206\u89e3\u6210\u4e24\u4e2a\u6570\u7684\u4e58\u79ef\uff1f\uff081\uff0c12\uff09\u3001\uff082\uff0c6\uff09\u3001\uff083\uff0c4\uff09\u90fd\u662f\u5408\u7406\u7684\u7b54\u6848\u3002\n\n\n\n\n\n\nSVD \u662f\u77e9\u9635\u5206\u89e3\u7684\u4e00\u79cd\u7c7b\u578b\uff0c\u4e5f\u662f\u77e9\u9635\u5206\u89e3\u6700\u5e38\u89c1\u7684\u6280\u672f\n\n\n\n\n\n\nSVD \u5c06\u539f\u59cb\u7684\u6570\u636e\u96c6\u77e9\u9635 Data \u5206\u89e3\u6210\u4e09\u4e2a\u77e9\u9635 U\u3001\u2211\u3001V\n\n\n\u4e3e\u4f8b\uff1a\u5982\u679c\u539f\u59cb\u77e9\u9635 \\(Data_{m*n}\\) \u662fm\u884cn\u5217\uff0c\n\n\n\\(U_{m*n}\\) \u8868\u793am\u884cn\u5217\n\n\n\\(\u2211_{m*k}\\) \u8868\u793am\u884ck\u5217\n\n\n\\(V_{k*n}\\) \u8868\u793ak\u884cn\u5217\u3002\n\n\n\n\n\n\n\n\n\\(Data_{m*n} = U_{m*k} * \u2211\n{k*k} * V\n{k*n}\\)\n\n\n\n\n\u5177\u4f53\u7684\u6848\u4f8b\uff1a\uff08\u5927\u5bb6\u53ef\u4ee5\u8bd5\u7740\u63a8\u5bfc\u4e00\u4e0b\uff1a\nhttps://wenku.baidu.com/view/b7641217866fb84ae45c8d17.html\n \uff09\n\n\n\n\n\n\n\u4e0a\u8ff0\u5206\u89e3\u4e2d\u4f1a\u6784\u5efa\u51fa\u4e00\u4e2a\u77e9\u9635\u2211\uff0c\u8be5\u77e9\u9635\u53ea\u6709\u5bf9\u89d2\u5143\u7d20\uff0c\u5176\u4ed6\u5143\u7d20\u5747\u4e3a0(\u8fd1\u4f3c\u4e8e0)\u3002\u53e6\u4e00\u4e2a\u60ef\u4f8b\u5c31\u662f\uff0c\u2211\u7684\u5bf9\u89d2\u5143\u7d20\u662f\u4ece\u5927\u5230\u5c0f\u6392\u5217\u7684\u3002\u8fd9\u4e9b\u5bf9\u89d2\u5143\u7d20\u79f0\u4e3a\u5947\u5f02\u503c\u3002\n\n\n\u5947\u5f02\u503c\u4e0e\u7279\u5f81\u503c(PCA \u6570\u636e\u4e2d\u91cd\u8981\u7279\u5f81)\u662f\u6709\u5173\u7cfb\u7684\u3002\u8fd9\u91cc\u7684\u5947\u5f02\u503c\u5c31\u662f\u77e9\u9635 \\(Data * Data^T\\) \u7279\u5f81\u503c\u7684\u5e73\u65b9\u6839\u3002\n\n\n\u666e\u904d\u7684\u4e8b\u5b9e\uff1a\u5728\u67d0\u4e2a\u5947\u5f02\u503c\u7684\u6570\u76ee(r \u4e2a=\n\u5947\u5f02\u503c\u7684\u5e73\u65b9\u548c\u7d2f\u52a0\u5230\u603b\u503c\u768490%\u4ee5\u4e0a)\u4e4b\u540e\uff0c\u5176\u4ed6\u7684\u5947\u5f02\u503c\u90fd\u7f6e\u4e3a0(\u8fd1\u4f3c\u4e8e0)\u3002\u8fd9\u610f\u5473\u7740\u6570\u636e\u96c6\u4e2d\u4ec5\u6709 r \u4e2a\u91cd\u8981\u7279\u5f81\uff0c\u800c\u5176\u4f59\u7279\u5f81\u5219\u90fd\u662f\u566a\u58f0\u6216\u5197\u4f59\u7279\u5f81\u3002\n\n\n\n\nSVD \u7b97\u6cd5\u7279\u70b9\n\n\n\u4f18\u70b9\uff1a\u7b80\u5316\u6570\u636e\uff0c\u53bb\u9664\u566a\u58f0\uff0c\u4f18\u5316\u7b97\u6cd5\u7684\u7ed3\u679c\n\u7f3a\u70b9\uff1a\u6570\u636e\u7684\u8f6c\u6362\u53ef\u80fd\u96be\u4ee5\u7406\u89e3\n\u4f7f\u7528\u7684\u6570\u636e\u7c7b\u578b\uff1a\u6570\u503c\u578b\u6570\u636e\n\n\n\n\n\u63a8\u8350\u7cfb\u7edf\n\n\n\u63a8\u8350\u7cfb\u7edf \u6982\u8ff0\n\n\n\u63a8\u8350\u7cfb\u7edf\u662f\u5229\u7528\u7535\u5b50\u5546\u52a1\u7f51\u7ad9\u5411\u5ba2\u6237\u63d0\u4f9b\u5546\u54c1\u4fe1\u606f\u548c\u5efa\u8bae\uff0c\u5e2e\u52a9\u7528\u6237\u51b3\u5b9a\u5e94\u8be5\u8d2d\u4e70\u4ec0\u4e48\u4ea7\u54c1\uff0c\u6a21\u62df\u9500\u552e\u4eba\u5458\u5e2e\u52a9\u5ba2\u6237\u5b8c\u6210\u8d2d\u4e70\u8fc7\u7a0b\u3002\n\n\n\u63a8\u8350\u7cfb\u7edf \u573a\u666f\n\n\n\n\nAmazon \u4f1a\u6839\u636e\u987e\u5ba2\u7684\u8d2d\u4e70\u5386\u53f2\u5411\u4ed6\u4eec\u63a8\u8350\u7269\u54c1\n\n\nNetflix \u4f1a\u5411\u5176\u7528\u6237\u63a8\u8350\u7535\u5f71\n\n\n\u65b0\u95fb\u7f51\u7ad9\u4f1a\u5bf9\u7528\u6237\u63a8\u8350\u65b0\u95fb\u9891\u9053\n\n\n\n\n\u63a8\u8350\u7cfb\u7edf \u8981\u70b9\n\n\n\n\n\u57fa\u4e8e\u534f\u540c\u8fc7\u6ee4(collaborative filtering) \u7684\u63a8\u8350\u5f15\u64ce\n\n\n\n\n\n\n\u5229\u7528Python \u5b9e\u73b0 SVD(Numpy \u6709\u4e00\u4e2a\u79f0\u4e3a linalg \u7684\u7ebf\u6027\u4ee3\u6570\u5de5\u5177\u7bb1)\n\n\n\u534f\u540c\u8fc7\u6ee4\uff1a\u662f\u901a\u8fc7\u5c06\u7528\u6237\u548c\u5176\u4ed6\u7528\u6237\u7684\u6570\u636e\u8fdb\u884c\u5bf9\u6bd4\u6765\u5b9e\u73b0\u63a8\u8350\u7684\u3002\n\n\n\u5f53\u77e5\u9053\u4e86\u4e24\u4e2a\u7528\u6237\u6216\u4e24\u4e2a\u7269\u54c1\u4e4b\u95f4\u7684\u76f8\u4f3c\u5ea6\uff0c\u6211\u4eec\u5c31\u53ef\u4ee5\u5229\u7528\u5df2\u6709\u7684\u6570\u636e\u6765\u9884\u6d4b\u672a\u77e5\u7528\u6237\u7684\u559c\u597d\u3002\n\n\n\n\n\n\n\u57fa\u4e8e\u7269\u54c1\u7684\u76f8\u4f3c\u5ea6\u548c\u57fa\u4e8e\u7528\u6237\u7684\u76f8\u4f3c\u5ea6\uff1a\u7269\u54c1\u6bd4\u8f83\u5c11\u5219\u9009\u62e9\u7269\u54c1\u76f8\u4f3c\u5ea6\uff0c\u7528\u6237\u6bd4\u8f83\u5c11\u5219\u9009\u62e9\u7528\u6237\u76f8\u4f3c\u5ea6\u3002\u3010\u77e9\u9635\u8fd8\u662f\u5c0f\u4e00\u70b9\u597d\u8ba1\u7b97\u3011\n\n\n\n\n\n\n\u57fa\u4e8e\u7269\u54c1\u7684\u76f8\u4f3c\u5ea6\uff1a\u8ba1\u7b97\u7269\u54c1\u4e4b\u95f4\u7684\u8ddd\u79bb\u3002\u3010\u8017\u65f6\u4f1a\u968f\u7269\u54c1\u6570\u91cf\u7684\u589e\u52a0\u800c\u589e\u52a0\u3011\n\n\n\u7531\u4e8e\u7269\u54c1A\u548c\u7269\u54c1C \u76f8\u4f3c\u5ea6(\u76f8\u5173\u5ea6)\u5f88\u9ad8\uff0c\u6240\u4ee5\u7ed9\u4e70A\u7684\u4eba\u63a8\u8350C\u3002\n\n\n\n\n\n\n\n\n\u57fa\u4e8e\u7528\u6237\u7684\u76f8\u4f3c\u5ea6\uff1a\u8ba1\u7b97\u7528\u6237\u4e4b\u95f4\u7684\u8ddd\u79bb\u3002\u3010\u8017\u65f6\u4f1a\u968f\u7528\u6237\u6570\u91cf\u7684\u589e\u52a0\u800c\u589e\u52a0\u3011\n\n\n\u7531\u4e8e\u7528\u6237A\u548c\u7528\u6237C \u76f8\u4f3c\u5ea6(\u76f8\u5173\u5ea6)\u5f88\u9ad8\uff0c\u6240\u4ee5A\u548cC\u662f\u5174\u8da3\u76f8\u6295\u7684\u4eba\uff0c\u5bf9\u4e8eC\u4e70\u7684\u7269\u54c1\u5c31\u4f1a\u63a8\u8350\u7ed9A\u3002\n\n\n\n\n\n\n\n\n\u76f8\u4f3c\u5ea6\u8ba1\u7b97\n\n\n\n\n\n\ninA, inB \u5bf9\u5e94\u7684\u662f \u5217\u5411\u91cf\n\n\n\u6b27\u6c0f\u8ddd\u79bb\uff1a\u6307\u5728m\u7ef4\u7a7a\u95f4\u4e2d\u4e24\u4e2a\u70b9\u4e4b\u95f4\u7684\u771f\u5b9e\u8ddd\u79bb\uff0c\u6216\u8005\u5411\u91cf\u7684\u81ea\u7136\u957f\u5ea6\uff08\u5373\u8be5\u70b9\u5230\u539f\u70b9\u7684\u8ddd\u79bb\uff09\u3002\u4e8c\u7ef4\u6216\u4e09\u7ef4\u4e2d\u7684\u6b27\u6c0f\u8ddd\u79bb\u5c31\u662f\u4e24\u70b9\u4e4b\u95f4\u7684\u5b9e\u9645\u8ddd\u79bb\u3002\n\n\n\u76f8\u4f3c\u5ea6= 1/(1+\u6b27\u5f0f\u8ddd\u79bb)\n\n\n\u76f8\u4f3c\u5ea6= 1.0/(1.0 + la.norm(inA - inB))\n\n\n\u7269\u54c1\u5bf9\u8d8a\u76f8\u4f3c\uff0c\u5b83\u4eec\u7684\u76f8\u4f3c\u5ea6\u503c\u5c31\u8d8a\u5927\u3002\n\n\n\n\n\n\n\u76ae\u5c14\u900a\u76f8\u5173\u7cfb\u6570\uff1a\u5ea6\u91cf\u7684\u662f\u4e24\u4e2a\u5411\u91cf\u4e4b\u95f4\u7684\u76f8\u4f3c\u5ea6\u3002\n\n\n\u76f8\u4f3c\u5ea6= 0.5 + 0.5*corrcoef() \u3010\u76ae\u5c14\u900a\u76f8\u5173\u7cfb\u6570\u7684\u53d6\u503c\u8303\u56f4\u4ece -1 \u5230 +1\uff0c\u901a\u8fc7\u51fd\u65700.5 + 0.5*corrcoef()\u8fd9\u4e2a\u51fd\u6570\u8ba1\u7b97\uff0c\u628a\u503c\u5f52\u4e00\u5316\u52300\u52301\u4e4b\u95f4\u3011\n\n\n\u76f8\u4f3c\u5ea6= 0.5 + 0.5 * corrcoef(inA, inB, rowvar = 0)[0][1]\n\n\n\u76f8\u5bf9\u6b27\u6c0f\u8ddd\u79bb\u7684\u4f18\u52bf\uff1a\u5b83\u5bf9\u7528\u6237\u8bc4\u7ea7\u7684\u91cf\u7ea7\u5e76\u4e0d\u654f\u611f\u3002\n\n\n\n\n\n\n\u4f59\u5f26\u76f8\u4f3c\u5ea6\uff1a\u8ba1\u7b97\u7684\u662f\u4e24\u4e2a\u5411\u91cf\u5939\u89d2\u7684\u4f59\u5f26\u503c\u3002\n\n\n\u4f59\u5f26\u503c = (A\u00b7B)/(||A||\u00b7||B||) \u3010\u4f59\u5f26\u503c\u7684\u53d6\u503c\u8303\u56f4\u4e5f\u5728-1\u5230+1\u4e4b\u95f4\u3011\n\n\n\u76f8\u4f3c\u5ea6= 0.5 + 0.5*\u4f59\u5f26\u503c\n\n\n\u76f8\u4f3c\u5ea6= 0.5 + 0.5*( float(inA.T*inB) / la.norm(inA)*la.norm(inB))\n\n\n\u5982\u679c\u5939\u89d2\u4e3a90\u5ea6\uff0c\u5219\u76f8\u4f3c\u5ea6\u4e3a0\uff1b\u5982\u679c\u4e24\u4e2a\u5411\u91cf\u7684\u65b9\u5411\u76f8\u540c\uff0c\u5219\u76f8\u4f3c\u5ea6\u4e3a1.0\u3002\n\n\n\n\n\n\n\n\n\n\n\u63a8\u8350\u7cfb\u7edf\u7684\u8bc4\u4ef7\n\n\n\n\n\n\n\u91c7\u7528\u4ea4\u53c9\u6d4b\u8bd5\u7684\u65b9\u6cd5\u3002\u3010\u62c6\u5206\u6570\u636e\u4e3a\u8bad\u7ec3\u96c6\u548c\u6d4b\u8bd5\u96c6\u3011\n\n\n\u63a8\u8350\u5f15\u64ce\u8bc4\u4ef7\u7684\u6307\u6807\uff1a \u6700\u5c0f\u5747\u65b9\u6839\u8bef\u5dee(Root mean squared error, RMSE)\uff0c\u4e5f\u79f0\u6807\u51c6\u8bef\u5dee(Standard error)\uff0c\u5c31\u662f\u8ba1\u7b97\u5747\u65b9\u8bef\u5dee\u7684\u5e73\u5747\u503c\u7136\u540e\u53d6\u5176\u5e73\u65b9\u6839\u3002\n\n\n\u5982\u679cRMSE=1, \u8868\u793a\u76f8\u5dee1\u4e2a\u661f\u7ea7\uff1b\u5982\u679cRMSE=2.5, \u8868\u793a\u76f8\u5dee2.5\u4e2a\u661f\u7ea7\u3002\n\n\n\n\n\n\n\n\n\u63a8\u8350\u7cfb\u7edf \u539f\u7406\n\n\n\n\n\u63a8\u8350\u7cfb\u7edf\u7684\u5de5\u4f5c\u8fc7\u7a0b\uff1a\u7ed9\u5b9a\u4e00\u4e2a\u7528\u6237\uff0c\u7cfb\u7edf\u4f1a\u4e3a\u6b64\u7528\u6237\u8fd4\u56deN\u4e2a\u6700\u597d\u7684\u63a8\u8350\u83dc\u3002\n\n\n\u5b9e\u73b0\u6d41\u7a0b\u5927\u81f4\u5982\u4e0b\uff1a\n\n\n\u5bfb\u627e\u7528\u6237\u6ca1\u6709\u8bc4\u7ea7\u7684\u83dc\u80b4\uff0c\u5373\u5728\u7528\u6237-\u7269\u54c1\u77e9\u9635\u4e2d\u76840\u503c\u3002\n\n\n\u5728\u7528\u6237\u6ca1\u6709\u8bc4\u7ea7\u7684\u6240\u6709\u7269\u54c1\u4e2d\uff0c\u5bf9\u6bcf\u4e2a\u7269\u54c1\u9884\u8ba1\u4e00\u4e2a\u53ef\u80fd\u7684\u8bc4\u7ea7\u5206\u6570\u3002\u8fd9\u5c31\u662f\u8bf4\uff1a\u6211\u4eec\u8ba4\u4e3a\u7528\u6237\u53ef\u80fd\u4f1a\u5bf9\u7269\u54c1\u7684\u6253\u5206\uff08\u8fd9\u5c31\u662f\u76f8\u4f3c\u5ea6\u8ba1\u7b97\u7684\u521d\u8877\uff09\u3002\n\n\n\u5bf9\u8fd9\u4e9b\u7269\u54c1\u7684\u8bc4\u5206\u4ece\u9ad8\u5230\u4f4e\u8fdb\u884c\u6392\u5e8f\uff0c\u8fd4\u56de\u524dN\u4e2a\u7269\u54c1\u3002\n\n\n\n\n\n\n\n\n\u9879\u76ee\u6848\u4f8b: \u9910\u9986\u83dc\u80b4\u63a8\u8350\u7cfb\u7edf\n\n\n\u9879\u76ee\u6982\u8ff0\n\n\n\u5047\u5982\u4e00\u4e2a\u4eba\u5728\u5bb6\u51b3\u5b9a\u5916\u51fa\u5403\u996d\uff0c\u4f46\u662f\u4ed6\u5e76\u4e0d\u77e5\u9053\u8be5\u5230\u54ea\u513f\u53bb\u5403\u996d\uff0c\u8be5\u70b9\u4ec0\u4e48\u83dc\u3002\u63a8\u8350\u7cfb\u7edf\u53ef\u4ee5\u5e2e\u4ed6\u505a\u5230\u8fd9\u4e24\u70b9\u3002\n\n\n\u5f00\u53d1\u6d41\u7a0b\n\n\n\n\n\u6536\u96c6 \u5e76 \u51c6\u5907\u6570\u636e\n\n\n\n\n\n\ndef\n \nloadExData3\n():\n\n    \n# \u5229\u7528SVD\u63d0\u9ad8\u63a8\u8350\u6548\u679c\uff0c\u83dc\u80b4\u77e9\u9635\n\n    \n\n\n    \u884c\uff1a\u4ee3\u8868\u4eba\n\n\n    \u5217\uff1a\u4ee3\u8868\u83dc\u80b4\u540d\u8bcd\n\n\n    \u503c\uff1a\u4ee3\u8868\u4eba\u5bf9\u83dc\u80b4\u7684\u8bc4\u5206\uff0c0\u8868\u793a\u672a\u8bc4\u5206\n\n\n    \n\n    \nreturn\n[[\n2\n,\n \n0\n,\n \n0\n,\n \n4\n,\n \n4\n,\n \n0\n,\n \n0\n,\n \n0\n,\n \n0\n,\n \n0\n,\n \n0\n],\n\n           \n[\n0\n,\n \n0\n,\n \n0\n,\n \n0\n,\n \n0\n,\n \n0\n,\n \n0\n,\n \n0\n,\n \n0\n,\n \n0\n,\n \n5\n],\n\n           \n[\n0\n,\n \n0\n,\n \n0\n,\n \n0\n,\n \n0\n,\n \n0\n,\n \n0\n,\n \n1\n,\n \n0\n,\n \n4\n,\n \n0\n],\n\n           \n[\n3\n,\n \n3\n,\n \n4\n,\n \n0\n,\n \n3\n,\n \n0\n,\n \n0\n,\n \n2\n,\n \n2\n,\n \n0\n,\n \n0\n],\n\n           \n[\n5\n,\n \n5\n,\n \n5\n,\n \n0\n,\n \n0\n,\n \n0\n,\n \n0\n,\n \n0\n,\n \n0\n,\n \n0\n,\n \n0\n],\n\n           \n[\n0\n,\n \n0\n,\n \n0\n,\n \n0\n,\n \n0\n,\n \n0\n,\n \n5\n,\n \n0\n,\n \n0\n,\n \n5\n,\n \n0\n],\n\n           \n[\n4\n,\n \n0\n,\n \n4\n,\n \n0\n,\n \n0\n,\n \n0\n,\n \n0\n,\n \n0\n,\n \n0\n,\n \n0\n,\n \n5\n],\n\n           \n[\n0\n,\n \n0\n,\n \n0\n,\n \n0\n,\n \n0\n,\n \n4\n,\n \n0\n,\n \n0\n,\n \n0\n,\n \n0\n,\n \n4\n],\n\n           \n[\n0\n,\n \n0\n,\n \n0\n,\n \n0\n,\n \n0\n,\n \n0\n,\n \n5\n,\n \n0\n,\n \n0\n,\n \n5\n,\n \n0\n],\n\n           \n[\n0\n,\n \n0\n,\n \n0\n,\n \n3\n,\n \n0\n,\n \n0\n,\n \n0\n,\n \n0\n,\n \n4\n,\n \n5\n,\n \n0\n],\n\n           \n[\n1\n,\n \n1\n,\n \n2\n,\n \n1\n,\n \n1\n,\n \n2\n,\n \n1\n,\n \n0\n,\n \n4\n,\n \n5\n,\n \n0\n]]\n\n\n\n\n\n\n\n\u5206\u6790\u6570\u636e: \u8fd9\u91cc\u4e0d\u505a\u8fc7\u591a\u7684\u8ba8\u8bba(\u5f53\u7136\u6b64\u5904\u53ef\u4ee5\u5bf9\u6bd4\u4e0d\u540c\u8ddd\u79bb\u4e4b\u95f4\u7684\u5dee\u522b)\n\n\n\u8bad\u7ec3\u7b97\u6cd5: \u901a\u8fc7\u8c03\u7528 recommend() \u51fd\u6570\u8fdb\u884c\u63a8\u8350\n\n\n\n\nrecommend() \u4f1a\u8c03\u7528 \u57fa\u4e8e\u7269\u54c1\u76f8\u4f3c\u5ea6 \u6216\u8005\u662f \u57fa\u4e8eSVD\uff0c\u5f97\u5230\u63a8\u8350\u7684\u7269\u54c1\u8bc4\u5206\u3002\n\n\n\n\n1.\u57fa\u4e8e\u7269\u54c1\u76f8\u4f3c\u5ea6\n\n\n\n\n\n\n\n\n# \u57fa\u4e8e\u7269\u54c1\u76f8\u4f3c\u5ea6\u7684\u63a8\u8350\u5f15\u64ce\n\n\ndef\n \nstandEst\n(\ndataMat\n,\n \nuser\n,\n \nsimMeas\n,\n \nitem\n):\n\n    \nstandEst(\u8ba1\u7b97\u67d0\u7528\u6237\u672a\u8bc4\u5206\u7269\u54c1\u4e2d\uff0c\u4ee5\u5bf9\u8be5\u7269\u54c1\u548c\u5176\u4ed6\u7269\u54c1\u8bc4\u5206\u7684\u7528\u6237\u7684\u7269\u54c1\u76f8\u4f3c\u5ea6\uff0c\u7136\u540e\u8fdb\u884c\u7efc\u5408\u8bc4\u5206)\n\n\n\n    Args:\n\n\n        dataMat         \u8bad\u7ec3\u6570\u636e\u96c6\n\n\n        user            \u7528\u6237\u7f16\u53f7\n\n\n        simMeas         \u76f8\u4f3c\u5ea6\u8ba1\u7b97\u65b9\u6cd5\n\n\n        item            \u672a\u8bc4\u5206\u7684\u7269\u54c1\u7f16\u53f7\n\n\n    Returns:\n\n\n        ratSimTotal/simTotal     \u8bc4\u5206\uff080\uff5e5\u4e4b\u95f4\u7684\u503c\uff09\n\n\n    \n\n    \n# \u5f97\u5230\u6570\u636e\u96c6\u4e2d\u7684\u7269\u54c1\u6570\u76ee\n\n    \nn\n \n=\n \nshape\n(\ndataMat\n)[\n1\n]\n\n    \n# \u521d\u59cb\u5316\u4e24\u4e2a\u8bc4\u5206\u503c\n\n    \nsimTotal\n \n=\n \n0.0\n\n    \nratSimTotal\n \n=\n \n0.0\n\n    \n# \u904d\u5386\u884c\u4e2d\u7684\u6bcf\u4e2a\u7269\u54c1\uff08\u5bf9\u7528\u6237\u8bc4\u8fc7\u5206\u7684\u7269\u54c1\u8fdb\u884c\u904d\u5386\uff0c\u5e76\u5c06\u5b83\u4e0e\u5176\u4ed6\u7269\u54c1\u8fdb\u884c\u6bd4\u8f83\uff09\n\n    \nfor\n \nj\n \nin\n \nrange\n(\nn\n):\n\n        \nuserRating\n \n=\n \ndataMat\n[\nuser\n,\n \nj\n]\n\n        \n# \u5982\u679c\u67d0\u4e2a\u7269\u54c1\u7684\u8bc4\u5206\u503c\u4e3a0\uff0c\u5219\u8df3\u8fc7\u8fd9\u4e2a\u7269\u54c1\n\n        \nif\n \nuserRating\n \n==\n \n0\n:\n\n            \ncontinue\n\n        \n# \u5bfb\u627e\u4e24\u4e2a\u7528\u6237\u90fd\u8bc4\u7ea7\u7684\u7269\u54c1\n\n        \n# \u53d8\u91cf overLap \u7ed9\u51fa\u7684\u662f\u4e24\u4e2a\u7269\u54c1\u5f53\u4e2d\u5df2\u7ecf\u88ab\u8bc4\u5206\u7684\u90a3\u4e2a\u5143\u7d20\u7684\u7d22\u5f15ID\n\n        \n# logical_and \u8ba1\u7b97x1\u548cx2\u5143\u7d20\u7684\u771f\u503c\u3002\n\n        \noverLap\n \n=\n \nnonzero\n(\nlogical_and\n(\ndataMat\n[:,\n \nitem\n]\n.\nA\n \n \n0\n,\n \ndataMat\n[:,\n \nj\n]\n.\nA\n \n \n0\n))[\n0\n]\n\n        \n# \u5982\u679c\u76f8\u4f3c\u5ea6\u4e3a0\uff0c\u5219\u4e24\u7740\u6ca1\u6709\u4efb\u4f55\u91cd\u5408\u5143\u7d20\uff0c\u7ec8\u6b62\u672c\u6b21\u5faa\u73af\n\n        \nif\n \nlen\n(\noverLap\n)\n \n==\n \n0\n:\n\n            \nsimilarity\n \n=\n \n0\n\n        \n# \u5982\u679c\u5b58\u5728\u91cd\u5408\u7684\u7269\u54c1\uff0c\u5219\u57fa\u4e8e\u8fd9\u4e9b\u91cd\u5408\u7269\u91cd\u65b0\u8ba1\u7b97\u76f8\u4f3c\u5ea6\u3002\n\n        \nelse\n:\n\n            \nsimilarity\n \n=\n \nsimMeas\n(\ndataMat\n[\noverLap\n,\n \nitem\n],\n \ndataMat\n[\noverLap\n,\n \nj\n])\n\n        \n# print \nthe %d and %d similarity is : %f\n(iten,j,similarity)\n\n        \n# \u76f8\u4f3c\u5ea6\u4f1a\u4e0d\u65ad\u7d2f\u52a0\uff0c\u6bcf\u6b21\u8ba1\u7b97\u65f6\u8fd8\u8003\u8651\u76f8\u4f3c\u5ea6\u548c\u5f53\u524d\u7528\u6237\u8bc4\u5206\u7684\u4e58\u79ef\n\n        \n# similarity  \u7528\u6237\u76f8\u4f3c\u5ea6\uff0c   userRating \u7528\u6237\u8bc4\u5206\n\n        \nsimTotal\n \n+=\n \nsimilarity\n\n        \nratSimTotal\n \n+=\n \nsimilarity\n \n*\n \nuserRating\n\n    \nif\n \nsimTotal\n \n==\n \n0\n:\n\n        \nreturn\n \n0\n\n    \n# \u901a\u8fc7\u9664\u4ee5\u6240\u6709\u7684\u8bc4\u5206\u603b\u548c\uff0c\u5bf9\u4e0a\u8ff0\u76f8\u4f3c\u5ea6\u8bc4\u5206\u7684\u4e58\u79ef\u8fdb\u884c\u5f52\u4e00\u5316\uff0c\u4f7f\u5f97\u6700\u540e\u8bc4\u5206\u57280~5\u4e4b\u95f4\uff0c\u8fd9\u4e9b\u8bc4\u5206\u7528\u6765\u5bf9\u9884\u6d4b\u503c\u8fdb\u884c\u6392\u5e8f\n\n    \nelse\n:\n\n        \nreturn\n \nratSimTotal\n/\nsimTotal\n\n\n\n\n\n\n\n2.\u57fa\u4e8eSVD(\u53c2\u8003\u5730\u5740\uff1a\nhttp://www.codeweblog.com/svd-%E7%AC%94%E8%AE%B0/\n)\n\n\n\n\n\n\n# \u57fa\u4e8eSVD\u7684\u8bc4\u5206\u4f30\u8ba1\n\n\n# \u5728recommend() \u4e2d\uff0c\u8fd9\u4e2a\u51fd\u6570\u7528\u4e8e\u66ff\u6362\u5bf9standEst()\u7684\u8c03\u7528\uff0c\u8be5\u51fd\u6570\u5bf9\u7ed9\u5b9a\u7528\u6237\u7ed9\u5b9a\u7269\u54c1\u6784\u5efa\u4e86\u4e00\u4e2a\u8bc4\u5206\u4f30\u8ba1\u503c\n\n\ndef\n \nsvdEst\n(\ndataMat\n,\n \nuser\n,\n \nsimMeas\n,\n \nitem\n):\n\n    \nsvdEst(\u8ba1\u7b97\u67d0\u7528\u6237\u672a\u8bc4\u5206\u7269\u54c1\u4e2d\uff0c\u4ee5\u5bf9\u8be5\u7269\u54c1\u548c\u5176\u4ed6\u7269\u54c1\u8bc4\u5206\u7684\u7528\u6237\u7684\u7269\u54c1\u76f8\u4f3c\u5ea6\uff0c\u7136\u540e\u8fdb\u884c\u7efc\u5408\u8bc4\u5206)\n\n\n\n    Args:\n\n\n        dataMat         \u8bad\u7ec3\u6570\u636e\u96c6\n\n\n        user            \u7528\u6237\u7f16\u53f7\n\n\n        simMeas         \u76f8\u4f3c\u5ea6\u8ba1\u7b97\u65b9\u6cd5\n\n\n        item            \u672a\u8bc4\u5206\u7684\u7269\u54c1\u7f16\u53f7\n\n\n    Returns:\n\n\n        ratSimTotal/simTotal     \u8bc4\u5206\uff080\uff5e5\u4e4b\u95f4\u7684\u503c\uff09\n\n\n    \n\n    \n# \u7269\u54c1\u6570\u76ee\n\n    \nn\n \n=\n \nshape\n(\ndataMat\n)[\n1\n]\n\n    \n# \u5bf9\u6570\u636e\u96c6\u8fdb\u884cSVD\u5206\u89e3\n\n    \nsimTotal\n \n=\n \n0.0\n\n    \nratSimTotal\n \n=\n \n0.0\n\n    \n# \u5947\u5f02\u503c\u5206\u89e3\n\n    \n# \u5728SVD\u5206\u89e3\u4e4b\u540e\uff0c\u6211\u4eec\u53ea\u5229\u7528\u5305\u542b\u4e8690%\u80fd\u91cf\u503c\u7684\u5947\u5f02\u503c\uff0c\u8fd9\u4e9b\u5947\u5f02\u503c\u4f1a\u4ee5NumPy\u6570\u7ec4\u7684\u5f62\u5f0f\u5f97\u4ee5\u4fdd\u5b58\n\n    \nU\n,\n \nSigma\n,\n \nVT\n \n=\n \nla\n.\nsvd\n(\ndataMat\n)\n\n\n    \n# # \u5206\u6790 Sigma \u7684\u957f\u5ea6\u53d6\u503c\n\n    \n# analyse_data(Sigma, 20)\n\n\n    \n# \u5982\u679c\u8981\u8fdb\u884c\u77e9\u9635\u8fd0\u7b97\uff0c\u5c31\u5fc5\u987b\u8981\u7528\u8fd9\u4e9b\u5947\u5f02\u503c\u6784\u5efa\u51fa\u4e00\u4e2a\u5bf9\u89d2\u77e9\u9635\n\n    \nSig4\n \n=\n \nmat\n(\neye\n(\n4\n)\n \n*\n \nSigma\n[:\n \n4\n])\n\n    \n# \u5229\u7528U\u77e9\u9635\u5c06\u7269\u54c1\u8f6c\u6362\u5230\u4f4e\u7ef4\u7a7a\u95f4\u4e2d\uff0c\u6784\u5efa\u8f6c\u6362\u540e\u7684\u7269\u54c1(\u7269\u54c1+4\u4e2a\u4e3b\u8981\u7684\u7279\u5f81)\n\n    \nxformedItems\n \n=\n \ndataMat\n.\nT\n \n*\n \nU\n[:,\n \n:\n4\n]\n \n*\n \nSig4\n.\nI\n\n    \n# \u5bf9\u4e8e\u7ed9\u5b9a\u7684\u7528\u6237\uff0cfor\u5faa\u73af\u5728\u7528\u6237\u5bf9\u5e94\u884c\u7684\u5143\u7d20\u4e0a\u8fdb\u884c\u904d\u5386\uff0c\n\n    \n# \u8fd9\u548cstandEst()\u51fd\u6570\u4e2d\u7684for\u5faa\u73af\u7684\u76ee\u7684\u4e00\u6837\uff0c\u53ea\u4e0d\u8fc7\u8fd9\u91cc\u7684\u76f8\u4f3c\u5ea6\u8ba1\u7b97\u65f6\u5728\u4f4e\u7ef4\u7a7a\u95f4\u4e0b\u8fdb\u884c\u7684\u3002\n\n    \nfor\n \nj\n \nin\n \nrange\n(\nn\n):\n\n        \nuserRating\n \n=\n \ndataMat\n[\nuser\n,\n \nj\n]\n\n        \nif\n \nuserRating\n \n==\n \n0\n \nor\n \nj\n \n==\n \nitem\n:\n\n            \ncontinue\n\n        \n# \u76f8\u4f3c\u5ea6\u7684\u8ba1\u7b97\u65b9\u6cd5\u4e5f\u4f1a\u4f5c\u4e3a\u4e00\u4e2a\u53c2\u6570\u4f20\u9012\u7ed9\u8be5\u51fd\u6570\n\n        \nsimilarity\n \n=\n \nsimMeas\n(\nxformedItems\n[\nitem\n,\n \n:]\n.\nT\n,\n \nxformedItems\n[\nj\n,\n \n:]\n.\nT\n)\n\n        \n# for \u5faa\u73af\u4e2d\u52a0\u5165\u4e86\u4e00\u6761print\u8bed\u53e5\uff0c\u4ee5\u4fbf\u4e86\u89e3\u76f8\u4f3c\u5ea6\u8ba1\u7b97\u7684\u8fdb\u5c55\u60c5\u51b5\u3002\u5982\u679c\u89c9\u5f97\u7d2f\u8d58\uff0c\u53ef\u4ee5\u53bb\u6389\n\n        \nprint\n \nthe \n%d\n and \n%d\n similarity is: \n%f\n \n%\n \n(\nitem\n,\n \nj\n,\n \nsimilarity\n)\n\n        \n# \u5bf9\u76f8\u4f3c\u5ea6\u4e0d\u65ad\u7d2f\u52a0\u6c42\u548c\n\n        \nsimTotal\n \n+=\n \nsimilarity\n\n        \n# \u5bf9\u76f8\u4f3c\u5ea6\u53ca\u5bf9\u5e94\u8bc4\u5206\u503c\u7684\u4e58\u79ef\u6c42\u548c\n\n        \nratSimTotal\n \n+=\n \nsimilarity\n \n*\n \nuserRating\n\n    \nif\n \nsimTotal\n \n==\n \n0\n:\n\n        \nreturn\n \n0\n\n    \nelse\n:\n\n        \n# \u8ba1\u7b97\u4f30\u8ba1\u8bc4\u5206\n\n        \nreturn\n \nratSimTotal\n/\nsimTotal\n\n\n\n\n\n\u6392\u5e8f\u83b7\u53d6\u6700\u540e\u7684\u63a8\u8350\u7ed3\u679c\n\n\n# recommend()\u51fd\u6570\uff0c\u5c31\u662f\u63a8\u8350\u5f15\u64ce\uff0c\u5b83\u9ed8\u8ba4\u8c03\u7528standEst()\u51fd\u6570\uff0c\u4ea7\u751f\u4e86\u6700\u9ad8\u7684N\u4e2a\u63a8\u8350\u7ed3\u679c\u3002\n\n\n# \u5982\u679c\u4e0d\u6307\u5b9aN\u7684\u5927\u5c0f\uff0c\u5219\u9ed8\u8ba4\u503c\u4e3a3\u3002\u8be5\u51fd\u6570\u53e6\u5916\u7684\u53c2\u6570\u8fd8\u5305\u62ec\u76f8\u4f3c\u5ea6\u8ba1\u7b97\u65b9\u6cd5\u548c\u4f30\u8ba1\u65b9\u6cd5\n\n\ndef\n \nrecommend\n(\ndataMat\n,\n \nuser\n,\n \nN\n=\n3\n,\n \nsimMeas\n=\ncosSim\n,\n \nestMethod\n=\nstandEst\n):\n\n    \n# \u5bfb\u627e\u672a\u8bc4\u7ea7\u7684\u7269\u54c1\n\n    \n# \u5bf9\u7ed9\u5b9a\u7684\u7528\u6237\u5efa\u7acb\u4e00\u4e2a\u672a\u8bc4\u5206\u7684\u7269\u54c1\u5217\u8868\n\n    \nunratedItems\n \n=\n \nnonzero\n(\ndataMat\n[\nuser\n,\n \n:]\n.\nA\n \n==\n \n0\n)[\n1\n]\n\n    \n# \u5982\u679c\u4e0d\u5b58\u5728\u672a\u8bc4\u5206\u7269\u54c1\uff0c\u90a3\u4e48\u5c31\u9000\u51fa\u51fd\u6570\n\n    \nif\n \nlen\n(\nunratedItems\n)\n \n==\n \n0\n:\n\n        \nreturn\n \nyou rated everything\n\n    \n# \u7269\u54c1\u7684\u7f16\u53f7\u548c\u8bc4\u5206\u503c\n\n    \nitemScores\n \n=\n \n[]\n\n    \n# \u5728\u672a\u8bc4\u5206\u7269\u54c1\u4e0a\u8fdb\u884c\u5faa\u73af\n\n    \nfor\n \nitem\n \nin\n \nunratedItems\n:\n\n        \nestimatedScore\n \n=\n \nestMethod\n(\ndataMat\n,\n \nuser\n,\n \nsimMeas\n,\n \nitem\n)\n\n        \n# \u5bfb\u627e\u524dN\u4e2a\u672a\u8bc4\u7ea7\u7269\u54c1\uff0c\u8c03\u7528standEst()\u6765\u4ea7\u751f\u8be5\u7269\u54c1\u7684\u9884\u6d4b\u5f97\u5206\uff0c\u8be5\u7269\u54c1\u7684\u7f16\u53f7\u548c\u4f30\u8ba1\u503c\u4f1a\u653e\u5728\u4e00\u4e2a\u5143\u7d20\u5217\u8868itemScores\u4e2d\n\n        \nitemScores\n.\nappend\n((\nitem\n,\n \nestimatedScore\n))\n\n        \n# \u6309\u7167\u4f30\u8ba1\u5f97\u5206\uff0c\u5bf9\u8be5\u5217\u8868\u8fdb\u884c\u6392\u5e8f\u5e76\u8fd4\u56de\u3002\u5217\u8868\u9006\u6392\u5e8f\uff0c\u7b2c\u4e00\u4e2a\u503c\u5c31\u662f\u6700\u5927\u503c\n\n    \nreturn\n \nsorted\n(\nitemScores\n,\n \nkey\n=\nlambda\n \njj\n:\n \njj\n[\n1\n],\n \nreverse\n=\nTrue\n)[:\n \nN\n]\n\n\n\n\n\n\n\n\u6d4b\u8bd5 \u548c \u9879\u76ee\u8c03\u7528\uff0c\u53ef\u76f4\u63a5\u53c2\u8003\u6211\u4eec\u7684\u4ee3\u7801\n\n\n\n\n\u5b8c\u6574\u4ee3\u7801\u5730\u5740\n: \nhttps://github.com/apachecn/MachineLearning/blob/master/src/python/14.SVD/svdRecommend.py\n\n\n\u8981\u70b9\u8865\u5145\n\n\n\n\n\u57fa\u4e8e\u5185\u5bb9(content-based)\u7684\u63a8\u8350\n\n\n\n\n\n\n\u901a\u8fc7\u5404\u79cd\u6807\u7b7e\u6765\u6807\u8bb0\u83dc\u80b4\n\n\n\u5c06\u8fd9\u4e9b\u5c5e\u6027\u4f5c\u4e3a\u76f8\u4f3c\u5ea6\u8ba1\u7b97\u6240\u9700\u8981\u7684\u6570\u636e\n\n\n\u8fd9\u5c31\u662f\uff1a\u57fa\u4e8e\u5185\u5bb9\u7684\u63a8\u8350\u3002\n\n\n\n\n\n\n\u6784\u5efa\u63a8\u8350\u5f15\u64ce\u9762\u4e34\u7684\u6311\u6218\n\n\n\n\n\u95ee\u9898\n* 1\uff09\u5728\u5927\u89c4\u6a21\u7684\u6570\u636e\u96c6\u4e0a\uff0cSVD\u5206\u89e3\u4f1a\u964d\u4f4e\u7a0b\u5e8f\u7684\u901f\u5ea6\n* 2\uff09\u5b58\u5728\u5176\u4ed6\u5f88\u591a\u89c4\u6a21\u6269\u5c55\u6027\u7684\u6311\u6218\u6027\u95ee\u9898\uff0c\u6bd4\u5982\u77e9\u9635\u7684\u8868\u793a\u65b9\u6cd5\u548c\u8ba1\u7b97\u76f8\u4f3c\u5ea6\u5f97\u5206\u6d88\u8017\u8d44\u6e90\u3002\n* 3\uff09\u5982\u4f55\u5728\u7f3a\u4e4f\u6570\u636e\u65f6\u7ed9\u51fa\u597d\u7684\u63a8\u8350-\u79f0\u4e3a\u51b7\u542f\u52a8\u3010\u7b80\u5355\u8bf4\uff1a\u7528\u6237\u4e0d\u4f1a\u559c\u6b22\u4e00\u4e2a\u65e0\u6548\u7684\u7269\u54c1\uff0c\u800c\u7528\u6237\u4e0d\u559c\u6b22\u7684\u7269\u54c1\u53c8\u65e0\u6548\u3011\n\n\n\u5efa\u8bae\n* 1\uff09\u5728\u5927\u578b\u7cfb\u7edf\u4e2d\uff0cSVD\u5206\u89e3(\u53ef\u4ee5\u5728\u7a0b\u5e8f\u8c03\u5165\u65f6\u8fd0\u884c\u4e00\u6b21)\u6bcf\u5929\u8fd0\u884c\u4e00\u6b21\u6216\u8005\u5176\u9891\u7387\u66f4\u4f4e\uff0c\u5e76\u4e14\u8fd8\u8981\u79bb\u7ebf\u8fd0\u884c\u3002\n* 2\uff09\u5728\u5b9e\u9645\u4e2d\uff0c\u53e6\u4e00\u4e2a\u666e\u904d\u7684\u505a\u6cd5\u5c31\u662f\u79bb\u7ebf\u8ba1\u7b97\u5e76\u4fdd\u5b58\u76f8\u4f3c\u5ea6\u5f97\u5206\u3002(\u7269\u54c1\u76f8\u4f3c\u5ea6\u53ef\u80fd\u88ab\u7528\u6237\u91cd\u590d\u7684\u8c03\u7528)\n* 3\uff09\u51b7\u542f\u52a8\u95ee\u9898\uff0c\u89e3\u51b3\u65b9\u6848\u5c31\u662f\u5c06\u63a8\u8350\u770b\u6210\u662f\u641c\u7d22\u95ee\u9898\uff0c\u901a\u8fc7\u5404\u79cd\u6807\u7b7e\uff0f\u5c5e\u6027\u7279\u5f81\u8fdb\u884c\n\u57fa\u4e8e\u5185\u5bb9\u7684\u63a8\u8350\n\u3002\n\n\n\u9879\u76ee\u6848\u4f8b: \u57fa\u4e8e SVD \u7684\u56fe\u50cf\u538b\u7f29\n\n\n\n\n\u6536\u96c6 \u5e76 \u51c6\u5907\u6570\u636e\n\n\n\n\n\u5c06\u6587\u672c\u6570\u636e\u8f6c\u5316\u4e3a\u77e9\u9635\n\n\n# \u52a0\u8f7d\u5e76\u8f6c\u6362\u6570\u636e\n\n\ndef\n \nimgLoadData\n(\nfilename\n):\n\n    \nmyl\n \n=\n \n[]\n\n    \n# \u6253\u5f00\u6587\u672c\u6587\u4ef6\uff0c\u5e76\u4ece\u6587\u4ef6\u4ee5\u6570\u7ec4\u65b9\u5f0f\u8bfb\u5165\u5b57\u7b26\n\n    \nfor\n \nline\n \nin\n \nopen\n(\nfilename\n)\n.\nreadlines\n():\n\n        \nnewRow\n \n=\n \n[]\n\n        \nfor\n \ni\n \nin\n \nrange\n(\n32\n):\n\n            \nnewRow\n.\nappend\n(\nint\n(\nline\n[\ni\n]))\n\n        \nmyl\n.\nappend\n(\nnewRow\n)\n\n    \n# \u77e9\u9635\u8c03\u5165\u540e\uff0c\u5c31\u53ef\u4ee5\u5728\u5c4f\u5e55\u4e0a\u8f93\u51fa\u8be5\u77e9\u9635\n\n    \nmyMat\n \n=\n \nmat\n(\nmyl\n)\n\n    \nreturn\n \nmyMat\n\n\n\n\n\n\n\n\u5206\u6790\u6570\u636e: \u5206\u6790 Sigma \u7684\u957f\u5ea6\u4e2a\u6570\n\n\n\n\n\u901a\u5e38\u4fdd\u7559\u77e9\u9635 80% \uff5e 90% \u7684\u80fd\u91cf\uff0c\u5c31\u53ef\u4ee5\u5f97\u5230\u91cd\u8981\u7684\u7279\u5f81\u5e76\u53bb\u9664\u566a\u58f0\u3002\n\n\ndef\n \nanalyse_data\n(\nSigma\n,\n \nloopNum\n=\n20\n):\n\n    \nanalyse_data(\u5206\u6790 Sigma \u7684\u957f\u5ea6\u53d6\u503c)\n\n\n\n    Args:\n\n\n        Sigma         Sigma\u7684\u503c\n\n\n        loopNum       \u5faa\u73af\u6b21\u6570\n\n\n    \n\n    \n# \u603b\u65b9\u5dee\u7684\u96c6\u5408\uff08\u603b\u80fd\u91cf\u503c\uff09\n\n    \nSig2\n \n=\n \nSigma\n**\n2\n\n    \nSigmaSum\n \n=\n \nsum\n(\nSig2\n)\n\n    \nfor\n \ni\n \nin\n \nrange\n(\nloopNum\n):\n\n        \nSigmaI\n \n=\n \nsum\n(\nSig2\n[:\ni\n+\n1\n])\n\n        \n\n\n        \u6839\u636e\u81ea\u5df1\u7684\u4e1a\u52a1\u60c5\u51b5\uff0c\u5c31\u884c\u5904\u7406\uff0c\u8bbe\u7f6e\u5bf9\u5e94\u7684 Singma \u6b21\u6570\n\n\n\n        \u901a\u5e38\u4fdd\u7559\u77e9\u9635 80% \uff5e 90% \u7684\u80fd\u91cf\uff0c\u5c31\u53ef\u4ee5\u5f97\u5230\u91cd\u8981\u7684\u7279\u5f81\u5e76\u53d6\u51fa\u566a\u58f0\u3002\n\n\n        \n\n        \nprint\n \n\u4e3b\u6210\u5206\uff1a\n%s\n, \u65b9\u5dee\u5360\u6bd4\uff1a\n%s%%\n \n%\n \n(\nformat\n(\ni\n+\n1\n,\n \n2.0f\n),\n \nformat\n(\nSigmaI\n/\nSigmaSum\n*\n100\n,\n \n4.2f\n))\n\n\n\n\n\n\n\n\u4f7f\u7528\u7b97\u6cd5: \u5bf9\u6bd4\u4f7f\u7528 SVD \u524d\u540e\u7684\u6570\u636e\u5dee\u5f02\u5bf9\u6bd4\uff0c\u5bf9\u4e8e\u5b58\u50a8\u5927\u5bb6\u53ef\u4ee5\u8bd5\u7740\u5199\u5199\n\n\n\n\n\u4f8b\u5982\uff1a\n32*32=1024 =\n 32*2+2*1+32*2=130\n(2*1\u8868\u793a\u53bb\u6389\u4e86\u9664\u5bf9\u89d2\u7ebf\u76840), \u51e0\u4e4e\u83b7\u5f97\u4e8610\u500d\u7684\u538b\u7f29\u6bd4\u3002\n\n\n# \u6253\u5370\u77e9\u9635\n\n\ndef\n \nprintMat\n(\ninMat\n,\n \nthresh\n=\n0.8\n):\n\n    \n# \u7531\u4e8e\u77e9\u9635\u4fdd\u62a4\u4e86\u6d6e\u70b9\u6570\uff0c\u56e0\u6b64\u5b9a\u4e49\u6d45\u8272\u548c\u6df1\u8272\uff0c\u904d\u5386\u6240\u6709\u77e9\u9635\u5143\u7d20\uff0c\u5f53\u5143\u7d20\u5927\u4e8e\u9600\u503c\u65f6\u6253\u53701\uff0c\u5426\u5219\u6253\u53700\n\n    \nfor\n \ni\n \nin\n \nrange\n(\n32\n):\n\n        \nfor\n \nk\n \nin\n \nrange\n(\n32\n):\n\n            \nif\n \nfloat\n(\ninMat\n[\ni\n,\n \nk\n])\n \n \nthresh\n:\n\n                \nprint\n \n1\n,\n\n            \nelse\n:\n\n                \nprint\n \n0\n,\n\n        \nprint\n \n\n\n\n\n# \u5b9e\u73b0\u56fe\u50cf\u538b\u7f29\uff0c\u5141\u8bb8\u57fa\u4e8e\u4efb\u610f\u7ed9\u5b9a\u7684\u5947\u5f02\u503c\u6570\u76ee\u6765\u91cd\u6784\u56fe\u50cf\n\n\ndef\n \nimgCompress\n(\nnumSV\n=\n3\n,\n \nthresh\n=\n0.8\n):\n\n    \nimgCompress( )\n\n\n\n    Args:\n\n\n        numSV       Sigma\u957f\u5ea6   \n\n\n        thresh      \u5224\u65ad\u7684\u9608\u503c\n\n\n    \n\n    \n# \u6784\u5efa\u4e00\u4e2a\u5217\u8868\n\n    \nmyMat\n \n=\n \nimgLoadData\n(\ninput/14.SVD/0_5.txt\n)\n\n\n    \nprint\n \n****original matrix****\n\n    \n# \u5bf9\u539f\u59cb\u56fe\u50cf\u8fdb\u884cSVD\u5206\u89e3\u5e76\u91cd\u6784\u56fe\u50cfe\n\n    \nprintMat\n(\nmyMat\n,\n \nthresh\n)\n\n\n    \n# \u901a\u8fc7Sigma \u91cd\u65b0\u6784\u6210SigRecom\u6765\u5b9e\u73b0\n\n    \n# Sigma\u662f\u4e00\u4e2a\u5bf9\u89d2\u77e9\u9635\uff0c\u56e0\u6b64\u9700\u8981\u5efa\u7acb\u4e00\u4e2a\u51680\u77e9\u9635\uff0c\u7136\u540e\u5c06\u524d\u9762\u7684\u90a3\u4e9b\u5947\u5f02\u503c\u586b\u5145\u5230\u5bf9\u89d2\u7ebf\u4e0a\u3002\n\n    \nU\n,\n \nSigma\n,\n \nVT\n \n=\n \nla\n.\nsvd\n(\nmyMat\n)\n\n    \n# SigRecon = mat(zeros((numSV, numSV)))\n\n    \n# for k in range(numSV):\n\n    \n#     SigRecon[k, k] = Sigma[k]\n\n\n    \n# \u5206\u6790\u63d2\u5165\u7684 Sigma \u957f\u5ea6\n\n    \nanalyse_data\n(\nSigma\n,\n \n20\n)\n\n\n    \nSigRecon\n \n=\n \nmat\n(\neye\n(\nnumSV\n)\n \n*\n \nSigma\n[:\n \nnumSV\n])\n\n    \nreconMat\n \n=\n \nU\n[:,\n \n:\nnumSV\n]\n \n*\n \nSigRecon\n \n*\n \nVT\n[:\nnumSV\n,\n \n:]\n\n    \nprint\n \n****reconstructed matrix using \n%d\n singular values *****\n \n%\n \nnumSV\n\n    \nprintMat\n(\nreconMat\n,\n \nthresh\n)\n\n\n\n\n\n\u5b8c\u6574\u4ee3\u7801\u5730\u5740\n: \nhttps://github.com/apachecn/MachineLearning/blob/master/src/python/14.SVD/svdRecommend.py\n\n\n\n\n\n\n\u4f5c\u8005\uff1a\n\u7247\u523b\n \n1988\n\n\nGitHub\u5730\u5740\n: \nhttps://github.com/apachecn/MachineLearning\n\n\n\u7248\u6743\u58f0\u660e\uff1a\u6b22\u8fce\u8f6c\u8f7d\u5b66\u4e60 =\n \u8bf7\u6807\u6ce8\u4fe1\u606f\u6765\u6e90\u4e8e \nApacheCN", 
            "title": "14.\u5229\u7528SVD\u7b80\u5316\u6570\u636e"
        }, 
        {
            "location": "/\u4e66\u7c4d/\u673a\u5668\u5b66\u4e60\u5b9e\u6218/14.\u5229\u7528SVD\u7b80\u5316\u6570\u636e/#14-svd", 
            "text": "", 
            "title": "\u7b2c14\u7ae0 \u5229\u7528SVD\u7b80\u5316\u6570\u636e"
        }, 
        {
            "location": "/\u4e66\u7c4d/\u673a\u5668\u5b66\u4e60\u5b9e\u6218/14.\u5229\u7528SVD\u7b80\u5316\u6570\u636e/#svd", 
            "text": "\u5947\u5f02\u503c\u5206\u89e3\uff08SVD, Singular Value Decomposition\uff09:\n    \u63d0\u53d6\u4fe1\u606f\u7684\u4e00\u79cd\u65b9\u6cd5\uff0c\u53ef\u4ee5\u628a SVD \u770b\u6210\u662f\u4ece\u566a\u58f0\u6570\u636e\u4e2d\u62bd\u53d6\u76f8\u5173\u7279\u5f81\u3002\u4ece\u751f\u7269\u4fe1\u606f\u5b66\u5230\u91d1\u878d\u5b66\uff0cSVD \u662f\u63d0\u53d6\u4fe1\u606f\u7684\u5f3a\u5927\u5de5\u5177\u3002", 
            "title": "SVD \u6982\u8ff0"
        }, 
        {
            "location": "/\u4e66\u7c4d/\u673a\u5668\u5b66\u4e60\u5b9e\u6218/14.\u5229\u7528SVD\u7b80\u5316\u6570\u636e/#svd_1", 
            "text": "\u4fe1\u606f\u68c0\u7d22-\u9690\u6027\u8bed\u4e49\u68c0\u7d22\uff08Lstent Semantic Indexing, LSI\uff09\u6216 \u9690\u5f62\u8bed\u4e49\u5206\u6790\uff08Latent Semantic Analysis, LSA\uff09   \u9690\u6027\u8bed\u4e49\u7d22\u5f15\uff1a\u77e9\u9635 = \u6587\u6863 + \u8bcd\u8bed\n* \u662f\u6700\u65e9\u7684 SVD \u5e94\u7528\u4e4b\u4e00\uff0c\u6211\u4eec\u79f0\u5229\u7528 SVD \u7684\u65b9\u6cd5\u4e3a\u9690\u6027\u8bed\u4e49\u7d22\u5f15\uff08LSI\uff09\u6216\u9690\u6027\u8bed\u4e49\u5206\u6790\uff08LSA\uff09\u3002    \u63a8\u8350\u7cfb\u7edf    \u5229\u7528 SVD \u4ece\u6570\u636e\u4e2d\u6784\u5efa\u4e00\u4e2a\u4e3b\u9898\u7a7a\u95f4\u3002  \u518d\u5728\u8be5\u7a7a\u95f4\u4e0b\u8ba1\u7b97\u5176\u76f8\u4f3c\u5ea6\u3002(\u4ece\u9ad8\u7ef4-\u4f4e\u7ef4\u7a7a\u95f4\u7684\u8f6c\u5316\uff0c\u5728\u4f4e\u7ef4\u7a7a\u95f4\u6765\u8ba1\u7b97\u76f8\u4f3c\u5ea6\uff0cSVD \u63d0\u5347\u4e86\u63a8\u8350\u7cfb\u7edf\u7684\u6548\u7387\u3002)     \u4e0a\u56fe\u53f3\u8fb9\u6807\u6ce8\u7684\u4e3a\u4e00\u7ec4\u5171\u540c\u7279\u5f81\uff0c\u8868\u793a\u7f8e\u5f0f BBQ \u7a7a\u95f4\uff1b\u53e6\u4e00\u7ec4\u5728\u4e0a\u56fe\u53f3\u8fb9\u672a\u6807\u6ce8\u7684\u4e3a\u65e5\u5f0f\u98df\u54c1 \u7a7a\u95f4\u3002    \u56fe\u50cf\u538b\u7f29   \u4f8b\u5982\uff1a 32*32=1024 =  32*2+2*1+32*2=130 (2*1\u8868\u793a\u53bb\u6389\u4e86\u9664\u5bf9\u89d2\u7ebf\u76840), \u51e0\u4e4e\u83b7\u5f97\u4e8610\u500d\u7684\u538b\u7f29\u6bd4\u3002", 
            "title": "SVD \u573a\u666f"
        }, 
        {
            "location": "/\u4e66\u7c4d/\u673a\u5668\u5b66\u4e60\u5b9e\u6218/14.\u5229\u7528SVD\u7b80\u5316\u6570\u636e/#svd_2", 
            "text": "", 
            "title": "SVD \u539f\u7406"
        }, 
        {
            "location": "/\u4e66\u7c4d/\u673a\u5668\u5b66\u4e60\u5b9e\u6218/14.\u5229\u7528SVD\u7b80\u5316\u6570\u636e/#svd_3", 
            "text": "\u77e9\u9635\u5206\u89e3    \u77e9\u9635\u5206\u89e3\u662f\u5c06\u6570\u636e\u77e9\u9635\u5206\u89e3\u4e3a\u591a\u4e2a\u72ec\u7acb\u90e8\u5206\u7684\u8fc7\u7a0b\u3002  \u77e9\u9635\u5206\u89e3\u53ef\u4ee5\u5c06\u539f\u59cb\u77e9\u9635\u8868\u793a\u6210\u65b0\u7684\u6613\u4e8e\u5904\u7406\u7684\u5f62\u5f0f\uff0c\u8fd9\u79cd\u65b0\u5f62\u5f0f\u662f\u4e24\u4e2a\u6216\u591a\u4e2a\u77e9\u9635\u7684\u4e58\u79ef\u3002\uff08\u7c7b\u4f3c\u4ee3\u6570\u4e2d\u7684\u56e0\u6570\u5206\u89e3\uff09  \u4e3e\u4f8b\uff1a\u5982\u4f55\u5c0612\u5206\u89e3\u6210\u4e24\u4e2a\u6570\u7684\u4e58\u79ef\uff1f\uff081\uff0c12\uff09\u3001\uff082\uff0c6\uff09\u3001\uff083\uff0c4\uff09\u90fd\u662f\u5408\u7406\u7684\u7b54\u6848\u3002    SVD \u662f\u77e9\u9635\u5206\u89e3\u7684\u4e00\u79cd\u7c7b\u578b\uff0c\u4e5f\u662f\u77e9\u9635\u5206\u89e3\u6700\u5e38\u89c1\u7684\u6280\u672f    SVD \u5c06\u539f\u59cb\u7684\u6570\u636e\u96c6\u77e9\u9635 Data \u5206\u89e3\u6210\u4e09\u4e2a\u77e9\u9635 U\u3001\u2211\u3001V  \u4e3e\u4f8b\uff1a\u5982\u679c\u539f\u59cb\u77e9\u9635 \\(Data_{m*n}\\) \u662fm\u884cn\u5217\uff0c  \\(U_{m*n}\\) \u8868\u793am\u884cn\u5217  \\(\u2211_{m*k}\\) \u8868\u793am\u884ck\u5217  \\(V_{k*n}\\) \u8868\u793ak\u884cn\u5217\u3002     \\(Data_{m*n} = U_{m*k} * \u2211 {k*k} * V {k*n}\\)   \u5177\u4f53\u7684\u6848\u4f8b\uff1a\uff08\u5927\u5bb6\u53ef\u4ee5\u8bd5\u7740\u63a8\u5bfc\u4e00\u4e0b\uff1a https://wenku.baidu.com/view/b7641217866fb84ae45c8d17.html  \uff09    \u4e0a\u8ff0\u5206\u89e3\u4e2d\u4f1a\u6784\u5efa\u51fa\u4e00\u4e2a\u77e9\u9635\u2211\uff0c\u8be5\u77e9\u9635\u53ea\u6709\u5bf9\u89d2\u5143\u7d20\uff0c\u5176\u4ed6\u5143\u7d20\u5747\u4e3a0(\u8fd1\u4f3c\u4e8e0)\u3002\u53e6\u4e00\u4e2a\u60ef\u4f8b\u5c31\u662f\uff0c\u2211\u7684\u5bf9\u89d2\u5143\u7d20\u662f\u4ece\u5927\u5230\u5c0f\u6392\u5217\u7684\u3002\u8fd9\u4e9b\u5bf9\u89d2\u5143\u7d20\u79f0\u4e3a\u5947\u5f02\u503c\u3002  \u5947\u5f02\u503c\u4e0e\u7279\u5f81\u503c(PCA \u6570\u636e\u4e2d\u91cd\u8981\u7279\u5f81)\u662f\u6709\u5173\u7cfb\u7684\u3002\u8fd9\u91cc\u7684\u5947\u5f02\u503c\u5c31\u662f\u77e9\u9635 \\(Data * Data^T\\) \u7279\u5f81\u503c\u7684\u5e73\u65b9\u6839\u3002  \u666e\u904d\u7684\u4e8b\u5b9e\uff1a\u5728\u67d0\u4e2a\u5947\u5f02\u503c\u7684\u6570\u76ee(r \u4e2a= \u5947\u5f02\u503c\u7684\u5e73\u65b9\u548c\u7d2f\u52a0\u5230\u603b\u503c\u768490%\u4ee5\u4e0a)\u4e4b\u540e\uff0c\u5176\u4ed6\u7684\u5947\u5f02\u503c\u90fd\u7f6e\u4e3a0(\u8fd1\u4f3c\u4e8e0)\u3002\u8fd9\u610f\u5473\u7740\u6570\u636e\u96c6\u4e2d\u4ec5\u6709 r \u4e2a\u91cd\u8981\u7279\u5f81\uff0c\u800c\u5176\u4f59\u7279\u5f81\u5219\u90fd\u662f\u566a\u58f0\u6216\u5197\u4f59\u7279\u5f81\u3002", 
            "title": "SVD \u5de5\u4f5c\u539f\u7406"
        }, 
        {
            "location": "/\u4e66\u7c4d/\u673a\u5668\u5b66\u4e60\u5b9e\u6218/14.\u5229\u7528SVD\u7b80\u5316\u6570\u636e/#svd_4", 
            "text": "\u4f18\u70b9\uff1a\u7b80\u5316\u6570\u636e\uff0c\u53bb\u9664\u566a\u58f0\uff0c\u4f18\u5316\u7b97\u6cd5\u7684\u7ed3\u679c\n\u7f3a\u70b9\uff1a\u6570\u636e\u7684\u8f6c\u6362\u53ef\u80fd\u96be\u4ee5\u7406\u89e3\n\u4f7f\u7528\u7684\u6570\u636e\u7c7b\u578b\uff1a\u6570\u503c\u578b\u6570\u636e", 
            "title": "SVD \u7b97\u6cd5\u7279\u70b9"
        }, 
        {
            "location": "/\u4e66\u7c4d/\u673a\u5668\u5b66\u4e60\u5b9e\u6218/14.\u5229\u7528SVD\u7b80\u5316\u6570\u636e/#_1", 
            "text": "", 
            "title": "\u63a8\u8350\u7cfb\u7edf"
        }, 
        {
            "location": "/\u4e66\u7c4d/\u673a\u5668\u5b66\u4e60\u5b9e\u6218/14.\u5229\u7528SVD\u7b80\u5316\u6570\u636e/#_2", 
            "text": "\u63a8\u8350\u7cfb\u7edf\u662f\u5229\u7528\u7535\u5b50\u5546\u52a1\u7f51\u7ad9\u5411\u5ba2\u6237\u63d0\u4f9b\u5546\u54c1\u4fe1\u606f\u548c\u5efa\u8bae\uff0c\u5e2e\u52a9\u7528\u6237\u51b3\u5b9a\u5e94\u8be5\u8d2d\u4e70\u4ec0\u4e48\u4ea7\u54c1\uff0c\u6a21\u62df\u9500\u552e\u4eba\u5458\u5e2e\u52a9\u5ba2\u6237\u5b8c\u6210\u8d2d\u4e70\u8fc7\u7a0b\u3002", 
            "title": "\u63a8\u8350\u7cfb\u7edf \u6982\u8ff0"
        }, 
        {
            "location": "/\u4e66\u7c4d/\u673a\u5668\u5b66\u4e60\u5b9e\u6218/14.\u5229\u7528SVD\u7b80\u5316\u6570\u636e/#_3", 
            "text": "Amazon \u4f1a\u6839\u636e\u987e\u5ba2\u7684\u8d2d\u4e70\u5386\u53f2\u5411\u4ed6\u4eec\u63a8\u8350\u7269\u54c1  Netflix \u4f1a\u5411\u5176\u7528\u6237\u63a8\u8350\u7535\u5f71  \u65b0\u95fb\u7f51\u7ad9\u4f1a\u5bf9\u7528\u6237\u63a8\u8350\u65b0\u95fb\u9891\u9053", 
            "title": "\u63a8\u8350\u7cfb\u7edf \u573a\u666f"
        }, 
        {
            "location": "/\u4e66\u7c4d/\u673a\u5668\u5b66\u4e60\u5b9e\u6218/14.\u5229\u7528SVD\u7b80\u5316\u6570\u636e/#_4", 
            "text": "\u57fa\u4e8e\u534f\u540c\u8fc7\u6ee4(collaborative filtering) \u7684\u63a8\u8350\u5f15\u64ce    \u5229\u7528Python \u5b9e\u73b0 SVD(Numpy \u6709\u4e00\u4e2a\u79f0\u4e3a linalg \u7684\u7ebf\u6027\u4ee3\u6570\u5de5\u5177\u7bb1)  \u534f\u540c\u8fc7\u6ee4\uff1a\u662f\u901a\u8fc7\u5c06\u7528\u6237\u548c\u5176\u4ed6\u7528\u6237\u7684\u6570\u636e\u8fdb\u884c\u5bf9\u6bd4\u6765\u5b9e\u73b0\u63a8\u8350\u7684\u3002  \u5f53\u77e5\u9053\u4e86\u4e24\u4e2a\u7528\u6237\u6216\u4e24\u4e2a\u7269\u54c1\u4e4b\u95f4\u7684\u76f8\u4f3c\u5ea6\uff0c\u6211\u4eec\u5c31\u53ef\u4ee5\u5229\u7528\u5df2\u6709\u7684\u6570\u636e\u6765\u9884\u6d4b\u672a\u77e5\u7528\u6237\u7684\u559c\u597d\u3002    \u57fa\u4e8e\u7269\u54c1\u7684\u76f8\u4f3c\u5ea6\u548c\u57fa\u4e8e\u7528\u6237\u7684\u76f8\u4f3c\u5ea6\uff1a\u7269\u54c1\u6bd4\u8f83\u5c11\u5219\u9009\u62e9\u7269\u54c1\u76f8\u4f3c\u5ea6\uff0c\u7528\u6237\u6bd4\u8f83\u5c11\u5219\u9009\u62e9\u7528\u6237\u76f8\u4f3c\u5ea6\u3002\u3010\u77e9\u9635\u8fd8\u662f\u5c0f\u4e00\u70b9\u597d\u8ba1\u7b97\u3011    \u57fa\u4e8e\u7269\u54c1\u7684\u76f8\u4f3c\u5ea6\uff1a\u8ba1\u7b97\u7269\u54c1\u4e4b\u95f4\u7684\u8ddd\u79bb\u3002\u3010\u8017\u65f6\u4f1a\u968f\u7269\u54c1\u6570\u91cf\u7684\u589e\u52a0\u800c\u589e\u52a0\u3011  \u7531\u4e8e\u7269\u54c1A\u548c\u7269\u54c1C \u76f8\u4f3c\u5ea6(\u76f8\u5173\u5ea6)\u5f88\u9ad8\uff0c\u6240\u4ee5\u7ed9\u4e70A\u7684\u4eba\u63a8\u8350C\u3002     \u57fa\u4e8e\u7528\u6237\u7684\u76f8\u4f3c\u5ea6\uff1a\u8ba1\u7b97\u7528\u6237\u4e4b\u95f4\u7684\u8ddd\u79bb\u3002\u3010\u8017\u65f6\u4f1a\u968f\u7528\u6237\u6570\u91cf\u7684\u589e\u52a0\u800c\u589e\u52a0\u3011  \u7531\u4e8e\u7528\u6237A\u548c\u7528\u6237C \u76f8\u4f3c\u5ea6(\u76f8\u5173\u5ea6)\u5f88\u9ad8\uff0c\u6240\u4ee5A\u548cC\u662f\u5174\u8da3\u76f8\u6295\u7684\u4eba\uff0c\u5bf9\u4e8eC\u4e70\u7684\u7269\u54c1\u5c31\u4f1a\u63a8\u8350\u7ed9A\u3002     \u76f8\u4f3c\u5ea6\u8ba1\u7b97    inA, inB \u5bf9\u5e94\u7684\u662f \u5217\u5411\u91cf  \u6b27\u6c0f\u8ddd\u79bb\uff1a\u6307\u5728m\u7ef4\u7a7a\u95f4\u4e2d\u4e24\u4e2a\u70b9\u4e4b\u95f4\u7684\u771f\u5b9e\u8ddd\u79bb\uff0c\u6216\u8005\u5411\u91cf\u7684\u81ea\u7136\u957f\u5ea6\uff08\u5373\u8be5\u70b9\u5230\u539f\u70b9\u7684\u8ddd\u79bb\uff09\u3002\u4e8c\u7ef4\u6216\u4e09\u7ef4\u4e2d\u7684\u6b27\u6c0f\u8ddd\u79bb\u5c31\u662f\u4e24\u70b9\u4e4b\u95f4\u7684\u5b9e\u9645\u8ddd\u79bb\u3002  \u76f8\u4f3c\u5ea6= 1/(1+\u6b27\u5f0f\u8ddd\u79bb)  \u76f8\u4f3c\u5ea6= 1.0/(1.0 + la.norm(inA - inB))  \u7269\u54c1\u5bf9\u8d8a\u76f8\u4f3c\uff0c\u5b83\u4eec\u7684\u76f8\u4f3c\u5ea6\u503c\u5c31\u8d8a\u5927\u3002    \u76ae\u5c14\u900a\u76f8\u5173\u7cfb\u6570\uff1a\u5ea6\u91cf\u7684\u662f\u4e24\u4e2a\u5411\u91cf\u4e4b\u95f4\u7684\u76f8\u4f3c\u5ea6\u3002  \u76f8\u4f3c\u5ea6= 0.5 + 0.5*corrcoef() \u3010\u76ae\u5c14\u900a\u76f8\u5173\u7cfb\u6570\u7684\u53d6\u503c\u8303\u56f4\u4ece -1 \u5230 +1\uff0c\u901a\u8fc7\u51fd\u65700.5 + 0.5*corrcoef()\u8fd9\u4e2a\u51fd\u6570\u8ba1\u7b97\uff0c\u628a\u503c\u5f52\u4e00\u5316\u52300\u52301\u4e4b\u95f4\u3011  \u76f8\u4f3c\u5ea6= 0.5 + 0.5 * corrcoef(inA, inB, rowvar = 0)[0][1]  \u76f8\u5bf9\u6b27\u6c0f\u8ddd\u79bb\u7684\u4f18\u52bf\uff1a\u5b83\u5bf9\u7528\u6237\u8bc4\u7ea7\u7684\u91cf\u7ea7\u5e76\u4e0d\u654f\u611f\u3002    \u4f59\u5f26\u76f8\u4f3c\u5ea6\uff1a\u8ba1\u7b97\u7684\u662f\u4e24\u4e2a\u5411\u91cf\u5939\u89d2\u7684\u4f59\u5f26\u503c\u3002  \u4f59\u5f26\u503c = (A\u00b7B)/(||A||\u00b7||B||) \u3010\u4f59\u5f26\u503c\u7684\u53d6\u503c\u8303\u56f4\u4e5f\u5728-1\u5230+1\u4e4b\u95f4\u3011  \u76f8\u4f3c\u5ea6= 0.5 + 0.5*\u4f59\u5f26\u503c  \u76f8\u4f3c\u5ea6= 0.5 + 0.5*( float(inA.T*inB) / la.norm(inA)*la.norm(inB))  \u5982\u679c\u5939\u89d2\u4e3a90\u5ea6\uff0c\u5219\u76f8\u4f3c\u5ea6\u4e3a0\uff1b\u5982\u679c\u4e24\u4e2a\u5411\u91cf\u7684\u65b9\u5411\u76f8\u540c\uff0c\u5219\u76f8\u4f3c\u5ea6\u4e3a1.0\u3002      \u63a8\u8350\u7cfb\u7edf\u7684\u8bc4\u4ef7    \u91c7\u7528\u4ea4\u53c9\u6d4b\u8bd5\u7684\u65b9\u6cd5\u3002\u3010\u62c6\u5206\u6570\u636e\u4e3a\u8bad\u7ec3\u96c6\u548c\u6d4b\u8bd5\u96c6\u3011  \u63a8\u8350\u5f15\u64ce\u8bc4\u4ef7\u7684\u6307\u6807\uff1a \u6700\u5c0f\u5747\u65b9\u6839\u8bef\u5dee(Root mean squared error, RMSE)\uff0c\u4e5f\u79f0\u6807\u51c6\u8bef\u5dee(Standard error)\uff0c\u5c31\u662f\u8ba1\u7b97\u5747\u65b9\u8bef\u5dee\u7684\u5e73\u5747\u503c\u7136\u540e\u53d6\u5176\u5e73\u65b9\u6839\u3002  \u5982\u679cRMSE=1, \u8868\u793a\u76f8\u5dee1\u4e2a\u661f\u7ea7\uff1b\u5982\u679cRMSE=2.5, \u8868\u793a\u76f8\u5dee2.5\u4e2a\u661f\u7ea7\u3002", 
            "title": "\u63a8\u8350\u7cfb\u7edf \u8981\u70b9"
        }, 
        {
            "location": "/\u4e66\u7c4d/\u673a\u5668\u5b66\u4e60\u5b9e\u6218/14.\u5229\u7528SVD\u7b80\u5316\u6570\u636e/#_5", 
            "text": "\u63a8\u8350\u7cfb\u7edf\u7684\u5de5\u4f5c\u8fc7\u7a0b\uff1a\u7ed9\u5b9a\u4e00\u4e2a\u7528\u6237\uff0c\u7cfb\u7edf\u4f1a\u4e3a\u6b64\u7528\u6237\u8fd4\u56deN\u4e2a\u6700\u597d\u7684\u63a8\u8350\u83dc\u3002  \u5b9e\u73b0\u6d41\u7a0b\u5927\u81f4\u5982\u4e0b\uff1a  \u5bfb\u627e\u7528\u6237\u6ca1\u6709\u8bc4\u7ea7\u7684\u83dc\u80b4\uff0c\u5373\u5728\u7528\u6237-\u7269\u54c1\u77e9\u9635\u4e2d\u76840\u503c\u3002  \u5728\u7528\u6237\u6ca1\u6709\u8bc4\u7ea7\u7684\u6240\u6709\u7269\u54c1\u4e2d\uff0c\u5bf9\u6bcf\u4e2a\u7269\u54c1\u9884\u8ba1\u4e00\u4e2a\u53ef\u80fd\u7684\u8bc4\u7ea7\u5206\u6570\u3002\u8fd9\u5c31\u662f\u8bf4\uff1a\u6211\u4eec\u8ba4\u4e3a\u7528\u6237\u53ef\u80fd\u4f1a\u5bf9\u7269\u54c1\u7684\u6253\u5206\uff08\u8fd9\u5c31\u662f\u76f8\u4f3c\u5ea6\u8ba1\u7b97\u7684\u521d\u8877\uff09\u3002  \u5bf9\u8fd9\u4e9b\u7269\u54c1\u7684\u8bc4\u5206\u4ece\u9ad8\u5230\u4f4e\u8fdb\u884c\u6392\u5e8f\uff0c\u8fd4\u56de\u524dN\u4e2a\u7269\u54c1\u3002", 
            "title": "\u63a8\u8350\u7cfb\u7edf \u539f\u7406"
        }, 
        {
            "location": "/\u4e66\u7c4d/\u673a\u5668\u5b66\u4e60\u5b9e\u6218/14.\u5229\u7528SVD\u7b80\u5316\u6570\u636e/#_6", 
            "text": "", 
            "title": "\u9879\u76ee\u6848\u4f8b: \u9910\u9986\u83dc\u80b4\u63a8\u8350\u7cfb\u7edf"
        }, 
        {
            "location": "/\u4e66\u7c4d/\u673a\u5668\u5b66\u4e60\u5b9e\u6218/14.\u5229\u7528SVD\u7b80\u5316\u6570\u636e/#_7", 
            "text": "\u5047\u5982\u4e00\u4e2a\u4eba\u5728\u5bb6\u51b3\u5b9a\u5916\u51fa\u5403\u996d\uff0c\u4f46\u662f\u4ed6\u5e76\u4e0d\u77e5\u9053\u8be5\u5230\u54ea\u513f\u53bb\u5403\u996d\uff0c\u8be5\u70b9\u4ec0\u4e48\u83dc\u3002\u63a8\u8350\u7cfb\u7edf\u53ef\u4ee5\u5e2e\u4ed6\u505a\u5230\u8fd9\u4e24\u70b9\u3002", 
            "title": "\u9879\u76ee\u6982\u8ff0"
        }, 
        {
            "location": "/\u4e66\u7c4d/\u673a\u5668\u5b66\u4e60\u5b9e\u6218/14.\u5229\u7528SVD\u7b80\u5316\u6570\u636e/#_8", 
            "text": "\u6536\u96c6 \u5e76 \u51c6\u5907\u6570\u636e    def   loadExData3 (): \n     # \u5229\u7528SVD\u63d0\u9ad8\u63a8\u8350\u6548\u679c\uff0c\u83dc\u80b4\u77e9\u9635 \n          \u884c\uff1a\u4ee3\u8868\u4eba      \u5217\uff1a\u4ee3\u8868\u83dc\u80b4\u540d\u8bcd      \u503c\uff1a\u4ee3\u8868\u4eba\u5bf9\u83dc\u80b4\u7684\u8bc4\u5206\uff0c0\u8868\u793a\u672a\u8bc4\u5206       \n     return [[ 2 ,   0 ,   0 ,   4 ,   4 ,   0 ,   0 ,   0 ,   0 ,   0 ,   0 ], \n            [ 0 ,   0 ,   0 ,   0 ,   0 ,   0 ,   0 ,   0 ,   0 ,   0 ,   5 ], \n            [ 0 ,   0 ,   0 ,   0 ,   0 ,   0 ,   0 ,   1 ,   0 ,   4 ,   0 ], \n            [ 3 ,   3 ,   4 ,   0 ,   3 ,   0 ,   0 ,   2 ,   2 ,   0 ,   0 ], \n            [ 5 ,   5 ,   5 ,   0 ,   0 ,   0 ,   0 ,   0 ,   0 ,   0 ,   0 ], \n            [ 0 ,   0 ,   0 ,   0 ,   0 ,   0 ,   5 ,   0 ,   0 ,   5 ,   0 ], \n            [ 4 ,   0 ,   4 ,   0 ,   0 ,   0 ,   0 ,   0 ,   0 ,   0 ,   5 ], \n            [ 0 ,   0 ,   0 ,   0 ,   0 ,   4 ,   0 ,   0 ,   0 ,   0 ,   4 ], \n            [ 0 ,   0 ,   0 ,   0 ,   0 ,   0 ,   5 ,   0 ,   0 ,   5 ,   0 ], \n            [ 0 ,   0 ,   0 ,   3 ,   0 ,   0 ,   0 ,   0 ,   4 ,   5 ,   0 ], \n            [ 1 ,   1 ,   2 ,   1 ,   1 ,   2 ,   1 ,   0 ,   4 ,   5 ,   0 ]]    \u5206\u6790\u6570\u636e: \u8fd9\u91cc\u4e0d\u505a\u8fc7\u591a\u7684\u8ba8\u8bba(\u5f53\u7136\u6b64\u5904\u53ef\u4ee5\u5bf9\u6bd4\u4e0d\u540c\u8ddd\u79bb\u4e4b\u95f4\u7684\u5dee\u522b)  \u8bad\u7ec3\u7b97\u6cd5: \u901a\u8fc7\u8c03\u7528 recommend() \u51fd\u6570\u8fdb\u884c\u63a8\u8350   recommend() \u4f1a\u8c03\u7528 \u57fa\u4e8e\u7269\u54c1\u76f8\u4f3c\u5ea6 \u6216\u8005\u662f \u57fa\u4e8eSVD\uff0c\u5f97\u5230\u63a8\u8350\u7684\u7269\u54c1\u8bc4\u5206\u3002   1.\u57fa\u4e8e\u7269\u54c1\u76f8\u4f3c\u5ea6     # \u57fa\u4e8e\u7269\u54c1\u76f8\u4f3c\u5ea6\u7684\u63a8\u8350\u5f15\u64ce  def   standEst ( dataMat ,   user ,   simMeas ,   item ): \n     standEst(\u8ba1\u7b97\u67d0\u7528\u6237\u672a\u8bc4\u5206\u7269\u54c1\u4e2d\uff0c\u4ee5\u5bf9\u8be5\u7269\u54c1\u548c\u5176\u4ed6\u7269\u54c1\u8bc4\u5206\u7684\u7528\u6237\u7684\u7269\u54c1\u76f8\u4f3c\u5ea6\uff0c\u7136\u540e\u8fdb\u884c\u7efc\u5408\u8bc4\u5206)      Args:          dataMat         \u8bad\u7ec3\u6570\u636e\u96c6          user            \u7528\u6237\u7f16\u53f7          simMeas         \u76f8\u4f3c\u5ea6\u8ba1\u7b97\u65b9\u6cd5          item            \u672a\u8bc4\u5206\u7684\u7269\u54c1\u7f16\u53f7      Returns:          ratSimTotal/simTotal     \u8bc4\u5206\uff080\uff5e5\u4e4b\u95f4\u7684\u503c\uff09       \n     # \u5f97\u5230\u6570\u636e\u96c6\u4e2d\u7684\u7269\u54c1\u6570\u76ee \n     n   =   shape ( dataMat )[ 1 ] \n     # \u521d\u59cb\u5316\u4e24\u4e2a\u8bc4\u5206\u503c \n     simTotal   =   0.0 \n     ratSimTotal   =   0.0 \n     # \u904d\u5386\u884c\u4e2d\u7684\u6bcf\u4e2a\u7269\u54c1\uff08\u5bf9\u7528\u6237\u8bc4\u8fc7\u5206\u7684\u7269\u54c1\u8fdb\u884c\u904d\u5386\uff0c\u5e76\u5c06\u5b83\u4e0e\u5176\u4ed6\u7269\u54c1\u8fdb\u884c\u6bd4\u8f83\uff09 \n     for   j   in   range ( n ): \n         userRating   =   dataMat [ user ,   j ] \n         # \u5982\u679c\u67d0\u4e2a\u7269\u54c1\u7684\u8bc4\u5206\u503c\u4e3a0\uff0c\u5219\u8df3\u8fc7\u8fd9\u4e2a\u7269\u54c1 \n         if   userRating   ==   0 : \n             continue \n         # \u5bfb\u627e\u4e24\u4e2a\u7528\u6237\u90fd\u8bc4\u7ea7\u7684\u7269\u54c1 \n         # \u53d8\u91cf overLap \u7ed9\u51fa\u7684\u662f\u4e24\u4e2a\u7269\u54c1\u5f53\u4e2d\u5df2\u7ecf\u88ab\u8bc4\u5206\u7684\u90a3\u4e2a\u5143\u7d20\u7684\u7d22\u5f15ID \n         # logical_and \u8ba1\u7b97x1\u548cx2\u5143\u7d20\u7684\u771f\u503c\u3002 \n         overLap   =   nonzero ( logical_and ( dataMat [:,   item ] . A     0 ,   dataMat [:,   j ] . A     0 ))[ 0 ] \n         # \u5982\u679c\u76f8\u4f3c\u5ea6\u4e3a0\uff0c\u5219\u4e24\u7740\u6ca1\u6709\u4efb\u4f55\u91cd\u5408\u5143\u7d20\uff0c\u7ec8\u6b62\u672c\u6b21\u5faa\u73af \n         if   len ( overLap )   ==   0 : \n             similarity   =   0 \n         # \u5982\u679c\u5b58\u5728\u91cd\u5408\u7684\u7269\u54c1\uff0c\u5219\u57fa\u4e8e\u8fd9\u4e9b\u91cd\u5408\u7269\u91cd\u65b0\u8ba1\u7b97\u76f8\u4f3c\u5ea6\u3002 \n         else : \n             similarity   =   simMeas ( dataMat [ overLap ,   item ],   dataMat [ overLap ,   j ]) \n         # print  the %d and %d similarity is : %f (iten,j,similarity) \n         # \u76f8\u4f3c\u5ea6\u4f1a\u4e0d\u65ad\u7d2f\u52a0\uff0c\u6bcf\u6b21\u8ba1\u7b97\u65f6\u8fd8\u8003\u8651\u76f8\u4f3c\u5ea6\u548c\u5f53\u524d\u7528\u6237\u8bc4\u5206\u7684\u4e58\u79ef \n         # similarity  \u7528\u6237\u76f8\u4f3c\u5ea6\uff0c   userRating \u7528\u6237\u8bc4\u5206 \n         simTotal   +=   similarity \n         ratSimTotal   +=   similarity   *   userRating \n     if   simTotal   ==   0 : \n         return   0 \n     # \u901a\u8fc7\u9664\u4ee5\u6240\u6709\u7684\u8bc4\u5206\u603b\u548c\uff0c\u5bf9\u4e0a\u8ff0\u76f8\u4f3c\u5ea6\u8bc4\u5206\u7684\u4e58\u79ef\u8fdb\u884c\u5f52\u4e00\u5316\uff0c\u4f7f\u5f97\u6700\u540e\u8bc4\u5206\u57280~5\u4e4b\u95f4\uff0c\u8fd9\u4e9b\u8bc4\u5206\u7528\u6765\u5bf9\u9884\u6d4b\u503c\u8fdb\u884c\u6392\u5e8f \n     else : \n         return   ratSimTotal / simTotal    2.\u57fa\u4e8eSVD(\u53c2\u8003\u5730\u5740\uff1a http://www.codeweblog.com/svd-%E7%AC%94%E8%AE%B0/ )    # \u57fa\u4e8eSVD\u7684\u8bc4\u5206\u4f30\u8ba1  # \u5728recommend() \u4e2d\uff0c\u8fd9\u4e2a\u51fd\u6570\u7528\u4e8e\u66ff\u6362\u5bf9standEst()\u7684\u8c03\u7528\uff0c\u8be5\u51fd\u6570\u5bf9\u7ed9\u5b9a\u7528\u6237\u7ed9\u5b9a\u7269\u54c1\u6784\u5efa\u4e86\u4e00\u4e2a\u8bc4\u5206\u4f30\u8ba1\u503c  def   svdEst ( dataMat ,   user ,   simMeas ,   item ): \n     svdEst(\u8ba1\u7b97\u67d0\u7528\u6237\u672a\u8bc4\u5206\u7269\u54c1\u4e2d\uff0c\u4ee5\u5bf9\u8be5\u7269\u54c1\u548c\u5176\u4ed6\u7269\u54c1\u8bc4\u5206\u7684\u7528\u6237\u7684\u7269\u54c1\u76f8\u4f3c\u5ea6\uff0c\u7136\u540e\u8fdb\u884c\u7efc\u5408\u8bc4\u5206)      Args:          dataMat         \u8bad\u7ec3\u6570\u636e\u96c6          user            \u7528\u6237\u7f16\u53f7          simMeas         \u76f8\u4f3c\u5ea6\u8ba1\u7b97\u65b9\u6cd5          item            \u672a\u8bc4\u5206\u7684\u7269\u54c1\u7f16\u53f7      Returns:          ratSimTotal/simTotal     \u8bc4\u5206\uff080\uff5e5\u4e4b\u95f4\u7684\u503c\uff09       \n     # \u7269\u54c1\u6570\u76ee \n     n   =   shape ( dataMat )[ 1 ] \n     # \u5bf9\u6570\u636e\u96c6\u8fdb\u884cSVD\u5206\u89e3 \n     simTotal   =   0.0 \n     ratSimTotal   =   0.0 \n     # \u5947\u5f02\u503c\u5206\u89e3 \n     # \u5728SVD\u5206\u89e3\u4e4b\u540e\uff0c\u6211\u4eec\u53ea\u5229\u7528\u5305\u542b\u4e8690%\u80fd\u91cf\u503c\u7684\u5947\u5f02\u503c\uff0c\u8fd9\u4e9b\u5947\u5f02\u503c\u4f1a\u4ee5NumPy\u6570\u7ec4\u7684\u5f62\u5f0f\u5f97\u4ee5\u4fdd\u5b58 \n     U ,   Sigma ,   VT   =   la . svd ( dataMat ) \n\n     # # \u5206\u6790 Sigma \u7684\u957f\u5ea6\u53d6\u503c \n     # analyse_data(Sigma, 20) \n\n     # \u5982\u679c\u8981\u8fdb\u884c\u77e9\u9635\u8fd0\u7b97\uff0c\u5c31\u5fc5\u987b\u8981\u7528\u8fd9\u4e9b\u5947\u5f02\u503c\u6784\u5efa\u51fa\u4e00\u4e2a\u5bf9\u89d2\u77e9\u9635 \n     Sig4   =   mat ( eye ( 4 )   *   Sigma [:   4 ]) \n     # \u5229\u7528U\u77e9\u9635\u5c06\u7269\u54c1\u8f6c\u6362\u5230\u4f4e\u7ef4\u7a7a\u95f4\u4e2d\uff0c\u6784\u5efa\u8f6c\u6362\u540e\u7684\u7269\u54c1(\u7269\u54c1+4\u4e2a\u4e3b\u8981\u7684\u7279\u5f81) \n     xformedItems   =   dataMat . T   *   U [:,   : 4 ]   *   Sig4 . I \n     # \u5bf9\u4e8e\u7ed9\u5b9a\u7684\u7528\u6237\uff0cfor\u5faa\u73af\u5728\u7528\u6237\u5bf9\u5e94\u884c\u7684\u5143\u7d20\u4e0a\u8fdb\u884c\u904d\u5386\uff0c \n     # \u8fd9\u548cstandEst()\u51fd\u6570\u4e2d\u7684for\u5faa\u73af\u7684\u76ee\u7684\u4e00\u6837\uff0c\u53ea\u4e0d\u8fc7\u8fd9\u91cc\u7684\u76f8\u4f3c\u5ea6\u8ba1\u7b97\u65f6\u5728\u4f4e\u7ef4\u7a7a\u95f4\u4e0b\u8fdb\u884c\u7684\u3002 \n     for   j   in   range ( n ): \n         userRating   =   dataMat [ user ,   j ] \n         if   userRating   ==   0   or   j   ==   item : \n             continue \n         # \u76f8\u4f3c\u5ea6\u7684\u8ba1\u7b97\u65b9\u6cd5\u4e5f\u4f1a\u4f5c\u4e3a\u4e00\u4e2a\u53c2\u6570\u4f20\u9012\u7ed9\u8be5\u51fd\u6570 \n         similarity   =   simMeas ( xformedItems [ item ,   :] . T ,   xformedItems [ j ,   :] . T ) \n         # for \u5faa\u73af\u4e2d\u52a0\u5165\u4e86\u4e00\u6761print\u8bed\u53e5\uff0c\u4ee5\u4fbf\u4e86\u89e3\u76f8\u4f3c\u5ea6\u8ba1\u7b97\u7684\u8fdb\u5c55\u60c5\u51b5\u3002\u5982\u679c\u89c9\u5f97\u7d2f\u8d58\uff0c\u53ef\u4ee5\u53bb\u6389 \n         print   the  %d  and  %d  similarity is:  %f   %   ( item ,   j ,   similarity ) \n         # \u5bf9\u76f8\u4f3c\u5ea6\u4e0d\u65ad\u7d2f\u52a0\u6c42\u548c \n         simTotal   +=   similarity \n         # \u5bf9\u76f8\u4f3c\u5ea6\u53ca\u5bf9\u5e94\u8bc4\u5206\u503c\u7684\u4e58\u79ef\u6c42\u548c \n         ratSimTotal   +=   similarity   *   userRating \n     if   simTotal   ==   0 : \n         return   0 \n     else : \n         # \u8ba1\u7b97\u4f30\u8ba1\u8bc4\u5206 \n         return   ratSimTotal / simTotal   \u6392\u5e8f\u83b7\u53d6\u6700\u540e\u7684\u63a8\u8350\u7ed3\u679c  # recommend()\u51fd\u6570\uff0c\u5c31\u662f\u63a8\u8350\u5f15\u64ce\uff0c\u5b83\u9ed8\u8ba4\u8c03\u7528standEst()\u51fd\u6570\uff0c\u4ea7\u751f\u4e86\u6700\u9ad8\u7684N\u4e2a\u63a8\u8350\u7ed3\u679c\u3002  # \u5982\u679c\u4e0d\u6307\u5b9aN\u7684\u5927\u5c0f\uff0c\u5219\u9ed8\u8ba4\u503c\u4e3a3\u3002\u8be5\u51fd\u6570\u53e6\u5916\u7684\u53c2\u6570\u8fd8\u5305\u62ec\u76f8\u4f3c\u5ea6\u8ba1\u7b97\u65b9\u6cd5\u548c\u4f30\u8ba1\u65b9\u6cd5  def   recommend ( dataMat ,   user ,   N = 3 ,   simMeas = cosSim ,   estMethod = standEst ): \n     # \u5bfb\u627e\u672a\u8bc4\u7ea7\u7684\u7269\u54c1 \n     # \u5bf9\u7ed9\u5b9a\u7684\u7528\u6237\u5efa\u7acb\u4e00\u4e2a\u672a\u8bc4\u5206\u7684\u7269\u54c1\u5217\u8868 \n     unratedItems   =   nonzero ( dataMat [ user ,   :] . A   ==   0 )[ 1 ] \n     # \u5982\u679c\u4e0d\u5b58\u5728\u672a\u8bc4\u5206\u7269\u54c1\uff0c\u90a3\u4e48\u5c31\u9000\u51fa\u51fd\u6570 \n     if   len ( unratedItems )   ==   0 : \n         return   you rated everything \n     # \u7269\u54c1\u7684\u7f16\u53f7\u548c\u8bc4\u5206\u503c \n     itemScores   =   [] \n     # \u5728\u672a\u8bc4\u5206\u7269\u54c1\u4e0a\u8fdb\u884c\u5faa\u73af \n     for   item   in   unratedItems : \n         estimatedScore   =   estMethod ( dataMat ,   user ,   simMeas ,   item ) \n         # \u5bfb\u627e\u524dN\u4e2a\u672a\u8bc4\u7ea7\u7269\u54c1\uff0c\u8c03\u7528standEst()\u6765\u4ea7\u751f\u8be5\u7269\u54c1\u7684\u9884\u6d4b\u5f97\u5206\uff0c\u8be5\u7269\u54c1\u7684\u7f16\u53f7\u548c\u4f30\u8ba1\u503c\u4f1a\u653e\u5728\u4e00\u4e2a\u5143\u7d20\u5217\u8868itemScores\u4e2d \n         itemScores . append (( item ,   estimatedScore )) \n         # \u6309\u7167\u4f30\u8ba1\u5f97\u5206\uff0c\u5bf9\u8be5\u5217\u8868\u8fdb\u884c\u6392\u5e8f\u5e76\u8fd4\u56de\u3002\u5217\u8868\u9006\u6392\u5e8f\uff0c\u7b2c\u4e00\u4e2a\u503c\u5c31\u662f\u6700\u5927\u503c \n     return   sorted ( itemScores ,   key = lambda   jj :   jj [ 1 ],   reverse = True )[:   N ]    \u6d4b\u8bd5 \u548c \u9879\u76ee\u8c03\u7528\uff0c\u53ef\u76f4\u63a5\u53c2\u8003\u6211\u4eec\u7684\u4ee3\u7801   \u5b8c\u6574\u4ee3\u7801\u5730\u5740 :  https://github.com/apachecn/MachineLearning/blob/master/src/python/14.SVD/svdRecommend.py", 
            "title": "\u5f00\u53d1\u6d41\u7a0b"
        }, 
        {
            "location": "/\u4e66\u7c4d/\u673a\u5668\u5b66\u4e60\u5b9e\u6218/14.\u5229\u7528SVD\u7b80\u5316\u6570\u636e/#_9", 
            "text": "\u57fa\u4e8e\u5185\u5bb9(content-based)\u7684\u63a8\u8350    \u901a\u8fc7\u5404\u79cd\u6807\u7b7e\u6765\u6807\u8bb0\u83dc\u80b4  \u5c06\u8fd9\u4e9b\u5c5e\u6027\u4f5c\u4e3a\u76f8\u4f3c\u5ea6\u8ba1\u7b97\u6240\u9700\u8981\u7684\u6570\u636e  \u8fd9\u5c31\u662f\uff1a\u57fa\u4e8e\u5185\u5bb9\u7684\u63a8\u8350\u3002    \u6784\u5efa\u63a8\u8350\u5f15\u64ce\u9762\u4e34\u7684\u6311\u6218   \u95ee\u9898\n* 1\uff09\u5728\u5927\u89c4\u6a21\u7684\u6570\u636e\u96c6\u4e0a\uff0cSVD\u5206\u89e3\u4f1a\u964d\u4f4e\u7a0b\u5e8f\u7684\u901f\u5ea6\n* 2\uff09\u5b58\u5728\u5176\u4ed6\u5f88\u591a\u89c4\u6a21\u6269\u5c55\u6027\u7684\u6311\u6218\u6027\u95ee\u9898\uff0c\u6bd4\u5982\u77e9\u9635\u7684\u8868\u793a\u65b9\u6cd5\u548c\u8ba1\u7b97\u76f8\u4f3c\u5ea6\u5f97\u5206\u6d88\u8017\u8d44\u6e90\u3002\n* 3\uff09\u5982\u4f55\u5728\u7f3a\u4e4f\u6570\u636e\u65f6\u7ed9\u51fa\u597d\u7684\u63a8\u8350-\u79f0\u4e3a\u51b7\u542f\u52a8\u3010\u7b80\u5355\u8bf4\uff1a\u7528\u6237\u4e0d\u4f1a\u559c\u6b22\u4e00\u4e2a\u65e0\u6548\u7684\u7269\u54c1\uff0c\u800c\u7528\u6237\u4e0d\u559c\u6b22\u7684\u7269\u54c1\u53c8\u65e0\u6548\u3011  \u5efa\u8bae\n* 1\uff09\u5728\u5927\u578b\u7cfb\u7edf\u4e2d\uff0cSVD\u5206\u89e3(\u53ef\u4ee5\u5728\u7a0b\u5e8f\u8c03\u5165\u65f6\u8fd0\u884c\u4e00\u6b21)\u6bcf\u5929\u8fd0\u884c\u4e00\u6b21\u6216\u8005\u5176\u9891\u7387\u66f4\u4f4e\uff0c\u5e76\u4e14\u8fd8\u8981\u79bb\u7ebf\u8fd0\u884c\u3002\n* 2\uff09\u5728\u5b9e\u9645\u4e2d\uff0c\u53e6\u4e00\u4e2a\u666e\u904d\u7684\u505a\u6cd5\u5c31\u662f\u79bb\u7ebf\u8ba1\u7b97\u5e76\u4fdd\u5b58\u76f8\u4f3c\u5ea6\u5f97\u5206\u3002(\u7269\u54c1\u76f8\u4f3c\u5ea6\u53ef\u80fd\u88ab\u7528\u6237\u91cd\u590d\u7684\u8c03\u7528)\n* 3\uff09\u51b7\u542f\u52a8\u95ee\u9898\uff0c\u89e3\u51b3\u65b9\u6848\u5c31\u662f\u5c06\u63a8\u8350\u770b\u6210\u662f\u641c\u7d22\u95ee\u9898\uff0c\u901a\u8fc7\u5404\u79cd\u6807\u7b7e\uff0f\u5c5e\u6027\u7279\u5f81\u8fdb\u884c \u57fa\u4e8e\u5185\u5bb9\u7684\u63a8\u8350 \u3002", 
            "title": "\u8981\u70b9\u8865\u5145"
        }, 
        {
            "location": "/\u4e66\u7c4d/\u673a\u5668\u5b66\u4e60\u5b9e\u6218/14.\u5229\u7528SVD\u7b80\u5316\u6570\u636e/#svd_5", 
            "text": "\u6536\u96c6 \u5e76 \u51c6\u5907\u6570\u636e   \u5c06\u6587\u672c\u6570\u636e\u8f6c\u5316\u4e3a\u77e9\u9635  # \u52a0\u8f7d\u5e76\u8f6c\u6362\u6570\u636e  def   imgLoadData ( filename ): \n     myl   =   [] \n     # \u6253\u5f00\u6587\u672c\u6587\u4ef6\uff0c\u5e76\u4ece\u6587\u4ef6\u4ee5\u6570\u7ec4\u65b9\u5f0f\u8bfb\u5165\u5b57\u7b26 \n     for   line   in   open ( filename ) . readlines (): \n         newRow   =   [] \n         for   i   in   range ( 32 ): \n             newRow . append ( int ( line [ i ])) \n         myl . append ( newRow ) \n     # \u77e9\u9635\u8c03\u5165\u540e\uff0c\u5c31\u53ef\u4ee5\u5728\u5c4f\u5e55\u4e0a\u8f93\u51fa\u8be5\u77e9\u9635 \n     myMat   =   mat ( myl ) \n     return   myMat    \u5206\u6790\u6570\u636e: \u5206\u6790 Sigma \u7684\u957f\u5ea6\u4e2a\u6570   \u901a\u5e38\u4fdd\u7559\u77e9\u9635 80% \uff5e 90% \u7684\u80fd\u91cf\uff0c\u5c31\u53ef\u4ee5\u5f97\u5230\u91cd\u8981\u7684\u7279\u5f81\u5e76\u53bb\u9664\u566a\u58f0\u3002  def   analyse_data ( Sigma ,   loopNum = 20 ): \n     analyse_data(\u5206\u6790 Sigma \u7684\u957f\u5ea6\u53d6\u503c)      Args:          Sigma         Sigma\u7684\u503c          loopNum       \u5faa\u73af\u6b21\u6570       \n     # \u603b\u65b9\u5dee\u7684\u96c6\u5408\uff08\u603b\u80fd\u91cf\u503c\uff09 \n     Sig2   =   Sigma ** 2 \n     SigmaSum   =   sum ( Sig2 ) \n     for   i   in   range ( loopNum ): \n         SigmaI   =   sum ( Sig2 [: i + 1 ]) \n                  \u6839\u636e\u81ea\u5df1\u7684\u4e1a\u52a1\u60c5\u51b5\uff0c\u5c31\u884c\u5904\u7406\uff0c\u8bbe\u7f6e\u5bf9\u5e94\u7684 Singma \u6b21\u6570          \u901a\u5e38\u4fdd\u7559\u77e9\u9635 80% \uff5e 90% \u7684\u80fd\u91cf\uff0c\u5c31\u53ef\u4ee5\u5f97\u5230\u91cd\u8981\u7684\u7279\u5f81\u5e76\u53d6\u51fa\u566a\u58f0\u3002           \n         print   \u4e3b\u6210\u5206\uff1a %s , \u65b9\u5dee\u5360\u6bd4\uff1a %s%%   %   ( format ( i + 1 ,   2.0f ),   format ( SigmaI / SigmaSum * 100 ,   4.2f ))    \u4f7f\u7528\u7b97\u6cd5: \u5bf9\u6bd4\u4f7f\u7528 SVD \u524d\u540e\u7684\u6570\u636e\u5dee\u5f02\u5bf9\u6bd4\uff0c\u5bf9\u4e8e\u5b58\u50a8\u5927\u5bb6\u53ef\u4ee5\u8bd5\u7740\u5199\u5199   \u4f8b\u5982\uff1a 32*32=1024 =  32*2+2*1+32*2=130 (2*1\u8868\u793a\u53bb\u6389\u4e86\u9664\u5bf9\u89d2\u7ebf\u76840), \u51e0\u4e4e\u83b7\u5f97\u4e8610\u500d\u7684\u538b\u7f29\u6bd4\u3002  # \u6253\u5370\u77e9\u9635  def   printMat ( inMat ,   thresh = 0.8 ): \n     # \u7531\u4e8e\u77e9\u9635\u4fdd\u62a4\u4e86\u6d6e\u70b9\u6570\uff0c\u56e0\u6b64\u5b9a\u4e49\u6d45\u8272\u548c\u6df1\u8272\uff0c\u904d\u5386\u6240\u6709\u77e9\u9635\u5143\u7d20\uff0c\u5f53\u5143\u7d20\u5927\u4e8e\u9600\u503c\u65f6\u6253\u53701\uff0c\u5426\u5219\u6253\u53700 \n     for   i   in   range ( 32 ): \n         for   k   in   range ( 32 ): \n             if   float ( inMat [ i ,   k ])     thresh : \n                 print   1 , \n             else : \n                 print   0 , \n         print    # \u5b9e\u73b0\u56fe\u50cf\u538b\u7f29\uff0c\u5141\u8bb8\u57fa\u4e8e\u4efb\u610f\u7ed9\u5b9a\u7684\u5947\u5f02\u503c\u6570\u76ee\u6765\u91cd\u6784\u56fe\u50cf  def   imgCompress ( numSV = 3 ,   thresh = 0.8 ): \n     imgCompress( )      Args:          numSV       Sigma\u957f\u5ea6             thresh      \u5224\u65ad\u7684\u9608\u503c       \n     # \u6784\u5efa\u4e00\u4e2a\u5217\u8868 \n     myMat   =   imgLoadData ( input/14.SVD/0_5.txt ) \n\n     print   ****original matrix**** \n     # \u5bf9\u539f\u59cb\u56fe\u50cf\u8fdb\u884cSVD\u5206\u89e3\u5e76\u91cd\u6784\u56fe\u50cfe \n     printMat ( myMat ,   thresh ) \n\n     # \u901a\u8fc7Sigma \u91cd\u65b0\u6784\u6210SigRecom\u6765\u5b9e\u73b0 \n     # Sigma\u662f\u4e00\u4e2a\u5bf9\u89d2\u77e9\u9635\uff0c\u56e0\u6b64\u9700\u8981\u5efa\u7acb\u4e00\u4e2a\u51680\u77e9\u9635\uff0c\u7136\u540e\u5c06\u524d\u9762\u7684\u90a3\u4e9b\u5947\u5f02\u503c\u586b\u5145\u5230\u5bf9\u89d2\u7ebf\u4e0a\u3002 \n     U ,   Sigma ,   VT   =   la . svd ( myMat ) \n     # SigRecon = mat(zeros((numSV, numSV))) \n     # for k in range(numSV): \n     #     SigRecon[k, k] = Sigma[k] \n\n     # \u5206\u6790\u63d2\u5165\u7684 Sigma \u957f\u5ea6 \n     analyse_data ( Sigma ,   20 ) \n\n     SigRecon   =   mat ( eye ( numSV )   *   Sigma [:   numSV ]) \n     reconMat   =   U [:,   : numSV ]   *   SigRecon   *   VT [: numSV ,   :] \n     print   ****reconstructed matrix using  %d  singular values *****   %   numSV \n     printMat ( reconMat ,   thresh )   \u5b8c\u6574\u4ee3\u7801\u5730\u5740 :  https://github.com/apachecn/MachineLearning/blob/master/src/python/14.SVD/svdRecommend.py    \u4f5c\u8005\uff1a \u7247\u523b   1988  GitHub\u5730\u5740 :  https://github.com/apachecn/MachineLearning  \u7248\u6743\u58f0\u660e\uff1a\u6b22\u8fce\u8f6c\u8f7d\u5b66\u4e60 =  \u8bf7\u6807\u6ce8\u4fe1\u606f\u6765\u6e90\u4e8e  ApacheCN", 
            "title": "\u9879\u76ee\u6848\u4f8b: \u57fa\u4e8e SVD \u7684\u56fe\u50cf\u538b\u7f29"
        }, 
        {
            "location": "/\u4e66\u7c4d/\u673a\u5668\u5b66\u4e60\u5b9e\u6218/15.\u5927\u6570\u636e\u4e0eMapReduce/", 
            "text": "\u7b2c15\u7ae0 \u5927\u6570\u636e\u4e0eMapReduce\n\n\n\u5927\u6570\u636e \u6982\u8ff0\n\n\n\u5927\u6570\u636e: \u6536\u96c6\u5230\u7684\u6570\u636e\u5df2\u7ecf\u8fdc\u8fdc\u8d85\u51fa\u4e86\u6211\u4eec\u7684\u5904\u7406\u80fd\u529b\u3002\n\n\n\u5927\u6570\u636e \u573a\u666f\n\n\n\u5047\u5982\u4f60\u4e3a\u4e00\u5bb6\u7f51\u7edc\u8d2d\u7269\u5546\u5e97\u5de5\u4f5c\uff0c\u5f88\u591a\u7528\u6237\u8bbf\u95ee\u8be5\u7f51\u7ad9\uff0c\u5176\u4e2d\u6709\u4e9b\u4eba\u4f1a\u8d2d\u4e70\u5546\u54c1\uff0c\u6709\u4e9b\u4eba\u5219\u968f\u610f\u6d4f\u89c8\u540e\u5c31\u79bb\u5f00\u3002\n\u5bf9\u4e8e\u4f60\u6765\u8bf4\uff0c\u53ef\u80fd\u5f88\u60f3\u8bc6\u522b\u90a3\u4e9b\u6709\u8d2d\u7269\u610f\u613f\u7684\u7528\u6237\u3002\n\u90a3\u4e48\u95ee\u9898\u5c31\u6765\u4e86\uff0c\u6570\u636e\u96c6\u53ef\u80fd\u4f1a\u975e\u5e38\u5927\uff0c\u5728\u5355\u673a\u4e0a\u8bad\u7ec3\u8981\u8fd0\u884c\u597d\u51e0\u5929\u3002\n\u63a5\u4e0b\u6765\uff1a\u6211\u4eec\u8bb2\u8bb2 MapRedece \u5982\u4f55\u6765\u89e3\u51b3\u8fd9\u6837\u7684\u95ee\u9898\n\n\n\n\nMapRedece\n\n\nHadoop \u6982\u8ff0\n\n\nHadoop \u662f MapRedece \u6846\u67b6\u7684\u4e00\u4e2a\u514d\u8d39\u5f00\u6e90\u5b9e\u73b0\u3002\nMapReduce: \u5206\u5e03\u5f0f\u7684\u8ba1\u7b97\u6846\u67b6\uff0c\u53ef\u4ee5\u5c06\u5355\u4e2a\u8ba1\u7b97\u4f5c\u4e1a\u5206\u914d\u7ed9\u591a\u53f0\u8ba1\u7b97\u673a\u6267\u884c\u3002\n\n\n\n\nMapRedece \u539f\u7406\n\n\n\n\nMapRedece \u5de5\u4f5c\u539f\u7406\n\n\n\n\n\n\n\u4e3b\u8282\u70b9\u63a7\u5236 MapReduce \u7684\u4f5c\u4e1a\u6d41\u7a0b\n\n\nMapReduce \u7684\u4f5c\u4e1a\u53ef\u4ee5\u5206\u6210map\u4efb\u52a1\u548creduce\u4efb\u52a1\n\n\nmap \u4efb\u52a1\u4e4b\u95f4\u4e0d\u505a\u6570\u636e\u4ea4\u6d41\uff0creduce \u4efb\u52a1\u4e5f\u4e00\u6837\n\n\n\u5728 map \u548c reduce \u9636\u6bb5\u4e2d\u95f4\uff0c\u6709\u4e00\u4e2a sort \u548c combine \u9636\u6bb5\n\n\n\u6570\u636e\u88ab\u91cd\u590d\u5b58\u653e\u5728\u4e0d\u540c\u7684\u673a\u5668\u4e0a\uff0c\u4ee5\u9632\u6b62\u67d0\u4e2a\u673a\u5668\u5931\u6548\n\n\nmapper \u548c reducer \u4f20\u8f93\u7684\u6570\u636e\u5f62\u5f0f\u4e3a key/value\u5bf9\n\n\n\n\n\n\n\n\nMapRedece \u7279\u70b9\n\n\n\n\n\u4f18\u70b9: \u4f7f\u7a0b\u5e8f\u4ee5\u5e76\u884c\u7684\u65b9\u5f0f\u6267\u884c\uff0c\u53ef\u5728\u77ed\u65f6\u95f4\u5185\u5b8c\u6210\u5927\u91cf\u5de5\u4f5c\u3002\n\u7f3a\u70b9: \u7b97\u6cd5\u5fc5\u987b\u7ecf\u8fc7\u91cd\u5199\uff0c\u9700\u8981\u5bf9\u7cfb\u7edf\u5de5\u7a0b\u6709\u4e00\u5b9a\u7684\u7406\u89e3\u3002\n\u9002\u7528\u6570\u636e\u7c7b\u578b: \u6570\u503c\u578b\u548c\u6807\u79f0\u578b\u6570\u636e\u3002\n\n\n\n\nHadoop \u6d41(Python \u8c03\u7528)\n\n\n\n\n\u7406\u8bba\u7b80\u4ecb\n\n\n\n\n\u4f8b\u5982: Hadoop\u6d41\u53ef\u4ee5\u50cfLinux\u547d\u4ee4\u4e00\u6837\u6267\u884c\n\n\ncat inputFile.txt \n|\n python mapper.py \n|\n sort \n|\n python reducer.py \n outputFile.txt\n\n\n\n\n\u7c7b\u4f3c\u7684Hadoop\u6d41\u5c31\u53ef\u4ee5\u5728\u591a\u53f0\u673a\u5668\u4e0a\u5206\u5e03\u5f0f\u6267\u884c\uff0c\u7528\u6237\u53ef\u4ee5\u901a\u8fc7Linux\u547d\u4ee4\u6765\u6d4b\u8bd5Python\u8bed\u8a00\u7f16\u5199\u7684MapReduce\u811a\u672c\u3002\n\n\n\n\n\u5b9e\u6218\u811a\u672c\n\n\n\n\n# \u6d4b\u8bd5 Mapper\n# Linux\ncat input/15.BigData_MapReduce/inputFile.txt | python src/python/15.BigData_MapReduce/mrMeanMapper.py\n# Window\n# python src/python/15.BigData_MapReduce/mrMeanMapper.py \n input/15.BigData_MapReduce/inputFile.txt\n\n# \u6d4b\u8bd5 Reducer\n# Linux\ncat input/15.BigData_MapReduce/inputFile.txt | python src/python/15.BigData_MapReduce/mrMeanMapper.py | python src/python/15.BigData_MapReduce/mrMeanReducer.py\n# Window\n# python src/python/15.BigData_MapReduce/mrMeanMapper.py \n input/15.BigData_MapReduce/inputFile.txt | python src/python/15.BigData_MapReduce/mrMeanReducer.py\n\n\n\n\nMapReduce \u673a\u5668\u5b66\u4e60\n\n\nMahout in Action\n\n\n\n\n\u7b80\u5355\u8d1d\u53f6\u65af\uff1a\u5b83\u5c5e\u4e8e\u4e3a\u6570\u4e0d\u591a\u7684\u53ef\u4ee5\u5f88\u81ea\u7136\u7684\u4f7f\u7528MapReduce\u7684\u7b97\u6cd5\u3002\u901a\u8fc7\u7edf\u8ba1\u5728\u67d0\u4e2a\u7c7b\u522b\u4e0b\u67d0\u7279\u5f81\u7684\u6982\u7387\u3002\n\n\nk-\u8fd1\u90bb\u7b97\u6cd5\uff1a\u9ad8\u7ef4\u6570\u636e\u4e0b\uff08\u5982\u6587\u672c\u3001\u56fe\u50cf\u548c\u89c6\u9891\uff09\u6d41\u884c\u7684\u8fd1\u90bb\u67e5\u627e\u65b9\u6cd5\u662f\u5c40\u90e8\u654f\u611f\u54c8\u5e0c\u7b97\u6cd5\u3002\n\n\n\u652f\u6301\u5411\u91cf\u673a(SVM)\uff1a\u4f7f\u7528\u968f\u673a\u68af\u5ea6\u4e0b\u964d\u7b97\u6cd5\u6c42\u89e3\uff0c\u5982Pegasos\u7b97\u6cd5\u3002\n\n\n\u5947\u5f02\u503c\u5206\u89e3\uff1aLanczos\u7b97\u6cd5\u662f\u4e00\u4e2a\u6709\u6548\u7684\u6c42\u89e3\u8fd1\u4f3c\u7279\u5f81\u503c\u7684\u7b97\u6cd5\u3002\n\n\nk-\u5747\u503c\u805a\u7c7b\uff1acanopy\u7b97\u6cd5\u521d\u59cb\u5316k\u4e2a\u7c07\uff0c\u7136\u540e\u518d\u8fd0\u884cK-\u5747\u503c\u6c42\u89e3\u7ed3\u679c\u3002\n\n\n\n\n\u4f7f\u7528 mrjob \u5e93\u5c06 MapReduce \u81ea\u52a8\u5316\n\n\n\n\n\u7406\u8bba\u7b80\u4ecb\n\n\n\n\n\n\nMapReduce \u4f5c\u4e1a\u6d41\u81ea\u52a8\u5316\u7684\u6846\u67b6\uff1aCascading \u548c Oozie.\n\n\nmrjob \u662f\u4e00\u4e2a\u4e0d\u9519\u7684\u5b66\u4e60\u5de5\u5177\uff0c\u4e0e2010\u5e74\u5e95\u5b9e\u73b0\u4e86\u5f00\u6e90\uff0c\u6765\u4e4b\u4e8e Yelp(\u4e00\u4e2a\u9910\u5385\u70b9\u8bc4\u7f51\u7ad9).\n\n\n\n\npython src/python/15.BigData_MapReduce/mrMean.py \n input/15.BigData_MapReduce/inputFile.txt \n input/15.BigData_MapReduce/myOut.txt\n\n\n\n\n\n\n\u5b9e\u6218\u811a\u672c\n\n\n\n\n# \u6d4b\u8bd5 mrjob\u7684\u6848\u4f8b\n# \u5148\u6d4b\u8bd5\u4e00\u4e0bmapper\u65b9\u6cd5\n# python src/python/15.BigData_MapReduce/mrMean.py --mapper \n input/15.BigData_MapReduce/inputFile.txt\n# \u8fd0\u884c\u6574\u4e2a\u7a0b\u5e8f\uff0c\u79fb\u9664 --mapper \u5c31\u884c\npython src/python/15.BigData_MapReduce/mrMean.py \n input/15.BigData_MapReduce/inputFile.txt\n\n\n\n\n\u9879\u76ee\u6848\u4f8b\uff1a\u5206\u5e03\u5f0f SVM \u7684 Pegasos \u7b97\u6cd5\n\n\nPegasos\u662f\u6307\u539f\u59cb\u4f30\u8ba1\u68af\u5ea6\u6c42\u89e3\u5668(Peimal Estimated sub-GrAdient Solver)\n\n\nPegasos \u5de5\u4f5c\u539f\u7406\n\n\n\n\n\u4ece\u8bad\u7ec3\u96c6\u4e2d\u968f\u673a\u6311\u9009\u4e00\u4e9b\u6837\u672c\u70b9\u6dfb\u52a0\u5230\u5f85\u5904\u7406\u5217\u8868\u4e2d\n\n\n\u6309\u5e8f\u5224\u65ad\u6bcf\u4e2a\u6837\u672c\u70b9\u662f\u5426\u88ab\u6b63\u786e\u5206\u7c7b\n\n\n\u5982\u679c\u662f\u5219\u5ffd\u7565\n\n\n\u5982\u679c\u4e0d\u662f\u5219\u5c06\u5176\u52a0\u5165\u5230\u5f85\u66f4\u65b0\u96c6\u5408\u3002\n\n\n\n\n\n\n\u6279\u5904\u7406\u5b8c\u6bd5\u540e\uff0c\u6743\u91cd\u5411\u91cf\u6309\u7167\u8fd9\u4e9b\u9519\u5206\u7684\u6837\u672c\u8fdb\u884c\u66f4\u65b0\u3002\n\n\n\n\n\u4e0a\u8ff0\u7b97\u6cd5\u4f2a\u4ee3\u7801\u5982\u4e0b\uff1a\n\n\n\u5c06 \u56de\u5f52\u7cfb\u6570w \u521d\u59cb\u5316\u4e3a0\n\u5bf9\u6bcf\u6b21\u6279\u5904\u7406\n    \u968f\u673a\u9009\u62e9 k \u4e2a\u6837\u672c\u70b9(\u5411\u91cf)\n    \u5bf9\u6bcf\u4e2a\u5411\u91cf\n        \u5982\u679c\u8be5\u5411\u91cf\u88ab\u9519\u5206\uff1a\n            \u66f4\u65b0\u6743\u91cd\u5411\u91cf w\n    \u7d2f\u52a0\u5bf9 w \u7684\u66f4\u65b0\n\n\n\n\n\u5f00\u53d1\u6d41\u7a0b\n\n\n\u6536\u96c6\u6570\u636e\uff1a\u6570\u636e\u6309\u6587\u672c\u683c\u5f0f\u5b58\u653e\u3002\n\u51c6\u5907\u6570\u636e\uff1a\u8f93\u5165\u6570\u636e\u5df2\u7ecf\u662f\u53ef\u7528\u7684\u683c\u5f0f\uff0c\u6240\u4ee5\u4e0d\u9700\u4efb\u4f55\u51c6\u5907\u5de5\u4f5c\u3002\u5982\u679c\u4f60\u9700\u8981\u89e3\u6790\u4e00\u4e2a\u5927\u89c4\u6a21\u7684\u6570\u636e\u96c6\uff0c\u5efa\u8bae\u4f7f\u7528 map \u4f5c\u4e1a\u6765\u5b8c\u6210\uff0c\u4ece\u800c\u8fbe\u5230\u5e76\u884c\u5904\u7406\u7684\u76ee\u7684\u3002\n\u5206\u6790\u6570\u636e\uff1a\u65e0\u3002\n\u8bad\u7ec3\u7b97\u6cd5\uff1a\u4e0e\u666e\u901a\u7684 SVM \u4e00\u6837\uff0c\u5728\u5206\u7c7b\u5668\u8bad\u7ec3\u4e0a\u4ecd\u9700\u82b1\u8d39\u5927\u91cf\u7684\u65f6\u95f4\u3002\n\u6d4b\u8bd5\u7b97\u6cd5\uff1a\u5728\u4e8c\u7ef4\u7a7a\u95f4\u4e0a\u53ef\u89c6\u5316\u4e4b\u540e\uff0c\u89c2\u5bdf\u8d85\u5e73\u9762\uff0c\u5224\u65ad\u7b97\u6cd5\u662f\u5426\u6709\u6548\u3002\n\u4f7f\u7528\u7b97\u6cd5\uff1a\u672c\u4f8b\u4e0d\u4f1a\u5c55\u793a\u4e00\u4e2a\u5b8c\u6574\u7684\u5e94\u7528\uff0c\u4f46\u4f1a\u5c55\u793a\u5982\u4f55\u5728\u5927\u6570\u636e\u96c6\u4e0a\u8bad\u7ec3SVM\u3002\u8be5\u7b97\u6cd5\u5176\u4e2d\u4e00\u4e2a\u5e94\u7528\u573a\u666f\u5c31\u662f\u672c\u6587\u5206\u7c7b\uff0c\u901a\u5e38\u5728\u6587\u672c\u5206\u7c7b\u91cc\u53ef\u80fd\u6709\u5927\u91cf\u7684\u6587\u6863\u548c\u6210\u5343\u4e0a\u4e07\u7684\u7279\u5f81\u3002\n\n\n\n\n\n\n\u6536\u96c6\u6570\u636e\n\n\n\n\n\u6587\u672c\u6587\u4ef6\u6570\u636e\u683c\u5f0f\u5982\u4e0b\uff1a\n\n\n0.365032\n        \n2.465645\n        \n-\n1\n\n\n-\n2.494175\n       \n-\n0.292380\n       \n-\n1\n\n\n-\n3.039364\n       \n-\n0.123108\n       \n-\n1\n\n\n1.348150\n        \n0.255696\n        \n1\n\n\n2.768494\n        \n1.234954\n        \n1\n\n\n1.232328\n        \n-\n0.601198\n       \n1\n\n\n\n\n\n\n\n\u51c6\u5907\u6570\u636e\n\n\n\n\ndef\n \nloadDataSet\n(\nfileName\n):\n\n    \ndataMat\n \n=\n \n[]\n\n    \nlabelMat\n \n=\n \n[]\n\n    \nfr\n \n=\n \nopen\n(\nfileName\n)\n\n    \nfor\n \nline\n \nin\n \nfr\n.\nreadlines\n():\n\n        \nlineArr\n \n=\n \nline\n.\nstrip\n()\n.\nsplit\n(\n\\t\n)\n\n        \n# dataMat.append([float(lineArr[0]), float(lineArr[1]), float(lineArr[2])])\n\n        \ndataMat\n.\nappend\n([\nfloat\n(\nlineArr\n[\n0\n]),\n \nfloat\n(\nlineArr\n[\n1\n])])\n\n        \nlabelMat\n.\nappend\n(\nfloat\n(\nlineArr\n[\n2\n]))\n\n    \nreturn\n \ndataMat\n,\n \nlabelMat\n\n\n\n\n\n\n\n\u5206\u6790\u6570\u636e: \u65e0\n\n\n\u8bad\u7ec3\u7b97\u6cd5\n\n\n\n\ndef\n \nbatchPegasos\n(\ndataSet\n,\n \nlabels\n,\n \nlam\n,\n \nT\n,\n \nk\n):\n\n    \nbatchPegasos()\n\n\n\n    Args:\n\n\n        dataMat    \u7279\u5f81\u96c6\u5408\n\n\n        labels     \u5206\u7c7b\u7ed3\u679c\u96c6\u5408\n\n\n        lam        \u56fa\u5b9a\u503c\n\n\n        T          \u8fed\u4ee3\u6b21\u6570\n\n\n        k          \u5f85\u5904\u7406\u5217\u8868\u5927\u5c0f\n\n\n    Returns:\n\n\n        w          \u56de\u5f52\u7cfb\u6570\n\n\n    \n\n    \nm\n,\n \nn\n \n=\n \nshape\n(\ndataSet\n)\n\n    \nw\n \n=\n \nzeros\n(\nn\n)\n  \n# \u56de\u5f52\u7cfb\u6570\n\n    \ndataIndex\n \n=\n \nrange\n(\nm\n)\n\n    \nfor\n \nt\n \nin\n \nrange\n(\n1\n,\n \nT\n+\n1\n):\n\n        \nwDelta\n \n=\n \nmat\n(\nzeros\n(\nn\n))\n  \n# \u91cd\u7f6e wDelta\n\n\n        \n# \u5b83\u662f\u5b66\u4e60\u7387\uff0c\u4ee3\u8868\u4e86\u6743\u91cd\u8c03\u6574\u5e45\u5ea6\u7684\u5927\u5c0f\u3002\uff08\u4e5f\u53ef\u4ee5\u7406\u89e3\u4e3a\u968f\u673a\u68af\u5ea6\u7684\u6b65\u957f\uff0c\u4f7f\u5b83\u4e0d\u65ad\u51cf\u5c0f\uff0c\u4fbf\u4e8e\u62df\u5408\uff09\n\n        \n# \u8f93\u5165T\u548cK\u5206\u522b\u8bbe\u5b9a\u4e86\u8fed\u4ee3\u6b21\u6570\u548c\u5f85\u5904\u7406\u5217\u8868\u7684\u5927\u5c0f\u3002\u5728T\u6b21\u8fed\u4ee3\u8fc7\u7a0b\u4e2d\uff0c\u6bcf\u6b21\u9700\u8981\u91cd\u65b0\u8ba1\u7b97eta\n\n        \neta\n \n=\n \n1.0\n/\n(\nlam\n*\nt\n)\n\n        \nrandom\n.\nshuffle\n(\ndataIndex\n)\n\n        \nfor\n \nj\n \nin\n \nrange\n(\nk\n):\n      \n# \u5168\u90e8\u7684\u8bad\u7ec3\u96c6  \u5185\u5faa\u73af\u4e2d\u6267\u884c\u6279\u5904\u7406\uff0c\u5c06\u5206\u7c7b\u9519\u8bef\u7684\u503c\u5168\u90e8\u505a\u7d2f\u52a0\u540e\u66f4\u65b0\u6743\u91cd\u5411\u91cf\n\n            \ni\n \n=\n \ndataIndex\n[\nj\n]\n\n            \np\n \n=\n \npredict\n(\nw\n,\n \ndataSet\n[\ni\n,\n \n:])\n              \n# mapper \u4ee3\u7801\n\n\n            \n# \u5982\u679c\u9884\u6d4b\u6b63\u786e\uff0c\u5e76\u4e14\u9884\u6d4b\u7ed3\u679c\u7684\u7edd\u5bf9\u503c\n=1\uff0c\u56e0\u4e3a\u6700\u5927\u95f4\u9694\u4e3a1, \u8ba4\u4e3a\u6ca1\u95ee\u9898\u3002\n\n            \n# \u5426\u5219\u7b97\u662f\u9884\u6d4b\u9519\u8bef, \u901a\u8fc7\u9884\u6d4b\u9519\u8bef\u7684\u7ed3\u679c\uff0c\u6765\u7d2f\u8ba1\u66f4\u65b0w.\n\n            \nif\n \nlabels\n[\ni\n]\n*\np\n \n \n1\n:\n                        \n# mapper \u4ee3\u7801\n\n                \nwDelta\n \n+=\n \nlabels\n[\ni\n]\n*\ndataSet\n[\ni\n,\n \n:]\n.\nA\n    \n# \u7d2f\u79ef\u53d8\u5316\n\n        \n# w\u901a\u8fc7\u4e0d\u65ad\u7684\u968f\u673a\u68af\u5ea6\u7684\u65b9\u5f0f\u6765\u4f18\u5316\n\n        \nw\n \n=\n \n(\n1.0\n \n-\n \n1\n/\nt\n)\n*\nw\n \n+\n \n(\neta\n/\nk\n)\n*\nwDelta\n             \n# \u5728\u6bcf\u4e2a T\u4e0a\u5e94\u7528\u66f4\u6539\n\n        \n# print \n-----\n, w\n\n    \n# print \n++++++\n, w\n\n    \nreturn\n \nw\n\n\n\n\n\n\u5b8c\u6574\u4ee3\u7801\u5730\u5740\n: \nhttps://github.com/apachecn/MachineLearning/blob/master/src/python/15.BigData_MapReduce/pegasos.py\n\n\n\u8fd0\u884c\u65b9\u5f0f\uff1a\npython /opt/git/MachineLearning/src/python/15.BigData_MapReduce/mrSVM.py \n input/15.BigData_MapReduce/inputFile.txt\n\n\nMR\u7248\u672c\u7684\u4ee3\u7801\u5730\u5740\n: \nhttps://github.com/apachecn/MachineLearning/blob/master/src/python/15.BigData_MapReduce/mrSVM.py\n\n\n\n\n\n\n\u4f5c\u8005\uff1a\n\u7247\u523b\n \n\u5c0f\u7476\n\n\nGitHub\u5730\u5740\n: \nhttps://github.com/apachecn/MachineLearning\n\n\n\u7248\u6743\u58f0\u660e\uff1a\u6b22\u8fce\u8f6c\u8f7d\u5b66\u4e60 =\n \u8bf7\u6807\u6ce8\u4fe1\u606f\u6765\u6e90\u4e8e \nApacheCN", 
            "title": "15.\u5927\u6570\u636e\u4e0eMapReduce"
        }, 
        {
            "location": "/\u4e66\u7c4d/\u673a\u5668\u5b66\u4e60\u5b9e\u6218/15.\u5927\u6570\u636e\u4e0eMapReduce/#15-mapreduce", 
            "text": "", 
            "title": "\u7b2c15\u7ae0 \u5927\u6570\u636e\u4e0eMapReduce"
        }, 
        {
            "location": "/\u4e66\u7c4d/\u673a\u5668\u5b66\u4e60\u5b9e\u6218/15.\u5927\u6570\u636e\u4e0eMapReduce/#_1", 
            "text": "\u5927\u6570\u636e: \u6536\u96c6\u5230\u7684\u6570\u636e\u5df2\u7ecf\u8fdc\u8fdc\u8d85\u51fa\u4e86\u6211\u4eec\u7684\u5904\u7406\u80fd\u529b\u3002", 
            "title": "\u5927\u6570\u636e \u6982\u8ff0"
        }, 
        {
            "location": "/\u4e66\u7c4d/\u673a\u5668\u5b66\u4e60\u5b9e\u6218/15.\u5927\u6570\u636e\u4e0eMapReduce/#_2", 
            "text": "\u5047\u5982\u4f60\u4e3a\u4e00\u5bb6\u7f51\u7edc\u8d2d\u7269\u5546\u5e97\u5de5\u4f5c\uff0c\u5f88\u591a\u7528\u6237\u8bbf\u95ee\u8be5\u7f51\u7ad9\uff0c\u5176\u4e2d\u6709\u4e9b\u4eba\u4f1a\u8d2d\u4e70\u5546\u54c1\uff0c\u6709\u4e9b\u4eba\u5219\u968f\u610f\u6d4f\u89c8\u540e\u5c31\u79bb\u5f00\u3002\n\u5bf9\u4e8e\u4f60\u6765\u8bf4\uff0c\u53ef\u80fd\u5f88\u60f3\u8bc6\u522b\u90a3\u4e9b\u6709\u8d2d\u7269\u610f\u613f\u7684\u7528\u6237\u3002\n\u90a3\u4e48\u95ee\u9898\u5c31\u6765\u4e86\uff0c\u6570\u636e\u96c6\u53ef\u80fd\u4f1a\u975e\u5e38\u5927\uff0c\u5728\u5355\u673a\u4e0a\u8bad\u7ec3\u8981\u8fd0\u884c\u597d\u51e0\u5929\u3002\n\u63a5\u4e0b\u6765\uff1a\u6211\u4eec\u8bb2\u8bb2 MapRedece \u5982\u4f55\u6765\u89e3\u51b3\u8fd9\u6837\u7684\u95ee\u9898", 
            "title": "\u5927\u6570\u636e \u573a\u666f"
        }, 
        {
            "location": "/\u4e66\u7c4d/\u673a\u5668\u5b66\u4e60\u5b9e\u6218/15.\u5927\u6570\u636e\u4e0eMapReduce/#mapredece", 
            "text": "", 
            "title": "MapRedece"
        }, 
        {
            "location": "/\u4e66\u7c4d/\u673a\u5668\u5b66\u4e60\u5b9e\u6218/15.\u5927\u6570\u636e\u4e0eMapReduce/#hadoop", 
            "text": "Hadoop \u662f MapRedece \u6846\u67b6\u7684\u4e00\u4e2a\u514d\u8d39\u5f00\u6e90\u5b9e\u73b0\u3002\nMapReduce: \u5206\u5e03\u5f0f\u7684\u8ba1\u7b97\u6846\u67b6\uff0c\u53ef\u4ee5\u5c06\u5355\u4e2a\u8ba1\u7b97\u4f5c\u4e1a\u5206\u914d\u7ed9\u591a\u53f0\u8ba1\u7b97\u673a\u6267\u884c\u3002", 
            "title": "Hadoop \u6982\u8ff0"
        }, 
        {
            "location": "/\u4e66\u7c4d/\u673a\u5668\u5b66\u4e60\u5b9e\u6218/15.\u5927\u6570\u636e\u4e0eMapReduce/#mapredece_1", 
            "text": "MapRedece \u5de5\u4f5c\u539f\u7406    \u4e3b\u8282\u70b9\u63a7\u5236 MapReduce \u7684\u4f5c\u4e1a\u6d41\u7a0b  MapReduce \u7684\u4f5c\u4e1a\u53ef\u4ee5\u5206\u6210map\u4efb\u52a1\u548creduce\u4efb\u52a1  map \u4efb\u52a1\u4e4b\u95f4\u4e0d\u505a\u6570\u636e\u4ea4\u6d41\uff0creduce \u4efb\u52a1\u4e5f\u4e00\u6837  \u5728 map \u548c reduce \u9636\u6bb5\u4e2d\u95f4\uff0c\u6709\u4e00\u4e2a sort \u548c combine \u9636\u6bb5  \u6570\u636e\u88ab\u91cd\u590d\u5b58\u653e\u5728\u4e0d\u540c\u7684\u673a\u5668\u4e0a\uff0c\u4ee5\u9632\u6b62\u67d0\u4e2a\u673a\u5668\u5931\u6548  mapper \u548c reducer \u4f20\u8f93\u7684\u6570\u636e\u5f62\u5f0f\u4e3a key/value\u5bf9     MapRedece \u7279\u70b9   \u4f18\u70b9: \u4f7f\u7a0b\u5e8f\u4ee5\u5e76\u884c\u7684\u65b9\u5f0f\u6267\u884c\uff0c\u53ef\u5728\u77ed\u65f6\u95f4\u5185\u5b8c\u6210\u5927\u91cf\u5de5\u4f5c\u3002\n\u7f3a\u70b9: \u7b97\u6cd5\u5fc5\u987b\u7ecf\u8fc7\u91cd\u5199\uff0c\u9700\u8981\u5bf9\u7cfb\u7edf\u5de5\u7a0b\u6709\u4e00\u5b9a\u7684\u7406\u89e3\u3002\n\u9002\u7528\u6570\u636e\u7c7b\u578b: \u6570\u503c\u578b\u548c\u6807\u79f0\u578b\u6570\u636e\u3002", 
            "title": "MapRedece \u539f\u7406"
        }, 
        {
            "location": "/\u4e66\u7c4d/\u673a\u5668\u5b66\u4e60\u5b9e\u6218/15.\u5927\u6570\u636e\u4e0eMapReduce/#hadoop-python", 
            "text": "\u7406\u8bba\u7b80\u4ecb   \u4f8b\u5982: Hadoop\u6d41\u53ef\u4ee5\u50cfLinux\u547d\u4ee4\u4e00\u6837\u6267\u884c  cat inputFile.txt  |  python mapper.py  |  sort  |  python reducer.py   outputFile.txt  \u7c7b\u4f3c\u7684Hadoop\u6d41\u5c31\u53ef\u4ee5\u5728\u591a\u53f0\u673a\u5668\u4e0a\u5206\u5e03\u5f0f\u6267\u884c\uff0c\u7528\u6237\u53ef\u4ee5\u901a\u8fc7Linux\u547d\u4ee4\u6765\u6d4b\u8bd5Python\u8bed\u8a00\u7f16\u5199\u7684MapReduce\u811a\u672c\u3002   \u5b9e\u6218\u811a\u672c   # \u6d4b\u8bd5 Mapper\n# Linux\ncat input/15.BigData_MapReduce/inputFile.txt | python src/python/15.BigData_MapReduce/mrMeanMapper.py\n# Window\n# python src/python/15.BigData_MapReduce/mrMeanMapper.py   input/15.BigData_MapReduce/inputFile.txt\n\n# \u6d4b\u8bd5 Reducer\n# Linux\ncat input/15.BigData_MapReduce/inputFile.txt | python src/python/15.BigData_MapReduce/mrMeanMapper.py | python src/python/15.BigData_MapReduce/mrMeanReducer.py\n# Window\n# python src/python/15.BigData_MapReduce/mrMeanMapper.py   input/15.BigData_MapReduce/inputFile.txt | python src/python/15.BigData_MapReduce/mrMeanReducer.py", 
            "title": "Hadoop \u6d41(Python \u8c03\u7528)"
        }, 
        {
            "location": "/\u4e66\u7c4d/\u673a\u5668\u5b66\u4e60\u5b9e\u6218/15.\u5927\u6570\u636e\u4e0eMapReduce/#mapreduce", 
            "text": "", 
            "title": "MapReduce \u673a\u5668\u5b66\u4e60"
        }, 
        {
            "location": "/\u4e66\u7c4d/\u673a\u5668\u5b66\u4e60\u5b9e\u6218/15.\u5927\u6570\u636e\u4e0eMapReduce/#mahout-in-action", 
            "text": "\u7b80\u5355\u8d1d\u53f6\u65af\uff1a\u5b83\u5c5e\u4e8e\u4e3a\u6570\u4e0d\u591a\u7684\u53ef\u4ee5\u5f88\u81ea\u7136\u7684\u4f7f\u7528MapReduce\u7684\u7b97\u6cd5\u3002\u901a\u8fc7\u7edf\u8ba1\u5728\u67d0\u4e2a\u7c7b\u522b\u4e0b\u67d0\u7279\u5f81\u7684\u6982\u7387\u3002  k-\u8fd1\u90bb\u7b97\u6cd5\uff1a\u9ad8\u7ef4\u6570\u636e\u4e0b\uff08\u5982\u6587\u672c\u3001\u56fe\u50cf\u548c\u89c6\u9891\uff09\u6d41\u884c\u7684\u8fd1\u90bb\u67e5\u627e\u65b9\u6cd5\u662f\u5c40\u90e8\u654f\u611f\u54c8\u5e0c\u7b97\u6cd5\u3002  \u652f\u6301\u5411\u91cf\u673a(SVM)\uff1a\u4f7f\u7528\u968f\u673a\u68af\u5ea6\u4e0b\u964d\u7b97\u6cd5\u6c42\u89e3\uff0c\u5982Pegasos\u7b97\u6cd5\u3002  \u5947\u5f02\u503c\u5206\u89e3\uff1aLanczos\u7b97\u6cd5\u662f\u4e00\u4e2a\u6709\u6548\u7684\u6c42\u89e3\u8fd1\u4f3c\u7279\u5f81\u503c\u7684\u7b97\u6cd5\u3002  k-\u5747\u503c\u805a\u7c7b\uff1acanopy\u7b97\u6cd5\u521d\u59cb\u5316k\u4e2a\u7c07\uff0c\u7136\u540e\u518d\u8fd0\u884cK-\u5747\u503c\u6c42\u89e3\u7ed3\u679c\u3002", 
            "title": "Mahout in Action"
        }, 
        {
            "location": "/\u4e66\u7c4d/\u673a\u5668\u5b66\u4e60\u5b9e\u6218/15.\u5927\u6570\u636e\u4e0eMapReduce/#mrjob-mapreduce", 
            "text": "\u7406\u8bba\u7b80\u4ecb    MapReduce \u4f5c\u4e1a\u6d41\u81ea\u52a8\u5316\u7684\u6846\u67b6\uff1aCascading \u548c Oozie.  mrjob \u662f\u4e00\u4e2a\u4e0d\u9519\u7684\u5b66\u4e60\u5de5\u5177\uff0c\u4e0e2010\u5e74\u5e95\u5b9e\u73b0\u4e86\u5f00\u6e90\uff0c\u6765\u4e4b\u4e8e Yelp(\u4e00\u4e2a\u9910\u5385\u70b9\u8bc4\u7f51\u7ad9).   python src/python/15.BigData_MapReduce/mrMean.py   input/15.BigData_MapReduce/inputFile.txt   input/15.BigData_MapReduce/myOut.txt   \u5b9e\u6218\u811a\u672c   # \u6d4b\u8bd5 mrjob\u7684\u6848\u4f8b\n# \u5148\u6d4b\u8bd5\u4e00\u4e0bmapper\u65b9\u6cd5\n# python src/python/15.BigData_MapReduce/mrMean.py --mapper   input/15.BigData_MapReduce/inputFile.txt\n# \u8fd0\u884c\u6574\u4e2a\u7a0b\u5e8f\uff0c\u79fb\u9664 --mapper \u5c31\u884c\npython src/python/15.BigData_MapReduce/mrMean.py   input/15.BigData_MapReduce/inputFile.txt", 
            "title": "\u4f7f\u7528 mrjob \u5e93\u5c06 MapReduce \u81ea\u52a8\u5316"
        }, 
        {
            "location": "/\u4e66\u7c4d/\u673a\u5668\u5b66\u4e60\u5b9e\u6218/15.\u5927\u6570\u636e\u4e0eMapReduce/#svm-pegasos", 
            "text": "Pegasos\u662f\u6307\u539f\u59cb\u4f30\u8ba1\u68af\u5ea6\u6c42\u89e3\u5668(Peimal Estimated sub-GrAdient Solver)", 
            "title": "\u9879\u76ee\u6848\u4f8b\uff1a\u5206\u5e03\u5f0f SVM \u7684 Pegasos \u7b97\u6cd5"
        }, 
        {
            "location": "/\u4e66\u7c4d/\u673a\u5668\u5b66\u4e60\u5b9e\u6218/15.\u5927\u6570\u636e\u4e0eMapReduce/#pegasos", 
            "text": "\u4ece\u8bad\u7ec3\u96c6\u4e2d\u968f\u673a\u6311\u9009\u4e00\u4e9b\u6837\u672c\u70b9\u6dfb\u52a0\u5230\u5f85\u5904\u7406\u5217\u8868\u4e2d  \u6309\u5e8f\u5224\u65ad\u6bcf\u4e2a\u6837\u672c\u70b9\u662f\u5426\u88ab\u6b63\u786e\u5206\u7c7b  \u5982\u679c\u662f\u5219\u5ffd\u7565  \u5982\u679c\u4e0d\u662f\u5219\u5c06\u5176\u52a0\u5165\u5230\u5f85\u66f4\u65b0\u96c6\u5408\u3002    \u6279\u5904\u7406\u5b8c\u6bd5\u540e\uff0c\u6743\u91cd\u5411\u91cf\u6309\u7167\u8fd9\u4e9b\u9519\u5206\u7684\u6837\u672c\u8fdb\u884c\u66f4\u65b0\u3002   \u4e0a\u8ff0\u7b97\u6cd5\u4f2a\u4ee3\u7801\u5982\u4e0b\uff1a  \u5c06 \u56de\u5f52\u7cfb\u6570w \u521d\u59cb\u5316\u4e3a0\n\u5bf9\u6bcf\u6b21\u6279\u5904\u7406\n    \u968f\u673a\u9009\u62e9 k \u4e2a\u6837\u672c\u70b9(\u5411\u91cf)\n    \u5bf9\u6bcf\u4e2a\u5411\u91cf\n        \u5982\u679c\u8be5\u5411\u91cf\u88ab\u9519\u5206\uff1a\n            \u66f4\u65b0\u6743\u91cd\u5411\u91cf w\n    \u7d2f\u52a0\u5bf9 w \u7684\u66f4\u65b0", 
            "title": "Pegasos \u5de5\u4f5c\u539f\u7406"
        }, 
        {
            "location": "/\u4e66\u7c4d/\u673a\u5668\u5b66\u4e60\u5b9e\u6218/15.\u5927\u6570\u636e\u4e0eMapReduce/#_3", 
            "text": "\u6536\u96c6\u6570\u636e\uff1a\u6570\u636e\u6309\u6587\u672c\u683c\u5f0f\u5b58\u653e\u3002\n\u51c6\u5907\u6570\u636e\uff1a\u8f93\u5165\u6570\u636e\u5df2\u7ecf\u662f\u53ef\u7528\u7684\u683c\u5f0f\uff0c\u6240\u4ee5\u4e0d\u9700\u4efb\u4f55\u51c6\u5907\u5de5\u4f5c\u3002\u5982\u679c\u4f60\u9700\u8981\u89e3\u6790\u4e00\u4e2a\u5927\u89c4\u6a21\u7684\u6570\u636e\u96c6\uff0c\u5efa\u8bae\u4f7f\u7528 map \u4f5c\u4e1a\u6765\u5b8c\u6210\uff0c\u4ece\u800c\u8fbe\u5230\u5e76\u884c\u5904\u7406\u7684\u76ee\u7684\u3002\n\u5206\u6790\u6570\u636e\uff1a\u65e0\u3002\n\u8bad\u7ec3\u7b97\u6cd5\uff1a\u4e0e\u666e\u901a\u7684 SVM \u4e00\u6837\uff0c\u5728\u5206\u7c7b\u5668\u8bad\u7ec3\u4e0a\u4ecd\u9700\u82b1\u8d39\u5927\u91cf\u7684\u65f6\u95f4\u3002\n\u6d4b\u8bd5\u7b97\u6cd5\uff1a\u5728\u4e8c\u7ef4\u7a7a\u95f4\u4e0a\u53ef\u89c6\u5316\u4e4b\u540e\uff0c\u89c2\u5bdf\u8d85\u5e73\u9762\uff0c\u5224\u65ad\u7b97\u6cd5\u662f\u5426\u6709\u6548\u3002\n\u4f7f\u7528\u7b97\u6cd5\uff1a\u672c\u4f8b\u4e0d\u4f1a\u5c55\u793a\u4e00\u4e2a\u5b8c\u6574\u7684\u5e94\u7528\uff0c\u4f46\u4f1a\u5c55\u793a\u5982\u4f55\u5728\u5927\u6570\u636e\u96c6\u4e0a\u8bad\u7ec3SVM\u3002\u8be5\u7b97\u6cd5\u5176\u4e2d\u4e00\u4e2a\u5e94\u7528\u573a\u666f\u5c31\u662f\u672c\u6587\u5206\u7c7b\uff0c\u901a\u5e38\u5728\u6587\u672c\u5206\u7c7b\u91cc\u53ef\u80fd\u6709\u5927\u91cf\u7684\u6587\u6863\u548c\u6210\u5343\u4e0a\u4e07\u7684\u7279\u5f81\u3002   \u6536\u96c6\u6570\u636e   \u6587\u672c\u6587\u4ef6\u6570\u636e\u683c\u5f0f\u5982\u4e0b\uff1a  0.365032          2.465645          - 1  - 2.494175         - 0.292380         - 1  - 3.039364         - 0.123108         - 1  1.348150          0.255696          1  2.768494          1.234954          1  1.232328          - 0.601198         1    \u51c6\u5907\u6570\u636e   def   loadDataSet ( fileName ): \n     dataMat   =   [] \n     labelMat   =   [] \n     fr   =   open ( fileName ) \n     for   line   in   fr . readlines (): \n         lineArr   =   line . strip () . split ( \\t ) \n         # dataMat.append([float(lineArr[0]), float(lineArr[1]), float(lineArr[2])]) \n         dataMat . append ([ float ( lineArr [ 0 ]),   float ( lineArr [ 1 ])]) \n         labelMat . append ( float ( lineArr [ 2 ])) \n     return   dataMat ,   labelMat    \u5206\u6790\u6570\u636e: \u65e0  \u8bad\u7ec3\u7b97\u6cd5   def   batchPegasos ( dataSet ,   labels ,   lam ,   T ,   k ): \n     batchPegasos()      Args:          dataMat    \u7279\u5f81\u96c6\u5408          labels     \u5206\u7c7b\u7ed3\u679c\u96c6\u5408          lam        \u56fa\u5b9a\u503c          T          \u8fed\u4ee3\u6b21\u6570          k          \u5f85\u5904\u7406\u5217\u8868\u5927\u5c0f      Returns:          w          \u56de\u5f52\u7cfb\u6570       \n     m ,   n   =   shape ( dataSet ) \n     w   =   zeros ( n )    # \u56de\u5f52\u7cfb\u6570 \n     dataIndex   =   range ( m ) \n     for   t   in   range ( 1 ,   T + 1 ): \n         wDelta   =   mat ( zeros ( n ))    # \u91cd\u7f6e wDelta \n\n         # \u5b83\u662f\u5b66\u4e60\u7387\uff0c\u4ee3\u8868\u4e86\u6743\u91cd\u8c03\u6574\u5e45\u5ea6\u7684\u5927\u5c0f\u3002\uff08\u4e5f\u53ef\u4ee5\u7406\u89e3\u4e3a\u968f\u673a\u68af\u5ea6\u7684\u6b65\u957f\uff0c\u4f7f\u5b83\u4e0d\u65ad\u51cf\u5c0f\uff0c\u4fbf\u4e8e\u62df\u5408\uff09 \n         # \u8f93\u5165T\u548cK\u5206\u522b\u8bbe\u5b9a\u4e86\u8fed\u4ee3\u6b21\u6570\u548c\u5f85\u5904\u7406\u5217\u8868\u7684\u5927\u5c0f\u3002\u5728T\u6b21\u8fed\u4ee3\u8fc7\u7a0b\u4e2d\uff0c\u6bcf\u6b21\u9700\u8981\u91cd\u65b0\u8ba1\u7b97eta \n         eta   =   1.0 / ( lam * t ) \n         random . shuffle ( dataIndex ) \n         for   j   in   range ( k ):        # \u5168\u90e8\u7684\u8bad\u7ec3\u96c6  \u5185\u5faa\u73af\u4e2d\u6267\u884c\u6279\u5904\u7406\uff0c\u5c06\u5206\u7c7b\u9519\u8bef\u7684\u503c\u5168\u90e8\u505a\u7d2f\u52a0\u540e\u66f4\u65b0\u6743\u91cd\u5411\u91cf \n             i   =   dataIndex [ j ] \n             p   =   predict ( w ,   dataSet [ i ,   :])                # mapper \u4ee3\u7801 \n\n             # \u5982\u679c\u9884\u6d4b\u6b63\u786e\uff0c\u5e76\u4e14\u9884\u6d4b\u7ed3\u679c\u7684\u7edd\u5bf9\u503c =1\uff0c\u56e0\u4e3a\u6700\u5927\u95f4\u9694\u4e3a1, \u8ba4\u4e3a\u6ca1\u95ee\u9898\u3002 \n             # \u5426\u5219\u7b97\u662f\u9884\u6d4b\u9519\u8bef, \u901a\u8fc7\u9884\u6d4b\u9519\u8bef\u7684\u7ed3\u679c\uff0c\u6765\u7d2f\u8ba1\u66f4\u65b0w. \n             if   labels [ i ] * p     1 :                          # mapper \u4ee3\u7801 \n                 wDelta   +=   labels [ i ] * dataSet [ i ,   :] . A      # \u7d2f\u79ef\u53d8\u5316 \n         # w\u901a\u8fc7\u4e0d\u65ad\u7684\u968f\u673a\u68af\u5ea6\u7684\u65b9\u5f0f\u6765\u4f18\u5316 \n         w   =   ( 1.0   -   1 / t ) * w   +   ( eta / k ) * wDelta               # \u5728\u6bcf\u4e2a T\u4e0a\u5e94\u7528\u66f4\u6539 \n         # print  ----- , w \n     # print  ++++++ , w \n     return   w   \u5b8c\u6574\u4ee3\u7801\u5730\u5740 :  https://github.com/apachecn/MachineLearning/blob/master/src/python/15.BigData_MapReduce/pegasos.py  \u8fd0\u884c\u65b9\u5f0f\uff1a python /opt/git/MachineLearning/src/python/15.BigData_MapReduce/mrSVM.py   input/15.BigData_MapReduce/inputFile.txt  MR\u7248\u672c\u7684\u4ee3\u7801\u5730\u5740 :  https://github.com/apachecn/MachineLearning/blob/master/src/python/15.BigData_MapReduce/mrSVM.py    \u4f5c\u8005\uff1a \u7247\u523b   \u5c0f\u7476  GitHub\u5730\u5740 :  https://github.com/apachecn/MachineLearning  \u7248\u6743\u58f0\u660e\uff1a\u6b22\u8fce\u8f6c\u8f7d\u5b66\u4e60 =  \u8bf7\u6807\u6ce8\u4fe1\u606f\u6765\u6e90\u4e8e  ApacheCN", 
            "title": "\u5f00\u53d1\u6d41\u7a0b"
        }, 
        {
            "location": "/\u4e66\u7c4d/\u673a\u5668\u5b66\u4e60\u5b9e\u6218/16.\u63a8\u8350\u7cfb\u7edf/", 
            "text": "\u7b2c16\u7ae0 \u63a8\u8350\u7cfb\u7edf\n\n\n\u80cc\u666f\u4e0e\u6316\u6398\u76ee\u6807\n\n\n\u968f\u7740\u4e92\u8054\u7f51\u7684\u5feb\u901f\u53d1\u5c55\uff0c\u7528\u6237\u5f88\u96be\u5feb\u901f\u4ece\u6d77\u91cf\u4fe1\u606f\u4e2d\u5bfb\u627e\u5230\u81ea\u5df1\u611f\u5174\u8da3\u7684\u4fe1\u606f\u3002\u56e0\u6b64\u8bde\u751f\u4e86\uff1a\u641c\u7d22\u5f15\u64ce+\u63a8\u8350\u7cfb\u7edf\n\n\n\u672c\u7ae0\u8282-\u63a8\u8350\u7cfb\u7edf\uff1a\n\n\n\n\n\u5e2e\u52a9\u7528\u6237\u53d1\u73b0\u5176\u611f\u5174\u8da3\u548c\u53ef\u80fd\u611f\u5174\u8da3\u7684\u4fe1\u606f\u3002\n\n\n\u8ba9\u7f51\u7ad9\u4ef7\u503c\u4fe1\u606f\u8131\u9896\u800c\u51fa\uff0c\u5f97\u5230\u5e7f\u5927\u7528\u6237\u7684\u8ba4\u53ef\u3002\n\n\n\u63d0\u9ad8\u7528\u6237\u5bf9\u7f51\u7ad9\u7684\u5fe0\u8bda\u5ea6\u548c\u5173\u6ce8\u5ea6\uff0c\u5efa\u7acb\u7a33\u56fa\u7528\u6237\u7fa4\u4f53\u3002\n\n\n\n\n\u5206\u6790\u65b9\u6cd5\u4e0e\u8fc7\u7a0b\n\n\n\u672c\u6848\u4f8b\u7684\u76ee\u6807\u662f\u5bf9\u7528\u6237\u8fdb\u884c\u63a8\u8350\uff0c\u5373\u4ee5\u4e00\u5b9a\u7684\u65b9\u5f0f\u5c06\u7528\u6237\u4e0e\u7269\u54c1\uff08\u672c\u6b21\u6307\u7f51\u9875\uff09\u4e4b\u95f4\u5efa\u7acb\u8054\u7cfb\u3002\n\n\n\u7531\u4e8e\u7528\u6237\u8bbf\u95ee\u7f51\u7ad9\u7684\u6570\u636e\u8bb0\u5f55\u5f88\u591a\uff0c\u5982\u679c\u4e0d\u5bf9\u6570\u636e\u8fdb\u884c\u5206\u7c7b\u5904\u7406\uff0c\u5bf9\u6240\u6709\u7684\u8bb0\u5f55\u76f4\u63a5\u91c7\u7528\u63a8\u8350\u7cfb\u7edf\u8fdb\u884c\u63a8\u8350\uff0c\u8fd9\u6837\u4f1a\u5b58\u5728\u4e00\u4e0b\u95ee\u9898\u3002\n\n\n\n\n\u6570\u636e\u91cf\u592a\u5927\u610f\u5473\u7740\u7269\u54c1\u6570\u4e0e\u7528\u6237\u6570\u5f88\u591a\uff0c\u5728\u6a21\u578b\u6784\u5efa\u7528\u6237\u4e0e\u7269\u54c1\u7a00\u758f\u77e9\u9635\u65f6\uff0c\u51fa\u73b0\u8bbe\u5907\u5185\u5b58\u7a7a\u95f4\u4e0d\u591f\u7684\u60c5\u51b5\uff0c\u5e76\u4e14\u6a21\u578b\u8ba1\u7b97\u9700\u8981\u6d88\u8017\u5927\u91cf\u7684\u65f6\u95f4\u3002\n\n\n\u7528\u6237\u533a\u522b\u5f88\u5927\uff0c\u4e0d\u540c\u7684\u7528\u6237\u5173\u6ce8\u7684\u4fe1\u606f\u4e0d\u4e00\u6837\uff0c\u56e0\u6b64\uff0c\u5373\u4f7f\u80fd\u591f\u5f97\u5230\u63a8\u8350\u7ed3\u679c\uff0c\u5176\u6548\u679c\u4e5f\u4f1a\u4e0d\u597d\u3002\n\n\n\n\n\u4e3a\u4e86\u907f\u514d\u51fa\u73b0\u4e0a\u8ff0\u95ee\u9898\uff0c\u9700\u8981\u8fdb\u884c\u5206\u7c7b\u5904\u7406\u4e0e\u5206\u6790\u3002\n\n\n\u6b63\u5e38\u7684\u60c5\u51b5\u4e0b\uff0c\u9700\u8981\u5bf9\u7528\u6237\u7684\u5174\u8da3\u7231\u597d\u4ee5\u53ca\u9700\u6c42\u8fdb\u884c\u5206\u7c7b\u3002\n\u56e0\u4e3a\u5728\u7528\u6237\u8bbf\u95ee\u8bb0\u5f55\u4e2d\uff0c\u6ca1\u6709\u8bb0\u5f55\u7528\u6237\u8bbf\u95ee\u9875\u9762\u65f6\u95f4\u7684\u957f\u77ed\uff0c\u56e0\u6b64\u4e0d\u5bb9\u6613\u5224\u65ad\u7528\u6237\u5174\u8da3\u7231\u597d\u3002\n\u56e0\u6b64\uff0c\u672c\u6587\u6839\u636e\u7528\u6237\u6d4f\u89c8\u7684\u7f51\u9875\u4fe1\u606f\u8fdb\u884c\u5206\u6790\u5904\u7406\uff0c\u4e3b\u8981\u91c7\u7528\u4ee5\u4e0b\u65b9\u6cd5\u5904\u7406\uff1a\u4ee5\u7528\u6237\u6d4f\u89c8\u7f51\u9875\u7684\u7c7b\u578b\u8fdb\u884c\u5206\u7c7b\uff0c\u7136\u540e\u5bf9\u6bcf\u4e2a\u7c7b\u578b\u4e2d\u7684\u5185\u5bb9\u8fdb\u884c\u63a8\u8350\u3002\n\n\n\u5206\u6790\u8fc7\u7a0b\u5982\u4e0b\uff1a\n\n\n\n\n\u4ece\u7cfb\u7edf\u4e2d\u83b7\u53d6\u7528\u6237\u8bbf\u95ee\u7f51\u7ad9\u7684\u539f\u59cb\u8bb0\u5f55\u3002\n\n\n\u5bf9\u6570\u636e\u8fdb\u884c\u591a\u7ef4\u5206\u6790\uff0c\u5305\u62ec\u7528\u6237\u8bbf\u95ee\u5185\u5bb9\uff0c\u6d41\u5931\u7528\u6237\u5206\u6790\u4ee5\u53ca\u7528\u6237\u5206\u7c7b\u7b49\u5206\u6790\u3002\n\n\n\u5bf9\u6570\u636e\u8fdb\u884c\u9884\u5904\u7406\uff0c\u5305\u542b\u6570\u636e\u53bb\u91cd\u3001\u6570\u636e\u53d8\u6362\u548c\u6570\u636e\u5206\u7c7b\u97a5\u5904\u7406\u8fc7\u7a0b\u3002\n\n\n\u4ee5\u7528\u6237\u8bbf\u95eehtml\u540e\u7f00\u7684\u9875\u9762\u4e3a\u5173\u952e\u6761\u4ef6\uff0c\u5bf9\u6570\u636e\u8fdb\u884c\u5904\u7406\u3002\n\n\n\u5bf9\u6bd4\u591a\u79cd\u63a8\u8350\u7b97\u6cd5\u8fdb\u884c\u63a8\u8350\uff0c\u901a\u8fc7\u6a21\u578b\u8bc4\u4ef7\uff0c\u5f97\u5230\u6bd4\u8f83\u597d\u7684\u667a\u80fd\u63a8\u8350\u6a21\u578b\u3002\u901a\u8fc7\u6a21\u578b\u5bf9\u6837\u672c\u6570\u636e\u8fdb\u884c\u9884\u6d4b\uff0c\u83b7\u5f97\u63a8\u8350\u7ed3\u679c\u3002\n\n\n\n\n\u4e3b\u6d41\u63a8\u8350\u7b97\u6cd5\n\n\n\n\n\n\n\n\n\u63a8\u8350\u65b9\u6cd5\n\n\n\u63cf\u8ff0\n\n\n\n\n\n\n\n\n\n\n\u57fa\u4e8e\u5185\u5bb9\u63a8\u8350\n\n\n\n\n\n\n\n\n\u534f\u540c\u8fc7\u6ee4\u63a8\u8350\n\n\n\n\n\n\n\n\n\u57fa\u4e8e\u89c4\u5219\u63a8\u8350\n\n\n\n\n\n\n\n\n\u57fa\u4e8e\u6548\u7528\u63a8\u8350\n\n\n\n\n\n\n\n\n\u57fa\u4e8e\u77e5\u8bc6\u63a8\u8350\n\n\n\n\n\n\n\n\n\u7ec4\u5408\u63a8\u8350\n\n\n\n\n\n\n\n\n\n\n\n\n\u57fa\u4e8e\u77e5\u8bc6\u63a8\u8350\n\n\n\u57fa\u4e8e\u77e5\u8bc6\u7684\u63a8\u8350\uff08Knowledge-based Recommendation\uff09\u5728\u67d0\u79cd\u7a0b\u5ea6\u662f\u53ef\u4ee5\u770b\u6210\u662f\u4e00\u79cd\u63a8\u7406\uff08Inference\uff09\u6280\u672f\uff0c\u5b83\u4e0d\u662f\u5efa\u7acb\u5728\u7528\u6237\u9700\u8981\u548c\u504f\u597d\u57fa\u7840\u4e0a\u63a8\u8350\u7684\u3002\u57fa\u4e8e\u77e5\u8bc6\u7684\u65b9\u6cd5\u56e0\u5b83\u4eec\u6240\u7528\u7684\u529f\u80fd\u77e5\u8bc6\u4e0d\u540c\u800c\u6709\u660e\u663e\u533a\u522b\u3002\u6548\u7528\u77e5\u8bc6\uff08Functional Knowledge\uff09\u662f\u4e00\u79cd\u5173\u4e8e\u4e00\u4e2a\u9879\u76ee\u5982\u4f55\u6ee1\u8db3\u67d0\u4e00\u7279\u5b9a\u7528\u6237\u7684\u77e5\u8bc6\uff0c\u56e0\u6b64\u80fd\u89e3\u91ca\u9700\u8981\u548c\u63a8\u8350\u7684\u5173\u7cfb\uff0c\u6240\u4ee5\u7528\u6237\u8d44\u6599\u53ef\u4ee5\u662f\u4efb\u4f55\u80fd\u652f\u6301\u63a8\u7406\u7684\u77e5\u8bc6\u7ed3\u6784\uff0c\u5b83\u53ef\u4ee5\u662f\u7528\u6237\u5df2\u7ecf\u89c4\u8303\u5316\u7684\u67e5\u8be2\uff0c\u4e5f\u53ef\u4ee5\u662f\u4e00\u4e2a\u66f4\u8be6\u7ec6\u7684\u7528\u6237\u9700\u8981\u7684\u8868\u793a\u3002\n\n\n\n\n\u534f\u540c\u8fc7\u6ee4\u63a8\u8350\n\n\n\n\nmemory-based\u63a8\u8350\n\n\nItem-based\u65b9\u6cd5\n\n\nUser-based\u65b9\u6cd5\n\n\nMemory-based\u63a8\u8350\u65b9\u6cd5\u901a\u8fc7\u6267\u884c\u6700\u8fd1\u90bb\u641c\u7d22\uff0c\u628a\u6bcf\u4e00\u4e2aItem\u6216\u8005User\u770b\u6210\u4e00\u4e2a\u5411\u91cf\uff0c\u8ba1\u7b97\u5176\u4ed6\u6240\u6709Item\u6216\u8005User\u4e0e\u5b83\u7684\u76f8\u4f3c\u5ea6\u3002\u6709\u4e86Item\u6216\u8005User\u4e4b\u95f4\u7684\u4e24\u4e24\u76f8\u4f3c\u5ea6\u4e4b\u540e\uff0c\u5c31\u53ef\u4ee5\u8fdb\u884c\u9884\u6d4b\u4e0e\u63a8\u8350\u4e86\u3002 \n\n\n\n\n\n\nmodel-based\u63a8\u8350\n\n\nModel-based\u63a8\u8350\u6700\u5e38\u89c1\u7684\u65b9\u6cd5\u4e3aMatrix factorization.\n\n\n\u77e9\u9635\u5206\u89e3\u901a\u8fc7\u628a\u539f\u59cb\u7684\u8bc4\u5206\u77e9\u9635R\u5206\u89e3\u4e3a\u4e24\u4e2a\u77e9\u9635\u76f8\u4e58\uff0c\u5e76\u4e14\u53ea\u8003\u8651\u6709\u8bc4\u5206\u7684\u503c\uff0c\u8bad\u7ec3\u65f6\u4e0d\u8003\u8651missing\u9879\u7684\u503c\u3002R\u77e9\u9635\u5206\u89e3\u6210\u4e3aU\u4e0eV\u4e24\u4e2a\u77e9\u9635\u540e\uff0c\u8bc4\u5206\u77e9\u9635R\u4e2dmissing\u7684\u503c\u5c31\u53ef\u4ee5\u901a\u8fc7U\u77e9\u9635\u4e2d\u7684\u67d0\u5217\u548cV\u77e9\u9635\u7684\u67d0\u884c\u76f8\u4e58\u5f97\u5230\n\n\n\u77e9\u9635\u5206\u89e3\u7684\u76ee\u6807\u51fd\u6570: U\u77e9\u9635\u4e0eV\u77e9\u9635\u7684\u53ef\u4ee5\u901a\u8fc7\u68af\u5ea6\u4e0b\u964d(gradient descent)\u7b97\u6cd5\u6c42\u5f97\uff0c\u901a\u8fc7\u4ea4\u66ff\u66f4\u65b0u\u4e0ev\u591a\u6b21\u8fed\u4ee3\u6536\u655b\u4e4b\u540e\u53ef\u6c42\u51faU\u4e0eV\u3002 \n\n\n\u77e9\u9635\u5206\u89e3\u80cc\u540e\u7684\u6838\u5fc3\u601d\u60f3\uff0c\u627e\u5230\u4e24\u4e2a\u77e9\u9635\uff0c\u5b83\u4eec\u76f8\u4e58\u4e4b\u540e\u5f97\u5230\u7684\u90a3\u4e2a\u77e9\u9635\u7684\u503c\uff0c\u4e0e\u8bc4\u5206\u77e9\u9635R\u4e2d\u6709\u503c\u7684\u4f4d\u7f6e\u4e2d\u7684\u503c\u5c3d\u53ef\u80fd\u63a5\u8fd1\u3002\u8fd9\u6837\u4e00\u6765\uff0c\u5206\u89e3\u51fa\u6765\u7684\u4e24\u4e2a\u77e9\u9635\u76f8\u4e58\u5c31\u5c3d\u53ef\u80fd\u8fd8\u539f\u4e86\u8bc4\u5206\u77e9\u9635R\uff0c\u56e0\u4e3a\u6709\u503c\u7684\u5730\u65b9\uff0c\u503c\u90fd\u76f8\u5dee\u5f97\u5c3d\u53ef\u80fd\u5730\u5c0f\uff0c\u90a3\u4e48missing\u7684\u503c\u901a\u8fc7\u8fd9\u6837\u7684\u65b9\u5f0f\u8ba1\u7b97\u5f97\u5230\uff0c\u6bd4\u8f83\u7b26\u5408\u8d8b\u52bf\u3002 \n\n\n\n\n\n\n\u534f\u540c\u8fc7\u6ee4\u4e2d\u4e3b\u8981\u5b58\u5728\u5982\u4e0b\u4e24\u4e2a\u95ee\u9898\uff1a\u7a00\u758f\u6027\u4e0e\u51b7\u542f\u52a8\u95ee\u9898\u3002\u5df2\u6709\u7684\u65b9\u6848\u901a\u5e38\u4f1a\u901a\u8fc7\u5f15\u5165\u591a\u4e2a\u4e0d\u540c\u7684\u6570\u636e\u6e90\u6216\u8005\u8f85\u52a9\u4fe1\u606f(Side information)\u6765\u89e3\u51b3\u8fd9\u4e9b\u95ee\u9898\uff0c\u7528\u6237\u7684Side information\u53ef\u4ee5\u662f\u7528\u6237\u7684\u57fa\u672c\u4e2a\u4eba\u4fe1\u606f\u3001\u7528\u6237\u753b\u50cf\u4fe1\u606f\u7b49\uff0c\u800cItem\u7684Side information\u53ef\u4ee5\u662f\u7269\u54c1\u7684content\u4fe1\u606f\u7b49\u3002\n\n\n\n\n\u6548\u679c\u8bc4\u4f30\n\n\n\n\n\u53ec\u56de\u7387\u548c\u51c6\u786e\u7387 \u3010\u4eba\u4e3a\u7edf\u8ba1\u5206\u6790\u3011\n\n\nF\u503c(P-R\u66f2\u7ebf) \u3010\u504f\u91cd\uff1a\u975e\u5747\u8861\u95ee\u9898\u3011\n\n\nROC\u548cAUC  \u3010\u504f\u91cd\uff1a\u4e0d\u540c\u7ed3\u679c\u7684\u5bf9\u6bd4\u3011\n\n\n\n\n\n\n\n\n\u4f5c\u8005\uff1a\n\u7247\u523b\n\n\nGitHub\u5730\u5740\n: \nhttps://github.com/apachecn/MachineLearning\n\n\n\u7248\u6743\u58f0\u660e\uff1a\u6b22\u8fce\u8f6c\u8f7d\u5b66\u4e60 =\n \u8bf7\u6807\u6ce8\u4fe1\u606f\u6765\u6e90\u4e8e \nApacheCN\n\n\n\n\n\n\n\u6458\u5f55\u7684\u539f\u6587\u5730\u5740\uff1a\n\n\n\n\n\n\n\u63a8\u8350\u7cfb\u7edf\u4e2d\u5e38\u7528\u7b97\u6cd5 \u4ee5\u53ca\u4f18\u70b9\u7f3a\u70b9\u5bf9\u6bd4\n\n\n\u63a8\u8350\u7b97\u6cd5\u7684\u57fa\u4e8e\u77e5\u8bc6\u63a8\u8350\n\n\n\u63a8\u8350\u7cfb\u7edf\u4e2d\u57fa\u4e8e\u6df1\u5ea6\u5b66\u4e60\u7684\u6df7\u5408\u534f\u540c\u8fc7\u6ee4\u6a21\u578b", 
            "title": "16.\u63a8\u8350\u7cfb\u7edf"
        }, 
        {
            "location": "/\u4e66\u7c4d/\u673a\u5668\u5b66\u4e60\u5b9e\u6218/16.\u63a8\u8350\u7cfb\u7edf/#16", 
            "text": "", 
            "title": "\u7b2c16\u7ae0 \u63a8\u8350\u7cfb\u7edf"
        }, 
        {
            "location": "/\u4e66\u7c4d/\u673a\u5668\u5b66\u4e60\u5b9e\u6218/16.\u63a8\u8350\u7cfb\u7edf/#_1", 
            "text": "\u968f\u7740\u4e92\u8054\u7f51\u7684\u5feb\u901f\u53d1\u5c55\uff0c\u7528\u6237\u5f88\u96be\u5feb\u901f\u4ece\u6d77\u91cf\u4fe1\u606f\u4e2d\u5bfb\u627e\u5230\u81ea\u5df1\u611f\u5174\u8da3\u7684\u4fe1\u606f\u3002\u56e0\u6b64\u8bde\u751f\u4e86\uff1a\u641c\u7d22\u5f15\u64ce+\u63a8\u8350\u7cfb\u7edf  \u672c\u7ae0\u8282-\u63a8\u8350\u7cfb\u7edf\uff1a   \u5e2e\u52a9\u7528\u6237\u53d1\u73b0\u5176\u611f\u5174\u8da3\u548c\u53ef\u80fd\u611f\u5174\u8da3\u7684\u4fe1\u606f\u3002  \u8ba9\u7f51\u7ad9\u4ef7\u503c\u4fe1\u606f\u8131\u9896\u800c\u51fa\uff0c\u5f97\u5230\u5e7f\u5927\u7528\u6237\u7684\u8ba4\u53ef\u3002  \u63d0\u9ad8\u7528\u6237\u5bf9\u7f51\u7ad9\u7684\u5fe0\u8bda\u5ea6\u548c\u5173\u6ce8\u5ea6\uff0c\u5efa\u7acb\u7a33\u56fa\u7528\u6237\u7fa4\u4f53\u3002", 
            "title": "\u80cc\u666f\u4e0e\u6316\u6398\u76ee\u6807"
        }, 
        {
            "location": "/\u4e66\u7c4d/\u673a\u5668\u5b66\u4e60\u5b9e\u6218/16.\u63a8\u8350\u7cfb\u7edf/#_2", 
            "text": "\u672c\u6848\u4f8b\u7684\u76ee\u6807\u662f\u5bf9\u7528\u6237\u8fdb\u884c\u63a8\u8350\uff0c\u5373\u4ee5\u4e00\u5b9a\u7684\u65b9\u5f0f\u5c06\u7528\u6237\u4e0e\u7269\u54c1\uff08\u672c\u6b21\u6307\u7f51\u9875\uff09\u4e4b\u95f4\u5efa\u7acb\u8054\u7cfb\u3002  \u7531\u4e8e\u7528\u6237\u8bbf\u95ee\u7f51\u7ad9\u7684\u6570\u636e\u8bb0\u5f55\u5f88\u591a\uff0c\u5982\u679c\u4e0d\u5bf9\u6570\u636e\u8fdb\u884c\u5206\u7c7b\u5904\u7406\uff0c\u5bf9\u6240\u6709\u7684\u8bb0\u5f55\u76f4\u63a5\u91c7\u7528\u63a8\u8350\u7cfb\u7edf\u8fdb\u884c\u63a8\u8350\uff0c\u8fd9\u6837\u4f1a\u5b58\u5728\u4e00\u4e0b\u95ee\u9898\u3002   \u6570\u636e\u91cf\u592a\u5927\u610f\u5473\u7740\u7269\u54c1\u6570\u4e0e\u7528\u6237\u6570\u5f88\u591a\uff0c\u5728\u6a21\u578b\u6784\u5efa\u7528\u6237\u4e0e\u7269\u54c1\u7a00\u758f\u77e9\u9635\u65f6\uff0c\u51fa\u73b0\u8bbe\u5907\u5185\u5b58\u7a7a\u95f4\u4e0d\u591f\u7684\u60c5\u51b5\uff0c\u5e76\u4e14\u6a21\u578b\u8ba1\u7b97\u9700\u8981\u6d88\u8017\u5927\u91cf\u7684\u65f6\u95f4\u3002  \u7528\u6237\u533a\u522b\u5f88\u5927\uff0c\u4e0d\u540c\u7684\u7528\u6237\u5173\u6ce8\u7684\u4fe1\u606f\u4e0d\u4e00\u6837\uff0c\u56e0\u6b64\uff0c\u5373\u4f7f\u80fd\u591f\u5f97\u5230\u63a8\u8350\u7ed3\u679c\uff0c\u5176\u6548\u679c\u4e5f\u4f1a\u4e0d\u597d\u3002   \u4e3a\u4e86\u907f\u514d\u51fa\u73b0\u4e0a\u8ff0\u95ee\u9898\uff0c\u9700\u8981\u8fdb\u884c\u5206\u7c7b\u5904\u7406\u4e0e\u5206\u6790\u3002  \u6b63\u5e38\u7684\u60c5\u51b5\u4e0b\uff0c\u9700\u8981\u5bf9\u7528\u6237\u7684\u5174\u8da3\u7231\u597d\u4ee5\u53ca\u9700\u6c42\u8fdb\u884c\u5206\u7c7b\u3002\n\u56e0\u4e3a\u5728\u7528\u6237\u8bbf\u95ee\u8bb0\u5f55\u4e2d\uff0c\u6ca1\u6709\u8bb0\u5f55\u7528\u6237\u8bbf\u95ee\u9875\u9762\u65f6\u95f4\u7684\u957f\u77ed\uff0c\u56e0\u6b64\u4e0d\u5bb9\u6613\u5224\u65ad\u7528\u6237\u5174\u8da3\u7231\u597d\u3002\n\u56e0\u6b64\uff0c\u672c\u6587\u6839\u636e\u7528\u6237\u6d4f\u89c8\u7684\u7f51\u9875\u4fe1\u606f\u8fdb\u884c\u5206\u6790\u5904\u7406\uff0c\u4e3b\u8981\u91c7\u7528\u4ee5\u4e0b\u65b9\u6cd5\u5904\u7406\uff1a\u4ee5\u7528\u6237\u6d4f\u89c8\u7f51\u9875\u7684\u7c7b\u578b\u8fdb\u884c\u5206\u7c7b\uff0c\u7136\u540e\u5bf9\u6bcf\u4e2a\u7c7b\u578b\u4e2d\u7684\u5185\u5bb9\u8fdb\u884c\u63a8\u8350\u3002  \u5206\u6790\u8fc7\u7a0b\u5982\u4e0b\uff1a   \u4ece\u7cfb\u7edf\u4e2d\u83b7\u53d6\u7528\u6237\u8bbf\u95ee\u7f51\u7ad9\u7684\u539f\u59cb\u8bb0\u5f55\u3002  \u5bf9\u6570\u636e\u8fdb\u884c\u591a\u7ef4\u5206\u6790\uff0c\u5305\u62ec\u7528\u6237\u8bbf\u95ee\u5185\u5bb9\uff0c\u6d41\u5931\u7528\u6237\u5206\u6790\u4ee5\u53ca\u7528\u6237\u5206\u7c7b\u7b49\u5206\u6790\u3002  \u5bf9\u6570\u636e\u8fdb\u884c\u9884\u5904\u7406\uff0c\u5305\u542b\u6570\u636e\u53bb\u91cd\u3001\u6570\u636e\u53d8\u6362\u548c\u6570\u636e\u5206\u7c7b\u97a5\u5904\u7406\u8fc7\u7a0b\u3002  \u4ee5\u7528\u6237\u8bbf\u95eehtml\u540e\u7f00\u7684\u9875\u9762\u4e3a\u5173\u952e\u6761\u4ef6\uff0c\u5bf9\u6570\u636e\u8fdb\u884c\u5904\u7406\u3002  \u5bf9\u6bd4\u591a\u79cd\u63a8\u8350\u7b97\u6cd5\u8fdb\u884c\u63a8\u8350\uff0c\u901a\u8fc7\u6a21\u578b\u8bc4\u4ef7\uff0c\u5f97\u5230\u6bd4\u8f83\u597d\u7684\u667a\u80fd\u63a8\u8350\u6a21\u578b\u3002\u901a\u8fc7\u6a21\u578b\u5bf9\u6837\u672c\u6570\u636e\u8fdb\u884c\u9884\u6d4b\uff0c\u83b7\u5f97\u63a8\u8350\u7ed3\u679c\u3002", 
            "title": "\u5206\u6790\u65b9\u6cd5\u4e0e\u8fc7\u7a0b"
        }, 
        {
            "location": "/\u4e66\u7c4d/\u673a\u5668\u5b66\u4e60\u5b9e\u6218/16.\u63a8\u8350\u7cfb\u7edf/#_3", 
            "text": "\u63a8\u8350\u65b9\u6cd5  \u63cf\u8ff0      \u57fa\u4e8e\u5185\u5bb9\u63a8\u8350     \u534f\u540c\u8fc7\u6ee4\u63a8\u8350     \u57fa\u4e8e\u89c4\u5219\u63a8\u8350     \u57fa\u4e8e\u6548\u7528\u63a8\u8350     \u57fa\u4e8e\u77e5\u8bc6\u63a8\u8350     \u7ec4\u5408\u63a8\u8350", 
            "title": "\u4e3b\u6d41\u63a8\u8350\u7b97\u6cd5"
        }, 
        {
            "location": "/\u4e66\u7c4d/\u673a\u5668\u5b66\u4e60\u5b9e\u6218/16.\u63a8\u8350\u7cfb\u7edf/#_4", 
            "text": "\u57fa\u4e8e\u77e5\u8bc6\u7684\u63a8\u8350\uff08Knowledge-based Recommendation\uff09\u5728\u67d0\u79cd\u7a0b\u5ea6\u662f\u53ef\u4ee5\u770b\u6210\u662f\u4e00\u79cd\u63a8\u7406\uff08Inference\uff09\u6280\u672f\uff0c\u5b83\u4e0d\u662f\u5efa\u7acb\u5728\u7528\u6237\u9700\u8981\u548c\u504f\u597d\u57fa\u7840\u4e0a\u63a8\u8350\u7684\u3002\u57fa\u4e8e\u77e5\u8bc6\u7684\u65b9\u6cd5\u56e0\u5b83\u4eec\u6240\u7528\u7684\u529f\u80fd\u77e5\u8bc6\u4e0d\u540c\u800c\u6709\u660e\u663e\u533a\u522b\u3002\u6548\u7528\u77e5\u8bc6\uff08Functional Knowledge\uff09\u662f\u4e00\u79cd\u5173\u4e8e\u4e00\u4e2a\u9879\u76ee\u5982\u4f55\u6ee1\u8db3\u67d0\u4e00\u7279\u5b9a\u7528\u6237\u7684\u77e5\u8bc6\uff0c\u56e0\u6b64\u80fd\u89e3\u91ca\u9700\u8981\u548c\u63a8\u8350\u7684\u5173\u7cfb\uff0c\u6240\u4ee5\u7528\u6237\u8d44\u6599\u53ef\u4ee5\u662f\u4efb\u4f55\u80fd\u652f\u6301\u63a8\u7406\u7684\u77e5\u8bc6\u7ed3\u6784\uff0c\u5b83\u53ef\u4ee5\u662f\u7528\u6237\u5df2\u7ecf\u89c4\u8303\u5316\u7684\u67e5\u8be2\uff0c\u4e5f\u53ef\u4ee5\u662f\u4e00\u4e2a\u66f4\u8be6\u7ec6\u7684\u7528\u6237\u9700\u8981\u7684\u8868\u793a\u3002", 
            "title": "\u57fa\u4e8e\u77e5\u8bc6\u63a8\u8350"
        }, 
        {
            "location": "/\u4e66\u7c4d/\u673a\u5668\u5b66\u4e60\u5b9e\u6218/16.\u63a8\u8350\u7cfb\u7edf/#_5", 
            "text": "memory-based\u63a8\u8350  Item-based\u65b9\u6cd5  User-based\u65b9\u6cd5  Memory-based\u63a8\u8350\u65b9\u6cd5\u901a\u8fc7\u6267\u884c\u6700\u8fd1\u90bb\u641c\u7d22\uff0c\u628a\u6bcf\u4e00\u4e2aItem\u6216\u8005User\u770b\u6210\u4e00\u4e2a\u5411\u91cf\uff0c\u8ba1\u7b97\u5176\u4ed6\u6240\u6709Item\u6216\u8005User\u4e0e\u5b83\u7684\u76f8\u4f3c\u5ea6\u3002\u6709\u4e86Item\u6216\u8005User\u4e4b\u95f4\u7684\u4e24\u4e24\u76f8\u4f3c\u5ea6\u4e4b\u540e\uff0c\u5c31\u53ef\u4ee5\u8fdb\u884c\u9884\u6d4b\u4e0e\u63a8\u8350\u4e86\u3002     model-based\u63a8\u8350  Model-based\u63a8\u8350\u6700\u5e38\u89c1\u7684\u65b9\u6cd5\u4e3aMatrix factorization.  \u77e9\u9635\u5206\u89e3\u901a\u8fc7\u628a\u539f\u59cb\u7684\u8bc4\u5206\u77e9\u9635R\u5206\u89e3\u4e3a\u4e24\u4e2a\u77e9\u9635\u76f8\u4e58\uff0c\u5e76\u4e14\u53ea\u8003\u8651\u6709\u8bc4\u5206\u7684\u503c\uff0c\u8bad\u7ec3\u65f6\u4e0d\u8003\u8651missing\u9879\u7684\u503c\u3002R\u77e9\u9635\u5206\u89e3\u6210\u4e3aU\u4e0eV\u4e24\u4e2a\u77e9\u9635\u540e\uff0c\u8bc4\u5206\u77e9\u9635R\u4e2dmissing\u7684\u503c\u5c31\u53ef\u4ee5\u901a\u8fc7U\u77e9\u9635\u4e2d\u7684\u67d0\u5217\u548cV\u77e9\u9635\u7684\u67d0\u884c\u76f8\u4e58\u5f97\u5230  \u77e9\u9635\u5206\u89e3\u7684\u76ee\u6807\u51fd\u6570: U\u77e9\u9635\u4e0eV\u77e9\u9635\u7684\u53ef\u4ee5\u901a\u8fc7\u68af\u5ea6\u4e0b\u964d(gradient descent)\u7b97\u6cd5\u6c42\u5f97\uff0c\u901a\u8fc7\u4ea4\u66ff\u66f4\u65b0u\u4e0ev\u591a\u6b21\u8fed\u4ee3\u6536\u655b\u4e4b\u540e\u53ef\u6c42\u51faU\u4e0eV\u3002   \u77e9\u9635\u5206\u89e3\u80cc\u540e\u7684\u6838\u5fc3\u601d\u60f3\uff0c\u627e\u5230\u4e24\u4e2a\u77e9\u9635\uff0c\u5b83\u4eec\u76f8\u4e58\u4e4b\u540e\u5f97\u5230\u7684\u90a3\u4e2a\u77e9\u9635\u7684\u503c\uff0c\u4e0e\u8bc4\u5206\u77e9\u9635R\u4e2d\u6709\u503c\u7684\u4f4d\u7f6e\u4e2d\u7684\u503c\u5c3d\u53ef\u80fd\u63a5\u8fd1\u3002\u8fd9\u6837\u4e00\u6765\uff0c\u5206\u89e3\u51fa\u6765\u7684\u4e24\u4e2a\u77e9\u9635\u76f8\u4e58\u5c31\u5c3d\u53ef\u80fd\u8fd8\u539f\u4e86\u8bc4\u5206\u77e9\u9635R\uff0c\u56e0\u4e3a\u6709\u503c\u7684\u5730\u65b9\uff0c\u503c\u90fd\u76f8\u5dee\u5f97\u5c3d\u53ef\u80fd\u5730\u5c0f\uff0c\u90a3\u4e48missing\u7684\u503c\u901a\u8fc7\u8fd9\u6837\u7684\u65b9\u5f0f\u8ba1\u7b97\u5f97\u5230\uff0c\u6bd4\u8f83\u7b26\u5408\u8d8b\u52bf\u3002     \u534f\u540c\u8fc7\u6ee4\u4e2d\u4e3b\u8981\u5b58\u5728\u5982\u4e0b\u4e24\u4e2a\u95ee\u9898\uff1a\u7a00\u758f\u6027\u4e0e\u51b7\u542f\u52a8\u95ee\u9898\u3002\u5df2\u6709\u7684\u65b9\u6848\u901a\u5e38\u4f1a\u901a\u8fc7\u5f15\u5165\u591a\u4e2a\u4e0d\u540c\u7684\u6570\u636e\u6e90\u6216\u8005\u8f85\u52a9\u4fe1\u606f(Side information)\u6765\u89e3\u51b3\u8fd9\u4e9b\u95ee\u9898\uff0c\u7528\u6237\u7684Side information\u53ef\u4ee5\u662f\u7528\u6237\u7684\u57fa\u672c\u4e2a\u4eba\u4fe1\u606f\u3001\u7528\u6237\u753b\u50cf\u4fe1\u606f\u7b49\uff0c\u800cItem\u7684Side information\u53ef\u4ee5\u662f\u7269\u54c1\u7684content\u4fe1\u606f\u7b49\u3002", 
            "title": "\u534f\u540c\u8fc7\u6ee4\u63a8\u8350"
        }, 
        {
            "location": "/\u4e66\u7c4d/\u673a\u5668\u5b66\u4e60\u5b9e\u6218/16.\u63a8\u8350\u7cfb\u7edf/#_6", 
            "text": "\u53ec\u56de\u7387\u548c\u51c6\u786e\u7387 \u3010\u4eba\u4e3a\u7edf\u8ba1\u5206\u6790\u3011  F\u503c(P-R\u66f2\u7ebf) \u3010\u504f\u91cd\uff1a\u975e\u5747\u8861\u95ee\u9898\u3011  ROC\u548cAUC  \u3010\u504f\u91cd\uff1a\u4e0d\u540c\u7ed3\u679c\u7684\u5bf9\u6bd4\u3011     \u4f5c\u8005\uff1a \u7247\u523b  GitHub\u5730\u5740 :  https://github.com/apachecn/MachineLearning  \u7248\u6743\u58f0\u660e\uff1a\u6b22\u8fce\u8f6c\u8f7d\u5b66\u4e60 =  \u8bf7\u6807\u6ce8\u4fe1\u606f\u6765\u6e90\u4e8e  ApacheCN    \u6458\u5f55\u7684\u539f\u6587\u5730\u5740\uff1a    \u63a8\u8350\u7cfb\u7edf\u4e2d\u5e38\u7528\u7b97\u6cd5 \u4ee5\u53ca\u4f18\u70b9\u7f3a\u70b9\u5bf9\u6bd4  \u63a8\u8350\u7b97\u6cd5\u7684\u57fa\u4e8e\u77e5\u8bc6\u63a8\u8350  \u63a8\u8350\u7cfb\u7edf\u4e2d\u57fa\u4e8e\u6df1\u5ea6\u5b66\u4e60\u7684\u6df7\u5408\u534f\u540c\u8fc7\u6ee4\u6a21\u578b", 
            "title": "\u6548\u679c\u8bc4\u4f30"
        }, 
        {
            "location": "/\u4e66\u7c4d/\u6df1\u5ea6\u5b66\u4e60/DeepLearning/", 
            "text": "\u6df1\u5ea6\u5b66\u4e60\u4e2d\u6587\u7248\n\n\n\u5168\u6587\n\n\n\u76ee\u5f55\n\n\n\u6570\u5b66\u7b26\u53f7                \n\n\n\u7b2c\u4e00\u7ae0 \u5f15\u8a00\n\n\n1.1 \u672c\u4e66\u9762\u5411\u7684\u8bfb\u8005     10  \n\n1.2 \u6df1\u5ea6\u5b66\u4e60\u7684\u5386\u53f2\u8d8b\u52bf       11  \n\n1.2.1   \u795e\u7ecf\u7f51\u7edc\u7684\u4f17\u591a\u540d\u79f0\u548c\u547d\u8fd0\u53d8\u8fc1      12  \n\n1.2.2   \u4e0e\u65e5\u4ff1\u589e\u7684\u6570\u636e\u91cf        17  \n\n1.2.3   \u4e0e\u65e5\u4ff1\u589e\u7684\u6a21\u578b\u89c4\u6a21       19  \n\n1.2.4   \u4e0e\u65e5\u4ff1\u589e\u7684\u7cbe\u5ea6\u3001\u590d\u6742\u5ea6\u548c\u5bf9\u73b0\u5b9e\u4e16\u754c\u7684\u51b2\u51fb        22    \n\n\n\u7b2c\u4e00\u90e8\u5206    \u5e94\u7528\u6570\u5b66\u4e0e\u673a\u5668\u5b66\u4e60\u57fa\u7840     25  \n\n\n\u7b2c\u4e8c\u7ae0 \u7ebf\u6027\u4ee3\u6570\n\n\n2.1 \u6807\u91cf\u3001\u5411\u91cf\u3001\u77e9\u9635\u548c\u5f20\u91cf     27  \n\n2.2 \u77e9\u9635\u548c\u5411\u91cf\u76f8\u4e58     29  \n\n2.3 \u5355\u4f4d\u77e9\u9635\u548c\u9006\u77e9\u9635        31  \n\n2.4 \u7ebf\u6027\u76f8\u5173\u548c\u751f\u6210\u5b50\u7a7a\u95f4      32  \n\n2.5 \u8303\u6570      34  \n\n2.6 \u7279\u6b8a\u7c7b\u578b\u7684\u77e9\u9635\u548c\u5411\u91cf      36  \n\n2.7 \u7279\u5f81\u5206\u89e3        37  \n\n2.8 \u5947\u5f02\u503c\u5206\u89e3       39  \n\n2.9 Moore-Penrose\u4f2a\u9006     40  \n\n2.1 \u8ff9\u8fd0\u7b97     41  \n\n2.11    \u884c\u5217\u5f0f     42  \n\n2.12    \u5b9e\u4f8b:\u4e3b\u6210\u5206\u5206\u6790        42    \n\n\n\u7b2c\u4e09\u7ae0 \u6982\u7387\u4e0e\u4fe1\u606f\u8bba\n\n\n3.1 \u4e3a\u4ec0\u4e48\u8981\u4f7f\u7528\u6982\u7387?       47  \n\n3.2 \u968f\u673a\u53d8\u91cf        49  \n\n3.3 \u6982\u7387\u5206\u5e03        50  \n\n3.3.1   \u79bb\u6563\u578b\u53d8\u91cf\u548c\u6982\u7387\u8d28\u91cf\u51fd\u6570        50  \n\n3.3.2   \u8fde\u7eed\u578b\u53d8\u91cf\u548c\u6982\u7387\u5bc6\u5ea6\u51fd\u6570        51  \n\n3.4 \u8fb9\u7f18\u6982\u7387        52  \n\n3.5 \u6761\u4ef6\u6982\u7387        52  \n\n3.6 \u6761\u4ef6\u6982\u7387\u7684\u94fe\u5f0f\u6cd5\u5219       53  \n\n3.7 \u72ec\u7acb\u6027\u548c\u6761\u4ef6\u72ec\u7acb\u6027       53  \n\n3.8 \u671f\u671b\u3001\u65b9\u5dee\u548c\u534f\u65b9\u5dee       54  \n\n3.9 \u5e38\u7528\u6982\u7387\u5206\u5e03      55  \n\n3.9.1   Bernoulli\u5206\u5e03     56  \n\n3.9.2   Multinoulli\u5206\u5e03       56  \n\n3.9.3   \u9ad8\u65af\u5206\u5e03        57  \n\n3.9.4   \u6307\u6570\u5206\u5e03\u548cLaplace\u5206\u5e03      58  \n\n3.9.5   Dirac\u5206\u5e03\u548c\u7ecf\u9a8c\u5206\u5e03        59  \n\n3.9.6   \u5206\u5e03\u7684\u6df7\u5408       59  \n\n3.1 \u5e38\u7528\u51fd\u6570\u7684\u6709\u7528\u6027\u8d28       61  \n\n3.11    \u8d1d\u53f6\u65af\u89c4\u5219       63  \n\n3.12    \u8fde\u7eed\u578b\u53d8\u91cf\u7684\u6280\u672f\u7ec6\u8282      64  \n\n3.13    \u4fe1\u606f\u8bba     65  \n\n3.14    \u7ed3\u6784\u5316\u6982\u7387\u6a21\u578b     69    \n\n\n\u7b2c\u56db\u7ae0  \u6570\u503c\u8ba1\u7b97\n\n\n4.1 \u4e0a\u6ea2\u548c\u4e0b\u6ea2       72  \n\n4.2 \u75c5\u6001\u6761\u4ef6        73  \n\n4.3 \u57fa\u4e8e\u68af\u5ea6\u7684\u4f18\u5316\u65b9\u6cd5       74  \n\n4.3.1   \u68af\u5ea6\u4e4b\u4e0a:Jacobian\u548cHessian\u77e9\u9635     77  \n\n4.4 \u7ea6\u675f\u4f18\u5316        82  \n\n4.5 \u5b9e\u4f8b:\u7ebf\u6027\u6700\u5c0f\u4e8c\u4e58       85    \n\n\n\u7b2c\u4e94\u7ae0  \u673a\u5668\u5b66\u4e60\u57fa\u7840\n\n\n5.1 \u5b66\u4e60\u7b97\u6cd5        87  \n\n5.1.1   \u4efb\u52a1T     88  \n\n5.1.2   \u6027\u80fd\u5ea6\u91cfP       91  \n\n5.1.3   \u7ecf\u9a8cE     92  \n\n5.1.4   \u793a\u4f8b:\u7ebf\u6027\u56de\u5f52     94  \n\n5.2 \u5bb9\u91cf\u3001\u8fc7\u62df\u5408\u548c\u6b20\u62df\u5408      97  \n\n5.2.1   \u6ca1\u6709\u514d\u8d39\u5348\u9910\u5b9a\u7406        102 \n\n5.2.2   \u6b63\u5219\u5316     104 \n\n5.3 \u8d85\u53c2\u6570\u548c\u9a8c\u8bc1\u96c6     105 \n\n5.3.1   \u4ea4\u53c9\u9a8c\u8bc1        106 \n\n5.4 \u4f30\u8ba1\u3001\u504f\u5dee\u548c\u65b9\u5dee        108 \n\n5.4.1   \u70b9\u4f30\u8ba1     108 \n\n5.4.2   \u504f\u5dee      109 \n\n5.4.3   \u65b9\u5dee\u548c\u6807\u51c6\u5dee      111 \n\n5.4.4   \u6743\u8861\u504f\u5dee\u548c\u65b9\u5dee\u4ee5\u6700\u5c0f\u5316\u5747\u65b9\u8bef\u5dee     113 \n\n5.4.5   \u4e00\u81f4\u6027     114 \n\n5.5 \u6700\u5927\u4f3c\u7136\u4f30\u8ba1      115 \n\n5.5.1   \u6761\u4ef6\u5bf9\u6570\u4f3c\u7136\u548c\u5747\u65b9\u8bef\u5dee     116 \n\n5.5.2   \u6700\u5927\u4f3c\u7136\u7684\u6027\u8d28     117 \n\n5.6 \u8d1d\u53f6\u65af\u7edf\u8ba1       118 \n\n5.6.1   \u6700\u5927\u540e\u9a8c(MAP)\u4f30\u8ba1     121 \n\n5.7 \u76d1\u7763\u5b66\u4e60\u7b97\u6cd5      122 \n\n5.7.1   \u6982\u7387\u76d1\u7763\u5b66\u4e60      122 \n\n5.7.2   \u652f\u6301\u5411\u91cf\u673a       123 \n\n5.7.3   \u5176\u4ed6\u7b80\u5355\u7684\u76d1\u7763\u5b66\u4e60\u7b97\u6cd5     125 \n\n5.8 \u65e0\u76d1\u7763\u5b66\u4e60\u7b97\u6cd5     128 \n\n5.8.1   \u4e3b\u6210\u5206\u5206\u6790       128 \n\n5.8.2   k-\u5747\u503c\u805a\u7c7b      131 \n\n5.9 \u968f\u673a\u68af\u5ea6\u4e0b\u964d      132 \n\n5.1 \u6784\u5efa\u673a\u5668\u5b66\u4e60\u7b97\u6cd5        133 \n\n5.11    \u4fc3\u4f7f\u6df1\u5ea6\u5b66\u4e60\u53d1\u5c55\u7684\u6311\u6218     134 \n\n5.11.1  \u7ef4\u6570\u707e\u96be        135 \n\n5.11.2  \u5c40\u90e8\u4e0d\u53d8\u6027\u548c\u5e73\u6ed1\u6b63\u5219\u5316     135 \n\n5.11.3  \u6d41\u5f62\u5b66\u4e60        139   \n\n\n\u7b2c\u4e8c\u90e8\u5206    \u6df1\u5ea6\u7f51\u7edc:\u73b0\u4ee3\u5b9e\u8df5       143   \n\n\n\u7b2c\u516d\u7ae0  \u6df1\u5ea6\u524d\u9988\u7f51\u7edc\n\n\n6.1 \u5b9e\u4f8b:\u5b66\u4e60XOR        148 \n\n6.2 \u57fa\u4e8e\u68af\u5ea6\u7684\u5b66\u4e60     152 \n\n6.2.1   \u4ee3\u4ef7\u51fd\u6570        153 \n\n6.2.1.1 \u4f7f\u7528\u6700\u5927\u4f3c\u7136\u5b66\u4e60\u6761\u4ef6\u5206\u5e03        154 \n\n6.2.1.2 \u5b66\u4e60\u6761\u4ef6\u7edf\u8ba1\u91cf     155 \n\n6.2.2   \u8f93\u51fa\u5355\u5143        156 \n\n6.2.2.1 \u7528\u4e8e\u9ad8\u65af\u8f93\u51fa\u5206\u5e03\u7684\u7ebf\u6027\u5355\u5143       156 \n\n6.2.2.2 \u7528\u4e8eBernoulli\u8f93\u51fa\u5206\u5e03\u7684sigmoid\u5355\u5143       157 \n\n6.2.2.3 \u7528\u4e8eMultinoulli\u8f93\u51fa\u5206\u5e03\u7684softmax\u5355\u5143     159 \n\n6.2.2.4 \u5176\u4ed6\u7684\u8f93\u51fa\u7c7b\u578b     162 \n\n6.3 \u9690\u85cf\u5355\u5143        165 \n\n6.3.1   \u6574\u6d41\u7ebf\u6027\u5355\u5143\u53ca\u5176\u6269\u5c55      166 \n\n6.3.2   logisticsigmoid\u4e0e\u53cc\u66f2\u6b63\u5207\u51fd\u6570      168 \n\n6.3.3   \u5176\u4ed6\u9690\u85cf\u5355\u5143      169 \n\n6.4 \u67b6\u6784\u8bbe\u8ba1        17  \n\n6.4.1   \u4e07\u80fd\u8fd1\u4f3c\u6027\u8d28\u548c\u6df1\u5ea6       171 \n\n6.4.2   \u5176\u4ed6\u67b6\u6784\u4e0a\u7684\u8003\u8651        174 \n\n6.5 \u53cd\u5411\u4f20\u64ad\u548c\u5176\u4ed6\u7684\u5fae\u5206\u7b97\u6cd5        175 \n\n6.5.1   \u8ba1\u7b97\u56fe     176 \n\n6.5.2   \u5fae\u79ef\u5206\u4e2d\u7684\u94fe\u5f0f\u6cd5\u5219       178 \n\n6.5.3   \u9012\u5f52\u5730\u4f7f\u7528\u94fe\u5f0f\u6cd5\u5219\u6765\u5b9e\u73b0\u53cd\u5411\u4f20\u64ad        179 \n\n6.6             \n\n6.5.4   \u5168\u8fde\u63a5MLP\u4e2d\u7684\u53cd\u5411\u4f20\u64ad\u8ba1\u7b97      181 \n\n6.5.5   \u7b26\u53f7\u5230\u7b26\u53f7\u7684\u5bfc\u6570        182 \n\n6.5.6   \u4e00\u822c\u5316\u7684\u53cd\u5411\u4f20\u64ad        185 \n\n6.5.7   \u5b9e\u4f8b:\u7528\u4e8eMLP\u8bad\u7ec3\u7684\u53cd\u5411\u4f20\u64ad     188 \n\n6.5.8   \u590d\u6742\u5316     190 \n\n6.5.9   \u6df1\u5ea6\u5b66\u4e60\u754c\u4ee5\u5916\u7684\u5fae\u5206      191 \n\n6.5.10  \u9ad8\u9636\u5fae\u5206        193 \n\n\u5386\u53f2\u5c0f\u8bb0    0.193             \n\n\n\u7b2c\u4e03\u7ae0  \u6df1\u5ea6\u5b66\u4e60\u4e2d\u7684\u6b63\u5219\u5316\n\n\n7.1 \u53c2\u6570\u8303\u6570\u60e9\u7f5a      198 \n\n7.1.1   L2\u53c2\u6570\u6b63\u5219\u5316     199 \n\n7.1.2   L1\u53c2\u6570\u6b63\u5219\u5316     202 \n\n7.2 \u4f5c\u4e3a\u7ea6\u675f\u7684\u8303\u6570\u60e9\u7f5a       204 \n\n7.3 \u6b63\u5219\u5316\u548c\u6b20\u7ea6\u675f\u95ee\u9898       206 \n\n7.4 \u6570\u636e\u96c6\u589e\u5f3a       207 \n\n7.5 \u566a\u58f0\u9c81\u68d2\u6027       208 \n\n7.5.1   \u5411\u8f93\u51fa\u76ee\u6807\u6ce8\u5165\u566a\u58f0       209 \n\n7.6 \u534a\u76d1\u7763\u5b66\u4e60       209 \n\n7.7 \u591a\u4efb\u52a1\u5b66\u4e60       210 \n\n7.8 \u63d0\u524d\u7ec8\u6b62        211 \n\n7.9 \u53c2\u6570\u7ed1\u5b9a\u548c\u53c2\u6570\u5171\u4eab       217 \n\n7.9.1   \u5377\u79ef\u795e\u7ecf\u7f51\u7edc      218 \n\n7.1 \u7a00\u758f\u8868\u793a        218 \n\n7.11    Bagging\u548c\u5176\u4ed6\u96c6\u6210\u65b9\u6cd5      22  \n\n7.12    Dropout     222 \n\n7.13    \u5bf9\u6297\u8bad\u7ec3        23  \n\n7.14    \u5207\u9762\u8ddd\u79bb\u3001\u6b63\u5207\u4f20\u64ad\u548c\u6d41\u5f62\u6b63\u5207\u5206\u7c7b\u5668       232   \n\n\n\u7b2c\u516b\u7ae0  \u6df1\u5ea6\u6a21\u578b\u4e2d\u7684\u4f18\u5316\n\n\n8.1 \u5b66\u4e60\u548c\u7eaf\u4f18\u5316\u6709\u4ec0\u4e48\u4e0d\u540c     235 \n\n8.1.1   \u7ecf\u9a8c\u98ce\u9669\u6700\u5c0f\u5316     236 \n\n8.1.2   \u4ee3\u7406\u635f\u5931\u51fd\u6570\u548c\u63d0\u524d\u7ec8\u6b62     237 \n\n8.1.3   \u6279\u91cf\u7b97\u6cd5\u548c\u5c0f\u6279\u91cf\u7b97\u6cd5      237 \n\n8.2 \u795e\u7ecf\u7f51\u7edc\u4f18\u5316\u4e2d\u7684\u6311\u6218      241 \n\n8.2.1   \u75c5\u6001      242 \n\n8.2.2   \u5c40\u90e8\u6781\u5c0f\u503c       243 \n\n8.2.3   \u9ad8\u539f\u3001\u978d\u70b9\u548c\u5176\u4ed6\u5e73\u5766\u533a\u57df        244 \n\n8.2.4   \u60ac\u5d16\u548c\u68af\u5ea6\u7206\u70b8     246 \n\n8.2.5   \u957f\u671f\u4f9d\u8d56        247 \n\n8.2.6   \u975e\u7cbe\u786e\u68af\u5ea6       248 \n\n8.2.7   \u5c40\u90e8\u548c\u5168\u5c40\u7ed3\u6784\u95f4\u7684\u5f31\u5bf9\u5e94        248 \n\n8.2.8   \u4f18\u5316\u7684\u7406\u8bba\u9650\u5236     250 \n\n8.3 \u57fa\u672c\u7b97\u6cd5        251 \n\n8.3.1   \u968f\u673a\u68af\u5ea6\u4e0b\u964d      251 \n\n8.3.2   \u52a8\u91cf      253 \n\n8.3.3   Nesterov\u52a8\u91cf      256 \n\n8.4 \u53c2\u6570\u521d\u59cb\u5316\u7b56\u7565     256 \n\n8.5 \u81ea\u9002\u5e94\u5b66\u4e60\u7387\u7b97\u6cd5        261 \n\n8.5.1   AdaGrad     261 \n\n8.5.2   RMSProp     262 \n\n8.5.3   Adam        262 \n\n8.5.4   \u9009\u62e9\u6b63\u786e\u7684\u4f18\u5316\u7b97\u6cd5       263 \n\n8.6 \u4e8c\u9636\u8fd1\u4f3c\u65b9\u6cd5      265 \n\n8.6.1   \u725b\u987f\u6cd5     266 \n\n8.6.2   \u5171\u8f6d\u68af\u5ea6        267 \n\n8.6.3   BFGS        270 \n\n8.7 \u4f18\u5316\u7b56\u7565\u548c\u5143\u7b97\u6cd5        271 \n\n8.7.1   \u6279\u6807\u51c6\u5316        271 \n\n8.7.2   \u5750\u6807\u4e0b\u964d        274 \n\n8.7.3   Polyak\u5e73\u5747        274 \n\n8.7.4   \u76d1\u7763\u9884\u8bad\u7ec3       275 \n\n8.7.5   \u8bbe\u8ba1\u6709\u52a9\u4e8e\u4f18\u5316\u7684\u6a21\u578b      277 \n\n8.7.6   \u5ef6\u62d3\u6cd5\u548c\u8bfe\u7a0b\u5b66\u4e60        278   \n\n\n\u7b2c\u4e5d\u7ae0  \u5377\u79ef\u7f51\u7edc\n\n\n9.1 \u5377\u79ef\u8fd0\u7b97        282 \n\n9.2 \u52a8\u673a      285 \n\n9.3 \u6c60\u5316      290 \n\n9.4 \u5377\u79ef\u4e0e\u6c60\u5316\u4f5c\u4e3a\u4e00\u79cd\u65e0\u9650\u5f3a\u7684\u5148\u9a8c     295 \n\n9.5 \u57fa\u672c\u5377\u79ef\u51fd\u6570\u7684\u53d8\u4f53       296 \n\n9.6 \u7ed3\u6784\u5316\u8f93\u51fa       306 \n\n9.7 \u6570\u636e\u7c7b\u578b        307 \n\n9.8 \u9ad8\u6548\u7684\u5377\u79ef\u7b97\u6cd5     309 \n\n9.9 \u968f\u673a\u6216\u65e0\u76d1\u7763\u7684\u7279\u5f81       31  \n\n9.1 \u5377\u79ef\u7f51\u7edc\u7684\u795e\u7ecf\u79d1\u5b66\u57fa\u7840     311 \n\n9.11    \u5377\u79ef\u7f51\u7edc\u4e0e\u6df1\u5ea6\u5b66\u4e60\u7684\u5386\u53f2        317   \n\n\n\u7b2c\u5341\u7ae0  \u5e8f\u5217\u5efa\u6a21:\u5faa\u73af\u548c\u9012\u5f52\u7f51\u7edc\n\n\n10.1    \u5c55\u5f00\u8ba1\u7b97\u56fe       320 \n\n10.2    \u5faa\u73af\u795e\u7ecf\u7f51\u7edc      323 \n\n10.2.1  \u5bfc\u5e08\u9a71\u52a8\u8fc7\u7a0b\u548c\u8f93\u51fa\u5faa\u73af\u7f51\u7edc       326 \n\n10.2.2  \u8ba1\u7b97\u5faa\u73af\u795e\u7ecf\u7f51\u7edc\u7684\u68af\u5ea6     328 \n\n10.2.3  \u4f5c\u4e3a\u6709\u5411\u56fe\u6a21\u578b\u7684\u5faa\u73af\u7f51\u7edc        330 \n\n10.2.4  \u57fa\u4e8e\u4e0a\u4e0b\u6587\u7684RNN\u5e8f\u5217\u5efa\u6a21       334 \n\n10.3    \u53cc\u5411RNN       336 \n\n10.4    \u57fa\u4e8e\u7f16\u7801-\u89e3\u7801\u7684\u5e8f\u5217\u5230\u5e8f\u5217\u67b6\u6784     338 \n\n10.5    \u6df1\u5ea6\u5faa\u73af\u7f51\u7edc      34  \n\n10.6    \u9012\u5f52\u795e\u7ecf\u7f51\u7edc      341 \n\n10.7    \u957f\u671f\u4f9d\u8d56\u7684\u6311\u6218     343 \n\n10.8    \u56de\u58f0\u72b6\u6001\u7f51\u7edc      345 \n\n10.9    \u6e17\u6f0f\u5355\u5143\u548c\u5176\u4ed6\u591a\u65f6\u95f4\u5c3a\u5ea6\u7684\u7b56\u7565     347 \n\n10.9.1  \u65f6\u95f4\u7ef4\u5ea6\u7684\u8df3\u8dc3\u8fde\u63a5       347 \n\n10.9.2  \u6e17\u6f0f\u5355\u5143\u548c\u4e00\u7cfb\u5217\u4e0d\u540c\u65f6\u95f4\u5c3a\u5ea6      348 \n\n10.9.3  \u5220\u9664\u8fde\u63a5        348 \n\n10.1    \u957f\u77ed\u671f\u8bb0\u5fc6\u548c\u5176\u4ed6\u95e8\u63a7RNN       349 \n\n10.10.1 LSTM        349 \n\n10.10.2 \u5176\u4ed6\u95e8\u63a7RNN     351 \n\n10.11   \u4f18\u5316\u957f\u671f\u4f9d\u8d56      352 \n\n10.11.1 \u622a\u65ad\u68af\u5ea6        353 \n\n10.11.2 \u5f15\u5bfc\u4fe1\u606f\u6d41\u7684\u6b63\u5219\u5316       355 \n\n10.12\u5916\u663e\u8bb0\u5fc6   0.355             \n\n\n\u7b2c\u5341\u4e00\u7ae0 \u5b9e\u8df5\u65b9\u6cd5\u8bba\n\n\n11.1    \u6027\u80fd\u5ea6\u91cf        36  \n\n11.2    \u9ed8\u8ba4\u7684\u57fa\u51c6\u6a21\u578b     362 \n\n11.3    \u51b3\u5b9a\u662f\u5426\u6536\u96c6\u66f4\u591a\u6570\u636e      363 \n\n11.4    \u9009\u62e9\u8d85\u53c2\u6570       364 \n\n11.4.1  \u624b\u52a8\u8c03\u6574\u8d85\u53c2\u6570     364 \n\n11.4.2  \u81ea\u52a8\u8d85\u53c2\u6570\u4f18\u5316\u7b97\u6cd5       367 \n\n11.4.3  \u7f51\u683c\u641c\u7d22        368 \n\n11.4.4  \u968f\u673a\u641c\u7d22        369 \n\n11.4.5  \u57fa\u4e8e\u6a21\u578b\u7684\u8d85\u53c2\u6570\u4f18\u5316      37  \n\n11.5    \u8c03\u8bd5\u7b56\u7565        371 \n\n11.6    \u793a\u4f8b:\u591a\u4f4d\u6570\u5b57\u8bc6\u522b       374   \n\n\n\u7b2c\u5341\u4e8c\u7ae0 \u5e94\u7528\n\n\n12.1    \u5927\u89c4\u6a21\u6df1\u5ea6\u5b66\u4e60     377 \n\n12.1.1  \u5feb\u901f\u7684CPU\u5b9e\u73b0        378 \n\n12.1.2  GPU\u5b9e\u73b0       378 \n\n12.1.3  \u5927\u89c4\u6a21\u7684\u5206\u5e03\u5f0f\u5b9e\u73b0       380 \n\n12.1.4  \u6a21\u578b\u538b\u7f29        381 \n\n12.1.5  \u52a8\u6001\u7ed3\u6784        382 \n\n12.1.6  \u6df1\u5ea6\u7f51\u7edc\u7684\u4e13\u7528\u786c\u4ef6\u5b9e\u73b0     384 \n\n12.2    \u8ba1\u7b97\u673a\u89c6\u89c9       385 \n\n12.2.1  \u9884\u5904\u7406     385 \n\n12.2.1.1\u5bf9\u6bd4\u5ea6\u5f52\u4e00\u5316  0.386           \n\n12.2.2  \u6570\u636e\u96c6\u589e\u5f3a       389 \n\n12.3    \u8bed\u97f3\u8bc6\u522b        39  \n\n12.4    \u81ea\u7136\u8bed\u8a00\u5904\u7406      392 \n\n12.4.1  n-gram      392 \n\n12.4.2  \u795e\u7ecf\u8bed\u8a00\u6a21\u578b      394 \n\n12.4.3  \u9ad8\u7ef4\u8f93\u51fa        396 \n\n12.4.3.1\u4f7f\u7528\u77ed\u5217\u8868   396         \n\n12.4.3.2\u5206\u5c42Softmax   0.397           \n\n12.4.3.3    \u91cd\u8981\u91c7\u6837        399 \n\n12.4.3.4    \u566a\u58f0\u5bf9\u6bd4\u4f30\u8ba1\u548c\u6392\u540d\u635f\u5931     401 \n\n12.4.4  \u7ed3\u5408n-gram\u548c\u795e\u7ecf\u8bed\u8a00\u6a21\u578b     401 \n\n12.4.5  \u795e\u7ecf\u673a\u5668\u7ffb\u8bd1      402 \n\n12.4.5.1    \u4f7f\u7528\u6ce8\u610f\u529b\u673a\u5236\u5e76\u5bf9\u9f50\u6570\u636e\u7247\u6bb5      403 \n\n12.4.6  \u5386\u53f2\u5c55\u671b        406 \n\n12.5    \u5176\u4ed6\u5e94\u7528        407 \n\n12.5.1  \u63a8\u8350\u7cfb\u7edf        407 \n\n12.5.1.1\u63a2\u7d22\u4e0e\u5229\u7528   409         \n\n12.5.2  \u77e5\u8bc6\u8868\u793a\u3001\u63a8\u7406\u548c\u56de\u7b54      41  \n\n12.5.2.1    \u77e5\u8bc6\u3001\u8054\u7cfb\u548c\u56de\u7b54        41    \n\n\n\u7b2c\u4e09\u90e8\u5206    \u6df1\u5ea6\u5b66\u4e60\u7814\u7a76      414   \n\n\n\u7b2c\u5341\u4e09\u7ae0 \u7ebf\u6027\u56e0\u5b50\u6a21\u578b\n\n\n13.1    \u6982\u7387PCA\u548c\u56e0\u5b50\u5206\u6790      418 \n\n13.2    \u72ec\u7acb\u6210\u5206\u5206\u6790      419 \n\n13.3    \u6162\u7279\u5f81\u5206\u6790       421 \n\n13.4    \u7a00\u758f\u7f16\u7801        423 \n\n13.5    PCA\u7684\u6d41\u5f62\u89e3\u91ca        426   \n\n\n\u7b2c\u5341\u56db\u7ae0 \u81ea\u7f16\u7801\u5668\n\n\n14.1    \u6b20\u5b8c\u5907\u81ea\u7f16\u7801\u5668     430 \n\n14.2    \u6b63\u5219\u81ea\u7f16\u7801\u5668      431 \n\n14.2.1  \u7a00\u758f\u81ea\u7f16\u7801\u5668      431 \n\n14.2.2  \u53bb\u566a\u81ea\u7f16\u7801\u5668      433 \n\n14.2.3  \u60e9\u7f5a\u5bfc\u6570\u4f5c\u4e3a\u6b63\u5219        434 \n\n14.3    \u8868\u793a\u80fd\u529b\u3001\u5c42\u7684\u5927\u5c0f\u548c\u6df1\u5ea6        434 \n\n14.4    \u968f\u673a\u7f16\u7801\u5668\u548c\u89e3\u7801\u5668       435 \n\n14.5    \u53bb\u566a\u81ea\u7f16\u7801\u5668      436 \n\n14.5.1  \u5f97\u5206\u4f30\u8ba1        437 \n\n14.5.2  \u5386\u53f2\u5c55\u671b        440 \n\n14.6    \u4f7f\u7528\u81ea\u7f16\u7801\u5668\u5b66\u4e60\u6d41\u5f62      440 \n\n14.7    \u6536\u7f29\u81ea\u7f16\u7801\u5668      445 \n\n14.8    \u9884\u6d4b\u7a00\u758f\u5206\u89e3      447 \n\n14.9    \u81ea\u7f16\u7801\u5668\u7684\u5e94\u7528     448   \n\n\n\u7b2c\u5341\u4e94\u7ae0 \u8868\u793a\u5b66\u4e60\n\n\n15.1    \u8d2a\u5fc3\u9010\u5c42\u65e0\u76d1\u7763\u9884\u8bad\u7ec3      450 \n\n15.1.1  \u4f55\u65f6\u4ee5\u53ca\u4e3a\u4f55\u65e0\u76d1\u7763\u9884\u8bad\u7ec3\u6709\u6548?     452 \n\n15.2    \u8fc1\u79fb\u5b66\u4e60\u548c\u9886\u57df\u81ea\u9002\u5e94      457 \n\n15.3    \u534a\u76d1\u7763\u89e3\u91ca\u56e0\u679c\u5173\u7cfb       461 \n\n15.4    \u5206\u5e03\u5f0f\u8868\u793a       466 \n\n15.5    \u5f97\u76ca\u4e8e\u6df1\u5ea6\u7684\u6307\u6570\u589e\u76ca      471 \n\n15.6    \u63d0\u4f9b\u53d1\u73b0\u6f5c\u5728\u539f\u56e0\u7684\u7ebf\u7d22     472   \n\n\n\u7b2c\u5341\u516d\u7ae0 \u6df1\u5ea6\u5b66\u4e60\u4e2d\u7684\u7ed3\u6784\u5316\u6982\u7387\u6a21\u578b\n\n\n16.1    \u975e\u7ed3\u6784\u5316\u5efa\u6a21\u7684\u6311\u6218       476 \n\n16.2    \u4f7f\u7528\u56fe\u63cf\u8ff0\u6a21\u578b\u7ed3\u6784       479 \n\n16.2.1  \u6709\u5411\u6a21\u578b        480 \n\n16.2.2  \u65e0\u5411\u6a21\u578b        482 \n\n16.2.3  \u914d\u5206\u51fd\u6570        484 \n\n16.2.4  \u57fa\u4e8e\u80fd\u91cf\u7684\u6a21\u578b     485 \n\n16.2.5  \u5206\u79bb\u548cd-\u5206\u79bb     487 \n\n16.2.6  \u5728\u6709\u5411\u6a21\u578b\u548c\u65e0\u5411\u6a21\u578b\u4e2d\u8f6c\u6362       49  \n\n16.2.7  \u56e0\u5b50\u56fe     493 \n\n16.3    \u4ece\u56fe\u6a21\u578b\u4e2d\u91c7\u6837     494 \n\n16.4    \u7ed3\u6784\u5316\u5efa\u6a21\u7684\u4f18\u52bf        495 \n\n16.5    \u5b66\u4e60\u4f9d\u8d56\u5173\u7cfb      496 \n\n16.6    \u63a8\u65ad\u548c\u8fd1\u4f3c\u63a8\u65ad     497 \n\n16.7    \u7ed3\u6784\u5316\u6982\u7387\u6a21\u578b\u7684\u6df1\u5ea6\u5b66\u4e60\u65b9\u6cd5      498 \n\n16.7.1  \u5b9e\u4f8b:\u53d7\u9650\u73bb\u5c14\u5179\u66fc\u673a      499   \n\n\n\u7b2c\u5341\u4e03\u7ae0 \u8499\u7279\u5361\u7f57\u65b9\u6cd5\n\n\n17.1    \u91c7\u6837\u548c\u8499\u7279\u5361\u7f57\u65b9\u6cd5       502 \n\n17.1.1  \u4e3a\u4ec0\u4e48\u9700\u8981\u91c7\u6837?        502 \n\n17.1.2  \u8499\u7279\u5361\u7f57\u91c7\u6837\u7684\u57fa\u7840       503 \n\n17.2    \u91cd\u8981\u91c7\u6837        504 \n\n17.3    \u9a6c\u5c14\u53ef\u592b\u94fe\u8499\u7279\u5361\u7f57\u65b9\u6cd5     506 \n\n17.4    Gibbs\u91c7\u6837     510 \n\n17.5    \u4e0d\u540c\u7684\u5cf0\u503c\u4e4b\u95f4\u7684\u6df7\u5408\u6311\u6218        511 \n\n17.5.1  \u4e0d\u540c\u5cf0\u503c\u4e4b\u95f4\u901a\u8fc7\u56de\u706b\u6765\u6df7\u5408       513 \n\n17.5.2  \u6df1\u5ea6\u4e5f\u8bb8\u4f1a\u6709\u52a9\u4e8e\u6df7\u5408      514   \n\n\n\u7b2c\u5341\u516b\u7ae0 \u76f4\u9762\u914d\u5206\u51fd\u6570\n\n\n18.1    \u5bf9\u6570\u4f3c\u7136\u68af\u5ea6      516 \n\n18.2    \u968f\u673a\u6700\u5927\u4f3c\u7136\u548c\u5bf9\u6bd4\u6563\u5ea6     518 \n\n18.3    \u4f2a\u4f3c\u7136     524 \n\n18.4    \u5f97\u5206\u5339\u914d\u548c\u6bd4\u7387\u5339\u914d       526 \n\n18.5    \u53bb\u566a\u5f97\u5206\u5339\u914d      528 \n\n18.6    \u566a\u58f0\u5bf9\u6bd4\u4f30\u8ba1      529 \n\n18.7    \u4f30\u8ba1\u914d\u5206\u51fd\u6570      531 \n\n18.7.1  \u9000\u706b\u91cd\u8981\u91c7\u6837      533 \n\n18.7.2  \u6865\u5f0f\u91c7\u6837        536   \n\n\n\u7b2c\u5341\u4e5d\u7ae0 \u8fd1\u4f3c\u63a8\u65ad\n\n\n19.1    \u628a\u63a8\u65ad\u89c6\u4f5c\u4f18\u5316\u95ee\u9898       539 \n\n19.2    \u671f\u671b\u6700\u5927\u5316       541 \n\n19.3    \u6700\u5927\u540e\u9a8c\u63a8\u65ad\u548c\u7a00\u758f\u7f16\u7801     542 \n\n19.4    \u53d8\u5206\u63a8\u65ad\u548c\u53d8\u5206\u5b66\u4e60       544 \n\n19.4.1  \u79bb\u6563\u578b\u6f5c\u53d8\u91cf      545 \n\n19.4.2  \u53d8\u5206\u6cd5     551 \n\n19.4.3  \u8fde\u7eed\u578b\u6f5c\u53d8\u91cf      554 \n\n19.4.4  \u5b66\u4e60\u548c\u63a8\u65ad\u4e4b\u95f4\u7684\u76f8\u4e92\u4f5c\u7528        556 \n\n19.5    \u5b66\u6210\u8fd1\u4f3c\u63a8\u65ad      556 \n\n19.5.1  \u9192\u7720\u7b97\u6cd5        557 \n\n19.5.2  \u5b66\u6210\u63a8\u65ad\u7684\u5176\u4ed6\u5f62\u5f0f       557   \n\n\n\u7b2c\u4e8c\u5341\u7ae0 \u6df1\u5ea6\u751f\u6210\u6a21\u578b\n\n\n20.1    \u73bb\u5c14\u5179\u66fc\u673a       559 \n\n20.2    \u53d7\u9650\u73bb\u5c14\u5179\u66fc\u673a     561 \n\n20.2.1  \u6761\u4ef6\u5206\u5e03        562 \n\n20.2.2  \u8bad\u7ec3\u53d7\u9650\u73bb\u5c14\u5179\u66fc\u673a       563 \n\n20.3    \u6df1\u5ea6\u4fe1\u5ff5\u7f51\u7edc      564 \n\n20.4    \u6df1\u5ea6\u73bb\u5c14\u5179\u66fc\u673a     566 \n\n20.4.1  \u6709\u8da3\u7684\u6027\u8d28       568 \n\n20.4.2  DBM\u5747\u5300\u573a\u63a8\u65ad        569 \n\n20.4.3  DBM\u7684\u53c2\u6570\u5b66\u4e60        571 \n\n20.4.4  \u9010\u5c42\u9884\u8bad\u7ec3       572 \n\n20.4.5  \u8054\u5408\u8bad\u7ec3\u6df1\u5ea6\u73bb\u5c14\u5179\u66fc\u673a     574 \n\n20.5    \u5b9e\u503c\u6570\u636e\u4e0a\u7684\u73bb\u5c14\u5179\u66fc\u673a     578 \n\n20.5.1  Gaussian-BernoulliRBM       578 \n\n20.5.2  \u6761\u4ef6\u534f\u65b9\u5dee\u7684\u65e0\u5411\u6a21\u578b      579 \n\n20.6    \u5377\u79ef\u73bb\u5c14\u5179\u66fc\u673a     583 \n\n20.7    \u7528\u4e8e\u7ed3\u6784\u5316\u6216\u5e8f\u5217\u8f93\u51fa\u7684\u73bb\u5c14\u5179\u66fc\u673a        585 \n\n20.8    \u5176\u4ed6\u73bb\u5c14\u5179\u66fc\u673a     586 \n\n20.9    \u901a\u8fc7\u968f\u673a\u64cd\u4f5c\u7684\u53cd\u5411\u4f20\u64ad     587 \n\n20.9.1  \u901a\u8fc7\u79bb\u6563\u968f\u673a\u64cd\u4f5c\u7684\u53cd\u5411\u4f20\u64ad       588 \n\n20.1    \u6709\u5411\u751f\u6210\u7f51\u7edc      591 \n\n20.10.1 sigmoid\u4fe1\u5ff5\u7f51\u7edc     591 \n\n20.10.2 \u53ef\u5fae\u751f\u6210\u5668\u7f51\u7edc     592 \n\n20.10.3 \u53d8\u5206\u81ea\u7f16\u7801\u5668      594 \n\n20.10.4 \u751f\u6210\u5f0f\u5bf9\u6297\u7f51\u7edc     597 \n\n20.10.5 \u751f\u6210\u77e9\u5339\u914d\u7f51\u7edc     600 \n\n20.10.6 \u5377\u79ef\u751f\u6210\u7f51\u7edc      601 \n\n20.10.7 \u81ea\u56de\u5f52\u7f51\u7edc       602 \n\n20.10.8 \u7ebf\u6027\u81ea\u56de\u5f52\u7f51\u7edc     602 \n\n20.10.9 \u795e\u7ecf\u81ea\u56de\u5f52\u7f51\u7edc     603 \n\n20.10.10    NADE        604", 
            "title": "\u6df1\u5ea6\u5b66\u4e60\u4e2d\u6587\u7248"
        }, 
        {
            "location": "/\u4e66\u7c4d/\u6df1\u5ea6\u5b66\u4e60/DeepLearning/#_1", 
            "text": "", 
            "title": "\u6df1\u5ea6\u5b66\u4e60\u4e2d\u6587\u7248"
        }, 
        {
            "location": "/\u4e66\u7c4d/\u6df1\u5ea6\u5b66\u4e60/DeepLearning/#_2", 
            "text": "", 
            "title": "\u5168\u6587"
        }, 
        {
            "location": "/\u4e66\u7c4d/\u6df1\u5ea6\u5b66\u4e60/DeepLearning/#_3", 
            "text": "\u6570\u5b66\u7b26\u53f7", 
            "title": "\u76ee\u5f55"
        }, 
        {
            "location": "/\u4e66\u7c4d/\u6df1\u5ea6\u5b66\u4e60/DeepLearning/#_4", 
            "text": "1.1 \u672c\u4e66\u9762\u5411\u7684\u8bfb\u8005     10   \n1.2 \u6df1\u5ea6\u5b66\u4e60\u7684\u5386\u53f2\u8d8b\u52bf       11   \n1.2.1   \u795e\u7ecf\u7f51\u7edc\u7684\u4f17\u591a\u540d\u79f0\u548c\u547d\u8fd0\u53d8\u8fc1      12   \n1.2.2   \u4e0e\u65e5\u4ff1\u589e\u7684\u6570\u636e\u91cf        17   \n1.2.3   \u4e0e\u65e5\u4ff1\u589e\u7684\u6a21\u578b\u89c4\u6a21       19   \n1.2.4   \u4e0e\u65e5\u4ff1\u589e\u7684\u7cbe\u5ea6\u3001\u590d\u6742\u5ea6\u548c\u5bf9\u73b0\u5b9e\u4e16\u754c\u7684\u51b2\u51fb        22      \u7b2c\u4e00\u90e8\u5206    \u5e94\u7528\u6570\u5b66\u4e0e\u673a\u5668\u5b66\u4e60\u57fa\u7840     25", 
            "title": "\u7b2c\u4e00\u7ae0 \u5f15\u8a00"
        }, 
        {
            "location": "/\u4e66\u7c4d/\u6df1\u5ea6\u5b66\u4e60/DeepLearning/#_5", 
            "text": "2.1 \u6807\u91cf\u3001\u5411\u91cf\u3001\u77e9\u9635\u548c\u5f20\u91cf     27   \n2.2 \u77e9\u9635\u548c\u5411\u91cf\u76f8\u4e58     29   \n2.3 \u5355\u4f4d\u77e9\u9635\u548c\u9006\u77e9\u9635        31   \n2.4 \u7ebf\u6027\u76f8\u5173\u548c\u751f\u6210\u5b50\u7a7a\u95f4      32   \n2.5 \u8303\u6570      34   \n2.6 \u7279\u6b8a\u7c7b\u578b\u7684\u77e9\u9635\u548c\u5411\u91cf      36   \n2.7 \u7279\u5f81\u5206\u89e3        37   \n2.8 \u5947\u5f02\u503c\u5206\u89e3       39   \n2.9 Moore-Penrose\u4f2a\u9006     40   \n2.1 \u8ff9\u8fd0\u7b97     41   \n2.11    \u884c\u5217\u5f0f     42   \n2.12    \u5b9e\u4f8b:\u4e3b\u6210\u5206\u5206\u6790        42", 
            "title": "\u7b2c\u4e8c\u7ae0 \u7ebf\u6027\u4ee3\u6570"
        }, 
        {
            "location": "/\u4e66\u7c4d/\u6df1\u5ea6\u5b66\u4e60/DeepLearning/#_6", 
            "text": "3.1 \u4e3a\u4ec0\u4e48\u8981\u4f7f\u7528\u6982\u7387?       47   \n3.2 \u968f\u673a\u53d8\u91cf        49   \n3.3 \u6982\u7387\u5206\u5e03        50   \n3.3.1   \u79bb\u6563\u578b\u53d8\u91cf\u548c\u6982\u7387\u8d28\u91cf\u51fd\u6570        50   \n3.3.2   \u8fde\u7eed\u578b\u53d8\u91cf\u548c\u6982\u7387\u5bc6\u5ea6\u51fd\u6570        51   \n3.4 \u8fb9\u7f18\u6982\u7387        52   \n3.5 \u6761\u4ef6\u6982\u7387        52   \n3.6 \u6761\u4ef6\u6982\u7387\u7684\u94fe\u5f0f\u6cd5\u5219       53   \n3.7 \u72ec\u7acb\u6027\u548c\u6761\u4ef6\u72ec\u7acb\u6027       53   \n3.8 \u671f\u671b\u3001\u65b9\u5dee\u548c\u534f\u65b9\u5dee       54   \n3.9 \u5e38\u7528\u6982\u7387\u5206\u5e03      55   \n3.9.1   Bernoulli\u5206\u5e03     56   \n3.9.2   Multinoulli\u5206\u5e03       56   \n3.9.3   \u9ad8\u65af\u5206\u5e03        57   \n3.9.4   \u6307\u6570\u5206\u5e03\u548cLaplace\u5206\u5e03      58   \n3.9.5   Dirac\u5206\u5e03\u548c\u7ecf\u9a8c\u5206\u5e03        59   \n3.9.6   \u5206\u5e03\u7684\u6df7\u5408       59   \n3.1 \u5e38\u7528\u51fd\u6570\u7684\u6709\u7528\u6027\u8d28       61   \n3.11    \u8d1d\u53f6\u65af\u89c4\u5219       63   \n3.12    \u8fde\u7eed\u578b\u53d8\u91cf\u7684\u6280\u672f\u7ec6\u8282      64   \n3.13    \u4fe1\u606f\u8bba     65   \n3.14    \u7ed3\u6784\u5316\u6982\u7387\u6a21\u578b     69", 
            "title": "\u7b2c\u4e09\u7ae0 \u6982\u7387\u4e0e\u4fe1\u606f\u8bba"
        }, 
        {
            "location": "/\u4e66\u7c4d/\u6df1\u5ea6\u5b66\u4e60/DeepLearning/#_7", 
            "text": "4.1 \u4e0a\u6ea2\u548c\u4e0b\u6ea2       72   \n4.2 \u75c5\u6001\u6761\u4ef6        73   \n4.3 \u57fa\u4e8e\u68af\u5ea6\u7684\u4f18\u5316\u65b9\u6cd5       74   \n4.3.1   \u68af\u5ea6\u4e4b\u4e0a:Jacobian\u548cHessian\u77e9\u9635     77   \n4.4 \u7ea6\u675f\u4f18\u5316        82   \n4.5 \u5b9e\u4f8b:\u7ebf\u6027\u6700\u5c0f\u4e8c\u4e58       85", 
            "title": "\u7b2c\u56db\u7ae0  \u6570\u503c\u8ba1\u7b97"
        }, 
        {
            "location": "/\u4e66\u7c4d/\u6df1\u5ea6\u5b66\u4e60/DeepLearning/#_8", 
            "text": "5.1 \u5b66\u4e60\u7b97\u6cd5        87   \n5.1.1   \u4efb\u52a1T     88   \n5.1.2   \u6027\u80fd\u5ea6\u91cfP       91   \n5.1.3   \u7ecf\u9a8cE     92   \n5.1.4   \u793a\u4f8b:\u7ebf\u6027\u56de\u5f52     94   \n5.2 \u5bb9\u91cf\u3001\u8fc7\u62df\u5408\u548c\u6b20\u62df\u5408      97   \n5.2.1   \u6ca1\u6709\u514d\u8d39\u5348\u9910\u5b9a\u7406        102  \n5.2.2   \u6b63\u5219\u5316     104  \n5.3 \u8d85\u53c2\u6570\u548c\u9a8c\u8bc1\u96c6     105  \n5.3.1   \u4ea4\u53c9\u9a8c\u8bc1        106  \n5.4 \u4f30\u8ba1\u3001\u504f\u5dee\u548c\u65b9\u5dee        108  \n5.4.1   \u70b9\u4f30\u8ba1     108  \n5.4.2   \u504f\u5dee      109  \n5.4.3   \u65b9\u5dee\u548c\u6807\u51c6\u5dee      111  \n5.4.4   \u6743\u8861\u504f\u5dee\u548c\u65b9\u5dee\u4ee5\u6700\u5c0f\u5316\u5747\u65b9\u8bef\u5dee     113  \n5.4.5   \u4e00\u81f4\u6027     114  \n5.5 \u6700\u5927\u4f3c\u7136\u4f30\u8ba1      115  \n5.5.1   \u6761\u4ef6\u5bf9\u6570\u4f3c\u7136\u548c\u5747\u65b9\u8bef\u5dee     116  \n5.5.2   \u6700\u5927\u4f3c\u7136\u7684\u6027\u8d28     117  \n5.6 \u8d1d\u53f6\u65af\u7edf\u8ba1       118  \n5.6.1   \u6700\u5927\u540e\u9a8c(MAP)\u4f30\u8ba1     121  \n5.7 \u76d1\u7763\u5b66\u4e60\u7b97\u6cd5      122  \n5.7.1   \u6982\u7387\u76d1\u7763\u5b66\u4e60      122  \n5.7.2   \u652f\u6301\u5411\u91cf\u673a       123  \n5.7.3   \u5176\u4ed6\u7b80\u5355\u7684\u76d1\u7763\u5b66\u4e60\u7b97\u6cd5     125  \n5.8 \u65e0\u76d1\u7763\u5b66\u4e60\u7b97\u6cd5     128  \n5.8.1   \u4e3b\u6210\u5206\u5206\u6790       128  \n5.8.2   k-\u5747\u503c\u805a\u7c7b      131  \n5.9 \u968f\u673a\u68af\u5ea6\u4e0b\u964d      132  \n5.1 \u6784\u5efa\u673a\u5668\u5b66\u4e60\u7b97\u6cd5        133  \n5.11    \u4fc3\u4f7f\u6df1\u5ea6\u5b66\u4e60\u53d1\u5c55\u7684\u6311\u6218     134  \n5.11.1  \u7ef4\u6570\u707e\u96be        135  \n5.11.2  \u5c40\u90e8\u4e0d\u53d8\u6027\u548c\u5e73\u6ed1\u6b63\u5219\u5316     135  \n5.11.3  \u6d41\u5f62\u5b66\u4e60        139     \u7b2c\u4e8c\u90e8\u5206    \u6df1\u5ea6\u7f51\u7edc:\u73b0\u4ee3\u5b9e\u8df5       143", 
            "title": "\u7b2c\u4e94\u7ae0  \u673a\u5668\u5b66\u4e60\u57fa\u7840"
        }, 
        {
            "location": "/\u4e66\u7c4d/\u6df1\u5ea6\u5b66\u4e60/DeepLearning/#_9", 
            "text": "6.1 \u5b9e\u4f8b:\u5b66\u4e60XOR        148  \n6.2 \u57fa\u4e8e\u68af\u5ea6\u7684\u5b66\u4e60     152  \n6.2.1   \u4ee3\u4ef7\u51fd\u6570        153  \n6.2.1.1 \u4f7f\u7528\u6700\u5927\u4f3c\u7136\u5b66\u4e60\u6761\u4ef6\u5206\u5e03        154  \n6.2.1.2 \u5b66\u4e60\u6761\u4ef6\u7edf\u8ba1\u91cf     155  \n6.2.2   \u8f93\u51fa\u5355\u5143        156  \n6.2.2.1 \u7528\u4e8e\u9ad8\u65af\u8f93\u51fa\u5206\u5e03\u7684\u7ebf\u6027\u5355\u5143       156  \n6.2.2.2 \u7528\u4e8eBernoulli\u8f93\u51fa\u5206\u5e03\u7684sigmoid\u5355\u5143       157  \n6.2.2.3 \u7528\u4e8eMultinoulli\u8f93\u51fa\u5206\u5e03\u7684softmax\u5355\u5143     159  \n6.2.2.4 \u5176\u4ed6\u7684\u8f93\u51fa\u7c7b\u578b     162  \n6.3 \u9690\u85cf\u5355\u5143        165  \n6.3.1   \u6574\u6d41\u7ebf\u6027\u5355\u5143\u53ca\u5176\u6269\u5c55      166  \n6.3.2   logisticsigmoid\u4e0e\u53cc\u66f2\u6b63\u5207\u51fd\u6570      168  \n6.3.3   \u5176\u4ed6\u9690\u85cf\u5355\u5143      169  \n6.4 \u67b6\u6784\u8bbe\u8ba1        17   \n6.4.1   \u4e07\u80fd\u8fd1\u4f3c\u6027\u8d28\u548c\u6df1\u5ea6       171  \n6.4.2   \u5176\u4ed6\u67b6\u6784\u4e0a\u7684\u8003\u8651        174  \n6.5 \u53cd\u5411\u4f20\u64ad\u548c\u5176\u4ed6\u7684\u5fae\u5206\u7b97\u6cd5        175  \n6.5.1   \u8ba1\u7b97\u56fe     176  \n6.5.2   \u5fae\u79ef\u5206\u4e2d\u7684\u94fe\u5f0f\u6cd5\u5219       178  \n6.5.3   \u9012\u5f52\u5730\u4f7f\u7528\u94fe\u5f0f\u6cd5\u5219\u6765\u5b9e\u73b0\u53cd\u5411\u4f20\u64ad        179  \n6.6              \n6.5.4   \u5168\u8fde\u63a5MLP\u4e2d\u7684\u53cd\u5411\u4f20\u64ad\u8ba1\u7b97      181  \n6.5.5   \u7b26\u53f7\u5230\u7b26\u53f7\u7684\u5bfc\u6570        182  \n6.5.6   \u4e00\u822c\u5316\u7684\u53cd\u5411\u4f20\u64ad        185  \n6.5.7   \u5b9e\u4f8b:\u7528\u4e8eMLP\u8bad\u7ec3\u7684\u53cd\u5411\u4f20\u64ad     188  \n6.5.8   \u590d\u6742\u5316     190  \n6.5.9   \u6df1\u5ea6\u5b66\u4e60\u754c\u4ee5\u5916\u7684\u5fae\u5206      191  \n6.5.10  \u9ad8\u9636\u5fae\u5206        193  \n\u5386\u53f2\u5c0f\u8bb0    0.193", 
            "title": "\u7b2c\u516d\u7ae0  \u6df1\u5ea6\u524d\u9988\u7f51\u7edc"
        }, 
        {
            "location": "/\u4e66\u7c4d/\u6df1\u5ea6\u5b66\u4e60/DeepLearning/#_10", 
            "text": "7.1 \u53c2\u6570\u8303\u6570\u60e9\u7f5a      198  \n7.1.1   L2\u53c2\u6570\u6b63\u5219\u5316     199  \n7.1.2   L1\u53c2\u6570\u6b63\u5219\u5316     202  \n7.2 \u4f5c\u4e3a\u7ea6\u675f\u7684\u8303\u6570\u60e9\u7f5a       204  \n7.3 \u6b63\u5219\u5316\u548c\u6b20\u7ea6\u675f\u95ee\u9898       206  \n7.4 \u6570\u636e\u96c6\u589e\u5f3a       207  \n7.5 \u566a\u58f0\u9c81\u68d2\u6027       208  \n7.5.1   \u5411\u8f93\u51fa\u76ee\u6807\u6ce8\u5165\u566a\u58f0       209  \n7.6 \u534a\u76d1\u7763\u5b66\u4e60       209  \n7.7 \u591a\u4efb\u52a1\u5b66\u4e60       210  \n7.8 \u63d0\u524d\u7ec8\u6b62        211  \n7.9 \u53c2\u6570\u7ed1\u5b9a\u548c\u53c2\u6570\u5171\u4eab       217  \n7.9.1   \u5377\u79ef\u795e\u7ecf\u7f51\u7edc      218  \n7.1 \u7a00\u758f\u8868\u793a        218  \n7.11    Bagging\u548c\u5176\u4ed6\u96c6\u6210\u65b9\u6cd5      22   \n7.12    Dropout     222  \n7.13    \u5bf9\u6297\u8bad\u7ec3        23   \n7.14    \u5207\u9762\u8ddd\u79bb\u3001\u6b63\u5207\u4f20\u64ad\u548c\u6d41\u5f62\u6b63\u5207\u5206\u7c7b\u5668       232", 
            "title": "\u7b2c\u4e03\u7ae0  \u6df1\u5ea6\u5b66\u4e60\u4e2d\u7684\u6b63\u5219\u5316"
        }, 
        {
            "location": "/\u4e66\u7c4d/\u6df1\u5ea6\u5b66\u4e60/DeepLearning/#_11", 
            "text": "8.1 \u5b66\u4e60\u548c\u7eaf\u4f18\u5316\u6709\u4ec0\u4e48\u4e0d\u540c     235  \n8.1.1   \u7ecf\u9a8c\u98ce\u9669\u6700\u5c0f\u5316     236  \n8.1.2   \u4ee3\u7406\u635f\u5931\u51fd\u6570\u548c\u63d0\u524d\u7ec8\u6b62     237  \n8.1.3   \u6279\u91cf\u7b97\u6cd5\u548c\u5c0f\u6279\u91cf\u7b97\u6cd5      237  \n8.2 \u795e\u7ecf\u7f51\u7edc\u4f18\u5316\u4e2d\u7684\u6311\u6218      241  \n8.2.1   \u75c5\u6001      242  \n8.2.2   \u5c40\u90e8\u6781\u5c0f\u503c       243  \n8.2.3   \u9ad8\u539f\u3001\u978d\u70b9\u548c\u5176\u4ed6\u5e73\u5766\u533a\u57df        244  \n8.2.4   \u60ac\u5d16\u548c\u68af\u5ea6\u7206\u70b8     246  \n8.2.5   \u957f\u671f\u4f9d\u8d56        247  \n8.2.6   \u975e\u7cbe\u786e\u68af\u5ea6       248  \n8.2.7   \u5c40\u90e8\u548c\u5168\u5c40\u7ed3\u6784\u95f4\u7684\u5f31\u5bf9\u5e94        248  \n8.2.8   \u4f18\u5316\u7684\u7406\u8bba\u9650\u5236     250  \n8.3 \u57fa\u672c\u7b97\u6cd5        251  \n8.3.1   \u968f\u673a\u68af\u5ea6\u4e0b\u964d      251  \n8.3.2   \u52a8\u91cf      253  \n8.3.3   Nesterov\u52a8\u91cf      256  \n8.4 \u53c2\u6570\u521d\u59cb\u5316\u7b56\u7565     256  \n8.5 \u81ea\u9002\u5e94\u5b66\u4e60\u7387\u7b97\u6cd5        261  \n8.5.1   AdaGrad     261  \n8.5.2   RMSProp     262  \n8.5.3   Adam        262  \n8.5.4   \u9009\u62e9\u6b63\u786e\u7684\u4f18\u5316\u7b97\u6cd5       263  \n8.6 \u4e8c\u9636\u8fd1\u4f3c\u65b9\u6cd5      265  \n8.6.1   \u725b\u987f\u6cd5     266  \n8.6.2   \u5171\u8f6d\u68af\u5ea6        267  \n8.6.3   BFGS        270  \n8.7 \u4f18\u5316\u7b56\u7565\u548c\u5143\u7b97\u6cd5        271  \n8.7.1   \u6279\u6807\u51c6\u5316        271  \n8.7.2   \u5750\u6807\u4e0b\u964d        274  \n8.7.3   Polyak\u5e73\u5747        274  \n8.7.4   \u76d1\u7763\u9884\u8bad\u7ec3       275  \n8.7.5   \u8bbe\u8ba1\u6709\u52a9\u4e8e\u4f18\u5316\u7684\u6a21\u578b      277  \n8.7.6   \u5ef6\u62d3\u6cd5\u548c\u8bfe\u7a0b\u5b66\u4e60        278", 
            "title": "\u7b2c\u516b\u7ae0  \u6df1\u5ea6\u6a21\u578b\u4e2d\u7684\u4f18\u5316"
        }, 
        {
            "location": "/\u4e66\u7c4d/\u6df1\u5ea6\u5b66\u4e60/DeepLearning/#_12", 
            "text": "9.1 \u5377\u79ef\u8fd0\u7b97        282  \n9.2 \u52a8\u673a      285  \n9.3 \u6c60\u5316      290  \n9.4 \u5377\u79ef\u4e0e\u6c60\u5316\u4f5c\u4e3a\u4e00\u79cd\u65e0\u9650\u5f3a\u7684\u5148\u9a8c     295  \n9.5 \u57fa\u672c\u5377\u79ef\u51fd\u6570\u7684\u53d8\u4f53       296  \n9.6 \u7ed3\u6784\u5316\u8f93\u51fa       306  \n9.7 \u6570\u636e\u7c7b\u578b        307  \n9.8 \u9ad8\u6548\u7684\u5377\u79ef\u7b97\u6cd5     309  \n9.9 \u968f\u673a\u6216\u65e0\u76d1\u7763\u7684\u7279\u5f81       31   \n9.1 \u5377\u79ef\u7f51\u7edc\u7684\u795e\u7ecf\u79d1\u5b66\u57fa\u7840     311  \n9.11    \u5377\u79ef\u7f51\u7edc\u4e0e\u6df1\u5ea6\u5b66\u4e60\u7684\u5386\u53f2        317", 
            "title": "\u7b2c\u4e5d\u7ae0  \u5377\u79ef\u7f51\u7edc"
        }, 
        {
            "location": "/\u4e66\u7c4d/\u6df1\u5ea6\u5b66\u4e60/DeepLearning/#_13", 
            "text": "10.1    \u5c55\u5f00\u8ba1\u7b97\u56fe       320  \n10.2    \u5faa\u73af\u795e\u7ecf\u7f51\u7edc      323  \n10.2.1  \u5bfc\u5e08\u9a71\u52a8\u8fc7\u7a0b\u548c\u8f93\u51fa\u5faa\u73af\u7f51\u7edc       326  \n10.2.2  \u8ba1\u7b97\u5faa\u73af\u795e\u7ecf\u7f51\u7edc\u7684\u68af\u5ea6     328  \n10.2.3  \u4f5c\u4e3a\u6709\u5411\u56fe\u6a21\u578b\u7684\u5faa\u73af\u7f51\u7edc        330  \n10.2.4  \u57fa\u4e8e\u4e0a\u4e0b\u6587\u7684RNN\u5e8f\u5217\u5efa\u6a21       334  \n10.3    \u53cc\u5411RNN       336  \n10.4    \u57fa\u4e8e\u7f16\u7801-\u89e3\u7801\u7684\u5e8f\u5217\u5230\u5e8f\u5217\u67b6\u6784     338  \n10.5    \u6df1\u5ea6\u5faa\u73af\u7f51\u7edc      34   \n10.6    \u9012\u5f52\u795e\u7ecf\u7f51\u7edc      341  \n10.7    \u957f\u671f\u4f9d\u8d56\u7684\u6311\u6218     343  \n10.8    \u56de\u58f0\u72b6\u6001\u7f51\u7edc      345  \n10.9    \u6e17\u6f0f\u5355\u5143\u548c\u5176\u4ed6\u591a\u65f6\u95f4\u5c3a\u5ea6\u7684\u7b56\u7565     347  \n10.9.1  \u65f6\u95f4\u7ef4\u5ea6\u7684\u8df3\u8dc3\u8fde\u63a5       347  \n10.9.2  \u6e17\u6f0f\u5355\u5143\u548c\u4e00\u7cfb\u5217\u4e0d\u540c\u65f6\u95f4\u5c3a\u5ea6      348  \n10.9.3  \u5220\u9664\u8fde\u63a5        348  \n10.1    \u957f\u77ed\u671f\u8bb0\u5fc6\u548c\u5176\u4ed6\u95e8\u63a7RNN       349  \n10.10.1 LSTM        349  \n10.10.2 \u5176\u4ed6\u95e8\u63a7RNN     351  \n10.11   \u4f18\u5316\u957f\u671f\u4f9d\u8d56      352  \n10.11.1 \u622a\u65ad\u68af\u5ea6        353  \n10.11.2 \u5f15\u5bfc\u4fe1\u606f\u6d41\u7684\u6b63\u5219\u5316       355  \n10.12\u5916\u663e\u8bb0\u5fc6   0.355", 
            "title": "\u7b2c\u5341\u7ae0  \u5e8f\u5217\u5efa\u6a21:\u5faa\u73af\u548c\u9012\u5f52\u7f51\u7edc"
        }, 
        {
            "location": "/\u4e66\u7c4d/\u6df1\u5ea6\u5b66\u4e60/DeepLearning/#_14", 
            "text": "11.1    \u6027\u80fd\u5ea6\u91cf        36   \n11.2    \u9ed8\u8ba4\u7684\u57fa\u51c6\u6a21\u578b     362  \n11.3    \u51b3\u5b9a\u662f\u5426\u6536\u96c6\u66f4\u591a\u6570\u636e      363  \n11.4    \u9009\u62e9\u8d85\u53c2\u6570       364  \n11.4.1  \u624b\u52a8\u8c03\u6574\u8d85\u53c2\u6570     364  \n11.4.2  \u81ea\u52a8\u8d85\u53c2\u6570\u4f18\u5316\u7b97\u6cd5       367  \n11.4.3  \u7f51\u683c\u641c\u7d22        368  \n11.4.4  \u968f\u673a\u641c\u7d22        369  \n11.4.5  \u57fa\u4e8e\u6a21\u578b\u7684\u8d85\u53c2\u6570\u4f18\u5316      37   \n11.5    \u8c03\u8bd5\u7b56\u7565        371  \n11.6    \u793a\u4f8b:\u591a\u4f4d\u6570\u5b57\u8bc6\u522b       374", 
            "title": "\u7b2c\u5341\u4e00\u7ae0 \u5b9e\u8df5\u65b9\u6cd5\u8bba"
        }, 
        {
            "location": "/\u4e66\u7c4d/\u6df1\u5ea6\u5b66\u4e60/DeepLearning/#_15", 
            "text": "12.1    \u5927\u89c4\u6a21\u6df1\u5ea6\u5b66\u4e60     377  \n12.1.1  \u5feb\u901f\u7684CPU\u5b9e\u73b0        378  \n12.1.2  GPU\u5b9e\u73b0       378  \n12.1.3  \u5927\u89c4\u6a21\u7684\u5206\u5e03\u5f0f\u5b9e\u73b0       380  \n12.1.4  \u6a21\u578b\u538b\u7f29        381  \n12.1.5  \u52a8\u6001\u7ed3\u6784        382  \n12.1.6  \u6df1\u5ea6\u7f51\u7edc\u7684\u4e13\u7528\u786c\u4ef6\u5b9e\u73b0     384  \n12.2    \u8ba1\u7b97\u673a\u89c6\u89c9       385  \n12.2.1  \u9884\u5904\u7406     385  \n12.2.1.1\u5bf9\u6bd4\u5ea6\u5f52\u4e00\u5316  0.386            \n12.2.2  \u6570\u636e\u96c6\u589e\u5f3a       389  \n12.3    \u8bed\u97f3\u8bc6\u522b        39   \n12.4    \u81ea\u7136\u8bed\u8a00\u5904\u7406      392  \n12.4.1  n-gram      392  \n12.4.2  \u795e\u7ecf\u8bed\u8a00\u6a21\u578b      394  \n12.4.3  \u9ad8\u7ef4\u8f93\u51fa        396  \n12.4.3.1\u4f7f\u7528\u77ed\u5217\u8868   396          \n12.4.3.2\u5206\u5c42Softmax   0.397            \n12.4.3.3    \u91cd\u8981\u91c7\u6837        399  \n12.4.3.4    \u566a\u58f0\u5bf9\u6bd4\u4f30\u8ba1\u548c\u6392\u540d\u635f\u5931     401  \n12.4.4  \u7ed3\u5408n-gram\u548c\u795e\u7ecf\u8bed\u8a00\u6a21\u578b     401  \n12.4.5  \u795e\u7ecf\u673a\u5668\u7ffb\u8bd1      402  \n12.4.5.1    \u4f7f\u7528\u6ce8\u610f\u529b\u673a\u5236\u5e76\u5bf9\u9f50\u6570\u636e\u7247\u6bb5      403  \n12.4.6  \u5386\u53f2\u5c55\u671b        406  \n12.5    \u5176\u4ed6\u5e94\u7528        407  \n12.5.1  \u63a8\u8350\u7cfb\u7edf        407  \n12.5.1.1\u63a2\u7d22\u4e0e\u5229\u7528   409          \n12.5.2  \u77e5\u8bc6\u8868\u793a\u3001\u63a8\u7406\u548c\u56de\u7b54      41   \n12.5.2.1    \u77e5\u8bc6\u3001\u8054\u7cfb\u548c\u56de\u7b54        41      \u7b2c\u4e09\u90e8\u5206    \u6df1\u5ea6\u5b66\u4e60\u7814\u7a76      414", 
            "title": "\u7b2c\u5341\u4e8c\u7ae0 \u5e94\u7528"
        }, 
        {
            "location": "/\u4e66\u7c4d/\u6df1\u5ea6\u5b66\u4e60/DeepLearning/#_16", 
            "text": "13.1    \u6982\u7387PCA\u548c\u56e0\u5b50\u5206\u6790      418  \n13.2    \u72ec\u7acb\u6210\u5206\u5206\u6790      419  \n13.3    \u6162\u7279\u5f81\u5206\u6790       421  \n13.4    \u7a00\u758f\u7f16\u7801        423  \n13.5    PCA\u7684\u6d41\u5f62\u89e3\u91ca        426", 
            "title": "\u7b2c\u5341\u4e09\u7ae0 \u7ebf\u6027\u56e0\u5b50\u6a21\u578b"
        }, 
        {
            "location": "/\u4e66\u7c4d/\u6df1\u5ea6\u5b66\u4e60/DeepLearning/#_17", 
            "text": "14.1    \u6b20\u5b8c\u5907\u81ea\u7f16\u7801\u5668     430  \n14.2    \u6b63\u5219\u81ea\u7f16\u7801\u5668      431  \n14.2.1  \u7a00\u758f\u81ea\u7f16\u7801\u5668      431  \n14.2.2  \u53bb\u566a\u81ea\u7f16\u7801\u5668      433  \n14.2.3  \u60e9\u7f5a\u5bfc\u6570\u4f5c\u4e3a\u6b63\u5219        434  \n14.3    \u8868\u793a\u80fd\u529b\u3001\u5c42\u7684\u5927\u5c0f\u548c\u6df1\u5ea6        434  \n14.4    \u968f\u673a\u7f16\u7801\u5668\u548c\u89e3\u7801\u5668       435  \n14.5    \u53bb\u566a\u81ea\u7f16\u7801\u5668      436  \n14.5.1  \u5f97\u5206\u4f30\u8ba1        437  \n14.5.2  \u5386\u53f2\u5c55\u671b        440  \n14.6    \u4f7f\u7528\u81ea\u7f16\u7801\u5668\u5b66\u4e60\u6d41\u5f62      440  \n14.7    \u6536\u7f29\u81ea\u7f16\u7801\u5668      445  \n14.8    \u9884\u6d4b\u7a00\u758f\u5206\u89e3      447  \n14.9    \u81ea\u7f16\u7801\u5668\u7684\u5e94\u7528     448", 
            "title": "\u7b2c\u5341\u56db\u7ae0 \u81ea\u7f16\u7801\u5668"
        }, 
        {
            "location": "/\u4e66\u7c4d/\u6df1\u5ea6\u5b66\u4e60/DeepLearning/#_18", 
            "text": "15.1    \u8d2a\u5fc3\u9010\u5c42\u65e0\u76d1\u7763\u9884\u8bad\u7ec3      450  \n15.1.1  \u4f55\u65f6\u4ee5\u53ca\u4e3a\u4f55\u65e0\u76d1\u7763\u9884\u8bad\u7ec3\u6709\u6548?     452  \n15.2    \u8fc1\u79fb\u5b66\u4e60\u548c\u9886\u57df\u81ea\u9002\u5e94      457  \n15.3    \u534a\u76d1\u7763\u89e3\u91ca\u56e0\u679c\u5173\u7cfb       461  \n15.4    \u5206\u5e03\u5f0f\u8868\u793a       466  \n15.5    \u5f97\u76ca\u4e8e\u6df1\u5ea6\u7684\u6307\u6570\u589e\u76ca      471  \n15.6    \u63d0\u4f9b\u53d1\u73b0\u6f5c\u5728\u539f\u56e0\u7684\u7ebf\u7d22     472", 
            "title": "\u7b2c\u5341\u4e94\u7ae0 \u8868\u793a\u5b66\u4e60"
        }, 
        {
            "location": "/\u4e66\u7c4d/\u6df1\u5ea6\u5b66\u4e60/DeepLearning/#_19", 
            "text": "16.1    \u975e\u7ed3\u6784\u5316\u5efa\u6a21\u7684\u6311\u6218       476  \n16.2    \u4f7f\u7528\u56fe\u63cf\u8ff0\u6a21\u578b\u7ed3\u6784       479  \n16.2.1  \u6709\u5411\u6a21\u578b        480  \n16.2.2  \u65e0\u5411\u6a21\u578b        482  \n16.2.3  \u914d\u5206\u51fd\u6570        484  \n16.2.4  \u57fa\u4e8e\u80fd\u91cf\u7684\u6a21\u578b     485  \n16.2.5  \u5206\u79bb\u548cd-\u5206\u79bb     487  \n16.2.6  \u5728\u6709\u5411\u6a21\u578b\u548c\u65e0\u5411\u6a21\u578b\u4e2d\u8f6c\u6362       49   \n16.2.7  \u56e0\u5b50\u56fe     493  \n16.3    \u4ece\u56fe\u6a21\u578b\u4e2d\u91c7\u6837     494  \n16.4    \u7ed3\u6784\u5316\u5efa\u6a21\u7684\u4f18\u52bf        495  \n16.5    \u5b66\u4e60\u4f9d\u8d56\u5173\u7cfb      496  \n16.6    \u63a8\u65ad\u548c\u8fd1\u4f3c\u63a8\u65ad     497  \n16.7    \u7ed3\u6784\u5316\u6982\u7387\u6a21\u578b\u7684\u6df1\u5ea6\u5b66\u4e60\u65b9\u6cd5      498  \n16.7.1  \u5b9e\u4f8b:\u53d7\u9650\u73bb\u5c14\u5179\u66fc\u673a      499", 
            "title": "\u7b2c\u5341\u516d\u7ae0 \u6df1\u5ea6\u5b66\u4e60\u4e2d\u7684\u7ed3\u6784\u5316\u6982\u7387\u6a21\u578b"
        }, 
        {
            "location": "/\u4e66\u7c4d/\u6df1\u5ea6\u5b66\u4e60/DeepLearning/#_20", 
            "text": "17.1    \u91c7\u6837\u548c\u8499\u7279\u5361\u7f57\u65b9\u6cd5       502  \n17.1.1  \u4e3a\u4ec0\u4e48\u9700\u8981\u91c7\u6837?        502  \n17.1.2  \u8499\u7279\u5361\u7f57\u91c7\u6837\u7684\u57fa\u7840       503  \n17.2    \u91cd\u8981\u91c7\u6837        504  \n17.3    \u9a6c\u5c14\u53ef\u592b\u94fe\u8499\u7279\u5361\u7f57\u65b9\u6cd5     506  \n17.4    Gibbs\u91c7\u6837     510  \n17.5    \u4e0d\u540c\u7684\u5cf0\u503c\u4e4b\u95f4\u7684\u6df7\u5408\u6311\u6218        511  \n17.5.1  \u4e0d\u540c\u5cf0\u503c\u4e4b\u95f4\u901a\u8fc7\u56de\u706b\u6765\u6df7\u5408       513  \n17.5.2  \u6df1\u5ea6\u4e5f\u8bb8\u4f1a\u6709\u52a9\u4e8e\u6df7\u5408      514", 
            "title": "\u7b2c\u5341\u4e03\u7ae0 \u8499\u7279\u5361\u7f57\u65b9\u6cd5"
        }, 
        {
            "location": "/\u4e66\u7c4d/\u6df1\u5ea6\u5b66\u4e60/DeepLearning/#_21", 
            "text": "18.1    \u5bf9\u6570\u4f3c\u7136\u68af\u5ea6      516  \n18.2    \u968f\u673a\u6700\u5927\u4f3c\u7136\u548c\u5bf9\u6bd4\u6563\u5ea6     518  \n18.3    \u4f2a\u4f3c\u7136     524  \n18.4    \u5f97\u5206\u5339\u914d\u548c\u6bd4\u7387\u5339\u914d       526  \n18.5    \u53bb\u566a\u5f97\u5206\u5339\u914d      528  \n18.6    \u566a\u58f0\u5bf9\u6bd4\u4f30\u8ba1      529  \n18.7    \u4f30\u8ba1\u914d\u5206\u51fd\u6570      531  \n18.7.1  \u9000\u706b\u91cd\u8981\u91c7\u6837      533  \n18.7.2  \u6865\u5f0f\u91c7\u6837        536", 
            "title": "\u7b2c\u5341\u516b\u7ae0 \u76f4\u9762\u914d\u5206\u51fd\u6570"
        }, 
        {
            "location": "/\u4e66\u7c4d/\u6df1\u5ea6\u5b66\u4e60/DeepLearning/#_22", 
            "text": "19.1    \u628a\u63a8\u65ad\u89c6\u4f5c\u4f18\u5316\u95ee\u9898       539  \n19.2    \u671f\u671b\u6700\u5927\u5316       541  \n19.3    \u6700\u5927\u540e\u9a8c\u63a8\u65ad\u548c\u7a00\u758f\u7f16\u7801     542  \n19.4    \u53d8\u5206\u63a8\u65ad\u548c\u53d8\u5206\u5b66\u4e60       544  \n19.4.1  \u79bb\u6563\u578b\u6f5c\u53d8\u91cf      545  \n19.4.2  \u53d8\u5206\u6cd5     551  \n19.4.3  \u8fde\u7eed\u578b\u6f5c\u53d8\u91cf      554  \n19.4.4  \u5b66\u4e60\u548c\u63a8\u65ad\u4e4b\u95f4\u7684\u76f8\u4e92\u4f5c\u7528        556  \n19.5    \u5b66\u6210\u8fd1\u4f3c\u63a8\u65ad      556  \n19.5.1  \u9192\u7720\u7b97\u6cd5        557  \n19.5.2  \u5b66\u6210\u63a8\u65ad\u7684\u5176\u4ed6\u5f62\u5f0f       557", 
            "title": "\u7b2c\u5341\u4e5d\u7ae0 \u8fd1\u4f3c\u63a8\u65ad"
        }, 
        {
            "location": "/\u4e66\u7c4d/\u6df1\u5ea6\u5b66\u4e60/DeepLearning/#_23", 
            "text": "20.1    \u73bb\u5c14\u5179\u66fc\u673a       559  \n20.2    \u53d7\u9650\u73bb\u5c14\u5179\u66fc\u673a     561  \n20.2.1  \u6761\u4ef6\u5206\u5e03        562  \n20.2.2  \u8bad\u7ec3\u53d7\u9650\u73bb\u5c14\u5179\u66fc\u673a       563  \n20.3    \u6df1\u5ea6\u4fe1\u5ff5\u7f51\u7edc      564  \n20.4    \u6df1\u5ea6\u73bb\u5c14\u5179\u66fc\u673a     566  \n20.4.1  \u6709\u8da3\u7684\u6027\u8d28       568  \n20.4.2  DBM\u5747\u5300\u573a\u63a8\u65ad        569  \n20.4.3  DBM\u7684\u53c2\u6570\u5b66\u4e60        571  \n20.4.4  \u9010\u5c42\u9884\u8bad\u7ec3       572  \n20.4.5  \u8054\u5408\u8bad\u7ec3\u6df1\u5ea6\u73bb\u5c14\u5179\u66fc\u673a     574  \n20.5    \u5b9e\u503c\u6570\u636e\u4e0a\u7684\u73bb\u5c14\u5179\u66fc\u673a     578  \n20.5.1  Gaussian-BernoulliRBM       578  \n20.5.2  \u6761\u4ef6\u534f\u65b9\u5dee\u7684\u65e0\u5411\u6a21\u578b      579  \n20.6    \u5377\u79ef\u73bb\u5c14\u5179\u66fc\u673a     583  \n20.7    \u7528\u4e8e\u7ed3\u6784\u5316\u6216\u5e8f\u5217\u8f93\u51fa\u7684\u73bb\u5c14\u5179\u66fc\u673a        585  \n20.8    \u5176\u4ed6\u73bb\u5c14\u5179\u66fc\u673a     586  \n20.9    \u901a\u8fc7\u968f\u673a\u64cd\u4f5c\u7684\u53cd\u5411\u4f20\u64ad     587  \n20.9.1  \u901a\u8fc7\u79bb\u6563\u968f\u673a\u64cd\u4f5c\u7684\u53cd\u5411\u4f20\u64ad       588  \n20.1    \u6709\u5411\u751f\u6210\u7f51\u7edc      591  \n20.10.1 sigmoid\u4fe1\u5ff5\u7f51\u7edc     591  \n20.10.2 \u53ef\u5fae\u751f\u6210\u5668\u7f51\u7edc     592  \n20.10.3 \u53d8\u5206\u81ea\u7f16\u7801\u5668      594  \n20.10.4 \u751f\u6210\u5f0f\u5bf9\u6297\u7f51\u7edc     597  \n20.10.5 \u751f\u6210\u77e9\u5339\u914d\u7f51\u7edc     600  \n20.10.6 \u5377\u79ef\u751f\u6210\u7f51\u7edc      601  \n20.10.7 \u81ea\u56de\u5f52\u7f51\u7edc       602  \n20.10.8 \u7ebf\u6027\u81ea\u56de\u5f52\u7f51\u7edc     602  \n20.10.9 \u795e\u7ecf\u81ea\u56de\u5f52\u7f51\u7edc     603  \n20.10.10    NADE        604", 
            "title": "\u7b2c\u4e8c\u5341\u7ae0 \u6df1\u5ea6\u751f\u6210\u6a21\u578b"
        }, 
        {
            "location": "/\u5b66\u4e60/tensorflow/\u5982\u4f55\u9009\u62e9\u4f18\u5316\u5668 optimizer/", 
            "text": "\u5728\u5f88\u591a\u673a\u5668\u5b66\u4e60\u548c\u6df1\u5ea6\u5b66\u4e60\u7684\u5e94\u7528\u4e2d\uff0c\u6211\u4eec\u53d1\u73b0\u7528\u7684\u6700\u591a\u7684\u4f18\u5316\u5668\u662f Adam\uff0c\u4e3a\u4ec0\u4e48\u5462\uff1f\n\n\n\u4e0b\u9762\u662f TensorFlow \u4e2d\u7684\u4f18\u5316\u5668\uff0c \n\nhttps://www.tensorflow.org/api\n_guides/python/train\n \n\n\n\n\u5728 keras \u4e2d\u4e5f\u6709 SGD\uff0cRMSprop\uff0cAdagrad\uff0cAdadelta\uff0cAdam \u7b49\uff1a \n\nhttps://keras.io/optimizers/\n\n\n\u6211\u4eec\u53ef\u4ee5\u53d1\u73b0\u9664\u4e86\u5e38\u89c1\u7684\u68af\u5ea6\u4e0b\u964d\uff0c\u8fd8\u6709 Adadelta\uff0cAdagrad\uff0cRMSProp \u7b49\u51e0\u79cd\u4f18\u5316\u5668\uff0c\u90fd\u662f\u4ec0\u4e48\u5462\uff0c\u53c8\u8be5\u600e\u4e48\u9009\u62e9\u5462\uff1f\n\n\n\u5728 Sebastian Ruder \u7684\u8fd9\u7bc7\u8bba\u6587\u4e2d\u7ed9\u51fa\u4e86\u5e38\u7528\u4f18\u5316\u5668\u7684\u6bd4\u8f83\uff0c\u4eca\u5929\u6765\u5b66\u4e60\u4e00\u4e0b\uff1a \n\nhttps://arxiv.org/pdf/1609.04747.pdf\n\n\n\u672c\u6587\u5c06\u68b3\u7406\uff1a\n\n\n\n\n\u6bcf\u4e2a\u7b97\u6cd5\u7684\u68af\u5ea6\u66f4\u65b0\u89c4\u5219\u548c\u7f3a\u70b9\n\n\n\u4e3a\u4e86\u5e94\u5bf9\u8fd9\u4e2a\u4e0d\u8db3\u800c\u63d0\u51fa\u7684\u4e0b\u4e00\u4e2a\u7b97\u6cd5\n\n\n\u8d85\u53c2\u6570\u7684\u4e00\u822c\u8bbe\u5b9a\u503c\n\n\n\u51e0\u79cd\u7b97\u6cd5\u7684\u6548\u679c\u6bd4\u8f83\n\n\n\u9009\u62e9\u54ea\u79cd\u7b97\u6cd5\n\n\n\n\n\n\n1. \u4f18\u5316\u5668\u7b97\u6cd5\u7b80\u8ff0?\n\n\n\u9996\u5148\u6765\u770b\u4e00\u4e0b\u68af\u5ea6\u4e0b\u964d\u6700\u5e38\u89c1\u7684\u4e09\u79cd\u53d8\u5f62 BGD\uff0cSGD\uff0cMBGD\uff0c\u8fd9\u4e09\u79cd\u5f62\u5f0f\u7684\u533a\u522b\u5c31\u662f\u53d6\u51b3\u4e8e\u6211\u4eec\u7528\u591a\u5c11\u6570\u636e\u6765\u8ba1\u7b97\u76ee\u6807\u51fd\u6570\u7684\u68af\u5ea6\uff0c\u8fd9\u6837\u7684\u8bdd\u81ea\u7136\u5c31\u6d89\u53ca\u5230\u4e00\u4e2a trade\uff0doff\uff0c\u5373\u53c2\u6570\u66f4\u65b0\u7684\u51c6\u786e\u7387\u548c\u8fd0\u884c\u65f6\u95f4\u3002\n\n\n1. Batch gradient descent\n\n\n\u68af\u5ea6\u66f4\u65b0\u89c4\u5219: \nBGD \u91c7\u7528\u6574\u4e2a\u8bad\u7ec3\u96c6\u7684\u6570\u636e\u6765\u8ba1\u7b97 cost function \u5bf9\u53c2\u6570\u7684\u68af\u5ea6\uff1a\n\n\n\n\n\n\\theta = \\theta - \\eta \\bullet \\nabla_\\theta \\boldsymbol{J}(\\theta)\n\n\n\n\n\\theta = \\theta - \\eta \\bullet \\nabla_\\theta \\boldsymbol{J}(\\theta)\n\n\n\n\n\n\u7f3a\u70b9: \n\u7531\u4e8e\u8fd9\u79cd\u65b9\u6cd5\u662f\u5728\u4e00\u6b21\u66f4\u65b0\u4e2d\uff0c\u5c31\u5bf9\u6574\u4e2a\u6570\u636e\u96c6\u8ba1\u7b97\u68af\u5ea6\uff0c\u6240\u4ee5\u8ba1\u7b97\u8d77\u6765\u975e\u5e38\u6162\uff0c\u9047\u5230\u5f88\u5927\u91cf\u7684\u6570\u636e\u96c6\u4e5f\u4f1a\u975e\u5e38\u68d8\u624b\uff0c\u800c\u4e14\u4e0d\u80fd\u6295\u5165\u65b0\u6570\u636e\u5b9e\u65f6\u66f4\u65b0\u6a21\u578b\n\n\nfor\n \ni\n \nin\n \nrange\n(\nnb_epochs\n):\n\n  \nparams_grad\n \n=\n \nevaluate_gradient\n(\nloss_function\n,\n \ndata\n,\n \nparams\n)\n\n  \nparams\n \n=\n \nparams\n \n-\n \nlearning_rate\n \n*\n \nparams_grad\n\n\n\n\n\n\u6211\u4eec\u4f1a\u4e8b\u5148\u5b9a\u4e49\u4e00\u4e2a\u8fed\u4ee3\u6b21\u6570 epoch\uff0c\u9996\u5148\u8ba1\u7b97\u68af\u5ea6\u5411\u91cf params_grad\uff0c\u7136\u540e\u6cbf\u7740\u68af\u5ea6\u7684\u65b9\u5411\u66f4\u65b0\u53c2\u6570 params\uff0clearning rate \u51b3\u5b9a\u4e86\u6211\u4eec\u6bcf\u4e00\u6b65\u8fc8\u591a\u5927\u3002\n\n\nBatch gradient descent \u5bf9\u4e8e\u51f8\u51fd\u6570\u53ef\u4ee5\u6536\u655b\u5230\u5168\u5c40\u6781\u5c0f\u503c\uff0c\u5bf9\u4e8e\u975e\u51f8\u51fd\u6570\u53ef\u4ee5\u6536\u655b\u5230\u5c40\u90e8\u6781\u5c0f\u503c\u3002\n\n\n\n\n2. Stochastic gradient descent\n\n\n\u68af\u5ea6\u66f4\u65b0\u89c4\u5219: \n\u548c BGD \u7684\u4e00\u6b21\u7528\u6240\u6709\u6570\u636e\u8ba1\u7b97\u68af\u5ea6\u76f8\u6bd4\uff0cSGD \u6bcf\u6b21\u66f4\u65b0\u65f6\u5bf9\u6bcf\u4e2a\u6837\u672c\u8fdb\u884c\u68af\u5ea6\u66f4\u65b0\uff0c\u5bf9\u4e8e\u5f88\u5927\u7684\u6570\u636e\u96c6\u6765\u8bf4\uff0c\u53ef\u80fd\u4f1a\u6709\u76f8\u4f3c\u7684\u6837\u672c\uff0c\u8fd9\u6837 BGD \u5728\u8ba1\u7b97\u68af\u5ea6\u65f6\u4f1a\u51fa\u73b0\u5197\u4f59\uff0c\u800c SGD \u4e00\u6b21\u53ea\u8fdb\u884c\u4e00\u6b21\u66f4\u65b0\uff0c\u5c31\u6ca1\u6709\u5197\u4f59\uff0c\u800c\u4e14\u6bd4\u8f83\u5feb\uff0c\u5e76\u4e14\u53ef\u4ee5\u65b0\u589e\u6837\u672c\u3002\n\n\n\n\n\n\\theta = \\theta - \\eta \\bullet \\nabla_\\theta \n \\boldsymbol{J}(\\theta;x^{(i)};y^{(i)})\n\n\n\n\n\\theta = \\theta - \\eta \\bullet \\nabla_\\theta \n \\boldsymbol{J}(\\theta;x^{(i)};y^{(i)})\n\n\n\n\n\nfor\n \ni\n \nin\n \nrange\n(\nnb_epochs\n):\n\n  \nnp\n.\nrandom\n.\nshuffle\n(\ndata\n)\n\n  \nfor\n \nexample\n \nin\n \ndata\n:\n\n    \nparams_grad\n \n=\n \nevaluate_gradient\n(\nloss_function\n,\n \nexample\n,\n \nparams\n)\n\n    \nparams\n \n=\n \nparams\n \n-\n \nlearning_rate\n \n*\n \nparams_grad\n\n\n\n\n\n\u770b\u4ee3\u7801\uff0c\u53ef\u4ee5\u770b\u5230\u533a\u522b\uff0c\u5c31\u662f\u6574\u4f53\u6570\u636e\u96c6\u662f\u4e2a\u5faa\u73af\uff0c\u5176\u4e2d\u5bf9\u6bcf\u4e2a\u6837\u672c\u8fdb\u884c\u4e00\u6b21\u53c2\u6570\u66f4\u65b0\u3002\n\n\n\u7f3a\u70b9: \n\u4f46\u662f SGD \u56e0\u4e3a\u66f4\u65b0\u6bd4\u8f83\u9891\u7e41\uff0c\u4f1a\u9020\u6210 cost function \u6709\u4e25\u91cd\u7684\u9707\u8361\u3002\n\n\n\n\nBGD \u53ef\u4ee5\u6536\u655b\u5230\u5c40\u90e8\u6781\u5c0f\u503c\uff0c\u5f53\u7136 SGD \u7684\u9707\u8361\u53ef\u80fd\u4f1a\u8df3\u5230\u66f4\u597d\u7684\u5c40\u90e8\u6781\u5c0f\u503c\u5904\u3002\n\n\n\u5f53\u6211\u4eec\u7a0d\u5fae\u51cf\u5c0f learning rate\uff0cSGD \u548c BGD \u7684\u6536\u655b\u6027\u662f\u4e00\u6837\u7684\u3002\n\n\n\n\n3. Mini-batch gradient descent\n\n\n\u68af\u5ea6\u66f4\u65b0\u89c4\u5219: \nMBGD \u6bcf\u4e00\u6b21\u5229\u7528\u4e00\u5c0f\u6279\u6837\u672c\uff0c\u5373 n \u4e2a\u6837\u672c\u8fdb\u884c\u8ba1\u7b97\uff0c\u8fd9\u6837\u5b83\u53ef\u4ee5\u964d\u4f4e\u53c2\u6570\u66f4\u65b0\u65f6\u7684\u65b9\u5dee\uff0c\u6536\u655b\u66f4\u7a33\u5b9a\uff0c\u53e6\u4e00\u65b9\u9762\u53ef\u4ee5\u5145\u5206\u5730\u5229\u7528\u6df1\u5ea6\u5b66\u4e60\u5e93\u4e2d\u9ad8\u5ea6\u4f18\u5316\u7684\u77e9\u9635\u64cd\u4f5c\u6765\u8fdb\u884c\u66f4\u6709\u6548\u7684\u68af\u5ea6\u8ba1\u7b97\u3002\n\n\n\n\n\n\\theta = \\theta - \\eta \\bullet \\nabla_\\theta \n \\boldsymbol{J}(\\theta;x^{(i:i+n)};y^{(i:i+n)})\n\n\n\n\n\\theta = \\theta - \\eta \\bullet \\nabla_\\theta \n \\boldsymbol{J}(\\theta;x^{(i:i+n)};y^{(i:i+n)})\n\n\n\n\n\n\u548c SGD \u7684\u533a\u522b\u662f\u6bcf\u4e00\u6b21\u5faa\u73af\u4e0d\u662f\u4f5c\u7528\u4e8e\u6bcf\u4e2a\u6837\u672c\uff0c\u800c\u662f\u5177\u6709 n \u4e2a\u6837\u672c\u7684\u6279\u6b21\n\n\nfor\n \ni\n \nin\n \nrange\n(\nnb_epochs\n):\n\n  \nnp\n.\nrandom\n.\nshuffle\n(\ndata\n)\n\n  \nfor\n \nbatch\n \nin\n \nget_batches\n(\ndata\n,\n \nbatch_size\n=\n50\n):\n\n    \nparams_grad\n \n=\n \nevaluate_gradient\n(\nloss_function\n,\n \nbatch\n,\n \nparams\n)\n\n    \nparams\n \n=\n \nparams\n \n-\n \nlearning_rate\n \n*\n \nparams_grad\n\n\n\n\n\n\u8d85\u53c2\u6570\u8bbe\u5b9a\u503c: \nn \u4e00\u822c\u53d6\u503c\u5728 50\uff5e256\n\n\n\u7f3a\u70b9: \n  1. learning rate \u5982\u679c\u9009\u62e9\u7684\u592a\u5c0f\uff0c\u6536\u655b\u901f\u5ea6\u4f1a\u5f88\u6162\uff0c\u5982\u679c\u592a\u5927\uff0closs function \u5c31\u4f1a\u5728\u6781\u5c0f\u503c\u5904\u4e0d\u505c\u5730\u9707\u8361\u751a\u81f3\u504f\u79bb\u3002\uff08\u6709\u4e00\u79cd\u63aa\u65bd\u662f\u5148\u8bbe\u5b9a\u5927\u4e00\u70b9\u7684\u5b66\u4e60\u7387\uff0c\u5f53\u4e24\u6b21\u8fed\u4ee3\u4e4b\u95f4\u7684\u53d8\u5316\u4f4e\u4e8e\u67d0\u4e2a\u9608\u503c\u540e\uff0c\u5c31\u51cf\u5c0f learning rate\uff0c\u4e0d\u8fc7\u8fd9\u4e2a\u9608\u503c\u7684\u8bbe\u5b9a\u9700\u8981\u63d0\u524d\u5199\u597d\uff0c\u8fd9\u6837\u7684\u8bdd\u5c31\u4e0d\u80fd\u591f\u9002\u5e94\u6570\u636e\u96c6\u7684\u7279\u70b9\u3002\uff09\n  2. \u6b64\u5916\uff0c\u8fd9\u79cd\u65b9\u6cd5\u662f\u5bf9\u6240\u6709\u53c2\u6570\u66f4\u65b0\u65f6\u5e94\u7528\u540c\u6837\u7684 learning rate\uff0c\u5982\u679c\u6211\u4eec\u7684\u6570\u636e\u662f\u7a00\u758f\u7684\uff0c\u6211\u4eec\u66f4\u5e0c\u671b\u5bf9\u51fa\u73b0\u9891\u7387\u4f4e\u7684\u7279\u5f81\u8fdb\u884c\u5927\u4e00\u70b9\u7684\u66f4\u65b0\u3002\n  3. \u53e6\u5916\uff0c\u5bf9\u4e8e\u975e\u51f8\u51fd\u6570\uff0c\u8fd8\u8981\u907f\u514d\u9677\u4e8e\u5c40\u90e8\u6781\u5c0f\u503c\u5904\uff0c\u6216\u8005\u978d\u70b9\u5904\uff0c\u56e0\u4e3a\u978d\u70b9\u5468\u56f4\u7684error \u662f\u4e00\u6837\u7684\uff0c\u6240\u6709\u7ef4\u5ea6\u7684\u68af\u5ea6\u90fd\u63a5\u8fd1\u4e8e0\uff0cSGD \u5f88\u5bb9\u6613\u88ab\u56f0\u5728\u8fd9\u91cc\u3002\n\n\n\u4e0d\u8fc7 Mini-batch gradient descent \u4e0d\u80fd\u4fdd\u8bc1\u5f88\u597d\u7684\u6536\u655b\u6027\uff0c\u978d\u70b9\u5c31\u662f\uff1a\u4e00\u4e2a\u5149\u6ed1\u51fd\u6570\u7684\u978d\u70b9\u90bb\u57df\u7684\u66f2\u7ebf\uff0c\u66f2\u9762\uff0c\u6216\u8d85\u66f2\u9762\uff0c\u90fd\u4f4d\u4e8e\u8fd9\u70b9\u7684\u5207\u7ebf\u7684\u4e0d\u540c\u8fb9\u3002 \u4f8b\u5982\u8fd9\u4e2a\u4e8c\u7ef4\u56fe\u5f62\uff0c\u50cf\u4e2a\u9a6c\u978d\uff1a\u5728x-\u8f74\u65b9\u5411\u5f80\u4e0a\u66f2\uff0c\u5728y-\u8f74\u65b9\u5411\u5f80\u4e0b\u66f2\uff0c\u978d\u70b9\u5c31\u662f\uff080\uff0c0\uff09\n\n\n\n\n\u4e3a\u4e86\u5e94\u5bf9\u4e0a\u9762\u7684\u4e09\u70b9\u6311\u6218\u5c31\u6709\u4e86\u4e0b\u9762\u8fd9\u4e9b\u7b97\u6cd5\u3002\n\n\n\n\n4. Momentum\n\n\nSGD \u5728 ravines \u7684\u60c5\u51b5\u4e0b\u5bb9\u6613\u88ab\u56f0\u4f4f\uff0c ravines \u5c31\u662f\u66f2\u9762\u7684\u4e00\u4e2a\u65b9\u5411\u6bd4\u53e6\u4e00\u4e2a\u65b9\u5411\u66f4\u9661\uff0c\u8fd9\u65f6 SGD \u4f1a\u53d1\u751f\u9707\u8361\u800c\u8fdf\u8fdf\u4e0d\u80fd\u63a5\u8fd1\u6781\u5c0f\u503c\uff1a\n\n\n\n\n\u68af\u5ea6\u66f4\u65b0\u89c4\u5219: \nMomentum \u901a\u8fc7\u52a0\u5165 \n\\gamma v_{t\u22121}\n\\gamma v_{t\u22121}\n \uff0c\u53ef\u4ee5\u52a0\u901f SGD\uff0c \u5e76\u4e14\u6291\u5236\u9707\u8361\n\n\n\n\n\nv_t=\\gamma v_{t-1} + \\eta \\bullet \\nabla_{\\theta}\\boldsymbol{J}(\\theta)\n\\\\\\\n\\theta = \\theta - v_t\n\n\n\n\nv_t=\\gamma v_{t-1} + \\eta \\bullet \\nabla_{\\theta}\\boldsymbol{J}(\\theta)\n\\\\\\\n\\theta = \\theta - v_t\n\n\n\n\n\n\u5f53\u6211\u4eec\u5c06\u4e00\u4e2a\u5c0f\u7403\u4ece\u5c71\u4e0a\u6eda\u4e0b\u6765\u65f6\uff0c\u6ca1\u6709\u963b\u529b\u7684\u8bdd\uff0c\u5b83\u7684\u52a8\u91cf\u4f1a\u8d8a\u6765\u8d8a\u5927\uff0c\u4f46\u662f\u5982\u679c\u9047\u5230\u4e86\u963b\u529b\uff0c\u901f\u5ea6\u5c31\u4f1a\u53d8\u5c0f\u3002 \n\u52a0\u5165\u7684\u8fd9\u4e00\u9879\uff0c\u53ef\u4ee5\u4f7f\u5f97\u68af\u5ea6\u65b9\u5411\u4e0d\u53d8\u7684\u7ef4\u5ea6\u4e0a\u901f\u5ea6\u53d8\u5feb\uff0c\u68af\u5ea6\u65b9\u5411\u6709\u6240\u6539\u53d8\u7684\u7ef4\u5ea6\u4e0a\u7684\u66f4\u65b0\u901f\u5ea6\u53d8\u6162\uff0c\u8fd9\u6837\u5c31\u53ef\u4ee5\u52a0\u5feb\u6536\u655b\u5e76\u51cf\u5c0f\u9707\u8361\u3002\n\n\n\u8d85\u53c2\u6570\u8bbe\u5b9a\u503c: \n\u4e00\u822c \n\\gamma\n\\gamma\n \u53d6\u503c 0.9 \u5de6\u53f3\u3002\n\n\n\u7f3a\u70b9: \n\u8fd9\u79cd\u60c5\u51b5\u76f8\u5f53\u4e8e\u5c0f\u7403\u4ece\u5c71\u4e0a\u6eda\u4e0b\u6765\u65f6\u662f\u5728\u76f2\u76ee\u5730\u6cbf\u7740\u5761\u6eda\uff0c\u5982\u679c\u5b83\u80fd\u5177\u5907\u4e00\u4e9b\u5148\u77e5\uff0c\u4f8b\u5982\u5feb\u8981\u4e0a\u5761\u65f6\uff0c\u5c31\u77e5\u9053\u9700\u8981\u51cf\u901f\u4e86\u7684\u8bdd\uff0c\u9002\u5e94\u6027\u4f1a\u66f4\u597d\u3002\n\n\n\n\n5. Nesterov accelerated gradient\n\n\n\u68af\u5ea6\u66f4\u65b0\u89c4\u5219: \n\u7528 \n\\theta\u2212\\gamma v_{t\u22121}\n\\theta\u2212\\gamma v_{t\u22121}\n \u6765\u8fd1\u4f3c\u5f53\u505a\u53c2\u6570\u4e0b\u4e00\u6b65\u4f1a\u53d8\u6210\u7684\u503c\uff0c\u5219\u5728\u8ba1\u7b97\u68af\u5ea6\u65f6\uff0c\u4e0d\u662f\u5728\u5f53\u524d\u4f4d\u7f6e\uff0c\u800c\u662f\u672a\u6765\u7684\u4f4d\u7f6e\u4e0a\n$$\nv_t = \\gamma v_{t-1} + \\eta \\bullet \\nabla_\\theta \\boldsymbol{J}(\\theta-\\gamma v_{t-1})\n \\\\\n \\theta = \\theta - v_t\n$$\n\n\n\u8d85\u53c2\u6570\u8bbe\u5b9a\u503c: \n\n\\gamma\n\\gamma\n \u4ecd\u7136\u53d6\u503c 0.9 \u5de6\u53f3\u3002\n\n\n\u6548\u679c\u6bd4\u8f83: \n\n\n\n\u84dd\u8272\u662f Momentum \u7684\u8fc7\u7a0b\uff0c\u4f1a\u5148\u8ba1\u7b97\u5f53\u524d\u7684\u68af\u5ea6\uff0c\u7136\u540e\u5728\u66f4\u65b0\u540e\u7684\u7d2f\u79ef\u68af\u5ea6\u540e\u4f1a\u6709\u4e00\u4e2a\u5927\u7684\u8df3\u8dc3\u3002 \n\u800c NAG \u4f1a\u5148\u5728\u524d\u4e00\u6b65\u7684\u7d2f\u79ef\u68af\u5ea6\u4e0a(brown vector)\u6709\u4e00\u4e2a\u5927\u7684\u8df3\u8dc3\uff0c\u7136\u540e\u8861\u91cf\u4e00\u4e0b\u68af\u5ea6\u505a\u4e00\u4e0b\u4fee\u6b63(red vector)\uff0c\u8fd9\u79cd\u9884\u671f\u7684\u66f4\u65b0\u53ef\u4ee5\u907f\u514d\u6211\u4eec\u8d70\u7684\u592a\u5feb\u3002\n\n\nNAG \u53ef\u4ee5\u4f7f RNN \u5728\u5f88\u591a\u4efb\u52a1\u4e0a\u6709\u66f4\u597d\u7684\u8868\u73b0\u3002\u76ee\u524d\u4e3a\u6b62\uff0c\u6211\u4eec\u53ef\u4ee5\u505a\u5230\uff0c\u5728\u66f4\u65b0\u68af\u5ea6\u65f6\u987a\u5e94 loss function \u7684\u68af\u5ea6\u6765\u8c03\u6574\u901f\u5ea6\uff0c\u5e76\u4e14\u5bf9 SGD \u8fdb\u884c\u52a0\u901f\u3002\u6211\u4eec\u8fd8\u5e0c\u671b\u53ef\u4ee5\u6839\u636e\u53c2\u6570\u7684\u91cd\u8981\u6027\u800c\u5bf9\u4e0d\u540c\u7684\u53c2\u6570\u8fdb\u884c\u4e0d\u540c\u7a0b\u5ea6\u7684\u66f4\u65b0\u3002\n\n\n\n\n6. Adagrad\n\n\n\u8fd9\u4e2a\u7b97\u6cd5\u5c31\u53ef\u4ee5\u5bf9\u4f4e\u9891\u7684\u53c2\u6570\u505a\u8f83\u5927\u7684\u66f4\u65b0\uff0c\u5bf9\u9ad8\u9891\u7684\u505a\u8f83\u5c0f\u7684\u66f4\u65b0\uff0c\u4e5f\u56e0\u6b64\uff0c\u5bf9\u4e8e\u7a00\u758f\u7684\u6570\u636e\u5b83\u7684\u8868\u73b0\u5f88\u597d\uff0c\u5f88\u597d\u5730\u63d0\u9ad8\u4e86 SGD \u7684\u9c81\u68d2\u6027\uff0c\u4f8b\u5982\u8bc6\u522b Youtube \u89c6\u9891\u91cc\u9762\u7684\u732b\uff0c\u8bad\u7ec3 GloVe word embeddings\uff0c\u56e0\u4e3a\u5b83\u4eec\u90fd\u662f\u9700\u8981\u5728\u4f4e\u9891\u7684\u7279\u5f81\u4e0a\u6709\u66f4\u5927\u7684\u66f4\u65b0\u3002\n\n\n\u68af\u5ea6\u66f4\u65b0\u89c4\u5219:\n\n\n\n\n\n \\theta_{t+1,i} = \\theta_{t,i} -\\frac{\\eta}{\\sqrt{G_{t,ii}+\\varepsilon }} \\bullet g_{t,i}\n\n\n\n\n \\theta_{t+1,i} = \\theta_{t,i} -\\frac{\\eta}{\\sqrt{G_{t,ii}+\\varepsilon }} \\bullet g_{t,i}\n\n\n\n\n\n\u5176\u4e2d \ng\ng\n \u4e3a\uff1a\nt\nt\n \u65f6\u523b\u53c2\u6570 \n\u03b8_i\n\u03b8_i\n \u7684\u68af\u5ea6\n\n\n\n\n\ng_{t,i} = \\nabla_\\theta \\boldsymbol{J}(\\theta_{i})\n\n\n\n\ng_{t,i} = \\nabla_\\theta \\boldsymbol{J}(\\theta_{i})\n\n\n\n\n\n\u5982\u679c\u662f\u666e\u901a\u7684 SGD\uff0c \u90a3\u4e48 \n\u03b8_i\n\u03b8_i\n \u5728\u6bcf\u4e00\u65f6\u523b\u7684\u68af\u5ea6\u66f4\u65b0\u516c\u5f0f\u4e3a\uff1a\n\n\n\n\n\n \\theta_{t+1,i} = \\theta_{t,i} -\\eta \\bullet g_{t,i}\n\n\n\n\n \\theta_{t+1,i} = \\theta_{t,i} -\\eta \\bullet g_{t,i}\n\n\n\n\n\n\u4f46\u8fd9\u91cc\u7684 learning rate \neta\neta\n \u4e5f\u968f \nt\nt\n \u548c \ni\ni\n \u800c\u53d8\uff1a\n\n\n\n\n\n \\theta_{t+1,i} = \\theta_{t,i} -\\frac{\\eta}{\\sqrt{G_{t,ii}+\\varepsilon }} \\bullet g_{t,i}\n\n\n\n\n \\theta_{t+1,i} = \\theta_{t,i} -\\frac{\\eta}{\\sqrt{G_{t,ii}+\\varepsilon }} \\bullet g_{t,i}\n\n\n\n\n\n\u5176\u4e2d \nG_t\nG_t\n \u662f\u4e2a\u5bf9\u89d2\u77e9\u9635\uff0c \n(i,i)\n(i,i)\n \u5143\u7d20\u5c31\u662f \nt\nt\n \u65f6\u523b\u53c2\u6570 \n\u03b8_i\n\u03b8_i\n \u7684\u68af\u5ea6\u5e73\u65b9\u548c\u3002\n\n\nAdagrad \u7684\u4f18\u70b9\u662f\u51cf\u5c11\u4e86\u5b66\u4e60\u7387\u7684\u624b\u52a8\u8c03\u8282\n\n\n\u8d85\u53c2\u6570\u8bbe\u5b9a\u503c: \n\u4e00\u822c \n\\eta\n\\eta\n \u5c31\u53d6 0.01\u3002\n\n\n\u7f3a\u70b9: \n\u5b83\u7684\u7f3a\u70b9\u662f\u5206\u6bcd\u4f1a\u4e0d\u65ad\u79ef\u7d2f\uff0c\u8fd9\u6837\u5b66\u4e60\u7387\u5c31\u4f1a\u6536\u7f29\u5e76\u6700\u7ec8\u4f1a\u53d8\u5f97\u975e\u5e38\u5c0f\u3002\n\n\n\n\n7. Adadelta\n\n\n\u8fd9\u4e2a\u7b97\u6cd5\u662f\u5bf9 Adagrad \u7684\u6539\u8fdb\uff0c\n\n\n\u548c Adagrad \u76f8\u6bd4\uff0c\u5c31\u662f\u5206\u6bcd\u7684 \nG\nG\n \u6362\u6210\u4e86\u8fc7\u53bb\u7684\u68af\u5ea6\u5e73\u65b9\u7684\u8870\u51cf\u5e73\u5747\u503c\uff0c\n\n\n\n\n\n \\Delta \\theta_t =  -\\frac{\\eta}{\\sqrt{E[g^2]_t+\\varepsilon }} \\bullet g_t\n\n\n\n\n \\Delta \\theta_t =  -\\frac{\\eta}{\\sqrt{E[g^2]_t+\\varepsilon }} \\bullet g_t\n\n\n\n\n\n\u8fd9\u4e2a\u5206\u6bcd\u76f8\u5f53\u4e8e\u68af\u5ea6\u7684\u5747\u65b9\u6839 root mean squared (RMS) \uff0c\u6240\u4ee5\u53ef\u4ee5\u7528 RMS \u7b80\u5199\uff1a\n\n\n\n\n\n \\Delta \\theta_t =  -\\frac{\\eta}{RMS[g]_t} \\bullet g_t\n\n\n\n\n \\Delta \\theta_t =  -\\frac{\\eta}{RMS[g]_t} \\bullet g_t\n\n\n\n\n\n\u5176\u4e2d \nE\nE\n \u7684\u8ba1\u7b97\u516c\u5f0f\u5982\u4e0b\uff0c\nt\nt\n \u65f6\u523b\u7684\u4f9d\u8d56\u4e8e\u524d\u4e00\u65f6\u523b\u7684\u5e73\u5747\u548c\u5f53\u524d\u7684\u68af\u5ea6\uff1a\n\n\n\n\n\n E[g^2]_t = \\gamma E[g^2]_{t-1} + (1-\\gamma)g_t^2\n\n\n\n\n E[g^2]_t = \\gamma E[g^2]_{t-1} + (1-\\gamma)g_t^2\n\n\n\n\n\n\u68af\u5ea6\u66f4\u65b0\u89c4\u5219:\n\n\n\u6b64\u5916\uff0c\u8fd8\u5c06\u5b66\u4e60\u7387 \n\\eta\n\\eta\n \u6362\u6210\u4e86 \nRMS[\\Delta \\theta]\nRMS[\\Delta \\theta]\n\uff0c\u8fd9\u6837\u7684\u8bdd\uff0c\u6211\u4eec\u751a\u81f3\u90fd\u4e0d\u9700\u8981\u63d0\u524d\u8bbe\u5b9a\u5b66\u4e60\u7387\u4e86\uff1a\n\n\n\n\n\n \\Delta \\theta_t =  -\\frac{RMS[\\Delta \\theta]_{t-1}}{RMS[g]_t} \\bullet g_t\n \\\\\\\n \\theta_{t+1} = \\theta_t + \\Delta \\theta_t\n\n\n\n\n \\Delta \\theta_t =  -\\frac{RMS[\\Delta \\theta]_{t-1}}{RMS[g]_t} \\bullet g_t\n \\\\\\\n \\theta_{t+1} = \\theta_t + \\Delta \\theta_t\n\n\n\n\n\n\u8d85\u53c2\u6570\u8bbe\u5b9a\u503c: \n\n\\gamma\n\\gamma\n \u4e00\u822c\u8bbe\u5b9a\u4e3a 0.9\uff0c\n\n\n\n\n8. RMSprop\n\n\nRMSprop \u662f Geoff Hinton \u63d0\u51fa\u7684\u4e00\u79cd\u81ea\u9002\u5e94\u5b66\u4e60\u7387\u65b9\u6cd5\u3002\nRMSprop \u548c Adadelta \u90fd\u662f\u4e3a\u4e86\u89e3\u51b3 Adagrad \u5b66\u4e60\u7387\u6025\u5267\u4e0b\u964d\u95ee\u9898\u7684\uff0c\n\n\n\u68af\u5ea6\u66f4\u65b0\u89c4\u5219: \nRMSprop \u4e0e Adadelta \u7684\u7b2c\u4e00\u79cd\u5f62\u5f0f\u76f8\u540c\uff1a\n$$\n E[g^2]\nt = \\gamma E[g^2]\n{t-1} + (1-\\gamma)g_t^2\n \\\\\n \\theta_{t+1} = \\theta_t -\\frac{\\eta}{\\sqrt{E[g^2]_t+\\varepsilon }} g_t\n$$\n\n\n\u8d85\u53c2\u6570\u8bbe\u5b9a\u503c: \nHinton \u5efa\u8bae\u8bbe\u5b9a \ngamma\ngamma\n \u4e3a 0.9, \u5b66\u4e60\u7387 \n\\eta\n\\eta\n \u4e3a 0.001\u3002\n\n\n\n\n9. Adam\n\n\n\u8fd9\u4e2a\u7b97\u6cd5\u662f\u53e6\u4e00\u79cd\u8ba1\u7b97\u6bcf\u4e2a\u53c2\u6570\u7684\u81ea\u9002\u5e94\u5b66\u4e60\u7387\u7684\u65b9\u6cd5\u3002\n\u9664\u4e86\u50cf Adadelta \u548c RMSprop \u4e00\u6837\u5b58\u50a8\u4e86\u8fc7\u53bb\u68af\u5ea6\u7684\u5e73\u65b9 \nv_t\nv_t\n \u7684\u6307\u6570\u8870\u51cf\u5e73\u5747\u503c \uff0c\u4e5f\u50cf momentum \u4e00\u6837\u4fdd\u6301\u4e86\u8fc7\u53bb\u68af\u5ea6 \nm_t\nm_t\n \u7684\u6307\u6570\u8870\u51cf\u5e73\u5747\u503c\uff1a\n\n\n\n\n\nm_t = \\beta_1 m_{t-1} + (1-\\beta_1)g_t\n\\\\\\\nv_t = \\beta_2 v_{t-1} + (1-\\beta_2)g_t^2\n\n\n\n\nm_t = \\beta_1 m_{t-1} + (1-\\beta_1)g_t\n\\\\\\\nv_t = \\beta_2 v_{t-1} + (1-\\beta_2)g_t^2\n\n\n\n\n\n\u5982\u679c \nm_t\nm_t\n \u548c \nv_t\nv_t\n \u88ab\u521d\u59cb\u5316\u4e3a 0 \u5411\u91cf\uff0c\u90a3\u5b83\u4eec\u5c31\u4f1a\u5411 0 \u504f\u7f6e\uff0c\u6240\u4ee5\u505a\u4e86\u504f\u5dee\u6821\u6b63\uff0c \n\u901a\u8fc7\u8ba1\u7b97\u504f\u5dee\u6821\u6b63\u540e\u7684 \nm_t\nm_t\n \u548c \nv_t\nv_t\n \u6765\u62b5\u6d88\u8fd9\u4e9b\u504f\u5dee\uff1a\n\n\n\n\n\n\\hat{m}_t = \\frac{m_t}{1-\\beta^t_1}\n\\\\\\\n\\hat{v}_t = \\frac{v_t}{1-\\beta^t_2}\n\n\n\n\n\\hat{m}_t = \\frac{m_t}{1-\\beta^t_1}\n\\\\\\\n\\hat{v}_t = \\frac{v_t}{1-\\beta^t_2}\n\n\n\n\n\n\u68af\u5ea6\u66f4\u65b0\u89c4\u5219:\n\n\n\n\n\n \\theta_{t+1} = \\theta_t -\\frac{\\eta}{\\sqrt{\\hat{v}_t} + \\varepsilon } \\hat{m}_t\n\n\n\n\n \\theta_{t+1} = \\theta_t -\\frac{\\eta}{\\sqrt{\\hat{v}_t} + \\varepsilon } \\hat{m}_t\n\n\n\n\n\n\u8d85\u53c2\u6570\u8bbe\u5b9a\u503c: \n\u5efa\u8bae \n\\beta_1\n\\beta_1\n \uff1d 0.9\uff0c\n\\beta_2\n\\beta_2\n \uff1d 0.999\uff0c\n\\varepsilon\n\\varepsilon\n \uff1d 10e\u22128\n\n\n\u5b9e\u8df5\u8868\u660e\uff0cAdam \u6bd4\u5176\u4ed6\u9002\u5e94\u6027\u5b66\u4e60\u65b9\u6cd5\u6548\u679c\u8981\u597d\u3002\n\n\n\n\n2. \u6548\u679c\u6bd4\u8f83?\n\n\n\u4e0b\u9762\u770b\u4e00\u4e0b\u51e0\u79cd\u7b97\u6cd5\u5728\u978d\u70b9\u548c\u7b49\u9ad8\u7ebf\u4e0a\u7684\u8868\u73b0\uff1a\n\n\n\n\n\n\n\u4e0a\u9762\u4e24\u79cd\u60c5\u51b5\u90fd\u53ef\u4ee5\u770b\u51fa\uff0cAdagrad, Adadelta, RMSprop \u51e0\u4e4e\u5f88\u5feb\u5c31\u627e\u5230\u4e86\u6b63\u786e\u7684\u65b9\u5411\u5e76\u524d\u8fdb\uff0c\u6536\u655b\u901f\u5ea6\u4e5f\u76f8\u5f53\u5feb\uff0c\u800c\u5176\u5b83\u65b9\u6cd5\u8981\u4e48\u5f88\u6162\uff0c\u8981\u4e48\u8d70\u4e86\u5f88\u591a\u5f2f\u8def\u624d\u627e\u5230\u3002\n\n\n\u7531\u56fe\u53ef\u77e5\u81ea\u9002\u5e94\u5b66\u4e60\u7387\u65b9\u6cd5\u5373 Adagrad, Adadelta, RMSprop, Adam \u5728\u8fd9\u79cd\u60c5\u666f\u4e0b\u4f1a\u66f4\u5408\u9002\u800c\u4e14\u6536\u655b\u6027\u66f4\u597d\u3002\n\n\n\n\n3. \u5982\u4f55\u9009\u62e9\uff1f\n\n\n\u5982\u679c\u6570\u636e\u662f\u7a00\u758f\u7684\uff0c\u5c31\u7528\u81ea\u9002\u7528\u65b9\u6cd5\uff0c\u5373 Adagrad, Adadelta, RMSprop, Adam\u3002\n\n\nRMSprop, Adadelta, Adam \u5728\u5f88\u591a\u60c5\u51b5\u4e0b\u7684\u6548\u679c\u662f\u76f8\u4f3c\u7684\u3002\n\n\nAdam \u5c31\u662f\u5728 RMSprop \u7684\u57fa\u7840\u4e0a\u52a0\u4e86 bias-correction \u548c momentum\uff0c\n\n\n\u968f\u7740\u68af\u5ea6\u53d8\u7684\u7a00\u758f\uff0cAdam \u6bd4 RMSprop \u6548\u679c\u4f1a\u597d\u3002\n\n\n\u6574\u4f53\u6765\u8bb2\uff0cAdam \u662f\u6700\u597d\u7684\u9009\u62e9\u3002\n\n\n\u5f88\u591a\u8bba\u6587\u91cc\u90fd\u4f1a\u7528 SGD\uff0c\u6ca1\u6709 momentum \u7b49\u3002SGD \u867d\u7136\u80fd\u8fbe\u5230\u6781\u5c0f\u503c\uff0c\u4f46\u662f\u6bd4\u5176\u5b83\u7b97\u6cd5\u7528\u7684\u65f6\u95f4\u957f\uff0c\u800c\u4e14\u53ef\u80fd\u4f1a\u88ab\u56f0\u5728\u978d\u70b9\u3002\n\n\n\u5982\u679c\u9700\u8981\u66f4\u5feb\u7684\u6536\u655b\uff0c\u6216\u8005\u662f\u8bad\u7ec3\u66f4\u6df1\u66f4\u590d\u6742\u7684\u795e\u7ecf\u7f51\u7edc\uff0c\u9700\u8981\u7528\u4e00\u79cd\u81ea\u9002\u5e94\u7684\u7b97\u6cd5\u3002\n\n\n\u53c2\u8003\uff1a \n\nhttp://sebastianruder.com/optimizing-gradient-descent/index.html\n#fn:24\n \n\nhttp://www.redcedartech.com/pdfs/Select\n_Optimization_Method.pdf\n \n\nhttps://stats.stackexchange.com/questions/55247/how-to-choose-the-right-optimization-algorithm", 
            "title": "\u5982\u4f55\u9009\u62e9\u4f18\u5316\u5668 optimizer"
        }, 
        {
            "location": "/\u5b66\u4e60/tensorflow/\u5982\u4f55\u9009\u62e9\u4f18\u5316\u5668 optimizer/#146", 
            "text": "\u9996\u5148\u6765\u770b\u4e00\u4e0b\u68af\u5ea6\u4e0b\u964d\u6700\u5e38\u89c1\u7684\u4e09\u79cd\u53d8\u5f62 BGD\uff0cSGD\uff0cMBGD\uff0c\u8fd9\u4e09\u79cd\u5f62\u5f0f\u7684\u533a\u522b\u5c31\u662f\u53d6\u51b3\u4e8e\u6211\u4eec\u7528\u591a\u5c11\u6570\u636e\u6765\u8ba1\u7b97\u76ee\u6807\u51fd\u6570\u7684\u68af\u5ea6\uff0c\u8fd9\u6837\u7684\u8bdd\u81ea\u7136\u5c31\u6d89\u53ca\u5230\u4e00\u4e2a trade\uff0doff\uff0c\u5373\u53c2\u6570\u66f4\u65b0\u7684\u51c6\u786e\u7387\u548c\u8fd0\u884c\u65f6\u95f4\u3002", 
            "title": "1. \u4f18\u5316\u5668\u7b97\u6cd5\u7b80\u8ff0?"
        }, 
        {
            "location": "/\u5b66\u4e60/tensorflow/\u5982\u4f55\u9009\u62e9\u4f18\u5316\u5668 optimizer/#146-batch-gradient-descent", 
            "text": "\u68af\u5ea6\u66f4\u65b0\u89c4\u5219: \nBGD \u91c7\u7528\u6574\u4e2a\u8bad\u7ec3\u96c6\u7684\u6570\u636e\u6765\u8ba1\u7b97 cost function \u5bf9\u53c2\u6570\u7684\u68af\u5ea6\uff1a   \n\\theta = \\theta - \\eta \\bullet \\nabla_\\theta \\boldsymbol{J}(\\theta)  \n\\theta = \\theta - \\eta \\bullet \\nabla_\\theta \\boldsymbol{J}(\\theta)   \u7f3a\u70b9: \n\u7531\u4e8e\u8fd9\u79cd\u65b9\u6cd5\u662f\u5728\u4e00\u6b21\u66f4\u65b0\u4e2d\uff0c\u5c31\u5bf9\u6574\u4e2a\u6570\u636e\u96c6\u8ba1\u7b97\u68af\u5ea6\uff0c\u6240\u4ee5\u8ba1\u7b97\u8d77\u6765\u975e\u5e38\u6162\uff0c\u9047\u5230\u5f88\u5927\u91cf\u7684\u6570\u636e\u96c6\u4e5f\u4f1a\u975e\u5e38\u68d8\u624b\uff0c\u800c\u4e14\u4e0d\u80fd\u6295\u5165\u65b0\u6570\u636e\u5b9e\u65f6\u66f4\u65b0\u6a21\u578b  for   i   in   range ( nb_epochs ): \n   params_grad   =   evaluate_gradient ( loss_function ,   data ,   params ) \n   params   =   params   -   learning_rate   *   params_grad   \u6211\u4eec\u4f1a\u4e8b\u5148\u5b9a\u4e49\u4e00\u4e2a\u8fed\u4ee3\u6b21\u6570 epoch\uff0c\u9996\u5148\u8ba1\u7b97\u68af\u5ea6\u5411\u91cf params_grad\uff0c\u7136\u540e\u6cbf\u7740\u68af\u5ea6\u7684\u65b9\u5411\u66f4\u65b0\u53c2\u6570 params\uff0clearning rate \u51b3\u5b9a\u4e86\u6211\u4eec\u6bcf\u4e00\u6b65\u8fc8\u591a\u5927\u3002  Batch gradient descent \u5bf9\u4e8e\u51f8\u51fd\u6570\u53ef\u4ee5\u6536\u655b\u5230\u5168\u5c40\u6781\u5c0f\u503c\uff0c\u5bf9\u4e8e\u975e\u51f8\u51fd\u6570\u53ef\u4ee5\u6536\u655b\u5230\u5c40\u90e8\u6781\u5c0f\u503c\u3002", 
            "title": "1. Batch gradient descent"
        }, 
        {
            "location": "/\u5b66\u4e60/tensorflow/\u5982\u4f55\u9009\u62e9\u4f18\u5316\u5668 optimizer/#246-stochastic-gradient-descent", 
            "text": "\u68af\u5ea6\u66f4\u65b0\u89c4\u5219: \n\u548c BGD \u7684\u4e00\u6b21\u7528\u6240\u6709\u6570\u636e\u8ba1\u7b97\u68af\u5ea6\u76f8\u6bd4\uff0cSGD \u6bcf\u6b21\u66f4\u65b0\u65f6\u5bf9\u6bcf\u4e2a\u6837\u672c\u8fdb\u884c\u68af\u5ea6\u66f4\u65b0\uff0c\u5bf9\u4e8e\u5f88\u5927\u7684\u6570\u636e\u96c6\u6765\u8bf4\uff0c\u53ef\u80fd\u4f1a\u6709\u76f8\u4f3c\u7684\u6837\u672c\uff0c\u8fd9\u6837 BGD \u5728\u8ba1\u7b97\u68af\u5ea6\u65f6\u4f1a\u51fa\u73b0\u5197\u4f59\uff0c\u800c SGD \u4e00\u6b21\u53ea\u8fdb\u884c\u4e00\u6b21\u66f4\u65b0\uff0c\u5c31\u6ca1\u6709\u5197\u4f59\uff0c\u800c\u4e14\u6bd4\u8f83\u5feb\uff0c\u5e76\u4e14\u53ef\u4ee5\u65b0\u589e\u6837\u672c\u3002   \n\\theta = \\theta - \\eta \\bullet \\nabla_\\theta \n \\boldsymbol{J}(\\theta;x^{(i)};y^{(i)})  \n\\theta = \\theta - \\eta \\bullet \\nabla_\\theta \n \\boldsymbol{J}(\\theta;x^{(i)};y^{(i)})   for   i   in   range ( nb_epochs ): \n   np . random . shuffle ( data ) \n   for   example   in   data : \n     params_grad   =   evaluate_gradient ( loss_function ,   example ,   params ) \n     params   =   params   -   learning_rate   *   params_grad   \u770b\u4ee3\u7801\uff0c\u53ef\u4ee5\u770b\u5230\u533a\u522b\uff0c\u5c31\u662f\u6574\u4f53\u6570\u636e\u96c6\u662f\u4e2a\u5faa\u73af\uff0c\u5176\u4e2d\u5bf9\u6bcf\u4e2a\u6837\u672c\u8fdb\u884c\u4e00\u6b21\u53c2\u6570\u66f4\u65b0\u3002  \u7f3a\u70b9: \n\u4f46\u662f SGD \u56e0\u4e3a\u66f4\u65b0\u6bd4\u8f83\u9891\u7e41\uff0c\u4f1a\u9020\u6210 cost function \u6709\u4e25\u91cd\u7684\u9707\u8361\u3002   BGD \u53ef\u4ee5\u6536\u655b\u5230\u5c40\u90e8\u6781\u5c0f\u503c\uff0c\u5f53\u7136 SGD \u7684\u9707\u8361\u53ef\u80fd\u4f1a\u8df3\u5230\u66f4\u597d\u7684\u5c40\u90e8\u6781\u5c0f\u503c\u5904\u3002  \u5f53\u6211\u4eec\u7a0d\u5fae\u51cf\u5c0f learning rate\uff0cSGD \u548c BGD \u7684\u6536\u655b\u6027\u662f\u4e00\u6837\u7684\u3002", 
            "title": "2. Stochastic gradient descent"
        }, 
        {
            "location": "/\u5b66\u4e60/tensorflow/\u5982\u4f55\u9009\u62e9\u4f18\u5316\u5668 optimizer/#346-mini-batch-gradient-descent", 
            "text": "\u68af\u5ea6\u66f4\u65b0\u89c4\u5219: \nMBGD \u6bcf\u4e00\u6b21\u5229\u7528\u4e00\u5c0f\u6279\u6837\u672c\uff0c\u5373 n \u4e2a\u6837\u672c\u8fdb\u884c\u8ba1\u7b97\uff0c\u8fd9\u6837\u5b83\u53ef\u4ee5\u964d\u4f4e\u53c2\u6570\u66f4\u65b0\u65f6\u7684\u65b9\u5dee\uff0c\u6536\u655b\u66f4\u7a33\u5b9a\uff0c\u53e6\u4e00\u65b9\u9762\u53ef\u4ee5\u5145\u5206\u5730\u5229\u7528\u6df1\u5ea6\u5b66\u4e60\u5e93\u4e2d\u9ad8\u5ea6\u4f18\u5316\u7684\u77e9\u9635\u64cd\u4f5c\u6765\u8fdb\u884c\u66f4\u6709\u6548\u7684\u68af\u5ea6\u8ba1\u7b97\u3002   \n\\theta = \\theta - \\eta \\bullet \\nabla_\\theta \n \\boldsymbol{J}(\\theta;x^{(i:i+n)};y^{(i:i+n)})  \n\\theta = \\theta - \\eta \\bullet \\nabla_\\theta \n \\boldsymbol{J}(\\theta;x^{(i:i+n)};y^{(i:i+n)})   \u548c SGD \u7684\u533a\u522b\u662f\u6bcf\u4e00\u6b21\u5faa\u73af\u4e0d\u662f\u4f5c\u7528\u4e8e\u6bcf\u4e2a\u6837\u672c\uff0c\u800c\u662f\u5177\u6709 n \u4e2a\u6837\u672c\u7684\u6279\u6b21  for   i   in   range ( nb_epochs ): \n   np . random . shuffle ( data ) \n   for   batch   in   get_batches ( data ,   batch_size = 50 ): \n     params_grad   =   evaluate_gradient ( loss_function ,   batch ,   params ) \n     params   =   params   -   learning_rate   *   params_grad   \u8d85\u53c2\u6570\u8bbe\u5b9a\u503c: \nn \u4e00\u822c\u53d6\u503c\u5728 50\uff5e256  \u7f3a\u70b9: \n  1. learning rate \u5982\u679c\u9009\u62e9\u7684\u592a\u5c0f\uff0c\u6536\u655b\u901f\u5ea6\u4f1a\u5f88\u6162\uff0c\u5982\u679c\u592a\u5927\uff0closs function \u5c31\u4f1a\u5728\u6781\u5c0f\u503c\u5904\u4e0d\u505c\u5730\u9707\u8361\u751a\u81f3\u504f\u79bb\u3002\uff08\u6709\u4e00\u79cd\u63aa\u65bd\u662f\u5148\u8bbe\u5b9a\u5927\u4e00\u70b9\u7684\u5b66\u4e60\u7387\uff0c\u5f53\u4e24\u6b21\u8fed\u4ee3\u4e4b\u95f4\u7684\u53d8\u5316\u4f4e\u4e8e\u67d0\u4e2a\u9608\u503c\u540e\uff0c\u5c31\u51cf\u5c0f learning rate\uff0c\u4e0d\u8fc7\u8fd9\u4e2a\u9608\u503c\u7684\u8bbe\u5b9a\u9700\u8981\u63d0\u524d\u5199\u597d\uff0c\u8fd9\u6837\u7684\u8bdd\u5c31\u4e0d\u80fd\u591f\u9002\u5e94\u6570\u636e\u96c6\u7684\u7279\u70b9\u3002\uff09\n  2. \u6b64\u5916\uff0c\u8fd9\u79cd\u65b9\u6cd5\u662f\u5bf9\u6240\u6709\u53c2\u6570\u66f4\u65b0\u65f6\u5e94\u7528\u540c\u6837\u7684 learning rate\uff0c\u5982\u679c\u6211\u4eec\u7684\u6570\u636e\u662f\u7a00\u758f\u7684\uff0c\u6211\u4eec\u66f4\u5e0c\u671b\u5bf9\u51fa\u73b0\u9891\u7387\u4f4e\u7684\u7279\u5f81\u8fdb\u884c\u5927\u4e00\u70b9\u7684\u66f4\u65b0\u3002\n  3. \u53e6\u5916\uff0c\u5bf9\u4e8e\u975e\u51f8\u51fd\u6570\uff0c\u8fd8\u8981\u907f\u514d\u9677\u4e8e\u5c40\u90e8\u6781\u5c0f\u503c\u5904\uff0c\u6216\u8005\u978d\u70b9\u5904\uff0c\u56e0\u4e3a\u978d\u70b9\u5468\u56f4\u7684error \u662f\u4e00\u6837\u7684\uff0c\u6240\u6709\u7ef4\u5ea6\u7684\u68af\u5ea6\u90fd\u63a5\u8fd1\u4e8e0\uff0cSGD \u5f88\u5bb9\u6613\u88ab\u56f0\u5728\u8fd9\u91cc\u3002  \u4e0d\u8fc7 Mini-batch gradient descent \u4e0d\u80fd\u4fdd\u8bc1\u5f88\u597d\u7684\u6536\u655b\u6027\uff0c\u978d\u70b9\u5c31\u662f\uff1a\u4e00\u4e2a\u5149\u6ed1\u51fd\u6570\u7684\u978d\u70b9\u90bb\u57df\u7684\u66f2\u7ebf\uff0c\u66f2\u9762\uff0c\u6216\u8d85\u66f2\u9762\uff0c\u90fd\u4f4d\u4e8e\u8fd9\u70b9\u7684\u5207\u7ebf\u7684\u4e0d\u540c\u8fb9\u3002 \u4f8b\u5982\u8fd9\u4e2a\u4e8c\u7ef4\u56fe\u5f62\uff0c\u50cf\u4e2a\u9a6c\u978d\uff1a\u5728x-\u8f74\u65b9\u5411\u5f80\u4e0a\u66f2\uff0c\u5728y-\u8f74\u65b9\u5411\u5f80\u4e0b\u66f2\uff0c\u978d\u70b9\u5c31\u662f\uff080\uff0c0\uff09   \u4e3a\u4e86\u5e94\u5bf9\u4e0a\u9762\u7684\u4e09\u70b9\u6311\u6218\u5c31\u6709\u4e86\u4e0b\u9762\u8fd9\u4e9b\u7b97\u6cd5\u3002", 
            "title": "3. Mini-batch gradient descent"
        }, 
        {
            "location": "/\u5b66\u4e60/tensorflow/\u5982\u4f55\u9009\u62e9\u4f18\u5316\u5668 optimizer/#446-momentum", 
            "text": "SGD \u5728 ravines \u7684\u60c5\u51b5\u4e0b\u5bb9\u6613\u88ab\u56f0\u4f4f\uff0c ravines \u5c31\u662f\u66f2\u9762\u7684\u4e00\u4e2a\u65b9\u5411\u6bd4\u53e6\u4e00\u4e2a\u65b9\u5411\u66f4\u9661\uff0c\u8fd9\u65f6 SGD \u4f1a\u53d1\u751f\u9707\u8361\u800c\u8fdf\u8fdf\u4e0d\u80fd\u63a5\u8fd1\u6781\u5c0f\u503c\uff1a   \u68af\u5ea6\u66f4\u65b0\u89c4\u5219: \nMomentum \u901a\u8fc7\u52a0\u5165  \\gamma v_{t\u22121} \\gamma v_{t\u22121}  \uff0c\u53ef\u4ee5\u52a0\u901f SGD\uff0c \u5e76\u4e14\u6291\u5236\u9707\u8361   \nv_t=\\gamma v_{t-1} + \\eta \\bullet \\nabla_{\\theta}\\boldsymbol{J}(\\theta)\n\\\\\\\n\\theta = \\theta - v_t  \nv_t=\\gamma v_{t-1} + \\eta \\bullet \\nabla_{\\theta}\\boldsymbol{J}(\\theta)\n\\\\\\\n\\theta = \\theta - v_t   \u5f53\u6211\u4eec\u5c06\u4e00\u4e2a\u5c0f\u7403\u4ece\u5c71\u4e0a\u6eda\u4e0b\u6765\u65f6\uff0c\u6ca1\u6709\u963b\u529b\u7684\u8bdd\uff0c\u5b83\u7684\u52a8\u91cf\u4f1a\u8d8a\u6765\u8d8a\u5927\uff0c\u4f46\u662f\u5982\u679c\u9047\u5230\u4e86\u963b\u529b\uff0c\u901f\u5ea6\u5c31\u4f1a\u53d8\u5c0f\u3002 \n\u52a0\u5165\u7684\u8fd9\u4e00\u9879\uff0c\u53ef\u4ee5\u4f7f\u5f97\u68af\u5ea6\u65b9\u5411\u4e0d\u53d8\u7684\u7ef4\u5ea6\u4e0a\u901f\u5ea6\u53d8\u5feb\uff0c\u68af\u5ea6\u65b9\u5411\u6709\u6240\u6539\u53d8\u7684\u7ef4\u5ea6\u4e0a\u7684\u66f4\u65b0\u901f\u5ea6\u53d8\u6162\uff0c\u8fd9\u6837\u5c31\u53ef\u4ee5\u52a0\u5feb\u6536\u655b\u5e76\u51cf\u5c0f\u9707\u8361\u3002  \u8d85\u53c2\u6570\u8bbe\u5b9a\u503c: \n\u4e00\u822c  \\gamma \\gamma  \u53d6\u503c 0.9 \u5de6\u53f3\u3002  \u7f3a\u70b9: \n\u8fd9\u79cd\u60c5\u51b5\u76f8\u5f53\u4e8e\u5c0f\u7403\u4ece\u5c71\u4e0a\u6eda\u4e0b\u6765\u65f6\u662f\u5728\u76f2\u76ee\u5730\u6cbf\u7740\u5761\u6eda\uff0c\u5982\u679c\u5b83\u80fd\u5177\u5907\u4e00\u4e9b\u5148\u77e5\uff0c\u4f8b\u5982\u5feb\u8981\u4e0a\u5761\u65f6\uff0c\u5c31\u77e5\u9053\u9700\u8981\u51cf\u901f\u4e86\u7684\u8bdd\uff0c\u9002\u5e94\u6027\u4f1a\u66f4\u597d\u3002", 
            "title": "4. Momentum"
        }, 
        {
            "location": "/\u5b66\u4e60/tensorflow/\u5982\u4f55\u9009\u62e9\u4f18\u5316\u5668 optimizer/#546-nesterov-accelerated-gradient", 
            "text": "\u68af\u5ea6\u66f4\u65b0\u89c4\u5219: \n\u7528  \\theta\u2212\\gamma v_{t\u22121} \\theta\u2212\\gamma v_{t\u22121}  \u6765\u8fd1\u4f3c\u5f53\u505a\u53c2\u6570\u4e0b\u4e00\u6b65\u4f1a\u53d8\u6210\u7684\u503c\uff0c\u5219\u5728\u8ba1\u7b97\u68af\u5ea6\u65f6\uff0c\u4e0d\u662f\u5728\u5f53\u524d\u4f4d\u7f6e\uff0c\u800c\u662f\u672a\u6765\u7684\u4f4d\u7f6e\u4e0a\n$$\nv_t = \\gamma v_{t-1} + \\eta \\bullet \\nabla_\\theta \\boldsymbol{J}(\\theta-\\gamma v_{t-1})\n \\\\\n \\theta = \\theta - v_t\n$$  \u8d85\u53c2\u6570\u8bbe\u5b9a\u503c:  \\gamma \\gamma  \u4ecd\u7136\u53d6\u503c 0.9 \u5de6\u53f3\u3002  \u6548\u679c\u6bd4\u8f83:   \u84dd\u8272\u662f Momentum \u7684\u8fc7\u7a0b\uff0c\u4f1a\u5148\u8ba1\u7b97\u5f53\u524d\u7684\u68af\u5ea6\uff0c\u7136\u540e\u5728\u66f4\u65b0\u540e\u7684\u7d2f\u79ef\u68af\u5ea6\u540e\u4f1a\u6709\u4e00\u4e2a\u5927\u7684\u8df3\u8dc3\u3002 \n\u800c NAG \u4f1a\u5148\u5728\u524d\u4e00\u6b65\u7684\u7d2f\u79ef\u68af\u5ea6\u4e0a(brown vector)\u6709\u4e00\u4e2a\u5927\u7684\u8df3\u8dc3\uff0c\u7136\u540e\u8861\u91cf\u4e00\u4e0b\u68af\u5ea6\u505a\u4e00\u4e0b\u4fee\u6b63(red vector)\uff0c\u8fd9\u79cd\u9884\u671f\u7684\u66f4\u65b0\u53ef\u4ee5\u907f\u514d\u6211\u4eec\u8d70\u7684\u592a\u5feb\u3002  NAG \u53ef\u4ee5\u4f7f RNN \u5728\u5f88\u591a\u4efb\u52a1\u4e0a\u6709\u66f4\u597d\u7684\u8868\u73b0\u3002\u76ee\u524d\u4e3a\u6b62\uff0c\u6211\u4eec\u53ef\u4ee5\u505a\u5230\uff0c\u5728\u66f4\u65b0\u68af\u5ea6\u65f6\u987a\u5e94 loss function \u7684\u68af\u5ea6\u6765\u8c03\u6574\u901f\u5ea6\uff0c\u5e76\u4e14\u5bf9 SGD \u8fdb\u884c\u52a0\u901f\u3002\u6211\u4eec\u8fd8\u5e0c\u671b\u53ef\u4ee5\u6839\u636e\u53c2\u6570\u7684\u91cd\u8981\u6027\u800c\u5bf9\u4e0d\u540c\u7684\u53c2\u6570\u8fdb\u884c\u4e0d\u540c\u7a0b\u5ea6\u7684\u66f4\u65b0\u3002", 
            "title": "5. Nesterov accelerated gradient"
        }, 
        {
            "location": "/\u5b66\u4e60/tensorflow/\u5982\u4f55\u9009\u62e9\u4f18\u5316\u5668 optimizer/#646-adagrad", 
            "text": "\u8fd9\u4e2a\u7b97\u6cd5\u5c31\u53ef\u4ee5\u5bf9\u4f4e\u9891\u7684\u53c2\u6570\u505a\u8f83\u5927\u7684\u66f4\u65b0\uff0c\u5bf9\u9ad8\u9891\u7684\u505a\u8f83\u5c0f\u7684\u66f4\u65b0\uff0c\u4e5f\u56e0\u6b64\uff0c\u5bf9\u4e8e\u7a00\u758f\u7684\u6570\u636e\u5b83\u7684\u8868\u73b0\u5f88\u597d\uff0c\u5f88\u597d\u5730\u63d0\u9ad8\u4e86 SGD \u7684\u9c81\u68d2\u6027\uff0c\u4f8b\u5982\u8bc6\u522b Youtube \u89c6\u9891\u91cc\u9762\u7684\u732b\uff0c\u8bad\u7ec3 GloVe word embeddings\uff0c\u56e0\u4e3a\u5b83\u4eec\u90fd\u662f\u9700\u8981\u5728\u4f4e\u9891\u7684\u7279\u5f81\u4e0a\u6709\u66f4\u5927\u7684\u66f4\u65b0\u3002  \u68af\u5ea6\u66f4\u65b0\u89c4\u5219:   \n \\theta_{t+1,i} = \\theta_{t,i} -\\frac{\\eta}{\\sqrt{G_{t,ii}+\\varepsilon }} \\bullet g_{t,i}  \n \\theta_{t+1,i} = \\theta_{t,i} -\\frac{\\eta}{\\sqrt{G_{t,ii}+\\varepsilon }} \\bullet g_{t,i}   \u5176\u4e2d  g g  \u4e3a\uff1a t t  \u65f6\u523b\u53c2\u6570  \u03b8_i \u03b8_i  \u7684\u68af\u5ea6   \ng_{t,i} = \\nabla_\\theta \\boldsymbol{J}(\\theta_{i})  \ng_{t,i} = \\nabla_\\theta \\boldsymbol{J}(\\theta_{i})   \u5982\u679c\u662f\u666e\u901a\u7684 SGD\uff0c \u90a3\u4e48  \u03b8_i \u03b8_i  \u5728\u6bcf\u4e00\u65f6\u523b\u7684\u68af\u5ea6\u66f4\u65b0\u516c\u5f0f\u4e3a\uff1a   \n \\theta_{t+1,i} = \\theta_{t,i} -\\eta \\bullet g_{t,i}  \n \\theta_{t+1,i} = \\theta_{t,i} -\\eta \\bullet g_{t,i}   \u4f46\u8fd9\u91cc\u7684 learning rate  eta eta  \u4e5f\u968f  t t  \u548c  i i  \u800c\u53d8\uff1a   \n \\theta_{t+1,i} = \\theta_{t,i} -\\frac{\\eta}{\\sqrt{G_{t,ii}+\\varepsilon }} \\bullet g_{t,i}  \n \\theta_{t+1,i} = \\theta_{t,i} -\\frac{\\eta}{\\sqrt{G_{t,ii}+\\varepsilon }} \\bullet g_{t,i}   \u5176\u4e2d  G_t G_t  \u662f\u4e2a\u5bf9\u89d2\u77e9\u9635\uff0c  (i,i) (i,i)  \u5143\u7d20\u5c31\u662f  t t  \u65f6\u523b\u53c2\u6570  \u03b8_i \u03b8_i  \u7684\u68af\u5ea6\u5e73\u65b9\u548c\u3002  Adagrad \u7684\u4f18\u70b9\u662f\u51cf\u5c11\u4e86\u5b66\u4e60\u7387\u7684\u624b\u52a8\u8c03\u8282  \u8d85\u53c2\u6570\u8bbe\u5b9a\u503c: \n\u4e00\u822c  \\eta \\eta  \u5c31\u53d6 0.01\u3002  \u7f3a\u70b9: \n\u5b83\u7684\u7f3a\u70b9\u662f\u5206\u6bcd\u4f1a\u4e0d\u65ad\u79ef\u7d2f\uff0c\u8fd9\u6837\u5b66\u4e60\u7387\u5c31\u4f1a\u6536\u7f29\u5e76\u6700\u7ec8\u4f1a\u53d8\u5f97\u975e\u5e38\u5c0f\u3002", 
            "title": "6. Adagrad"
        }, 
        {
            "location": "/\u5b66\u4e60/tensorflow/\u5982\u4f55\u9009\u62e9\u4f18\u5316\u5668 optimizer/#746-adadelta", 
            "text": "\u8fd9\u4e2a\u7b97\u6cd5\u662f\u5bf9 Adagrad \u7684\u6539\u8fdb\uff0c  \u548c Adagrad \u76f8\u6bd4\uff0c\u5c31\u662f\u5206\u6bcd\u7684  G G  \u6362\u6210\u4e86\u8fc7\u53bb\u7684\u68af\u5ea6\u5e73\u65b9\u7684\u8870\u51cf\u5e73\u5747\u503c\uff0c   \n \\Delta \\theta_t =  -\\frac{\\eta}{\\sqrt{E[g^2]_t+\\varepsilon }} \\bullet g_t  \n \\Delta \\theta_t =  -\\frac{\\eta}{\\sqrt{E[g^2]_t+\\varepsilon }} \\bullet g_t   \u8fd9\u4e2a\u5206\u6bcd\u76f8\u5f53\u4e8e\u68af\u5ea6\u7684\u5747\u65b9\u6839 root mean squared (RMS) \uff0c\u6240\u4ee5\u53ef\u4ee5\u7528 RMS \u7b80\u5199\uff1a   \n \\Delta \\theta_t =  -\\frac{\\eta}{RMS[g]_t} \\bullet g_t  \n \\Delta \\theta_t =  -\\frac{\\eta}{RMS[g]_t} \\bullet g_t   \u5176\u4e2d  E E  \u7684\u8ba1\u7b97\u516c\u5f0f\u5982\u4e0b\uff0c t t  \u65f6\u523b\u7684\u4f9d\u8d56\u4e8e\u524d\u4e00\u65f6\u523b\u7684\u5e73\u5747\u548c\u5f53\u524d\u7684\u68af\u5ea6\uff1a   \n E[g^2]_t = \\gamma E[g^2]_{t-1} + (1-\\gamma)g_t^2  \n E[g^2]_t = \\gamma E[g^2]_{t-1} + (1-\\gamma)g_t^2   \u68af\u5ea6\u66f4\u65b0\u89c4\u5219:  \u6b64\u5916\uff0c\u8fd8\u5c06\u5b66\u4e60\u7387  \\eta \\eta  \u6362\u6210\u4e86  RMS[\\Delta \\theta] RMS[\\Delta \\theta] \uff0c\u8fd9\u6837\u7684\u8bdd\uff0c\u6211\u4eec\u751a\u81f3\u90fd\u4e0d\u9700\u8981\u63d0\u524d\u8bbe\u5b9a\u5b66\u4e60\u7387\u4e86\uff1a   \n \\Delta \\theta_t =  -\\frac{RMS[\\Delta \\theta]_{t-1}}{RMS[g]_t} \\bullet g_t\n \\\\\\\n \\theta_{t+1} = \\theta_t + \\Delta \\theta_t  \n \\Delta \\theta_t =  -\\frac{RMS[\\Delta \\theta]_{t-1}}{RMS[g]_t} \\bullet g_t\n \\\\\\\n \\theta_{t+1} = \\theta_t + \\Delta \\theta_t   \u8d85\u53c2\u6570\u8bbe\u5b9a\u503c:  \\gamma \\gamma  \u4e00\u822c\u8bbe\u5b9a\u4e3a 0.9\uff0c", 
            "title": "7. Adadelta"
        }, 
        {
            "location": "/\u5b66\u4e60/tensorflow/\u5982\u4f55\u9009\u62e9\u4f18\u5316\u5668 optimizer/#846-rmsprop", 
            "text": "RMSprop \u662f Geoff Hinton \u63d0\u51fa\u7684\u4e00\u79cd\u81ea\u9002\u5e94\u5b66\u4e60\u7387\u65b9\u6cd5\u3002\nRMSprop \u548c Adadelta \u90fd\u662f\u4e3a\u4e86\u89e3\u51b3 Adagrad \u5b66\u4e60\u7387\u6025\u5267\u4e0b\u964d\u95ee\u9898\u7684\uff0c  \u68af\u5ea6\u66f4\u65b0\u89c4\u5219: \nRMSprop \u4e0e Adadelta \u7684\u7b2c\u4e00\u79cd\u5f62\u5f0f\u76f8\u540c\uff1a\n$$\n E[g^2] t = \\gamma E[g^2] {t-1} + (1-\\gamma)g_t^2\n \\\\\n \\theta_{t+1} = \\theta_t -\\frac{\\eta}{\\sqrt{E[g^2]_t+\\varepsilon }} g_t\n$$  \u8d85\u53c2\u6570\u8bbe\u5b9a\u503c: \nHinton \u5efa\u8bae\u8bbe\u5b9a  gamma gamma  \u4e3a 0.9, \u5b66\u4e60\u7387  \\eta \\eta  \u4e3a 0.001\u3002", 
            "title": "8. RMSprop"
        }, 
        {
            "location": "/\u5b66\u4e60/tensorflow/\u5982\u4f55\u9009\u62e9\u4f18\u5316\u5668 optimizer/#946-adam", 
            "text": "\u8fd9\u4e2a\u7b97\u6cd5\u662f\u53e6\u4e00\u79cd\u8ba1\u7b97\u6bcf\u4e2a\u53c2\u6570\u7684\u81ea\u9002\u5e94\u5b66\u4e60\u7387\u7684\u65b9\u6cd5\u3002\n\u9664\u4e86\u50cf Adadelta \u548c RMSprop \u4e00\u6837\u5b58\u50a8\u4e86\u8fc7\u53bb\u68af\u5ea6\u7684\u5e73\u65b9  v_t v_t  \u7684\u6307\u6570\u8870\u51cf\u5e73\u5747\u503c \uff0c\u4e5f\u50cf momentum \u4e00\u6837\u4fdd\u6301\u4e86\u8fc7\u53bb\u68af\u5ea6  m_t m_t  \u7684\u6307\u6570\u8870\u51cf\u5e73\u5747\u503c\uff1a   \nm_t = \\beta_1 m_{t-1} + (1-\\beta_1)g_t\n\\\\\\\nv_t = \\beta_2 v_{t-1} + (1-\\beta_2)g_t^2  \nm_t = \\beta_1 m_{t-1} + (1-\\beta_1)g_t\n\\\\\\\nv_t = \\beta_2 v_{t-1} + (1-\\beta_2)g_t^2   \u5982\u679c  m_t m_t  \u548c  v_t v_t  \u88ab\u521d\u59cb\u5316\u4e3a 0 \u5411\u91cf\uff0c\u90a3\u5b83\u4eec\u5c31\u4f1a\u5411 0 \u504f\u7f6e\uff0c\u6240\u4ee5\u505a\u4e86\u504f\u5dee\u6821\u6b63\uff0c \n\u901a\u8fc7\u8ba1\u7b97\u504f\u5dee\u6821\u6b63\u540e\u7684  m_t m_t  \u548c  v_t v_t  \u6765\u62b5\u6d88\u8fd9\u4e9b\u504f\u5dee\uff1a   \n\\hat{m}_t = \\frac{m_t}{1-\\beta^t_1}\n\\\\\\\n\\hat{v}_t = \\frac{v_t}{1-\\beta^t_2}  \n\\hat{m}_t = \\frac{m_t}{1-\\beta^t_1}\n\\\\\\\n\\hat{v}_t = \\frac{v_t}{1-\\beta^t_2}   \u68af\u5ea6\u66f4\u65b0\u89c4\u5219:   \n \\theta_{t+1} = \\theta_t -\\frac{\\eta}{\\sqrt{\\hat{v}_t} + \\varepsilon } \\hat{m}_t  \n \\theta_{t+1} = \\theta_t -\\frac{\\eta}{\\sqrt{\\hat{v}_t} + \\varepsilon } \\hat{m}_t   \u8d85\u53c2\u6570\u8bbe\u5b9a\u503c: \n\u5efa\u8bae  \\beta_1 \\beta_1  \uff1d 0.9\uff0c \\beta_2 \\beta_2  \uff1d 0.999\uff0c \\varepsilon \\varepsilon  \uff1d 10e\u22128  \u5b9e\u8df5\u8868\u660e\uff0cAdam \u6bd4\u5176\u4ed6\u9002\u5e94\u6027\u5b66\u4e60\u65b9\u6cd5\u6548\u679c\u8981\u597d\u3002", 
            "title": "9. Adam"
        }, 
        {
            "location": "/\u5b66\u4e60/tensorflow/\u5982\u4f55\u9009\u62e9\u4f18\u5316\u5668 optimizer/#246", 
            "text": "\u4e0b\u9762\u770b\u4e00\u4e0b\u51e0\u79cd\u7b97\u6cd5\u5728\u978d\u70b9\u548c\u7b49\u9ad8\u7ebf\u4e0a\u7684\u8868\u73b0\uff1a    \u4e0a\u9762\u4e24\u79cd\u60c5\u51b5\u90fd\u53ef\u4ee5\u770b\u51fa\uff0cAdagrad, Adadelta, RMSprop \u51e0\u4e4e\u5f88\u5feb\u5c31\u627e\u5230\u4e86\u6b63\u786e\u7684\u65b9\u5411\u5e76\u524d\u8fdb\uff0c\u6536\u655b\u901f\u5ea6\u4e5f\u76f8\u5f53\u5feb\uff0c\u800c\u5176\u5b83\u65b9\u6cd5\u8981\u4e48\u5f88\u6162\uff0c\u8981\u4e48\u8d70\u4e86\u5f88\u591a\u5f2f\u8def\u624d\u627e\u5230\u3002  \u7531\u56fe\u53ef\u77e5\u81ea\u9002\u5e94\u5b66\u4e60\u7387\u65b9\u6cd5\u5373 Adagrad, Adadelta, RMSprop, Adam \u5728\u8fd9\u79cd\u60c5\u666f\u4e0b\u4f1a\u66f4\u5408\u9002\u800c\u4e14\u6536\u655b\u6027\u66f4\u597d\u3002", 
            "title": "2. \u6548\u679c\u6bd4\u8f83?"
        }, 
        {
            "location": "/\u5b66\u4e60/tensorflow/\u5982\u4f55\u9009\u62e9\u4f18\u5316\u5668 optimizer/#346", 
            "text": "\u5982\u679c\u6570\u636e\u662f\u7a00\u758f\u7684\uff0c\u5c31\u7528\u81ea\u9002\u7528\u65b9\u6cd5\uff0c\u5373 Adagrad, Adadelta, RMSprop, Adam\u3002  RMSprop, Adadelta, Adam \u5728\u5f88\u591a\u60c5\u51b5\u4e0b\u7684\u6548\u679c\u662f\u76f8\u4f3c\u7684\u3002  Adam \u5c31\u662f\u5728 RMSprop \u7684\u57fa\u7840\u4e0a\u52a0\u4e86 bias-correction \u548c momentum\uff0c  \u968f\u7740\u68af\u5ea6\u53d8\u7684\u7a00\u758f\uff0cAdam \u6bd4 RMSprop \u6548\u679c\u4f1a\u597d\u3002  \u6574\u4f53\u6765\u8bb2\uff0cAdam \u662f\u6700\u597d\u7684\u9009\u62e9\u3002  \u5f88\u591a\u8bba\u6587\u91cc\u90fd\u4f1a\u7528 SGD\uff0c\u6ca1\u6709 momentum \u7b49\u3002SGD \u867d\u7136\u80fd\u8fbe\u5230\u6781\u5c0f\u503c\uff0c\u4f46\u662f\u6bd4\u5176\u5b83\u7b97\u6cd5\u7528\u7684\u65f6\u95f4\u957f\uff0c\u800c\u4e14\u53ef\u80fd\u4f1a\u88ab\u56f0\u5728\u978d\u70b9\u3002  \u5982\u679c\u9700\u8981\u66f4\u5feb\u7684\u6536\u655b\uff0c\u6216\u8005\u662f\u8bad\u7ec3\u66f4\u6df1\u66f4\u590d\u6742\u7684\u795e\u7ecf\u7f51\u7edc\uff0c\u9700\u8981\u7528\u4e00\u79cd\u81ea\u9002\u5e94\u7684\u7b97\u6cd5\u3002  \u53c2\u8003\uff1a  http://sebastianruder.com/optimizing-gradient-descent/index.html #fn:24   http://www.redcedartech.com/pdfs/Select _Optimization_Method.pdf   https://stats.stackexchange.com/questions/55247/how-to-choose-the-right-optimization-algorithm", 
            "title": "3. \u5982\u4f55\u9009\u62e9\uff1f"
        }, 
        {
            "location": "/\u5b66\u4e60/\u6df1\u5ea6\u5b66\u4e60/10\u5206\u949f\u4e0a\u624bPandas/", 
            "text": "\u539f\u6587\u5730\u5740\n\n\n\u8fd9\u662f\u5173\u4e8epandas\u7684\u4e00\u4e2a\u7b80\u77ed\u7684\u4ecb\u7ecd\uff0c\u4e3b\u8981\u9762\u5411\u7684\u662f\u65b0\u624b\u7528\u6237\u3002\u4f60\u53ef\u4ee5\u5728\nCookbook\n\u67e5\u770b\u66f4\u591a\u590d\u6742\u7684\u4f7f\u7528\u65b9\u5f0f\u3002\n\n\n\u901a\u5e38\u60c5\u51b5\u4e0b\uff0c\u6211\u4eec\u6309\u7167\u4e0b\u9762\u8fd9\u79cd\u65b9\u5f0f\u5f15\u5165\uff1a\n\n\nIn [1]: import pandas as pd\n\n\nIn [2]: import numpy as np\n\n\nIn [3]: import matplotlib.pyplot as plt\n\n\n## \n\u5bf9\u8c61\u521b\u5efa\n\n\n\u89c1\n\u6570\u636e\u7ed3\u6784\u4ecb\u7ecd\u90e8\u5206\n\u3002\n\n\n\u901a\u8fc7\u4f20\u5165\u4e00\u4e2alist\u7684\u6570\u503c\u6765\u521b\u5efa\u4e00\u4e2a\nSeries\n\uff0cpandas\u4f1a\u521b\u5efa\u4e00\u4e2a\u9ed8\u8ba4\u7684\u6574\u6570\u7d22\u5f15:\n\n\n1\n\n\n2\n\n\n3\n\n\n4\n\n\n5\n\n\n6\n\n\n7\n\n\n8\n\n\n9\n\n\n10\n\n\n11\n\n\nIn [4]: s = pd.Series([1,3,5,np.nan,6,8])\n\n\nIn [5]: s\n\n\nOut[5]:\n\n\n0 1.0\n\n\n1 3.0\n\n\n2 5.0\n\n\n3 NaN\n\n\n4 6.0\n\n\n5 8.0\n\n\ndtype: float64\n\n\n\u901a\u8fc7\u4f20\u5165\u4e00\u4e2anumpy\u6570\u7ec4\u6765\u521b\u5efa\u4e00\u4e2a\u2019DataFrame\u2019\uff0c\u5e26\u6709\u4e00\u4e2adatetime\u7684\u7d22\u5f15\u4ee5\u53ca\u6807\u7b7e\u5217:\n\n\n1\n\n\n2\n\n\n3\n\n\n4\n\n\n5\n\n\n6\n\n\n7\n\n\n8\n\n\n9\n\n\n10\n\n\n11\n\n\n12\n\n\n13\n\n\n14\n\n\n15\n\n\n16\n\n\n17\n\n\n18\n\n\n19\n\n\nIn [6]: dates = pd.date\\_range('20130101', periods=6)\n\n\nIn [7]: dates\n\n\nOut[7]:\n\n\nDatetimeIndex(['2013-01-01', '2013-01-02', '2013-01-03', '2013-01-04',\n\n\n'2013-01-05', '2013-01-06'],\n\n\ndtype='datetime64[ns]', freq='D')\n\n\nIn [8]: df = pd.DataFrame(np.random.randn(6,4), index=dates, columns=list('ABCD'))\n\n\nIn [9]: df\n\n\nOut[9]:\n\n\nA B C D\n\n\n2013-01-01 0.469112 -0.282863 -1.509059 -1.135632\n\n\n2013-01-02 1.212112 -0.173215 0.119209 -1.044236\n\n\n2013-01-03 -0.861849 -2.104569 -0.494929 1.071804\n\n\n2013-01-04 0.721555 -0.706771 -1.039575 0.271860\n\n\n2013-01-05 -0.424972 0.567020 0.276232 -1.087401\n\n\n2013-01-06 -0.673690 0.113648 -1.478427 0.524988\n\n\n\u901a\u8fc7\u4f20\u5165\u4e00\u4e2a\u53ef\u4ee5\u8f6c\u6362\u4e3a\u7c7bseries\uff08series-like\uff09\u7684\u5b57\u5178\u5bf9\u8c61\u6765\u521b\u5efa\u4e00\u4e2a\nDataFrame\n:\n\n\n1\n\n\n2\n\n\n3\n\n\n4\n\n\n5\n\n\n6\n\n\n7\n\n\n8\n\n\n9\n\n\n10\n\n\n11\n\n\n12\n\n\n13\n\n\n14\n\n\n15\n\n\nIn [10]: df2 = pd.DataFrame({ 'A' : 1.,\n\n\n....: 'B' : pd.Timestamp('20130102'),\n\n\n....: 'C' : pd.Series(1,index=list(range(4)),dtype='float32'),\n\n\n....: 'D' : np.array([3] \\* 4,dtype='int32'),\n\n\n....: 'E' : pd.Categorical([\"test\",\"train\",\"test\",\"train\"]),\n\n\n....: 'F' : 'foo' })\n\n\n....:\n\n\nIn [11]: df2\n\n\nOut[11]:\n\n\nA B C D E F\n\n\n0 1.0 2013-01-02 1.0 3 test foo\n\n\n1 1.0 2013-01-02 1.0 3 train foo\n\n\n2 1.0 2013-01-02 1.0 3 test foo\n\n\n3 1.0 2013-01-02 1.0 3 train foo\n\n\n\u67e5\u770b\u4e0d\u540c\u5217\u7684\u6570\u636e\u7c7b\u578b\uff1a\n\n\n1\n\n\n2\n\n\n3\n\n\n4\n\n\n5\n\n\n6\n\n\n7\n\n\n8\n\n\n9\n\n\nIn [12]: df2.dtypes\n\n\nOut[12]:\n\n\nA float64\n\n\nB datetime64[ns]\n\n\nC float32\n\n\nD int32\n\n\nE category\n\n\nF object\n\n\ndtype: object\n\n\n\u5982\u679c\u4f60\u6b63\u5728\u4f7f\u7528IPython\uff0c\u4f7f\u7528Tab\u81ea\u52a8\u8865\u5168\u529f\u80fd\u4f1a\u81ea\u52a8\u8bc6\u522b\u6240\u6709\u7684\u5c5e\u6027\u4ee5\u53ca\u81ea\u5b9a\u4e49\u7684\u5217\uff0c\u4e0b\u56fe\u4e2d\u662f\u6240\u6709\u80fd\u591f\u88ab\u81ea\u52a8\u8bc6\u522b\u7684\u5c5e\u6027\u7684\u4e00\u4e2a\u5b50\u96c6\uff1a\n\n\n1\n\n\n2\n\n\n3\n\n\n4\n\n\n5\n\n\n6\n\n\n7\n\n\n8\n\n\n9\n\n\n10\n\n\n11\n\n\n12\n\n\n13\n\n\nIn [13]: df2.\\\n\n\ndf2.A df2.bool\n\n\ndf2.abs df2.boxplot\n\n\ndf2.add df2.C\n\n\ndf2.add\\_prefix df2.clip\n\n\ndf2.add\\_suffix df2.clip\\_lower\n\n\ndf2.align df2.clip\\_upper\n\n\ndf2.all df2.columns\n\n\ndf2.any df2.combine\n\n\ndf2.append df2.combine\\_first\n\n\ndf2.apply df2.compound\n\n\ndf2.applymap df2.consolidate\n\n\ndf2.D\n\n\n\u6b63\u5982\u4f60\u6240\u770b\u7684\uff0c\u8fd9\u91cc\u7684\u5217\nA\n,\nB\n,\nC\n\u548c\nD\n\u662f\u81ea\u52a8\u8865\u5168\u7684\uff0c\u4e3a\u4e86\u7b80\u6d01\uff0c\u5176\u4f59\u7684\u5c5e\u6027\u88ab\u622a\u65ad\u3002\n\n\n## \n\u67e5\u770b\u6570\u636e\n\n\n\u8be6\u60c5\u8bf7\u53c2\u9605:\nBasics section\n\n\n\u67e5\u770bframe\u4e2d\u5934\u90e8\u548c\u5c3e\u90e8\u7684\u884c\uff1a\n\n\n1\n\n\n2\n\n\n3\n\n\n4\n\n\n5\n\n\n6\n\n\n7\n\n\n8\n\n\n9\n\n\n10\n\n\n11\n\n\n12\n\n\n13\n\n\n14\n\n\n15\n\n\nIn [14]: df.head()\n\n\nOut[14]:\n\n\nA B C D\n\n\n2013-01-01 0.469112 -0.282863 -1.509059 -1.135632\n\n\n2013-01-02 1.212112 -0.173215 0.119209 -1.044236\n\n\n2013-01-03 -0.861849 -2.104569 -0.494929 1.071804\n\n\n2013-01-04 0.721555 -0.706771 -1.039575 0.271860\n\n\n2013-01-05 -0.424972 0.567020 0.276232 -1.087401\n\n\nIn [15]: df.tail(3)\n\n\nOut[15]:\n\n\nA B C D\n\n\n2013-01-04 0.721555 -0.706771 -1.039575 0.271860\n\n\n2013-01-05 -0.424972 0.567020 0.276232 -1.087401\n\n\n2013-01-06 -0.673690 0.113648 -1.478427 0.524988\n\n\n\u663e\u793a\u7d22\u5f15\uff0c\u5217\u548c\u5e95\u5c42numpy\u6570\u636e:\n\n\n1\n\n\n2\n\n\n3\n\n\n4\n\n\n5\n\n\n6\n\n\n7\n\n\n8\n\n\n9\n\n\n10\n\n\n11\n\n\n12\n\n\n13\n\n\n14\n\n\n15\n\n\n16\n\n\n17\n\n\nIn [16]: df.index\n\n\nOut[16]:\n\n\nDatetimeIndex(['2013-01-01', '2013-01-02', '2013-01-03', '2013-01-04',\n\n\n'2013-01-05', '2013-01-06'],\n\n\ndtype='datetime64[ns]', freq='D')\n\n\nIn [17]: df.columns\n\n\nOut[17]: Index(['A', 'B', 'C', 'D'], dtype='object')\n\n\nIn [18]: df.values\n\n\nOut[18]:\n\n\narray([[ 0.4691, -0.2829, -1.5091, -1.1356],\n\n\n[ 1.2121, -0.1732, 0.1192, -1.0442],\n\n\n[-0.8618, -2.1046, -0.4949, 1.0718],\n\n\n[ 0.7216, -0.7068, -1.0396, 0.2719],\n\n\n[-0.425 , 0.567 , 0.2762, -1.0874],\n\n\n[-0.6737, 0.1136, -1.4784, 0.525 ]])\n\n\ndescribe()\n\u51fd\u6570\u5bf9\u4e8e\u6570\u636e\u7684\u5feb\u901f\u7edf\u8ba1\u6c47\u603b\uff1a\n\n\n1\n\n\n2\n\n\n3\n\n\n4\n\n\n5\n\n\n6\n\n\n7\n\n\n8\n\n\n9\n\n\n10\n\n\n11\n\n\nIn [19]: df.describe()\n\n\nOut[19]:\n\n\nA B C D\n\n\ncount 6.000000 6.000000 6.000000 6.000000\n\n\nmean 0.073711 -0.431125 -0.687758 -0.233103\n\n\nstd 0.843157 0.922818 0.779887 0.973118\n\n\nmin -0.861849 -2.104569 -1.509059 -1.135632\n\n\n25% -0.611510 -0.600794 -1.368714 -1.076610\n\n\n50% 0.022070 -0.228039 -0.767252 -0.386188\n\n\n75% 0.658444 0.041933 -0.034326 0.461706\n\n\nmax 1.212112 0.567020 0.276232 1.071804\n\n\n\u5bf9\u6570\u636e\u7684\u8f6c\u7f6e\uff1a\n\n\n1\n\n\n2\n\n\n3\n\n\n4\n\n\n5\n\n\n6\n\n\n7\n\n\nIn [20]: df.T\n\n\nOut[20]:\n\n\n2013-01-01 2013-01-02 2013-01-03 2013-01-04 2013-01-05 2013-01-06\n\n\nA 0.469112 1.212112 -0.861849 0.721555 -0.424972 -0.673690\n\n\nB -0.282863 -0.173215 -2.104569 -0.706771 0.567020 0.113648\n\n\nC -1.509059 0.119209 -0.494929 -1.039575 0.276232 -1.478427\n\n\nD -1.135632 -1.044236 1.071804 0.271860 -1.087401 0.524988\n\n\n\u6309\u8f74\u8fdb\u884c\u6392\u5e8f\n\n\n1\n\n\n2\n\n\n3\n\n\n4\n\n\n5\n\n\n6\n\n\n7\n\n\n8\n\n\n9\n\n\nIn [21]: df.sort\\_index(axis=1, ascending=False)\n\n\nOut[21]:\n\n\nD C B A\n\n\n2013-01-01 -1.135632 -1.509059 -0.282863 0.469112\n\n\n2013-01-02 -1.044236 0.119209 -0.173215 1.212112\n\n\n2013-01-03 1.071804 -0.494929 -2.104569 -0.861849\n\n\n2013-01-04 0.271860 -1.039575 -0.706771 0.721555\n\n\n2013-01-05 -1.087401 0.276232 0.567020 -0.424972\n\n\n2013-01-06 0.524988 -1.478427 0.113648 -0.673690\n\n\n\u6309\u503c\u8fdb\u884c\u6392\u5e8f\n\n\n1\n\n\n2\n\n\n3\n\n\n4\n\n\n5\n\n\n6\n\n\n7\n\n\n8\n\n\n9\n\n\nIn [22]: df.sort\\_values(by='B')\n\n\nOut[22]:\n\n\nA B C D\n\n\n2013-01-03 -0.861849 -2.104569 -0.494929 1.071804\n\n\n2013-01-04 0.721555 -0.706771 -1.039575 0.271860\n\n\n2013-01-01 0.469112 -0.282863 -1.509059 -1.135632\n\n\n2013-01-02 1.212112 -0.173215 0.119209 -1.044236\n\n\n2013-01-06 -0.673690 0.113648 -1.478427 0.524988\n\n\n2013-01-05 -0.424972 0.567020 0.276232 -1.087401\n\n\n## \n\u9009\u62e9\n\n\n> **\u6ce8\u610f\uff1a**\u867d\u7136\u7528\u4e8e\u9009\u62e9\u548c\u8bbe\u7f6e\u7684\u6807\u51c6\u7684Python/Numpy\u8868\u8fbe\u5f0f\u975e\u5e38\u76f4\u89c2\uff0c\u53ef\u7528\u4e8e\u4ea4\u4e92\u5f0f\u5de5\u4f5c\uff0c\u4f46\u5bf9\u4e8e\u751f\u4ea7\u4ee3\u7801\uff0c\u6211\u4eec\u63a8\u8350\u4f18\u5316\u7684pandas\u6570\u636e\u8bbf\u95ee\u65b9\u6cd5\n.at\n\uff0c\n.iat\n\uff0c\n.loc\n\uff0c\n.iloc\n\u548c\n.ix\n\u3002\n\n\n\u8be6\u60c5\u8bf7\u53c2\u9605\nIndexing and Selecing Data\n\u548c \nMultiIndex / Advanced Indexing\n\u3002\n\n\n### \n\u83b7\u53d6\n\n\n\u9009\u62e9\u4e00\u4e2a\u5355\u72ec\u7684\u5217\uff0c\u8fd9\u5c06\u4f1a\u8fd4\u56de\u4e00\u4e2a\nSeries\n\uff0c\u7b49\u540c\u4e8e\ndf.A\n\uff1a\n\n\n1\n\n\n2\n\n\n3\n\n\n4\n\n\n5\n\n\n6\n\n\n7\n\n\n8\n\n\n9\n\n\nIn [23]: df['A']\n\n\nOut[23]:\n\n\n2013-01-01 0.469112\n\n\n2013-01-02 1.212112\n\n\n2013-01-03 -0.861849\n\n\n2013-01-04 0.721555\n\n\n2013-01-05 -0.424972\n\n\n2013-01-06 -0.673690\n\n\nFreq: D, Name: A, dtype: float64\n\n\n\u901a\u8fc7\n[]\n\u8fdb\u884c\u9009\u62e9\uff0c\u8fd9\u5c06\u4f1a\u5bf9\u884c\u8fdb\u884c\u5207\u7247:\n\n\n1\n\n\n2\n\n\n3\n\n\n4\n\n\n5\n\n\n6\n\n\n7\n\n\n8\n\n\n9\n\n\n10\n\n\n11\n\n\n12\n\n\n13\n\n\nIn [24]: df[0:3]\n\n\nOut[24]:\n\n\nA B C D\n\n\n2013-01-01 0.469112 -0.282863 -1.509059 -1.135632\n\n\n2013-01-02 1.212112 -0.173215 0.119209 -1.044236\n\n\n2013-01-03 -0.861849 -2.104569 -0.494929 1.071804\n\n\nIn [25]: df['20130102':'20130104']\n\n\nOut[25]:\n\n\nA B C D\n\n\n2013-01-02 1.212112 -0.173215 0.119209 -1.044236\n\n\n2013-01-03 -0.861849 -2.104569 -0.494929 1.071804\n\n\n2013-01-04 0.721555 -0.706771 -1.039575 0.271860\n\n\n### \n\u901a\u8fc7\u6807\u7b7e\u9009\u62e9\n\n\n\u8be6\u60c5\u8bf7\u53c2\u52a0\nSelection by Label\n\n\n\u4f7f\u7528\u6807\u7b7e\u83b7\u53d6\u6a2a\u622a\u9762\n\n\n1\n\n\n2\n\n\n3\n\n\n4\n\n\n5\n\n\n6\n\n\n7\n\n\nIn [26]: df.loc[dates[0]]\n\n\nOut[26]:\n\n\nA 0.469112\n\n\nB -0.282863\n\n\nC -1.509059\n\n\nD -1.135632\n\n\nName: 2013-01-01 00:00:00, dtype: float64\n\n\n\u901a\u8fc7\u6807\u7b7e\u9009\u62e9\u591a\u8f74\n\n\n1\n\n\n2\n\n\n3\n\n\n4\n\n\n5\n\n\n6\n\n\n7\n\n\n8\n\n\n9\n\n\nIn [27]: df.loc[:,['A','B']]\n\n\nOut[27]:\n\n\nA B\n\n\n2013-01-01 0.469112 -0.282863\n\n\n2013-01-02 1.212112 -0.173215\n\n\n2013-01-03 -0.861849 -2.104569\n\n\n2013-01-04 0.721555 -0.706771\n\n\n2013-01-05 -0.424972 0.567020\n\n\n2013-01-06 -0.673690 0.113648\n\n\n\u663e\u793a\u5305\u62ec\u4e24\u4e2a\u7aef\u70b9\u7684\u6807\u7b7e\u5207\u7247\uff1a\n\n\n1\n\n\n2\n\n\n3\n\n\n4\n\n\n5\n\n\n6\n\n\nIn [28]: df.loc['20130102':'20130104',['A','B']]\n\n\nOut[28]:\n\n\nA B\n\n\n2013-01-02 1.212112 -0.173215\n\n\n2013-01-03 -0.861849 -2.104569\n\n\n2013-01-04 0.721555 -0.706771\n\n\n\u51cf\u5c11\u8fd4\u56de\u7684\u5bf9\u8c61\u7684\u5c3a\u5bf8:\n\n\n1\n\n\n2\n\n\n3\n\n\n4\n\n\n5\n\n\nIn [29]: df.loc['20130102',['A','B']]\n\n\nOut[29]:\n\n\nA 1.212112\n\n\nB -0.173215\n\n\nName: 2013-01-02 00:00:00, dtype: float64\n\n\n\u83b7\u5f97\u6807\u91cf\u503c\n\n\n1\n\n\n2\n\n\nIn [30]: df.loc[dates[0],'A']\n\n\nOut[30]: 0.46911229990718628\n\n\n\u5feb\u901f\u8bbf\u95ee\u4e00\u4e2a\u6807\u91cf\uff08\u4e0e\u4e0a\u4e00\u4e2a\u65b9\u6cd5\u7b49\u4ef7\uff09\n\n\n1\n\n\n2\n\n\nIn [31]: \ndf.at\n[dates[0],'A']\n\n\nOut[31]: 0.46911229990718628\n\n\n### \n\u6309\u4f4d\u7f6e\u9009\u62e9\n\n\n\u8be6\u60c5\u8bf7\u53c2\u9605\nSelection by Position\n\n\n\u901a\u8fc7\u4f20\u5165\u7684\u6574\u6570\u4f4d\u7f6e\u6765\u9009\u62e9\uff1a\n\n\n1\n\n\n2\n\n\n3\n\n\n4\n\n\n5\n\n\n6\n\n\n7\n\n\nIn [32]: df.iloc[3]\n\n\nOut[32]:\n\n\nA 0.721555\n\n\nB -0.706771\n\n\nC -1.039575\n\n\nD 0.271860\n\n\nName: 2013-01-04 00:00:00, dtype: float64\n\n\n\u53ef\u4ee5\u505a\u7c7b\u4f3cnumpy/python\u7684\u6574\u6570\u5207\u7247\u64cd\u4f5c\n\n\n1\n\n\n2\n\n\n3\n\n\n4\n\n\n5\n\n\nIn [33]: df.iloc[3:5,0:2]\n\n\nOut[33]:\n\n\nA B\n\n\n2013-01-04 0.721555 -0.706771\n\n\n2013-01-05 -0.424972 0.567020\n\n\n\u53ef\u4ee5\u505a\u7c7b\u4f3c\u4e8enumpy/python\u98ce\u683c\u7684\u5217\u51fa\u6307\u5b9a\u7d22\u5f15\u4f4d\u7f6e\u7684\u884c\u5217\u5217\u8868\u7684\u64cd\u4f5c\n\n\n1\n\n\n2\n\n\n3\n\n\n4\n\n\n5\n\n\n6\n\n\nIn [34]: df.iloc[[1,2,4],[0,2]]\n\n\nOut[34]:\n\n\nA C\n\n\n2013-01-02 1.212112 0.119209\n\n\n2013-01-03 -0.861849 -0.494929\n\n\n2013-01-05 -0.424972 0.276232\n\n\n\u9009\u62e9\u5177\u4f53\u7684\u884c\n\n\n1\n\n\n2\n\n\n3\n\n\n4\n\n\n5\n\n\nIn [35]: df.iloc[1:3,:]\n\n\nOut[35]:\n\n\nA B C D\n\n\n2013-01-02 1.212112 -0.173215 0.119209 -1.044236\n\n\n2013-01-03 -0.861849 -2.104569 -0.494929 1.071804\n\n\n\u9009\u62e9\u5177\u4f53\u7684\u5217\n\n\n1\n\n\n2\n\n\n3\n\n\n4\n\n\n5\n\n\n6\n\n\n7\n\n\n8\n\n\n9\n\n\nIn [36]: df.iloc[:,1:3]\n\n\nOut[36]:\n\n\nB C\n\n\n2013-01-01 -0.282863 -1.509059\n\n\n2013-01-02 -0.173215 0.119209\n\n\n2013-01-03 -2.104569 -0.494929\n\n\n2013-01-04 -0.706771 -1.039575\n\n\n2013-01-05 0.567020 0.276232\n\n\n2013-01-06 0.113648 -1.478427\n\n\n\u660e\u786e\u5730\u83b7\u53d6\u4e00\u4e2a\u503c\n\n\n1\n\n\n2\n\n\nIn [37]: df.iloc[1,1]\n\n\nOut[37]: -0.17321464905330858\n\n\n\u5feb\u901f\u8bbf\u95ee\u4e00\u4e2a\u6807\u91cf\uff08\u7b49\u540c\u4e8e\u4e0a\u9762\u7684\u65b9\u6cd5\uff09\n\n\n1\n\n\n2\n\n\nIn [38]: df.iat[1,1]\n\n\nOut[38]: -0.17321464905330858\n\n\n### \n\u5e03\u5c14\u7d22\u5f15\u64cd\u4f5c\n\n\n\u4f7f\u7528\u5355\u4e00\u5217\u7684\u503c\u6765\u9009\u53d6\u6570\u636e\n\n\n1\n\n\n2\n\n\n3\n\n\n4\n\n\n5\n\n\n6\n\n\nIn [39]: df[df.A \\> 0]\n\n\nOut[39]:\n\n\nA B C D\n\n\n2013-01-01 0.469112 -0.282863 -1.509059 -1.135632\n\n\n2013-01-02 1.212112 -0.173215 0.119209 -1.044236\n\n\n2013-01-04 0.721555 -0.706771 -1.039575 0.271860\n\n\n\u4eceDataFrame\u9009\u53d6\u7b26\u5408\u5e03\u5c14\u5224\u65ad\u6761\u4ef6\u7684\u6570\u636e\n\n\n1\n\n\n2\n\n\n3\n\n\n4\n\n\n5\n\n\n6\n\n\n7\n\n\n8\n\n\n9\n\n\nIn [40]: df[df \\> 0]\n\n\nOut[40]:\n\n\nA B C D\n\n\n2013-01-01 0.469112 NaN NaN NaN\n\n\n2013-01-02 1.212112 NaN 0.119209 NaN\n\n\n2013-01-03 NaN NaN NaN 1.071804\n\n\n2013-01-04 0.721555 NaN NaN 0.271860\n\n\n2013-01-05 NaN 0.567020 0.276232 NaN\n\n\n2013-01-06 NaN 0.113648 NaN 0.524988\n\n\n\u4f7f\u7528\nisin()\n\u65b9\u6cd5\u6765\u8fc7\u6ee4\uff1a\n\n\n1\n\n\n2\n\n\n3\n\n\n4\n\n\n5\n\n\n6\n\n\n7\n\n\n8\n\n\n9\n\n\n10\n\n\n11\n\n\n12\n\n\n13\n\n\n14\n\n\n15\n\n\n16\n\n\n17\n\n\n18\n\n\n19\n\n\nIn [41]: df2 = df.copy()\n\n\nIn [42]: df2['E'] = ['one', 'one','two','three','four','three']\n\n\nIn [43]: df2\n\n\nOut[43]:\n\n\nA B C D E\n\n\n2013-01-01 0.469112 -0.282863 -1.509059 -1.135632 one\n\n\n2013-01-02 1.212112 -0.173215 0.119209 -1.044236 one\n\n\n2013-01-03 -0.861849 -2.104569 -0.494929 1.071804 two\n\n\n2013-01-04 0.721555 -0.706771 -1.039575 0.271860 three\n\n\n2013-01-05 -0.424972 0.567020 0.276232 -1.087401 four\n\n\n2013-01-06 -0.673690 0.113648 -1.478427 0.524988 three\n\n\nIn [44]: df2[df2['E'].isin(['two','four'])]\n\n\nOut[44]:\n\n\nA B C D E\n\n\n2013-01-03 -0.861849 -2.104569 -0.494929 1.071804 two\n\n\n2013-01-05 -0.424972 0.567020 0.276232 -1.087401 four\n\n\n### \n\u8bbe\u7f6e\u6570\u636e\n\n\n\u8bbe\u7f6e\u65b0\u5217\uff0c\u81ea\u52a8\u6309\u7d22\u5f15\u6392\u5217\u6570\u636e\n\n\n1\n\n\n2\n\n\n3\n\n\n4\n\n\n5\n\n\n6\n\n\n7\n\n\n8\n\n\n9\n\n\n10\n\n\n11\n\n\n12\n\n\n13\n\n\nIn [45]: s1 = pd.Series([1,2,3,4,5,6], index=pd.date\\_range('20130102', periods=6))\n\n\nIn [46]: s1\n\n\nOut[46]:\n\n\n2013-01-02 1\n\n\n2013-01-03 2\n\n\n2013-01-04 3\n\n\n2013-01-05 4\n\n\n2013-01-06 5\n\n\n2013-01-07 6\n\n\nFreq: D, dtype: int64\n\n\nIn [47]: df['F'] = s1\n\n\n\u901a\u8fc7\u6807\u7b7e\u6765\u8bbe\u5b9a\u6570\u636e\n\n\n1\n\n\nIn [48]: \ndf.at\n[dates[0],'A'] = 0\n\n\n\u901a\u8fc7\u4f4d\u7f6e\u7d22\u5f15\u6765\u8bbe\u5b9a\u6570\u636e\n\n\n1\n\n\nIn [49]: df.iat[0,1] = 0\n\n\n\u901a\u8fc7\u5206\u914d\u4e00\u4e2anumpy\u6570\u7ec4\u6765\u8bbe\u5b9a\u6570\u636e\n\n\n1\n\n\nIn [50]: df.loc[:,'D'] = np.array([5] \\* len(df))\n\n\n\u4e4b\u524d\u64cd\u4f5c\u7684\u7ed3\u679c\n\n\n1\n\n\n2\n\n\n3\n\n\n4\n\n\n5\n\n\n6\n\n\n7\n\n\n8\n\n\n9\n\n\nIn [51]: df\n\n\nOut[51]:\n\n\nA B C D F\n\n\n2013-01-01 0.000000 0.000000 -1.509059 5 NaN\n\n\n2013-01-02 1.212112 -0.173215 0.119209 5 1.0\n\n\n2013-01-03 -0.861849 -2.104569 -0.494929 5 2.0\n\n\n2013-01-04 0.721555 -0.706771 -1.039575 5 3.0\n\n\n2013-01-05 -0.424972 0.567020 0.276232 5 4.0\n\n\n2013-01-06 -0.673690 0.113648 -1.478427 5 5.0\n\n\n\u5e26\u6709\nwhere\n\u64cd\u4f5c\u7684\u8bbe\u503c\n\n\n1\n\n\n2\n\n\n3\n\n\n4\n\n\n5\n\n\n6\n\n\n7\n\n\n8\n\n\n9\n\n\n10\n\n\n11\n\n\n12\n\n\n13\n\n\nIn [52]: df2 = df.copy()\n\n\nIn [53]: df2[df2 \\> 0] = -df2\n\n\nIn [54]: df2\n\n\nOut[54]:\n\n\nA B C D F\n\n\n2013-01-01 0.000000 0.000000 -1.509059 -5 NaN\n\n\n2013-01-02 -1.212112 -0.173215 -0.119209 -5 -1.0\n\n\n2013-01-03 -0.861849 -2.104569 -0.494929 -5 -2.0\n\n\n2013-01-04 -0.721555 -0.706771 -1.039575 -5 -3.0\n\n\n2013-01-05 -0.424972 -0.567020 -0.276232 -5 -4.0\n\n\n2013-01-06 -0.673690 -0.113648 -1.478427 -5 -5.0\n\n\n## \n\u7f3a\u5931\u503c\u5904\u7406\n\n\npandas\u4e3b\u8981\u4f7f\u7528\nnp.nan\n\u6765\u4ee3\u8868\u7f3a\u5931\u6570\u636e\u3002\u8fd9\u4e9b\u503c\u5c06\u9ed8\u8ba4\u4e0d\u4f1a\u5305\u542b\u5728\u8ba1\u7b97\u4e2d\uff0c\u8be6\u60c5\u8bf7\u53c2\u9605\nMissing Data section\n\n\nReindexing\u5141\u8bb8\u60a8\u66f4\u6539/\u6dfb\u52a0/\u5220\u9664\u6307\u5b9a\u8f74\u4e0a\u7684\u7d22\u5f15\u3002\u8fd9\u5c06\u8fd4\u56de\u6570\u636e\u7684\u526f\u672c\u3002\n\n\n1\n\n\n2\n\n\n3\n\n\n4\n\n\n5\n\n\n6\n\n\n7\n\n\n8\n\n\n9\n\n\n10\n\n\n11\n\n\nIn [55]: df1 = df.reindex(index=dates[0:4], columns=list(df.columns) + ['E'])\n\n\nIn [56]: df1.loc[dates[0]:dates[1],'E'] = 1\n\n\nIn [57]: df1\n\n\nOut[57]:\n\n\nA B C D F E\n\n\n2013-01-01 0.000000 0.000000 -1.509059 5 NaN 1.0\n\n\n2013-01-02 1.212112 -0.173215 0.119209 5 1.0 1.0\n\n\n2013-01-03 -0.861849 -2.104569 -0.494929 5 2.0 NaN\n\n\n2013-01-04 0.721555 -0.706771 -1.039575 5 3.0 NaN\n\n\n\u5220\u9664\u6240\u6709\u5177\u6709\u7f3a\u5931\u503c\u7684\u6570\u636e\n\n\n1\n\n\n2\n\n\n3\n\n\n4\n\n\nIn [58]: df1.dropna(how='any')\n\n\nOut[58]:\n\n\nA B C D F E\n\n\n2013-01-02 1.212112 -0.173215 0.119209 5 1.0 1.0\n\n\n\u586b\u5145\u7f3a\u5931\u6570\u636e\n\n\n1\n\n\n2\n\n\n3\n\n\n4\n\n\n5\n\n\n6\n\n\n7\n\n\nIn [59]: df1.fillna(value=5)\n\n\nOut[59]:\n\n\nA B C D F E\n\n\n2013-01-01 0.000000 0.000000 -1.509059 5 5.0 1.0\n\n\n2013-01-02 1.212112 -0.173215 0.119209 5 1.0 1.0\n\n\n2013-01-03 -0.861849 -2.104569 -0.494929 5 2.0 5.0\n\n\n2013-01-04 0.721555 -0.706771 -1.039575 5 3.0 5.0\n\n\n\u83b7\u53d6\u503c\u4e3anan\u7684\u5e03\u5c14\u503c\u63a9\u7801\n\n\n1\n\n\n2\n\n\n3\n\n\n4\n\n\n5\n\n\n6\n\n\n7\n\n\nIn [60]: pd.isna(df1)\n\n\nOut[60]:\n\n\nA B C D F E\n\n\n2013-01-01 False False False False True False\n\n\n2013-01-02 False False False False False False\n\n\n2013-01-03 False False False False False True\n\n\n2013-01-04 False False False False False True\n\n\n## \n\u76f8\u5173\u64cd\u4f5c\n\n\n\u8be6\u60c5\u8bf7\u53c2\u9605\nBasic section on Binary Ops\n\n\n### \n\u7edf\u8ba1\n\n\n\u4e00\u822c\u64cd\u4f5c\u4e0d\u5305\u62ec\u4e22\u5931\u7684\u6570\u636e\u3002\n\n\n\u6267\u884c\u63cf\u8ff0\u6027\u7edf\u8ba1\u64cd\u4f5c(\u6cbf\u6570\u503c\u65b9\u5411\u6c42\u5747\u503c)\n\n\n1\n\n\n2\n\n\n3\n\n\n4\n\n\n5\n\n\n6\n\n\n7\n\n\n8\n\n\nIn [61]: df.mean()\n\n\nOut[61]:\n\n\nA -0.004474\n\n\nB -0.383981\n\n\nC -0.687758\n\n\nD 5.000000\n\n\nF 3.000000\n\n\ndtype: float64\n\n\n\u5728\u53e6\u4e00\u4e2a\u8f74\u4e0a\u505a\u76f8\u540c\u7684\u64cd\u4f5c(\u6cbf\u6c34\u5e73\u65b9\u5411\u6c42\u5747\u503c)\n\n\n1\n\n\n2\n\n\n3\n\n\n4\n\n\n5\n\n\n6\n\n\n7\n\n\n8\n\n\n9\n\n\nIn [62]: df.mean(1)\n\n\nOut[62]:\n\n\n2013-01-01 0.872735\n\n\n2013-01-02 1.431621\n\n\n2013-01-03 0.707731\n\n\n2013-01-04 1.395042\n\n\n2013-01-05 1.883656\n\n\n2013-01-06 1.592306\n\n\nFreq: D, dtype: float64\n\n\n\u4f7f\u7528\u5177\u6709\u4e0d\u540c\u7ef4\u5ea6\u4e14\u9700\u8981\u5bf9\u9f50\u7684\u5bf9\u8c61\u8fdb\u884c\u64cd\u4f5c\u3002\u53e6\u5916\uff0cpandas\u4f1a\u6cbf\u6307\u5b9a\u7684\u5c3a\u5bf8\u81ea\u52a8\u5e7f\u64ad\u3002\n\n\n> \u6ce8\u610f\uff1a1-np.nan \u8f93\u51fa\u7ed3\u679c\u4e3aNaN\n\n\n1\n\n\n2\n\n\n3\n\n\n4\n\n\n5\n\n\n6\n\n\n7\n\n\n8\n\n\n9\n\n\n10\n\n\n11\n\n\n12\n\n\n13\n\n\n14\n\n\n15\n\n\n16\n\n\n17\n\n\n18\n\n\n19\n\n\n20\n\n\n21\n\n\nIn [63]: s = pd.Series([1,3,5,np.nan,6,8], index=dates).shift(2)\n\n\nIn [64]: s\n\n\nOut[64]:\n\n\n2013-01-01 NaN\n\n\n2013-01-02 NaN\n\n\n2013-01-03 1.0\n\n\n2013-01-04 3.0\n\n\n2013-01-05 5.0\n\n\n2013-01-06 NaN\n\n\nFreq: D, dtype: float64\n\n\nIn [65]: df.sub(s, axis='index')\n\n\nOut[65]:\n\n\nA B C D F\n\n\n2013-01-01 NaN NaN NaN NaN NaN\n\n\n2013-01-02 NaN NaN NaN NaN NaN\n\n\n2013-01-03 -1.861849 -3.104569 -1.494929 4.0 1.0\n\n\n2013-01-04 -2.278445 -3.706771 -4.039575 2.0 0.0\n\n\n2013-01-05 -5.424972 -4.432980 -4.723768 0.0 -1.0\n\n\n2013-01-06 NaN NaN NaN NaN NaN\n\n\n### \n\u5e94\u7528\n\n\n\u5c06\u51fd\u6570\u5e94\u7528\u4e8e\u6570\u636e\n\n\n1\n\n\n2\n\n\n3\n\n\n4\n\n\n5\n\n\n6\n\n\n7\n\n\n8\n\n\n9\n\n\n10\n\n\n11\n\n\n12\n\n\n13\n\n\n14\n\n\n15\n\n\n16\n\n\n17\n\n\n18\n\n\n19\n\n\n\\# \u7d2f\u52a0\u64cd\u4f5c\n\n\nIn [66]: df.apply(np.cumsum)\n\n\nOut[66]:\n\n\nA B C D F\n\n\n2013-01-01 0.000000 0.000000 -1.509059 5 NaN\n\n\n2013-01-02 1.212112 -0.173215 -1.389850 10 1.0\n\n\n2013-01-03 0.350263 -2.277784 -1.884779 15 3.0\n\n\n2013-01-04 1.071818 -2.984555 -2.924354 20 6.0\n\n\n2013-01-05 0.646846 -2.417535 -2.648122 25 10.0\n\n\n2013-01-06 -0.026844 -2.303886 -4.126549 30 15.0\n\n\nIn [67]: df.apply(lambda x: x.max() - x.min())\n\n\nOut[67]:\n\n\nA 2.073961\n\n\nB 2.671590\n\n\nC 1.785291\n\n\nD 0.000000\n\n\nF 4.000000\n\n\ndtype: float64\n\n\n### \n\u76f4\u65b9\u56fe\n\n\n\u8be6\u60c5\u8bf7\u53c2\u9605\nHistogramming and Discretization\n\n\n1\n\n\n2\n\n\n3\n\n\n4\n\n\n5\n\n\n6\n\n\n7\n\n\n8\n\n\n9\n\n\n10\n\n\n11\n\n\n12\n\n\n13\n\n\n14\n\n\n15\n\n\n16\n\n\n17\n\n\n18\n\n\n19\n\n\n20\n\n\n21\n\n\n22\n\n\n23\n\n\nIn [68]: s = pd.Series(np.random.randint(0, 7, size=10))\n\n\nIn [69]: s\n\n\nOut[69]:\n\n\n0 4\n\n\n1 2\n\n\n2 1\n\n\n3 2\n\n\n4 6\n\n\n5 4\n\n\n6 4\n\n\n7 6\n\n\n8 4\n\n\n9 4\n\n\ndtype: int64\n\n\nIn [70]: s.value\\_counts()\n\n\nOut[70]:\n\n\n4 5\n\n\n6 2\n\n\n2 2\n\n\n1 1\n\n\ndtype: int64\n\n\n### \n\u5b57\u7b26\u4e32\u65b9\u6cd5\n\n\nSeries\u5bf9\u8c61\u5728\u5176str\u5c5e\u6027\u4e2d\u914d\u5907\u4e86\u4e00\u7ec4\u5b57\u7b26\u4e32\u5904\u7406\u65b9\u6cd5\uff0c\u53ef\u4ee5\u5f88\u5bb9\u6613\u7684\u5e94\u7528\u5230\u6570\u7ec4\u4e2d\u7684\u6bcf\u4e2a\u5143\u7d20\uff0c\u5982\u4e0b\u6bb5\u4ee3\u7801\u6240\u793a\u3002\u66f4\u591a\u8be6\u60c5\u8bf7\u53c2\u8003\uff1a\nVectorized String Methods\n\n\n1\n\n\n2\n\n\n3\n\n\n4\n\n\n5\n\n\n6\n\n\n7\n\n\n8\n\n\n9\n\n\n10\n\n\n11\n\n\n12\n\n\n13\n\n\n14\n\n\nIn [71]: s = pd.Series(['A', 'B', 'C', 'Aaba', 'Baca', np.nan, 'CABA', 'dog', 'cat'])\n\n\nIn [72]: s.str.lower()\n\n\nOut[72]:\n\n\n0 a\n\n\n1 b\n\n\n2 c\n\n\n3 aaba\n\n\n4 baca\n\n\n5 NaN\n\n\n6 caba\n\n\n7 dog\n\n\n8 cat\n\n\ndtype: object\n\n\n## \n\u5408\u5e76\n\n\n### \nConcat\n\n\nPandas\u63d0\u4f9b\u4e86\u5927\u91cf\u7684\u65b9\u6cd5\u80fd\u591f\u8f7b\u677e\u7684\u5bf9Series\uff0cDataFrame\u548cPanel\u5bf9\u8c61\u8fdb\u884c\u5404\u79cd\u7b26\u5408\u5404\u79cd\u903b\u8f91\u5173\u7cfb\u7684\u5408\u5e76\u64cd\u4f5c\u3002\n\n\n\u5177\u4f53\u8bf7\u53c2\u9605\uff1a\nMerging section\n\n\n\u901a\u8fc7\u4f7f\u7528\nconcat()\n\u6765\u5c06pandas\u5bf9\u8c61\u94fe\u63a5\u8d77\u6765\uff1a\n\n\n1\n\n\n2\n\n\n3\n\n\n4\n\n\n5\n\n\n6\n\n\n7\n\n\n8\n\n\n9\n\n\n10\n\n\n11\n\n\n12\n\n\n13\n\n\n14\n\n\n15\n\n\n16\n\n\n17\n\n\n18\n\n\n19\n\n\n20\n\n\n21\n\n\n22\n\n\n23\n\n\n24\n\n\n25\n\n\n26\n\n\n27\n\n\n28\n\n\n29\n\n\n30\n\n\n31\n\n\n32\n\n\nIn [73]: df = pd.DataFrame(np.random.randn(10, 4))\n\n\nIn [74]: df\n\n\nOut[74]:\n\n\n0 1 2 3\n\n\n0 -0.548702 1.467327 -1.015962 -0.483075\n\n\n1 1.637550 -1.217659 -0.291519 -1.745505\n\n\n2 -0.263952 0.991460 -0.919069 0.266046\n\n\n3 -0.709661 1.669052 1.037882 -1.705775\n\n\n4 -0.919854 -0.042379 1.247642 -0.009920\n\n\n5 0.290213 0.495767 0.362949 1.548106\n\n\n6 -1.131345 -0.089329 0.337863 -0.945867\n\n\n7 -0.932132 1.956030 0.017587 -0.016692\n\n\n8 -0.575247 0.254161 -1.143704 0.215897\n\n\n9 1.193555 -0.077118 -0.408530 -0.862495\n\n\n\\# break it into pieces\n\n\nIn [75]: pieces = [df[:3], df[3:7], df[7:]]\n\n\nIn [76]: pd.concat(pieces)\n\n\nOut[76]:\n\n\n0 1 2 3\n\n\n0 -0.548702 1.467327 -1.015962 -0.483075\n\n\n1 1.637550 -1.217659 -0.291519 -1.745505\n\n\n2 -0.263952 0.991460 -0.919069 0.266046\n\n\n3 -0.709661 1.669052 1.037882 -1.705775\n\n\n4 -0.919854 -0.042379 1.247642 -0.009920\n\n\n5 0.290213 0.495767 0.362949 1.548106\n\n\n6 -1.131345 -0.089329 0.337863 -0.945867\n\n\n7 -0.932132 1.956030 0.017587 -0.016692\n\n\n8 -0.575247 0.254161 -1.143704 0.215897\n\n\n9 1.193555 -0.077118 -0.408530 -0.862495\n\n\n### \nJoin\n\n\n\u7c7b\u4f3c\u4e8eSQL\u7c7b\u578b\u7684\u5408\u5e76\n\n\n\u5177\u4f53\u8bf7\u53c2\u9605\uff1a\nDatabase style joining\n\n\n1\n\n\n2\n\n\n3\n\n\n4\n\n\n5\n\n\n6\n\n\n7\n\n\n8\n\n\n9\n\n\n10\n\n\n11\n\n\n12\n\n\n13\n\n\n14\n\n\n15\n\n\n16\n\n\n17\n\n\n18\n\n\n19\n\n\n20\n\n\n21\n\n\n22\n\n\n23\n\n\nIn [77]: left = pd.DataFrame({'key': ['foo', 'foo'], 'lval': [1, 2]})\n\n\nIn [78]: right = pd.DataFrame({'key': ['foo', 'foo'], 'rval': [4, 5]})\n\n\nIn [79]: left\n\n\nOut[79]:\n\n\nkey lval\n\n\n0 foo 1\n\n\n1 foo 2\n\n\nIn [80]: right\n\n\nOut[80]:\n\n\nkey rval\n\n\n0 foo 4\n\n\n1 foo 5\n\n\nIn [81]: pd.merge(left, right, on='key')\n\n\nOut[81]:\n\n\nkey lval rval\n\n\n0 foo 1 4\n\n\n1 foo 1 5\n\n\n2 foo 2 4\n\n\n3 foo 2 5\n\n\n\u53e6\u4e00\u4e2a\u53ef\u4ee5\u7ed9\u51fa\u7684\u4f8b\u5b50\u662f\uff1a\n\n\n1\n\n\n2\n\n\n3\n\n\n4\n\n\n5\n\n\n6\n\n\n7\n\n\n8\n\n\n9\n\n\n10\n\n\n11\n\n\n12\n\n\n13\n\n\n14\n\n\n15\n\n\n16\n\n\n17\n\n\n18\n\n\n19\n\n\n20\n\n\n21\n\n\nIn [82]: left = pd.DataFrame({'key': ['foo', 'bar'], 'lval': [1, 2]})\n\n\nIn [83]: right = pd.DataFrame({'key': ['foo', 'bar'], 'rval': [4, 5]})\n\n\nIn [84]: left\n\n\nOut[84]:\n\n\nkey lval\n\n\n0 foo 1\n\n\n1 bar 2\n\n\nIn [85]: right\n\n\nOut[85]:\n\n\nkey rval\n\n\n0 foo 4\n\n\n1 bar 5\n\n\nIn [86]: pd.merge(left, right, on='key')\n\n\nOut[86]:\n\n\nkey lval rval\n\n\n0 foo 1 4\n\n\n1 bar 2 5\n\n\n### \nAppend\n\n\n\u5c06\u4e00\u884c\u8fde\u63a5\u5230\u4e00\u4e2aDataFrame\u4e0a\u3002\n\n\n\u8be6\u60c5\u8bf7\u53c2\u9605\nAppending\n\n\n1\n\n\n2\n\n\n3\n\n\n4\n\n\n5\n\n\n6\n\n\n7\n\n\n8\n\n\n9\n\n\n10\n\n\n11\n\n\n12\n\n\n13\n\n\n14\n\n\n15\n\n\n16\n\n\n17\n\n\n18\n\n\n19\n\n\n20\n\n\n21\n\n\n22\n\n\n23\n\n\n24\n\n\n25\n\n\n26\n\n\n27\n\n\n28\n\n\nIn [87]: df = pd.DataFrame(np.random.randn(8, 4), columns=['A','B','C','D'])\n\n\nIn [88]: df\n\n\nOut[88]:\n\n\nA B C D\n\n\n0 1.346061 1.511763 1.627081 -0.990582\n\n\n1 -0.441652 1.211526 0.268520 0.024580\n\n\n2 -1.577585 0.396823 -0.105381 -0.532532\n\n\n3 1.453749 1.208843 -0.080952 -0.264610\n\n\n4 -0.727965 -0.589346 0.339969 -0.693205\n\n\n5 -0.339355 0.593616 0.884345 1.591431\n\n\n6 0.141809 0.220390 0.435589 0.192451\n\n\n7 -0.096701 0.803351 1.715071 -0.708758\n\n\nIn [89]: s = df.iloc[3]\n\n\nIn [90]: df.append(s, ignore\\_index=True)\n\n\nOut[90]:\n\n\nA B C D\n\n\n0 1.346061 1.511763 1.627081 -0.990582\n\n\n1 -0.441652 1.211526 0.268520 0.024580\n\n\n2 -1.577585 0.396823 -0.105381 -0.532532\n\n\n3 1.453749 1.208843 -0.080952 -0.264610\n\n\n4 -0.727965 -0.589346 0.339969 -0.693205\n\n\n5 -0.339355 0.593616 0.884345 1.591431\n\n\n6 0.141809 0.220390 0.435589 0.192451\n\n\n7 -0.096701 0.803351 1.715071 -0.708758\n\n\n8 1.453749 1.208843 -0.080952 -0.264610\n\n\n## \n\u5206\u7ec4\uff08Grouping\uff09\n\n\n\u5bf9\u4e8e\u201dgroup by\u201d\u64cd\u4f5c\uff0c\u6211\u4eec\u901a\u5e38\u662f\u6307\u4ee5\u4e0b\u4e00\u4e2a\u6216\u591a\u4e2a\u64cd\u4f5c\u6b65\u9aa4\uff1a\n\n\n* **\uff08Splitting\uff09**\u6309\u7167\u4e00\u4e9b\u89c4\u5219\u5c06\u6570\u636e\u5206\u4e3a\u4e0d\u540c\u7684\u7ec4\uff1b\n\n\n* **\uff08Applying\uff09**\u5bf9\u4e8e\u6bcf\u7ec4\u6570\u636e\u5206\u522b\u6267\u884c\u4e00\u4e2a\u51fd\u6570\uff1b\n\n\n* **\uff08Combining\uff09**\u5c06\u7ed3\u679c\u7ec4\u5408\u5230\u4e00\u4e2a\u6570\u636e\u7ed3\u6784\u4e2d\uff1b\n\n\n\u8be6\u60c5\u8bf7\u53c2\u9605\nGrouping section\n\n\n1\n\n\n2\n\n\n3\n\n\n4\n\n\n5\n\n\n6\n\n\n7\n\n\n8\n\n\n9\n\n\n10\n\n\n11\n\n\n12\n\n\n13\n\n\n14\n\n\n15\n\n\n16\n\n\n17\n\n\n18\n\n\n19\n\n\nIn [91]: df = pd.DataFrame({'A' : ['foo', 'bar', 'foo', 'bar',\n\n\n....: 'foo', 'bar', 'foo', 'foo'],\n\n\n....: 'B' : ['one', 'one', 'two', 'three',\n\n\n....: 'two', 'two', 'one', 'three'],\n\n\n....: 'C' : np.random.randn(8),\n\n\n....: 'D' : np.random.randn(8)})\n\n\n....:\n\n\nIn [92]: df\n\n\nOut[92]:\n\n\nA B C D\n\n\n0 foo one -1.202872 -0.055224\n\n\n1 bar one -1.814470 2.395985\n\n\n2 foo two 1.018601 1.552825\n\n\n3 bar three -0.595447 0.166599\n\n\n4 foo two 1.395433 0.047609\n\n\n5 bar two -0.392670 -0.136473\n\n\n6 foo one 0.007207 -0.561757\n\n\n7 foo three 1.928123 -1.623033\n\n\n\u5206\u7ec4\uff0c\u7136\u540e\u5c06\u51fd\u6570\u603b\u548c\nsum\n\u5e94\u7528\u4e8e\u7ed3\u679c\u7ec4\u3002\n\n\n1\n\n\n2\n\n\n3\n\n\n4\n\n\n5\n\n\n6\n\n\nIn [93]: df.groupby('A').sum()\n\n\nOut[93]:\n\n\nC D\n\n\nA\n\n\nbar -2.802588 2.42611\n\n\nfoo 3.146492 -0.63958\n\n\n\u6309\u591a\u5217\u5206\u7ec4\u4f1a\u5f62\u6210\u4e00\u4e2a\u5206\u5c42\u7d22\u5f15\uff0c\u7136\u540e\u6211\u4eec\u5e94\u7528\u8fd9\u4e2a\u51fd\u6570\u3002\n\n\n1\n\n\n2\n\n\n3\n\n\n4\n\n\n5\n\n\n6\n\n\n7\n\n\n8\n\n\n9\n\n\n10\n\n\nIn [94]: df.groupby(['A','B']).sum()\n\n\nOut[94]:\n\n\nC D\n\n\nA B\n\n\nbar one -1.814470 2.395985\n\n\nthree -0.595447 0.166599\n\n\ntwo -0.392670 -0.136473\n\n\nfoo one -1.195665 -0.616981\n\n\nthree 1.928123 -1.623033\n\n\ntwo 2.414034 1.600434\n\n\n## \nReshaping\n\n\n\u8be6\u60c5\u8bf7\u53c2\u9605\nHierarchical Indexing\n\u548c\nReshaping\n\u3002\n\n\n### \nStack\n\n\n1\n\n\n2\n\n\n3\n\n\n4\n\n\n5\n\n\n6\n\n\n7\n\n\n8\n\n\n9\n\n\n10\n\n\n11\n\n\n12\n\n\n13\n\n\n14\n\n\n15\n\n\n16\n\n\n17\n\n\n18\n\n\n19\n\n\n20\n\n\nIn [95]: tuples = list(zip(\\*[['bar', 'bar', 'baz', 'baz',\n\n\n....: 'foo', 'foo', 'qux', 'qux'],\n\n\n....: ['one', 'two', 'one', 'two',\n\n\n....: 'one', 'two', 'one', 'two']]))\n\n\n....:\n\n\nIn [96]: index = pd.MultiIndex.from\\_tuples(tuples, names=['first', 'second'])\n\n\nIn [97]: df = pd.DataFrame(np.random.randn(8, 2), index=index, columns=['A', 'B'])\n\n\nIn [98]: df2 = df[:4]\n\n\nIn [99]: df2\n\n\nOut[99]:\n\n\nA B\n\n\nfirst second\n\n\nbar one 0.029399 -0.542108\n\n\ntwo 0.282696 -0.087302\n\n\nbaz one -1.575170 1.771208\n\n\ntwo 0.816482 1.100230\n\n\nstack()\n\u65b9\u6cd5\u201c\u538b\u7f29\u201d\u4e86DataFrame\u5217\u4e2d\u7684\u7ea7\u522b\u3002\n\n\n1\n\n\n2\n\n\n3\n\n\n4\n\n\n5\n\n\n6\n\n\n7\n\n\n8\n\n\n9\n\n\n10\n\n\n11\n\n\n12\n\n\n13\n\n\n14\n\n\nIn [100]: stacked = df2.stack()\n\n\nIn [101]: stacked\n\n\nOut[101]:\n\n\nfirst second\n\n\nbar one A 0.029399\n\n\nB -0.542108\n\n\ntwo A 0.282696\n\n\nB -0.087302\n\n\nbaz one A -1.575170\n\n\nB 1.771208\n\n\ntwo A 0.816482\n\n\nB 1.100230\n\n\ndtype: float64\n\n\n\u5bf9\u4e8e\u201c\u5806\u53e0\u7684(stacked)\u201dDataFrame\u6216Series\uff08\u4ee5MultiIndex\u4e3a\u7d22\u5f15\uff09\uff0c\nstack()\n\u7684\u53cd\u5411\u64cd\u4f5c\u662f\nunstack()\n\uff0c\u9ed8\u8ba4\u60c5\u51b5\u4e0b\uff0c\u5b83\u5c06\u5378\u8f7d**\u6700\u540e\u4e00\u5c42**\uff1a\n\n\n1\n\n\n2\n\n\n3\n\n\n4\n\n\n5\n\n\n6\n\n\n7\n\n\n8\n\n\n9\n\n\n10\n\n\n11\n\n\n12\n\n\n13\n\n\n14\n\n\n15\n\n\n16\n\n\n17\n\n\n18\n\n\n19\n\n\n20\n\n\n21\n\n\n22\n\n\n23\n\n\n24\n\n\n25\n\n\n26\n\n\nIn [102]: stacked.unstack()\n\n\nOut[102]:\n\n\nA B\n\n\nfirst second\n\n\nbar one 0.029399 -0.542108\n\n\ntwo 0.282696 -0.087302\n\n\nbaz one -1.575170 1.771208\n\n\ntwo 0.816482 1.100230\n\n\nIn [103]: stacked.unstack(1)\n\n\nOut[103]:\n\n\nsecond one two\n\n\nfirst\n\n\nbar A 0.029399 0.282696\n\n\nB -0.542108 -0.087302\n\n\nbaz A -1.575170 0.816482\n\n\nB 1.771208 1.100230\n\n\nIn [104]: stacked.unstack(0)\n\n\nOut[104]:\n\n\nfirst bar baz\n\n\nsecond\n\n\none A 0.029399 -1.575170\n\n\nB -0.542108 1.771208\n\n\ntwo A 0.282696 0.816482\n\n\nB -0.087302 1.100230\n\n\n### \n\u6570\u636e\u900f\u89c6\u8868\n\n\n\u8be6\u60c5\u8bf7\u53c2\u9605\nPivot Tables\n\n\n1\n\n\n2\n\n\n3\n\n\n4\n\n\n5\n\n\n6\n\n\n7\n\n\n8\n\n\n9\n\n\n10\n\n\n11\n\n\n12\n\n\n13\n\n\n14\n\n\n15\n\n\n16\n\n\n17\n\n\n18\n\n\n19\n\n\n20\n\n\n21\n\n\n22\n\n\nIn [105]: df = pd.DataFrame({'A' : ['one', 'one', 'two', 'three'] \\* 3,\n\n\n.....: 'B' : ['A', 'B', 'C'] \\* 4,\n\n\n.....: 'C' : ['foo', 'foo', 'foo', 'bar', 'bar', 'bar'] \\* 2,\n\n\n.....: 'D' : np.random.randn(12),\n\n\n.....: 'E' : np.random.randn(12)})\n\n\n.....:\n\n\nIn [106]: df\n\n\nOut[106]:\n\n\nA B C D E\n\n\n0 one A foo 1.418757 -0.179666\n\n\n1 one B foo -1.879024 1.291836\n\n\n2 two C foo 0.536826 -0.009614\n\n\n3 three A bar 1.006160 0.392149\n\n\n4 one B bar -0.029716 0.264599\n\n\n5 one C bar -1.146178 -0.057409\n\n\n6 two A foo 0.100900 -1.425638\n\n\n7 three B foo -1.035018 1.024098\n\n\n8 one C foo 0.314665 -0.106062\n\n\n9 one A bar -0.773723 1.824375\n\n\n10 two B bar -1.170653 0.595974\n\n\n11 three C bar 0.648740 1.167115\n\n\n\u6211\u4eec\u53ef\u4ee5\u5f88\u5bb9\u6613\u5730\u4ece\u8fd9\u4e9b\u6570\u636e\u751f\u6210\u6570\u636e\u900f\u89c6\u8868\uff1a\n\n\n1\n\n\n2\n\n\n3\n\n\n4\n\n\n5\n\n\n6\n\n\n7\n\n\n8\n\n\n9\n\n\n10\n\n\n11\n\n\n12\n\n\n13\n\n\nIn [107]: pd.pivot\\_table(df, values='D', index=['A', 'B'], columns=['C'])\n\n\nOut[107]:\n\n\nC bar foo\n\n\nA B\n\n\none A -0.773723 1.418757\n\n\nB -0.029716 -1.879024\n\n\nC -1.146178 0.314665\n\n\nthree A 1.006160 NaN\n\n\nB NaN -1.035018\n\n\nC 0.648740 NaN\n\n\ntwo A NaN 0.100900\n\n\nB -1.170653 NaN\n\n\nC NaN 0.536826\n\n\n## \n\u65f6\u95f4\u5e8f\u5217\n\n\nPandas\u5728\u5bf9\u9891\u7387\u8f6c\u6362\u8fdb\u884c\u91cd\u65b0\u91c7\u6837\u65f6\u62e5\u6709\u7b80\u5355\u3001\u5f3a\u5927\u4e14\u9ad8\u6548\u7684\u529f\u80fd\uff08\u5982\u5c06\u6309\u79d2\u91c7\u6837\u7684\u6570\u636e\u8f6c\u6362\u4e3a\u63095\u5206\u949f\u4e3a\u5355\u4f4d\u8fdb\u884c\u91c7\u6837\u7684\u6570\u636e\uff09\u3002\u8fd9\u79cd\u64cd\u4f5c\u5728\u91d1\u878d\u9886\u57df\u975e\u5e38\u5e38\u89c1\u3002\n\n\n\u8be6\u60c5\u8bf7\u53c2\u9605\nTime Series section\n\n\n1\n\n\n2\n\n\n3\n\n\n4\n\n\n5\n\n\n6\n\n\n7\n\n\n8\n\n\nIn [108]: rng = pd.date\\_range('1/1/2012', periods=100, freq='S')\n\n\nIn [109]: ts = pd.Series(np.random.randint(0, 500, len(rng)), index=rng)\n\n\nIn [110]: ts.resample('5Min').sum()\n\n\nOut[110]:\n\n\n2012-01-01 25083\n\n\nFreq: 5T, dtype: int64\n\n\n\u65f6\u533a\u8868\u793a\n\n\n1\n\n\n2\n\n\n3\n\n\n4\n\n\n5\n\n\n6\n\n\n7\n\n\n8\n\n\n9\n\n\n10\n\n\n11\n\n\n12\n\n\n13\n\n\n14\n\n\n15\n\n\n16\n\n\n17\n\n\n18\n\n\n19\n\n\n20\n\n\n21\n\n\n22\n\n\n23\n\n\nIn [111]: rng = pd.date\\_range('3/6/2012 00:00', periods=5, freq='D')\n\n\nIn [112]: ts = pd.Series(np.random.randn(len(rng)), rng)\n\n\nIn [113]: ts\n\n\nOut[113]:\n\n\n2012-03-06 0.464000\n\n\n2012-03-07 0.227371\n\n\n2012-03-08 -0.496922\n\n\n2012-03-09 0.306389\n\n\n2012-03-10 -2.290613\n\n\nFreq: D, dtype: float64\n\n\nIn [114]: ts\\_utc = \nts.tz\n\\_localize('UTC')\n\n\nIn [115]: ts\\_utc\n\n\nOut[115]:\n\n\n2012-03-06 00:00:00+00:00 0.464000\n\n\n2012-03-07 00:00:00+00:00 0.227371\n\n\n2012-03-08 00:00:00+00:00 -0.496922\n\n\n2012-03-09 00:00:00+00:00 0.306389\n\n\n2012-03-10 00:00:00+00:00 -2.290613\n\n\nFreq: D, dtype: float64\n\n\n\u8f6c\u6362\u6210\u5176\u4ed6\u65f6\u533a\n\n\n1\n\n\n2\n\n\n3\n\n\n4\n\n\n5\n\n\n6\n\n\n7\n\n\n8\n\n\nIn [116]: ts\\_utc.tz\\_convert('US/Eastern')\n\n\nOut[116]:\n\n\n2012-03-05 19:00:00-05:00 0.464000\n\n\n2012-03-06 19:00:00-05:00 0.227371\n\n\n2012-03-07 19:00:00-05:00 -0.496922\n\n\n2012-03-08 19:00:00-05:00 0.306389\n\n\n2012-03-09 19:00:00-05:00 -2.290613\n\n\nFreq: D, dtype: float64\n\n\n\u5728\u65f6\u95f4\u8de8\u5ea6\u8868\u793a\u4e4b\u95f4\u8fdb\u884c\u8f6c\u6362\n\n\n1\n\n\n2\n\n\n3\n\n\n4\n\n\n5\n\n\n6\n\n\n7\n\n\n8\n\n\n9\n\n\n10\n\n\n11\n\n\n12\n\n\n13\n\n\n14\n\n\n15\n\n\n16\n\n\n17\n\n\n18\n\n\n19\n\n\n20\n\n\n21\n\n\n22\n\n\n23\n\n\n24\n\n\n25\n\n\n26\n\n\n27\n\n\n28\n\n\n29\n\n\n30\n\n\n31\n\n\n32\n\n\nIn [117]: rng = pd.date\\_range('1/1/2012', periods=5, freq='M')\n\n\nIn [118]: ts = pd.Series(np.random.randn(len(rng)), index=rng)\n\n\nIn [119]: ts\n\n\nOut[119]:\n\n\n2012-01-31 -1.134623\n\n\n2012-02-29 -1.561819\n\n\n2012-03-31 -0.260838\n\n\n2012-04-30 0.281957\n\n\n2012-05-31 1.523962\n\n\nFreq: M, dtype: float64\n\n\nIn [120]: ps = \nts.to\n\\_period()\n\n\nIn [121]: ps\n\n\nOut[121]:\n\n\n2012-01 -1.134623\n\n\n2012-02 -1.561819\n\n\n2012-03 -0.260838\n\n\n2012-04 0.281957\n\n\n2012-05 1.523962\n\n\nFreq: M, dtype: float64\n\n\nIn [122]: \nps.to\n\\_timestamp()\n\n\nOut[122]:\n\n\n2012-01-01 -1.134623\n\n\n2012-02-01 -1.561819\n\n\n2012-03-01 -0.260838\n\n\n2012-04-01 0.281957\n\n\n2012-05-01 1.523962\n\n\nFreq: MS, dtype: float64\n\n\n\u5468\u671f\u548c\u65f6\u95f4\u6233\u4e4b\u95f4\u7684\u8f6c\u6362\u53ef\u4ee5\u4f7f\u7528\u4e00\u4e9b\u65b9\u4fbf\u7684\u7b97\u672f\u529f\u80fd\u3002\u5728\u4e0b\u9762\u7684\u4f8b\u5b50\u4e2d\uff0c\u6211\u4eec\u5c06\u5b63\u5ea6\u7ed3\u675f\u65f6\u95f4\u4ece11\u6708\u4efd\u8f6c\u6362\u4e3a\u5b63\u672b\u7ed3\u675f\u65f6\u7684\u4e0a\u53489\u70b9\uff1a\n\n\n1\n\n\n2\n\n\n3\n\n\n4\n\n\n5\n\n\n6\n\n\n7\n\n\n8\n\n\n9\n\n\n10\n\n\n11\n\n\n12\n\n\n13\n\n\n14\n\n\nIn [123]: prng = pd.period\\_range('1990Q1', '2000Q4', freq='Q-NOV')\n\n\nIn [124]: ts = pd.Series(np.random.randn(len(prng)), prng)\n\n\nIn [125]: ts.index = (prng.asfreq('M', 'e') + 1).asfreq('H', 's') + 9\n\n\nIn [126]: ts.head()\n\n\nOut[126]:\n\n\n1990-03-01 09:00 -0.902937\n\n\n1990-06-01 09:00 0.068159\n\n\n1990-09-01 09:00 -0.057873\n\n\n1990-12-01 09:00 -0.368204\n\n\n1991-03-01 09:00 -1.144073\n\n\nFreq: H, dtype: float64\n\n\n## \nCategorical\n\n\npandas\u53ef\u4ee5\u5728DataFrame\u4e2d\u5f15\u5165categorical\u6570\u636e\u3002\u8be6\u60c5\u8bf7\u53c2\u9605\ncategorical introduction\n\u548c\nAPI documentation\n\u3002\n\n\n1\n\n\nIn [127]: df = pd.DataFrame({\"id\":[1,2,3,4,5,6], \"raw\\_grade\":['a', 'b', 'b', 'a', 'a', 'e']})\n\n\n\u5c06\u539f\u59cb\u7684grade\u8f6c\u6362\u4e3aCategorical\u6570\u636e\u7c7b\u578b\uff1a\n\n\n1\n\n\n2\n\n\n3\n\n\n4\n\n\n5\n\n\n6\n\n\n7\n\n\n8\n\n\n9\n\n\n10\n\n\n11\n\n\n12\n\n\nIn [128]: df[\"grade\"] = df[\"raw\\_grade\"].astype(\"category\")\n\n\nIn [129]: df[\"grade\"]\n\n\nOut[129]:\n\n\n0 a\n\n\n1 b\n\n\n2 b\n\n\n3 a\n\n\n4 a\n\n\n5 e\n\n\nName: grade, dtype: category\n\n\nCategories (3, object): [a, b, e]\n\n\n\u5c06\u7c7b\u522b\u91cd\u547d\u540d\u4e3a\u66f4\u6709\u610f\u4e49\u7684\u540d\u79f0\n\n\n1\n\n\nIn [130]: df[\"grade\"].cat.categories = [\"very good\", \"good\", \"very bad\"]\n\n\n\u91cd\u65b0\u6392\u5217\u7c7b\u522b\u5e76\u540c\u65f6\u6dfb\u52a0\u7f3a\u5c11\u7684\u7c7b\u522b\uff08Series .cat\u4e0b\u7684\u65b9\u6cd5\u9ed8\u8ba4\u8fd4\u56de\u4e00\u4e2a\u65b0\u7684\u7cfb\u5217\uff09\u3002\n\n\n1\n\n\n2\n\n\n3\n\n\n4\n\n\n5\n\n\n6\n\n\n7\n\n\n8\n\n\n9\n\n\n10\n\n\n11\n\n\n12\n\n\n13\n\n\nIn [131]: df[\"grade\"] = df[\"grade\"].cat.set\\_categories([\"very bad\", \"bad\", \"medium\", \"good\", \"very good\"])\n\n\nIn [132]: df[\"grade\"]\n\n\nOut[132]:\n\n\n0 very good\n\n\n1 good\n\n\n2 good\n\n\n3 very good\n\n\n4 very good\n\n\n5 very bad\n\n\nName: grade, dtype: category\n\n\nCategories (5, object): [very bad, bad, medium, good, very good]\n\n\n\u6392\u5e8f\u662f\u6309\u7c7b\u522b\u6392\u5e8f\u7684\uff0c\u800c\u4e0d\u662f\u8bcd\u6c47\u987a\u5e8f\u3002\n\n\n1\n\n\n2\n\n\n3\n\n\n4\n\n\n5\n\n\n6\n\n\n7\n\n\n8\n\n\n9\n\n\nIn [133]: df.sort\\_values(by=\"grade\")\n\n\nOut[133]:\n\n\nid raw\\_grade grade\n\n\n5 6 e very bad\n\n\n1 2 b good\n\n\n2 3 b good\n\n\n0 1 a very good\n\n\n3 4 a very good\n\n\n4 5 a very good\n\n\n## \n\u753b\u56fe\n\n\nPlotting\n\u6587\u6863\n\n\n1\n\n\n2\n\n\n3\n\n\n4\n\n\n5\n\n\n6\n\n\nIn [135]: ts = pd.Series(np.random.randn(1000), index=pd.date\\_range('1/1/2000', periods=1000))\n\n\nIn [136]: ts = ts.cumsum()\n\n\nIn [137]: ts.plot()\n\n\nOut[137]: \\\n\n\n\n\n\u5728DataFrame\u4e0a\uff0c\nplot()\n\u65b9\u4fbf\u7ed8\u5236\u6240\u6709\u5e26\u6807\u7b7e\u7684\u5217\uff1a\n\n\n1\n\n\n2\n\n\n3\n\n\n4\n\n\n5\n\n\n6\n\n\n7\n\n\n8\n\n\nIn [138]: df = pd.DataFrame(np.random.randn(1000, 4), index=ts.index,\n\n\n.....: columns=['A', 'B', 'C', 'D'])\n\n\n.....:\n\n\nIn [139]: df = df.cumsum()\n\n\nIn [140]: plt.figure(); df.plot(); plt.legend(loc='best')\n\n\nOut[140]: \\\n\n\n\n\n## \n\u5bfc\u5165\u548c\u4fdd\u5b58\u6570\u636e\n\n\n### \nCSV\n\n\nWriting to a csv file\n\n\n1\n\n\nIn [141]: \ndf.to\n\\_csv('foo.csv')\n\n\nReading from a csv file\n\n\n1\n\n\n2\n\n\n3\n\n\n4\n\n\n5\n\n\n6\n\n\n7\n\n\n8\n\n\n9\n\n\n10\n\n\n11\n\n\n12\n\n\n13\n\n\n14\n\n\n15\n\n\n16\n\n\n17\n\n\n18\n\n\n19\n\n\n20\n\n\nIn [142]: pd.read\\_csv('foo.csv')\n\n\nOut[142]:\n\n\nUnnamed: 0 A B C D\n\n\n0 2000-01-01 0.266457 -0.399641 -0.219582 1.186860\n\n\n1 2000-01-02 -1.170732 -0.345873 1.653061 -0.282953\n\n\n2 2000-01-03 -1.734933 0.530468 2.060811 -0.515536\n\n\n3 2000-01-04 -1.555121 1.452620 0.239859 -1.156896\n\n\n4 2000-01-05 0.578117 0.511371 0.103552 -2.428202\n\n\n5 2000-01-06 0.478344 0.449933 -0.741620 -1.962409\n\n\n6 2000-01-07 1.235339 -0.091757 -1.543861 -1.084753\n\n\n.. ... ... ... ... ...\n\n\n993 2002-09-20 -10.628548 -9.153563 -7.883146 28.313940\n\n\n994 2002-09-21 -10.390377 -8.727491 -6.399645 30.914107\n\n\n995 2002-09-22 -8.985362 -8.485624 -4.669462 31.367740\n\n\n996 2002-09-23 -9.558560 -8.781216 -4.499815 30.518439\n\n\n997 2002-09-24 -9.902058 -9.340490 -4.386639 30.105593\n\n\n998 2002-09-25 -10.216020 -9.480682 -3.933802 29.758560\n\n\n999 2002-09-26 -11.856774 -10.671012 -3.216025 29.369368\n\n\n[1000 rows x 5 columns]\n\n\n### \nHDF5\n\n\n\u4ece\nHDFStores\n\u8bfb\u53d6\u548c\u5199\u5165\u6570\u636e\n\n\n\u5199\u5165HDF5\u5b58\u50a8\uff1a\n\n\n1\n\n\nIn [143]: \ndf.to\n\\_hdf('foo.h5','df')\n\n\n\u4eceHDF5\u5b58\u50a8\u4e2d\u8bfb\u53d6\uff1a\n\n\n1\n\n\n2\n\n\n3\n\n\n4\n\n\n5\n\n\n6\n\n\n7\n\n\n8\n\n\n9\n\n\n10\n\n\n11\n\n\n12\n\n\n13\n\n\n14\n\n\n15\n\n\n16\n\n\n17\n\n\n18\n\n\n19\n\n\n20\n\n\nIn [144]: pd.read\\_hdf('foo.h5','df')\n\n\nOut[144]:\n\n\nA B C D\n\n\n2000-01-01 0.266457 -0.399641 -0.219582 1.186860\n\n\n2000-01-02 -1.170732 -0.345873 1.653061 -0.282953\n\n\n2000-01-03 -1.734933 0.530468 2.060811 -0.515536\n\n\n2000-01-04 -1.555121 1.452620 0.239859 -1.156896\n\n\n2000-01-05 0.578117 0.511371 0.103552 -2.428202\n\n\n2000-01-06 0.478344 0.449933 -0.741620 -1.962409\n\n\n2000-01-07 1.235339 -0.091757 -1.543861 -1.084753\n\n\n... ... ... ... ...\n\n\n2002-09-20 -10.628548 -9.153563 -7.883146 28.313940\n\n\n2002-09-21 -10.390377 -8.727491 -6.399645 30.914107\n\n\n2002-09-22 -8.985362 -8.485624 -4.669462 31.367740\n\n\n2002-09-23 -9.558560 -8.781216 -4.499815 30.518439\n\n\n2002-09-24 -9.902058 -9.340490 -4.386639 30.105593\n\n\n2002-09-25 -10.216020 -9.480682 -3.933802 29.758560\n\n\n2002-09-26 -11.856774 -10.671012 -3.216025 29.369368\n\n\n[1000 rows x 4 columns]\n\n\n### \nExcel\n\n\n\u4ece\nMS Excel\n\u4e2d\u8bfb\u53d6\u548c\u5199\u5165\u6570\u636e\n\n\n\u5199\u5165\u4e00\u4e2aexcel\u6587\u4ef6\n\n\n1\n\n\nIn [145]: \ndf.to\n\\_excel('foo.xlsx', sheet\\_name='Sheet1')\n\n\n\u8bfb\u53d6\u4e00\u4e2aexcel\u6587\u4ef6\n\n\n1\n\n\n2\n\n\n3\n\n\n4\n\n\n5\n\n\n6\n\n\n7\n\n\n8\n\n\n9\n\n\n10\n\n\n11\n\n\n12\n\n\n13\n\n\n14\n\n\n15\n\n\n16\n\n\n17\n\n\n18\n\n\n19\n\n\n20\n\n\nIn [146]: pd.read\\_excel('foo.xlsx', 'Sheet1', index\\_col=None, na\\_values=['NA'])\n\n\nOut[146]:\n\n\nA B C D\n\n\n2000-01-01 0.266457 -0.399641 -0.219582 1.186860\n\n\n2000-01-02 -1.170732 -0.345873 1.653061 -0.282953\n\n\n2000-01-03 -1.734933 0.530468 2.060811 -0.515536\n\n\n2000-01-04 -1.555121 1.452620 0.239859 -1.156896\n\n\n2000-01-05 0.578117 0.511371 0.103552 -2.428202\n\n\n2000-01-06 0.478344 0.449933 -0.741620 -1.962409\n\n\n2000-01-07 1.235339 -0.091757 -1.543861 -1.084753\n\n\n... ... ... ... ...\n\n\n2002-09-20 -10.628548 -9.153563 -7.883146 28.313940\n\n\n2002-09-21 -10.390377 -8.727491 -6.399645 30.914107\n\n\n2002-09-22 -8.985362 -8.485624 -4.669462 31.367740\n\n\n2002-09-23 -9.558560 -8.781216 -4.499815 30.518439\n\n\n2002-09-24 -9.902058 -9.340490 -4.386639 30.105593\n\n\n2002-09-25 -10.216020 -9.480682 -3.933802 29.758560\n\n\n2002-09-26 -11.856774 -10.671012 -3.216025 29.369368\n\n\n[1000 rows x 4 columns]\n\n\n## \n\u9677\u9631\n\n\n\u5982\u679c\u4f60\u6b63\u5728\u5c1d\u8bd5\u4e00\u4e2a\u64cd\u4f5c\uff0c\u4f60\u4f1a\u770b\u5230\u4e00\u4e2a\u5f02\u5e38\uff1a\n\n\n1\n\n\n2\n\n\n3\n\n\n4\n\n\n5\n\n\n\\>\\>\\> if pd.Series([False, True, False]):\n\n\nprint(\"I was true\")\n\n\nTraceback\n\n\n...\n\n\nValueError: The truth value of an array is ambiguous. Use a.empty, a.any() or a.all().\n\n\n\u8bf7\u53c2\u9605\nComparisons\n\u4ee5\u83b7\u53d6\u89e3\u91ca\u4ee5\u53ca\u5982\u4f55\u5904\u7406\u3002", 
            "title": "10\u5206\u949f\u4e0a\u624bPandas"
        }, 
        {
            "location": "/\u5b66\u4e60/\u6df1\u5ea6\u5b66\u4e60/\u4e3b\u6210\u5206\u5206\u6790-2/", 
            "text": "\u8f6c\u8f7d\u8bf7\u58f0\u660e\u51fa\u5904\uff1a\nhttp://blog.csdn.net/zhongkelee/article/details/44064401\n\n\n\u4e00\u3001PCA\u7b80\u4ecb\n\n\n1. \u76f8\u5173\u80cc\u666f\n\n\n\u4e0a\u5b8c\u9648\u6069\u7ea2\u8001\u5e08\u7684\u300a\u673a\u5668\u5b66\u4e60\u4e0e\u77e5\u8bc6\u53d1\u73b0\u300b\u548c\u5b63\u6d77\u6ce2\u8001\u5e08\u7684\u300a\u77e9\u9635\u4ee3\u6570\u300b\u4e24\u95e8\u8bfe\u4e4b\u540e\uff0c\u9887\u6709\u4f53\u4f1a\u3002\u6700\u8fd1\u5728\u505a\u4e3b\u6210\u5206\u5206\u6790\u548c\u5947\u5f02\u503c\u5206\u89e3\u65b9\u9762\u7684\u9879\u76ee\uff0c\u6240\u4ee5\u8bb0\u5f55\u4e00\u4e0b\u5fc3\u5f97\u4f53\u4f1a\u3002\n\n\n\u5728\u8bb8\u591a\u9886\u57df\u7684\u7814\u7a76\u4e0e\u5e94\u7528\u4e2d\uff0c\u5f80\u5f80\u9700\u8981\u5bf9\u53cd\u6620\u4e8b\u7269\u7684\u591a\u4e2a\u53d8\u91cf\u8fdb\u884c\u5927\u91cf\u7684\u89c2\u6d4b\uff0c\u6536\u96c6\u5927\u91cf\u6570\u636e\u4ee5\u4fbf\u8fdb\u884c\u5206\u6790\u5bfb\u627e\u89c4\u5f8b\u3002\u591a\u53d8\u91cf\u5927\u6837\u672c\u65e0\u7591\u4f1a\u4e3a\u7814\u7a76\u548c\u5e94\u7528\u63d0\u4f9b\u4e86\u4e30\u5bcc\u7684\u4fe1\u606f\uff0c\u4f46\u4e5f\u5728\u4e00\u5b9a\u7a0b\u5ea6\u4e0a\u589e\u52a0\u4e86\u6570\u636e\u91c7\u96c6\u7684\u5de5\u4f5c\u91cf\uff0c\u66f4\u91cd\u8981\u7684\u662f\u5728\u591a\u6570\u60c5\u51b5\u4e0b\uff0c\u8bb8\u591a\u53d8\u91cf\u4e4b\u95f4\u53ef\u80fd\u5b58\u5728\u76f8\u5173\u6027\uff0c\u4ece\u800c\u589e\u52a0\u4e86\u95ee\u9898\u5206\u6790\u7684\u590d\u6742\u6027\uff0c\u540c\u65f6\u5bf9\u5206\u6790\u5e26\u6765\u4e0d\u4fbf\u3002\u5982\u679c\u5206\u522b\u5bf9\u6bcf\u4e2a\u6307\u6807\u8fdb\u884c\u5206\u6790\uff0c\u5206\u6790\u5f80\u5f80\u662f\u5b64\u7acb\u7684\uff0c\u800c\u4e0d\u662f\u7efc\u5408\u7684\u3002\u76f2\u76ee\u51cf\u5c11\u6307\u6807\u4f1a\u635f\u5931\u5f88\u591a\u4fe1\u606f\uff0c\u5bb9\u6613\u4ea7\u751f\u9519\u8bef\u7684\u7ed3\u8bba\u3002\n\n\n\u56e0\u6b64\u9700\u8981\u627e\u5230\u4e00\u4e2a\u5408\u7406\u7684\u65b9\u6cd5\uff0c\u5728\u51cf\u5c11\u9700\u8981\u5206\u6790\u7684\u6307\u6807\u540c\u65f6\uff0c\u5c3d\u91cf\u51cf\u5c11\u539f\u6307\u6807\u5305\u542b\u4fe1\u606f\u7684\u635f\u5931\uff0c\u4ee5\u8fbe\u5230\u5bf9\u6240\u6536\u96c6\u6570\u636e\u8fdb\u884c\u5168\u9762\u5206\u6790\u7684\u76ee\u7684\u3002\u7531\u4e8e\u5404\u53d8\u91cf\u95f4\u5b58\u5728\u4e00\u5b9a\u7684\u76f8\u5173\u5173\u7cfb\uff0c\u56e0\u6b64\u6709\u53ef\u80fd\u7528\u8f83\u5c11\u7684\u7efc\u5408\u6307\u6807\u5206\u522b\u7efc\u5408\u5b58\u5728\u4e8e\u5404\u53d8\u91cf\u4e2d\u7684\u5404\u7c7b\u4fe1\u606f\u3002\u4e3b\u6210\u5206\u5206\u6790\u4e0e\u56e0\u5b50\u5206\u6790\u5c31\u5c5e\u4e8e\u8fd9\u7c7b\u964d\u7ef4\u7684\u65b9\u6cd5\u3002\n\n\n2. \u95ee\u9898\u63cf\u8ff0\n\n\n\u4e0b\u88681\u662f\u67d0\u4e9b\u5b66\u751f\u7684\u8bed\u6587\u3001\u6570\u5b66\u3001\u7269\u7406\u3001\u5316\u5b66\u6210\u7ee9\u7edf\u8ba1\uff1a\n\n\n\n\n\u9996\u5148\uff0c\u5047\u8bbe\u8fd9\u4e9b\u79d1\u76ee\u6210\u7ee9\u4e0d\u76f8\u5173\uff0c\u4e5f\u5c31\u662f\u8bf4\u67d0\u4e00\u79d1\u76ee\u8003\u591a\u5c11\u5206\u4e0e\u5176\u4ed6\u79d1\u76ee\u6ca1\u6709\u5173\u7cfb\u3002\u90a3\u4e48\u4e00\u773c\u5c31\u80fd\u770b\u51fa\u6765\uff0c\u6570\u5b66\u3001\u7269\u7406\u3001\u5316\u5b66\u8fd9\u4e09\u95e8\u8bfe\u7684\u6210\u7ee9\u6784\u6210\u4e86\u8fd9\u7ec4\u6570\u636e\u7684\u4e3b\u6210\u5206\uff08\u5f88\u663e\u7136\uff0c\u6570\u5b66\u4f5c\u4e3a\u7b2c\u4e00\u4e3b\u6210\u5206\uff0c\u56e0\u4e3a\u6570\u5b66\u6210\u7ee9\u62c9\u7684\u6700\u5f00\uff09\u3002\u4e3a\u4ec0\u4e48\u4e00\u773c\u80fd\u770b\u51fa\u6765\uff1f\u56e0\u4e3a\u5750\u6807\u8f74\u9009\u5bf9\u4e86\uff01\u4e0b\u9762\u518d\u770b\u4e00\u7ec4\u5b66\u751f\u7684\u6570\u5b66\u3001\u7269\u7406\u3001\u5316\u5b66\u3001\u8bed\u6587\u3001\u5386\u53f2\u3001\u82f1\u8bed\u6210\u7ee9\u7edf\u8ba1\uff0c\u89c1\u88682\uff0c\u8fd8\u80fd\u4e0d\u80fd\u4e00\u773c\u770b\u51fa\u6765\uff1a\n\n\n\n\n\u6570\u636e\u592a\u591a\u4e86\uff0c\u4ee5\u81f3\u4e8e\u770b\u8d77\u6765\u6709\u4e9b\u51cc\u4e71\uff01\u4e5f\u5c31\u662f\u8bf4\uff0c\u65e0\u6cd5\u76f4\u63a5\u770b\u51fa\u8fd9\u7ec4\u6570\u636e\u7684\u4e3b\u6210\u5206\uff0c\u56e0\u4e3a\u5728\u5750\u6807\u7cfb\u4e0b\u8fd9\u7ec4\u6570\u636e\u5206\u5e03\u7684\u5f88\u6563\u4e71\u3002\u7a76\u5176\u539f\u56e0\uff0c\u662f\u56e0\u4e3a\u65e0\u6cd5\u62e8\u5f00\u906e\u4f4f\u8089\u773c\u7684\u8ff7\u96fe~\u5982\u679c\u628a\u8fd9\u4e9b\u6570\u636e\u5728\u76f8\u5e94\u7684\u7a7a\u95f4\u4e2d\u8868\u793a\u51fa\u6765\uff0c\u4e5f\u8bb8\u4f60\u5c31\u80fd\u6362\u4e00\u4e2a\u89c2\u5bdf\u89d2\u5ea6\u627e\u51fa\u4e3b\u6210\u5206\u3002\u5982\u4e0b\u56fe1\u6240\u793a\uff1a\n\n\n\n\n\u4f46\u662f\uff0c\u5bf9\u4e8e\u66f4\u9ad8\u7ef4\u7684\u6570\u636e\uff0c\u80fd\u60f3\u8c61\u5176\u5206\u5e03\u5417\uff1f\u5c31\u7b97\u80fd\u63cf\u8ff0\u5206\u5e03\uff0c\u5982\u4f55\u7cbe\u786e\u5730\u627e\u5230\u8fd9\u4e9b\u4e3b\u6210\u5206\u7684\u8f74\uff1f\u5982\u4f55\u8861\u91cf\u4f60\u63d0\u53d6\u7684\u4e3b\u6210\u5206\u5230\u5e95\u5360\u4e86\u6574\u4e2a\u6570\u636e\u7684\u591a\u5c11\u4fe1\u606f\uff1f\u6240\u4ee5\uff0c\u6211\u4eec\u5c31\u8981\u7528\u5230\u4e3b\u6210\u5206\u5206\u6790\u7684\u5904\u7406\u65b9\u6cd5\u3002\n\n\n3. \u6570\u636e\u964d\u7ef4\n\n\n\u4e3a\u4e86\u8bf4\u660e\u4ec0\u4e48\u662f\u6570\u636e\u7684\u4e3b\u6210\u5206\uff0c\u5148\u4ece\u6570\u636e\u964d\u7ef4\u8bf4\u8d77\u3002\u6570\u636e\u964d\u7ef4\u662f\u600e\u4e48\u56de\u4e8b\u513f\uff1f\u5047\u8bbe\u4e09\u7ef4\u7a7a\u95f4\u4e2d\u6709\u4e00\u7cfb\u5217\u70b9\uff0c\u8fd9\u4e9b\u70b9\u5206\u5e03\u5728\u4e00\u4e2a\u8fc7\u539f\u70b9\u7684\u659c\u9762\u4e0a\uff0c\u5982\u679c\u4f60\u7528\u81ea\u7136\u5750\u6807\u7cfbx,y,z\u8fd9\u4e09\u4e2a\u8f74\u6765\u8868\u793a\u8fd9\u7ec4\u6570\u636e\u7684\u8bdd\uff0c\u9700\u8981\u4f7f\u7528\u4e09\u4e2a\u7ef4\u5ea6\uff0c\u800c\u4e8b\u5b9e\u4e0a\uff0c\u8fd9\u4e9b\u70b9\u7684\u5206\u5e03\u4ec5\u4ec5\u662f\u5728\u4e00\u4e2a\u4e8c\u7ef4\u7684\u5e73\u9762\u4e0a\uff0c\u90a3\u4e48\uff0c\u95ee\u9898\u51fa\u5728\u54ea\u91cc\uff1f\u5982\u679c\u4f60\u518d\u4ed4\u7ec6\u60f3\u60f3\uff0c\u80fd\u4e0d\u80fd\u628ax,y,z\u5750\u6807\u7cfb\u65cb\u8f6c\u4e00\u4e0b\uff0c\u4f7f\u6570\u636e\u6240\u5728\u5e73\u9762\u4e0ex,y\u5e73\u9762\u91cd\u5408\uff1f\u8fd9\u5c31\u5bf9\u4e86\uff01\u5982\u679c\u628a\u65cb\u8f6c\u540e\u7684\u5750\u6807\u7cfb\u8bb0\u4e3ax',y',z'\uff0c\u90a3\u4e48\u8fd9\u7ec4\u6570\u636e\u7684\u8868\u793a\u53ea\u7528x'\u548cy'\u4e24\u4e2a\u7ef4\u5ea6\u8868\u793a\u5373\u53ef\uff01\u5f53\u7136\u4e86\uff0c\u5982\u679c\u60f3\u6062\u590d\u539f\u6765\u7684\u8868\u793a\u65b9\u5f0f\uff0c\u90a3\u5c31\u5f97\u628a\u8fd9\u4e24\u4e2a\u5750\u6807\u4e4b\u95f4\u7684\u53d8\u6362\u77e9\u9635\u5b58\u4e0b\u6765\u3002\u8fd9\u6837\u5c31\u80fd\u628a\u6570\u636e\u7ef4\u5ea6\u964d\u4e0b\u6765\u4e86\uff01\u4f46\u662f\uff0c\u6211\u4eec\u8981\u770b\u5230\u8fd9\u4e2a\u8fc7\u7a0b\u7684\u672c\u8d28\uff0c\u5982\u679c\u628a\u8fd9\u4e9b\u6570\u636e\u6309\u884c\u6216\u8005\u6309\u5217\u6392\u6210\u4e00\u4e2a\u77e9\u9635\uff0c\u90a3\u4e48\u8fd9\u4e2a\u77e9\u9635\u7684\u79e9\u5c31\u662f2\uff01\u8fd9\u4e9b\u6570\u636e\u4e4b\u95f4\u662f\u6709\u76f8\u5173\u6027\u7684\uff0c\u8fd9\u4e9b\u6570\u636e\u6784\u6210\u7684\u8fc7\u539f\u70b9\u7684\u5411\u91cf\u7684\u6700\u5927\u7ebf\u6027\u65e0\u5173\u7ec4\u5305\u542b2\u4e2a\u5411\u91cf\uff0c\u8fd9\u5c31\u662f\u4e3a\u4ec0\u4e48\u4e00\u5f00\u59cb\u5c31\u5047\u8bbe\u5e73\u9762\u8fc7\u539f\u70b9\u7684\u539f\u56e0\uff01\u90a3\u4e48\u5982\u679c\u5e73\u9762\u4e0d\u8fc7\u539f\u70b9\u5462\uff1f\u8fd9\u5c31\u662f\u6570\u636e\u4e2d\u5fc3\u5316\u7684\u7f18\u6545\uff01\u5c06\u5750\u6807\u539f\u70b9\u5e73\u79fb\u5230\u6570\u636e\u4e2d\u5fc3\uff0c\u8fd9\u6837\u539f\u672c\u4e0d\u76f8\u5173\u7684\u6570\u636e\u5728\u8fd9\u4e2a\u65b0\u5750\u6807\u7cfb\u4e2d\u5c31\u6709\u76f8\u5173\u6027\u4e86\uff01\u6709\u8da3\u7684\u662f\uff0c\u4e09\u70b9\u4e00\u5b9a\u5171\u9762\uff0c\u4e5f\u5c31\u662f\u8bf4\u4e09\u7ef4\u7a7a\u95f4\u4e2d\u4efb\u610f\u4e09\u70b9\u4e2d\u5fc3\u5316\u540e\u90fd\u662f\u7ebf\u6027\u76f8\u5173\u7684\uff0c\u4e00\u822c\u6765\u8bb2n\u7ef4\u7a7a\u95f4\u4e2d\u7684n\u4e2a\u70b9\u4e00\u5b9a\u80fd\u5728\u4e00\u4e2an-1\u7ef4\u5b50\u7a7a\u95f4\u4e2d\u5206\u6790\uff01\n\n\n\u4e0a\u4e00\u6bb5\u6587\u5b57\u4e2d\uff0c\u8ba4\u4e3a\u628a\u6570\u636e\u964d\u7ef4\u540e\u5e76\u6ca1\u6709\u4e22\u5f03\u4efb\u4f55\u4e1c\u897f\uff0c\u56e0\u4e3a\u8fd9\u4e9b\u6570\u636e\u5728\u5e73\u9762\u4ee5\u5916\u7684\u7b2c\u4e09\u4e2a\u7ef4\u5ea6\u7684\u5206\u91cf\u90fd\u4e3a0\u3002\u73b0\u5728\uff0c\u5047\u8bbe\u8fd9\u4e9b\u6570\u636e\u5728z'\u8f74\u6709\u4e00\u4e2a\u5f88\u5c0f\u7684\u6296\u52a8\uff0c\u90a3\u4e48\u6211\u4eec\u4ecd\u7136\u7528\u4e0a\u8ff0\u7684\u4e8c\u7ef4\u8868\u793a\u8fd9\u4e9b\u6570\u636e\uff0c\u7406\u7531\u662f\u6211\u4eec\u53ef\u4ee5\u8ba4\u4e3a\u8fd9\u4e24\u4e2a\u8f74\u7684\u4fe1\u606f\u662f\u6570\u636e\u7684\u4e3b\u6210\u5206\uff0c\u800c\u8fd9\u4e9b\u4fe1\u606f\u5bf9\u4e8e\u6211\u4eec\u7684\u5206\u6790\u5df2\u7ecf\u8db3\u591f\u4e86\uff0cz'\u8f74\u4e0a\u7684\u6296\u52a8\u5f88\u6709\u53ef\u80fd\u662f\u566a\u58f0\uff0c\u4e5f\u5c31\u662f\u8bf4\u672c\u6765\u8fd9\u7ec4\u6570\u636e\u662f\u6709\u76f8\u5173\u6027\u7684\uff0c\u566a\u58f0\u7684\u5f15\u5165\uff0c\u5bfc\u81f4\u4e86\u6570\u636e\u4e0d\u5b8c\u5168\u76f8\u5173\uff0c\u4f46\u662f\uff0c\u8fd9\u4e9b\u6570\u636e\u5728z'\u8f74\u4e0a\u7684\u5206\u5e03\u4e0e\u539f\u70b9\u6784\u6210\u7684\u5939\u89d2\u975e\u5e38\u5c0f\uff0c\u4e5f\u5c31\u662f\u8bf4\u5728z'\u8f74\u4e0a\u6709\u5f88\u5927\u7684\u76f8\u5173\u6027\uff0c\u7efc\u5408\u8fd9\u4e9b\u8003\u8651\uff0c\u5c31\u53ef\u4ee5\u8ba4\u4e3a\u6570\u636e\u5728x',y' \u8f74\u4e0a\u7684\u6295\u5f71\u6784\u6210\u4e86\u6570\u636e\u7684\u4e3b\u6210\u5206\uff01\n\n\n\u8bfe\u5802\u4e0a\u8001\u5e08\u8c08\u5230\u7684\u7279\u5f81\u9009\u62e9\u7684\u95ee\u9898\uff0c\u5176\u5b9e\u5c31\u662f\u8981\u5254\u9664\u7684\u7279\u5f81\u4e3b\u8981\u662f\u548c\u7c7b\u6807\u7b7e\u65e0\u5173\u7684\u7279\u5f81\u3002\u800c\u8fd9\u91cc\u7684\u7279\u5f81\u5f88\u591a\u662f\u548c\u7c7b\u6807\u7b7e\u6709\u5173\u7684\uff0c\u4f46\u91cc\u9762\u5b58\u5728\u566a\u58f0\u6216\u8005\u5197\u4f59\u3002\u5728\u8fd9\u79cd\u60c5\u51b5\u4e0b\uff0c\u9700\u8981\u4e00\u79cd\u7279\u5f81\u964d\u7ef4\u7684\u65b9\u6cd5\u6765\u51cf\u5c11\u7279\u5f81\u6570\uff0c\u51cf\u5c11\u566a\u97f3\u548c\u5197\u4f59\uff0c\u51cf\u5c11\u8fc7\u5ea6\u62df\u5408\u7684\u53ef\u80fd\u6027\u3002\n\n\nPCA\u7684\u601d\u60f3\u662f\u5c06n\u7ef4\u7279\u5f81\u6620\u5c04\u5230k\u7ef4\u4e0a\uff08k\\\nn\uff09\uff0c\u8fd9k\u7ef4\u662f\u5168\u65b0\u7684\u6b63\u4ea4\u7279\u5f81\u3002\u8fd9k\u7ef4\u7279\u5f81\u79f0\u4e3a\u4e3b\u6210\u5206\uff0c\u662f\u91cd\u65b0\u6784\u9020\u51fa\u6765\u7684k\u7ef4\u7279\u5f81\uff0c\u800c\u4e0d\u662f\u7b80\u5355\u5730\u4ecen\u7ef4\u7279\u5f81\u4e2d\u53bb\u9664\u5176\u4f59n-k\u7ef4\u7279\u5f81\u3002\n\n\n\u4e8c\u3001PCA\u5b9e\u4f8b\n\n\n\u73b0\u5728\u5047\u8bbe\u6709\u4e00\u7ec4\u6570\u636e\u5982\u4e0b\uff1a\n\n\n\n\n\u884c\u4ee3\u8868\u4e86\u6837\u4f8b\uff0c\u5217\u4ee3\u8868\u7279\u5f81\uff0c\u8fd9\u91cc\u670910\u4e2a\u6837\u4f8b\uff0c\u6bcf\u4e2a\u6837\u4f8b\u4e24\u4e2a\u7279\u5f81\u3002\u53ef\u4ee5\u8fd9\u6837\u8ba4\u4e3a\uff0c\u670910\u7bc7\u6587\u6863\uff0cx\u662f10\u7bc7\u6587\u6863\u4e2d\u201clearn\u201d\u51fa\u73b0\u7684TF-IDF\uff0cy\u662f10\u7bc7\u6587\u6863\u4e2d\u201cstudy\u201d\u51fa\u73b0\u7684TF-IDF\u3002\n\n\n\u7b2c\u4e00\u6b65\n\uff0c\u5206\u522b\u6c42x\u548cy\u7684\u5e73\u5747\u503c\uff0c\u7136\u540e\u5bf9\u4e8e\u6240\u6709\u7684\u6837\u4f8b\uff0c\u90fd\u51cf\u53bb\u5bf9\u5e94\u7684\u5747\u503c\u3002\u8fd9\u91ccx\u7684\u5747\u503c\u662f1.81\uff0cy\u7684\u5747\u503c\u662f1.91\uff0c\u90a3\u4e48\u4e00\u4e2a\u6837\u4f8b\u51cf\u53bb\u5747\u503c\u540e\u5373\u4e3a\uff080.69,0.49\uff09\uff0c\u5f97\u5230\n\n\n\n\n** \u7b2c\u4e8c\u6b65**\uff0c\u6c42\u7279\u5f81\u534f\u65b9\u5dee\u77e9\u9635\uff0c\u5982\u679c\u6570\u636e\u662f3\u7ef4\uff0c\u90a3\u4e48\u534f\u65b9\u5dee\u77e9\u9635\u662f\n\n\n\n\n\u8fd9\u91cc\u53ea\u6709x\u548cy\uff0c\u6c42\u89e3\u5f97\n\n\n\n\n\u5bf9\u89d2\u7ebf\u4e0a\u5206\u522b\u662fx\u548cy\u7684\u65b9\u5dee\uff0c\u975e\u5bf9\u89d2\u7ebf\u4e0a\u662f\u534f\u65b9\u5dee\u3002\u534f\u65b9\u5dee\u662f\u8861\u91cf\u4e24\u4e2a\u53d8\u91cf\u540c\u65f6\u53d8\u5316\u7684\u53d8\u5316\u7a0b\u5ea6\u3002\u534f\u65b9\u5dee\u5927\u4e8e0\u8868\u793ax\u548cy\u82e5\u4e00\u4e2a\u589e\uff0c\u53e6\u4e00\u4e2a\u4e5f\u589e\uff1b\u5c0f\u4e8e0\u8868\u793a\u4e00\u4e2a\u589e\uff0c\u4e00\u4e2a\u51cf\u3002\u5982\u679c\uff58\u548c\uff59\u662f\u7edf\u8ba1\u72ec\u7acb\u7684\uff0c\u90a3\u4e48\u4e8c\u8005\u4e4b\u95f4\u7684\u534f\u65b9\u5dee\u5c31\u662f\uff10\uff1b\u4f46\u662f\u534f\u65b9\u5dee\u662f\uff10\uff0c\u5e76\u4e0d\u80fd\u8bf4\u660e\uff58\u548c\uff59\u662f\u72ec\u7acb\u7684\u3002\u534f\u65b9\u5dee\u7edd\u5bf9\u503c\u8d8a\u5927\uff0c\u4e24\u8005\u5bf9\u5f7c\u6b64\u7684\u5f71\u54cd\u8d8a\u5927\uff0c\u53cd\u4e4b\u8d8a\u5c0f\u3002\u534f\u65b9\u5dee\u662f\u6ca1\u6709\u5355\u4f4d\u7684\u91cf\uff0c\u56e0\u6b64\uff0c\u5982\u679c\u540c\u6837\u7684\u4e24\u4e2a\u53d8\u91cf\u6240\u91c7\u7528\u7684\u91cf\u7eb2\u53d1\u751f\u53d8\u5316\uff0c\u5b83\u4eec\u7684\u534f\u65b9\u5dee\u4e5f\u4f1a\u4ea7\u751f\u6811\u679d\u4e0a\u7684\u53d8\u5316\u3002\n\n\n\u7b2c\u4e09\u6b65\n\uff0c\u6c42\u534f\u65b9\u5dee\u7684\u7279\u5f81\u503c\u548c\u7279\u5f81\u5411\u91cf\uff0c\u5f97\u5230\n\n\n\n\n\u4e0a\u9762\u662f\u4e24\u4e2a\u7279\u5f81\u503c\uff0c\u4e0b\u9762\u662f\u5bf9\u5e94\u7684\u7279\u5f81\u5411\u91cf\uff0c\u7279\u5f81\u503c0.0490833989\u5bf9\u5e94\u7279\u5f81\u5411\u91cf\u4e3a\n\uff0c\u8fd9\u91cc\u7684\u7279\u5f81\u5411\u91cf\u90fd\u5f52\u4e00\u5316\u4e3a\u5355\u4f4d\u5411\u91cf\u3002\n\n\n\u7b2c\u56db\u6b65\n\uff0c\u5c06\u7279\u5f81\u503c\u6309\u7167\u4ece\u5927\u5230\u5c0f\u7684\u987a\u5e8f\u6392\u5e8f\uff0c\u9009\u62e9\u5176\u4e2d\u6700\u5927\u7684k\u4e2a\uff0c\u7136\u540e\u5c06\u5176\u5bf9\u5e94\u7684k\u4e2a\u7279\u5f81\u5411\u91cf\u5206\u522b\u4f5c\u4e3a\u5217\u5411\u91cf\u7ec4\u6210\u7279\u5f81\u5411\u91cf\u77e9\u9635\u3002\n\n\n\u8fd9\u91cc\u7279\u5f81\u503c\u53ea\u6709\u4e24\u4e2a\uff0c\u6211\u4eec\u9009\u62e9\u5176\u4e2d\u6700\u5927\u7684\u90a3\u4e2a\uff0c\u8fd9\u91cc\u662f1.28402771\uff0c\u5bf9\u5e94\u7684\u7279\u5f81\u5411\u91cf\u662f(-0.677873399, -0.735178656)T\u3002\n\n\n\u7b2c\u4e94\u6b65\n\uff0c\u5c06\u6837\u672c\u70b9\u6295\u5f71\u5230\u9009\u53d6\u7684\u7279\u5f81\u5411\u91cf\u4e0a\u3002\u5047\u8bbe\u6837\u4f8b\u6570\u4e3am\uff0c\u7279\u5f81\u6570\u4e3an\uff0c\u51cf\u53bb\u5747\u503c\u540e\u7684\u6837\u672c\u77e9\u9635\u4e3aDataAdjust(m*n)\uff0c\u534f\u65b9\u5dee\u77e9\u9635\u662fn*n\uff0c\u9009\u53d6\u7684k\u4e2a\u7279\u5f81\u5411\u91cf\u7ec4\u6210\u7684\u77e9\u9635\u4e3aEigenVectors(n*k)\u3002\u90a3\u4e48\u6295\u5f71\u540e\u7684\u6570\u636eFinalData\u4e3a\n\n\nFinalData(10*1) = DataAdjust(10*2\u77e9\u9635) x \u7279\u5f81\u5411\u91cf(-0.677873399, -0.735178656)T\n\n\n\u5f97\u5230\u7684\u7ed3\u679c\u662f\n\n\n\n\n\u8fd9\u6837\uff0c\u5c31\u5c06\u539f\u59cb\u6837\u4f8b\u7684n\u7ef4\u7279\u5f81\u53d8\u6210\u4e86k\u7ef4\uff0c\u8fd9k\u7ef4\u5c31\u662f\u539f\u59cb\u7279\u5f81\u5728k\u7ef4\u4e0a\u7684\u6295\u5f71\u3002\n\n\n\u4e0a\u9762\u7684\u6570\u636e\u53ef\u4ee5\u8ba4\u4e3a\u662flearn\u548cstudy\u7279\u5f81\u878d\u5408\u4e3a\u4e00\u4e2a\u65b0\u7684\u7279\u5f81\u53eb\u505aLS\u7279\u5f81\uff0c\u8be5\u7279\u5f81\u57fa\u672c\u4e0a\u4ee3\u8868\u4e86\u8fd9\u4e24\u4e2a\u7279\u5f81\u3002\u4e0a\u8ff0\u8fc7\u7a0b\u5982\u4e0b\u56fe2\u63cf\u8ff0\uff1a\n\n\n\n\n\u6b63\u53f7\u8868\u793a\u9884\u5904\u7406\u540e\u7684\u6837\u672c\u70b9\uff0c\u659c\u7740\u7684\u4e24\u6761\u7ebf\u5c31\u5206\u522b\u662f\u6b63\u4ea4\u7684\u7279\u5f81\u5411\u91cf\uff08\u7531\u4e8e\u534f\u65b9\u5dee\u77e9\u9635\u662f\u5bf9\u79f0\u7684\uff0c\u56e0\u6b64\u5176\u7279\u5f81\u5411\u91cf\u6b63\u4ea4\uff09\uff0c\u6700\u540e\u4e00\u6b65\u7684\u77e9\u9635\u4e58\u6cd5\u5c31\u662f\u5c06\u539f\u59cb\u6837\u672c\u70b9\u5206\u522b\u5f80\u7279\u5f81\u5411\u91cf\u5bf9\u5e94\u7684\u8f74\u4e0a\u505a\u6295\u5f71\u3002\n\n\n\u6574\u4e2aPCA\u8fc7\u7a0b\u8c8c\u4f3c\u53ca\u5176\u7b80\u5355\uff0c\u5c31\u662f\u6c42\u534f\u65b9\u5dee\u7684\u7279\u5f81\u503c\u548c\u7279\u5f81\u5411\u91cf\uff0c\u7136\u540e\u505a\u6570\u636e\u8f6c\u6362\u3002\u4f46\u662f\u6709\u6ca1\u6709\u89c9\u5f97\u5f88\u795e\u5947\uff0c\u4e3a\u4ec0\u4e48\u6c42\u534f\u65b9\u5dee\u7684\u7279\u5f81\u5411\u91cf\u5c31\u662f\u6700\u7406\u60f3\u7684k\u7ef4\u5411\u91cf\uff1f\u5176\u80cc\u540e\u9690\u85cf\u7684\u610f\u4e49\u662f\u4ec0\u4e48\uff1f\u6574\u4e2aPCA\u7684\u610f\u4e49\u662f\u4ec0\u4e48\uff1f\n\n\n\u4e09\u3001PCA\u63a8\u5bfc\n\n\n\u5148\u770b\u4e0b\u9762\u8fd9\u5e45\u56fe\uff1a\n\n\n\n\n\u5728\u7b2c\u4e00\u90e8\u5206\u4e2d\uff0c\u6211\u4eec\u4e3e\u4e86\u4e00\u4e2a\u5b66\u751f\u6210\u7ee9\u7684\u4f8b\u5b50\uff0c\u91cc\u9762\u7684\u6570\u636e\u70b9\u662f\u516d\u7ef4\u7684\uff0c\u5373\u6bcf\u4e2a\u89c2\u6d4b\u503c\u662f6\u7ef4\u7a7a\u95f4\u4e2d\u7684\u4e00\u4e2a\u70b9\u3002\u6211\u4eec\u5e0c\u671b\u5c066\u7ef4\u7a7a\u95f4\u7528\u4f4e\u7ef4\u7a7a\u95f4\u8868\u793a\u3002\n\n\n\u5148\u5047\u5b9a\u53ea\u6709\u4e8c\u7ef4\uff0c\u5373\u53ea\u6709\u4e24\u4e2a\u53d8\u91cf\uff0c\u5b83\u4eec\u7531\u6a2a\u5750\u6807\u548c\u7eb5\u5750\u6807\u6240\u4ee3\u8868\uff1b\u56e0\u6b64\u6bcf\u4e2a\u89c2\u6d4b\u503c\u90fd\u6709\u76f8\u5e94\u4e8e\u8fd9\u4e24\u4e2a\u5750\u6807\u8f74\u7684\u4e24\u4e2a\u5750\u6807\u503c\uff1b\u5982\u679c\u8fd9\u4e9b\u6570\u636e\u5f62\u6210\u4e00\u4e2a\u692d\u5706\u5f62\u72b6\u7684\u70b9\u9635\uff0c\u90a3\u4e48\u8fd9\u4e2a\u692d\u5706\u6709\u4e00\u4e2a\u957f\u8f74\u548c\u4e00\u4e2a\u77ed\u8f74\u3002\u5728\u77ed\u8f74\u65b9\u5411\u4e0a\uff0c\u6570\u636e\u53d8\u5316\u5f88\u5c11\uff1b\u5728\u6781\u7aef\u7684\u60c5\u51b5\uff0c\u77ed\u8f74\u5982\u679c\u9000\u5316\u6210\u4e00\u70b9\uff0c\u90a3\u53ea\u6709\u5728\u957f\u8f74\u7684\u65b9\u5411\u624d\u80fd\u591f\u89e3\u91ca\u8fd9\u4e9b\u70b9\u7684\u53d8\u5316\u4e86\uff1b\u8fd9\u6837\uff0c\u7531\u4e8c\u7ef4\u5230\u4e00\u7ef4\u7684\u964d\u7ef4\u5c31\u81ea\u7136\u5b8c\u6210\u4e86\u3002\n\n\n\u4e0a\u56fe\u4e2d\uff0cu1\u5c31\u662f\u4e3b\u6210\u5206\u65b9\u5411\uff0c\u7136\u540e\u5728\u4e8c\u7ef4\u7a7a\u95f4\u4e2d\u53d6\u548cu1\u65b9\u5411\u6b63\u4ea4\u7684\u65b9\u5411\uff0c\u5c31\u662fu2\u7684\u65b9\u5411\u3002\u5219n\u4e2a\u6570\u636e\u5728u1\u8f74\u7684\u79bb\u6563\u7a0b\u5ea6\u6700\u5927\uff08\u65b9\u5dee\u6700\u5927\uff09\uff0c\u6570\u636e\u5728u1\u4e0a\u7684\u6295\u5f71\u4ee3\u8868\u4e86\u539f\u59cb\u6570\u636e\u7684\u7edd\u5927\u90e8\u5206\u4fe1\u606f\uff0c\u5373\u4f7f\u4e0d\u8003\u8651u2\uff0c\u4fe1\u606f\u635f\u5931\u4e5f\u4e0d\u591a\u3002\u800c\u4e14\uff0cu1\u3001u2\u4e0d\u76f8\u5173\u3002\u53ea\u8003\u8651u1\u65f6\uff0c\u4e8c\u7ef4\u964d\u4e3a\u4e00\u7ef4\u3002\n\n\n\u692d\u5706\u7684\u957f\u77ed\u8f74\u76f8\u5dee\u5f97\u8d8a\u5927\uff0c\u964d\u7ef4\u4e5f\u8d8a\u6709\u9053\u7406\u3002\n\n\n1. \u6700\u5927\u65b9\u5dee\u7406\u8bba\n\n\n\u5728\u4fe1\u53f7\u5904\u7406\u4e2d\u8ba4\u4e3a\u4fe1\u53f7\u5177\u6709\u8f83\u5927\u7684\u65b9\u5dee\uff0c\u566a\u58f0\u6709\u8f83\u5c0f\u7684\u65b9\u5dee\uff0c\u4fe1\u566a\u6bd4\u5c31\u662f\u4fe1\u53f7\u4e0e\u566a\u58f0\u7684\u65b9\u5dee\u6bd4\uff0c\u8d8a\u5927\u8d8a\u597d\u3002\u5982\u524d\u9762\u7684\u56fe\uff0c\u6837\u672c\u5728u1\u4e0a\u7684\u6295\u5f71\u65b9\u5dee\u8f83\u5927\uff0c\u5728u2\u4e0a\u7684\u6295\u5f71\u65b9\u5dee\u8f83\u5c0f\uff0c\u90a3\u4e48\u53ef\u8ba4\u4e3au2\u4e0a\u7684\u6295\u5f71\u662f\u7531\u566a\u58f0\u5f15\u8d77\u7684\u3002\n\n\n\u56e0\u6b64\u6211\u4eec\u8ba4\u4e3a\uff0c\u6700\u597d\u7684k\u7ef4\u7279\u5f81\u662f\u5c06n\u7ef4\u6837\u672c\u70b9\u8f6c\u6362\u4e3ak\u7ef4\u540e\uff0c\u6bcf\u4e00\u7ef4\u4e0a\u7684\u6837\u672c\u65b9\u5dee\u90fd\u5f88\u5927\u3002\n\n\n\u6bd4\u5982\u6211\u4eec\u5c06\u4e0b\u56fe\u4e2d\u76845\u4e2a\u70b9\u6295\u5f71\u5230\u67d0\u4e00\u7ef4\u4e0a\uff0c\u8fd9\u91cc\u7528\u4e00\u6761\u8fc7\u539f\u70b9\u7684\u76f4\u7ebf\u8868\u793a\uff08\u6570\u636e\u5df2\u7ecf\u4e2d\u5fc3\u5316\uff09\uff1a\n\n\n\n\n\u5047\u8bbe\u6211\u4eec\u9009\u62e9\u4e24\u6761\u4e0d\u540c\u7684\u76f4\u7ebf\u505a\u6295\u5f71\uff0c\u90a3\u4e48\u5de6\u53f3\u4e24\u6761\u4e2d\u54ea\u4e2a\u597d\u5462\uff1f\u6839\u636e\u6211\u4eec\u4e4b\u524d\u7684\u65b9\u5dee\u6700\u5927\u5316\u7406\u8bba\uff0c\u5de6\u8fb9\u7684\u597d\uff0c\u56e0\u4e3a\u6295\u5f71\u540e\u7684\u6837\u672c\u70b9\u4e4b\u95f4\u65b9\u5dee\u6700\u5927\uff08\u4e5f\u53ef\u4ee5\u8bf4\u662f\u6295\u5f71\u7684\u7edd\u5bf9\u503c\u4e4b\u548c\u6700\u5927\uff09\u3002\n\n\n\u8ba1\u7b97\u6295\u5f71\u7684\u65b9\u6cd5\u89c1\u4e0b\u56fe5\uff1a\n\n\n\n\n\u56fe\u4e2d\uff0c\u7ea2\u8272\u70b9\u8868\u793a\u6837\u4f8b\n\uff0c\u84dd\u8272\u70b9\u8868\u793a\u5728u\u4e0a\u7684\u6295\u5f71\uff0cu\u662f\u76f4\u7ebf\u7684\u659c\u7387\u4e5f\u662f\u76f4\u7ebf\u7684\u65b9\u5411\u5411\u91cf\uff0c\u800c\u4e14\u662f\u5355\u4f4d\u5411\u91cf\u3002\u84dd\u8272\u70b9\u662f\n\u5728u\u4e0a\u7684\u6295\u5f71\u70b9\uff0c\u79bb\u539f\u70b9\u7684\u8ddd\u79bb\u662f\n\\\nx,u>\uff08\u5373xTu\n\u6216\u8005uTx\n\uff09\u3002\n\n\n2. \u6700\u5c0f\u4e8c\u4e58\u6cd5\n\n\n\u6211\u4eec\u4f7f\u7528\u6700\u5c0f\u4e8c\u4e58\u6cd5\u6765\u786e\u5b9a\u5404\u4e2a\u4e3b\u8f74\uff08\u4e3b\u6210\u5206\uff09\u7684\u65b9\u5411\u3002\n\n\n\u5bf9\u7ed9\u5b9a\u7684\u4e00\u7ec4\u6570\u636e\uff08\u4e0b\u9762\u7684\u9610\u8ff0\u4e2d\uff0c\u5411\u91cf\u4e00\u822c\u5747\u6307\u5217\u5411\u91cf\uff09\uff1a\n\n\n\n\n\u5176\u6570\u636e\u4e2d\u5fc3\u4f4d\u4e8e:\n\n\n\n\n\u6570\u636e\u4e2d\u5fc3\u5316\uff08\u5c06\u5750\u6807\u539f\u70b9\u79fb\u5230\u6837\u672c\u70b9\u7684\u4e2d\u5fc3\u70b9\uff09\uff1a\n\n\n\n\n\u4e2d\u5fc3\u5316\u540e\u7684\u6570\u636e\u5728\u7b2c\u4e00\u4e3b\u8f74u1\u65b9\u5411\u4e0a\u5206\u5e03\u6563\u7684\u6700\u5f00\uff0c\u4e5f\u5c31\u662f\u8bf4\u5728u1\u65b9\u5411\u4e0a\u7684\u6295\u5f71\u7684\u7edd\u5bf9\u503c\u4e4b\u548c\u6700\u5927\uff08\u4e5f\u53ef\u4ee5\u8bf4\u65b9\u5dee\u6700\u5927\uff09\uff0c\u8ba1\u7b97\u6295\u5f71\u7684\u65b9\u6cd5\u4e0a\u9762\u5df2\u7ecf\u9610\u8ff0\uff0c\u5c31\u662f\u5c06x\u4e0eu1\u505a\u5185\u79ef\uff0c\u7531\u4e8e\u53ea\u9700\u8981\u6c42u1\u7684\u65b9\u5411\uff0c\u6240\u4ee5\u8bbeu1\u4e5f\u662f\u5355\u4f4d\u5411\u91cf\u3002\n\n\n\u5728\u8fd9\u91cc\uff0c\u4e5f\u5c31\u662f\u6700\u5927\u5316\u4e0b\u5f0f\uff1a\n\n\n\n\n\u7531\u77e9\u9635\u4ee3\u6570\u76f8\u5173\u77e5\u8bc6\u53ef\u77e5\uff0c\u53ef\u4ee5\u5bf9\u7edd\u5bf9\u503c\u7b26\u53f7\u9879\u8fdb\u884c\u5e73\u65b9\u5904\u7406\uff0c\u6bd4\u8f83\u65b9\u4fbf\u3002\u6240\u4ee5\u8fdb\u800c\u5c31\u662f\u6700\u5927\u5316\u4e0b\u5f0f\uff1a\n\n\n\n\n\u4e24\u4e2a\u5411\u91cf\u505a\u5185\u79ef\uff0c\u53ef\u4ee5\u8f6c\u5316\u6210\u77e9\u9635\u4e58\u6cd5\uff1a\n\n\n\n\n\u6240\u4ee5\u76ee\u6807\u51fd\u6570\u53ef\u4ee5\u8868\u793a\u4e3a\uff1a\n\n\n\n\n\u62ec\u53f7\u91cc\u9762\u5c31\u662f\u77e9\u9635\u4e58\u6cd5\u8868\u793a\u5411\u91cf\u5185\u79ef\uff0c\u7531\u4e8e\u5217\u5411\u91cf\u8f6c\u7f6e\u4ee5\u540e\u662f\u884c\u5411\u91cf\uff0c\u884c\u5411\u91cf\u4e58\u4ee5\u5217\u5411\u91cf\u5f97\u5230\u4e00\u4e2a\u6570\uff0c\u4e00\u4e2a\u6570\u7684\u8f6c\u7f6e\u8fd8\u662f\u5176\u672c\u8eab\uff0c\u6240\u4ee5\u53c8\u53ef\u4ee5\u5c06\u76ee\u6807\u51fd\u6570\u5316\u4e3a\uff1a\n\n\n\n\n\u53bb\u62ec\u53f7\uff1a\n\n\n\n\n\u53c8\u7531\u4e8eu1\u548ci\u65e0\u5173\uff0c\u53ef\u4ee5\u62ff\u5230\u6c42\u548c\u7b26\u5916\u9762\uff0c\u4e0a\u5f0f\u5316\u7b80\u4e3a\uff1a\n\n\n\n\n\u5b66\u8fc7\u77e9\u9635\u4ee3\u6570\u7684\u540c\u5b66\u53ef\u80fd\u5df2\u7ecf\u53d1\u73b0\u4e86\uff0c\u4e0a\u5f0f\u62ec\u53f7\u91cc\u9762\u6c42\u548c\u540e\u7684\u7ed3\u679c\uff0c\u5c31\u76f8\u5f53\u4e8e\u4e00\u4e2a\u5927\u77e9\u9635\u4e58\u4ee5\u81ea\u8eab\u7684\u8f6c\u7f6e\uff0c\u5176\u4e2d\uff0c\u8fd9\u4e2a\u5927\u77e9\u9635\u7684\u5f62\u5f0f\u5982\u4e0b\uff1a\n\n\n\n\nX\u77e9\u9635\u7684\u7b2ci\u5217\u5c31\u662fxi\n\n\n\u4e8e\u662f\u6709\uff1a\n\n\n\n\n\u6240\u4ee5\u76ee\u6807\u51fd\u6570\u6700\u7ec8\u5316\u4e3a\uff1a\n\n\n\n\n\u5176\u4e2d\u7684\n\u5c31\u662f\u4e00\u4e2a\u4e8c\u6b21\u578b\uff0c\n\n\n\u6211\u4eec\u5047\u8bbe\n\u7684\u67d0\u4e00\u7279\u5f81\u503c\u4e3a\u03bb\uff0c\u5bf9\u5e94\u7684\u7279\u5f81\u5411\u91cf\u4e3a\u03be\uff0c\u6709\n\n\n\n\n\u6240\u4ee5\n\uff0c\n\u662f\u534a\u6b63\u5b9a\u7684\u5bf9\u79f0\u77e9\u9635\uff0c\u5373\n\u662f\u534a\u6b63\u5b9a\u9635\u7684\u4e8c\u6b21\u578b\uff0c\u7531\u77e9\u9635\u4ee3\u6570\u77e5\u8bc6\u5f97\u51fa\uff0c\u76ee\u6807\u51fd\u6570\u5b58\u5728\u6700\u5927\u503c\uff01\n\n\n\u4e0b\u9762\u6211\u4eec\u6c42\u89e3\u6700\u5927\u503c\u3001\u53d6\u5f97\u6700\u5927\u503c\u65f6u1\u7684\u65b9\u5411\u8fd9\u4e24\u4e2a\u95ee\u9898\u3002\n\n\n\u5148\u89e3\u51b3\u7b2c\u4e00\u4e2a\u95ee\u9898\uff0c\u5bf9\u4e8e\u5411\u91cfx\u7684\u4e8c\u8303\u6570\u5e73\u65b9\u4e3a:\n\n\n\n\n\u540c\u6837\uff0c\u76ee\u6807\u51fd\u6570\u4e5f\u53ef\u4ee5\u8868\u793a\u6210\u6620\u5c04\u540e\u7684\u5411\u91cf\u7684\u4e8c\u8303\u6570\u5e73\u65b9\uff1a\n\n\n\n\n\u628a\u4e8c\u6b21\u578b\u5316\u6210\u4e00\u4e2a\u8303\u6570\u7684\u5f62\u5f0f\uff0c\u7531\u4e8eu1\u53d6\u5355\u4f4d\u5411\u91cf\uff0c\u6700\u5927\u5316\u76ee\u6807\u51fd\u6570\u7684\u57fa\u672c\u95ee\u9898\u4e5f\u5c31\u8f6c\u5316\u4e3a\uff1a\u5bf9\u4e00\u4e2a\u77e9\u9635\uff0c\u5b83\u5bf9\u4e00\u4e2a\u5411\u91cf\u505a\u53d8\u6362\uff0c\u53d8\u6362\u524d\u540e\u7684\u5411\u91cf\u7684\u6a21\u957f\u4f38\u7f29\u5c3a\u5ea6\u5982\u4f55\u624d\u80fd\u6700\u5927\uff1f\u6211\u4eec\u6709\u77e9\u9635\u4ee3\u6570\u4e2d\u7684\u5b9a\u7406\u77e5\uff0c\u5411\u91cf\u7ecf\u77e9\u9635\u6620\u5c04\u524d\u540e\u7684\u5411\u91cf\u957f\u5ea6\u4e4b\u6bd4\u7684\u6700\u5927\u503c\u5c31\u662f\u8fd9\u4e2a\u77e9\u9635\u7684\u6700\u5927\u5947\u5f02\u503c\uff0c\u5373\uff1a\n\n\n\n\n\u5f0f\u4e2d\uff0c\n\u662f\u77e9\u9635A\u7684\u6700\u5927\u5947\u5f02\u503c\uff08\u4ea6\u662f\u77e9\u9635A\u7684\u4e8c\u8303\u6570\uff09\uff0c\u5b83\u7b49\u4e8e\n\uff08\u6216\n\uff09\u7684\u6700\u5927\u7279\u5f81\u503c\u5f00\u5e73\u65b9\u3002\n\n\n\u9488\u5bf9\u672c\u95ee\u9898\u6765\u8bf4\uff0c\n\u662f\u534a\u6b63\u5b9a\u5bf9\u79f0\u9635\uff0c\u4e5f\u5c31\u610f\u5473\u7740\u5b83\u7684\u7279\u5f81\u503c\u90fd\u5927\u4e8e\u7b49\u4e8e0\uff0c\u4e14\u4e0d\u540c\u7279\u5f81\u503c\u5bf9\u5e94\u7684\u7279\u5f81\u5411\u91cf\u662f\u6b63\u4ea4\u7684\uff0c\u6784\u6210\u6240\u5728\u7a7a\u95f4\u7684\u4e00\u7ec4\u5355\u4f4d\u6b63\u4ea4\u57fa\u3002\n\n\n\u518d\u89e3\u51b3\u7b2c\u4e8c\u4e2a\u95ee\u9898\uff0c\u5bf9\u4e00\u822c\u60c5\u51b5\uff0c\u8bbe\u5bf9\u79f0\u9635\n\u7684n\u4e2a\u7279\u5f81\u503c\u5206\u522b\u4e3a\uff1a\n\n\n\n\n\u76f8\u5e94\u7684\u5355\u4f4d\u7279\u5f81\u5411\u91cf\u4e3a\uff1a\n\n\n\n\n\u4efb\u53d6\u4e00\u4e2a\u5411\u91cfx\uff0c\u7528\u7279\u5f81\u5411\u91cf\u6784\u6210\u7684\u7a7a\u95f4\u4e2d\u7684\u8fd9\u7ec4\u57fa\u8868\u793a\u4e3a\uff1a\n\n\n\n\n\u5219\uff1a\n\n\n\n\n\u6240\u4ee5\uff1a\n\n\n\n\n\u9488\u5bf9\u7b2c\u4e8c\u4e2a\u95ee\u9898\uff0c\u6211\u4eec\u53d6\u4e0a\u5f0f\u4e2d\u7684\n\uff0c\u76ee\u6807\u51fd\u6570\n\u53d6\u5f97\u6700\u5927\u503c\uff0c\u4e5f\u5c31\u662f\n\u7684\u6700\u5927\u7279\u5f81\u503c\u65f6\uff0c\u5bf9\u5e94\u7684\u7279\u5f81\u5411\u91cf\u7684\u65b9\u5411\uff0c\u5c31\u662f\u7b2c\u4e00\u4e3b\u6210\u5206u1\u7684\u65b9\u5411\uff01\uff08\u7b2c\u4e8c\u4e3b\u6210\u5206\u7684\u65b9\u5411\u4e3a\n\u7684\u7b2c\u4e8c\u5927\u7279\u5f81\u503c\u5bf9\u5e94\u7684\u7279\u5f81\u5411\u91cf\u7684\u65b9\u5411\uff0c\u4ee5\u6b64\u7c7b\u63a8\uff09\u3002\n\n\n\u8bc1\u660e\u5b8c\u6bd5\u3002\n\n\n\u4e3b\u6210\u5206\u6240\u5360\u6574\u4e2a\u4fe1\u606f\u7684\u767e\u5206\u6bd4\u53ef\u7528\u4e0b\u5f0f\u8ba1\u7b97\uff1a\n\n\n\n\n\u5f0f\u4e2d\u5206\u6bcd\u4e3a\n\u6240\u6709\u5947\u5f02\u503c\u5e73\u65b9\u548c\uff0c\u5206\u5b50\u4e3a\u6240\u9009\u53d6\u7684\u524dk\u5927\u5947\u5f02\u503c\u5e73\u65b9\u548c\u3002\n\n\n\u6709\u4e9b\u7814\u7a76\u5de5\u4f5c\u8868\u660e\uff0c\u6240\u9009\u7684\u4e3b\u8f74\u603b\u957f\u5ea6\u5360\u6240\u6709\u4e3b\u8f74\u957f\u5ea6\u4e4b\u548c\u7684\u5927\u7ea685% \u5373\u53ef\uff0c\u5176\u5b9e\uff0c\u8fd9\u53ea\u662f\u4e00\u4e2a\u5927\u4f53\u7684\u8bf4\u6cd5\uff0c\u5177\u4f53\u9009\u591a\u5c11\u4e2a\uff0c\u8981\u770b\u5b9e\u9645\u60c5\u51b5\u800c\u5b9a\u3002\n\n\n3.\u610f\u4e49\n\n\nPCA\u5c06n\u4e2a\u7279\u5f81\u964d\u7ef4\u5230k\u4e2a\uff0c\u53ef\u4ee5\u7528\u6765\u8fdb\u884c\u6570\u636e\u538b\u7f29\uff0c\u4f8b\u5982100\u7ef4\u7684\u5411\u91cf\u6700\u540e\u53ef\u4ee5\u752810\u7ef4\u6765\u8868\u793a\uff0c\u90a3\u4e48\u538b\u7f29\u7387\u4e3a90%\u3002\u540c\u6837\u56fe\u50cf\u5904\u7406\u9886\u57df\u7684KL\u53d8\u6362\u4f7f\u7528PCA\u505a\u56fe\u50cf\u538b\u7f29\uff0c\u4eba\u8138\u68c0\u6d4b\u548c\u5339\u914d\u3002\u6bd4\u5982\u5982\u4e0b\u6458\u81ea\u53e6\u4e00\u7bc7\n\u535a\u5ba2\n\u4e0a\u7684Matlab\u5b9e\u9a8c\u7ed3\u679c\uff1a\n\n\n\n\n\n\n\n\n\u53ef\u89c1\u6d4b\u8bd5\u6837\u672c\u4e3a\u4eba\u8138\u7684\u6837\u672c\u7684\u91cd\u5efa\u8bef\u5dee\u663e\u7136\u5c0f\u4e8e\u975e\u4eba\u8138\u7684\u91cd\u5efa\u8bef\u5dee\u3002\n\n\n\u53e6\u5916PCA\u8fd8\u53ef\u4ee5\u8054\u7cfb\u5947\u5f02\u503c\u5206\u89e3\uff08SVD\uff09\uff0c\u6765\u7528\u4e8e\u9884\u6d4b\u77e9\u9635\u4e2d\u7f3a\u5931\u7684\u5143\u7d20\uff0c\u53ef\u4ee5\u5e94\u7528\u5230\u8bc4\u5206\u9884\u6d4b\u7b49\u5b9e\u9645\u9879\u76ee\u4e2d\u3002\u8be6\u89c1\u540e\u7eedSVD\u7684\u535a\u5ba2\u3002\n\n\n\u6709\u95ee\u9898\u6216\u8005\u60f3\u6cd5\u53ef\u4ee5\u548c\u6211\u4ea4\u6d41\uff1a\n\n\n\u8f6c\u8f7d\u8bf7\u58f0\u660e\u51fa\u5904\uff1a\nhttp://blog.csdn.net/zhongkelee/article/details/44064401", 
            "title": "\u4e3b\u6210\u5206\u5206\u6790 (2)"
        }, 
        {
            "location": "/\u5b66\u4e60/\u6df1\u5ea6\u5b66\u4e60/\u4e3b\u6210\u5206\u5206\u6790-2/#246", 
            "text": "\u4e0b\u88681\u662f\u67d0\u4e9b\u5b66\u751f\u7684\u8bed\u6587\u3001\u6570\u5b66\u3001\u7269\u7406\u3001\u5316\u5b66\u6210\u7ee9\u7edf\u8ba1\uff1a   \u9996\u5148\uff0c\u5047\u8bbe\u8fd9\u4e9b\u79d1\u76ee\u6210\u7ee9\u4e0d\u76f8\u5173\uff0c\u4e5f\u5c31\u662f\u8bf4\u67d0\u4e00\u79d1\u76ee\u8003\u591a\u5c11\u5206\u4e0e\u5176\u4ed6\u79d1\u76ee\u6ca1\u6709\u5173\u7cfb\u3002\u90a3\u4e48\u4e00\u773c\u5c31\u80fd\u770b\u51fa\u6765\uff0c\u6570\u5b66\u3001\u7269\u7406\u3001\u5316\u5b66\u8fd9\u4e09\u95e8\u8bfe\u7684\u6210\u7ee9\u6784\u6210\u4e86\u8fd9\u7ec4\u6570\u636e\u7684\u4e3b\u6210\u5206\uff08\u5f88\u663e\u7136\uff0c\u6570\u5b66\u4f5c\u4e3a\u7b2c\u4e00\u4e3b\u6210\u5206\uff0c\u56e0\u4e3a\u6570\u5b66\u6210\u7ee9\u62c9\u7684\u6700\u5f00\uff09\u3002\u4e3a\u4ec0\u4e48\u4e00\u773c\u80fd\u770b\u51fa\u6765\uff1f\u56e0\u4e3a\u5750\u6807\u8f74\u9009\u5bf9\u4e86\uff01\u4e0b\u9762\u518d\u770b\u4e00\u7ec4\u5b66\u751f\u7684\u6570\u5b66\u3001\u7269\u7406\u3001\u5316\u5b66\u3001\u8bed\u6587\u3001\u5386\u53f2\u3001\u82f1\u8bed\u6210\u7ee9\u7edf\u8ba1\uff0c\u89c1\u88682\uff0c\u8fd8\u80fd\u4e0d\u80fd\u4e00\u773c\u770b\u51fa\u6765\uff1a   \u6570\u636e\u592a\u591a\u4e86\uff0c\u4ee5\u81f3\u4e8e\u770b\u8d77\u6765\u6709\u4e9b\u51cc\u4e71\uff01\u4e5f\u5c31\u662f\u8bf4\uff0c\u65e0\u6cd5\u76f4\u63a5\u770b\u51fa\u8fd9\u7ec4\u6570\u636e\u7684\u4e3b\u6210\u5206\uff0c\u56e0\u4e3a\u5728\u5750\u6807\u7cfb\u4e0b\u8fd9\u7ec4\u6570\u636e\u5206\u5e03\u7684\u5f88\u6563\u4e71\u3002\u7a76\u5176\u539f\u56e0\uff0c\u662f\u56e0\u4e3a\u65e0\u6cd5\u62e8\u5f00\u906e\u4f4f\u8089\u773c\u7684\u8ff7\u96fe~\u5982\u679c\u628a\u8fd9\u4e9b\u6570\u636e\u5728\u76f8\u5e94\u7684\u7a7a\u95f4\u4e2d\u8868\u793a\u51fa\u6765\uff0c\u4e5f\u8bb8\u4f60\u5c31\u80fd\u6362\u4e00\u4e2a\u89c2\u5bdf\u89d2\u5ea6\u627e\u51fa\u4e3b\u6210\u5206\u3002\u5982\u4e0b\u56fe1\u6240\u793a\uff1a   \u4f46\u662f\uff0c\u5bf9\u4e8e\u66f4\u9ad8\u7ef4\u7684\u6570\u636e\uff0c\u80fd\u60f3\u8c61\u5176\u5206\u5e03\u5417\uff1f\u5c31\u7b97\u80fd\u63cf\u8ff0\u5206\u5e03\uff0c\u5982\u4f55\u7cbe\u786e\u5730\u627e\u5230\u8fd9\u4e9b\u4e3b\u6210\u5206\u7684\u8f74\uff1f\u5982\u4f55\u8861\u91cf\u4f60\u63d0\u53d6\u7684\u4e3b\u6210\u5206\u5230\u5e95\u5360\u4e86\u6574\u4e2a\u6570\u636e\u7684\u591a\u5c11\u4fe1\u606f\uff1f\u6240\u4ee5\uff0c\u6211\u4eec\u5c31\u8981\u7528\u5230\u4e3b\u6210\u5206\u5206\u6790\u7684\u5904\u7406\u65b9\u6cd5\u3002", 
            "title": "2. \u95ee\u9898\u63cf\u8ff0"
        }, 
        {
            "location": "/\u5b66\u4e60/\u6df1\u5ea6\u5b66\u4e60/\u4e3b\u6210\u5206\u5206\u6790-2/#346", 
            "text": "\u4e3a\u4e86\u8bf4\u660e\u4ec0\u4e48\u662f\u6570\u636e\u7684\u4e3b\u6210\u5206\uff0c\u5148\u4ece\u6570\u636e\u964d\u7ef4\u8bf4\u8d77\u3002\u6570\u636e\u964d\u7ef4\u662f\u600e\u4e48\u56de\u4e8b\u513f\uff1f\u5047\u8bbe\u4e09\u7ef4\u7a7a\u95f4\u4e2d\u6709\u4e00\u7cfb\u5217\u70b9\uff0c\u8fd9\u4e9b\u70b9\u5206\u5e03\u5728\u4e00\u4e2a\u8fc7\u539f\u70b9\u7684\u659c\u9762\u4e0a\uff0c\u5982\u679c\u4f60\u7528\u81ea\u7136\u5750\u6807\u7cfbx,y,z\u8fd9\u4e09\u4e2a\u8f74\u6765\u8868\u793a\u8fd9\u7ec4\u6570\u636e\u7684\u8bdd\uff0c\u9700\u8981\u4f7f\u7528\u4e09\u4e2a\u7ef4\u5ea6\uff0c\u800c\u4e8b\u5b9e\u4e0a\uff0c\u8fd9\u4e9b\u70b9\u7684\u5206\u5e03\u4ec5\u4ec5\u662f\u5728\u4e00\u4e2a\u4e8c\u7ef4\u7684\u5e73\u9762\u4e0a\uff0c\u90a3\u4e48\uff0c\u95ee\u9898\u51fa\u5728\u54ea\u91cc\uff1f\u5982\u679c\u4f60\u518d\u4ed4\u7ec6\u60f3\u60f3\uff0c\u80fd\u4e0d\u80fd\u628ax,y,z\u5750\u6807\u7cfb\u65cb\u8f6c\u4e00\u4e0b\uff0c\u4f7f\u6570\u636e\u6240\u5728\u5e73\u9762\u4e0ex,y\u5e73\u9762\u91cd\u5408\uff1f\u8fd9\u5c31\u5bf9\u4e86\uff01\u5982\u679c\u628a\u65cb\u8f6c\u540e\u7684\u5750\u6807\u7cfb\u8bb0\u4e3ax',y',z'\uff0c\u90a3\u4e48\u8fd9\u7ec4\u6570\u636e\u7684\u8868\u793a\u53ea\u7528x'\u548cy'\u4e24\u4e2a\u7ef4\u5ea6\u8868\u793a\u5373\u53ef\uff01\u5f53\u7136\u4e86\uff0c\u5982\u679c\u60f3\u6062\u590d\u539f\u6765\u7684\u8868\u793a\u65b9\u5f0f\uff0c\u90a3\u5c31\u5f97\u628a\u8fd9\u4e24\u4e2a\u5750\u6807\u4e4b\u95f4\u7684\u53d8\u6362\u77e9\u9635\u5b58\u4e0b\u6765\u3002\u8fd9\u6837\u5c31\u80fd\u628a\u6570\u636e\u7ef4\u5ea6\u964d\u4e0b\u6765\u4e86\uff01\u4f46\u662f\uff0c\u6211\u4eec\u8981\u770b\u5230\u8fd9\u4e2a\u8fc7\u7a0b\u7684\u672c\u8d28\uff0c\u5982\u679c\u628a\u8fd9\u4e9b\u6570\u636e\u6309\u884c\u6216\u8005\u6309\u5217\u6392\u6210\u4e00\u4e2a\u77e9\u9635\uff0c\u90a3\u4e48\u8fd9\u4e2a\u77e9\u9635\u7684\u79e9\u5c31\u662f2\uff01\u8fd9\u4e9b\u6570\u636e\u4e4b\u95f4\u662f\u6709\u76f8\u5173\u6027\u7684\uff0c\u8fd9\u4e9b\u6570\u636e\u6784\u6210\u7684\u8fc7\u539f\u70b9\u7684\u5411\u91cf\u7684\u6700\u5927\u7ebf\u6027\u65e0\u5173\u7ec4\u5305\u542b2\u4e2a\u5411\u91cf\uff0c\u8fd9\u5c31\u662f\u4e3a\u4ec0\u4e48\u4e00\u5f00\u59cb\u5c31\u5047\u8bbe\u5e73\u9762\u8fc7\u539f\u70b9\u7684\u539f\u56e0\uff01\u90a3\u4e48\u5982\u679c\u5e73\u9762\u4e0d\u8fc7\u539f\u70b9\u5462\uff1f\u8fd9\u5c31\u662f\u6570\u636e\u4e2d\u5fc3\u5316\u7684\u7f18\u6545\uff01\u5c06\u5750\u6807\u539f\u70b9\u5e73\u79fb\u5230\u6570\u636e\u4e2d\u5fc3\uff0c\u8fd9\u6837\u539f\u672c\u4e0d\u76f8\u5173\u7684\u6570\u636e\u5728\u8fd9\u4e2a\u65b0\u5750\u6807\u7cfb\u4e2d\u5c31\u6709\u76f8\u5173\u6027\u4e86\uff01\u6709\u8da3\u7684\u662f\uff0c\u4e09\u70b9\u4e00\u5b9a\u5171\u9762\uff0c\u4e5f\u5c31\u662f\u8bf4\u4e09\u7ef4\u7a7a\u95f4\u4e2d\u4efb\u610f\u4e09\u70b9\u4e2d\u5fc3\u5316\u540e\u90fd\u662f\u7ebf\u6027\u76f8\u5173\u7684\uff0c\u4e00\u822c\u6765\u8bb2n\u7ef4\u7a7a\u95f4\u4e2d\u7684n\u4e2a\u70b9\u4e00\u5b9a\u80fd\u5728\u4e00\u4e2an-1\u7ef4\u5b50\u7a7a\u95f4\u4e2d\u5206\u6790\uff01  \u4e0a\u4e00\u6bb5\u6587\u5b57\u4e2d\uff0c\u8ba4\u4e3a\u628a\u6570\u636e\u964d\u7ef4\u540e\u5e76\u6ca1\u6709\u4e22\u5f03\u4efb\u4f55\u4e1c\u897f\uff0c\u56e0\u4e3a\u8fd9\u4e9b\u6570\u636e\u5728\u5e73\u9762\u4ee5\u5916\u7684\u7b2c\u4e09\u4e2a\u7ef4\u5ea6\u7684\u5206\u91cf\u90fd\u4e3a0\u3002\u73b0\u5728\uff0c\u5047\u8bbe\u8fd9\u4e9b\u6570\u636e\u5728z'\u8f74\u6709\u4e00\u4e2a\u5f88\u5c0f\u7684\u6296\u52a8\uff0c\u90a3\u4e48\u6211\u4eec\u4ecd\u7136\u7528\u4e0a\u8ff0\u7684\u4e8c\u7ef4\u8868\u793a\u8fd9\u4e9b\u6570\u636e\uff0c\u7406\u7531\u662f\u6211\u4eec\u53ef\u4ee5\u8ba4\u4e3a\u8fd9\u4e24\u4e2a\u8f74\u7684\u4fe1\u606f\u662f\u6570\u636e\u7684\u4e3b\u6210\u5206\uff0c\u800c\u8fd9\u4e9b\u4fe1\u606f\u5bf9\u4e8e\u6211\u4eec\u7684\u5206\u6790\u5df2\u7ecf\u8db3\u591f\u4e86\uff0cz'\u8f74\u4e0a\u7684\u6296\u52a8\u5f88\u6709\u53ef\u80fd\u662f\u566a\u58f0\uff0c\u4e5f\u5c31\u662f\u8bf4\u672c\u6765\u8fd9\u7ec4\u6570\u636e\u662f\u6709\u76f8\u5173\u6027\u7684\uff0c\u566a\u58f0\u7684\u5f15\u5165\uff0c\u5bfc\u81f4\u4e86\u6570\u636e\u4e0d\u5b8c\u5168\u76f8\u5173\uff0c\u4f46\u662f\uff0c\u8fd9\u4e9b\u6570\u636e\u5728z'\u8f74\u4e0a\u7684\u5206\u5e03\u4e0e\u539f\u70b9\u6784\u6210\u7684\u5939\u89d2\u975e\u5e38\u5c0f\uff0c\u4e5f\u5c31\u662f\u8bf4\u5728z'\u8f74\u4e0a\u6709\u5f88\u5927\u7684\u76f8\u5173\u6027\uff0c\u7efc\u5408\u8fd9\u4e9b\u8003\u8651\uff0c\u5c31\u53ef\u4ee5\u8ba4\u4e3a\u6570\u636e\u5728x',y' \u8f74\u4e0a\u7684\u6295\u5f71\u6784\u6210\u4e86\u6570\u636e\u7684\u4e3b\u6210\u5206\uff01  \u8bfe\u5802\u4e0a\u8001\u5e08\u8c08\u5230\u7684\u7279\u5f81\u9009\u62e9\u7684\u95ee\u9898\uff0c\u5176\u5b9e\u5c31\u662f\u8981\u5254\u9664\u7684\u7279\u5f81\u4e3b\u8981\u662f\u548c\u7c7b\u6807\u7b7e\u65e0\u5173\u7684\u7279\u5f81\u3002\u800c\u8fd9\u91cc\u7684\u7279\u5f81\u5f88\u591a\u662f\u548c\u7c7b\u6807\u7b7e\u6709\u5173\u7684\uff0c\u4f46\u91cc\u9762\u5b58\u5728\u566a\u58f0\u6216\u8005\u5197\u4f59\u3002\u5728\u8fd9\u79cd\u60c5\u51b5\u4e0b\uff0c\u9700\u8981\u4e00\u79cd\u7279\u5f81\u964d\u7ef4\u7684\u65b9\u6cd5\u6765\u51cf\u5c11\u7279\u5f81\u6570\uff0c\u51cf\u5c11\u566a\u97f3\u548c\u5197\u4f59\uff0c\u51cf\u5c11\u8fc7\u5ea6\u62df\u5408\u7684\u53ef\u80fd\u6027\u3002  PCA\u7684\u601d\u60f3\u662f\u5c06n\u7ef4\u7279\u5f81\u6620\u5c04\u5230k\u7ef4\u4e0a\uff08k\\ n\uff09\uff0c\u8fd9k\u7ef4\u662f\u5168\u65b0\u7684\u6b63\u4ea4\u7279\u5f81\u3002\u8fd9k\u7ef4\u7279\u5f81\u79f0\u4e3a\u4e3b\u6210\u5206\uff0c\u662f\u91cd\u65b0\u6784\u9020\u51fa\u6765\u7684k\u7ef4\u7279\u5f81\uff0c\u800c\u4e0d\u662f\u7b80\u5355\u5730\u4ecen\u7ef4\u7279\u5f81\u4e2d\u53bb\u9664\u5176\u4f59n-k\u7ef4\u7279\u5f81\u3002", 
            "title": "3. \u6570\u636e\u964d\u7ef4"
        }, 
        {
            "location": "/\u5b66\u4e60/\u6df1\u5ea6\u5b66\u4e60/\u4e3b\u6210\u5206\u5206\u6790-2/#pca", 
            "text": "\u73b0\u5728\u5047\u8bbe\u6709\u4e00\u7ec4\u6570\u636e\u5982\u4e0b\uff1a   \u884c\u4ee3\u8868\u4e86\u6837\u4f8b\uff0c\u5217\u4ee3\u8868\u7279\u5f81\uff0c\u8fd9\u91cc\u670910\u4e2a\u6837\u4f8b\uff0c\u6bcf\u4e2a\u6837\u4f8b\u4e24\u4e2a\u7279\u5f81\u3002\u53ef\u4ee5\u8fd9\u6837\u8ba4\u4e3a\uff0c\u670910\u7bc7\u6587\u6863\uff0cx\u662f10\u7bc7\u6587\u6863\u4e2d\u201clearn\u201d\u51fa\u73b0\u7684TF-IDF\uff0cy\u662f10\u7bc7\u6587\u6863\u4e2d\u201cstudy\u201d\u51fa\u73b0\u7684TF-IDF\u3002  \u7b2c\u4e00\u6b65 \uff0c\u5206\u522b\u6c42x\u548cy\u7684\u5e73\u5747\u503c\uff0c\u7136\u540e\u5bf9\u4e8e\u6240\u6709\u7684\u6837\u4f8b\uff0c\u90fd\u51cf\u53bb\u5bf9\u5e94\u7684\u5747\u503c\u3002\u8fd9\u91ccx\u7684\u5747\u503c\u662f1.81\uff0cy\u7684\u5747\u503c\u662f1.91\uff0c\u90a3\u4e48\u4e00\u4e2a\u6837\u4f8b\u51cf\u53bb\u5747\u503c\u540e\u5373\u4e3a\uff080.69,0.49\uff09\uff0c\u5f97\u5230   ** \u7b2c\u4e8c\u6b65**\uff0c\u6c42\u7279\u5f81\u534f\u65b9\u5dee\u77e9\u9635\uff0c\u5982\u679c\u6570\u636e\u662f3\u7ef4\uff0c\u90a3\u4e48\u534f\u65b9\u5dee\u77e9\u9635\u662f   \u8fd9\u91cc\u53ea\u6709x\u548cy\uff0c\u6c42\u89e3\u5f97   \u5bf9\u89d2\u7ebf\u4e0a\u5206\u522b\u662fx\u548cy\u7684\u65b9\u5dee\uff0c\u975e\u5bf9\u89d2\u7ebf\u4e0a\u662f\u534f\u65b9\u5dee\u3002\u534f\u65b9\u5dee\u662f\u8861\u91cf\u4e24\u4e2a\u53d8\u91cf\u540c\u65f6\u53d8\u5316\u7684\u53d8\u5316\u7a0b\u5ea6\u3002\u534f\u65b9\u5dee\u5927\u4e8e0\u8868\u793ax\u548cy\u82e5\u4e00\u4e2a\u589e\uff0c\u53e6\u4e00\u4e2a\u4e5f\u589e\uff1b\u5c0f\u4e8e0\u8868\u793a\u4e00\u4e2a\u589e\uff0c\u4e00\u4e2a\u51cf\u3002\u5982\u679c\uff58\u548c\uff59\u662f\u7edf\u8ba1\u72ec\u7acb\u7684\uff0c\u90a3\u4e48\u4e8c\u8005\u4e4b\u95f4\u7684\u534f\u65b9\u5dee\u5c31\u662f\uff10\uff1b\u4f46\u662f\u534f\u65b9\u5dee\u662f\uff10\uff0c\u5e76\u4e0d\u80fd\u8bf4\u660e\uff58\u548c\uff59\u662f\u72ec\u7acb\u7684\u3002\u534f\u65b9\u5dee\u7edd\u5bf9\u503c\u8d8a\u5927\uff0c\u4e24\u8005\u5bf9\u5f7c\u6b64\u7684\u5f71\u54cd\u8d8a\u5927\uff0c\u53cd\u4e4b\u8d8a\u5c0f\u3002\u534f\u65b9\u5dee\u662f\u6ca1\u6709\u5355\u4f4d\u7684\u91cf\uff0c\u56e0\u6b64\uff0c\u5982\u679c\u540c\u6837\u7684\u4e24\u4e2a\u53d8\u91cf\u6240\u91c7\u7528\u7684\u91cf\u7eb2\u53d1\u751f\u53d8\u5316\uff0c\u5b83\u4eec\u7684\u534f\u65b9\u5dee\u4e5f\u4f1a\u4ea7\u751f\u6811\u679d\u4e0a\u7684\u53d8\u5316\u3002  \u7b2c\u4e09\u6b65 \uff0c\u6c42\u534f\u65b9\u5dee\u7684\u7279\u5f81\u503c\u548c\u7279\u5f81\u5411\u91cf\uff0c\u5f97\u5230   \u4e0a\u9762\u662f\u4e24\u4e2a\u7279\u5f81\u503c\uff0c\u4e0b\u9762\u662f\u5bf9\u5e94\u7684\u7279\u5f81\u5411\u91cf\uff0c\u7279\u5f81\u503c0.0490833989\u5bf9\u5e94\u7279\u5f81\u5411\u91cf\u4e3a \uff0c\u8fd9\u91cc\u7684\u7279\u5f81\u5411\u91cf\u90fd\u5f52\u4e00\u5316\u4e3a\u5355\u4f4d\u5411\u91cf\u3002  \u7b2c\u56db\u6b65 \uff0c\u5c06\u7279\u5f81\u503c\u6309\u7167\u4ece\u5927\u5230\u5c0f\u7684\u987a\u5e8f\u6392\u5e8f\uff0c\u9009\u62e9\u5176\u4e2d\u6700\u5927\u7684k\u4e2a\uff0c\u7136\u540e\u5c06\u5176\u5bf9\u5e94\u7684k\u4e2a\u7279\u5f81\u5411\u91cf\u5206\u522b\u4f5c\u4e3a\u5217\u5411\u91cf\u7ec4\u6210\u7279\u5f81\u5411\u91cf\u77e9\u9635\u3002  \u8fd9\u91cc\u7279\u5f81\u503c\u53ea\u6709\u4e24\u4e2a\uff0c\u6211\u4eec\u9009\u62e9\u5176\u4e2d\u6700\u5927\u7684\u90a3\u4e2a\uff0c\u8fd9\u91cc\u662f1.28402771\uff0c\u5bf9\u5e94\u7684\u7279\u5f81\u5411\u91cf\u662f(-0.677873399, -0.735178656)T\u3002  \u7b2c\u4e94\u6b65 \uff0c\u5c06\u6837\u672c\u70b9\u6295\u5f71\u5230\u9009\u53d6\u7684\u7279\u5f81\u5411\u91cf\u4e0a\u3002\u5047\u8bbe\u6837\u4f8b\u6570\u4e3am\uff0c\u7279\u5f81\u6570\u4e3an\uff0c\u51cf\u53bb\u5747\u503c\u540e\u7684\u6837\u672c\u77e9\u9635\u4e3aDataAdjust(m*n)\uff0c\u534f\u65b9\u5dee\u77e9\u9635\u662fn*n\uff0c\u9009\u53d6\u7684k\u4e2a\u7279\u5f81\u5411\u91cf\u7ec4\u6210\u7684\u77e9\u9635\u4e3aEigenVectors(n*k)\u3002\u90a3\u4e48\u6295\u5f71\u540e\u7684\u6570\u636eFinalData\u4e3a  FinalData(10*1) = DataAdjust(10*2\u77e9\u9635) x \u7279\u5f81\u5411\u91cf(-0.677873399, -0.735178656)T  \u5f97\u5230\u7684\u7ed3\u679c\u662f   \u8fd9\u6837\uff0c\u5c31\u5c06\u539f\u59cb\u6837\u4f8b\u7684n\u7ef4\u7279\u5f81\u53d8\u6210\u4e86k\u7ef4\uff0c\u8fd9k\u7ef4\u5c31\u662f\u539f\u59cb\u7279\u5f81\u5728k\u7ef4\u4e0a\u7684\u6295\u5f71\u3002  \u4e0a\u9762\u7684\u6570\u636e\u53ef\u4ee5\u8ba4\u4e3a\u662flearn\u548cstudy\u7279\u5f81\u878d\u5408\u4e3a\u4e00\u4e2a\u65b0\u7684\u7279\u5f81\u53eb\u505aLS\u7279\u5f81\uff0c\u8be5\u7279\u5f81\u57fa\u672c\u4e0a\u4ee3\u8868\u4e86\u8fd9\u4e24\u4e2a\u7279\u5f81\u3002\u4e0a\u8ff0\u8fc7\u7a0b\u5982\u4e0b\u56fe2\u63cf\u8ff0\uff1a   \u6b63\u53f7\u8868\u793a\u9884\u5904\u7406\u540e\u7684\u6837\u672c\u70b9\uff0c\u659c\u7740\u7684\u4e24\u6761\u7ebf\u5c31\u5206\u522b\u662f\u6b63\u4ea4\u7684\u7279\u5f81\u5411\u91cf\uff08\u7531\u4e8e\u534f\u65b9\u5dee\u77e9\u9635\u662f\u5bf9\u79f0\u7684\uff0c\u56e0\u6b64\u5176\u7279\u5f81\u5411\u91cf\u6b63\u4ea4\uff09\uff0c\u6700\u540e\u4e00\u6b65\u7684\u77e9\u9635\u4e58\u6cd5\u5c31\u662f\u5c06\u539f\u59cb\u6837\u672c\u70b9\u5206\u522b\u5f80\u7279\u5f81\u5411\u91cf\u5bf9\u5e94\u7684\u8f74\u4e0a\u505a\u6295\u5f71\u3002  \u6574\u4e2aPCA\u8fc7\u7a0b\u8c8c\u4f3c\u53ca\u5176\u7b80\u5355\uff0c\u5c31\u662f\u6c42\u534f\u65b9\u5dee\u7684\u7279\u5f81\u503c\u548c\u7279\u5f81\u5411\u91cf\uff0c\u7136\u540e\u505a\u6570\u636e\u8f6c\u6362\u3002\u4f46\u662f\u6709\u6ca1\u6709\u89c9\u5f97\u5f88\u795e\u5947\uff0c\u4e3a\u4ec0\u4e48\u6c42\u534f\u65b9\u5dee\u7684\u7279\u5f81\u5411\u91cf\u5c31\u662f\u6700\u7406\u60f3\u7684k\u7ef4\u5411\u91cf\uff1f\u5176\u80cc\u540e\u9690\u85cf\u7684\u610f\u4e49\u662f\u4ec0\u4e48\uff1f\u6574\u4e2aPCA\u7684\u610f\u4e49\u662f\u4ec0\u4e48\uff1f", 
            "title": "\u4e8c\u3001PCA\u5b9e\u4f8b"
        }, 
        {
            "location": "/\u5b66\u4e60/\u6df1\u5ea6\u5b66\u4e60/\u4e3b\u6210\u5206\u5206\u6790-2/#pca_1", 
            "text": "\u5148\u770b\u4e0b\u9762\u8fd9\u5e45\u56fe\uff1a   \u5728\u7b2c\u4e00\u90e8\u5206\u4e2d\uff0c\u6211\u4eec\u4e3e\u4e86\u4e00\u4e2a\u5b66\u751f\u6210\u7ee9\u7684\u4f8b\u5b50\uff0c\u91cc\u9762\u7684\u6570\u636e\u70b9\u662f\u516d\u7ef4\u7684\uff0c\u5373\u6bcf\u4e2a\u89c2\u6d4b\u503c\u662f6\u7ef4\u7a7a\u95f4\u4e2d\u7684\u4e00\u4e2a\u70b9\u3002\u6211\u4eec\u5e0c\u671b\u5c066\u7ef4\u7a7a\u95f4\u7528\u4f4e\u7ef4\u7a7a\u95f4\u8868\u793a\u3002  \u5148\u5047\u5b9a\u53ea\u6709\u4e8c\u7ef4\uff0c\u5373\u53ea\u6709\u4e24\u4e2a\u53d8\u91cf\uff0c\u5b83\u4eec\u7531\u6a2a\u5750\u6807\u548c\u7eb5\u5750\u6807\u6240\u4ee3\u8868\uff1b\u56e0\u6b64\u6bcf\u4e2a\u89c2\u6d4b\u503c\u90fd\u6709\u76f8\u5e94\u4e8e\u8fd9\u4e24\u4e2a\u5750\u6807\u8f74\u7684\u4e24\u4e2a\u5750\u6807\u503c\uff1b\u5982\u679c\u8fd9\u4e9b\u6570\u636e\u5f62\u6210\u4e00\u4e2a\u692d\u5706\u5f62\u72b6\u7684\u70b9\u9635\uff0c\u90a3\u4e48\u8fd9\u4e2a\u692d\u5706\u6709\u4e00\u4e2a\u957f\u8f74\u548c\u4e00\u4e2a\u77ed\u8f74\u3002\u5728\u77ed\u8f74\u65b9\u5411\u4e0a\uff0c\u6570\u636e\u53d8\u5316\u5f88\u5c11\uff1b\u5728\u6781\u7aef\u7684\u60c5\u51b5\uff0c\u77ed\u8f74\u5982\u679c\u9000\u5316\u6210\u4e00\u70b9\uff0c\u90a3\u53ea\u6709\u5728\u957f\u8f74\u7684\u65b9\u5411\u624d\u80fd\u591f\u89e3\u91ca\u8fd9\u4e9b\u70b9\u7684\u53d8\u5316\u4e86\uff1b\u8fd9\u6837\uff0c\u7531\u4e8c\u7ef4\u5230\u4e00\u7ef4\u7684\u964d\u7ef4\u5c31\u81ea\u7136\u5b8c\u6210\u4e86\u3002  \u4e0a\u56fe\u4e2d\uff0cu1\u5c31\u662f\u4e3b\u6210\u5206\u65b9\u5411\uff0c\u7136\u540e\u5728\u4e8c\u7ef4\u7a7a\u95f4\u4e2d\u53d6\u548cu1\u65b9\u5411\u6b63\u4ea4\u7684\u65b9\u5411\uff0c\u5c31\u662fu2\u7684\u65b9\u5411\u3002\u5219n\u4e2a\u6570\u636e\u5728u1\u8f74\u7684\u79bb\u6563\u7a0b\u5ea6\u6700\u5927\uff08\u65b9\u5dee\u6700\u5927\uff09\uff0c\u6570\u636e\u5728u1\u4e0a\u7684\u6295\u5f71\u4ee3\u8868\u4e86\u539f\u59cb\u6570\u636e\u7684\u7edd\u5927\u90e8\u5206\u4fe1\u606f\uff0c\u5373\u4f7f\u4e0d\u8003\u8651u2\uff0c\u4fe1\u606f\u635f\u5931\u4e5f\u4e0d\u591a\u3002\u800c\u4e14\uff0cu1\u3001u2\u4e0d\u76f8\u5173\u3002\u53ea\u8003\u8651u1\u65f6\uff0c\u4e8c\u7ef4\u964d\u4e3a\u4e00\u7ef4\u3002  \u692d\u5706\u7684\u957f\u77ed\u8f74\u76f8\u5dee\u5f97\u8d8a\u5927\uff0c\u964d\u7ef4\u4e5f\u8d8a\u6709\u9053\u7406\u3002", 
            "title": "\u4e09\u3001PCA\u63a8\u5bfc"
        }, 
        {
            "location": "/\u5b66\u4e60/\u6df1\u5ea6\u5b66\u4e60/\u4e3b\u6210\u5206\u5206\u6790-2/#146", 
            "text": "\u5728\u4fe1\u53f7\u5904\u7406\u4e2d\u8ba4\u4e3a\u4fe1\u53f7\u5177\u6709\u8f83\u5927\u7684\u65b9\u5dee\uff0c\u566a\u58f0\u6709\u8f83\u5c0f\u7684\u65b9\u5dee\uff0c\u4fe1\u566a\u6bd4\u5c31\u662f\u4fe1\u53f7\u4e0e\u566a\u58f0\u7684\u65b9\u5dee\u6bd4\uff0c\u8d8a\u5927\u8d8a\u597d\u3002\u5982\u524d\u9762\u7684\u56fe\uff0c\u6837\u672c\u5728u1\u4e0a\u7684\u6295\u5f71\u65b9\u5dee\u8f83\u5927\uff0c\u5728u2\u4e0a\u7684\u6295\u5f71\u65b9\u5dee\u8f83\u5c0f\uff0c\u90a3\u4e48\u53ef\u8ba4\u4e3au2\u4e0a\u7684\u6295\u5f71\u662f\u7531\u566a\u58f0\u5f15\u8d77\u7684\u3002  \u56e0\u6b64\u6211\u4eec\u8ba4\u4e3a\uff0c\u6700\u597d\u7684k\u7ef4\u7279\u5f81\u662f\u5c06n\u7ef4\u6837\u672c\u70b9\u8f6c\u6362\u4e3ak\u7ef4\u540e\uff0c\u6bcf\u4e00\u7ef4\u4e0a\u7684\u6837\u672c\u65b9\u5dee\u90fd\u5f88\u5927\u3002  \u6bd4\u5982\u6211\u4eec\u5c06\u4e0b\u56fe\u4e2d\u76845\u4e2a\u70b9\u6295\u5f71\u5230\u67d0\u4e00\u7ef4\u4e0a\uff0c\u8fd9\u91cc\u7528\u4e00\u6761\u8fc7\u539f\u70b9\u7684\u76f4\u7ebf\u8868\u793a\uff08\u6570\u636e\u5df2\u7ecf\u4e2d\u5fc3\u5316\uff09\uff1a   \u5047\u8bbe\u6211\u4eec\u9009\u62e9\u4e24\u6761\u4e0d\u540c\u7684\u76f4\u7ebf\u505a\u6295\u5f71\uff0c\u90a3\u4e48\u5de6\u53f3\u4e24\u6761\u4e2d\u54ea\u4e2a\u597d\u5462\uff1f\u6839\u636e\u6211\u4eec\u4e4b\u524d\u7684\u65b9\u5dee\u6700\u5927\u5316\u7406\u8bba\uff0c\u5de6\u8fb9\u7684\u597d\uff0c\u56e0\u4e3a\u6295\u5f71\u540e\u7684\u6837\u672c\u70b9\u4e4b\u95f4\u65b9\u5dee\u6700\u5927\uff08\u4e5f\u53ef\u4ee5\u8bf4\u662f\u6295\u5f71\u7684\u7edd\u5bf9\u503c\u4e4b\u548c\u6700\u5927\uff09\u3002  \u8ba1\u7b97\u6295\u5f71\u7684\u65b9\u6cd5\u89c1\u4e0b\u56fe5\uff1a   \u56fe\u4e2d\uff0c\u7ea2\u8272\u70b9\u8868\u793a\u6837\u4f8b \uff0c\u84dd\u8272\u70b9\u8868\u793a\u5728u\u4e0a\u7684\u6295\u5f71\uff0cu\u662f\u76f4\u7ebf\u7684\u659c\u7387\u4e5f\u662f\u76f4\u7ebf\u7684\u65b9\u5411\u5411\u91cf\uff0c\u800c\u4e14\u662f\u5355\u4f4d\u5411\u91cf\u3002\u84dd\u8272\u70b9\u662f \u5728u\u4e0a\u7684\u6295\u5f71\u70b9\uff0c\u79bb\u539f\u70b9\u7684\u8ddd\u79bb\u662f \\ x,u>\uff08\u5373xTu \u6216\u8005uTx \uff09\u3002", 
            "title": "1. \u6700\u5927\u65b9\u5dee\u7406\u8bba"
        }, 
        {
            "location": "/\u5b66\u4e60/\u6df1\u5ea6\u5b66\u4e60/\u4e3b\u6210\u5206\u5206\u6790-2/#246_1", 
            "text": "\u6211\u4eec\u4f7f\u7528\u6700\u5c0f\u4e8c\u4e58\u6cd5\u6765\u786e\u5b9a\u5404\u4e2a\u4e3b\u8f74\uff08\u4e3b\u6210\u5206\uff09\u7684\u65b9\u5411\u3002  \u5bf9\u7ed9\u5b9a\u7684\u4e00\u7ec4\u6570\u636e\uff08\u4e0b\u9762\u7684\u9610\u8ff0\u4e2d\uff0c\u5411\u91cf\u4e00\u822c\u5747\u6307\u5217\u5411\u91cf\uff09\uff1a   \u5176\u6570\u636e\u4e2d\u5fc3\u4f4d\u4e8e:   \u6570\u636e\u4e2d\u5fc3\u5316\uff08\u5c06\u5750\u6807\u539f\u70b9\u79fb\u5230\u6837\u672c\u70b9\u7684\u4e2d\u5fc3\u70b9\uff09\uff1a   \u4e2d\u5fc3\u5316\u540e\u7684\u6570\u636e\u5728\u7b2c\u4e00\u4e3b\u8f74u1\u65b9\u5411\u4e0a\u5206\u5e03\u6563\u7684\u6700\u5f00\uff0c\u4e5f\u5c31\u662f\u8bf4\u5728u1\u65b9\u5411\u4e0a\u7684\u6295\u5f71\u7684\u7edd\u5bf9\u503c\u4e4b\u548c\u6700\u5927\uff08\u4e5f\u53ef\u4ee5\u8bf4\u65b9\u5dee\u6700\u5927\uff09\uff0c\u8ba1\u7b97\u6295\u5f71\u7684\u65b9\u6cd5\u4e0a\u9762\u5df2\u7ecf\u9610\u8ff0\uff0c\u5c31\u662f\u5c06x\u4e0eu1\u505a\u5185\u79ef\uff0c\u7531\u4e8e\u53ea\u9700\u8981\u6c42u1\u7684\u65b9\u5411\uff0c\u6240\u4ee5\u8bbeu1\u4e5f\u662f\u5355\u4f4d\u5411\u91cf\u3002  \u5728\u8fd9\u91cc\uff0c\u4e5f\u5c31\u662f\u6700\u5927\u5316\u4e0b\u5f0f\uff1a   \u7531\u77e9\u9635\u4ee3\u6570\u76f8\u5173\u77e5\u8bc6\u53ef\u77e5\uff0c\u53ef\u4ee5\u5bf9\u7edd\u5bf9\u503c\u7b26\u53f7\u9879\u8fdb\u884c\u5e73\u65b9\u5904\u7406\uff0c\u6bd4\u8f83\u65b9\u4fbf\u3002\u6240\u4ee5\u8fdb\u800c\u5c31\u662f\u6700\u5927\u5316\u4e0b\u5f0f\uff1a   \u4e24\u4e2a\u5411\u91cf\u505a\u5185\u79ef\uff0c\u53ef\u4ee5\u8f6c\u5316\u6210\u77e9\u9635\u4e58\u6cd5\uff1a   \u6240\u4ee5\u76ee\u6807\u51fd\u6570\u53ef\u4ee5\u8868\u793a\u4e3a\uff1a   \u62ec\u53f7\u91cc\u9762\u5c31\u662f\u77e9\u9635\u4e58\u6cd5\u8868\u793a\u5411\u91cf\u5185\u79ef\uff0c\u7531\u4e8e\u5217\u5411\u91cf\u8f6c\u7f6e\u4ee5\u540e\u662f\u884c\u5411\u91cf\uff0c\u884c\u5411\u91cf\u4e58\u4ee5\u5217\u5411\u91cf\u5f97\u5230\u4e00\u4e2a\u6570\uff0c\u4e00\u4e2a\u6570\u7684\u8f6c\u7f6e\u8fd8\u662f\u5176\u672c\u8eab\uff0c\u6240\u4ee5\u53c8\u53ef\u4ee5\u5c06\u76ee\u6807\u51fd\u6570\u5316\u4e3a\uff1a   \u53bb\u62ec\u53f7\uff1a   \u53c8\u7531\u4e8eu1\u548ci\u65e0\u5173\uff0c\u53ef\u4ee5\u62ff\u5230\u6c42\u548c\u7b26\u5916\u9762\uff0c\u4e0a\u5f0f\u5316\u7b80\u4e3a\uff1a   \u5b66\u8fc7\u77e9\u9635\u4ee3\u6570\u7684\u540c\u5b66\u53ef\u80fd\u5df2\u7ecf\u53d1\u73b0\u4e86\uff0c\u4e0a\u5f0f\u62ec\u53f7\u91cc\u9762\u6c42\u548c\u540e\u7684\u7ed3\u679c\uff0c\u5c31\u76f8\u5f53\u4e8e\u4e00\u4e2a\u5927\u77e9\u9635\u4e58\u4ee5\u81ea\u8eab\u7684\u8f6c\u7f6e\uff0c\u5176\u4e2d\uff0c\u8fd9\u4e2a\u5927\u77e9\u9635\u7684\u5f62\u5f0f\u5982\u4e0b\uff1a   X\u77e9\u9635\u7684\u7b2ci\u5217\u5c31\u662fxi  \u4e8e\u662f\u6709\uff1a   \u6240\u4ee5\u76ee\u6807\u51fd\u6570\u6700\u7ec8\u5316\u4e3a\uff1a   \u5176\u4e2d\u7684 \u5c31\u662f\u4e00\u4e2a\u4e8c\u6b21\u578b\uff0c  \u6211\u4eec\u5047\u8bbe \u7684\u67d0\u4e00\u7279\u5f81\u503c\u4e3a\u03bb\uff0c\u5bf9\u5e94\u7684\u7279\u5f81\u5411\u91cf\u4e3a\u03be\uff0c\u6709   \u6240\u4ee5 \uff0c \u662f\u534a\u6b63\u5b9a\u7684\u5bf9\u79f0\u77e9\u9635\uff0c\u5373 \u662f\u534a\u6b63\u5b9a\u9635\u7684\u4e8c\u6b21\u578b\uff0c\u7531\u77e9\u9635\u4ee3\u6570\u77e5\u8bc6\u5f97\u51fa\uff0c\u76ee\u6807\u51fd\u6570\u5b58\u5728\u6700\u5927\u503c\uff01  \u4e0b\u9762\u6211\u4eec\u6c42\u89e3\u6700\u5927\u503c\u3001\u53d6\u5f97\u6700\u5927\u503c\u65f6u1\u7684\u65b9\u5411\u8fd9\u4e24\u4e2a\u95ee\u9898\u3002  \u5148\u89e3\u51b3\u7b2c\u4e00\u4e2a\u95ee\u9898\uff0c\u5bf9\u4e8e\u5411\u91cfx\u7684\u4e8c\u8303\u6570\u5e73\u65b9\u4e3a:   \u540c\u6837\uff0c\u76ee\u6807\u51fd\u6570\u4e5f\u53ef\u4ee5\u8868\u793a\u6210\u6620\u5c04\u540e\u7684\u5411\u91cf\u7684\u4e8c\u8303\u6570\u5e73\u65b9\uff1a   \u628a\u4e8c\u6b21\u578b\u5316\u6210\u4e00\u4e2a\u8303\u6570\u7684\u5f62\u5f0f\uff0c\u7531\u4e8eu1\u53d6\u5355\u4f4d\u5411\u91cf\uff0c\u6700\u5927\u5316\u76ee\u6807\u51fd\u6570\u7684\u57fa\u672c\u95ee\u9898\u4e5f\u5c31\u8f6c\u5316\u4e3a\uff1a\u5bf9\u4e00\u4e2a\u77e9\u9635\uff0c\u5b83\u5bf9\u4e00\u4e2a\u5411\u91cf\u505a\u53d8\u6362\uff0c\u53d8\u6362\u524d\u540e\u7684\u5411\u91cf\u7684\u6a21\u957f\u4f38\u7f29\u5c3a\u5ea6\u5982\u4f55\u624d\u80fd\u6700\u5927\uff1f\u6211\u4eec\u6709\u77e9\u9635\u4ee3\u6570\u4e2d\u7684\u5b9a\u7406\u77e5\uff0c\u5411\u91cf\u7ecf\u77e9\u9635\u6620\u5c04\u524d\u540e\u7684\u5411\u91cf\u957f\u5ea6\u4e4b\u6bd4\u7684\u6700\u5927\u503c\u5c31\u662f\u8fd9\u4e2a\u77e9\u9635\u7684\u6700\u5927\u5947\u5f02\u503c\uff0c\u5373\uff1a   \u5f0f\u4e2d\uff0c \u662f\u77e9\u9635A\u7684\u6700\u5927\u5947\u5f02\u503c\uff08\u4ea6\u662f\u77e9\u9635A\u7684\u4e8c\u8303\u6570\uff09\uff0c\u5b83\u7b49\u4e8e \uff08\u6216 \uff09\u7684\u6700\u5927\u7279\u5f81\u503c\u5f00\u5e73\u65b9\u3002  \u9488\u5bf9\u672c\u95ee\u9898\u6765\u8bf4\uff0c \u662f\u534a\u6b63\u5b9a\u5bf9\u79f0\u9635\uff0c\u4e5f\u5c31\u610f\u5473\u7740\u5b83\u7684\u7279\u5f81\u503c\u90fd\u5927\u4e8e\u7b49\u4e8e0\uff0c\u4e14\u4e0d\u540c\u7279\u5f81\u503c\u5bf9\u5e94\u7684\u7279\u5f81\u5411\u91cf\u662f\u6b63\u4ea4\u7684\uff0c\u6784\u6210\u6240\u5728\u7a7a\u95f4\u7684\u4e00\u7ec4\u5355\u4f4d\u6b63\u4ea4\u57fa\u3002  \u518d\u89e3\u51b3\u7b2c\u4e8c\u4e2a\u95ee\u9898\uff0c\u5bf9\u4e00\u822c\u60c5\u51b5\uff0c\u8bbe\u5bf9\u79f0\u9635 \u7684n\u4e2a\u7279\u5f81\u503c\u5206\u522b\u4e3a\uff1a   \u76f8\u5e94\u7684\u5355\u4f4d\u7279\u5f81\u5411\u91cf\u4e3a\uff1a   \u4efb\u53d6\u4e00\u4e2a\u5411\u91cfx\uff0c\u7528\u7279\u5f81\u5411\u91cf\u6784\u6210\u7684\u7a7a\u95f4\u4e2d\u7684\u8fd9\u7ec4\u57fa\u8868\u793a\u4e3a\uff1a   \u5219\uff1a   \u6240\u4ee5\uff1a   \u9488\u5bf9\u7b2c\u4e8c\u4e2a\u95ee\u9898\uff0c\u6211\u4eec\u53d6\u4e0a\u5f0f\u4e2d\u7684 \uff0c\u76ee\u6807\u51fd\u6570 \u53d6\u5f97\u6700\u5927\u503c\uff0c\u4e5f\u5c31\u662f \u7684\u6700\u5927\u7279\u5f81\u503c\u65f6\uff0c\u5bf9\u5e94\u7684\u7279\u5f81\u5411\u91cf\u7684\u65b9\u5411\uff0c\u5c31\u662f\u7b2c\u4e00\u4e3b\u6210\u5206u1\u7684\u65b9\u5411\uff01\uff08\u7b2c\u4e8c\u4e3b\u6210\u5206\u7684\u65b9\u5411\u4e3a \u7684\u7b2c\u4e8c\u5927\u7279\u5f81\u503c\u5bf9\u5e94\u7684\u7279\u5f81\u5411\u91cf\u7684\u65b9\u5411\uff0c\u4ee5\u6b64\u7c7b\u63a8\uff09\u3002  \u8bc1\u660e\u5b8c\u6bd5\u3002  \u4e3b\u6210\u5206\u6240\u5360\u6574\u4e2a\u4fe1\u606f\u7684\u767e\u5206\u6bd4\u53ef\u7528\u4e0b\u5f0f\u8ba1\u7b97\uff1a   \u5f0f\u4e2d\u5206\u6bcd\u4e3a \u6240\u6709\u5947\u5f02\u503c\u5e73\u65b9\u548c\uff0c\u5206\u5b50\u4e3a\u6240\u9009\u53d6\u7684\u524dk\u5927\u5947\u5f02\u503c\u5e73\u65b9\u548c\u3002  \u6709\u4e9b\u7814\u7a76\u5de5\u4f5c\u8868\u660e\uff0c\u6240\u9009\u7684\u4e3b\u8f74\u603b\u957f\u5ea6\u5360\u6240\u6709\u4e3b\u8f74\u957f\u5ea6\u4e4b\u548c\u7684\u5927\u7ea685% \u5373\u53ef\uff0c\u5176\u5b9e\uff0c\u8fd9\u53ea\u662f\u4e00\u4e2a\u5927\u4f53\u7684\u8bf4\u6cd5\uff0c\u5177\u4f53\u9009\u591a\u5c11\u4e2a\uff0c\u8981\u770b\u5b9e\u9645\u60c5\u51b5\u800c\u5b9a\u3002", 
            "title": "2. \u6700\u5c0f\u4e8c\u4e58\u6cd5"
        }, 
        {
            "location": "/\u5b66\u4e60/\u6df1\u5ea6\u5b66\u4e60/\u4e3b\u6210\u5206\u5206\u6790-2/#3", 
            "text": "PCA\u5c06n\u4e2a\u7279\u5f81\u964d\u7ef4\u5230k\u4e2a\uff0c\u53ef\u4ee5\u7528\u6765\u8fdb\u884c\u6570\u636e\u538b\u7f29\uff0c\u4f8b\u5982100\u7ef4\u7684\u5411\u91cf\u6700\u540e\u53ef\u4ee5\u752810\u7ef4\u6765\u8868\u793a\uff0c\u90a3\u4e48\u538b\u7f29\u7387\u4e3a90%\u3002\u540c\u6837\u56fe\u50cf\u5904\u7406\u9886\u57df\u7684KL\u53d8\u6362\u4f7f\u7528PCA\u505a\u56fe\u50cf\u538b\u7f29\uff0c\u4eba\u8138\u68c0\u6d4b\u548c\u5339\u914d\u3002\u6bd4\u5982\u5982\u4e0b\u6458\u81ea\u53e6\u4e00\u7bc7 \u535a\u5ba2 \u4e0a\u7684Matlab\u5b9e\u9a8c\u7ed3\u679c\uff1a     \u53ef\u89c1\u6d4b\u8bd5\u6837\u672c\u4e3a\u4eba\u8138\u7684\u6837\u672c\u7684\u91cd\u5efa\u8bef\u5dee\u663e\u7136\u5c0f\u4e8e\u975e\u4eba\u8138\u7684\u91cd\u5efa\u8bef\u5dee\u3002  \u53e6\u5916PCA\u8fd8\u53ef\u4ee5\u8054\u7cfb\u5947\u5f02\u503c\u5206\u89e3\uff08SVD\uff09\uff0c\u6765\u7528\u4e8e\u9884\u6d4b\u77e9\u9635\u4e2d\u7f3a\u5931\u7684\u5143\u7d20\uff0c\u53ef\u4ee5\u5e94\u7528\u5230\u8bc4\u5206\u9884\u6d4b\u7b49\u5b9e\u9645\u9879\u76ee\u4e2d\u3002\u8be6\u89c1\u540e\u7eedSVD\u7684\u535a\u5ba2\u3002  \u6709\u95ee\u9898\u6216\u8005\u60f3\u6cd5\u53ef\u4ee5\u548c\u6211\u4ea4\u6d41\uff1a  \u8f6c\u8f7d\u8bf7\u58f0\u660e\u51fa\u5904\uff1a http://blog.csdn.net/zhongkelee/article/details/44064401", 
            "title": "3.\u610f\u4e49"
        }, 
        {
            "location": "/\u5b66\u4e60/\u6df1\u5ea6\u5b66\u4e60/\u4e3b\u6210\u5206\u5206\u6790/", 
            "text": "\u8f6c\u8f7d\u8bf7\u58f0\u660e\u51fa\u5904\uff1a\nhttp://blog.csdn.net/zhongkelee/article/details/44064401\n\n\n\u4e00\u3001PCA\u7b80\u4ecb\n\n\n1. \u76f8\u5173\u80cc\u666f\n\n\n\u4e0a\u5b8c\u9648\u6069\u7ea2\u8001\u5e08\u7684\u300a\u673a\u5668\u5b66\u4e60\u4e0e\u77e5\u8bc6\u53d1\u73b0\u300b\u548c\u5b63\u6d77\u6ce2\u8001\u5e08\u7684\u300a\u77e9\u9635\u4ee3\u6570\u300b\u4e24\u95e8\u8bfe\u4e4b\u540e\uff0c\u9887\u6709\u4f53\u4f1a\u3002\u6700\u8fd1\u5728\u505a\u4e3b\u6210\u5206\u5206\u6790\u548c\u5947\u5f02\u503c\u5206\u89e3\u65b9\u9762\u7684\u9879\u76ee\uff0c\u6240\u4ee5\u8bb0\u5f55\u4e00\u4e0b\u5fc3\u5f97\u4f53\u4f1a\u3002\n\n\n\u5728\u8bb8\u591a\u9886\u57df\u7684\u7814\u7a76\u4e0e\u5e94\u7528\u4e2d\uff0c\u5f80\u5f80\u9700\u8981\u5bf9\u53cd\u6620\u4e8b\u7269\u7684\u591a\u4e2a\u53d8\u91cf\u8fdb\u884c\u5927\u91cf\u7684\u89c2\u6d4b\uff0c\u6536\u96c6\u5927\u91cf\u6570\u636e\u4ee5\u4fbf\u8fdb\u884c\u5206\u6790\u5bfb\u627e\u89c4\u5f8b\u3002\u591a\u53d8\u91cf\u5927\u6837\u672c\u65e0\u7591\u4f1a\u4e3a\u7814\u7a76\u548c\u5e94\u7528\u63d0\u4f9b\u4e86\u4e30\u5bcc\u7684\u4fe1\u606f\uff0c\u4f46\u4e5f\u5728\u4e00\u5b9a\u7a0b\u5ea6\u4e0a\u589e\u52a0\u4e86\u6570\u636e\u91c7\u96c6\u7684\u5de5\u4f5c\u91cf\uff0c\u66f4\u91cd\u8981\u7684\u662f\u5728\u591a\u6570\u60c5\u51b5\u4e0b\uff0c\u8bb8\u591a\u53d8\u91cf\u4e4b\u95f4\u53ef\u80fd\u5b58\u5728\u76f8\u5173\u6027\uff0c\u4ece\u800c\u589e\u52a0\u4e86\u95ee\u9898\u5206\u6790\u7684\u590d\u6742\u6027\uff0c\u540c\u65f6\u5bf9\u5206\u6790\u5e26\u6765\u4e0d\u4fbf\u3002\u5982\u679c\u5206\u522b\u5bf9\u6bcf\u4e2a\u6307\u6807\u8fdb\u884c\u5206\u6790\uff0c\u5206\u6790\u5f80\u5f80\u662f\u5b64\u7acb\u7684\uff0c\u800c\u4e0d\u662f\u7efc\u5408\u7684\u3002\u76f2\u76ee\u51cf\u5c11\u6307\u6807\u4f1a\u635f\u5931\u5f88\u591a\u4fe1\u606f\uff0c\u5bb9\u6613\u4ea7\u751f\u9519\u8bef\u7684\u7ed3\u8bba\u3002\n\n\n\u56e0\u6b64\u9700\u8981\u627e\u5230\u4e00\u4e2a\u5408\u7406\u7684\u65b9\u6cd5\uff0c\u5728\u51cf\u5c11\u9700\u8981\u5206\u6790\u7684\u6307\u6807\u540c\u65f6\uff0c\u5c3d\u91cf\u51cf\u5c11\u539f\u6307\u6807\u5305\u542b\u4fe1\u606f\u7684\u635f\u5931\uff0c\u4ee5\u8fbe\u5230\u5bf9\u6240\u6536\u96c6\u6570\u636e\u8fdb\u884c\u5168\u9762\u5206\u6790\u7684\u76ee\u7684\u3002\u7531\u4e8e\u5404\u53d8\u91cf\u95f4\u5b58\u5728\u4e00\u5b9a\u7684\u76f8\u5173\u5173\u7cfb\uff0c\u56e0\u6b64\u6709\u53ef\u80fd\u7528\u8f83\u5c11\u7684\u7efc\u5408\u6307\u6807\u5206\u522b\u7efc\u5408\u5b58\u5728\u4e8e\u5404\u53d8\u91cf\u4e2d\u7684\u5404\u7c7b\u4fe1\u606f\u3002\u4e3b\u6210\u5206\u5206\u6790\u4e0e\u56e0\u5b50\u5206\u6790\u5c31\u5c5e\u4e8e\u8fd9\u7c7b\u964d\u7ef4\u7684\u65b9\u6cd5\u3002\n\n\n2. \u95ee\u9898\u63cf\u8ff0\n\n\n\u4e0b\u88681\u662f\u67d0\u4e9b\u5b66\u751f\u7684\u8bed\u6587\u3001\u6570\u5b66\u3001\u7269\u7406\u3001\u5316\u5b66\u6210\u7ee9\u7edf\u8ba1\uff1a\n\n\n\n\n\u9996\u5148\uff0c\u5047\u8bbe\u8fd9\u4e9b\u79d1\u76ee\u6210\u7ee9\u4e0d\u76f8\u5173\uff0c\u4e5f\u5c31\u662f\u8bf4\u67d0\u4e00\u79d1\u76ee\u8003\u591a\u5c11\u5206\u4e0e\u5176\u4ed6\u79d1\u76ee\u6ca1\u6709\u5173\u7cfb\u3002\u90a3\u4e48\u4e00\u773c\u5c31\u80fd\u770b\u51fa\u6765\uff0c\u6570\u5b66\u3001\u7269\u7406\u3001\u5316\u5b66\u8fd9\u4e09\u95e8\u8bfe\u7684\u6210\u7ee9\u6784\u6210\u4e86\u8fd9\u7ec4\u6570\u636e\u7684\u4e3b\u6210\u5206\uff08\u5f88\u663e\u7136\uff0c\u6570\u5b66\u4f5c\u4e3a\u7b2c\u4e00\u4e3b\u6210\u5206\uff0c\u56e0\u4e3a\u6570\u5b66\u6210\u7ee9\u62c9\u7684\u6700\u5f00\uff09\u3002\u4e3a\u4ec0\u4e48\u4e00\u773c\u80fd\u770b\u51fa\u6765\uff1f\u56e0\u4e3a\u5750\u6807\u8f74\u9009\u5bf9\u4e86\uff01\u4e0b\u9762\u518d\u770b\u4e00\u7ec4\u5b66\u751f\u7684\u6570\u5b66\u3001\u7269\u7406\u3001\u5316\u5b66\u3001\u8bed\u6587\u3001\u5386\u53f2\u3001\u82f1\u8bed\u6210\u7ee9\u7edf\u8ba1\uff0c\u89c1\u88682\uff0c\u8fd8\u80fd\u4e0d\u80fd\u4e00\u773c\u770b\u51fa\u6765\uff1a\n\n\n\n\n\u6570\u636e\u592a\u591a\u4e86\uff0c\u4ee5\u81f3\u4e8e\u770b\u8d77\u6765\u6709\u4e9b\u51cc\u4e71\uff01\u4e5f\u5c31\u662f\u8bf4\uff0c\u65e0\u6cd5\u76f4\u63a5\u770b\u51fa\u8fd9\u7ec4\u6570\u636e\u7684\u4e3b\u6210\u5206\uff0c\u56e0\u4e3a\u5728\u5750\u6807\u7cfb\u4e0b\u8fd9\u7ec4\u6570\u636e\u5206\u5e03\u7684\u5f88\u6563\u4e71\u3002\u7a76\u5176\u539f\u56e0\uff0c\u662f\u56e0\u4e3a\u65e0\u6cd5\u62e8\u5f00\u906e\u4f4f\u8089\u773c\u7684\u8ff7\u96fe~\u5982\u679c\u628a\u8fd9\u4e9b\u6570\u636e\u5728\u76f8\u5e94\u7684\u7a7a\u95f4\u4e2d\u8868\u793a\u51fa\u6765\uff0c\u4e5f\u8bb8\u4f60\u5c31\u80fd\u6362\u4e00\u4e2a\u89c2\u5bdf\u89d2\u5ea6\u627e\u51fa\u4e3b\u6210\u5206\u3002\u5982\u4e0b\u56fe1\u6240\u793a\uff1a\n\n\n\n\n\u4f46\u662f\uff0c\u5bf9\u4e8e\u66f4\u9ad8\u7ef4\u7684\u6570\u636e\uff0c\u80fd\u60f3\u8c61\u5176\u5206\u5e03\u5417\uff1f\u5c31\u7b97\u80fd\u63cf\u8ff0\u5206\u5e03\uff0c\u5982\u4f55\u7cbe\u786e\u5730\u627e\u5230\u8fd9\u4e9b\u4e3b\u6210\u5206\u7684\u8f74\uff1f\u5982\u4f55\u8861\u91cf\u4f60\u63d0\u53d6\u7684\u4e3b\u6210\u5206\u5230\u5e95\u5360\u4e86\u6574\u4e2a\u6570\u636e\u7684\u591a\u5c11\u4fe1\u606f\uff1f\u6240\u4ee5\uff0c\u6211\u4eec\u5c31\u8981\u7528\u5230\u4e3b\u6210\u5206\u5206\u6790\u7684\u5904\u7406\u65b9\u6cd5\u3002\n\n\n3. \u6570\u636e\u964d\u7ef4\n\n\n\u4e3a\u4e86\u8bf4\u660e\u4ec0\u4e48\u662f\u6570\u636e\u7684\u4e3b\u6210\u5206\uff0c\u5148\u4ece\u6570\u636e\u964d\u7ef4\u8bf4\u8d77\u3002\u6570\u636e\u964d\u7ef4\u662f\u600e\u4e48\u56de\u4e8b\u513f\uff1f\u5047\u8bbe\u4e09\u7ef4\u7a7a\u95f4\u4e2d\u6709\u4e00\u7cfb\u5217\u70b9\uff0c\u8fd9\u4e9b\u70b9\u5206\u5e03\u5728\u4e00\u4e2a\u8fc7\u539f\u70b9\u7684\u659c\u9762\u4e0a\uff0c\u5982\u679c\u4f60\u7528\u81ea\u7136\u5750\u6807\u7cfbx,y,z\u8fd9\u4e09\u4e2a\u8f74\u6765\u8868\u793a\u8fd9\u7ec4\u6570\u636e\u7684\u8bdd\uff0c\u9700\u8981\u4f7f\u7528\u4e09\u4e2a\u7ef4\u5ea6\uff0c\u800c\u4e8b\u5b9e\u4e0a\uff0c\u8fd9\u4e9b\u70b9\u7684\u5206\u5e03\u4ec5\u4ec5\u662f\u5728\u4e00\u4e2a\u4e8c\u7ef4\u7684\u5e73\u9762\u4e0a\uff0c\u90a3\u4e48\uff0c\u95ee\u9898\u51fa\u5728\u54ea\u91cc\uff1f\u5982\u679c\u4f60\u518d\u4ed4\u7ec6\u60f3\u60f3\uff0c\u80fd\u4e0d\u80fd\u628ax,y,z\u5750\u6807\u7cfb\u65cb\u8f6c\u4e00\u4e0b\uff0c\u4f7f\u6570\u636e\u6240\u5728\u5e73\u9762\u4e0ex,y\u5e73\u9762\u91cd\u5408\uff1f\u8fd9\u5c31\u5bf9\u4e86\uff01\u5982\u679c\u628a\u65cb\u8f6c\u540e\u7684\u5750\u6807\u7cfb\u8bb0\u4e3ax',y',z'\uff0c\u90a3\u4e48\u8fd9\u7ec4\u6570\u636e\u7684\u8868\u793a\u53ea\u7528x'\u548cy'\u4e24\u4e2a\u7ef4\u5ea6\u8868\u793a\u5373\u53ef\uff01\u5f53\u7136\u4e86\uff0c\u5982\u679c\u60f3\u6062\u590d\u539f\u6765\u7684\u8868\u793a\u65b9\u5f0f\uff0c\u90a3\u5c31\u5f97\u628a\u8fd9\u4e24\u4e2a\u5750\u6807\u4e4b\u95f4\u7684\u53d8\u6362\u77e9\u9635\u5b58\u4e0b\u6765\u3002\u8fd9\u6837\u5c31\u80fd\u628a\u6570\u636e\u7ef4\u5ea6\u964d\u4e0b\u6765\u4e86\uff01\u4f46\u662f\uff0c\u6211\u4eec\u8981\u770b\u5230\u8fd9\u4e2a\u8fc7\u7a0b\u7684\u672c\u8d28\uff0c\u5982\u679c\u628a\u8fd9\u4e9b\u6570\u636e\u6309\u884c\u6216\u8005\u6309\u5217\u6392\u6210\u4e00\u4e2a\u77e9\u9635\uff0c\u90a3\u4e48\u8fd9\u4e2a\u77e9\u9635\u7684\u79e9\u5c31\u662f2\uff01\u8fd9\u4e9b\u6570\u636e\u4e4b\u95f4\u662f\u6709\u76f8\u5173\u6027\u7684\uff0c\u8fd9\u4e9b\u6570\u636e\u6784\u6210\u7684\u8fc7\u539f\u70b9\u7684\u5411\u91cf\u7684\u6700\u5927\u7ebf\u6027\u65e0\u5173\u7ec4\u5305\u542b2\u4e2a\u5411\u91cf\uff0c\u8fd9\u5c31\u662f\u4e3a\u4ec0\u4e48\u4e00\u5f00\u59cb\u5c31\u5047\u8bbe\u5e73\u9762\u8fc7\u539f\u70b9\u7684\u539f\u56e0\uff01\u90a3\u4e48\u5982\u679c\u5e73\u9762\u4e0d\u8fc7\u539f\u70b9\u5462\uff1f\u8fd9\u5c31\u662f\u6570\u636e\u4e2d\u5fc3\u5316\u7684\u7f18\u6545\uff01\u5c06\u5750\u6807\u539f\u70b9\u5e73\u79fb\u5230\u6570\u636e\u4e2d\u5fc3\uff0c\u8fd9\u6837\u539f\u672c\u4e0d\u76f8\u5173\u7684\u6570\u636e\u5728\u8fd9\u4e2a\u65b0\u5750\u6807\u7cfb\u4e2d\u5c31\u6709\u76f8\u5173\u6027\u4e86\uff01\u6709\u8da3\u7684\u662f\uff0c\u4e09\u70b9\u4e00\u5b9a\u5171\u9762\uff0c\u4e5f\u5c31\u662f\u8bf4\u4e09\u7ef4\u7a7a\u95f4\u4e2d\u4efb\u610f\u4e09\u70b9\u4e2d\u5fc3\u5316\u540e\u90fd\u662f\u7ebf\u6027\u76f8\u5173\u7684\uff0c\u4e00\u822c\u6765\u8bb2n\u7ef4\u7a7a\u95f4\u4e2d\u7684n\u4e2a\u70b9\u4e00\u5b9a\u80fd\u5728\u4e00\u4e2an-1\u7ef4\u5b50\u7a7a\u95f4\u4e2d\u5206\u6790\uff01\n\n\n\u4e0a\u4e00\u6bb5\u6587\u5b57\u4e2d\uff0c\u8ba4\u4e3a\u628a\u6570\u636e\u964d\u7ef4\u540e\u5e76\u6ca1\u6709\u4e22\u5f03\u4efb\u4f55\u4e1c\u897f\uff0c\u56e0\u4e3a\u8fd9\u4e9b\u6570\u636e\u5728\u5e73\u9762\u4ee5\u5916\u7684\u7b2c\u4e09\u4e2a\u7ef4\u5ea6\u7684\u5206\u91cf\u90fd\u4e3a0\u3002\u73b0\u5728\uff0c\u5047\u8bbe\u8fd9\u4e9b\u6570\u636e\u5728z'\u8f74\u6709\u4e00\u4e2a\u5f88\u5c0f\u7684\u6296\u52a8\uff0c\u90a3\u4e48\u6211\u4eec\u4ecd\u7136\u7528\u4e0a\u8ff0\u7684\u4e8c\u7ef4\u8868\u793a\u8fd9\u4e9b\u6570\u636e\uff0c\u7406\u7531\u662f\u6211\u4eec\u53ef\u4ee5\u8ba4\u4e3a\u8fd9\u4e24\u4e2a\u8f74\u7684\u4fe1\u606f\u662f\u6570\u636e\u7684\u4e3b\u6210\u5206\uff0c\u800c\u8fd9\u4e9b\u4fe1\u606f\u5bf9\u4e8e\u6211\u4eec\u7684\u5206\u6790\u5df2\u7ecf\u8db3\u591f\u4e86\uff0cz'\u8f74\u4e0a\u7684\u6296\u52a8\u5f88\u6709\u53ef\u80fd\u662f\u566a\u58f0\uff0c\u4e5f\u5c31\u662f\u8bf4\u672c\u6765\u8fd9\u7ec4\u6570\u636e\u662f\u6709\u76f8\u5173\u6027\u7684\uff0c\u566a\u58f0\u7684\u5f15\u5165\uff0c\u5bfc\u81f4\u4e86\u6570\u636e\u4e0d\u5b8c\u5168\u76f8\u5173\uff0c\u4f46\u662f\uff0c\u8fd9\u4e9b\u6570\u636e\u5728z'\u8f74\u4e0a\u7684\u5206\u5e03\u4e0e\u539f\u70b9\u6784\u6210\u7684\u5939\u89d2\u975e\u5e38\u5c0f\uff0c\u4e5f\u5c31\u662f\u8bf4\u5728z'\u8f74\u4e0a\u6709\u5f88\u5927\u7684\u76f8\u5173\u6027\uff0c\u7efc\u5408\u8fd9\u4e9b\u8003\u8651\uff0c\u5c31\u53ef\u4ee5\u8ba4\u4e3a\u6570\u636e\u5728x',y' \u8f74\u4e0a\u7684\u6295\u5f71\u6784\u6210\u4e86\u6570\u636e\u7684\u4e3b\u6210\u5206\uff01\n\n\n\u8bfe\u5802\u4e0a\u8001\u5e08\u8c08\u5230\u7684\u7279\u5f81\u9009\u62e9\u7684\u95ee\u9898\uff0c\u5176\u5b9e\u5c31\u662f\u8981\u5254\u9664\u7684\u7279\u5f81\u4e3b\u8981\u662f\u548c\u7c7b\u6807\u7b7e\u65e0\u5173\u7684\u7279\u5f81\u3002\u800c\u8fd9\u91cc\u7684\u7279\u5f81\u5f88\u591a\u662f\u548c\u7c7b\u6807\u7b7e\u6709\u5173\u7684\uff0c\u4f46\u91cc\u9762\u5b58\u5728\u566a\u58f0\u6216\u8005\u5197\u4f59\u3002\u5728\u8fd9\u79cd\u60c5\u51b5\u4e0b\uff0c\u9700\u8981\u4e00\u79cd\u7279\u5f81\u964d\u7ef4\u7684\u65b9\u6cd5\u6765\u51cf\u5c11\u7279\u5f81\u6570\uff0c\u51cf\u5c11\u566a\u97f3\u548c\u5197\u4f59\uff0c\u51cf\u5c11\u8fc7\u5ea6\u62df\u5408\u7684\u53ef\u80fd\u6027\u3002\n\n\nPCA\u7684\u601d\u60f3\u662f\u5c06n\u7ef4\u7279\u5f81\u6620\u5c04\u5230k\u7ef4\u4e0a\uff08k\\\nn\uff09\uff0c\u8fd9k\u7ef4\u662f\u5168\u65b0\u7684\u6b63\u4ea4\u7279\u5f81\u3002\u8fd9k\u7ef4\u7279\u5f81\u79f0\u4e3a\u4e3b\u6210\u5206\uff0c\u662f\u91cd\u65b0\u6784\u9020\u51fa\u6765\u7684k\u7ef4\u7279\u5f81\uff0c\u800c\u4e0d\u662f\u7b80\u5355\u5730\u4ecen\u7ef4\u7279\u5f81\u4e2d\u53bb\u9664\u5176\u4f59n-k\u7ef4\u7279\u5f81\u3002\n\n\n\u4e8c\u3001PCA\u5b9e\u4f8b\n\n\n\u73b0\u5728\u5047\u8bbe\u6709\u4e00\u7ec4\u6570\u636e\u5982\u4e0b\uff1a\n\n\n\n\n\u884c\u4ee3\u8868\u4e86\u6837\u4f8b\uff0c\u5217\u4ee3\u8868\u7279\u5f81\uff0c\u8fd9\u91cc\u670910\u4e2a\u6837\u4f8b\uff0c\u6bcf\u4e2a\u6837\u4f8b\u4e24\u4e2a\u7279\u5f81\u3002\u53ef\u4ee5\u8fd9\u6837\u8ba4\u4e3a\uff0c\u670910\u7bc7\u6587\u6863\uff0cx\u662f10\u7bc7\u6587\u6863\u4e2d\u201clearn\u201d\u51fa\u73b0\u7684TF-IDF\uff0cy\u662f10\u7bc7\u6587\u6863\u4e2d\u201cstudy\u201d\u51fa\u73b0\u7684TF-IDF\u3002\n\n\u7b2c\u4e00\u6b65\n\uff0c\u5206\u522b\u6c42x\u548cy\u7684\u5e73\u5747\u503c\uff0c\u7136\u540e\u5bf9\u4e8e\u6240\u6709\u7684\u6837\u4f8b\uff0c\u90fd\u51cf\u53bb\u5bf9\u5e94\u7684\u5747\u503c\u3002\u8fd9\u91ccx\u7684\u5747\u503c\u662f1.81\uff0cy\u7684\u5747\u503c\u662f1.91\uff0c\u90a3\u4e48\u4e00\u4e2a\u6837\u4f8b\u51cf\u53bb\u5747\u503c\u540e\u5373\u4e3a\uff080.69,0.49\uff09\uff0c\u5f97\u5230\n\n\n\n\n\u7b2c\u4e8c\u6b65\n\uff0c\u6c42\u7279\u5f81\u534f\u65b9\u5dee\u77e9\u9635\uff0c\u5982\u679c\u6570\u636e\u662f3\u7ef4\uff0c\u90a3\u4e48\u534f\u65b9\u5dee\u77e9\u9635\u662f\n\n\n\n\nC \n=\\begin{pmatrix}  \n   cov(x,x) \n cov(x,y) \n cov(x,z)\n\\\\ cov(y,x) \n cov(y,y) \n cov(y,z)\n\\\\ cov(z,x) \n cov(z,y) \n cov(z,z)\n\\end{pmatrix}\n\n\nC \n=\\begin{pmatrix}  \n   cov(x,x) & cov(x,y) & cov(x,z)\n\\\\ cov(y,x) & cov(y,y) & cov(y,z)\n\\\\ cov(z,x) & cov(z,y) & cov(z,z)\n\\end{pmatrix}\n\n\n\n\n\u8fd9\u91cc\u53ea\u6709\nx\nx\n\u548c\ny\ny\n\uff0c\u6c42\u89e3\u5f97\n\n\n\n\ncov =\\begin{pmatrix}  0.6166 \n 0.6154 \\\\ 0.6154 \n 0.7166 \\end{pmatrix}\n\n\ncov =\\begin{pmatrix}  0.6166 & 0.6154 \\\\ 0.6154 & 0.7166 \\end{pmatrix}\n\n\n\n\n\u5bf9\u89d2\u7ebf\u4e0a\u5206\u522b\u662f\nx\nx\n\u548c\ny\ny\n\u7684\u65b9\u5dee\uff0c\u975e\u5bf9\u89d2\u7ebf\u4e0a\u662f\u534f\u65b9\u5dee\u3002\u534f\u65b9\u5dee\u662f\u8861\u91cf\u4e24\u4e2a\u53d8\u91cf\u540c\u65f6\u53d8\u5316\u7684\u53d8\u5316\u7a0b\u5ea6\u3002\u534f\u65b9\u5dee\u5927\u4e8e0\u8868\u793a\nx\nx\n\u548c\ny\ny\n\u82e5\u4e00\u4e2a\u589e\uff0c\u53e6\u4e00\u4e2a\u4e5f\u589e\uff1b\u5c0f\u4e8e0\u8868\u793a\u4e00\u4e2a\u589e\uff0c\u4e00\u4e2a\u51cf\u3002\u5982\u679c\n\uff58\n\uff58\n\u548c\n\uff59\n\uff59\n\u662f\u7edf\u8ba1\u72ec\u7acb\u7684\uff0c\u90a3\u4e48\u4e8c\u8005\u4e4b\u95f4\u7684\u534f\u65b9\u5dee\u5c31\u662f\uff10\uff1b\u4f46\u662f\u534f\u65b9\u5dee\u662f\uff10\uff0c\u5e76\u4e0d\u80fd\u8bf4\u660e\n\uff58\n\uff58\n\u548c\n\uff59\n\uff59\n\u662f\u72ec\u7acb\u7684\u3002\u534f\u65b9\u5dee\u7edd\u5bf9\u503c\u8d8a\u5927\uff0c\u4e24\u8005\u5bf9\u5f7c\u6b64\u7684\u5f71\u54cd\u8d8a\u5927\uff0c\u53cd\u4e4b\u8d8a\u5c0f\u3002\u534f\u65b9\u5dee\u662f\u6ca1\u6709\u5355\u4f4d\u7684\u91cf\uff0c\u56e0\u6b64\uff0c\u5982\u679c\u540c\u6837\u7684\u4e24\u4e2a\u53d8\u91cf\u6240\u91c7\u7528\u7684\u91cf\u7eb2\u53d1\u751f\u53d8\u5316\uff0c\u5b83\u4eec\u7684\u534f\u65b9\u5dee\u4e5f\u4f1a\u4ea7\u751f\u6811\u679d\u4e0a\u7684\u53d8\u5316\u3002\n\n\n\u7b2c\u4e09\u6b65\n\uff0c\u6c42\u534f\u65b9\u5dee\u7684\u7279\u5f81\u503c\u548c\u7279\u5f81\u5411\u91cf\uff0c\u5f97\u5230\n\n\n\n\neigenvalues =\\begin{pmatrix}  0.0491 \\\\ 1.2840 \\end{pmatrix}$$\n$$eigenvalues =\\begin{pmatrix}  -0.7352 \n -0.6779  \\\\ 0.6779 \n -0.7352 \\end{pmatrix}\n\n\neigenvalues =\\begin{pmatrix}  0.0491 \\\\ 1.2840 \\end{pmatrix}$$\n$$eigenvalues =\\begin{pmatrix}  -0.7352 & -0.6779  \\\\ 0.6779 & -0.7352 \\end{pmatrix}\n\n\n\n\n\u4e0a\u9762\u662f\u4e24\u4e2a\u7279\u5f81\u503c\uff0c\u4e0b\u9762\u662f\u5bf9\u5e94\u7684\u7279\u5f81\u5411\u91cf\uff0c\u7279\u5f81\u503c\n0.0491\n0.0491\n\u5bf9\u5e94\u7279\u5f81\u5411\u91cf\u4e3a\n \n(-0.7352, 0.6779)^T\n(-0.7352, 0.6779)^T\n \n\uff0c\u8fd9\u91cc\u7684\u7279\u5f81\u5411\u91cf\u90fd\u5f52\u4e00\u5316\u4e3a\u5355\u4f4d\u5411\u91cf\u3002\n\n\n\u7b2c\u56db\u6b65\n\uff0c\u5c06\u7279\u5f81\u503c\u6309\u7167\u4ece\u5927\u5230\u5c0f\u7684\u987a\u5e8f\u6392\u5e8f\uff0c\u9009\u62e9\u5176\u4e2d\u6700\u5927\u7684\nk\nk\n\u4e2a\uff0c\u7136\u540e\u5c06\u5176\u5bf9\u5e94\u7684\nk\nk\n\u4e2a\u7279\u5f81\u5411\u91cf\u5206\u522b\u4f5c\u4e3a\u5217\u5411\u91cf\u7ec4\u6210\u7279\u5f81\u5411\u91cf\u77e9\u9635\u3002\n\n\n\u8fd9\u91cc\u7279\u5f81\u503c\u53ea\u6709\u4e24\u4e2a\uff0c\u6211\u4eec\u9009\u62e9\u5176\u4e2d\u6700\u5927\u7684\u90a3\u4e2a\uff0c\u8fd9\u91cc\u662f1.2840 \uff0c\u5bf9\u5e94\u7684\u7279\u5f81\u5411\u91cf\u662f\n(-0.6779, -0.7352)^T\n(-0.6779, -0.7352)^T\n\u3002\n\n\n\u7b2c\u4e94\u6b65\n\uff0c\u5c06\u6837\u672c\u70b9\u6295\u5f71\u5230\u9009\u53d6\u7684\u7279\u5f81\u5411\u91cf\u4e0a\u3002\u5047\u8bbe\u6837\u4f8b\u6570\u4e3am\uff0c\u7279\u5f81\u6570\u4e3an\uff0c\u51cf\u53bb\u5747\u503c\u540e\u7684\u6837\u672c\u77e9\u9635\u4e3aDataAdjust(m*n)\uff0c\u534f\u65b9\u5dee\u77e9\u9635\u662fn*n\uff0c\u9009\u53d6\u7684k\u4e2a\u7279\u5f81\u5411\u91cf\u7ec4\u6210\u7684\u77e9\u9635\u4e3aEigenVectors(n*k)\u3002\u90a3\u4e48\u6295\u5f71\u540e\u7684\u6570\u636eFinalData\u4e3a\n\n\nFinalData(10*1) = DataAdjust(10*2\u77e9\u9635) x \u7279\u5f81\u5411\u91cf(-0.677873399, -0.735178656)T\n\n\n\u5f97\u5230\u7684\u7ed3\u679c\u662f\n\n\n \n\n\n\u8fd9\u6837\uff0c\u5c31\u5c06\u539f\u59cb\u6837\u4f8b\u7684n\u7ef4\u7279\u5f81\u53d8\u6210\u4e86k\u7ef4\uff0c\u8fd9k\u7ef4\u5c31\u662f\u539f\u59cb\u7279\u5f81\u5728k\u7ef4\u4e0a\u7684\u6295\u5f71\u3002\n\n\n\u4e0a\u9762\u7684\u6570\u636e\u53ef\u4ee5\u8ba4\u4e3a\u662flearn\u548cstudy\u7279\u5f81\u878d\u5408\u4e3a\u4e00\u4e2a\u65b0\u7684\u7279\u5f81\u53eb\u505aLS\u7279\u5f81\uff0c\u8be5\u7279\u5f81\u57fa\u672c\u4e0a\u4ee3\u8868\u4e86\u8fd9\u4e24\u4e2a\u7279\u5f81\u3002\u4e0a\u8ff0\u8fc7\u7a0b\u5982\u4e0b\u56fe2\u63cf\u8ff0\uff1a\n\n\n\n\n\u6b63\u53f7\u8868\u793a\u9884\u5904\u7406\u540e\u7684\u6837\u672c\u70b9\uff0c\u659c\u7740\u7684\u4e24\u6761\u7ebf\u5c31\u5206\u522b\u662f\u6b63\u4ea4\u7684\u7279\u5f81\u5411\u91cf\uff08\u7531\u4e8e\u534f\u65b9\u5dee\u77e9\u9635\u662f\u5bf9\u79f0\u7684\uff0c\u56e0\u6b64\u5176\u7279\u5f81\u5411\u91cf\u6b63\u4ea4\uff09\uff0c\u6700\u540e\u4e00\u6b65\u7684\u77e9\u9635\u4e58\u6cd5\u5c31\u662f\u5c06\u539f\u59cb\u6837\u672c\u70b9\u5206\u522b\u5f80\u7279\u5f81\u5411\u91cf\u5bf9\u5e94\u7684\u8f74\u4e0a\u505a\u6295\u5f71\u3002\n\n\n\u6574\u4e2aPCA\u8fc7\u7a0b\u8c8c\u4f3c\u53ca\u5176\u7b80\u5355\uff0c\u5c31\u662f\u6c42\u534f\u65b9\u5dee\u7684\u7279\u5f81\u503c\u548c\u7279\u5f81\u5411\u91cf\uff0c\u7136\u540e\u505a\u6570\u636e\u8f6c\u6362\u3002\u4f46\u662f\u6709\u6ca1\u6709\u89c9\u5f97\u5f88\u795e\u5947\uff0c\u4e3a\u4ec0\u4e48\u6c42\u534f\u65b9\u5dee\u7684\u7279\u5f81\u5411\u91cf\u5c31\u662f\u6700\u7406\u60f3\u7684k\u7ef4\u5411\u91cf\uff1f\u5176\u80cc\u540e\u9690\u85cf\u7684\u610f\u4e49\u662f\u4ec0\u4e48\uff1f\u6574\u4e2aPCA\u7684\u610f\u4e49\u662f\u4ec0\u4e48\uff1f\n\n\n\u4e09\u3001PCA\u63a8\u5bfc\n\n\n\u5148\u770b\u4e0b\u9762\u8fd9\u5e45\u56fe\uff1a\n\n\n\n\n\u5728\u7b2c\u4e00\u90e8\u5206\u4e2d\uff0c\u6211\u4eec\u4e3e\u4e86\u4e00\u4e2a\u5b66\u751f\u6210\u7ee9\u7684\u4f8b\u5b50\uff0c\u91cc\u9762\u7684\u6570\u636e\u70b9\u662f\u516d\u7ef4\u7684\uff0c\u5373\u6bcf\u4e2a\u89c2\u6d4b\u503c\u662f6\u7ef4\u7a7a\u95f4\u4e2d\u7684\u4e00\u4e2a\u70b9\u3002\u6211\u4eec\u5e0c\u671b\u5c066\u7ef4\u7a7a\u95f4\u7528\u4f4e\u7ef4\u7a7a\u95f4\u8868\u793a\u3002\n\n\n\u5148\u5047\u5b9a\u53ea\u6709\u4e8c\u7ef4\uff0c\u5373\u53ea\u6709\u4e24\u4e2a\u53d8\u91cf\uff0c\u5b83\u4eec\u7531\u6a2a\u5750\u6807\u548c\u7eb5\u5750\u6807\u6240\u4ee3\u8868\uff1b\u56e0\u6b64\u6bcf\u4e2a\u89c2\u6d4b\u503c\u90fd\u6709\u76f8\u5e94\u4e8e\u8fd9\u4e24\u4e2a\u5750\u6807\u8f74\u7684\u4e24\u4e2a\u5750\u6807\u503c\uff1b\u5982\u679c\u8fd9\u4e9b\u6570\u636e\u5f62\u6210\u4e00\u4e2a\u692d\u5706\u5f62\u72b6\u7684\u70b9\u9635\uff0c\u90a3\u4e48\u8fd9\u4e2a\u692d\u5706\u6709\u4e00\u4e2a\u957f\u8f74\u548c\u4e00\u4e2a\u77ed\u8f74\u3002\u5728\u77ed\u8f74\u65b9\u5411\u4e0a\uff0c\u6570\u636e\u53d8\u5316\u5f88\u5c11\uff1b\u5728\u6781\u7aef\u7684\u60c5\u51b5\uff0c\u77ed\u8f74\u5982\u679c\u9000\u5316\u6210\u4e00\u70b9\uff0c\u90a3\u53ea\u6709\u5728\u957f\u8f74\u7684\u65b9\u5411\u624d\u80fd\u591f\u89e3\u91ca\u8fd9\u4e9b\u70b9\u7684\u53d8\u5316\u4e86\uff1b\u8fd9\u6837\uff0c\u7531\u4e8c\u7ef4\u5230\u4e00\u7ef4\u7684\u964d\u7ef4\u5c31\u81ea\u7136\u5b8c\u6210\u4e86\u3002\n\n\n\u4e0a\u56fe\u4e2d\uff0cu1\u5c31\u662f\u4e3b\u6210\u5206\u65b9\u5411\uff0c\u7136\u540e\u5728\u4e8c\u7ef4\u7a7a\u95f4\u4e2d\u53d6\u548cu1\u65b9\u5411\u6b63\u4ea4\u7684\u65b9\u5411\uff0c\u5c31\u662fu2\u7684\u65b9\u5411\u3002\u5219n\u4e2a\u6570\u636e\u5728u1\u8f74\u7684\u79bb\u6563\u7a0b\u5ea6\u6700\u5927\uff08\u65b9\u5dee\u6700\u5927\uff09\uff0c\u6570\u636e\u5728u1\u4e0a\u7684\u6295\u5f71\u4ee3\u8868\u4e86\u539f\u59cb\u6570\u636e\u7684\u7edd\u5927\u90e8\u5206\u4fe1\u606f\uff0c\u5373\u4f7f\u4e0d\u8003\u8651u2\uff0c\u4fe1\u606f\u635f\u5931\u4e5f\u4e0d\u591a\u3002\u800c\u4e14\uff0cu1\u3001u2\u4e0d\u76f8\u5173\u3002\u53ea\u8003\u8651u1\u65f6\uff0c\u4e8c\u7ef4\u964d\u4e3a\u4e00\u7ef4\u3002\n\n\n\u692d\u5706\u7684\u957f\u77ed\u8f74\u76f8\u5dee\u5f97\u8d8a\u5927\uff0c\u964d\u7ef4\u4e5f\u8d8a\u6709\u9053\u7406\u3002\n\n\n1. \u6700\u5927\u65b9\u5dee\u7406\u8bba\n\n\n\u5728\u4fe1\u53f7\u5904\u7406\u4e2d\u8ba4\u4e3a\u4fe1\u53f7\u5177\u6709\u8f83\u5927\u7684\u65b9\u5dee\uff0c\u566a\u58f0\u6709\u8f83\u5c0f\u7684\u65b9\u5dee\uff0c\u4fe1\u566a\u6bd4\u5c31\u662f\u4fe1\u53f7\u4e0e\u566a\u58f0\u7684\u65b9\u5dee\u6bd4\uff0c\u8d8a\u5927\u8d8a\u597d\u3002\u5982\u524d\u9762\u7684\u56fe\uff0c\u6837\u672c\u5728u1\u4e0a\u7684\u6295\u5f71\u65b9\u5dee\u8f83\u5927\uff0c\u5728u2\u4e0a\u7684\u6295\u5f71\u65b9\u5dee\u8f83\u5c0f\uff0c\u90a3\u4e48\u53ef\u8ba4\u4e3au2\u4e0a\u7684\u6295\u5f71\u662f\u7531\u566a\u58f0\u5f15\u8d77\u7684\u3002\n\n\n\u56e0\u6b64\u6211\u4eec\u8ba4\u4e3a\uff0c\u6700\u597d\u7684k\u7ef4\u7279\u5f81\u662f\u5c06n\u7ef4\u6837\u672c\u70b9\u8f6c\u6362\u4e3ak\u7ef4\u540e\uff0c\u6bcf\u4e00\u7ef4\u4e0a\u7684\u6837\u672c\u65b9\u5dee\u90fd\u5f88\u5927\u3002\n\n\n\u6bd4\u5982\u6211\u4eec\u5c06\u4e0b\u56fe\u4e2d\u76845\u4e2a\u70b9\u6295\u5f71\u5230\u67d0\u4e00\u7ef4\u4e0a\uff0c\u8fd9\u91cc\u7528\u4e00\u6761\u8fc7\u539f\u70b9\u7684\u76f4\u7ebf\u8868\u793a\uff08\u6570\u636e\u5df2\u7ecf\u4e2d\u5fc3\u5316\uff09\uff1a\n\n\n\n\n\u5047\u8bbe\u6211\u4eec\u9009\u62e9\u4e24\u6761\u4e0d\u540c\u7684\u76f4\u7ebf\u505a\u6295\u5f71\uff0c\u90a3\u4e48\u5de6\u53f3\u4e24\u6761\u4e2d\u54ea\u4e2a\u597d\u5462\uff1f\u6839\u636e\u6211\u4eec\u4e4b\u524d\u7684\u65b9\u5dee\u6700\u5927\u5316\u7406\u8bba\uff0c\u5de6\u8fb9\u7684\u597d\uff0c\u56e0\u4e3a\u6295\u5f71\u540e\u7684\u6837\u672c\u70b9\u4e4b\u95f4\u65b9\u5dee\u6700\u5927\uff08\u4e5f\u53ef\u4ee5\u8bf4\u662f\u6295\u5f71\u7684\u7edd\u5bf9\u503c\u4e4b\u548c\u6700\u5927\uff09\u3002\n\n\n\u8ba1\u7b97\u6295\u5f71\u7684\u65b9\u6cd5\u89c1\u4e0b\u56fe5\uff1a\n\n\n\n\n\u56fe\u4e2d\uff0c\u7ea2\u8272\u70b9\u8868\u793a\u6837\u4f8b\n\uff0c\u84dd\u8272\u70b9\u8868\u793a\u5728u\u4e0a\u7684\u6295\u5f71\uff0cu\u662f\u76f4\u7ebf\u7684\u659c\u7387\u4e5f\u662f\u76f4\u7ebf\u7684\u65b9\u5411\u5411\u91cf\uff0c\u800c\u4e14\u662f\u5355\u4f4d\u5411\u91cf\u3002\u84dd\u8272\u70b9\u662f\n\u5728u\u4e0a\u7684\u6295\u5f71\u70b9\uff0c\u79bb\u539f\u70b9\u7684\u8ddd\u79bb\u662f\n\\\nx,u>\uff08\u5373xTu\n\u6216\u8005uTx\n\uff09\u3002\n\n\n2. \u6700\u5c0f\u4e8c\u4e58\u6cd5\n\n\n\u6211\u4eec\u4f7f\u7528\u6700\u5c0f\u4e8c\u4e58\u6cd5\u6765\u786e\u5b9a\u5404\u4e2a\u4e3b\u8f74\uff08\u4e3b\u6210\u5206\uff09\u7684\u65b9\u5411\u3002\n \u5bf9\u7ed9\u5b9a\u7684\u4e00\u7ec4\u6570\u636e\uff08\u4e0b\u9762\u7684\u9610\u8ff0\u4e2d\uff0c\u5411\u91cf\u4e00\u822c\u5747\u6307\u5217\u5411\u91cf\uff09\uff1a\n\n\\{\\vec{\\boldsymbol z_1},\\vec{\\boldsymbol z_2},...,\\vec{\\boldsymbol z_n} \\}\n\\{\\vec{\\boldsymbol z_1},\\vec{\\boldsymbol z_2},...,\\vec{\\boldsymbol z_n} \\}\n<span><span class=\"MathJax_Preview\">\\{\\vec{\\boldsymbol z_1},\\vec{\\boldsymbol z_2},...,\\vec{\\boldsymbol z_n} \\}</span><script type=\"math/tex\">\\{\\vec{\\boldsymbol z_1},\\vec{\\boldsymbol z_2},...,\\vec{\\boldsymbol z_n} \\}\n\n \u5176\u6570\u636e\u4e2d\u5fc3\u4f4d\u4e8e:\n$$ \\overrightarrow{\\boldsymbol{\\mu}} = \\frac{1}{n}\\sum^n_{i=1}\\vec{\\boldsymbol z_i}$$\n \u6570\u636e\u4e2d\u5fc3\u5316\uff08\u5c06\u5750\u6807\u539f\u70b9\u79fb\u5230\u6837\u672c\u70b9\u7684\u4e2d\u5fc3\u70b9\uff09\uff1a\n\n\\{\\vec{\\boldsymbol x_1},\\vec{\\boldsymbol x_2},...,\\vec{\\boldsymbol x_n} \\}=\\{\\vec{\\boldsymbol z_1}-\\overrightarrow{\\boldsymbol{\\mu}},\\vec{\\boldsymbol z_2}-\\overrightarrow{\\boldsymbol{\\mu}},...,\\vec{\\boldsymbol z_n}-\\overrightarrow{\\boldsymbol{\\mu}} \\}\n\\{\\vec{\\boldsymbol x_1},\\vec{\\boldsymbol x_2},...,\\vec{\\boldsymbol x_n} \\}=\\{\\vec{\\boldsymbol z_1}-\\overrightarrow{\\boldsymbol{\\mu}},\\vec{\\boldsymbol z_2}-\\overrightarrow{\\boldsymbol{\\mu}},...,\\vec{\\boldsymbol z_n}-\\overrightarrow{\\boldsymbol{\\mu}} \\}\n<span><span class=\"MathJax_Preview\">\\{\\vec{\\boldsymbol x_1},\\vec{\\boldsymbol x_2},...,\\vec{\\boldsymbol x_n} \\}=\\{\\vec{\\boldsymbol z_1}-\\overrightarrow{\\boldsymbol{\\mu}},\\vec{\\boldsymbol z_2}-\\overrightarrow{\\boldsymbol{\\mu}},...,\\vec{\\boldsymbol z_n}-\\overrightarrow{\\boldsymbol{\\mu}} \\}</span><script type=\"math/tex\">\\{\\vec{\\boldsymbol x_1},\\vec{\\boldsymbol x_2},...,\\vec{\\boldsymbol x_n} \\}=\\{\\vec{\\boldsymbol z_1}-\\overrightarrow{\\boldsymbol{\\mu}},\\vec{\\boldsymbol z_2}-\\overrightarrow{\\boldsymbol{\\mu}},...,\\vec{\\boldsymbol z_n}-\\overrightarrow{\\boldsymbol{\\mu}} \\}\n\n \u4e2d\u5fc3\u5316\u540e\u7684\u6570\u636e\u5728\u7b2c\u4e00\u4e3b\u8f74u1\u65b9\u5411\u4e0a\u5206\u5e03\u6563\u7684\u6700\u5f00\uff0c\u4e5f\u5c31\u662f\u8bf4\u5728u1\u65b9\u5411\u4e0a\u7684\u6295\u5f71\u7684\u7edd\u5bf9\u503c\u4e4b\u548c\u6700\u5927\uff08\u4e5f\u53ef\u4ee5\u8bf4\u65b9\u5dee\u6700\u5927\uff09\uff0c\u8ba1\u7b97\u6295\u5f71\u7684\u65b9\u6cd5\u4e0a\u9762\u5df2\u7ecf\u9610\u8ff0\uff0c\u5c31\u662f\u5c06x\u4e0eu1\u505a\u5185\u79ef\uff0c\u7531\u4e8e\u53ea\u9700\u8981\u6c42u1\u7684\u65b9\u5411\uff0c\u6240\u4ee5\u8bbeu1\u4e5f\u662f\u5355\u4f4d\u5411\u91cf\u3002\n\n\n\u5728\u8fd9\u91cc\uff0c\u4e5f\u5c31\u662f\u6700\u5927\u5316\u4e0b\u5f0f\uff1a\n$$ \\frac{1}{n}\\sum^n_{i=1}\\vec{\\boldsymbol x_i}\\vec{\\boldsymbol{u_1}} $$\n \u7531\u77e9\u9635\u4ee3\u6570\u76f8\u5173\u77e5\u8bc6\u53ef\u77e5\uff0c\u53ef\u4ee5\u5bf9\u7edd\u5bf9\u503c\u7b26\u53f7\u9879\u8fdb\u884c\u5e73\u65b9\u5904\u7406\uff0c\u6bd4\u8f83\u65b9\u4fbf\u3002\u6240\u4ee5\u8fdb\u800c\u5c31\u662f\u6700\u5927\u5316\u4e0b\u5f0f\uff1a\n$$ \\frac{1}{n}\\sum^n_{i=1} \\left| \\vec{\\boldsymbol x_i} \\cdot \\vec{\\boldsymbol{u_1}} \\right|^2\n = \\frac{1}{n}\\sum^n_{i=1} \\left( \\vec{\\boldsymbol x_i} \\cdot \\vec{\\boldsymbol{u_1}} \\right)^2 $$\n\n\n\u4e24\u4e2a\u5411\u91cf\u505a\u5185\u79ef\uff0c\u53ef\u4ee5\u8f6c\u5316\u6210\u77e9\u9635\u4e58\u6cd5\uff1a\n \n\\vec{\\boldsymbol x_i} \\cdot \\vec{\\boldsymbol{u_1}} \n ={\\boldsymbol x_i}^T {\\boldsymbol{u_1}}\n\\vec{\\boldsymbol x_i} \\cdot \\vec{\\boldsymbol{u_1}} \n ={\\boldsymbol x_i}^T {\\boldsymbol{u_1}}\n<span><span class=\"MathJax_Preview\">\\vec{\\boldsymbol x_i} \\cdot \\vec{\\boldsymbol{u_1}} \n ={\\boldsymbol x_i}^T {\\boldsymbol{u_1}}</span><script type=\"math/tex\">\\vec{\\boldsymbol x_i} \\cdot \\vec{\\boldsymbol{u_1}} \n ={\\boldsymbol x_i}^T {\\boldsymbol{u_1}}\n\n\n\u6240\u4ee5\u76ee\u6807\u51fd\u6570\u53ef\u4ee5\u8868\u793a\u4e3a\uff1a\n $$\\frac{1}{n}\\sum^n_{i=1} \\left( {\\boldsymbol x_i}^T {\\boldsymbol{u_1}} \\right)^2 $$\n\n\\begin{pmatrix} \\\\ \\\\ \\\\   \\\\ \\\\ \\\\ \\\\ \\\\ \\\\ \\\\ \\\\ \\\\  \\end{pmatrix}\n\\begin{pmatrix} \\\\ \\\\ \\\\   \\\\ \\\\ \\\\ \\\\ \\\\ \\\\ \\\\ \\\\ \\\\  \\end{pmatrix}\n<span><span class=\"MathJax_Preview\">\\begin{pmatrix} \\\\ \\\\ \\\\   \\\\ \\\\ \\\\ \\\\ \\\\ \\\\ \\\\ \\\\ \\\\  \\end{pmatrix}</span><script type=\"math/tex\">\\begin{pmatrix} \\\\ \\\\ \\\\   \\\\ \\\\ \\\\ \\\\ \\\\ \\\\ \\\\ \\\\ \\\\  \\end{pmatrix}\n\n\n\u62ec\u53f7\u91cc\u9762\u5c31\u662f\u77e9\u9635\u4e58\u6cd5\u8868\u793a\u5411\u91cf\u5185\u79ef\uff0c\u7531\u4e8e\u5217\u5411\u91cf\u8f6c\u7f6e\u4ee5\u540e\u662f\u884c\u5411\u91cf\uff0c\u884c\u5411\u91cf\u4e58\u4ee5\u5217\u5411\u91cf\u5f97\u5230\u4e00\u4e2a\u6570\uff0c\u4e00\u4e2a\u6570\u7684\u8f6c\u7f6e\u8fd8\u662f\u5176\u672c\u8eab\uff0c\u6240\u4ee5\u53c8\u53ef\u4ee5\u5c06\u76ee\u6807\u51fd\u6570\u5316\u4e3a\uff1a\n\n\\frac{1}{n}\\sum^n_{i=1} \\left( {\\boldsymbol x_i}^T {\\boldsymbol{u_1}} \\right)^2 \n=\\frac{1}{n}\\sum^n_{i=1} \\left( {\\boldsymbol x_i}^T {\\boldsymbol{u_1}} \\right)^T \\left( {\\boldsymbol x_i}^T {\\boldsymbol{u_1}} \\right)\n\\\\=\\frac{1}{n}\\sum^n_{i=1} {\\boldsymbol{u_1}}^T {\\boldsymbol x_i} {\\boldsymbol x_i}^T {\\boldsymbol{u_1}}\n\\\\=\\frac{1}{n}{\\boldsymbol{u_1}}^T \\left( \\sum^n_{i=1}  {\\boldsymbol x_i} {\\boldsymbol x_i}^T \\right) {\\boldsymbol{u_1}}\n\\\\=\\frac{1}{n}{\\boldsymbol{u_1}}^T XX^T {\\boldsymbol{u_1}}\n\\frac{1}{n}\\sum^n_{i=1} \\left( {\\boldsymbol x_i}^T {\\boldsymbol{u_1}} \\right)^2 \n=\\frac{1}{n}\\sum^n_{i=1} \\left( {\\boldsymbol x_i}^T {\\boldsymbol{u_1}} \\right)^T \\left( {\\boldsymbol x_i}^T {\\boldsymbol{u_1}} \\right)\n\\\\=\\frac{1}{n}\\sum^n_{i=1} {\\boldsymbol{u_1}}^T {\\boldsymbol x_i} {\\boldsymbol x_i}^T {\\boldsymbol{u_1}}\n\\\\=\\frac{1}{n}{\\boldsymbol{u_1}}^T \\left( \\sum^n_{i=1}  {\\boldsymbol x_i} {\\boldsymbol x_i}^T \\right) {\\boldsymbol{u_1}}\n\\\\=\\frac{1}{n}{\\boldsymbol{u_1}}^T XX^T {\\boldsymbol{u_1}}\n<span><span class=\"MathJax_Preview\">\\frac{1}{n}\\sum^n_{i=1} \\left( {\\boldsymbol x_i}^T {\\boldsymbol{u_1}} \\right)^2 \n=\\frac{1}{n}\\sum^n_{i=1} \\left( {\\boldsymbol x_i}^T {\\boldsymbol{u_1}} \\right)^T \\left( {\\boldsymbol x_i}^T {\\boldsymbol{u_1}} \\right)\n\\\\=\\frac{1}{n}\\sum^n_{i=1} {\\boldsymbol{u_1}}^T {\\boldsymbol x_i} {\\boldsymbol x_i}^T {\\boldsymbol{u_1}}\n\\\\=\\frac{1}{n}{\\boldsymbol{u_1}}^T \\left( \\sum^n_{i=1}  {\\boldsymbol x_i} {\\boldsymbol x_i}^T \\right) {\\boldsymbol{u_1}}\n\\\\=\\frac{1}{n}{\\boldsymbol{u_1}}^T XX^T {\\boldsymbol{u_1}}</span><script type=\"math/tex\">\\frac{1}{n}\\sum^n_{i=1} \\left( {\\boldsymbol x_i}^T {\\boldsymbol{u_1}} \\right)^2 \n=\\frac{1}{n}\\sum^n_{i=1} \\left( {\\boldsymbol x_i}^T {\\boldsymbol{u_1}} \\right)^T \\left( {\\boldsymbol x_i}^T {\\boldsymbol{u_1}} \\right)\n\\\\=\\frac{1}{n}\\sum^n_{i=1} {\\boldsymbol{u_1}}^T {\\boldsymbol x_i} {\\boldsymbol x_i}^T {\\boldsymbol{u_1}}\n\\\\=\\frac{1}{n}{\\boldsymbol{u_1}}^T \\left( \\sum^n_{i=1}  {\\boldsymbol x_i} {\\boldsymbol x_i}^T \\right) {\\boldsymbol{u_1}}\n\\\\=\\frac{1}{n}{\\boldsymbol{u_1}}^T XX^T {\\boldsymbol{u_1}}\n\n\n\u5176\u4e2d\u7684\n{\\boldsymbol{u_1}}^T XX^T {\\boldsymbol{u_1}}\n{\\boldsymbol{u_1}}^T XX^T {\\boldsymbol{u_1}}\n\u5c31\u662f\u4e00\u4e2a\u4e8c\u6b21\u578b\uff0c\n \u6211\u4eec\u5047\u8bbe \nXX^T\nXX^T\n \u7684\u67d0\u4e00\u7279\u5f81\u503c\u4e3a\n\\lambda\n\\lambda\n\uff0c\u5bf9\u5e94\u7684\u7279\u5f81\u5411\u91cf\u4e3a$\\xi $\uff0c\u6709\n\n(XX^T)^T=XX^T\n(XX^T)^T=XX^T\n<span><span class=\"MathJax_Preview\">(XX^T)^T=XX^T</span><script type=\"math/tex\">(XX^T)^T=XX^T\n\n\nXX^T\\xi=\\lambda\\xi\nXX^T\\xi=\\lambda\\xi\n<span><span class=\"MathJax_Preview\">XX^T\\xi=\\lambda\\xi</span><script type=\"math/tex\">XX^T\\xi=\\lambda\\xi\n\n\n(XX^T\\xi)^T\\xi=(\\lambda\\xi)^T\\xi\n(XX^T\\xi)^T\\xi=(\\lambda\\xi)^T\\xi\n<span><span class=\"MathJax_Preview\">(XX^T\\xi)^T\\xi=(\\lambda\\xi)^T\\xi</span><script type=\"math/tex\">(XX^T\\xi)^T\\xi=(\\lambda\\xi)^T\\xi\n\n\n\\xi^TXX^T\\xi=\\lambda\\xi^T\\xi\n\\xi^TXX^T\\xi=\\lambda\\xi^T\\xi\n<span><span class=\"MathJax_Preview\">\\xi^TXX^T\\xi=\\lambda\\xi^T\\xi</span><script type=\"math/tex\">\\xi^TXX^T\\xi=\\lambda\\xi^T\\xi\n\n\n\\xi^TXX^T\\xi = (X^T\\xi)^T(X^T\\xi) =\\lVert X^T\\xi\\rVert^2 = \\lambda\\xi^T\\xi = \\lambda\\lVert\\xi\\rVert^2 \\ge 0\n\\xi^TXX^T\\xi = (X^T\\xi)^T(X^T\\xi) =\\lVert X^T\\xi\\rVert^2 = \\lambda\\xi^T\\xi = \\lambda\\lVert\\xi\\rVert^2 \\ge 0\n<span><span class=\"MathJax_Preview\">\\xi^TXX^T\\xi = (X^T\\xi)^T(X^T\\xi) =\\lVert X^T\\xi\\rVert^2 = \\lambda\\xi^T\\xi = \\lambda\\lVert\\xi\\rVert^2 \\ge 0</span><script type=\"math/tex\">\\xi^TXX^T\\xi = (X^T\\xi)^T(X^T\\xi) =\\lVert X^T\\xi\\rVert^2 = \\lambda\\xi^T\\xi = \\lambda\\lVert\\xi\\rVert^2 \\ge 0\n\n \n\n\n\u6240\u4ee5\n\uff0c\n\u662f\u534a\u6b63\u5b9a\u7684\u5bf9\u79f0\u77e9\u9635\uff0c\u5373\n\u662f\u534a\u6b63\u5b9a\u9635\u7684\u4e8c\u6b21\u578b\uff0c\u7531\u77e9\u9635\u4ee3\u6570\u77e5\u8bc6\u5f97\u51fa\uff0c\u76ee\u6807\u51fd\u6570\u5b58\u5728\u6700\u5927\u503c\uff01\n\n\n\u4e0b\u9762\u6211\u4eec\u6c42\u89e3\u6700\u5927\u503c\u3001\u53d6\u5f97\u6700\u5927\u503c\u65f6u1\u7684\u65b9\u5411\u8fd9\u4e24\u4e2a\u95ee\u9898\u3002\n\n\n\u5148\u89e3\u51b3\u7b2c\u4e00\u4e2a\u95ee\u9898\uff0c\u5bf9\u4e8e\u5411\u91cfx\u7684\u4e8c\u8303\u6570\u5e73\u65b9\u4e3a:\n\n\n\n\n\u540c\u6837\uff0c\u76ee\u6807\u51fd\u6570\u4e5f\u53ef\u4ee5\u8868\u793a\u6210\u6620\u5c04\u540e\u7684\u5411\u91cf\u7684\u4e8c\u8303\u6570\u5e73\u65b9\uff1a\n\n\n\n\n\u628a\u4e8c\u6b21\u578b\u5316\u6210\u4e00\u4e2a\u8303\u6570\u7684\u5f62\u5f0f\uff0c\u7531\u4e8eu1\u53d6\u5355\u4f4d\u5411\u91cf\uff0c\u6700\u5927\u5316\u76ee\u6807\u51fd\u6570\u7684\u57fa\u672c\u95ee\u9898\u4e5f\u5c31\u8f6c\u5316\u4e3a\uff1a\u5bf9\u4e00\u4e2a\u77e9\u9635\uff0c\u5b83\u5bf9\u4e00\u4e2a\u5411\u91cf\u505a\u53d8\u6362\uff0c\u53d8\u6362\u524d\u540e\u7684\u5411\u91cf\u7684\u6a21\u957f\u4f38\u7f29\u5c3a\u5ea6\u5982\u4f55\u624d\u80fd\u6700\u5927\uff1f\u6211\u4eec\u6709\u77e9\u9635\u4ee3\u6570\u4e2d\u7684\u5b9a\u7406\u77e5\uff0c\u5411\u91cf\u7ecf\u77e9\u9635\u6620\u5c04\u524d\u540e\u7684\u5411\u91cf\u957f\u5ea6\u4e4b\u6bd4\u7684\u6700\u5927\u503c\u5c31\u662f\u8fd9\u4e2a\u77e9\u9635\u7684\u6700\u5927\u5947\u5f02\u503c\uff0c\u5373\uff1a\n\n\n\n\n\u5f0f\u4e2d\uff0c\n\u662f\u77e9\u9635A\u7684\u6700\u5927\u5947\u5f02\u503c\uff08\u4ea6\u662f\u77e9\u9635A\u7684\u4e8c\u8303\u6570\uff09\uff0c\u5b83\u7b49\u4e8e\n\uff08\u6216\n\uff09\u7684\u6700\u5927\u7279\u5f81\u503c\u5f00\u5e73\u65b9\u3002\n\n\n\u9488\u5bf9\u672c\u95ee\u9898\u6765\u8bf4\uff0c\n\u662f\u534a\u6b63\u5b9a\u5bf9\u79f0\u9635\uff0c\u4e5f\u5c31\u610f\u5473\u7740\u5b83\u7684\u7279\u5f81\u503c\u90fd\u5927\u4e8e\u7b49\u4e8e0\uff0c\u4e14\u4e0d\u540c\u7279\u5f81\u503c\u5bf9\u5e94\u7684\u7279\u5f81\u5411\u91cf\u662f\u6b63\u4ea4\u7684\uff0c\u6784\u6210\u6240\u5728\u7a7a\u95f4\u7684\u4e00\u7ec4\u5355\u4f4d\u6b63\u4ea4\u57fa\u3002\n\n\n\u518d\u89e3\u51b3\u7b2c\u4e8c\u4e2a\u95ee\u9898\uff0c\u5bf9\u4e00\u822c\u60c5\u51b5\uff0c\u8bbe\u5bf9\u79f0\u9635\n\u7684n\u4e2a\u7279\u5f81\u503c\u5206\u522b\u4e3a\uff1a\n\n\n\n\n\u76f8\u5e94\u7684\u5355\u4f4d\u7279\u5f81\u5411\u91cf\u4e3a\uff1a\n\n\n\n\n\u4efb\u53d6\u4e00\u4e2a\u5411\u91cfx\uff0c\u7528\u7279\u5f81\u5411\u91cf\u6784\u6210\u7684\u7a7a\u95f4\u4e2d\u7684\u8fd9\u7ec4\u57fa\u8868\u793a\u4e3a\uff1a\n\n\n\n\n\u5219\uff1a\n\n\n\n\n\u6240\u4ee5\uff1a\n\n\n\n\n\u9488\u5bf9\u7b2c\u4e8c\u4e2a\u95ee\u9898\uff0c\u6211\u4eec\u53d6\u4e0a\u5f0f\u4e2d\u7684\n\uff0c\u76ee\u6807\u51fd\u6570\n\u53d6\u5f97\u6700\u5927\u503c\uff0c\u4e5f\u5c31\u662f\n\u7684\u6700\u5927\u7279\u5f81\u503c\u65f6\uff0c\u5bf9\u5e94\u7684\u7279\u5f81\u5411\u91cf\u7684\u65b9\u5411\uff0c\u5c31\u662f\u7b2c\u4e00\u4e3b\u6210\u5206u1\u7684\u65b9\u5411\uff01\uff08\u7b2c\u4e8c\u4e3b\u6210\u5206\u7684\u65b9\u5411\u4e3a\n\u7684\u7b2c\u4e8c\u5927\u7279\u5f81\u503c\u5bf9\u5e94\u7684\u7279\u5f81\u5411\u91cf\u7684\u65b9\u5411\uff0c\u4ee5\u6b64\u7c7b\u63a8\uff09\u3002\n\n\n\u8bc1\u660e\u5b8c\u6bd5\u3002\n\n\n\u4e3b\u6210\u5206\u6240\u5360\u6574\u4e2a\u4fe1\u606f\u7684\u767e\u5206\u6bd4\u53ef\u7528\u4e0b\u5f0f\u8ba1\u7b97\uff1a\n\n\n\n\n\u5f0f\u4e2d\u5206\u6bcd\u4e3a\n\u6240\u6709\u5947\u5f02\u503c\u5e73\u65b9\u548c\uff0c\u5206\u5b50\u4e3a\u6240\u9009\u53d6\u7684\u524dk\u5927\u5947\u5f02\u503c\u5e73\u65b9\u548c\u3002\n\n\n\u6709\u4e9b\u7814\u7a76\u5de5\u4f5c\u8868\u660e\uff0c\u6240\u9009\u7684\u4e3b\u8f74\u603b\u957f\u5ea6\u5360\u6240\u6709\u4e3b\u8f74\u957f\u5ea6\u4e4b\u548c\u7684\u5927\u7ea685% \u5373\u53ef\uff0c\u5176\u5b9e\uff0c\u8fd9\u53ea\u662f\u4e00\u4e2a\u5927\u4f53\u7684\u8bf4\u6cd5\uff0c\u5177\u4f53\u9009\u591a\u5c11\u4e2a\uff0c\u8981\u770b\u5b9e\u9645\u60c5\u51b5\u800c\u5b9a\u3002\n\n\n3.\u610f\u4e49\n\n\nPCA\u5c06n\u4e2a\u7279\u5f81\u964d\u7ef4\u5230k\u4e2a\uff0c\u53ef\u4ee5\u7528\u6765\u8fdb\u884c\u6570\u636e\u538b\u7f29\uff0c\u4f8b\u5982100\u7ef4\u7684\u5411\u91cf\u6700\u540e\u53ef\u4ee5\u752810\u7ef4\u6765\u8868\u793a\uff0c\u90a3\u4e48\u538b\u7f29\u7387\u4e3a90%\u3002\u540c\u6837\u56fe\u50cf\u5904\u7406\u9886\u57df\u7684KL\u53d8\u6362\u4f7f\u7528PCA\u505a\u56fe\u50cf\u538b\u7f29\uff0c\u4eba\u8138\u68c0\u6d4b\u548c\u5339\u914d\u3002\u6bd4\u5982\u5982\u4e0b\u6458\u81ea\u53e6\u4e00\u7bc7\n\u535a\u5ba2\n\u4e0a\u7684Matlab\u5b9e\u9a8c\u7ed3\u679c\uff1a\n\n\n\n\n\n\n\n\n\u53ef\u89c1\u6d4b\u8bd5\u6837\u672c\u4e3a\u4eba\u8138\u7684\u6837\u672c\u7684\u91cd\u5efa\u8bef\u5dee\u663e\u7136\u5c0f\u4e8e\u975e\u4eba\u8138\u7684\u91cd\u5efa\u8bef\u5dee\u3002\n\n\n\u53e6\u5916PCA\u8fd8\u53ef\u4ee5\u8054\u7cfb\u5947\u5f02\u503c\u5206\u89e3\uff08SVD\uff09\uff0c\u6765\u7528\u4e8e\u9884\u6d4b\u77e9\u9635\u4e2d\u7f3a\u5931\u7684\u5143\u7d20\uff0c\u53ef\u4ee5\u5e94\u7528\u5230\u8bc4\u5206\u9884\u6d4b\u7b49\u5b9e\u9645\u9879\u76ee\u4e2d\u3002\u8be6\u89c1\u540e\u7eedSVD\u7684\u535a\u5ba2\u3002\n\n\n\u6709\u95ee\u9898\u6216\u8005\u60f3\u6cd5\u53ef\u4ee5\u548c\u6211\u4ea4\u6d41\uff1a\n\n\n\u8f6c\u8f7d\u8bf7\u58f0\u660e\u51fa\u5904\uff1a\nhttp://blog.csdn.net/zhongkelee/article/details/44064401", 
            "title": "\u4e3b\u6210\u5206\u5206\u6790"
        }, 
        {
            "location": "/\u5b66\u4e60/\u6df1\u5ea6\u5b66\u4e60/\u4e3b\u6210\u5206\u5206\u6790/#pca", 
            "text": "", 
            "title": "\u4e00\u3001PCA\u7b80\u4ecb"
        }, 
        {
            "location": "/\u5b66\u4e60/\u6df1\u5ea6\u5b66\u4e60/\u4e3b\u6210\u5206\u5206\u6790/#146", 
            "text": "\u4e0a\u5b8c\u9648\u6069\u7ea2\u8001\u5e08\u7684\u300a\u673a\u5668\u5b66\u4e60\u4e0e\u77e5\u8bc6\u53d1\u73b0\u300b\u548c\u5b63\u6d77\u6ce2\u8001\u5e08\u7684\u300a\u77e9\u9635\u4ee3\u6570\u300b\u4e24\u95e8\u8bfe\u4e4b\u540e\uff0c\u9887\u6709\u4f53\u4f1a\u3002\u6700\u8fd1\u5728\u505a\u4e3b\u6210\u5206\u5206\u6790\u548c\u5947\u5f02\u503c\u5206\u89e3\u65b9\u9762\u7684\u9879\u76ee\uff0c\u6240\u4ee5\u8bb0\u5f55\u4e00\u4e0b\u5fc3\u5f97\u4f53\u4f1a\u3002  \u5728\u8bb8\u591a\u9886\u57df\u7684\u7814\u7a76\u4e0e\u5e94\u7528\u4e2d\uff0c\u5f80\u5f80\u9700\u8981\u5bf9\u53cd\u6620\u4e8b\u7269\u7684\u591a\u4e2a\u53d8\u91cf\u8fdb\u884c\u5927\u91cf\u7684\u89c2\u6d4b\uff0c\u6536\u96c6\u5927\u91cf\u6570\u636e\u4ee5\u4fbf\u8fdb\u884c\u5206\u6790\u5bfb\u627e\u89c4\u5f8b\u3002\u591a\u53d8\u91cf\u5927\u6837\u672c\u65e0\u7591\u4f1a\u4e3a\u7814\u7a76\u548c\u5e94\u7528\u63d0\u4f9b\u4e86\u4e30\u5bcc\u7684\u4fe1\u606f\uff0c\u4f46\u4e5f\u5728\u4e00\u5b9a\u7a0b\u5ea6\u4e0a\u589e\u52a0\u4e86\u6570\u636e\u91c7\u96c6\u7684\u5de5\u4f5c\u91cf\uff0c\u66f4\u91cd\u8981\u7684\u662f\u5728\u591a\u6570\u60c5\u51b5\u4e0b\uff0c\u8bb8\u591a\u53d8\u91cf\u4e4b\u95f4\u53ef\u80fd\u5b58\u5728\u76f8\u5173\u6027\uff0c\u4ece\u800c\u589e\u52a0\u4e86\u95ee\u9898\u5206\u6790\u7684\u590d\u6742\u6027\uff0c\u540c\u65f6\u5bf9\u5206\u6790\u5e26\u6765\u4e0d\u4fbf\u3002\u5982\u679c\u5206\u522b\u5bf9\u6bcf\u4e2a\u6307\u6807\u8fdb\u884c\u5206\u6790\uff0c\u5206\u6790\u5f80\u5f80\u662f\u5b64\u7acb\u7684\uff0c\u800c\u4e0d\u662f\u7efc\u5408\u7684\u3002\u76f2\u76ee\u51cf\u5c11\u6307\u6807\u4f1a\u635f\u5931\u5f88\u591a\u4fe1\u606f\uff0c\u5bb9\u6613\u4ea7\u751f\u9519\u8bef\u7684\u7ed3\u8bba\u3002  \u56e0\u6b64\u9700\u8981\u627e\u5230\u4e00\u4e2a\u5408\u7406\u7684\u65b9\u6cd5\uff0c\u5728\u51cf\u5c11\u9700\u8981\u5206\u6790\u7684\u6307\u6807\u540c\u65f6\uff0c\u5c3d\u91cf\u51cf\u5c11\u539f\u6307\u6807\u5305\u542b\u4fe1\u606f\u7684\u635f\u5931\uff0c\u4ee5\u8fbe\u5230\u5bf9\u6240\u6536\u96c6\u6570\u636e\u8fdb\u884c\u5168\u9762\u5206\u6790\u7684\u76ee\u7684\u3002\u7531\u4e8e\u5404\u53d8\u91cf\u95f4\u5b58\u5728\u4e00\u5b9a\u7684\u76f8\u5173\u5173\u7cfb\uff0c\u56e0\u6b64\u6709\u53ef\u80fd\u7528\u8f83\u5c11\u7684\u7efc\u5408\u6307\u6807\u5206\u522b\u7efc\u5408\u5b58\u5728\u4e8e\u5404\u53d8\u91cf\u4e2d\u7684\u5404\u7c7b\u4fe1\u606f\u3002\u4e3b\u6210\u5206\u5206\u6790\u4e0e\u56e0\u5b50\u5206\u6790\u5c31\u5c5e\u4e8e\u8fd9\u7c7b\u964d\u7ef4\u7684\u65b9\u6cd5\u3002", 
            "title": "1. \u76f8\u5173\u80cc\u666f"
        }, 
        {
            "location": "/\u5b66\u4e60/\u6df1\u5ea6\u5b66\u4e60/\u4e3b\u6210\u5206\u5206\u6790/#246", 
            "text": "\u4e0b\u88681\u662f\u67d0\u4e9b\u5b66\u751f\u7684\u8bed\u6587\u3001\u6570\u5b66\u3001\u7269\u7406\u3001\u5316\u5b66\u6210\u7ee9\u7edf\u8ba1\uff1a   \u9996\u5148\uff0c\u5047\u8bbe\u8fd9\u4e9b\u79d1\u76ee\u6210\u7ee9\u4e0d\u76f8\u5173\uff0c\u4e5f\u5c31\u662f\u8bf4\u67d0\u4e00\u79d1\u76ee\u8003\u591a\u5c11\u5206\u4e0e\u5176\u4ed6\u79d1\u76ee\u6ca1\u6709\u5173\u7cfb\u3002\u90a3\u4e48\u4e00\u773c\u5c31\u80fd\u770b\u51fa\u6765\uff0c\u6570\u5b66\u3001\u7269\u7406\u3001\u5316\u5b66\u8fd9\u4e09\u95e8\u8bfe\u7684\u6210\u7ee9\u6784\u6210\u4e86\u8fd9\u7ec4\u6570\u636e\u7684\u4e3b\u6210\u5206\uff08\u5f88\u663e\u7136\uff0c\u6570\u5b66\u4f5c\u4e3a\u7b2c\u4e00\u4e3b\u6210\u5206\uff0c\u56e0\u4e3a\u6570\u5b66\u6210\u7ee9\u62c9\u7684\u6700\u5f00\uff09\u3002\u4e3a\u4ec0\u4e48\u4e00\u773c\u80fd\u770b\u51fa\u6765\uff1f\u56e0\u4e3a\u5750\u6807\u8f74\u9009\u5bf9\u4e86\uff01\u4e0b\u9762\u518d\u770b\u4e00\u7ec4\u5b66\u751f\u7684\u6570\u5b66\u3001\u7269\u7406\u3001\u5316\u5b66\u3001\u8bed\u6587\u3001\u5386\u53f2\u3001\u82f1\u8bed\u6210\u7ee9\u7edf\u8ba1\uff0c\u89c1\u88682\uff0c\u8fd8\u80fd\u4e0d\u80fd\u4e00\u773c\u770b\u51fa\u6765\uff1a   \u6570\u636e\u592a\u591a\u4e86\uff0c\u4ee5\u81f3\u4e8e\u770b\u8d77\u6765\u6709\u4e9b\u51cc\u4e71\uff01\u4e5f\u5c31\u662f\u8bf4\uff0c\u65e0\u6cd5\u76f4\u63a5\u770b\u51fa\u8fd9\u7ec4\u6570\u636e\u7684\u4e3b\u6210\u5206\uff0c\u56e0\u4e3a\u5728\u5750\u6807\u7cfb\u4e0b\u8fd9\u7ec4\u6570\u636e\u5206\u5e03\u7684\u5f88\u6563\u4e71\u3002\u7a76\u5176\u539f\u56e0\uff0c\u662f\u56e0\u4e3a\u65e0\u6cd5\u62e8\u5f00\u906e\u4f4f\u8089\u773c\u7684\u8ff7\u96fe~\u5982\u679c\u628a\u8fd9\u4e9b\u6570\u636e\u5728\u76f8\u5e94\u7684\u7a7a\u95f4\u4e2d\u8868\u793a\u51fa\u6765\uff0c\u4e5f\u8bb8\u4f60\u5c31\u80fd\u6362\u4e00\u4e2a\u89c2\u5bdf\u89d2\u5ea6\u627e\u51fa\u4e3b\u6210\u5206\u3002\u5982\u4e0b\u56fe1\u6240\u793a\uff1a   \u4f46\u662f\uff0c\u5bf9\u4e8e\u66f4\u9ad8\u7ef4\u7684\u6570\u636e\uff0c\u80fd\u60f3\u8c61\u5176\u5206\u5e03\u5417\uff1f\u5c31\u7b97\u80fd\u63cf\u8ff0\u5206\u5e03\uff0c\u5982\u4f55\u7cbe\u786e\u5730\u627e\u5230\u8fd9\u4e9b\u4e3b\u6210\u5206\u7684\u8f74\uff1f\u5982\u4f55\u8861\u91cf\u4f60\u63d0\u53d6\u7684\u4e3b\u6210\u5206\u5230\u5e95\u5360\u4e86\u6574\u4e2a\u6570\u636e\u7684\u591a\u5c11\u4fe1\u606f\uff1f\u6240\u4ee5\uff0c\u6211\u4eec\u5c31\u8981\u7528\u5230\u4e3b\u6210\u5206\u5206\u6790\u7684\u5904\u7406\u65b9\u6cd5\u3002", 
            "title": "2. \u95ee\u9898\u63cf\u8ff0"
        }, 
        {
            "location": "/\u5b66\u4e60/\u6df1\u5ea6\u5b66\u4e60/\u4e3b\u6210\u5206\u5206\u6790/#346", 
            "text": "\u4e3a\u4e86\u8bf4\u660e\u4ec0\u4e48\u662f\u6570\u636e\u7684\u4e3b\u6210\u5206\uff0c\u5148\u4ece\u6570\u636e\u964d\u7ef4\u8bf4\u8d77\u3002\u6570\u636e\u964d\u7ef4\u662f\u600e\u4e48\u56de\u4e8b\u513f\uff1f\u5047\u8bbe\u4e09\u7ef4\u7a7a\u95f4\u4e2d\u6709\u4e00\u7cfb\u5217\u70b9\uff0c\u8fd9\u4e9b\u70b9\u5206\u5e03\u5728\u4e00\u4e2a\u8fc7\u539f\u70b9\u7684\u659c\u9762\u4e0a\uff0c\u5982\u679c\u4f60\u7528\u81ea\u7136\u5750\u6807\u7cfbx,y,z\u8fd9\u4e09\u4e2a\u8f74\u6765\u8868\u793a\u8fd9\u7ec4\u6570\u636e\u7684\u8bdd\uff0c\u9700\u8981\u4f7f\u7528\u4e09\u4e2a\u7ef4\u5ea6\uff0c\u800c\u4e8b\u5b9e\u4e0a\uff0c\u8fd9\u4e9b\u70b9\u7684\u5206\u5e03\u4ec5\u4ec5\u662f\u5728\u4e00\u4e2a\u4e8c\u7ef4\u7684\u5e73\u9762\u4e0a\uff0c\u90a3\u4e48\uff0c\u95ee\u9898\u51fa\u5728\u54ea\u91cc\uff1f\u5982\u679c\u4f60\u518d\u4ed4\u7ec6\u60f3\u60f3\uff0c\u80fd\u4e0d\u80fd\u628ax,y,z\u5750\u6807\u7cfb\u65cb\u8f6c\u4e00\u4e0b\uff0c\u4f7f\u6570\u636e\u6240\u5728\u5e73\u9762\u4e0ex,y\u5e73\u9762\u91cd\u5408\uff1f\u8fd9\u5c31\u5bf9\u4e86\uff01\u5982\u679c\u628a\u65cb\u8f6c\u540e\u7684\u5750\u6807\u7cfb\u8bb0\u4e3ax',y',z'\uff0c\u90a3\u4e48\u8fd9\u7ec4\u6570\u636e\u7684\u8868\u793a\u53ea\u7528x'\u548cy'\u4e24\u4e2a\u7ef4\u5ea6\u8868\u793a\u5373\u53ef\uff01\u5f53\u7136\u4e86\uff0c\u5982\u679c\u60f3\u6062\u590d\u539f\u6765\u7684\u8868\u793a\u65b9\u5f0f\uff0c\u90a3\u5c31\u5f97\u628a\u8fd9\u4e24\u4e2a\u5750\u6807\u4e4b\u95f4\u7684\u53d8\u6362\u77e9\u9635\u5b58\u4e0b\u6765\u3002\u8fd9\u6837\u5c31\u80fd\u628a\u6570\u636e\u7ef4\u5ea6\u964d\u4e0b\u6765\u4e86\uff01\u4f46\u662f\uff0c\u6211\u4eec\u8981\u770b\u5230\u8fd9\u4e2a\u8fc7\u7a0b\u7684\u672c\u8d28\uff0c\u5982\u679c\u628a\u8fd9\u4e9b\u6570\u636e\u6309\u884c\u6216\u8005\u6309\u5217\u6392\u6210\u4e00\u4e2a\u77e9\u9635\uff0c\u90a3\u4e48\u8fd9\u4e2a\u77e9\u9635\u7684\u79e9\u5c31\u662f2\uff01\u8fd9\u4e9b\u6570\u636e\u4e4b\u95f4\u662f\u6709\u76f8\u5173\u6027\u7684\uff0c\u8fd9\u4e9b\u6570\u636e\u6784\u6210\u7684\u8fc7\u539f\u70b9\u7684\u5411\u91cf\u7684\u6700\u5927\u7ebf\u6027\u65e0\u5173\u7ec4\u5305\u542b2\u4e2a\u5411\u91cf\uff0c\u8fd9\u5c31\u662f\u4e3a\u4ec0\u4e48\u4e00\u5f00\u59cb\u5c31\u5047\u8bbe\u5e73\u9762\u8fc7\u539f\u70b9\u7684\u539f\u56e0\uff01\u90a3\u4e48\u5982\u679c\u5e73\u9762\u4e0d\u8fc7\u539f\u70b9\u5462\uff1f\u8fd9\u5c31\u662f\u6570\u636e\u4e2d\u5fc3\u5316\u7684\u7f18\u6545\uff01\u5c06\u5750\u6807\u539f\u70b9\u5e73\u79fb\u5230\u6570\u636e\u4e2d\u5fc3\uff0c\u8fd9\u6837\u539f\u672c\u4e0d\u76f8\u5173\u7684\u6570\u636e\u5728\u8fd9\u4e2a\u65b0\u5750\u6807\u7cfb\u4e2d\u5c31\u6709\u76f8\u5173\u6027\u4e86\uff01\u6709\u8da3\u7684\u662f\uff0c\u4e09\u70b9\u4e00\u5b9a\u5171\u9762\uff0c\u4e5f\u5c31\u662f\u8bf4\u4e09\u7ef4\u7a7a\u95f4\u4e2d\u4efb\u610f\u4e09\u70b9\u4e2d\u5fc3\u5316\u540e\u90fd\u662f\u7ebf\u6027\u76f8\u5173\u7684\uff0c\u4e00\u822c\u6765\u8bb2n\u7ef4\u7a7a\u95f4\u4e2d\u7684n\u4e2a\u70b9\u4e00\u5b9a\u80fd\u5728\u4e00\u4e2an-1\u7ef4\u5b50\u7a7a\u95f4\u4e2d\u5206\u6790\uff01  \u4e0a\u4e00\u6bb5\u6587\u5b57\u4e2d\uff0c\u8ba4\u4e3a\u628a\u6570\u636e\u964d\u7ef4\u540e\u5e76\u6ca1\u6709\u4e22\u5f03\u4efb\u4f55\u4e1c\u897f\uff0c\u56e0\u4e3a\u8fd9\u4e9b\u6570\u636e\u5728\u5e73\u9762\u4ee5\u5916\u7684\u7b2c\u4e09\u4e2a\u7ef4\u5ea6\u7684\u5206\u91cf\u90fd\u4e3a0\u3002\u73b0\u5728\uff0c\u5047\u8bbe\u8fd9\u4e9b\u6570\u636e\u5728z'\u8f74\u6709\u4e00\u4e2a\u5f88\u5c0f\u7684\u6296\u52a8\uff0c\u90a3\u4e48\u6211\u4eec\u4ecd\u7136\u7528\u4e0a\u8ff0\u7684\u4e8c\u7ef4\u8868\u793a\u8fd9\u4e9b\u6570\u636e\uff0c\u7406\u7531\u662f\u6211\u4eec\u53ef\u4ee5\u8ba4\u4e3a\u8fd9\u4e24\u4e2a\u8f74\u7684\u4fe1\u606f\u662f\u6570\u636e\u7684\u4e3b\u6210\u5206\uff0c\u800c\u8fd9\u4e9b\u4fe1\u606f\u5bf9\u4e8e\u6211\u4eec\u7684\u5206\u6790\u5df2\u7ecf\u8db3\u591f\u4e86\uff0cz'\u8f74\u4e0a\u7684\u6296\u52a8\u5f88\u6709\u53ef\u80fd\u662f\u566a\u58f0\uff0c\u4e5f\u5c31\u662f\u8bf4\u672c\u6765\u8fd9\u7ec4\u6570\u636e\u662f\u6709\u76f8\u5173\u6027\u7684\uff0c\u566a\u58f0\u7684\u5f15\u5165\uff0c\u5bfc\u81f4\u4e86\u6570\u636e\u4e0d\u5b8c\u5168\u76f8\u5173\uff0c\u4f46\u662f\uff0c\u8fd9\u4e9b\u6570\u636e\u5728z'\u8f74\u4e0a\u7684\u5206\u5e03\u4e0e\u539f\u70b9\u6784\u6210\u7684\u5939\u89d2\u975e\u5e38\u5c0f\uff0c\u4e5f\u5c31\u662f\u8bf4\u5728z'\u8f74\u4e0a\u6709\u5f88\u5927\u7684\u76f8\u5173\u6027\uff0c\u7efc\u5408\u8fd9\u4e9b\u8003\u8651\uff0c\u5c31\u53ef\u4ee5\u8ba4\u4e3a\u6570\u636e\u5728x',y' \u8f74\u4e0a\u7684\u6295\u5f71\u6784\u6210\u4e86\u6570\u636e\u7684\u4e3b\u6210\u5206\uff01  \u8bfe\u5802\u4e0a\u8001\u5e08\u8c08\u5230\u7684\u7279\u5f81\u9009\u62e9\u7684\u95ee\u9898\uff0c\u5176\u5b9e\u5c31\u662f\u8981\u5254\u9664\u7684\u7279\u5f81\u4e3b\u8981\u662f\u548c\u7c7b\u6807\u7b7e\u65e0\u5173\u7684\u7279\u5f81\u3002\u800c\u8fd9\u91cc\u7684\u7279\u5f81\u5f88\u591a\u662f\u548c\u7c7b\u6807\u7b7e\u6709\u5173\u7684\uff0c\u4f46\u91cc\u9762\u5b58\u5728\u566a\u58f0\u6216\u8005\u5197\u4f59\u3002\u5728\u8fd9\u79cd\u60c5\u51b5\u4e0b\uff0c\u9700\u8981\u4e00\u79cd\u7279\u5f81\u964d\u7ef4\u7684\u65b9\u6cd5\u6765\u51cf\u5c11\u7279\u5f81\u6570\uff0c\u51cf\u5c11\u566a\u97f3\u548c\u5197\u4f59\uff0c\u51cf\u5c11\u8fc7\u5ea6\u62df\u5408\u7684\u53ef\u80fd\u6027\u3002  PCA\u7684\u601d\u60f3\u662f\u5c06n\u7ef4\u7279\u5f81\u6620\u5c04\u5230k\u7ef4\u4e0a\uff08k\\ n\uff09\uff0c\u8fd9k\u7ef4\u662f\u5168\u65b0\u7684\u6b63\u4ea4\u7279\u5f81\u3002\u8fd9k\u7ef4\u7279\u5f81\u79f0\u4e3a\u4e3b\u6210\u5206\uff0c\u662f\u91cd\u65b0\u6784\u9020\u51fa\u6765\u7684k\u7ef4\u7279\u5f81\uff0c\u800c\u4e0d\u662f\u7b80\u5355\u5730\u4ecen\u7ef4\u7279\u5f81\u4e2d\u53bb\u9664\u5176\u4f59n-k\u7ef4\u7279\u5f81\u3002", 
            "title": "3. \u6570\u636e\u964d\u7ef4"
        }, 
        {
            "location": "/\u5b66\u4e60/\u6df1\u5ea6\u5b66\u4e60/\u4e3b\u6210\u5206\u5206\u6790/#pca_1", 
            "text": "\u73b0\u5728\u5047\u8bbe\u6709\u4e00\u7ec4\u6570\u636e\u5982\u4e0b\uff1a   \u884c\u4ee3\u8868\u4e86\u6837\u4f8b\uff0c\u5217\u4ee3\u8868\u7279\u5f81\uff0c\u8fd9\u91cc\u670910\u4e2a\u6837\u4f8b\uff0c\u6bcf\u4e2a\u6837\u4f8b\u4e24\u4e2a\u7279\u5f81\u3002\u53ef\u4ee5\u8fd9\u6837\u8ba4\u4e3a\uff0c\u670910\u7bc7\u6587\u6863\uff0cx\u662f10\u7bc7\u6587\u6863\u4e2d\u201clearn\u201d\u51fa\u73b0\u7684TF-IDF\uff0cy\u662f10\u7bc7\u6587\u6863\u4e2d\u201cstudy\u201d\u51fa\u73b0\u7684TF-IDF\u3002 \u7b2c\u4e00\u6b65 \uff0c\u5206\u522b\u6c42x\u548cy\u7684\u5e73\u5747\u503c\uff0c\u7136\u540e\u5bf9\u4e8e\u6240\u6709\u7684\u6837\u4f8b\uff0c\u90fd\u51cf\u53bb\u5bf9\u5e94\u7684\u5747\u503c\u3002\u8fd9\u91ccx\u7684\u5747\u503c\u662f1.81\uff0cy\u7684\u5747\u503c\u662f1.91\uff0c\u90a3\u4e48\u4e00\u4e2a\u6837\u4f8b\u51cf\u53bb\u5747\u503c\u540e\u5373\u4e3a\uff080.69,0.49\uff09\uff0c\u5f97\u5230   \u7b2c\u4e8c\u6b65 \uff0c\u6c42\u7279\u5f81\u534f\u65b9\u5dee\u77e9\u9635\uff0c\u5982\u679c\u6570\u636e\u662f3\u7ef4\uff0c\u90a3\u4e48\u534f\u65b9\u5dee\u77e9\u9635\u662f   C \n=\\begin{pmatrix}  \n   cov(x,x)   cov(x,y)   cov(x,z)\n\\\\ cov(y,x)   cov(y,y)   cov(y,z)\n\\\\ cov(z,x)   cov(z,y)   cov(z,z)\n\\end{pmatrix}  C \n=\\begin{pmatrix}  \n   cov(x,x) & cov(x,y) & cov(x,z)\n\\\\ cov(y,x) & cov(y,y) & cov(y,z)\n\\\\ cov(z,x) & cov(z,y) & cov(z,z)\n\\end{pmatrix}   \u8fd9\u91cc\u53ea\u6709 x x \u548c y y \uff0c\u6c42\u89e3\u5f97   cov =\\begin{pmatrix}  0.6166   0.6154 \\\\ 0.6154   0.7166 \\end{pmatrix}  cov =\\begin{pmatrix}  0.6166 & 0.6154 \\\\ 0.6154 & 0.7166 \\end{pmatrix}   \u5bf9\u89d2\u7ebf\u4e0a\u5206\u522b\u662f x x \u548c y y \u7684\u65b9\u5dee\uff0c\u975e\u5bf9\u89d2\u7ebf\u4e0a\u662f\u534f\u65b9\u5dee\u3002\u534f\u65b9\u5dee\u662f\u8861\u91cf\u4e24\u4e2a\u53d8\u91cf\u540c\u65f6\u53d8\u5316\u7684\u53d8\u5316\u7a0b\u5ea6\u3002\u534f\u65b9\u5dee\u5927\u4e8e0\u8868\u793a x x \u548c y y \u82e5\u4e00\u4e2a\u589e\uff0c\u53e6\u4e00\u4e2a\u4e5f\u589e\uff1b\u5c0f\u4e8e0\u8868\u793a\u4e00\u4e2a\u589e\uff0c\u4e00\u4e2a\u51cf\u3002\u5982\u679c \uff58 \uff58 \u548c \uff59 \uff59 \u662f\u7edf\u8ba1\u72ec\u7acb\u7684\uff0c\u90a3\u4e48\u4e8c\u8005\u4e4b\u95f4\u7684\u534f\u65b9\u5dee\u5c31\u662f\uff10\uff1b\u4f46\u662f\u534f\u65b9\u5dee\u662f\uff10\uff0c\u5e76\u4e0d\u80fd\u8bf4\u660e \uff58 \uff58 \u548c \uff59 \uff59 \u662f\u72ec\u7acb\u7684\u3002\u534f\u65b9\u5dee\u7edd\u5bf9\u503c\u8d8a\u5927\uff0c\u4e24\u8005\u5bf9\u5f7c\u6b64\u7684\u5f71\u54cd\u8d8a\u5927\uff0c\u53cd\u4e4b\u8d8a\u5c0f\u3002\u534f\u65b9\u5dee\u662f\u6ca1\u6709\u5355\u4f4d\u7684\u91cf\uff0c\u56e0\u6b64\uff0c\u5982\u679c\u540c\u6837\u7684\u4e24\u4e2a\u53d8\u91cf\u6240\u91c7\u7528\u7684\u91cf\u7eb2\u53d1\u751f\u53d8\u5316\uff0c\u5b83\u4eec\u7684\u534f\u65b9\u5dee\u4e5f\u4f1a\u4ea7\u751f\u6811\u679d\u4e0a\u7684\u53d8\u5316\u3002  \u7b2c\u4e09\u6b65 \uff0c\u6c42\u534f\u65b9\u5dee\u7684\u7279\u5f81\u503c\u548c\u7279\u5f81\u5411\u91cf\uff0c\u5f97\u5230   eigenvalues =\\begin{pmatrix}  0.0491 \\\\ 1.2840 \\end{pmatrix}$$\n$$eigenvalues =\\begin{pmatrix}  -0.7352   -0.6779  \\\\ 0.6779   -0.7352 \\end{pmatrix}  eigenvalues =\\begin{pmatrix}  0.0491 \\\\ 1.2840 \\end{pmatrix}$$\n$$eigenvalues =\\begin{pmatrix}  -0.7352 & -0.6779  \\\\ 0.6779 & -0.7352 \\end{pmatrix}   \u4e0a\u9762\u662f\u4e24\u4e2a\u7279\u5f81\u503c\uff0c\u4e0b\u9762\u662f\u5bf9\u5e94\u7684\u7279\u5f81\u5411\u91cf\uff0c\u7279\u5f81\u503c 0.0491 0.0491 \u5bf9\u5e94\u7279\u5f81\u5411\u91cf\u4e3a\n  (-0.7352, 0.6779)^T (-0.7352, 0.6779)^T   \uff0c\u8fd9\u91cc\u7684\u7279\u5f81\u5411\u91cf\u90fd\u5f52\u4e00\u5316\u4e3a\u5355\u4f4d\u5411\u91cf\u3002  \u7b2c\u56db\u6b65 \uff0c\u5c06\u7279\u5f81\u503c\u6309\u7167\u4ece\u5927\u5230\u5c0f\u7684\u987a\u5e8f\u6392\u5e8f\uff0c\u9009\u62e9\u5176\u4e2d\u6700\u5927\u7684 k k \u4e2a\uff0c\u7136\u540e\u5c06\u5176\u5bf9\u5e94\u7684 k k \u4e2a\u7279\u5f81\u5411\u91cf\u5206\u522b\u4f5c\u4e3a\u5217\u5411\u91cf\u7ec4\u6210\u7279\u5f81\u5411\u91cf\u77e9\u9635\u3002  \u8fd9\u91cc\u7279\u5f81\u503c\u53ea\u6709\u4e24\u4e2a\uff0c\u6211\u4eec\u9009\u62e9\u5176\u4e2d\u6700\u5927\u7684\u90a3\u4e2a\uff0c\u8fd9\u91cc\u662f1.2840 \uff0c\u5bf9\u5e94\u7684\u7279\u5f81\u5411\u91cf\u662f (-0.6779, -0.7352)^T (-0.6779, -0.7352)^T \u3002  \u7b2c\u4e94\u6b65 \uff0c\u5c06\u6837\u672c\u70b9\u6295\u5f71\u5230\u9009\u53d6\u7684\u7279\u5f81\u5411\u91cf\u4e0a\u3002\u5047\u8bbe\u6837\u4f8b\u6570\u4e3am\uff0c\u7279\u5f81\u6570\u4e3an\uff0c\u51cf\u53bb\u5747\u503c\u540e\u7684\u6837\u672c\u77e9\u9635\u4e3aDataAdjust(m*n)\uff0c\u534f\u65b9\u5dee\u77e9\u9635\u662fn*n\uff0c\u9009\u53d6\u7684k\u4e2a\u7279\u5f81\u5411\u91cf\u7ec4\u6210\u7684\u77e9\u9635\u4e3aEigenVectors(n*k)\u3002\u90a3\u4e48\u6295\u5f71\u540e\u7684\u6570\u636eFinalData\u4e3a  FinalData(10*1) = DataAdjust(10*2\u77e9\u9635) x \u7279\u5f81\u5411\u91cf(-0.677873399, -0.735178656)T  \u5f97\u5230\u7684\u7ed3\u679c\u662f     \u8fd9\u6837\uff0c\u5c31\u5c06\u539f\u59cb\u6837\u4f8b\u7684n\u7ef4\u7279\u5f81\u53d8\u6210\u4e86k\u7ef4\uff0c\u8fd9k\u7ef4\u5c31\u662f\u539f\u59cb\u7279\u5f81\u5728k\u7ef4\u4e0a\u7684\u6295\u5f71\u3002  \u4e0a\u9762\u7684\u6570\u636e\u53ef\u4ee5\u8ba4\u4e3a\u662flearn\u548cstudy\u7279\u5f81\u878d\u5408\u4e3a\u4e00\u4e2a\u65b0\u7684\u7279\u5f81\u53eb\u505aLS\u7279\u5f81\uff0c\u8be5\u7279\u5f81\u57fa\u672c\u4e0a\u4ee3\u8868\u4e86\u8fd9\u4e24\u4e2a\u7279\u5f81\u3002\u4e0a\u8ff0\u8fc7\u7a0b\u5982\u4e0b\u56fe2\u63cf\u8ff0\uff1a   \u6b63\u53f7\u8868\u793a\u9884\u5904\u7406\u540e\u7684\u6837\u672c\u70b9\uff0c\u659c\u7740\u7684\u4e24\u6761\u7ebf\u5c31\u5206\u522b\u662f\u6b63\u4ea4\u7684\u7279\u5f81\u5411\u91cf\uff08\u7531\u4e8e\u534f\u65b9\u5dee\u77e9\u9635\u662f\u5bf9\u79f0\u7684\uff0c\u56e0\u6b64\u5176\u7279\u5f81\u5411\u91cf\u6b63\u4ea4\uff09\uff0c\u6700\u540e\u4e00\u6b65\u7684\u77e9\u9635\u4e58\u6cd5\u5c31\u662f\u5c06\u539f\u59cb\u6837\u672c\u70b9\u5206\u522b\u5f80\u7279\u5f81\u5411\u91cf\u5bf9\u5e94\u7684\u8f74\u4e0a\u505a\u6295\u5f71\u3002  \u6574\u4e2aPCA\u8fc7\u7a0b\u8c8c\u4f3c\u53ca\u5176\u7b80\u5355\uff0c\u5c31\u662f\u6c42\u534f\u65b9\u5dee\u7684\u7279\u5f81\u503c\u548c\u7279\u5f81\u5411\u91cf\uff0c\u7136\u540e\u505a\u6570\u636e\u8f6c\u6362\u3002\u4f46\u662f\u6709\u6ca1\u6709\u89c9\u5f97\u5f88\u795e\u5947\uff0c\u4e3a\u4ec0\u4e48\u6c42\u534f\u65b9\u5dee\u7684\u7279\u5f81\u5411\u91cf\u5c31\u662f\u6700\u7406\u60f3\u7684k\u7ef4\u5411\u91cf\uff1f\u5176\u80cc\u540e\u9690\u85cf\u7684\u610f\u4e49\u662f\u4ec0\u4e48\uff1f\u6574\u4e2aPCA\u7684\u610f\u4e49\u662f\u4ec0\u4e48\uff1f", 
            "title": "\u4e8c\u3001PCA\u5b9e\u4f8b"
        }, 
        {
            "location": "/\u5b66\u4e60/\u6df1\u5ea6\u5b66\u4e60/\u4e3b\u6210\u5206\u5206\u6790/#pca_2", 
            "text": "\u5148\u770b\u4e0b\u9762\u8fd9\u5e45\u56fe\uff1a   \u5728\u7b2c\u4e00\u90e8\u5206\u4e2d\uff0c\u6211\u4eec\u4e3e\u4e86\u4e00\u4e2a\u5b66\u751f\u6210\u7ee9\u7684\u4f8b\u5b50\uff0c\u91cc\u9762\u7684\u6570\u636e\u70b9\u662f\u516d\u7ef4\u7684\uff0c\u5373\u6bcf\u4e2a\u89c2\u6d4b\u503c\u662f6\u7ef4\u7a7a\u95f4\u4e2d\u7684\u4e00\u4e2a\u70b9\u3002\u6211\u4eec\u5e0c\u671b\u5c066\u7ef4\u7a7a\u95f4\u7528\u4f4e\u7ef4\u7a7a\u95f4\u8868\u793a\u3002  \u5148\u5047\u5b9a\u53ea\u6709\u4e8c\u7ef4\uff0c\u5373\u53ea\u6709\u4e24\u4e2a\u53d8\u91cf\uff0c\u5b83\u4eec\u7531\u6a2a\u5750\u6807\u548c\u7eb5\u5750\u6807\u6240\u4ee3\u8868\uff1b\u56e0\u6b64\u6bcf\u4e2a\u89c2\u6d4b\u503c\u90fd\u6709\u76f8\u5e94\u4e8e\u8fd9\u4e24\u4e2a\u5750\u6807\u8f74\u7684\u4e24\u4e2a\u5750\u6807\u503c\uff1b\u5982\u679c\u8fd9\u4e9b\u6570\u636e\u5f62\u6210\u4e00\u4e2a\u692d\u5706\u5f62\u72b6\u7684\u70b9\u9635\uff0c\u90a3\u4e48\u8fd9\u4e2a\u692d\u5706\u6709\u4e00\u4e2a\u957f\u8f74\u548c\u4e00\u4e2a\u77ed\u8f74\u3002\u5728\u77ed\u8f74\u65b9\u5411\u4e0a\uff0c\u6570\u636e\u53d8\u5316\u5f88\u5c11\uff1b\u5728\u6781\u7aef\u7684\u60c5\u51b5\uff0c\u77ed\u8f74\u5982\u679c\u9000\u5316\u6210\u4e00\u70b9\uff0c\u90a3\u53ea\u6709\u5728\u957f\u8f74\u7684\u65b9\u5411\u624d\u80fd\u591f\u89e3\u91ca\u8fd9\u4e9b\u70b9\u7684\u53d8\u5316\u4e86\uff1b\u8fd9\u6837\uff0c\u7531\u4e8c\u7ef4\u5230\u4e00\u7ef4\u7684\u964d\u7ef4\u5c31\u81ea\u7136\u5b8c\u6210\u4e86\u3002  \u4e0a\u56fe\u4e2d\uff0cu1\u5c31\u662f\u4e3b\u6210\u5206\u65b9\u5411\uff0c\u7136\u540e\u5728\u4e8c\u7ef4\u7a7a\u95f4\u4e2d\u53d6\u548cu1\u65b9\u5411\u6b63\u4ea4\u7684\u65b9\u5411\uff0c\u5c31\u662fu2\u7684\u65b9\u5411\u3002\u5219n\u4e2a\u6570\u636e\u5728u1\u8f74\u7684\u79bb\u6563\u7a0b\u5ea6\u6700\u5927\uff08\u65b9\u5dee\u6700\u5927\uff09\uff0c\u6570\u636e\u5728u1\u4e0a\u7684\u6295\u5f71\u4ee3\u8868\u4e86\u539f\u59cb\u6570\u636e\u7684\u7edd\u5927\u90e8\u5206\u4fe1\u606f\uff0c\u5373\u4f7f\u4e0d\u8003\u8651u2\uff0c\u4fe1\u606f\u635f\u5931\u4e5f\u4e0d\u591a\u3002\u800c\u4e14\uff0cu1\u3001u2\u4e0d\u76f8\u5173\u3002\u53ea\u8003\u8651u1\u65f6\uff0c\u4e8c\u7ef4\u964d\u4e3a\u4e00\u7ef4\u3002  \u692d\u5706\u7684\u957f\u77ed\u8f74\u76f8\u5dee\u5f97\u8d8a\u5927\uff0c\u964d\u7ef4\u4e5f\u8d8a\u6709\u9053\u7406\u3002", 
            "title": "\u4e09\u3001PCA\u63a8\u5bfc"
        }, 
        {
            "location": "/\u5b66\u4e60/\u6df1\u5ea6\u5b66\u4e60/\u4e3b\u6210\u5206\u5206\u6790/#146_1", 
            "text": "\u5728\u4fe1\u53f7\u5904\u7406\u4e2d\u8ba4\u4e3a\u4fe1\u53f7\u5177\u6709\u8f83\u5927\u7684\u65b9\u5dee\uff0c\u566a\u58f0\u6709\u8f83\u5c0f\u7684\u65b9\u5dee\uff0c\u4fe1\u566a\u6bd4\u5c31\u662f\u4fe1\u53f7\u4e0e\u566a\u58f0\u7684\u65b9\u5dee\u6bd4\uff0c\u8d8a\u5927\u8d8a\u597d\u3002\u5982\u524d\u9762\u7684\u56fe\uff0c\u6837\u672c\u5728u1\u4e0a\u7684\u6295\u5f71\u65b9\u5dee\u8f83\u5927\uff0c\u5728u2\u4e0a\u7684\u6295\u5f71\u65b9\u5dee\u8f83\u5c0f\uff0c\u90a3\u4e48\u53ef\u8ba4\u4e3au2\u4e0a\u7684\u6295\u5f71\u662f\u7531\u566a\u58f0\u5f15\u8d77\u7684\u3002  \u56e0\u6b64\u6211\u4eec\u8ba4\u4e3a\uff0c\u6700\u597d\u7684k\u7ef4\u7279\u5f81\u662f\u5c06n\u7ef4\u6837\u672c\u70b9\u8f6c\u6362\u4e3ak\u7ef4\u540e\uff0c\u6bcf\u4e00\u7ef4\u4e0a\u7684\u6837\u672c\u65b9\u5dee\u90fd\u5f88\u5927\u3002  \u6bd4\u5982\u6211\u4eec\u5c06\u4e0b\u56fe\u4e2d\u76845\u4e2a\u70b9\u6295\u5f71\u5230\u67d0\u4e00\u7ef4\u4e0a\uff0c\u8fd9\u91cc\u7528\u4e00\u6761\u8fc7\u539f\u70b9\u7684\u76f4\u7ebf\u8868\u793a\uff08\u6570\u636e\u5df2\u7ecf\u4e2d\u5fc3\u5316\uff09\uff1a   \u5047\u8bbe\u6211\u4eec\u9009\u62e9\u4e24\u6761\u4e0d\u540c\u7684\u76f4\u7ebf\u505a\u6295\u5f71\uff0c\u90a3\u4e48\u5de6\u53f3\u4e24\u6761\u4e2d\u54ea\u4e2a\u597d\u5462\uff1f\u6839\u636e\u6211\u4eec\u4e4b\u524d\u7684\u65b9\u5dee\u6700\u5927\u5316\u7406\u8bba\uff0c\u5de6\u8fb9\u7684\u597d\uff0c\u56e0\u4e3a\u6295\u5f71\u540e\u7684\u6837\u672c\u70b9\u4e4b\u95f4\u65b9\u5dee\u6700\u5927\uff08\u4e5f\u53ef\u4ee5\u8bf4\u662f\u6295\u5f71\u7684\u7edd\u5bf9\u503c\u4e4b\u548c\u6700\u5927\uff09\u3002  \u8ba1\u7b97\u6295\u5f71\u7684\u65b9\u6cd5\u89c1\u4e0b\u56fe5\uff1a   \u56fe\u4e2d\uff0c\u7ea2\u8272\u70b9\u8868\u793a\u6837\u4f8b \uff0c\u84dd\u8272\u70b9\u8868\u793a\u5728u\u4e0a\u7684\u6295\u5f71\uff0cu\u662f\u76f4\u7ebf\u7684\u659c\u7387\u4e5f\u662f\u76f4\u7ebf\u7684\u65b9\u5411\u5411\u91cf\uff0c\u800c\u4e14\u662f\u5355\u4f4d\u5411\u91cf\u3002\u84dd\u8272\u70b9\u662f \u5728u\u4e0a\u7684\u6295\u5f71\u70b9\uff0c\u79bb\u539f\u70b9\u7684\u8ddd\u79bb\u662f \\ x,u>\uff08\u5373xTu \u6216\u8005uTx \uff09\u3002", 
            "title": "1. \u6700\u5927\u65b9\u5dee\u7406\u8bba"
        }, 
        {
            "location": "/\u5b66\u4e60/\u6df1\u5ea6\u5b66\u4e60/\u4e3b\u6210\u5206\u5206\u6790/#246_1", 
            "text": "\u6211\u4eec\u4f7f\u7528\u6700\u5c0f\u4e8c\u4e58\u6cd5\u6765\u786e\u5b9a\u5404\u4e2a\u4e3b\u8f74\uff08\u4e3b\u6210\u5206\uff09\u7684\u65b9\u5411\u3002\n \u5bf9\u7ed9\u5b9a\u7684\u4e00\u7ec4\u6570\u636e\uff08\u4e0b\u9762\u7684\u9610\u8ff0\u4e2d\uff0c\u5411\u91cf\u4e00\u822c\u5747\u6307\u5217\u5411\u91cf\uff09\uff1a \\{\\vec{\\boldsymbol z_1},\\vec{\\boldsymbol z_2},...,\\vec{\\boldsymbol z_n} \\} \\{\\vec{\\boldsymbol z_1},\\vec{\\boldsymbol z_2},...,\\vec{\\boldsymbol z_n} \\} <span><span class=\"MathJax_Preview\">\\{\\vec{\\boldsymbol z_1},\\vec{\\boldsymbol z_2},...,\\vec{\\boldsymbol z_n} \\}</span><script type=\"math/tex\">\\{\\vec{\\boldsymbol z_1},\\vec{\\boldsymbol z_2},...,\\vec{\\boldsymbol z_n} \\} \n \u5176\u6570\u636e\u4e2d\u5fc3\u4f4d\u4e8e:\n$$ \\overrightarrow{\\boldsymbol{\\mu}} = \\frac{1}{n}\\sum^n_{i=1}\\vec{\\boldsymbol z_i}$$\n \u6570\u636e\u4e2d\u5fc3\u5316\uff08\u5c06\u5750\u6807\u539f\u70b9\u79fb\u5230\u6837\u672c\u70b9\u7684\u4e2d\u5fc3\u70b9\uff09\uff1a \\{\\vec{\\boldsymbol x_1},\\vec{\\boldsymbol x_2},...,\\vec{\\boldsymbol x_n} \\}=\\{\\vec{\\boldsymbol z_1}-\\overrightarrow{\\boldsymbol{\\mu}},\\vec{\\boldsymbol z_2}-\\overrightarrow{\\boldsymbol{\\mu}},...,\\vec{\\boldsymbol z_n}-\\overrightarrow{\\boldsymbol{\\mu}} \\} \\{\\vec{\\boldsymbol x_1},\\vec{\\boldsymbol x_2},...,\\vec{\\boldsymbol x_n} \\}=\\{\\vec{\\boldsymbol z_1}-\\overrightarrow{\\boldsymbol{\\mu}},\\vec{\\boldsymbol z_2}-\\overrightarrow{\\boldsymbol{\\mu}},...,\\vec{\\boldsymbol z_n}-\\overrightarrow{\\boldsymbol{\\mu}} \\} <span><span class=\"MathJax_Preview\">\\{\\vec{\\boldsymbol x_1},\\vec{\\boldsymbol x_2},...,\\vec{\\boldsymbol x_n} \\}=\\{\\vec{\\boldsymbol z_1}-\\overrightarrow{\\boldsymbol{\\mu}},\\vec{\\boldsymbol z_2}-\\overrightarrow{\\boldsymbol{\\mu}},...,\\vec{\\boldsymbol z_n}-\\overrightarrow{\\boldsymbol{\\mu}} \\}</span><script type=\"math/tex\">\\{\\vec{\\boldsymbol x_1},\\vec{\\boldsymbol x_2},...,\\vec{\\boldsymbol x_n} \\}=\\{\\vec{\\boldsymbol z_1}-\\overrightarrow{\\boldsymbol{\\mu}},\\vec{\\boldsymbol z_2}-\\overrightarrow{\\boldsymbol{\\mu}},...,\\vec{\\boldsymbol z_n}-\\overrightarrow{\\boldsymbol{\\mu}} \\} \n \u4e2d\u5fc3\u5316\u540e\u7684\u6570\u636e\u5728\u7b2c\u4e00\u4e3b\u8f74u1\u65b9\u5411\u4e0a\u5206\u5e03\u6563\u7684\u6700\u5f00\uff0c\u4e5f\u5c31\u662f\u8bf4\u5728u1\u65b9\u5411\u4e0a\u7684\u6295\u5f71\u7684\u7edd\u5bf9\u503c\u4e4b\u548c\u6700\u5927\uff08\u4e5f\u53ef\u4ee5\u8bf4\u65b9\u5dee\u6700\u5927\uff09\uff0c\u8ba1\u7b97\u6295\u5f71\u7684\u65b9\u6cd5\u4e0a\u9762\u5df2\u7ecf\u9610\u8ff0\uff0c\u5c31\u662f\u5c06x\u4e0eu1\u505a\u5185\u79ef\uff0c\u7531\u4e8e\u53ea\u9700\u8981\u6c42u1\u7684\u65b9\u5411\uff0c\u6240\u4ee5\u8bbeu1\u4e5f\u662f\u5355\u4f4d\u5411\u91cf\u3002  \u5728\u8fd9\u91cc\uff0c\u4e5f\u5c31\u662f\u6700\u5927\u5316\u4e0b\u5f0f\uff1a\n$$ \\frac{1}{n}\\sum^n_{i=1}\\vec{\\boldsymbol x_i}\\vec{\\boldsymbol{u_1}} $$\n \u7531\u77e9\u9635\u4ee3\u6570\u76f8\u5173\u77e5\u8bc6\u53ef\u77e5\uff0c\u53ef\u4ee5\u5bf9\u7edd\u5bf9\u503c\u7b26\u53f7\u9879\u8fdb\u884c\u5e73\u65b9\u5904\u7406\uff0c\u6bd4\u8f83\u65b9\u4fbf\u3002\u6240\u4ee5\u8fdb\u800c\u5c31\u662f\u6700\u5927\u5316\u4e0b\u5f0f\uff1a\n$$ \\frac{1}{n}\\sum^n_{i=1} \\left| \\vec{\\boldsymbol x_i} \\cdot \\vec{\\boldsymbol{u_1}} \\right|^2\n = \\frac{1}{n}\\sum^n_{i=1} \\left( \\vec{\\boldsymbol x_i} \\cdot \\vec{\\boldsymbol{u_1}} \\right)^2 $$  \u4e24\u4e2a\u5411\u91cf\u505a\u5185\u79ef\uff0c\u53ef\u4ee5\u8f6c\u5316\u6210\u77e9\u9635\u4e58\u6cd5\uff1a\n  \\vec{\\boldsymbol x_i} \\cdot \\vec{\\boldsymbol{u_1}} \n ={\\boldsymbol x_i}^T {\\boldsymbol{u_1}} \\vec{\\boldsymbol x_i} \\cdot \\vec{\\boldsymbol{u_1}} \n ={\\boldsymbol x_i}^T {\\boldsymbol{u_1}} <span><span class=\"MathJax_Preview\">\\vec{\\boldsymbol x_i} \\cdot \\vec{\\boldsymbol{u_1}} \n ={\\boldsymbol x_i}^T {\\boldsymbol{u_1}}</span><script type=\"math/tex\">\\vec{\\boldsymbol x_i} \\cdot \\vec{\\boldsymbol{u_1}} \n ={\\boldsymbol x_i}^T {\\boldsymbol{u_1}}  \u6240\u4ee5\u76ee\u6807\u51fd\u6570\u53ef\u4ee5\u8868\u793a\u4e3a\uff1a\n $$\\frac{1}{n}\\sum^n_{i=1} \\left( {\\boldsymbol x_i}^T {\\boldsymbol{u_1}} \\right)^2 $$ \\begin{pmatrix} \\\\ \\\\ \\\\   \\\\ \\\\ \\\\ \\\\ \\\\ \\\\ \\\\ \\\\ \\\\  \\end{pmatrix} \\begin{pmatrix} \\\\ \\\\ \\\\   \\\\ \\\\ \\\\ \\\\ \\\\ \\\\ \\\\ \\\\ \\\\  \\end{pmatrix} <span><span class=\"MathJax_Preview\">\\begin{pmatrix} \\\\ \\\\ \\\\   \\\\ \\\\ \\\\ \\\\ \\\\ \\\\ \\\\ \\\\ \\\\  \\end{pmatrix}</span><script type=\"math/tex\">\\begin{pmatrix} \\\\ \\\\ \\\\   \\\\ \\\\ \\\\ \\\\ \\\\ \\\\ \\\\ \\\\ \\\\  \\end{pmatrix}  \u62ec\u53f7\u91cc\u9762\u5c31\u662f\u77e9\u9635\u4e58\u6cd5\u8868\u793a\u5411\u91cf\u5185\u79ef\uff0c\u7531\u4e8e\u5217\u5411\u91cf\u8f6c\u7f6e\u4ee5\u540e\u662f\u884c\u5411\u91cf\uff0c\u884c\u5411\u91cf\u4e58\u4ee5\u5217\u5411\u91cf\u5f97\u5230\u4e00\u4e2a\u6570\uff0c\u4e00\u4e2a\u6570\u7684\u8f6c\u7f6e\u8fd8\u662f\u5176\u672c\u8eab\uff0c\u6240\u4ee5\u53c8\u53ef\u4ee5\u5c06\u76ee\u6807\u51fd\u6570\u5316\u4e3a\uff1a \\frac{1}{n}\\sum^n_{i=1} \\left( {\\boldsymbol x_i}^T {\\boldsymbol{u_1}} \\right)^2 \n=\\frac{1}{n}\\sum^n_{i=1} \\left( {\\boldsymbol x_i}^T {\\boldsymbol{u_1}} \\right)^T \\left( {\\boldsymbol x_i}^T {\\boldsymbol{u_1}} \\right)\n\\\\=\\frac{1}{n}\\sum^n_{i=1} {\\boldsymbol{u_1}}^T {\\boldsymbol x_i} {\\boldsymbol x_i}^T {\\boldsymbol{u_1}}\n\\\\=\\frac{1}{n}{\\boldsymbol{u_1}}^T \\left( \\sum^n_{i=1}  {\\boldsymbol x_i} {\\boldsymbol x_i}^T \\right) {\\boldsymbol{u_1}}\n\\\\=\\frac{1}{n}{\\boldsymbol{u_1}}^T XX^T {\\boldsymbol{u_1}} \\frac{1}{n}\\sum^n_{i=1} \\left( {\\boldsymbol x_i}^T {\\boldsymbol{u_1}} \\right)^2 \n=\\frac{1}{n}\\sum^n_{i=1} \\left( {\\boldsymbol x_i}^T {\\boldsymbol{u_1}} \\right)^T \\left( {\\boldsymbol x_i}^T {\\boldsymbol{u_1}} \\right)\n\\\\=\\frac{1}{n}\\sum^n_{i=1} {\\boldsymbol{u_1}}^T {\\boldsymbol x_i} {\\boldsymbol x_i}^T {\\boldsymbol{u_1}}\n\\\\=\\frac{1}{n}{\\boldsymbol{u_1}}^T \\left( \\sum^n_{i=1}  {\\boldsymbol x_i} {\\boldsymbol x_i}^T \\right) {\\boldsymbol{u_1}}\n\\\\=\\frac{1}{n}{\\boldsymbol{u_1}}^T XX^T {\\boldsymbol{u_1}} <span><span class=\"MathJax_Preview\">\\frac{1}{n}\\sum^n_{i=1} \\left( {\\boldsymbol x_i}^T {\\boldsymbol{u_1}} \\right)^2 \n=\\frac{1}{n}\\sum^n_{i=1} \\left( {\\boldsymbol x_i}^T {\\boldsymbol{u_1}} \\right)^T \\left( {\\boldsymbol x_i}^T {\\boldsymbol{u_1}} \\right)\n\\\\=\\frac{1}{n}\\sum^n_{i=1} {\\boldsymbol{u_1}}^T {\\boldsymbol x_i} {\\boldsymbol x_i}^T {\\boldsymbol{u_1}}\n\\\\=\\frac{1}{n}{\\boldsymbol{u_1}}^T \\left( \\sum^n_{i=1}  {\\boldsymbol x_i} {\\boldsymbol x_i}^T \\right) {\\boldsymbol{u_1}}\n\\\\=\\frac{1}{n}{\\boldsymbol{u_1}}^T XX^T {\\boldsymbol{u_1}}</span><script type=\"math/tex\">\\frac{1}{n}\\sum^n_{i=1} \\left( {\\boldsymbol x_i}^T {\\boldsymbol{u_1}} \\right)^2 \n=\\frac{1}{n}\\sum^n_{i=1} \\left( {\\boldsymbol x_i}^T {\\boldsymbol{u_1}} \\right)^T \\left( {\\boldsymbol x_i}^T {\\boldsymbol{u_1}} \\right)\n\\\\=\\frac{1}{n}\\sum^n_{i=1} {\\boldsymbol{u_1}}^T {\\boldsymbol x_i} {\\boldsymbol x_i}^T {\\boldsymbol{u_1}}\n\\\\=\\frac{1}{n}{\\boldsymbol{u_1}}^T \\left( \\sum^n_{i=1}  {\\boldsymbol x_i} {\\boldsymbol x_i}^T \\right) {\\boldsymbol{u_1}}\n\\\\=\\frac{1}{n}{\\boldsymbol{u_1}}^T XX^T {\\boldsymbol{u_1}}  \u5176\u4e2d\u7684 {\\boldsymbol{u_1}}^T XX^T {\\boldsymbol{u_1}} {\\boldsymbol{u_1}}^T XX^T {\\boldsymbol{u_1}} \u5c31\u662f\u4e00\u4e2a\u4e8c\u6b21\u578b\uff0c\n \u6211\u4eec\u5047\u8bbe  XX^T XX^T  \u7684\u67d0\u4e00\u7279\u5f81\u503c\u4e3a \\lambda \\lambda \uff0c\u5bf9\u5e94\u7684\u7279\u5f81\u5411\u91cf\u4e3a$\\xi $\uff0c\u6709 (XX^T)^T=XX^T (XX^T)^T=XX^T <span><span class=\"MathJax_Preview\">(XX^T)^T=XX^T</span><script type=\"math/tex\">(XX^T)^T=XX^T  XX^T\\xi=\\lambda\\xi XX^T\\xi=\\lambda\\xi <span><span class=\"MathJax_Preview\">XX^T\\xi=\\lambda\\xi</span><script type=\"math/tex\">XX^T\\xi=\\lambda\\xi  (XX^T\\xi)^T\\xi=(\\lambda\\xi)^T\\xi (XX^T\\xi)^T\\xi=(\\lambda\\xi)^T\\xi <span><span class=\"MathJax_Preview\">(XX^T\\xi)^T\\xi=(\\lambda\\xi)^T\\xi</span><script type=\"math/tex\">(XX^T\\xi)^T\\xi=(\\lambda\\xi)^T\\xi  \\xi^TXX^T\\xi=\\lambda\\xi^T\\xi \\xi^TXX^T\\xi=\\lambda\\xi^T\\xi <span><span class=\"MathJax_Preview\">\\xi^TXX^T\\xi=\\lambda\\xi^T\\xi</span><script type=\"math/tex\">\\xi^TXX^T\\xi=\\lambda\\xi^T\\xi  \\xi^TXX^T\\xi = (X^T\\xi)^T(X^T\\xi) =\\lVert X^T\\xi\\rVert^2 = \\lambda\\xi^T\\xi = \\lambda\\lVert\\xi\\rVert^2 \\ge 0 \\xi^TXX^T\\xi = (X^T\\xi)^T(X^T\\xi) =\\lVert X^T\\xi\\rVert^2 = \\lambda\\xi^T\\xi = \\lambda\\lVert\\xi\\rVert^2 \\ge 0 <span><span class=\"MathJax_Preview\">\\xi^TXX^T\\xi = (X^T\\xi)^T(X^T\\xi) =\\lVert X^T\\xi\\rVert^2 = \\lambda\\xi^T\\xi = \\lambda\\lVert\\xi\\rVert^2 \\ge 0</span><script type=\"math/tex\">\\xi^TXX^T\\xi = (X^T\\xi)^T(X^T\\xi) =\\lVert X^T\\xi\\rVert^2 = \\lambda\\xi^T\\xi = \\lambda\\lVert\\xi\\rVert^2 \\ge 0 \n   \u6240\u4ee5 \uff0c \u662f\u534a\u6b63\u5b9a\u7684\u5bf9\u79f0\u77e9\u9635\uff0c\u5373 \u662f\u534a\u6b63\u5b9a\u9635\u7684\u4e8c\u6b21\u578b\uff0c\u7531\u77e9\u9635\u4ee3\u6570\u77e5\u8bc6\u5f97\u51fa\uff0c\u76ee\u6807\u51fd\u6570\u5b58\u5728\u6700\u5927\u503c\uff01  \u4e0b\u9762\u6211\u4eec\u6c42\u89e3\u6700\u5927\u503c\u3001\u53d6\u5f97\u6700\u5927\u503c\u65f6u1\u7684\u65b9\u5411\u8fd9\u4e24\u4e2a\u95ee\u9898\u3002  \u5148\u89e3\u51b3\u7b2c\u4e00\u4e2a\u95ee\u9898\uff0c\u5bf9\u4e8e\u5411\u91cfx\u7684\u4e8c\u8303\u6570\u5e73\u65b9\u4e3a:   \u540c\u6837\uff0c\u76ee\u6807\u51fd\u6570\u4e5f\u53ef\u4ee5\u8868\u793a\u6210\u6620\u5c04\u540e\u7684\u5411\u91cf\u7684\u4e8c\u8303\u6570\u5e73\u65b9\uff1a   \u628a\u4e8c\u6b21\u578b\u5316\u6210\u4e00\u4e2a\u8303\u6570\u7684\u5f62\u5f0f\uff0c\u7531\u4e8eu1\u53d6\u5355\u4f4d\u5411\u91cf\uff0c\u6700\u5927\u5316\u76ee\u6807\u51fd\u6570\u7684\u57fa\u672c\u95ee\u9898\u4e5f\u5c31\u8f6c\u5316\u4e3a\uff1a\u5bf9\u4e00\u4e2a\u77e9\u9635\uff0c\u5b83\u5bf9\u4e00\u4e2a\u5411\u91cf\u505a\u53d8\u6362\uff0c\u53d8\u6362\u524d\u540e\u7684\u5411\u91cf\u7684\u6a21\u957f\u4f38\u7f29\u5c3a\u5ea6\u5982\u4f55\u624d\u80fd\u6700\u5927\uff1f\u6211\u4eec\u6709\u77e9\u9635\u4ee3\u6570\u4e2d\u7684\u5b9a\u7406\u77e5\uff0c\u5411\u91cf\u7ecf\u77e9\u9635\u6620\u5c04\u524d\u540e\u7684\u5411\u91cf\u957f\u5ea6\u4e4b\u6bd4\u7684\u6700\u5927\u503c\u5c31\u662f\u8fd9\u4e2a\u77e9\u9635\u7684\u6700\u5927\u5947\u5f02\u503c\uff0c\u5373\uff1a   \u5f0f\u4e2d\uff0c \u662f\u77e9\u9635A\u7684\u6700\u5927\u5947\u5f02\u503c\uff08\u4ea6\u662f\u77e9\u9635A\u7684\u4e8c\u8303\u6570\uff09\uff0c\u5b83\u7b49\u4e8e \uff08\u6216 \uff09\u7684\u6700\u5927\u7279\u5f81\u503c\u5f00\u5e73\u65b9\u3002  \u9488\u5bf9\u672c\u95ee\u9898\u6765\u8bf4\uff0c \u662f\u534a\u6b63\u5b9a\u5bf9\u79f0\u9635\uff0c\u4e5f\u5c31\u610f\u5473\u7740\u5b83\u7684\u7279\u5f81\u503c\u90fd\u5927\u4e8e\u7b49\u4e8e0\uff0c\u4e14\u4e0d\u540c\u7279\u5f81\u503c\u5bf9\u5e94\u7684\u7279\u5f81\u5411\u91cf\u662f\u6b63\u4ea4\u7684\uff0c\u6784\u6210\u6240\u5728\u7a7a\u95f4\u7684\u4e00\u7ec4\u5355\u4f4d\u6b63\u4ea4\u57fa\u3002  \u518d\u89e3\u51b3\u7b2c\u4e8c\u4e2a\u95ee\u9898\uff0c\u5bf9\u4e00\u822c\u60c5\u51b5\uff0c\u8bbe\u5bf9\u79f0\u9635 \u7684n\u4e2a\u7279\u5f81\u503c\u5206\u522b\u4e3a\uff1a   \u76f8\u5e94\u7684\u5355\u4f4d\u7279\u5f81\u5411\u91cf\u4e3a\uff1a   \u4efb\u53d6\u4e00\u4e2a\u5411\u91cfx\uff0c\u7528\u7279\u5f81\u5411\u91cf\u6784\u6210\u7684\u7a7a\u95f4\u4e2d\u7684\u8fd9\u7ec4\u57fa\u8868\u793a\u4e3a\uff1a   \u5219\uff1a   \u6240\u4ee5\uff1a   \u9488\u5bf9\u7b2c\u4e8c\u4e2a\u95ee\u9898\uff0c\u6211\u4eec\u53d6\u4e0a\u5f0f\u4e2d\u7684 \uff0c\u76ee\u6807\u51fd\u6570 \u53d6\u5f97\u6700\u5927\u503c\uff0c\u4e5f\u5c31\u662f \u7684\u6700\u5927\u7279\u5f81\u503c\u65f6\uff0c\u5bf9\u5e94\u7684\u7279\u5f81\u5411\u91cf\u7684\u65b9\u5411\uff0c\u5c31\u662f\u7b2c\u4e00\u4e3b\u6210\u5206u1\u7684\u65b9\u5411\uff01\uff08\u7b2c\u4e8c\u4e3b\u6210\u5206\u7684\u65b9\u5411\u4e3a \u7684\u7b2c\u4e8c\u5927\u7279\u5f81\u503c\u5bf9\u5e94\u7684\u7279\u5f81\u5411\u91cf\u7684\u65b9\u5411\uff0c\u4ee5\u6b64\u7c7b\u63a8\uff09\u3002  \u8bc1\u660e\u5b8c\u6bd5\u3002  \u4e3b\u6210\u5206\u6240\u5360\u6574\u4e2a\u4fe1\u606f\u7684\u767e\u5206\u6bd4\u53ef\u7528\u4e0b\u5f0f\u8ba1\u7b97\uff1a   \u5f0f\u4e2d\u5206\u6bcd\u4e3a \u6240\u6709\u5947\u5f02\u503c\u5e73\u65b9\u548c\uff0c\u5206\u5b50\u4e3a\u6240\u9009\u53d6\u7684\u524dk\u5927\u5947\u5f02\u503c\u5e73\u65b9\u548c\u3002  \u6709\u4e9b\u7814\u7a76\u5de5\u4f5c\u8868\u660e\uff0c\u6240\u9009\u7684\u4e3b\u8f74\u603b\u957f\u5ea6\u5360\u6240\u6709\u4e3b\u8f74\u957f\u5ea6\u4e4b\u548c\u7684\u5927\u7ea685% \u5373\u53ef\uff0c\u5176\u5b9e\uff0c\u8fd9\u53ea\u662f\u4e00\u4e2a\u5927\u4f53\u7684\u8bf4\u6cd5\uff0c\u5177\u4f53\u9009\u591a\u5c11\u4e2a\uff0c\u8981\u770b\u5b9e\u9645\u60c5\u51b5\u800c\u5b9a\u3002", 
            "title": "2. \u6700\u5c0f\u4e8c\u4e58\u6cd5"
        }, 
        {
            "location": "/\u5b66\u4e60/\u6df1\u5ea6\u5b66\u4e60/\u4e3b\u6210\u5206\u5206\u6790/#3", 
            "text": "PCA\u5c06n\u4e2a\u7279\u5f81\u964d\u7ef4\u5230k\u4e2a\uff0c\u53ef\u4ee5\u7528\u6765\u8fdb\u884c\u6570\u636e\u538b\u7f29\uff0c\u4f8b\u5982100\u7ef4\u7684\u5411\u91cf\u6700\u540e\u53ef\u4ee5\u752810\u7ef4\u6765\u8868\u793a\uff0c\u90a3\u4e48\u538b\u7f29\u7387\u4e3a90%\u3002\u540c\u6837\u56fe\u50cf\u5904\u7406\u9886\u57df\u7684KL\u53d8\u6362\u4f7f\u7528PCA\u505a\u56fe\u50cf\u538b\u7f29\uff0c\u4eba\u8138\u68c0\u6d4b\u548c\u5339\u914d\u3002\u6bd4\u5982\u5982\u4e0b\u6458\u81ea\u53e6\u4e00\u7bc7 \u535a\u5ba2 \u4e0a\u7684Matlab\u5b9e\u9a8c\u7ed3\u679c\uff1a     \u53ef\u89c1\u6d4b\u8bd5\u6837\u672c\u4e3a\u4eba\u8138\u7684\u6837\u672c\u7684\u91cd\u5efa\u8bef\u5dee\u663e\u7136\u5c0f\u4e8e\u975e\u4eba\u8138\u7684\u91cd\u5efa\u8bef\u5dee\u3002  \u53e6\u5916PCA\u8fd8\u53ef\u4ee5\u8054\u7cfb\u5947\u5f02\u503c\u5206\u89e3\uff08SVD\uff09\uff0c\u6765\u7528\u4e8e\u9884\u6d4b\u77e9\u9635\u4e2d\u7f3a\u5931\u7684\u5143\u7d20\uff0c\u53ef\u4ee5\u5e94\u7528\u5230\u8bc4\u5206\u9884\u6d4b\u7b49\u5b9e\u9645\u9879\u76ee\u4e2d\u3002\u8be6\u89c1\u540e\u7eedSVD\u7684\u535a\u5ba2\u3002  \u6709\u95ee\u9898\u6216\u8005\u60f3\u6cd5\u53ef\u4ee5\u548c\u6211\u4ea4\u6d41\uff1a  \u8f6c\u8f7d\u8bf7\u58f0\u660e\u51fa\u5904\uff1a http://blog.csdn.net/zhongkelee/article/details/44064401", 
            "title": "3.\u610f\u4e49"
        }, 
        {
            "location": "/\u5b66\u4e60/\u6df1\u5ea6\u5b66\u4e60/\u6700\u5c0f\u4e8c\u4e58\u6cd5/", 
            "text": "\u6700\u5c0f\u4e8c\u4e58\u6cd5\n\n\n\u6211\u4eec\u4ece\u77e9\u9635\u7684\u89d2\u5ea6\u6765\u7406\u89e3\uff1a \n\u9996\u5148\u6211\u4eec\u7ed9\u51fa\u4e00\u4e2a\u77e9\u9635\u4e2d\u7684\u5b9a\u4e49\uff1a \n\n\n\n\nR(A)=\\{Ax|x\u2208R^n\\},A\u2208R^{n\u00d7n}\n\n\nR(A)=\\{Ax|x\u2208R^n\\},A\u2208R^{n\u00d7n}\n\n\n\n\n\u6709\u4e86\u4e0a\u9762\u7684\u5b9a\u4e49\u4e4b\u540e\uff0c\u6211\u4eec\u5c31\u53ef\u4ee5\u5199\u51fa\u6700\u5c0f\u4e8c\u4e58\u95ee\u9898\u7684\u77e9\u9635\u5f62\u5f0f\uff1a \n\n\n\n\n\u2203b\u2209R(A),b\u2208R^n,\\min_{x\u2208R^n}\\parallel Ax\u2212b\\parallel _2\n\n\n\u2203b\u2209R(A),b\u2208R^n,\\min_{x\u2208R^n}\\parallel Ax\u2212b\\parallel _2\n\n\n\n\n\u7528bi\u683c\u9ad8\u4e00\u70b9\u7684\u8bf4\u6cd5\u6765\u8bf4\uff0c\u5c31\u662f\u6c42\u5728\u6b27\u51e0\u91cc\u5f97\u7a7a\u95f4\u4e2d\u4ee52-\u8303\u6570\u4f5c\u4e3a\u8ddd\u79bb\uff0c\u4f7f\u5f97\u5411\u91cfAx\u4e0eb\u4e4b\u95f4\u8ddd\u79bb\u6700\u5c0f\u7684x\u3002 \n\u6211\u4eec\u7684\u76ee\u6807\u662f\u6c42\uff1a \n\n\n\n\nmin_{x\u2208R^n}\\parallel Ax\u2212\\parallel_2\n\n\nmin_{x\u2208R^n}\\parallel Ax\u2212\\parallel_2\n\n\n\n\n\u5f53\u7136\u6211\u4eec\u77e5\u9053\uff0c\u4f7f\u5f97\u8ddd\u79bb\u6700\u5c0f\u7684\u5411\u91cfx\u4e0e\u4f7f\u5f97\u8ddd\u79bb\u5e73\u65b9\u6700\u5c0f\u7684\u5411\u91cfx\u662f\u76f8\u540c\u7684\uff0c\u4e8e\u662f\u6211\u4eec\u53ef\u4ee5\u5c06\u6240\u6c42\u7684\u76ee\u6807\u6539\u5199\u4e3a\uff1a \n\n\n\n\nmin_{x\u2208R^n}{\\parallel Ax\u2212b\\parallel_2}^2\n\n\nmin_{x\u2208R^n}{\\parallel Ax\u2212b\\parallel_2}^2\n\n\n\n\n\u7ed3\u5408\u4e00\u4e9b\u77e9\u9635\u3001\u884c\u5217\u5f0f\u7684\u77e5\u8bc6\uff0c\u6211\u4eec\u77e5\u9053\uff1a \n\n\n\n\n{\\parallel Ax\u2212b\\parallel_2}^2=(Ax\u2212b)^T\u2217(Ax\u2212b)\n\n\n{\\parallel Ax\u2212b\\parallel_2}^2=(Ax\u2212b)^T\u2217(Ax\u2212b)\n\n\n\n\n\u6839\u636e\u6211\u4eec\u5927\u4e00\u5b66\u8fc7\u7684\u9ad8\u6570\u77e5\u8bc6\uff0c\u6211\u4eec\u77e5\u9053\uff0c\u6c42\u6700\u6781\u503c\u95ee\u9898\u76f4\u63a5\u5bf9\u5e94\u7684\u5c31\u662f\u5bfc\u6570\u4e3a\u96f6\uff0c\u56e0\u6b64\u6211\u4eec\u8bd5\u56fe\u5c06\u6240\u7ed9\u51fa\u7684\u539f\u5f0f\u7684\u77e9\u9635\u5f62\u5f0f\u6c42\u5bfc\uff1a\n\n\n\u4e0d\u8fc7\u9996\u5148\u6211\u4eec\u9700\u8981\u8865\u5145\u77e9\u9635\u5fae\u79ef\u5206(matrix calculus)\u7684\u4e00\u4e9b\u77e5\u8bc6 \n(PS:\u662f\u77e9\u9635\u5fae\u79ef\u5206\u5427\u2026\u6211\u6ca1\u6709\u7ffb\u8bd1\u9519\u5427\u2026.) \n\n\n\n\n\\frac {\\partial x^Ta}{\\partial x}=\\frac {\\partial a^Tx}{\\partial x}=a\n\n\n\\frac {\\partial x^Ta}{\\partial x}=\\frac {\\partial a^Tx}{\\partial x}=a\n\n\n\n\n\n\n\\frac {\\partial x^TAx}{\\partial x}=Ax+A^Tx\n\n\n\\frac {\\partial x^TAx}{\\partial x}=Ax+A^Tx\n\n\n\n\n\u5982\u679c\u77e9\u9635A\u662f\u5bf9\u79f0\u7684(symmetric matrix): \n\n\n\n\nAx+A^Tx=2Ax\n\n\nAx+A^Tx=2Ax\n\n\n\n\n\u63a5\u4e0b\u6765\uff0c\u6211\u4eec\u5bf9\u539f\u5f0f\u5316\u7b80\u5e76\u6c42\u5176\u5bf9x\u7684\u5bfc\u6570\uff1a \n\n\n\n\n{\u2225Ax\u2212b\u2225_2}^2=x^TA^TAx\u2212b^TAx\u2212x^TA^Tb+b^Tb\n\n\n{\u2225Ax\u2212b\u2225_2}^2=x^TA^TAx\u2212b^TAx\u2212x^TA^Tb+b^Tb\n\n\n\n\n\u6c42\u5bfc\u5f97\u5230\uff1a \n\n\n\n\n\\frac {\\partial{\\parallel Ax\u2212b\\parallel}^2}{\\partial x}=2A^TAx\u22122A^Tb=0\n\n\n\\frac {\\partial{\\parallel Ax\u2212b\\parallel}^2}{\\partial x}=2A^TAx\u22122A^Tb=0\n\n\n\n\n\u4e8e\u662f\u6211\u4eec\u5c31\u5f97\u5230\u4e86\uff0c\u6700\u5c0f\u4e8c\u4e58\u6cd5\u89e3\u7684\u77e9\u9635\u5f62\u5f0f\uff1a \n\n\n\n\nx=(A^TA)^{\u22121}A^Tb\n\n\nx=(A^TA)^{\u22121}A^Tb\n\n\n\n\n\u5f53\u7136\u4e86\uff0c\u8fd9\u91cc\u662f\u6700\u7b80\u7b54\u7684\u7ebf\u6027\u6700\u5c0f\u4e8c\u4e58\u6cd5\uff0c\u8fd8\u6709\u66f4\u4e3a\u590d\u6742\u7684\u975e\u7ebf\u6027\u4ee5\u53ca\u77e9\u9635A\u4e0d\u6ee1\u79e9\u7684\u60c5\u51b5(hdq\u8bf4\u4ed6\u8001\u5e08\u80fd\u9ed8\u5199\u51fa\u8fd9\u4e2a\u8fc7\u7a0b\u2026)\uff0c\u7b49\u4ee5\u540e\u6709\u65f6\u95f4\u4e86\uff0c\u6211\u4f1a\u518d\u8865\u5145\u4e0a\u53bb\u7684\u3002", 
            "title": "\u6700\u5c0f\u4e8c\u4e58\u6cd5"
        }, 
        {
            "location": "/\u5b66\u4e60/\u6df1\u5ea6\u5b66\u4e60/\u6700\u5c0f\u4e8c\u4e58\u6cd5/#_1", 
            "text": "\u6211\u4eec\u4ece\u77e9\u9635\u7684\u89d2\u5ea6\u6765\u7406\u89e3\uff1a \n\u9996\u5148\u6211\u4eec\u7ed9\u51fa\u4e00\u4e2a\u77e9\u9635\u4e2d\u7684\u5b9a\u4e49\uff1a    R(A)=\\{Ax|x\u2208R^n\\},A\u2208R^{n\u00d7n}  R(A)=\\{Ax|x\u2208R^n\\},A\u2208R^{n\u00d7n}   \u6709\u4e86\u4e0a\u9762\u7684\u5b9a\u4e49\u4e4b\u540e\uff0c\u6211\u4eec\u5c31\u53ef\u4ee5\u5199\u51fa\u6700\u5c0f\u4e8c\u4e58\u95ee\u9898\u7684\u77e9\u9635\u5f62\u5f0f\uff1a    \u2203b\u2209R(A),b\u2208R^n,\\min_{x\u2208R^n}\\parallel Ax\u2212b\\parallel _2  \u2203b\u2209R(A),b\u2208R^n,\\min_{x\u2208R^n}\\parallel Ax\u2212b\\parallel _2   \u7528bi\u683c\u9ad8\u4e00\u70b9\u7684\u8bf4\u6cd5\u6765\u8bf4\uff0c\u5c31\u662f\u6c42\u5728\u6b27\u51e0\u91cc\u5f97\u7a7a\u95f4\u4e2d\u4ee52-\u8303\u6570\u4f5c\u4e3a\u8ddd\u79bb\uff0c\u4f7f\u5f97\u5411\u91cfAx\u4e0eb\u4e4b\u95f4\u8ddd\u79bb\u6700\u5c0f\u7684x\u3002 \n\u6211\u4eec\u7684\u76ee\u6807\u662f\u6c42\uff1a    min_{x\u2208R^n}\\parallel Ax\u2212\\parallel_2  min_{x\u2208R^n}\\parallel Ax\u2212\\parallel_2   \u5f53\u7136\u6211\u4eec\u77e5\u9053\uff0c\u4f7f\u5f97\u8ddd\u79bb\u6700\u5c0f\u7684\u5411\u91cfx\u4e0e\u4f7f\u5f97\u8ddd\u79bb\u5e73\u65b9\u6700\u5c0f\u7684\u5411\u91cfx\u662f\u76f8\u540c\u7684\uff0c\u4e8e\u662f\u6211\u4eec\u53ef\u4ee5\u5c06\u6240\u6c42\u7684\u76ee\u6807\u6539\u5199\u4e3a\uff1a    min_{x\u2208R^n}{\\parallel Ax\u2212b\\parallel_2}^2  min_{x\u2208R^n}{\\parallel Ax\u2212b\\parallel_2}^2   \u7ed3\u5408\u4e00\u4e9b\u77e9\u9635\u3001\u884c\u5217\u5f0f\u7684\u77e5\u8bc6\uff0c\u6211\u4eec\u77e5\u9053\uff1a    {\\parallel Ax\u2212b\\parallel_2}^2=(Ax\u2212b)^T\u2217(Ax\u2212b)  {\\parallel Ax\u2212b\\parallel_2}^2=(Ax\u2212b)^T\u2217(Ax\u2212b)   \u6839\u636e\u6211\u4eec\u5927\u4e00\u5b66\u8fc7\u7684\u9ad8\u6570\u77e5\u8bc6\uff0c\u6211\u4eec\u77e5\u9053\uff0c\u6c42\u6700\u6781\u503c\u95ee\u9898\u76f4\u63a5\u5bf9\u5e94\u7684\u5c31\u662f\u5bfc\u6570\u4e3a\u96f6\uff0c\u56e0\u6b64\u6211\u4eec\u8bd5\u56fe\u5c06\u6240\u7ed9\u51fa\u7684\u539f\u5f0f\u7684\u77e9\u9635\u5f62\u5f0f\u6c42\u5bfc\uff1a  \u4e0d\u8fc7\u9996\u5148\u6211\u4eec\u9700\u8981\u8865\u5145\u77e9\u9635\u5fae\u79ef\u5206(matrix calculus)\u7684\u4e00\u4e9b\u77e5\u8bc6 \n(PS:\u662f\u77e9\u9635\u5fae\u79ef\u5206\u5427\u2026\u6211\u6ca1\u6709\u7ffb\u8bd1\u9519\u5427\u2026.)    \\frac {\\partial x^Ta}{\\partial x}=\\frac {\\partial a^Tx}{\\partial x}=a  \\frac {\\partial x^Ta}{\\partial x}=\\frac {\\partial a^Tx}{\\partial x}=a    \\frac {\\partial x^TAx}{\\partial x}=Ax+A^Tx  \\frac {\\partial x^TAx}{\\partial x}=Ax+A^Tx   \u5982\u679c\u77e9\u9635A\u662f\u5bf9\u79f0\u7684(symmetric matrix):    Ax+A^Tx=2Ax  Ax+A^Tx=2Ax   \u63a5\u4e0b\u6765\uff0c\u6211\u4eec\u5bf9\u539f\u5f0f\u5316\u7b80\u5e76\u6c42\u5176\u5bf9x\u7684\u5bfc\u6570\uff1a    {\u2225Ax\u2212b\u2225_2}^2=x^TA^TAx\u2212b^TAx\u2212x^TA^Tb+b^Tb  {\u2225Ax\u2212b\u2225_2}^2=x^TA^TAx\u2212b^TAx\u2212x^TA^Tb+b^Tb   \u6c42\u5bfc\u5f97\u5230\uff1a    \\frac {\\partial{\\parallel Ax\u2212b\\parallel}^2}{\\partial x}=2A^TAx\u22122A^Tb=0  \\frac {\\partial{\\parallel Ax\u2212b\\parallel}^2}{\\partial x}=2A^TAx\u22122A^Tb=0   \u4e8e\u662f\u6211\u4eec\u5c31\u5f97\u5230\u4e86\uff0c\u6700\u5c0f\u4e8c\u4e58\u6cd5\u89e3\u7684\u77e9\u9635\u5f62\u5f0f\uff1a    x=(A^TA)^{\u22121}A^Tb  x=(A^TA)^{\u22121}A^Tb   \u5f53\u7136\u4e86\uff0c\u8fd9\u91cc\u662f\u6700\u7b80\u7b54\u7684\u7ebf\u6027\u6700\u5c0f\u4e8c\u4e58\u6cd5\uff0c\u8fd8\u6709\u66f4\u4e3a\u590d\u6742\u7684\u975e\u7ebf\u6027\u4ee5\u53ca\u77e9\u9635A\u4e0d\u6ee1\u79e9\u7684\u60c5\u51b5(hdq\u8bf4\u4ed6\u8001\u5e08\u80fd\u9ed8\u5199\u51fa\u8fd9\u4e2a\u8fc7\u7a0b\u2026)\uff0c\u7b49\u4ee5\u540e\u6709\u65f6\u95f4\u4e86\uff0c\u6211\u4f1a\u518d\u8865\u5145\u4e0a\u53bb\u7684\u3002", 
            "title": "\u6700\u5c0f\u4e8c\u4e58\u6cd5"
        }, 
        {
            "location": "/\u5b66\u4e60/\u6df1\u5ea6\u5b66\u4e60/\u77e9\u9635\u5206\u89e3/", 
            "text": "", 
            "title": "\u77e9\u9635\u5206\u89e3"
        }, 
        {
            "location": "/\u5b66\u4e60/\u6df1\u5ea6\u5b66\u4e60/\u77e9\u9635\u6c42\u5bfc/", 
            "text": "\u524d\u63d0\u53ca\u8bf4\u660e\n\n\n\u7b2c\u4e00\u6b21\u9047\u89c1\u77e9\u9635\u6c42\u5bfc\uff0c\u5927\u591a\u6570\u4eba\u90fd\u662f\u4e00\u5934\u96fe\u6c34\uff0c\u800c\u641c\u4e86\u7ef4\u57fa\u767e\u79d1\u770b\u4e5f\u8fd8\u662f\u4e91\u91cc\u96fe\u91cc\uff0c\u4e00\u5806\u7684\u540d\u8bcd\u548c\u4e00\u5806\u7684\u8868\u683c\u5230\u5e95\u90fd\u662f\u4ec0\u4e48\u5462\uff1f\u8fd9\u91cc\u603b\u7ed3\u4e86\u6211\u4e2a\u4eba\u7684\u5b66\u4e60\u7ecf\u9a8c\uff0c\u5e76\u4e14\u901a\u8fc7\u4e00\u4e2a\u4f8b\u5b50\u53ef\u4ee5\u8ba9\u4f60\u611f\u53d7\u5982\u4f55\u8fdb\u884c\u77e9\u9635\u6c42\u5bfc\uff0c\u4e0b\u6b21\u518d\u9047\u5230\u9700\u8981\u8fdb\u884c\u77e9\u9635\u6c42\u5bfc\u7684\u5730\u65b9\u5c31\u4e0d\u4f1a\u63aa\u624b\u4e0d\u53ca\u3002\n\n\n\u5728\u8fdb\u884c\u6982\u5ff5\u7684\u89e3\u8bf4\u4e4b\u524d\uff0c\u9996\u5148\u5927\u5bb6\u9700\u8981\u5148\u77e5\u9053\u4e0b\u9762\u7684\u8fd9\u4e2a\u524d\u63d0\uff1a\n\n\nhttps://en.wikipedia.org/wiki/Matrix_calculus\n\n\n\u57fa\u672c\u5206\u7c7b\n\n\n\u524d\u63d0\n\n\n\u82e5\nx\nx\n\u4e3a\u5411\u91cf\uff0c\u5219\u9ed8\u8ba4\n\\boldsymbol x\n\\boldsymbol x\n\u4e3a\u5217\u5411\u91cf\uff0c\n\\boldsymbol x^T\n\\boldsymbol x^T\n\u4e3a\u884c\u5411\u91cf\n\u82e5\ny\ny\n\u4e3a\u5411\u91cf\uff0c\u5219\u9ed8\u8ba4\n\\boldsymbol y\n\\boldsymbol y\n\u4e3a\u5217\u5411\u91cf\uff0c\n\\boldsymbol y^T\n\\boldsymbol y^T\n\u4e3a\u884c\u5411\u91cf\n\n\n\u6807\u91cf/\u5411\u91cf\n\n\n\n\n\\frac {\\partial y}{\\partial\\boldsymbol x}=\n\\begin{bmatrix} \n \\frac {\\partial y}{\\partial x_1}\n\\\\\\frac {\\partial y}{\\partial x_2}\n\\\\ ...\n\\\\\\frac {\\partial y}{\\partial x_n}\n\\end{bmatrix} \n\n\n\\frac {\\partial y}{\\partial\\boldsymbol x}=\n\\begin{bmatrix} \n \\frac {\\partial y}{\\partial x_1}\n\\\\\\frac {\\partial y}{\\partial x_2}\n\\\\ ...\n\\\\\\frac {\\partial y}{\\partial x_n}\n\\end{bmatrix} \n\n\n\n\n\n\n\\frac {\\partial y}{\\partial\\boldsymbol x^T}=\n\\left ({\\frac {\\partial y^T}{\\partial\\boldsymbol x}} \\right)^T=\n\\left ({\\frac {\\partial y}{\\partial\\boldsymbol x}} \\right)^T=\n\\begin{bmatrix} \n \\frac {\\partial y}{\\partial x_1}\n\n\\frac {\\partial y}{\\partial x_2}\n\n ...\n\n\\frac {\\partial y}{\\partial x_n}\n\\end{bmatrix} \n\n\n\n\\frac {\\partial y}{\\partial\\boldsymbol x^T}=\n\\left ({\\frac {\\partial y^T}{\\partial\\boldsymbol x}} \\right)^T=\n\\left ({\\frac {\\partial y}{\\partial\\boldsymbol x}} \\right)^T=\n\\begin{bmatrix} \n \\frac {\\partial y}{\\partial x_1}\n&\\frac {\\partial y}{\\partial x_2}\n& ...\n&\\frac {\\partial y}{\\partial x_n}\n\\end{bmatrix} \n\n\n\n\n\n\u5411\u91cf/\u6807\u91cf\n\n\n\n\n\\frac {\\partial\\boldsymbol y}{\\partial x}=\n\\begin{bmatrix} \n  \\frac {\\partial y_1}{\\partial x}\n\\\\\\frac {\\partial y_2}{\\partial x}\n\\\\ ...\n\\\\\\frac {\\partial y_n}{\\partial x}\n\\end{bmatrix} \n\n\n\\frac {\\partial\\boldsymbol y}{\\partial x}=\n\\begin{bmatrix} \n  \\frac {\\partial y_1}{\\partial x}\n\\\\\\frac {\\partial y_2}{\\partial x}\n\\\\ ...\n\\\\\\frac {\\partial y_n}{\\partial x}\n\\end{bmatrix} \n\n\n\n\n\n\n\\frac {\\partial\\boldsymbol y^T}{\\partial x}=\n\\left(\\frac {\\partial\\boldsymbol y}{\\partial x^T}\\right)^T=\n\\left(\\frac {\\partial\\boldsymbol y}{\\partial x}\\right)^T=\n\\begin{bmatrix} \n  \\frac {\\partial y_1}{\\partial x}\n\n\\frac {\\partial y_2}{\\partial x}\n\n ...\n\n\\frac {\\partial y_n}{\\partial x}\n\\end{bmatrix} \n\n\n\n\\frac {\\partial\\boldsymbol y^T}{\\partial x}=\n\\left(\\frac {\\partial\\boldsymbol y}{\\partial x^T}\\right)^T=\n\\left(\\frac {\\partial\\boldsymbol y}{\\partial x}\\right)^T=\n\\begin{bmatrix} \n  \\frac {\\partial y_1}{\\partial x}\n&\\frac {\\partial y_2}{\\partial x}\n& ...\n&\\frac {\\partial y_n}{\\partial x}\n\\end{bmatrix} \n\n\n\n\n\n\u5411\u91cf/\u5411\u91cf\n\n\n1 \n\\frac {\\partial\\boldsymbol y^T}{\\partial\\boldsymbol x}\n\\frac {\\partial\\boldsymbol y^T}{\\partial\\boldsymbol x}\n\u6309\u7167\n\\boldsymbol x\n\\boldsymbol x\n\u5c55\u5f00\n\n\n\n\n\\frac {\\partial\\boldsymbol y^T}{\\partial\\boldsymbol x}\n=\\begin{bmatrix} \n \\frac {\\partial\\boldsymbol y^T}{\\partial x_1}\n\\\\\\frac {\\partial\\boldsymbol y^T}{\\partial x_2}\n\\\\ ...\n\\\\\\frac {\\partial\\boldsymbol y^T}{\\partial x_n}\n\\end{bmatrix}\n=\\begin{bmatrix} \n  \\frac {\\partial y_1}{\\partial x_1}\n  \n \\frac {\\partial y_2}{\\partial x_1}\n  \n ...\n  \n \\frac {\\partial y_m}{\\partial x_1}\n\\\\\\frac {\\partial y_1}{\\partial x_2}\n  \n \\frac {\\partial y_2}{\\partial x_2}\n  \n ...\n  \n \\frac {\\partial y_m}{\\partial x_2}\n\\\\ ...\n  \n ...\n\\\\\\frac {\\partial y_1}{\\partial x_n}\n  \n \\frac {\\partial y_2}{\\partial x_n}\n  \n ...\n  \n \\frac {\\partial y_m}{\\partial x_n}\n\\end{bmatrix}\n\n\n\n\\frac {\\partial\\boldsymbol y^T}{\\partial\\boldsymbol x}\n=\\begin{bmatrix} \n \\frac {\\partial\\boldsymbol y^T}{\\partial x_1}\n\\\\\\frac {\\partial\\boldsymbol y^T}{\\partial x_2}\n\\\\ ...\n\\\\\\frac {\\partial\\boldsymbol y^T}{\\partial x_n}\n\\end{bmatrix}\n=\\begin{bmatrix} \n  \\frac {\\partial y_1}{\\partial x_1}\n  & \\frac {\\partial y_2}{\\partial x_1}\n  & ...\n  & \\frac {\\partial y_m}{\\partial x_1}\n\\\\\\frac {\\partial y_1}{\\partial x_2}\n  & \\frac {\\partial y_2}{\\partial x_2}\n  & ...\n  & \\frac {\\partial y_m}{\\partial x_2}\n\\\\ ...\n  & ...\n\\\\\\frac {\\partial y_1}{\\partial x_n}\n  & \\frac {\\partial y_2}{\\partial x_n}\n  & ...\n  & \\frac {\\partial y_m}{\\partial x_n}\n\\end{bmatrix}\n\n\n\n\n\n2 \n\\frac {\\partial\\boldsymbol y^T}{\\partial\\boldsymbol x}\n\\frac {\\partial\\boldsymbol y^T}{\\partial\\boldsymbol x}\n\u6309\u7167\n\\boldsymbol y\n\\boldsymbol y\n\u5c55\u5f00\n\n\n\n\n\\frac {\\partial\\boldsymbol y^T}{\\partial\\boldsymbol x}\n=\\begin{bmatrix} \n  \\frac {\\partial y_1}{\\partial\\boldsymbol x}\n\n\\frac {\\partial y_2}{\\partial\\boldsymbol x}\n\n ...\n\n\\frac {\\partial y_m}{\\partial\\boldsymbol x}\n\\end{bmatrix}\n=\\begin{bmatrix} \n  \\frac {\\partial y_1}{\\partial x_1}\n  \n \\frac {\\partial y_2}{\\partial x_1}\n  \n ...\n  \n \\frac {\\partial y_m}{\\partial x_1}\n\\\\\\frac {\\partial y_1}{\\partial x_2}\n  \n \\frac {\\partial y_2}{\\partial x_2}\n  \n ...\n  \n \\frac {\\partial y_m}{\\partial x_2}\n\\\\ ...\n  \n ...\n\\\\\\frac {\\partial y_1}{\\partial x_n}\n  \n \\frac {\\partial y_2}{\\partial x_n}\n  \n ...\n  \n \\frac {\\partial y_m}{\\partial x_n}\n\\end{bmatrix} \n\n\n\n\\frac {\\partial\\boldsymbol y^T}{\\partial\\boldsymbol x}\n=\\begin{bmatrix} \n  \\frac {\\partial y_1}{\\partial\\boldsymbol x}\n&\\frac {\\partial y_2}{\\partial\\boldsymbol x}\n& ...\n&\\frac {\\partial y_m}{\\partial\\boldsymbol x}\n\\end{bmatrix}\n=\\begin{bmatrix} \n  \\frac {\\partial y_1}{\\partial x_1}\n  & \\frac {\\partial y_2}{\\partial x_1}\n  & ...\n  & \\frac {\\partial y_m}{\\partial x_1}\n\\\\\\frac {\\partial y_1}{\\partial x_2}\n  & \\frac {\\partial y_2}{\\partial x_2}\n  & ...\n  & \\frac {\\partial y_m}{\\partial x_2}\n\\\\ ...\n  & ...\n\\\\\\frac {\\partial y_1}{\\partial x_n}\n  & \\frac {\\partial y_2}{\\partial x_n}\n  & ...\n  & \\frac {\\partial y_m}{\\partial x_n}\n\\end{bmatrix} \n\n\n\n\n\n3 \n\\frac {\\partial\\boldsymbol y}{\\partial\\boldsymbol x^T}\n\\frac {\\partial\\boldsymbol y}{\\partial\\boldsymbol x^T}\n\u6309\u7167\n\\boldsymbol x\n\\boldsymbol x\n\u5c55\u5f00\n\n\n\n\n\\frac {\\partial\\boldsymbol y}{\\partial\\boldsymbol x^T}\n=\\begin{bmatrix} \n  \\frac {\\partial\\boldsymbol y}{\\partial x_1}\n\n\\frac {\\partial\\boldsymbol y}{\\partial x_2}\n\n ...\n\n\\frac {\\partial\\boldsymbol y}{\\partial x_n}\n\\end{bmatrix}\n=\\begin{bmatrix} \n  \\frac {\\partial y_1}{\\partial x_1}\n  \n \\frac {\\partial y_1}{\\partial x_2}\n  \n ...\n  \n \\frac {\\partial y_1}{\\partial x_n}\n\\\\\\frac {\\partial y_2}{\\partial x_1}\n  \n \\frac {\\partial y_2}{\\partial x_2}\n  \n ...\n  \n \\frac {\\partial y_2}{\\partial x_n}\n\\\\ ...\n  \n ...\n\\\\\\frac {\\partial y_m}{\\partial x_1}\n  \n \\frac {\\partial y_m}{\\partial x_2}\n  \n ...\n  \n \\frac {\\partial y_m}{\\partial x_n}\n\\end{bmatrix} \n\n\n\n\\frac {\\partial\\boldsymbol y}{\\partial\\boldsymbol x^T}\n=\\begin{bmatrix} \n  \\frac {\\partial\\boldsymbol y}{\\partial x_1}\n&\\frac {\\partial\\boldsymbol y}{\\partial x_2}\n& ...\n&\\frac {\\partial\\boldsymbol y}{\\partial x_n}\n\\end{bmatrix}\n=\\begin{bmatrix} \n  \\frac {\\partial y_1}{\\partial x_1}\n  & \\frac {\\partial y_1}{\\partial x_2}\n  & ...\n  & \\frac {\\partial y_1}{\\partial x_n}\n\\\\\\frac {\\partial y_2}{\\partial x_1}\n  & \\frac {\\partial y_2}{\\partial x_2}\n  & ...\n  & \\frac {\\partial y_2}{\\partial x_n}\n\\\\ ...\n  & ...\n\\\\\\frac {\\partial y_m}{\\partial x_1}\n  & \\frac {\\partial y_m}{\\partial x_2}\n  & ...\n  & \\frac {\\partial y_m}{\\partial x_n}\n\\end{bmatrix} \n\n\n\n\n\n4 \n\\frac {\\partial\\boldsymbol y}{\\partial\\boldsymbol x^T}\n\\frac {\\partial\\boldsymbol y}{\\partial\\boldsymbol x^T}\n\u6309\u7167\n\\boldsymbol y\n\\boldsymbol y\n\u5c55\u5f00\n\n\n\n\n\\frac {\\partial\\boldsymbol y}{\\partial\\boldsymbol x^T}\n=\\begin{bmatrix} \n \\frac {\\partial y_1}{\\partial\\boldsymbol x^T}\n\\\\\\frac {\\partial y_2}{\\partial\\boldsymbol x^T}\n\\\\ ...\n\\\\\\frac {\\partial y_m}{\\partial\\boldsymbol x^T}\n\\end{bmatrix}\n=\\begin{bmatrix} \n  \\frac {\\partial y_1}{\\partial x_1}\n  \n \\frac {\\partial y_1}{\\partial x_2}\n  \n ...\n  \n \\frac {\\partial y_1}{\\partial x_n}\n\\\\\\frac {\\partial y_2}{\\partial x_1}\n  \n \\frac {\\partial y_2}{\\partial x_2}\n  \n ...\n  \n \\frac {\\partial y_2}{\\partial x_n}\n\\\\ ...\n  \n ...\n\\\\\\frac {\\partial y_m}{\\partial x_1}\n  \n \\frac {\\partial y_m}{\\partial x_2}\n  \n ...\n  \n \\frac {\\partial y_m}{\\partial x_n}\n\\end{bmatrix} \n\n\n\n\\frac {\\partial\\boldsymbol y}{\\partial\\boldsymbol x^T}\n=\\begin{bmatrix} \n \\frac {\\partial y_1}{\\partial\\boldsymbol x^T}\n\\\\\\frac {\\partial y_2}{\\partial\\boldsymbol x^T}\n\\\\ ...\n\\\\\\frac {\\partial y_m}{\\partial\\boldsymbol x^T}\n\\end{bmatrix}\n=\\begin{bmatrix} \n  \\frac {\\partial y_1}{\\partial x_1}\n  & \\frac {\\partial y_1}{\\partial x_2}\n  & ...\n  & \\frac {\\partial y_1}{\\partial x_n}\n\\\\\\frac {\\partial y_2}{\\partial x_1}\n  & \\frac {\\partial y_2}{\\partial x_2}\n  & ...\n  & \\frac {\\partial y_2}{\\partial x_n}\n\\\\ ...\n  & ...\n\\\\\\frac {\\partial y_m}{\\partial x_1}\n  & \\frac {\\partial y_m}{\\partial x_2}\n  & ...\n  & \\frac {\\partial y_m}{\\partial x_n}\n\\end{bmatrix} \n\n\n\n\n\n\u6807\u91cf/\u77e9\u9635\n\n\n\n\n\\frac {\\partial y}{\\partial\\boldsymbol X}\n=\\frac {\\partial y}{\\partial{\n\\begin{bmatrix} \n  \\boldsymbol x_1^T\n\\\\\\boldsymbol x_2^T\n\\\\ ...\n\\\\\\boldsymbol x_p^T\n\\end{bmatrix}\n}}\n=\\begin{bmatrix} \n  \\frac {\\partial y}{\\boldsymbol x_1^T}\n\\\\\\frac {\\partial y}{\\boldsymbol x_2^T}\n\\\\ ...\n\\\\\\frac {\\partial y}{\\boldsymbol x_p^T}\n\\end{bmatrix}\n=\\begin{bmatrix} \n  \\frac {\\partial y}{\\partial x_{11}}\n  \n \\frac {\\partial y}{\\partial x_{21}}\n  \n ...\n  \n \\frac {\\partial y}{\\partial x_{p1}}\n\\\\\\frac {\\partial y}{\\partial x_{12}}\n  \n \\frac {\\partial y}{\\partial x_{22}}\n  \n ...\n  \n \\frac {\\partial y}{\\partial x_{p2}}\n\\\\ ...\n  \n ...\n\\\\\\frac {\\partial y}{\\partial x_{1q}}\n  \n \\frac {\\partial y}{\\partial x_{2q}}\n  \n ...\n  \n \\frac {\\partial y}{\\partial x_{pq}}\n\\end{bmatrix} \n\n\n\n\\frac {\\partial y}{\\partial\\boldsymbol X}\n=\\frac {\\partial y}{\\partial{\n\\begin{bmatrix} \n  \\boldsymbol x_1^T\n\\\\\\boldsymbol x_2^T\n\\\\ ...\n\\\\\\boldsymbol x_p^T\n\\end{bmatrix}\n}}\n=\\begin{bmatrix} \n  \\frac {\\partial y}{\\boldsymbol x_1^T}\n\\\\\\frac {\\partial y}{\\boldsymbol x_2^T}\n\\\\ ...\n\\\\\\frac {\\partial y}{\\boldsymbol x_p^T}\n\\end{bmatrix}\n=\\begin{bmatrix} \n  \\frac {\\partial y}{\\partial x_{11}}\n  & \\frac {\\partial y}{\\partial x_{21}}\n  & ...\n  & \\frac {\\partial y}{\\partial x_{p1}}\n\\\\\\frac {\\partial y}{\\partial x_{12}}\n  & \\frac {\\partial y}{\\partial x_{22}}\n  & ...\n  & \\frac {\\partial y}{\\partial x_{p2}}\n\\\\ ...\n  & ...\n\\\\\\frac {\\partial y}{\\partial x_{1q}}\n  & \\frac {\\partial y}{\\partial x_{2q}}\n  & ...\n  & \\frac {\\partial y}{\\partial x_{pq}}\n\\end{bmatrix} \n\n\n\n\n\n\u77e9\u9635/\u6807\u91cf\n\n\n\n\n\\frac {\\partial\\boldsymbol Y}{\\partial x}=\n\\begin{bmatrix} \n  \\frac {\\partial y_{11}}{\\partial x}\n  \n \\frac {\\partial y_{12}}{\\partial x}\n  \n ...\n  \n \\frac {\\partial y_{1n}}{\\partial x}\n\\\\\\frac {\\partial y_{21}}{\\partial x}\n  \n \\frac {\\partial y_{22}}{\\partial x}\n  \n ...\n  \n \\frac {\\partial y_{2n}}{\\partial x}\n\\\\ ...\n  \n ...\n\\\\\\frac {\\partial y_{m1}}{\\partial x}\n  \n \\frac {\\partial y_{m2}}{\\partial x}\n  \n ...\n  \n \\frac {\\partial y_{mn}}{\\partial x}\n\\end{bmatrix} \n\n\n\n\\frac {\\partial\\boldsymbol Y}{\\partial x}=\n\\begin{bmatrix} \n  \\frac {\\partial y_{11}}{\\partial x}\n  & \\frac {\\partial y_{12}}{\\partial x}\n  & ...\n  & \\frac {\\partial y_{1n}}{\\partial x}\n\\\\\\frac {\\partial y_{21}}{\\partial x}\n  & \\frac {\\partial y_{22}}{\\partial x}\n  & ...\n  & \\frac {\\partial y_{2n}}{\\partial x}\n\\\\ ...\n  & ...\n\\\\\\frac {\\partial y_{m1}}{\\partial x}\n  & \\frac {\\partial y_{m2}}{\\partial x}\n  & ...\n  & \\frac {\\partial y_{mn}}{\\partial x}\n\\end{bmatrix} \n\n\n\n\n\n\u4e00\u4e2a\u6c42\u5bfc\u7684\u4f8b\u5b50\n\n\n\u95ee\u9898\n\n\n\n\n\\frac {\\partial {(y\u2212Xw)^T(y\u2212Xw)}}{\\partial w}\n\n\n\\frac {\\partial {(y\u2212Xw)^T(y\u2212Xw)}}{\\partial w}\n\n\n\n\n\u8bf4\u660e\uff1a \ny\ny\n\u3001\nw\nw\n\u4e3a\u5217\u5411\u91cf\uff0c\nX\nX\n\u4e3a\u77e9\u9635\n\n\n\u5f0f\u5b50\u6f14\u5316\n\n\n\u770b\u5230\u8fd9\u4e2a\u4f8b\u5b50\u4e0d\u8981\u6025\u7740\u53bb\u67e5\u8868\u6c42\u5bfc\uff0c\u5148\u770b\u770b\u5b83\u7684\u5f62\u5f0f\uff0c\u662f\nu(w)\u2217v(w)\nu(w)\u2217v(w)\n\u7684\u5f62\u5f0f\uff0c\u8fd9\u79cd\u5f62\u5f0f\u4e00\u822c\u6c42\u5bfc\u8f83\u4e3a\u590d\u6742\uff0c\u56e0\u6b64\u4e3a\u4e86\u7b80\u5316\u8fd0\u7b97\uff0c\u6211\u4eec\u5148\u628a\u5f0f\u5b50\u5c55\u5f00\u6210\u4e0b\u9762\u7684\u6837\u5b50\uff08\u6ce8\u610f\uff1a\n(Xw)^T=w^TX^T\n(Xw)^T=w^TX^T\n\uff09\uff1a \n\n\n\n\n\\frac{\\partial(y^Ty\u2212y^TXw\u2212w^TX^Ty+w^TX^TXw)}{\\partial w}\n\n\n\\frac{\\partial(y^Ty\u2212y^TXw\u2212w^TX^Ty+w^TX^TXw)}{\\partial w}\n\n\n\n\n\u7136\u540e\u5c31\u53ef\u4ee5\u5199\u6210\u56db\u4e2a\u90e8\u5206\u6c42\u5bfc\u7684\u5f62\u5f0f\u5982\u4e0b\uff08\u7d2f\u52a0\u540e\u6c42\u5bfc=\u6c42\u5bfc\u540e\u7d2f\u52a0\uff09\uff1a \n\n\n\n\n\n\\frac{\\partial y^Ty}{\\partial w}\n\u2212\\frac{\\partial y^TXw}{\\partial w}\n\u2212\\frac{\\partial w^TX^Ty}{\\partial w}\n+\\frac{\\partial w^TX^TXw}{\\partial w}\n\n\n\n\n\\frac{\\partial y^Ty}{\\partial w}\n\u2212\\frac{\\partial y^TXw}{\\partial w}\n\u2212\\frac{\\partial w^TX^Ty}{\\partial w}\n+\\frac{\\partial w^TX^TXw}{\\partial w}\n\n\n\n\n\n\u6c42\u5bfc\n\n\n\\frac{\\partial y^Ty}{\\partial w}\n\\frac{\\partial y^Ty}{\\partial w}\n\u6c42\u5bfc : \n\n\n\n\n\\frac{\\partial y^Ty}{\\partial w}=0\n\n\n\\frac{\\partial y^Ty}{\\partial w}=0\n\n\n\n\n\u8bf4\u660e\uff1a\u5206\u5b50\u90e8\u5206\u4e3a\u6807\u91cf\uff0c\u5206\u6bcd\u90e8\u5206\u4e3a\u5411\u91cf\uff0c\u627e\u5230\u7ef4\u57fa\u767e\u79d1\u4e2d\u7684Scalar-by-vector identities\u8868\u683c\uff0c\u5728\u8868\u683c\u4e2d\u5339\u914d\u5f62\u5f0f\u5230\u7b2c1\u884c\u7684\u4f4d\u7f6e\uff0c\u56e0\u4e3a\u5206\u6bcd\u4e3a\u5217\u5411\u91cf\uff0c\u56e0\u6b64\u4e3a\u5206\u6bcd\u5e03\u5c40\uff0c\u5bf9\u5e94\u7684\u6c42\u5bfc\u7ed3\u679c\u5c31\u662f 0 \u3002\n\n\n\\frac{\\partial y^TXw}{\\partial w}\n\\frac{\\partial y^TXw}{\\partial w}\n\u6c42\u5bfc : \n\n\n\n\n\\frac{\\partial y^TXw}{\\partial w}=X^Ty\n\n\n\\frac{\\partial y^TXw}{\\partial w}=X^Ty\n\n\n\n\n\u8bf4\u660e\uff1a\u540c\u6837\u7684\uff0c\u5728\u7ef4\u57fa\u767e\u79d1\u4e2d\u7684Scalar-by-vector identities\u8868\u683c\uff0c\u5728\u8868\u683c\u4e2d\u5339\u914d\u5f62\u5f0f\u5230\u7b2c11\u884c\u7684\u4f4d\u7f6e\uff0c\u5bf9\u5e94\u7684\u6c42\u5bfc\u7ed3\u679c\u5c31\u662f \nX^Ty\nX^Ty\n \u3002\n\n\n\\frac{\\partial w^TX^Ty}{\\partial w}\n\\frac{\\partial w^TX^Ty}{\\partial w}\n\u6c42\u5bfc :\n\n\n\n\n\\frac{\\partial w^TX^Ty}{\\partial w}=\\frac{\\partial(w^TX^Ty)^T}{\\partial w}=\\frac{\\partial y^TXw}{\\partial w}=X^Ty\n\n\n\\frac{\\partial w^TX^Ty}{\\partial w}=\\frac{\\partial(w^TX^Ty)^T}{\\partial w}=\\frac{\\partial y^TXw}{\\partial w}=X^Ty\n\n\n\n\n\u8bf4\u660e\uff1a\u56e0\u4e3a\u5206\u5b50\u4e3a\u6807\u91cf\uff0c\u6807\u91cf\u7684\u8f6c\u7f6e\u7b49\u4e8e\u672c\u8eab\uff0c\u6240\u4ee5\u5bf9\u5206\u5b50\u8fdb\u884c\u8f6c\u7f6e\u64cd\u4f5c\uff0c\u5176\u7b49\u4ef7\u4e8e\u7b2c\u4e8c\u90e8\u5206\u3002\n\n\n\\frac{\\partial w^TX^TXw}{\\partial w}\n\\frac{\\partial w^TX^TXw}{\\partial w}\n\u6c42\u5bfc : \n\n\n\n\n\\frac{\\partial w^TX^TXw}{\\partial w}=2X^TXw\n\n\n\\frac{\\partial w^TX^TXw}{\\partial w}=2X^TXw\n\n\n\n\n\u8bf4\u660e\uff1a\u540c\u6837\u7684\uff0c\u5728\u7ef4\u57fa\u767e\u79d1\u4e2d\u7684Scalar-by-vector identities\u8868\u683c\uff0c\u5728\u8868\u683c\u4e2d\u5339\u914d\u5f62\u5f0f\u5230\u7b2c13\u884c\u7684\u4f4d\u7f6e\uff0c\u77e9\u9635\u7684\u8f6c\u7f6e\u4e58\u4e0a\u672c\u8eab\uff08\nX^TX\nX^TX\n\uff09\u4e3a\u5bf9\u79f0\u77e9\u9635\u5f53\u505a\u8868\u683c\u4e2d\u7684A \uff0c\u6240\u4ee5\u5f97\u5230\u6c42\u5bfc\u7ed3\u679c \n2X^TXw\n2X^TXw\n \u3002\n\n\n\u6574\u5408\n\n\n\u628a\u56db\u4e2a\u90e8\u5206\u6c42\u5bfc\u7ed3\u679c\u8fdb\u884c\u76f8\u5e94\u7684\u52a0\u51cf\u5c31\u53ef\u4ee5\u5f97\u5230\u6700\u7ec8\u7684\u7ed3\u679c\uff1a \n\n\n\n\n\\frac{\\partial y^Ty}{\\partial w}\n\u2212\\frac{\\partial y^TXw}{\\partial w}\n\u2212\\frac{\\partial w^TX^Ty}{\\partial w}\n+\\frac{\\partial w^TX^TXw}{\\partial w}\n=0\u2212X^Ty\u2212X^Ty+2X^TXw=\u22122X^T(y+Xw)\n\n\n\\frac{\\partial y^Ty}{\\partial w}\n\u2212\\frac{\\partial y^TXw}{\\partial w}\n\u2212\\frac{\\partial w^TX^Ty}{\\partial w}\n+\\frac{\\partial w^TX^TXw}{\\partial w}\n=0\u2212X^Ty\u2212X^Ty+2X^TXw=\u22122X^T(y+Xw)\n\n\n\n\n\u73b0\u5728\u4f60\u518d\u770b\u770b\u7ef4\u57fa\u767e\u79d1\u91cc\u90a3\u6210\u5806\u7684\u8868\u683c\uff0c\u662f\u4e0d\u662f\u89c9\u5f97\u5f02\u5e38\u5b9e\u7528\u4e86\uff01\n\n\n\n\n\\frac {\\partial\\boldsymbol y^T}{\\partial\\boldsymbol x}\n=\\begin{bmatrix} \n \\frac {\\partial\\boldsymbol y^T}{\\partial x_1}\n\\\\\\frac {\\partial\\boldsymbol y^T}{\\partial x_2}\n\\\\ ...\n\\\\\\frac {\\partial\\boldsymbol y^T}{\\partial x_n}\n\\end{bmatrix}\n=\\begin{bmatrix} \n  \\frac {\\partial y_1}{\\partial x_1}\n  \n \\frac {\\partial y_2}{\\partial x_1}\n  \n ...\n  \n \\frac {\\partial y_m}{\\partial x_1}\n\\\\\\frac {\\partial y_1}{\\partial x_2}\n  \n \\frac {\\partial y_2}{\\partial x_2}\n  \n ...\n  \n \\frac {\\partial y_m}{\\partial x_2}\n\\\\ ...\n  \n ...\n\\\\\\frac {\\partial y_1}{\\partial x_n}\n  \n \\frac {\\partial y_2}{\\partial x_n}\n  \n ...\n  \n \\frac {\\partial y_m}{\\partial x_n}\n\\end{bmatrix}\n\n\n\n\\frac {\\partial\\boldsymbol y^T}{\\partial\\boldsymbol x}\n=\\begin{bmatrix} \n \\frac {\\partial\\boldsymbol y^T}{\\partial x_1}\n\\\\\\frac {\\partial\\boldsymbol y^T}{\\partial x_2}\n\\\\ ...\n\\\\\\frac {\\partial\\boldsymbol y^T}{\\partial x_n}\n\\end{bmatrix}\n=\\begin{bmatrix} \n  \\frac {\\partial y_1}{\\partial x_1}\n  & \\frac {\\partial y_2}{\\partial x_1}\n  & ...\n  & \\frac {\\partial y_m}{\\partial x_1}\n\\\\\\frac {\\partial y_1}{\\partial x_2}\n  & \\frac {\\partial y_2}{\\partial x_2}\n  & ...\n  & \\frac {\\partial y_m}{\\partial x_2}\n\\\\ ...\n  & ...\n\\\\\\frac {\\partial y_1}{\\partial x_n}\n  & \\frac {\\partial y_2}{\\partial x_n}\n  & ...\n  & \\frac {\\partial y_m}{\\partial x_n}\n\\end{bmatrix}\n\n\n\n\n\n\n\n\\boldsymbol y=\\boldsymbol A^T \\boldsymbol x\n\n\n\\boldsymbol y=\\boldsymbol A^T \\boldsymbol x\n\n\n\n\n\n\n\\boldsymbol y=\\boldsymbol A^T \\boldsymbol x\n\n\n\\boldsymbol y=\\boldsymbol A^T \\boldsymbol x\n\n\n\n\n\n\n\\frac {\\partial\\boldsymbol y^T}{\\partial\\boldsymbol x}\n=\\frac {\\partial\\boldsymbol x^T \\boldsymbol A}{\\partial\\boldsymbol x}\n\n\n\n\\frac {\\partial\\boldsymbol y^T}{\\partial\\boldsymbol x}\n=\\frac {\\partial\\boldsymbol x^T \\boldsymbol A}{\\partial\\boldsymbol x}", 
            "title": "\u77e9\u9635\u6c42\u5bfc"
        }, 
        {
            "location": "/\u5b66\u4e60/\u6df1\u5ea6\u5b66\u4e60/\u77e9\u9635\u6c42\u5bfc/#_1", 
            "text": "\u7b2c\u4e00\u6b21\u9047\u89c1\u77e9\u9635\u6c42\u5bfc\uff0c\u5927\u591a\u6570\u4eba\u90fd\u662f\u4e00\u5934\u96fe\u6c34\uff0c\u800c\u641c\u4e86\u7ef4\u57fa\u767e\u79d1\u770b\u4e5f\u8fd8\u662f\u4e91\u91cc\u96fe\u91cc\uff0c\u4e00\u5806\u7684\u540d\u8bcd\u548c\u4e00\u5806\u7684\u8868\u683c\u5230\u5e95\u90fd\u662f\u4ec0\u4e48\u5462\uff1f\u8fd9\u91cc\u603b\u7ed3\u4e86\u6211\u4e2a\u4eba\u7684\u5b66\u4e60\u7ecf\u9a8c\uff0c\u5e76\u4e14\u901a\u8fc7\u4e00\u4e2a\u4f8b\u5b50\u53ef\u4ee5\u8ba9\u4f60\u611f\u53d7\u5982\u4f55\u8fdb\u884c\u77e9\u9635\u6c42\u5bfc\uff0c\u4e0b\u6b21\u518d\u9047\u5230\u9700\u8981\u8fdb\u884c\u77e9\u9635\u6c42\u5bfc\u7684\u5730\u65b9\u5c31\u4e0d\u4f1a\u63aa\u624b\u4e0d\u53ca\u3002  \u5728\u8fdb\u884c\u6982\u5ff5\u7684\u89e3\u8bf4\u4e4b\u524d\uff0c\u9996\u5148\u5927\u5bb6\u9700\u8981\u5148\u77e5\u9053\u4e0b\u9762\u7684\u8fd9\u4e2a\u524d\u63d0\uff1a  https://en.wikipedia.org/wiki/Matrix_calculus", 
            "title": "\u524d\u63d0\u53ca\u8bf4\u660e"
        }, 
        {
            "location": "/\u5b66\u4e60/\u6df1\u5ea6\u5b66\u4e60/\u77e9\u9635\u6c42\u5bfc/#_2", 
            "text": "", 
            "title": "\u57fa\u672c\u5206\u7c7b"
        }, 
        {
            "location": "/\u5b66\u4e60/\u6df1\u5ea6\u5b66\u4e60/\u77e9\u9635\u6c42\u5bfc/#_3", 
            "text": "\u82e5 x x \u4e3a\u5411\u91cf\uff0c\u5219\u9ed8\u8ba4 \\boldsymbol x \\boldsymbol x \u4e3a\u5217\u5411\u91cf\uff0c \\boldsymbol x^T \\boldsymbol x^T \u4e3a\u884c\u5411\u91cf\n\u82e5 y y \u4e3a\u5411\u91cf\uff0c\u5219\u9ed8\u8ba4 \\boldsymbol y \\boldsymbol y \u4e3a\u5217\u5411\u91cf\uff0c \\boldsymbol y^T \\boldsymbol y^T \u4e3a\u884c\u5411\u91cf", 
            "title": "\u524d\u63d0"
        }, 
        {
            "location": "/\u5b66\u4e60/\u6df1\u5ea6\u5b66\u4e60/\u77e9\u9635\u6c42\u5bfc/#_4", 
            "text": "\\frac {\\partial y}{\\partial\\boldsymbol x}=\n\\begin{bmatrix} \n \\frac {\\partial y}{\\partial x_1}\n\\\\\\frac {\\partial y}{\\partial x_2}\n\\\\ ...\n\\\\\\frac {\\partial y}{\\partial x_n}\n\\end{bmatrix}   \\frac {\\partial y}{\\partial\\boldsymbol x}=\n\\begin{bmatrix} \n \\frac {\\partial y}{\\partial x_1}\n\\\\\\frac {\\partial y}{\\partial x_2}\n\\\\ ...\n\\\\\\frac {\\partial y}{\\partial x_n}\n\\end{bmatrix}     \\frac {\\partial y}{\\partial\\boldsymbol x^T}=\n\\left ({\\frac {\\partial y^T}{\\partial\\boldsymbol x}} \\right)^T=\n\\left ({\\frac {\\partial y}{\\partial\\boldsymbol x}} \\right)^T=\n\\begin{bmatrix} \n \\frac {\\partial y}{\\partial x_1} \\frac {\\partial y}{\\partial x_2}  ... \\frac {\\partial y}{\\partial x_n}\n\\end{bmatrix}   \\frac {\\partial y}{\\partial\\boldsymbol x^T}=\n\\left ({\\frac {\\partial y^T}{\\partial\\boldsymbol x}} \\right)^T=\n\\left ({\\frac {\\partial y}{\\partial\\boldsymbol x}} \\right)^T=\n\\begin{bmatrix} \n \\frac {\\partial y}{\\partial x_1}\n&\\frac {\\partial y}{\\partial x_2}\n& ...\n&\\frac {\\partial y}{\\partial x_n}\n\\end{bmatrix}", 
            "title": "\u6807\u91cf/\u5411\u91cf"
        }, 
        {
            "location": "/\u5b66\u4e60/\u6df1\u5ea6\u5b66\u4e60/\u77e9\u9635\u6c42\u5bfc/#_5", 
            "text": "\\frac {\\partial\\boldsymbol y}{\\partial x}=\n\\begin{bmatrix} \n  \\frac {\\partial y_1}{\\partial x}\n\\\\\\frac {\\partial y_2}{\\partial x}\n\\\\ ...\n\\\\\\frac {\\partial y_n}{\\partial x}\n\\end{bmatrix}   \\frac {\\partial\\boldsymbol y}{\\partial x}=\n\\begin{bmatrix} \n  \\frac {\\partial y_1}{\\partial x}\n\\\\\\frac {\\partial y_2}{\\partial x}\n\\\\ ...\n\\\\\\frac {\\partial y_n}{\\partial x}\n\\end{bmatrix}     \\frac {\\partial\\boldsymbol y^T}{\\partial x}=\n\\left(\\frac {\\partial\\boldsymbol y}{\\partial x^T}\\right)^T=\n\\left(\\frac {\\partial\\boldsymbol y}{\\partial x}\\right)^T=\n\\begin{bmatrix} \n  \\frac {\\partial y_1}{\\partial x} \\frac {\\partial y_2}{\\partial x}  ... \\frac {\\partial y_n}{\\partial x}\n\\end{bmatrix}   \\frac {\\partial\\boldsymbol y^T}{\\partial x}=\n\\left(\\frac {\\partial\\boldsymbol y}{\\partial x^T}\\right)^T=\n\\left(\\frac {\\partial\\boldsymbol y}{\\partial x}\\right)^T=\n\\begin{bmatrix} \n  \\frac {\\partial y_1}{\\partial x}\n&\\frac {\\partial y_2}{\\partial x}\n& ...\n&\\frac {\\partial y_n}{\\partial x}\n\\end{bmatrix}", 
            "title": "\u5411\u91cf/\u6807\u91cf"
        }, 
        {
            "location": "/\u5b66\u4e60/\u6df1\u5ea6\u5b66\u4e60/\u77e9\u9635\u6c42\u5bfc/#_6", 
            "text": "", 
            "title": "\u5411\u91cf/\u5411\u91cf"
        }, 
        {
            "location": "/\u5b66\u4e60/\u6df1\u5ea6\u5b66\u4e60/\u77e9\u9635\u6c42\u5bfc/#1-frac-partialboldsymbol-ytpartialboldsymbol-xfrac-partialboldsymbol-ytpartialboldsymbol-xboldsymbol-xboldsymbol-x", 
            "text": "\\frac {\\partial\\boldsymbol y^T}{\\partial\\boldsymbol x}\n=\\begin{bmatrix} \n \\frac {\\partial\\boldsymbol y^T}{\\partial x_1}\n\\\\\\frac {\\partial\\boldsymbol y^T}{\\partial x_2}\n\\\\ ...\n\\\\\\frac {\\partial\\boldsymbol y^T}{\\partial x_n}\n\\end{bmatrix}\n=\\begin{bmatrix} \n  \\frac {\\partial y_1}{\\partial x_1}\n    \\frac {\\partial y_2}{\\partial x_1}\n    ...\n    \\frac {\\partial y_m}{\\partial x_1}\n\\\\\\frac {\\partial y_1}{\\partial x_2}\n    \\frac {\\partial y_2}{\\partial x_2}\n    ...\n    \\frac {\\partial y_m}{\\partial x_2}\n\\\\ ...\n    ...\n\\\\\\frac {\\partial y_1}{\\partial x_n}\n    \\frac {\\partial y_2}{\\partial x_n}\n    ...\n    \\frac {\\partial y_m}{\\partial x_n}\n\\end{bmatrix}  \\frac {\\partial\\boldsymbol y^T}{\\partial\\boldsymbol x}\n=\\begin{bmatrix} \n \\frac {\\partial\\boldsymbol y^T}{\\partial x_1}\n\\\\\\frac {\\partial\\boldsymbol y^T}{\\partial x_2}\n\\\\ ...\n\\\\\\frac {\\partial\\boldsymbol y^T}{\\partial x_n}\n\\end{bmatrix}\n=\\begin{bmatrix} \n  \\frac {\\partial y_1}{\\partial x_1}\n  & \\frac {\\partial y_2}{\\partial x_1}\n  & ...\n  & \\frac {\\partial y_m}{\\partial x_1}\n\\\\\\frac {\\partial y_1}{\\partial x_2}\n  & \\frac {\\partial y_2}{\\partial x_2}\n  & ...\n  & \\frac {\\partial y_m}{\\partial x_2}\n\\\\ ...\n  & ...\n\\\\\\frac {\\partial y_1}{\\partial x_n}\n  & \\frac {\\partial y_2}{\\partial x_n}\n  & ...\n  & \\frac {\\partial y_m}{\\partial x_n}\n\\end{bmatrix}", 
            "title": "1 \\frac {\\partial\\boldsymbol y^T}{\\partial\\boldsymbol x}\\frac {\\partial\\boldsymbol y^T}{\\partial\\boldsymbol x}\u6309\u7167\\boldsymbol x\\boldsymbol x\u5c55\u5f00"
        }, 
        {
            "location": "/\u5b66\u4e60/\u6df1\u5ea6\u5b66\u4e60/\u77e9\u9635\u6c42\u5bfc/#2-frac-partialboldsymbol-ytpartialboldsymbol-xfrac-partialboldsymbol-ytpartialboldsymbol-xboldsymbol-yboldsymbol-y", 
            "text": "\\frac {\\partial\\boldsymbol y^T}{\\partial\\boldsymbol x}\n=\\begin{bmatrix} \n  \\frac {\\partial y_1}{\\partial\\boldsymbol x} \\frac {\\partial y_2}{\\partial\\boldsymbol x}  ... \\frac {\\partial y_m}{\\partial\\boldsymbol x}\n\\end{bmatrix}\n=\\begin{bmatrix} \n  \\frac {\\partial y_1}{\\partial x_1}\n    \\frac {\\partial y_2}{\\partial x_1}\n    ...\n    \\frac {\\partial y_m}{\\partial x_1}\n\\\\\\frac {\\partial y_1}{\\partial x_2}\n    \\frac {\\partial y_2}{\\partial x_2}\n    ...\n    \\frac {\\partial y_m}{\\partial x_2}\n\\\\ ...\n    ...\n\\\\\\frac {\\partial y_1}{\\partial x_n}\n    \\frac {\\partial y_2}{\\partial x_n}\n    ...\n    \\frac {\\partial y_m}{\\partial x_n}\n\\end{bmatrix}   \\frac {\\partial\\boldsymbol y^T}{\\partial\\boldsymbol x}\n=\\begin{bmatrix} \n  \\frac {\\partial y_1}{\\partial\\boldsymbol x}\n&\\frac {\\partial y_2}{\\partial\\boldsymbol x}\n& ...\n&\\frac {\\partial y_m}{\\partial\\boldsymbol x}\n\\end{bmatrix}\n=\\begin{bmatrix} \n  \\frac {\\partial y_1}{\\partial x_1}\n  & \\frac {\\partial y_2}{\\partial x_1}\n  & ...\n  & \\frac {\\partial y_m}{\\partial x_1}\n\\\\\\frac {\\partial y_1}{\\partial x_2}\n  & \\frac {\\partial y_2}{\\partial x_2}\n  & ...\n  & \\frac {\\partial y_m}{\\partial x_2}\n\\\\ ...\n  & ...\n\\\\\\frac {\\partial y_1}{\\partial x_n}\n  & \\frac {\\partial y_2}{\\partial x_n}\n  & ...\n  & \\frac {\\partial y_m}{\\partial x_n}\n\\end{bmatrix}", 
            "title": "2 \\frac {\\partial\\boldsymbol y^T}{\\partial\\boldsymbol x}\\frac {\\partial\\boldsymbol y^T}{\\partial\\boldsymbol x}\u6309\u7167\\boldsymbol y\\boldsymbol y\u5c55\u5f00"
        }, 
        {
            "location": "/\u5b66\u4e60/\u6df1\u5ea6\u5b66\u4e60/\u77e9\u9635\u6c42\u5bfc/#3-frac-partialboldsymbol-ypartialboldsymbol-xtfrac-partialboldsymbol-ypartialboldsymbol-xtboldsymbol-xboldsymbol-x", 
            "text": "\\frac {\\partial\\boldsymbol y}{\\partial\\boldsymbol x^T}\n=\\begin{bmatrix} \n  \\frac {\\partial\\boldsymbol y}{\\partial x_1} \\frac {\\partial\\boldsymbol y}{\\partial x_2}  ... \\frac {\\partial\\boldsymbol y}{\\partial x_n}\n\\end{bmatrix}\n=\\begin{bmatrix} \n  \\frac {\\partial y_1}{\\partial x_1}\n    \\frac {\\partial y_1}{\\partial x_2}\n    ...\n    \\frac {\\partial y_1}{\\partial x_n}\n\\\\\\frac {\\partial y_2}{\\partial x_1}\n    \\frac {\\partial y_2}{\\partial x_2}\n    ...\n    \\frac {\\partial y_2}{\\partial x_n}\n\\\\ ...\n    ...\n\\\\\\frac {\\partial y_m}{\\partial x_1}\n    \\frac {\\partial y_m}{\\partial x_2}\n    ...\n    \\frac {\\partial y_m}{\\partial x_n}\n\\end{bmatrix}   \\frac {\\partial\\boldsymbol y}{\\partial\\boldsymbol x^T}\n=\\begin{bmatrix} \n  \\frac {\\partial\\boldsymbol y}{\\partial x_1}\n&\\frac {\\partial\\boldsymbol y}{\\partial x_2}\n& ...\n&\\frac {\\partial\\boldsymbol y}{\\partial x_n}\n\\end{bmatrix}\n=\\begin{bmatrix} \n  \\frac {\\partial y_1}{\\partial x_1}\n  & \\frac {\\partial y_1}{\\partial x_2}\n  & ...\n  & \\frac {\\partial y_1}{\\partial x_n}\n\\\\\\frac {\\partial y_2}{\\partial x_1}\n  & \\frac {\\partial y_2}{\\partial x_2}\n  & ...\n  & \\frac {\\partial y_2}{\\partial x_n}\n\\\\ ...\n  & ...\n\\\\\\frac {\\partial y_m}{\\partial x_1}\n  & \\frac {\\partial y_m}{\\partial x_2}\n  & ...\n  & \\frac {\\partial y_m}{\\partial x_n}\n\\end{bmatrix}", 
            "title": "3 \\frac {\\partial\\boldsymbol y}{\\partial\\boldsymbol x^T}\\frac {\\partial\\boldsymbol y}{\\partial\\boldsymbol x^T}\u6309\u7167\\boldsymbol x\\boldsymbol x\u5c55\u5f00"
        }, 
        {
            "location": "/\u5b66\u4e60/\u6df1\u5ea6\u5b66\u4e60/\u77e9\u9635\u6c42\u5bfc/#4-frac-partialboldsymbol-ypartialboldsymbol-xtfrac-partialboldsymbol-ypartialboldsymbol-xtboldsymbol-yboldsymbol-y", 
            "text": "\\frac {\\partial\\boldsymbol y}{\\partial\\boldsymbol x^T}\n=\\begin{bmatrix} \n \\frac {\\partial y_1}{\\partial\\boldsymbol x^T}\n\\\\\\frac {\\partial y_2}{\\partial\\boldsymbol x^T}\n\\\\ ...\n\\\\\\frac {\\partial y_m}{\\partial\\boldsymbol x^T}\n\\end{bmatrix}\n=\\begin{bmatrix} \n  \\frac {\\partial y_1}{\\partial x_1}\n    \\frac {\\partial y_1}{\\partial x_2}\n    ...\n    \\frac {\\partial y_1}{\\partial x_n}\n\\\\\\frac {\\partial y_2}{\\partial x_1}\n    \\frac {\\partial y_2}{\\partial x_2}\n    ...\n    \\frac {\\partial y_2}{\\partial x_n}\n\\\\ ...\n    ...\n\\\\\\frac {\\partial y_m}{\\partial x_1}\n    \\frac {\\partial y_m}{\\partial x_2}\n    ...\n    \\frac {\\partial y_m}{\\partial x_n}\n\\end{bmatrix}   \\frac {\\partial\\boldsymbol y}{\\partial\\boldsymbol x^T}\n=\\begin{bmatrix} \n \\frac {\\partial y_1}{\\partial\\boldsymbol x^T}\n\\\\\\frac {\\partial y_2}{\\partial\\boldsymbol x^T}\n\\\\ ...\n\\\\\\frac {\\partial y_m}{\\partial\\boldsymbol x^T}\n\\end{bmatrix}\n=\\begin{bmatrix} \n  \\frac {\\partial y_1}{\\partial x_1}\n  & \\frac {\\partial y_1}{\\partial x_2}\n  & ...\n  & \\frac {\\partial y_1}{\\partial x_n}\n\\\\\\frac {\\partial y_2}{\\partial x_1}\n  & \\frac {\\partial y_2}{\\partial x_2}\n  & ...\n  & \\frac {\\partial y_2}{\\partial x_n}\n\\\\ ...\n  & ...\n\\\\\\frac {\\partial y_m}{\\partial x_1}\n  & \\frac {\\partial y_m}{\\partial x_2}\n  & ...\n  & \\frac {\\partial y_m}{\\partial x_n}\n\\end{bmatrix}", 
            "title": "4 \\frac {\\partial\\boldsymbol y}{\\partial\\boldsymbol x^T}\\frac {\\partial\\boldsymbol y}{\\partial\\boldsymbol x^T}\u6309\u7167\\boldsymbol y\\boldsymbol y\u5c55\u5f00"
        }, 
        {
            "location": "/\u5b66\u4e60/\u6df1\u5ea6\u5b66\u4e60/\u77e9\u9635\u6c42\u5bfc/#_7", 
            "text": "\\frac {\\partial y}{\\partial\\boldsymbol X}\n=\\frac {\\partial y}{\\partial{\n\\begin{bmatrix} \n  \\boldsymbol x_1^T\n\\\\\\boldsymbol x_2^T\n\\\\ ...\n\\\\\\boldsymbol x_p^T\n\\end{bmatrix}\n}}\n=\\begin{bmatrix} \n  \\frac {\\partial y}{\\boldsymbol x_1^T}\n\\\\\\frac {\\partial y}{\\boldsymbol x_2^T}\n\\\\ ...\n\\\\\\frac {\\partial y}{\\boldsymbol x_p^T}\n\\end{bmatrix}\n=\\begin{bmatrix} \n  \\frac {\\partial y}{\\partial x_{11}}\n    \\frac {\\partial y}{\\partial x_{21}}\n    ...\n    \\frac {\\partial y}{\\partial x_{p1}}\n\\\\\\frac {\\partial y}{\\partial x_{12}}\n    \\frac {\\partial y}{\\partial x_{22}}\n    ...\n    \\frac {\\partial y}{\\partial x_{p2}}\n\\\\ ...\n    ...\n\\\\\\frac {\\partial y}{\\partial x_{1q}}\n    \\frac {\\partial y}{\\partial x_{2q}}\n    ...\n    \\frac {\\partial y}{\\partial x_{pq}}\n\\end{bmatrix}   \\frac {\\partial y}{\\partial\\boldsymbol X}\n=\\frac {\\partial y}{\\partial{\n\\begin{bmatrix} \n  \\boldsymbol x_1^T\n\\\\\\boldsymbol x_2^T\n\\\\ ...\n\\\\\\boldsymbol x_p^T\n\\end{bmatrix}\n}}\n=\\begin{bmatrix} \n  \\frac {\\partial y}{\\boldsymbol x_1^T}\n\\\\\\frac {\\partial y}{\\boldsymbol x_2^T}\n\\\\ ...\n\\\\\\frac {\\partial y}{\\boldsymbol x_p^T}\n\\end{bmatrix}\n=\\begin{bmatrix} \n  \\frac {\\partial y}{\\partial x_{11}}\n  & \\frac {\\partial y}{\\partial x_{21}}\n  & ...\n  & \\frac {\\partial y}{\\partial x_{p1}}\n\\\\\\frac {\\partial y}{\\partial x_{12}}\n  & \\frac {\\partial y}{\\partial x_{22}}\n  & ...\n  & \\frac {\\partial y}{\\partial x_{p2}}\n\\\\ ...\n  & ...\n\\\\\\frac {\\partial y}{\\partial x_{1q}}\n  & \\frac {\\partial y}{\\partial x_{2q}}\n  & ...\n  & \\frac {\\partial y}{\\partial x_{pq}}\n\\end{bmatrix}", 
            "title": "\u6807\u91cf/\u77e9\u9635"
        }, 
        {
            "location": "/\u5b66\u4e60/\u6df1\u5ea6\u5b66\u4e60/\u77e9\u9635\u6c42\u5bfc/#_8", 
            "text": "\\frac {\\partial\\boldsymbol Y}{\\partial x}=\n\\begin{bmatrix} \n  \\frac {\\partial y_{11}}{\\partial x}\n    \\frac {\\partial y_{12}}{\\partial x}\n    ...\n    \\frac {\\partial y_{1n}}{\\partial x}\n\\\\\\frac {\\partial y_{21}}{\\partial x}\n    \\frac {\\partial y_{22}}{\\partial x}\n    ...\n    \\frac {\\partial y_{2n}}{\\partial x}\n\\\\ ...\n    ...\n\\\\\\frac {\\partial y_{m1}}{\\partial x}\n    \\frac {\\partial y_{m2}}{\\partial x}\n    ...\n    \\frac {\\partial y_{mn}}{\\partial x}\n\\end{bmatrix}   \\frac {\\partial\\boldsymbol Y}{\\partial x}=\n\\begin{bmatrix} \n  \\frac {\\partial y_{11}}{\\partial x}\n  & \\frac {\\partial y_{12}}{\\partial x}\n  & ...\n  & \\frac {\\partial y_{1n}}{\\partial x}\n\\\\\\frac {\\partial y_{21}}{\\partial x}\n  & \\frac {\\partial y_{22}}{\\partial x}\n  & ...\n  & \\frac {\\partial y_{2n}}{\\partial x}\n\\\\ ...\n  & ...\n\\\\\\frac {\\partial y_{m1}}{\\partial x}\n  & \\frac {\\partial y_{m2}}{\\partial x}\n  & ...\n  & \\frac {\\partial y_{mn}}{\\partial x}\n\\end{bmatrix}", 
            "title": "\u77e9\u9635/\u6807\u91cf"
        }, 
        {
            "location": "/\u5b66\u4e60/\u6df1\u5ea6\u5b66\u4e60/\u77e9\u9635\u6c42\u5bfc/#_9", 
            "text": "\u95ee\u9898   \\frac {\\partial {(y\u2212Xw)^T(y\u2212Xw)}}{\\partial w}  \\frac {\\partial {(y\u2212Xw)^T(y\u2212Xw)}}{\\partial w}   \u8bf4\u660e\uff1a  y y \u3001 w w \u4e3a\u5217\u5411\u91cf\uff0c X X \u4e3a\u77e9\u9635", 
            "title": "\u4e00\u4e2a\u6c42\u5bfc\u7684\u4f8b\u5b50"
        }, 
        {
            "location": "/\u5b66\u4e60/\u6df1\u5ea6\u5b66\u4e60/\u77e9\u9635\u6c42\u5bfc/#_10", 
            "text": "\u770b\u5230\u8fd9\u4e2a\u4f8b\u5b50\u4e0d\u8981\u6025\u7740\u53bb\u67e5\u8868\u6c42\u5bfc\uff0c\u5148\u770b\u770b\u5b83\u7684\u5f62\u5f0f\uff0c\u662f u(w)\u2217v(w) u(w)\u2217v(w) \u7684\u5f62\u5f0f\uff0c\u8fd9\u79cd\u5f62\u5f0f\u4e00\u822c\u6c42\u5bfc\u8f83\u4e3a\u590d\u6742\uff0c\u56e0\u6b64\u4e3a\u4e86\u7b80\u5316\u8fd0\u7b97\uff0c\u6211\u4eec\u5148\u628a\u5f0f\u5b50\u5c55\u5f00\u6210\u4e0b\u9762\u7684\u6837\u5b50\uff08\u6ce8\u610f\uff1a (Xw)^T=w^TX^T (Xw)^T=w^TX^T \uff09\uff1a    \\frac{\\partial(y^Ty\u2212y^TXw\u2212w^TX^Ty+w^TX^TXw)}{\\partial w}  \\frac{\\partial(y^Ty\u2212y^TXw\u2212w^TX^Ty+w^TX^TXw)}{\\partial w}   \u7136\u540e\u5c31\u53ef\u4ee5\u5199\u6210\u56db\u4e2a\u90e8\u5206\u6c42\u5bfc\u7684\u5f62\u5f0f\u5982\u4e0b\uff08\u7d2f\u52a0\u540e\u6c42\u5bfc=\u6c42\u5bfc\u540e\u7d2f\u52a0\uff09\uff1a    \n\\frac{\\partial y^Ty}{\\partial w}\n\u2212\\frac{\\partial y^TXw}{\\partial w}\n\u2212\\frac{\\partial w^TX^Ty}{\\partial w}\n+\\frac{\\partial w^TX^TXw}{\\partial w}  \n\\frac{\\partial y^Ty}{\\partial w}\n\u2212\\frac{\\partial y^TXw}{\\partial w}\n\u2212\\frac{\\partial w^TX^Ty}{\\partial w}\n+\\frac{\\partial w^TX^TXw}{\\partial w}", 
            "title": "\u5f0f\u5b50\u6f14\u5316"
        }, 
        {
            "location": "/\u5b66\u4e60/\u6df1\u5ea6\u5b66\u4e60/\u77e9\u9635\u6c42\u5bfc/#_11", 
            "text": "\\frac{\\partial y^Ty}{\\partial w} \\frac{\\partial y^Ty}{\\partial w} \u6c42\u5bfc :    \\frac{\\partial y^Ty}{\\partial w}=0  \\frac{\\partial y^Ty}{\\partial w}=0   \u8bf4\u660e\uff1a\u5206\u5b50\u90e8\u5206\u4e3a\u6807\u91cf\uff0c\u5206\u6bcd\u90e8\u5206\u4e3a\u5411\u91cf\uff0c\u627e\u5230\u7ef4\u57fa\u767e\u79d1\u4e2d\u7684Scalar-by-vector identities\u8868\u683c\uff0c\u5728\u8868\u683c\u4e2d\u5339\u914d\u5f62\u5f0f\u5230\u7b2c1\u884c\u7684\u4f4d\u7f6e\uff0c\u56e0\u4e3a\u5206\u6bcd\u4e3a\u5217\u5411\u91cf\uff0c\u56e0\u6b64\u4e3a\u5206\u6bcd\u5e03\u5c40\uff0c\u5bf9\u5e94\u7684\u6c42\u5bfc\u7ed3\u679c\u5c31\u662f 0 \u3002  \\frac{\\partial y^TXw}{\\partial w} \\frac{\\partial y^TXw}{\\partial w} \u6c42\u5bfc :    \\frac{\\partial y^TXw}{\\partial w}=X^Ty  \\frac{\\partial y^TXw}{\\partial w}=X^Ty   \u8bf4\u660e\uff1a\u540c\u6837\u7684\uff0c\u5728\u7ef4\u57fa\u767e\u79d1\u4e2d\u7684Scalar-by-vector identities\u8868\u683c\uff0c\u5728\u8868\u683c\u4e2d\u5339\u914d\u5f62\u5f0f\u5230\u7b2c11\u884c\u7684\u4f4d\u7f6e\uff0c\u5bf9\u5e94\u7684\u6c42\u5bfc\u7ed3\u679c\u5c31\u662f  X^Ty X^Ty  \u3002  \\frac{\\partial w^TX^Ty}{\\partial w} \\frac{\\partial w^TX^Ty}{\\partial w} \u6c42\u5bfc :   \\frac{\\partial w^TX^Ty}{\\partial w}=\\frac{\\partial(w^TX^Ty)^T}{\\partial w}=\\frac{\\partial y^TXw}{\\partial w}=X^Ty  \\frac{\\partial w^TX^Ty}{\\partial w}=\\frac{\\partial(w^TX^Ty)^T}{\\partial w}=\\frac{\\partial y^TXw}{\\partial w}=X^Ty   \u8bf4\u660e\uff1a\u56e0\u4e3a\u5206\u5b50\u4e3a\u6807\u91cf\uff0c\u6807\u91cf\u7684\u8f6c\u7f6e\u7b49\u4e8e\u672c\u8eab\uff0c\u6240\u4ee5\u5bf9\u5206\u5b50\u8fdb\u884c\u8f6c\u7f6e\u64cd\u4f5c\uff0c\u5176\u7b49\u4ef7\u4e8e\u7b2c\u4e8c\u90e8\u5206\u3002  \\frac{\\partial w^TX^TXw}{\\partial w} \\frac{\\partial w^TX^TXw}{\\partial w} \u6c42\u5bfc :    \\frac{\\partial w^TX^TXw}{\\partial w}=2X^TXw  \\frac{\\partial w^TX^TXw}{\\partial w}=2X^TXw   \u8bf4\u660e\uff1a\u540c\u6837\u7684\uff0c\u5728\u7ef4\u57fa\u767e\u79d1\u4e2d\u7684Scalar-by-vector identities\u8868\u683c\uff0c\u5728\u8868\u683c\u4e2d\u5339\u914d\u5f62\u5f0f\u5230\u7b2c13\u884c\u7684\u4f4d\u7f6e\uff0c\u77e9\u9635\u7684\u8f6c\u7f6e\u4e58\u4e0a\u672c\u8eab\uff08 X^TX X^TX \uff09\u4e3a\u5bf9\u79f0\u77e9\u9635\u5f53\u505a\u8868\u683c\u4e2d\u7684A \uff0c\u6240\u4ee5\u5f97\u5230\u6c42\u5bfc\u7ed3\u679c  2X^TXw 2X^TXw  \u3002", 
            "title": "\u6c42\u5bfc"
        }, 
        {
            "location": "/\u5b66\u4e60/\u6df1\u5ea6\u5b66\u4e60/\u77e9\u9635\u6c42\u5bfc/#_12", 
            "text": "\u628a\u56db\u4e2a\u90e8\u5206\u6c42\u5bfc\u7ed3\u679c\u8fdb\u884c\u76f8\u5e94\u7684\u52a0\u51cf\u5c31\u53ef\u4ee5\u5f97\u5230\u6700\u7ec8\u7684\u7ed3\u679c\uff1a    \\frac{\\partial y^Ty}{\\partial w}\n\u2212\\frac{\\partial y^TXw}{\\partial w}\n\u2212\\frac{\\partial w^TX^Ty}{\\partial w}\n+\\frac{\\partial w^TX^TXw}{\\partial w}\n=0\u2212X^Ty\u2212X^Ty+2X^TXw=\u22122X^T(y+Xw)  \\frac{\\partial y^Ty}{\\partial w}\n\u2212\\frac{\\partial y^TXw}{\\partial w}\n\u2212\\frac{\\partial w^TX^Ty}{\\partial w}\n+\\frac{\\partial w^TX^TXw}{\\partial w}\n=0\u2212X^Ty\u2212X^Ty+2X^TXw=\u22122X^T(y+Xw)   \u73b0\u5728\u4f60\u518d\u770b\u770b\u7ef4\u57fa\u767e\u79d1\u91cc\u90a3\u6210\u5806\u7684\u8868\u683c\uff0c\u662f\u4e0d\u662f\u89c9\u5f97\u5f02\u5e38\u5b9e\u7528\u4e86\uff01   \\frac {\\partial\\boldsymbol y^T}{\\partial\\boldsymbol x}\n=\\begin{bmatrix} \n \\frac {\\partial\\boldsymbol y^T}{\\partial x_1}\n\\\\\\frac {\\partial\\boldsymbol y^T}{\\partial x_2}\n\\\\ ...\n\\\\\\frac {\\partial\\boldsymbol y^T}{\\partial x_n}\n\\end{bmatrix}\n=\\begin{bmatrix} \n  \\frac {\\partial y_1}{\\partial x_1}\n    \\frac {\\partial y_2}{\\partial x_1}\n    ...\n    \\frac {\\partial y_m}{\\partial x_1}\n\\\\\\frac {\\partial y_1}{\\partial x_2}\n    \\frac {\\partial y_2}{\\partial x_2}\n    ...\n    \\frac {\\partial y_m}{\\partial x_2}\n\\\\ ...\n    ...\n\\\\\\frac {\\partial y_1}{\\partial x_n}\n    \\frac {\\partial y_2}{\\partial x_n}\n    ...\n    \\frac {\\partial y_m}{\\partial x_n}\n\\end{bmatrix}  \\frac {\\partial\\boldsymbol y^T}{\\partial\\boldsymbol x}\n=\\begin{bmatrix} \n \\frac {\\partial\\boldsymbol y^T}{\\partial x_1}\n\\\\\\frac {\\partial\\boldsymbol y^T}{\\partial x_2}\n\\\\ ...\n\\\\\\frac {\\partial\\boldsymbol y^T}{\\partial x_n}\n\\end{bmatrix}\n=\\begin{bmatrix} \n  \\frac {\\partial y_1}{\\partial x_1}\n  & \\frac {\\partial y_2}{\\partial x_1}\n  & ...\n  & \\frac {\\partial y_m}{\\partial x_1}\n\\\\\\frac {\\partial y_1}{\\partial x_2}\n  & \\frac {\\partial y_2}{\\partial x_2}\n  & ...\n  & \\frac {\\partial y_m}{\\partial x_2}\n\\\\ ...\n  & ...\n\\\\\\frac {\\partial y_1}{\\partial x_n}\n  & \\frac {\\partial y_2}{\\partial x_n}\n  & ...\n  & \\frac {\\partial y_m}{\\partial x_n}\n\\end{bmatrix}    \\boldsymbol y=\\boldsymbol A^T \\boldsymbol x  \\boldsymbol y=\\boldsymbol A^T \\boldsymbol x    \\boldsymbol y=\\boldsymbol A^T \\boldsymbol x  \\boldsymbol y=\\boldsymbol A^T \\boldsymbol x    \\frac {\\partial\\boldsymbol y^T}{\\partial\\boldsymbol x}\n=\\frac {\\partial\\boldsymbol x^T \\boldsymbol A}{\\partial\\boldsymbol x}  \\frac {\\partial\\boldsymbol y^T}{\\partial\\boldsymbol x}\n=\\frac {\\partial\\boldsymbol x^T \\boldsymbol A}{\\partial\\boldsymbol x}", 
            "title": "\u6574\u5408"
        }, 
        {
            "location": "/\u5de5\u5177/About/", 
            "text": "\u5c06 Jupyter \u81ea\u52a8\u53d1\u5e03\u5230 GitHub Pages\n\n\n\u672c\u6587\u4ecb\u7ecd\u5982\u4f55\u5229\u7528 MkDocs \u5c06 Jupyter \u6587\u6863\u53d1\u5e03\u5230 GitHub Pages \u4e0a\u3002Jupyter \u65e2\u53ef\u4ee5\u7528\u4f5c\u4ea4\u4e92\u5f0f\u5c55\u793a\u79d1\u5b66\u8ba1\u7b97\u3001\u6570\u636e\u5904\u7406\u8fc7\u7a0b\uff0c\u4e5f\u53ef\u4ee5\u4f5c\u4e3a Python \u5f00\u53d1\u73af\u5883\uff0c\u751a\u81f3\u53ef\u4ee5\u5f53\u505a\u5b9e\u65f6\u7684 Markdown \u7f16\u8f91\u5668\u3002\u501f\u52a9 nbconvert \u5de5\u5177\u53ef\u4ee5\u5c06 Jupyter \u6587\u6863\u8f6c\u5316\u4e3a Markdown \u683c\u5f0f\uff0c\u5e76\u901a\u8fc7 MkDocs \u5c06\u5176\u53d1\u5e03\u5230 GitHub Pages\u3002\n\n\n\n\n1. \u5b89\u88c5\u73af\u5883\n\n\n\u9996\u5148\u5b89\u88c5\n\u79d1\u5b66\u8ba1\u7b97\u5305 Anaconda\n\uff0c\u5176\u4e2d\u5df2\u7ecf\u5305\u542b\u4e86\u5f88\u591a\u79d1\u5b66\u8ba1\u7b97\u673a\u3001\u6570\u636e\u5904\u7406\u76f8\u5173\u7684 Python \u5305\uff0c\u4e5f\u5305\u62ec Jupyter \u5728\u5185\uff08\u5982\u679c\u53ea\u9700\u8981 Jupyter \u666e\u901a\u7684 Python \u6267\u884c\u73af\u5883\u548c Markdown \u7f16\u8f91\u5668\u529f\u80fd\uff0c\u53ef\u8df3\u8fc7\u8fd9\u4e00\u6b65\uff0c\u76f4\u63a5\u5355\u72ec\u5b89\u88c5 Jupyter\uff09\u3002\n\n\n\u53ef\u4ee5\u901a\u8fc7\n\u6e05\u534e\u5927\u5b66 TUNA \u955c\u50cf\u6e90\n\u4e0b\u8f7d\uff0c\u5177\u4f53\u53c2\u8003\n\u300a\u7528 conda \u7ba1\u7406 Python \u5f00\u53d1\u73af\u5883\u300b\n\u3002\u5b89\u88c5\u5b8c\u6210\u4e4b\u540e\u53ef\u4ee5\u901a\u8fc7 \nconda\n \u547d\u4ee4\u7ba1\u7406 Python \u5f00\u53d1\u73af\u5883\uff1a\n\n\nconda info\nUsing Anaconda Cloud api site https://api.anaconda.org\nCurrent conda install:\n\n             platform : osx-64\n        conda version : \n4\n.0.8\n  conda-build version : \n1\n.19.0\n       python version : \n3\n.5.1.final.0\n     requests version : \n2\n.10.0\n     root environment : /Users/rainy/anaconda  \n(\nwritable\n)\n\n  default environment : /Users/rainy/anaconda\n     envs directories : /Users/rainy/anaconda/envs\n        package cache : /Users/rainy/anaconda/pkgs\n         channel URLs : https://repo.continuum.io/pkgs/free/osx-64/\n                        https://repo.continuum.io/pkgs/free/noarch/\n                        https://repo.continuum.io/pkgs/pro/osx-64/\n                        https://repo.continuum.io/pkgs/pro/noarch/\n          config file : None\n    is foreign system : False\n\n\n\n\n\u4ece\u9ed8\u8ba4\u73af\u5883\u751f\u6210\u4e00\u4e2a\u65b0\u7684\u72ec\u7acb\u73af\u5883\uff1a\n\n\nconda env crate -n dhub --clone root\n\n\nsource\n activate dhub\n\n# discarding /Users/rainy/anaconda/bin from PATH\n\n\n# prepending /Users/rainy/anaconda/envs/dhub/bin to PATH\n\n\n\n\n\n\u5b89\u88c5 \nMkDocs\n\uff1a\n\n\npip install mkdocs -i http://pypi.douban.com/simple --trusted-host\n=\npypi.douban.com\n\n\n\n\n2. \u521b\u5efa GitHub Pages \u4ed3\u5e93\n\n\n\u6839\u636e GitHub ID \u521b\u5efa\u4e00\u4e2a \nusername\n.github.io\n \u7684\u516c\u5f00\u4ed3\u5e93\uff0c\u5373\u53ef\u4ee5\u901a\u8fc7 \nhttp://username.github.io\n \u8bbf\u95ee\u8be5\u4ed3\u5e93\u4e0b\u7684\u9759\u6001\u6587\u6863\u3002\u521b\u5efa\u5176\u5b83\u4ed3\u5e93\uff0c\u5982 \nproject\n\uff0c\u53ef\u4ee5\u901a\u8fc7 \nhttp://username.github.io/project/\n \u8bbf\u95ee\u8be5\u4ed3\u5e93\u4e0b\u7684 \ngh-pages\n \u5206\u652f\u3002\n\n\n3. \nmkdocs\n \u547d\u4ee4\n\n\n\u521b\u5efa\u65b0\u7684 \nmkdocs\n \u9879\u76ee\uff1a\n\n\nmkdocs init data-blog\n\ncd\n data-blog\ngit init\ngit remote add origin git@github.com:rainyear/data-blog.git\n\ntree -L \n1\n\n.\n\u251c\u2500\u2500 LICENSE\n\u251c\u2500\u2500 README.md\n\u251c\u2500\u2500 docs\n\u251c\u2500\u2500 mkdocs.yml\n\n\n\n\n\u5176\u4e2d \nMarkdown\n \u6587\u4ef6\u4fdd\u5b58\u5728 \ndocs/\n \u76ee\u5f55\u4e0b\uff0c\u5e76\u901a\u8fc7\u914d\u7f6e\u6587\u4ef6 \nmkdocs.yml\n \u51b3\u5b9a\u751f\u6210\u7684\u9759\u6001\u7f51\u7ad9\u7684\u7ed3\u6784\uff1a\n\n\ncat mkdocs.yml\n\npages:\n- \n{\nHome: index.md\n}\n\nsite_name: Data Lab\ntheme: flatly\n\n\n\n\n4. \u521b\u5efa\u3001\u4fee\u6539 Jupyter \u914d\u7f6e\u6587\u4ef6\n\n\nmkdir config jupyters\njupyter notebook --generate-config\ncp ~/.jupyter/jupyter_notebook_config.py config/\n\n\n\n\n\u4fee\u6539 \njupyter_notebook_config.py\n\uff1a\n\n\ndef\n \noutput_post_save\n(\nmodel\n,\n \nos_path\n,\n \ncontents_manager\n):\n\n  \npass\n\n\n\nc\n.\nFileContentsManager\n.\nroot_dir\n \n=\n \njupyters\n\n\nc\n.\nFileContentsManager\n.\npost_save_hook\n \n=\n \noutput_post_save\n\n\n\n\n\nc.FileContentsManager.post_save_hook\n \u7528\u4e8e\u8bbe\u7f6e Jupyter \u6587\u6863\u4fdd\u5b58\u7684\u65f6\u5019\u89e6\u53d1\u7684\u64cd\u4f5c\uff0c\u8fd9\u91cc\u901a\u8fc7 \njupyter-nbconvert\n \u547d\u4ee4\u5c06\u5f53\u524d\u7684 Jupyter \u6587\u6863\u8f6c\u6362\u4e3a Markdown \u5e76\u4fdd\u5b58\u5230 \ndocs/\n \u76ee\u5f55\uff0c\u5e76\u66f4\u65b0 \nmkdocs.yml\n \u914d\u7f6e\u6587\u4ef6\uff08\u5177\u4f53\u4ee3\u7801\u53ef\u4ee5\u67e5\u770b \njupyter_notebook_config.py\n\uff09\u3002\n\n\n\u6253\u5f00 Jupyter Notebook\uff1a\n\n\njupyter notebook --config config/jupyter_notebook_config.py\n\n\n\n\n5. \u53d1\u5e03\u5230 GitHub Pages\n\n\n\u5728\u672c\u5730\u6267\u884c \nmkdocs serve\n \u53ef\u4ee5\u5728\u672c\u5730\u67e5\u770b\u751f\u6210\u7684\u9759\u6001\u7f51\u7ad9\uff1a\n\n\ntree -L \n2\n\n.\n\u251c\u2500\u2500 LICENSE\n\u251c\u2500\u2500 README.md\n\u251c\u2500\u2500 config\n\u2502\u00a0\u00a0 \u2514\u2500\u2500 jupyter_notebook_config.py\n\u251c\u2500\u2500 docs\n\u2502\u00a0\u00a0 \u251c\u2500\u2500 About.md\n\u2502\u00a0\u00a0 \u251c\u2500\u2500 Cheatsheet.md\n\u2502\u00a0\u00a0 \u2514\u2500\u2500 index.md\n\u251c\u2500\u2500 jupyters\n\u2502\u00a0\u00a0 \u251c\u2500\u2500 About.ipynb\n\u2502\u00a0\u00a0 \u251c\u2500\u2500 Cheatsheet.ipynb\n\u2502\u00a0\u00a0 \u2514\u2500\u2500 Home.md\n\u251c\u2500\u2500 mkdocs.yml\n\n\n\n\n\u5728\u6bcf\u6b21\u6587\u6863\u4fdd\u5b58\u4e4b\u540e\uff0c\njupyters/\n \u76ee\u5f55\u4e0b\u7684\u6587\u6863\u5c06\u81ea\u52a8\u8f6c\u6362\u4e3a Markdown \u5e76\u4fdd\u5b58\u5728 \ndocs/\n \u76ee\u5f55\uff0c\u5176\u4e2d\u5b50\u76ee\u5f55\u5c06\u4ee5\u7c7b\u522b\u7684\u5f62\u5f0f\u5448\u73b0\u5728\u7f51\u7ad9\u4e0a\uff1a\n\n\n\n\n\u6267\u884c \nmkdocs gh-deploy --clean\n \u5373\u53ef\u81ea\u52a8\u5c06\u751f\u6210\u7684\u9759\u6001\u7f51\u7ad9\u63a8\u9001\u5230 GitHub \u8fdc\u7a0b\u4ed3\u5e93\u7684 \ngh-pages\n \u5206\u652f\uff0c\u4ece\u800c\u53d1\u5e03\u5230 GitHub Pages \u9875\u9762\uff1a", 
            "title": "About"
        }, 
        {
            "location": "/\u5de5\u5177/About/#jupyter-github-pages", 
            "text": "\u672c\u6587\u4ecb\u7ecd\u5982\u4f55\u5229\u7528 MkDocs \u5c06 Jupyter \u6587\u6863\u53d1\u5e03\u5230 GitHub Pages \u4e0a\u3002Jupyter \u65e2\u53ef\u4ee5\u7528\u4f5c\u4ea4\u4e92\u5f0f\u5c55\u793a\u79d1\u5b66\u8ba1\u7b97\u3001\u6570\u636e\u5904\u7406\u8fc7\u7a0b\uff0c\u4e5f\u53ef\u4ee5\u4f5c\u4e3a Python \u5f00\u53d1\u73af\u5883\uff0c\u751a\u81f3\u53ef\u4ee5\u5f53\u505a\u5b9e\u65f6\u7684 Markdown \u7f16\u8f91\u5668\u3002\u501f\u52a9 nbconvert \u5de5\u5177\u53ef\u4ee5\u5c06 Jupyter \u6587\u6863\u8f6c\u5316\u4e3a Markdown \u683c\u5f0f\uff0c\u5e76\u901a\u8fc7 MkDocs \u5c06\u5176\u53d1\u5e03\u5230 GitHub Pages\u3002", 
            "title": "\u5c06 Jupyter \u81ea\u52a8\u53d1\u5e03\u5230 GitHub Pages"
        }, 
        {
            "location": "/\u5de5\u5177/About/#1", 
            "text": "\u9996\u5148\u5b89\u88c5 \u79d1\u5b66\u8ba1\u7b97\u5305 Anaconda \uff0c\u5176\u4e2d\u5df2\u7ecf\u5305\u542b\u4e86\u5f88\u591a\u79d1\u5b66\u8ba1\u7b97\u673a\u3001\u6570\u636e\u5904\u7406\u76f8\u5173\u7684 Python \u5305\uff0c\u4e5f\u5305\u62ec Jupyter \u5728\u5185\uff08\u5982\u679c\u53ea\u9700\u8981 Jupyter \u666e\u901a\u7684 Python \u6267\u884c\u73af\u5883\u548c Markdown \u7f16\u8f91\u5668\u529f\u80fd\uff0c\u53ef\u8df3\u8fc7\u8fd9\u4e00\u6b65\uff0c\u76f4\u63a5\u5355\u72ec\u5b89\u88c5 Jupyter\uff09\u3002  \u53ef\u4ee5\u901a\u8fc7 \u6e05\u534e\u5927\u5b66 TUNA \u955c\u50cf\u6e90 \u4e0b\u8f7d\uff0c\u5177\u4f53\u53c2\u8003 \u300a\u7528 conda \u7ba1\u7406 Python \u5f00\u53d1\u73af\u5883\u300b \u3002\u5b89\u88c5\u5b8c\u6210\u4e4b\u540e\u53ef\u4ee5\u901a\u8fc7  conda  \u547d\u4ee4\u7ba1\u7406 Python \u5f00\u53d1\u73af\u5883\uff1a  conda info\nUsing Anaconda Cloud api site https://api.anaconda.org\nCurrent conda install:\n\n             platform : osx-64\n        conda version :  4 .0.8\n  conda-build version :  1 .19.0\n       python version :  3 .5.1.final.0\n     requests version :  2 .10.0\n     root environment : /Users/rainy/anaconda   ( writable ) \n  default environment : /Users/rainy/anaconda\n     envs directories : /Users/rainy/anaconda/envs\n        package cache : /Users/rainy/anaconda/pkgs\n         channel URLs : https://repo.continuum.io/pkgs/free/osx-64/\n                        https://repo.continuum.io/pkgs/free/noarch/\n                        https://repo.continuum.io/pkgs/pro/osx-64/\n                        https://repo.continuum.io/pkgs/pro/noarch/\n          config file : None\n    is foreign system : False  \u4ece\u9ed8\u8ba4\u73af\u5883\u751f\u6210\u4e00\u4e2a\u65b0\u7684\u72ec\u7acb\u73af\u5883\uff1a  conda env crate -n dhub --clone root source  activate dhub # discarding /Users/rainy/anaconda/bin from PATH  # prepending /Users/rainy/anaconda/envs/dhub/bin to PATH   \u5b89\u88c5  MkDocs \uff1a  pip install mkdocs -i http://pypi.douban.com/simple --trusted-host = pypi.douban.com", 
            "title": "1. \u5b89\u88c5\u73af\u5883"
        }, 
        {
            "location": "/\u5de5\u5177/About/#2-github-pages", 
            "text": "\u6839\u636e GitHub ID \u521b\u5efa\u4e00\u4e2a  username .github.io  \u7684\u516c\u5f00\u4ed3\u5e93\uff0c\u5373\u53ef\u4ee5\u901a\u8fc7  http://username.github.io  \u8bbf\u95ee\u8be5\u4ed3\u5e93\u4e0b\u7684\u9759\u6001\u6587\u6863\u3002\u521b\u5efa\u5176\u5b83\u4ed3\u5e93\uff0c\u5982  project \uff0c\u53ef\u4ee5\u901a\u8fc7  http://username.github.io/project/  \u8bbf\u95ee\u8be5\u4ed3\u5e93\u4e0b\u7684  gh-pages  \u5206\u652f\u3002", 
            "title": "2. \u521b\u5efa GitHub Pages \u4ed3\u5e93"
        }, 
        {
            "location": "/\u5de5\u5177/About/#3-mkdocs", 
            "text": "\u521b\u5efa\u65b0\u7684  mkdocs  \u9879\u76ee\uff1a  mkdocs init data-blog cd  data-blog\ngit init\ngit remote add origin git@github.com:rainyear/data-blog.git\n\ntree -L  1 \n.\n\u251c\u2500\u2500 LICENSE\n\u251c\u2500\u2500 README.md\n\u251c\u2500\u2500 docs\n\u251c\u2500\u2500 mkdocs.yml  \u5176\u4e2d  Markdown  \u6587\u4ef6\u4fdd\u5b58\u5728  docs/  \u76ee\u5f55\u4e0b\uff0c\u5e76\u901a\u8fc7\u914d\u7f6e\u6587\u4ef6  mkdocs.yml  \u51b3\u5b9a\u751f\u6210\u7684\u9759\u6001\u7f51\u7ad9\u7684\u7ed3\u6784\uff1a  cat mkdocs.yml\n\npages:\n-  { Home: index.md } \nsite_name: Data Lab\ntheme: flatly", 
            "title": "3. mkdocs \u547d\u4ee4"
        }, 
        {
            "location": "/\u5de5\u5177/About/#4-jupyter", 
            "text": "mkdir config jupyters\njupyter notebook --generate-config\ncp ~/.jupyter/jupyter_notebook_config.py config/  \u4fee\u6539  jupyter_notebook_config.py \uff1a  def   output_post_save ( model ,   os_path ,   contents_manager ): \n   pass  c . FileContentsManager . root_dir   =   jupyters  c . FileContentsManager . post_save_hook   =   output_post_save   c.FileContentsManager.post_save_hook  \u7528\u4e8e\u8bbe\u7f6e Jupyter \u6587\u6863\u4fdd\u5b58\u7684\u65f6\u5019\u89e6\u53d1\u7684\u64cd\u4f5c\uff0c\u8fd9\u91cc\u901a\u8fc7  jupyter-nbconvert  \u547d\u4ee4\u5c06\u5f53\u524d\u7684 Jupyter \u6587\u6863\u8f6c\u6362\u4e3a Markdown \u5e76\u4fdd\u5b58\u5230  docs/  \u76ee\u5f55\uff0c\u5e76\u66f4\u65b0  mkdocs.yml  \u914d\u7f6e\u6587\u4ef6\uff08\u5177\u4f53\u4ee3\u7801\u53ef\u4ee5\u67e5\u770b  jupyter_notebook_config.py \uff09\u3002  \u6253\u5f00 Jupyter Notebook\uff1a  jupyter notebook --config config/jupyter_notebook_config.py", 
            "title": "4. \u521b\u5efa\u3001\u4fee\u6539 Jupyter \u914d\u7f6e\u6587\u4ef6"
        }, 
        {
            "location": "/\u5de5\u5177/About/#5-github-pages", 
            "text": "\u5728\u672c\u5730\u6267\u884c  mkdocs serve  \u53ef\u4ee5\u5728\u672c\u5730\u67e5\u770b\u751f\u6210\u7684\u9759\u6001\u7f51\u7ad9\uff1a  tree -L  2 \n.\n\u251c\u2500\u2500 LICENSE\n\u251c\u2500\u2500 README.md\n\u251c\u2500\u2500 config\n\u2502\u00a0\u00a0 \u2514\u2500\u2500 jupyter_notebook_config.py\n\u251c\u2500\u2500 docs\n\u2502\u00a0\u00a0 \u251c\u2500\u2500 About.md\n\u2502\u00a0\u00a0 \u251c\u2500\u2500 Cheatsheet.md\n\u2502\u00a0\u00a0 \u2514\u2500\u2500 index.md\n\u251c\u2500\u2500 jupyters\n\u2502\u00a0\u00a0 \u251c\u2500\u2500 About.ipynb\n\u2502\u00a0\u00a0 \u251c\u2500\u2500 Cheatsheet.ipynb\n\u2502\u00a0\u00a0 \u2514\u2500\u2500 Home.md\n\u251c\u2500\u2500 mkdocs.yml  \u5728\u6bcf\u6b21\u6587\u6863\u4fdd\u5b58\u4e4b\u540e\uff0c jupyters/  \u76ee\u5f55\u4e0b\u7684\u6587\u6863\u5c06\u81ea\u52a8\u8f6c\u6362\u4e3a Markdown \u5e76\u4fdd\u5b58\u5728  docs/  \u76ee\u5f55\uff0c\u5176\u4e2d\u5b50\u76ee\u5f55\u5c06\u4ee5\u7c7b\u522b\u7684\u5f62\u5f0f\u5448\u73b0\u5728\u7f51\u7ad9\u4e0a\uff1a   \u6267\u884c  mkdocs gh-deploy --clean  \u5373\u53ef\u81ea\u52a8\u5c06\u751f\u6210\u7684\u9759\u6001\u7f51\u7ad9\u63a8\u9001\u5230 GitHub \u8fdc\u7a0b\u4ed3\u5e93\u7684  gh-pages  \u5206\u652f\uff0c\u4ece\u800c\u53d1\u5e03\u5230 GitHub Pages \u9875\u9762\uff1a", 
            "title": "5. \u53d1\u5e03\u5230 GitHub Pages"
        }, 
        {
            "location": "/\u5de5\u5177/Cheatsheet/", 
            "text": "Scientific Python Cheatsheet\n\n\nIPGP\n / \nScientific Python Cheatsheet\n\n\nNumPy\n\n\nimport\n \nnumpy\n \nas\n \nnp\n\n\na\n=\n2\n\n\nb\n=\n3\n\n\nc\n=\n4\n\n\nd\n=\n5\n\n\ne\n=\n6\n\n\nf\n=\n7\n\n\ng\n=\n8\n\n\n\n\n\nimport\n \nmatplotlib.pyplot\n \nas\n \nplt\n\n\nimport\n \nnumpy\n \nas\n \nnp\n\n\n\n%\nmatplotlib\n \ninline\n\n\n\nx\n \n=\n \nnp\n.\narange\n(\n20\n)\n\n\ny\n \n=\n \nx\n**\n2\n\n\n\nplt\n.\nplot\n(\nx\n,\n \ny\n)\n\n\nprint\n \nx\n\n\n\n\n\n[ 0  1  2  3  4  5  6  7  8  9 10 11 12 13 14 15 16 17 18 19]\n\n\n\n\n\n\n\n# array initialization\n\n\nnp\n.\narray\n([\n2\n,\n \n3\n,\n \n4\n])\n             \n# direct initialization\n\n\nnp\n.\nempty\n(\n20\n,\n \ndtype\n=\nnp\n.\nfloat32\n)\n  \n# single precision array with 20 entries\n\n\nnp\n.\nzeros\n(\n200\n)\n                   \n# initialize 200 zeros\n\n\nnp\n.\nones\n((\n3\n,\n3\n),\n \ndtype\n=\nnp\n.\nint32\n)\n  \n# 3 x 3 integer matrix with ones\n\n\nnp\n.\neye\n(\n200\n)\n                     \n# ones on the diagonal\n\n\nnp\n.\nzeros_like\n(\na\n)\n                \n# returns array with zeros and the shape of a\n\n\nnp\n.\nlinspace\n(\n0.\n,\n \n10.\n,\n \n100\n)\n       \n# 100 points from 0 to 10\n\n\nnp\n.\narange\n(\n0\n,\n \n100\n,\n \n2\n)\n            \n# points from 0 to \n100 with step width 2\n\n\nnp\n.\nlogspace\n(\n-\n5\n,\n \n2\n,\n \n100\n)\n         \n# 100 log-spaced points between 1e-5 and 1e2\n\n\nnp\n.\ncopy\n(\na\n)\n                      \n# copy array to new memory\n\n\n\n\n\n# array properties and operations\n\n\na\n.\nshape\n                \n# a tuple with the lengths of each axis\n\n\nlen\n(\na\n)\n                 \n# length of axis 0\n\n\na\n.\nndim\n                 \n# number of dimensions (axes)\n\n\na\n.\nsort\n(\naxis\n=\n1\n)\n         \n# sort array along axis\n\n\na\n.\nflatten\n()\n            \n# collapse array to one dimension\n\n\na\n.\nconj\n()\n               \n# return complex conjugate\n\n\na\n.\nastype\n(\nnp\n.\nint16\n)\n     \n# cast to integer\n\n\nnp\n.\nargmax\n(\na\n,\n \naxis\n=\n2\n)\n   \n# return index of maximum along a given axis\n\n\nnp\n.\ncumsum\n(\na\n)\n           \n# return cumulative sum\n\n\nnp\n.\nany\n(\na\n)\n              \n# True if any element is True\n\n\nnp\n.\nall\n(\na\n)\n              \n# True if all elements are True\n\n\nnp\n.\nargsort\n(\na\n,\n \naxis\n=\n1\n)\n  \n# return sorted index array along axis", 
            "title": "Cheatsheet"
        }, 
        {
            "location": "/\u5de5\u5177/Cheatsheet/#scientific-python-cheatsheet", 
            "text": "IPGP  /  Scientific Python Cheatsheet", 
            "title": "Scientific Python Cheatsheet"
        }, 
        {
            "location": "/\u5de5\u5177/Cheatsheet/#numpy", 
            "text": "import   numpy   as   np  a = 2  b = 3  c = 4  d = 5  e = 6  f = 7  g = 8   import   matplotlib.pyplot   as   plt  import   numpy   as   np  % matplotlib   inline  x   =   np . arange ( 20 )  y   =   x ** 2  plt . plot ( x ,   y )  print   x   [ 0  1  2  3  4  5  6  7  8  9 10 11 12 13 14 15 16 17 18 19]   # array initialization  np . array ([ 2 ,   3 ,   4 ])               # direct initialization  np . empty ( 20 ,   dtype = np . float32 )    # single precision array with 20 entries  np . zeros ( 200 )                     # initialize 200 zeros  np . ones (( 3 , 3 ),   dtype = np . int32 )    # 3 x 3 integer matrix with ones  np . eye ( 200 )                       # ones on the diagonal  np . zeros_like ( a )                  # returns array with zeros and the shape of a  np . linspace ( 0. ,   10. ,   100 )         # 100 points from 0 to 10  np . arange ( 0 ,   100 ,   2 )              # points from 0 to  100 with step width 2  np . logspace ( - 5 ,   2 ,   100 )           # 100 log-spaced points between 1e-5 and 1e2  np . copy ( a )                        # copy array to new memory   # array properties and operations  a . shape                  # a tuple with the lengths of each axis  len ( a )                   # length of axis 0  a . ndim                   # number of dimensions (axes)  a . sort ( axis = 1 )           # sort array along axis  a . flatten ()              # collapse array to one dimension  a . conj ()                 # return complex conjugate  a . astype ( np . int16 )       # cast to integer  np . argmax ( a ,   axis = 2 )     # return index of maximum along a given axis  np . cumsum ( a )             # return cumulative sum  np . any ( a )                # True if any element is True  np . all ( a )                # True if all elements are True  np . argsort ( a ,   axis = 1 )    # return sorted index array along axis", 
            "title": "NumPy"
        }, 
        {
            "location": "/\u65e5\u5e38/test/testtest/", 
            "text": "Learning\n\n\nIn the previous sections we've discussed the static parts of a Neural Networks: how we can set up the network connectivity, the data, and the loss function. This section is devoted to the dynamics, or in other words, the process of learning the parameters and finding good hyperparameters.\n\n\n\n\nGradient Checks\n\n\nIn theory, performing a gradient check is as simple as comparing the analytic gradient to the numerical gradient. In practice, the process is much more involved and error prone. Here are some tips, tricks, and issues to watch out for:\n\n\nUse the centered formula\n. The formula you may have seen for the finite difference approximation when evaluating the numerical gradient looks as follows:\n\n\n\n\n\n\\frac{df(x)}{dx} = \\frac{f(x + h) - f(x)}{h} \\hspace{0.1in} \\text{(bad, do not use)}\n\n\n\n\n\\frac{df(x)}{dx} = \\frac{f(x + h) - f(x)}{h} \\hspace{0.1in} \\text{(bad, do not use)}\n\n\n\n\n\nwhere \nh\nh\n is a very small number, in practice approximately 1e-5 or so. In practice, it turns out that it is much better to use the \ncentered\n difference formula of the form:\n\n\n\n\n\n\\frac{df(x)}{dx} = \\frac{f(x + h) - f(x - h)}{2h} \\hspace{0.1in} \\text{(use instead)}\n\n\n\n\n\\frac{df(x)}{dx} = \\frac{f(x + h) - f(x - h)}{2h} \\hspace{0.1in} \\text{(use instead)}\n\n\n\n\n\nThis requires you to evaluate the loss function twice to check every single dimension of the gradient (so it is about 2 times as expensive), but the gradient approximation turns out to be much more precise. To see this, you can use Taylor expansion of \nf(x+h)\nf(x+h)\n and \nf(x-h)\nf(x-h)\n and verify that the first formula has an error on order of \nO(h)\nO(h)\n, while the second formula only has error terms on order of \nO(h^2)\nO(h^2)\n (i.e. it is a second order approximation).\n\n\nUse relative error for the comparison\n. What are the details of comparing the numerical gradient \nf'_n\nf'_n\n and analytic gradient \nf'_a\nf'_a\n? That is, how do we know if the two are not compatible? You might be temped to keep track of the difference $\\mid f'_a - f'_n \\mid $ or its square and define the gradient check as failed if that difference is above a threshold. However, this is problematic. For example, consider the case where their difference is 1e-4. This seems like a very appropriate difference if the two gradients are about 1.0, so we'd consider the two gradients to match. But if the gradients were both on order of 1e-5 or lower, then we'd consider 1e-4 to be a huge difference and likely a failure. Hence, it is always more appropriate to consider the \nrelative error\n:\n\n\n\n\n\n\\frac{\\mid f'_a - f'_n \\mid}{\\max(\\mid f'_a \\mid, \\mid f'_n \\mid)}\n\n\n\n\n\\frac{\\mid f'_a - f'_n \\mid}{\\max(\\mid f'_a \\mid, \\mid f'_n \\mid)}\n\n\n\n\n\nwhich considers their ratio of the differences to the ratio of the absolute values of both gradients. Notice that normally the relative error formula only includes one of the two terms (either one), but I prefer to max (or add) both to make it symmetric and to prevent dividing by zero in the case where one of the two is zero (which can often happen, especially with ReLUs). However, one must explicitly keep track of the case where both are zero and pass the gradient check in that edge case. In practice:\n\n\n\n\nrelative error \n 1e-2 usually means the gradient is probably wrong\n\n\n1e-2 \n relative error \n 1e-4 should make you feel uncomfortable\n\n\n1e-4 \n relative error is usually okay for objectives with kinks. But if there are no kinks (e.g. use of tanh nonlinearities and softmax), then 1e-4 is too high.\n\n\n1e-7 and less you should be happy.\n\n\n\n\nAlso keep in mind that the deeper the network, the higher the relative errors will be. So if you are gradient checking the input data for a 10-layer network, a relative error of 1e-2 might be okay because the errors build up on the way. Conversely, an error of 1e-2 for a single differentiable function likely indicates incorrect gradient.\n\n\nUse double precision\n. A common pitfall is using single precision floating point to compute gradient check. It is often that case that you might get high relative errors (as high as 1e-2) even with a correct gradient implementation. In my experience I've sometimes seen my relative errors plummet from 1e-2 to 1e-8 by switching to double precision.\n\n\nStick around active range of floating point\n. It's a good idea to read through \n\"What Every Computer Scientist Should Know About Floating-Point Arithmetic\"\n, as it may demystify your errors and enable you to write more careful code. For example, in neural nets it can be common to normalize the loss function over the batch. However, if your gradients per datapoint are very small, then \nadditionally\n dividing them by the number of data points is starting to give very small numbers, which in turn will lead to more numerical issues. This is why I like to always print the raw numerical/analytic gradient, and make sure that the numbers you are comparing are not extremely small (e.g. roughly 1e-10 and smaller in absolute value is worrying). If they are you may want to temporarily scale your loss function up by a constant to bring them to a \"nicer\" range where floats are more dense - ideally on the order of 1.0, where your float exponent is 0.\n\n\nKinks in the objective\n. One source of inaccuracy to be aware of during gradient checking is the problem of \nkinks\n. Kinks refer to non-differentiable parts of an objective function, introduced by functions such as ReLU (\nmax(0,x)\nmax(0,x)\n), or the SVM loss, Maxout neurons, etc. Consider gradient checking the ReLU function at \nx = -1e6\nx = -1e6\n. Since \nx \n 0\nx < 0\n, the analytic gradient at this point is exactly zero. However, the numerical gradient would suddenly compute a non-zero gradient because \nf(x+h)\nf(x+h)\n might cross over the kink (e.g. if \nh \n 1e-6\nh > 1e-6\n) and introduce a non-zero contribution. You might think that this is a pathological case, but in fact this case can be very common. For example, an SVM for CIFAR-10 contains up to 450,000 \nmax(0,x)\nmax(0,x)\n terms because there are 50,000 examples and each example yields 9 terms to the objective. Moreover, a Neural Network with an SVM classifier will contain many more kinks due to ReLUs.\n\n\nNote that it is possible to know if a kink was crossed in the evaluation of the loss. This can be done by keeping track of the identities of all \"winners\" in a function of form \nmax(x,y)\nmax(x,y)\n; That is, was x or y higher during the forward pass. If the identity of at least one winner changes when evaluating \nf(x+h)\nf(x+h)\n and then \nf(x-h)\nf(x-h)\n, then a kink was crossed and the numerical gradient will not be exact.\n\n\nUse only few datapoints\n. One fix to the above problem of kinks is to use fewer datapoints, since loss functions that contain kinks (e.g. due to use of ReLUs or margin losses etc.) will have fewer kinks with fewer datapoints, so it is less likely for you to cross one when you perform the finite different approximation. Moreover, if your gradcheck for only ~2 or 3 datapoints then you would almost certainly gradcheck for an entire batch. Using very few datapoints also makes your gradient check faster and more efficient.\n\n\nBe careful with the step size h\n. It is not necessarily the case that smaller is better, because when \nh\nh\n is much smaller, you may start running into numerical precision problems. Sometimes when the gradient doesn't check, it is possible that you change \nh\nh\n to be 1e-4 or 1e-6 and suddenly the gradient will be correct. This \nwikipedia article\n contains a chart that plots the value of \nh\n on the x-axis and the numerical gradient error on the y-axis.\n\n\nGradcheck during a \"characteristic\" mode of operation\n. It is important to realize that a gradient check is performed at a particular (and usually random), single point in the space of parameters. Even if the gradient check succeeds at that point, it is not immediately certain that the gradient is correctly implemented globally. Additionally, a random initialization might not be the most \"characteristic\" point in the space of parameters and may in fact introduce pathological situations where the gradient seems to be correctly implemented but isn't. For instance, an SVM with very small weight initialization will assign almost exactly zero scores to all datapoints and the gradients will exhibit a particular pattern across all datapoints. An incorrect implementation of the gradient could still produce this pattern and not generalize to a more characteristic mode of operation where some scores are larger than others. Therefore, to be safe it is best to use a short \nburn-in\n time during which the network is allowed to learn and perform the gradient check after the loss starts to go down. The danger of performing it at the first iteration is that this could introduce pathological edge cases and mask an incorrect implementation of the gradient.\n\n\nDon't let the regularization overwhelm the data\n. It is often the case that a loss function is a sum of the data loss and the regularization loss (e.g. L2 penalty on weights). One danger to be aware of is that the regularization loss may overwhelm the data loss, in which case the gradients will be primarily coming from the regularization term (which usually has a much simpler gradient expression). This can mask an incorrect implementation of the data loss gradient. Therefore, it is recommended to turn off regularization and check the data loss alone first, and then the regularization term second and independently. One way to perform the latter is to hack the code to remove the data loss contribution. Another way is to increase the regularization strength so as to ensure that its effect is non-negligible in the gradient check, and that an incorrect implementation would be spotted.\n\n\nRemember to turn off dropout/augmentations\n. When performing gradient check, remember to turn off any non-deterministic effects in the network, such as dropout, random data augmentations, etc. Otherwise these can clearly introduce huge errors when estimating the numerical gradient. The downside of turning off these effects is that you wouldn't be gradient checking them (e.g. it might be that dropout isn't backpropagated correctly). Therefore, a better solution might be to force a particular random seed before evaluating both \nf(x+h)\nf(x+h)\n and \nf(x-h)\nf(x-h)\n, and when evaluating the analytic gradient.\n\n\nCheck only few dimensions\n. In practice the gradients can have sizes of million parameters. In these cases it is only practical to check some of the dimensions of the gradient and assume that the others are correct. \nBe careful\n: One issue to be careful with is to make sure to gradient check a few dimensions for every separate parameter. In some applications, people combine the parameters into a single large parameter vector for convenience. In these cases, for example, the biases could only take up a tiny number of parameters from the whole vector, so it is important to not sample at random but to take this into account and check that all parameters receive the correct gradients.\n\n\n\n\nBefore learning: sanity checks Tips/Tricks\n\n\nHere are a few sanity checks you might consider running before you plunge into expensive optimization:\n\n\n\n\nLook for correct loss at chance performance.\n Make sure you're getting the loss you expect when you initialize with small parameters. It's best to first check the data loss alone (so set regularization strength to zero). For example, for CIFAR-10 with a Softmax classifier we would expect the initial loss to be 2.302, because we expect a diffuse probability of 0.1 for each class (since there are 10 classes), and Softmax loss is the negative log probability of the correct class so: -ln(0.1) = 2.302. For The Weston Watkins SVM, we expect all desired margins to be violated (since all scores are approximately zero), and hence expect a loss of 9 (since margin is 1 for each wrong class). If you're not seeing these losses there might be issue with initialization.\n\n\nAs a second sanity check, increasing the regularization strength should increase the loss\n\n\nOverfit a tiny subset of data\n. Lastly and most importantly, before training on the full dataset try to train on a tiny portion (e.g. 20 examples) of your data and make sure you can achieve zero cost. For this experiment it's also best to set regularization to zero, otherwise this can prevent you from getting zero cost. Unless you pass this sanity check with a small dataset it is not worth proceeding to the full dataset. Note that it may happen that you can overfit very small dataset but still have an incorrect implementation. For instance, if your datapoints' features are random due to some bug, then it will be possible to overfit your small training set but you will never notice any generalization when you fold it your full dataset.\n\n\n\n\n\n\nBabysitting the learning process\n\n\nThere are multiple useful quantities you should monitor during training of a neural network. These plots are the window into the training process and should be utilized to get intuitions about different hyperparameter settings and how they should be changed for more efficient learning. \n\n\nThe x-axis of the plots below are always in units of epochs, which measure how many times every example has been seen during training in expectation (e.g. one epoch means that every example has been seen once). It is preferable to track epochs rather than iterations since the number of iterations depends on the arbitrary setting of batch size.\n\n\n\n\nLoss function\n\n\nThe first quantity that is useful to track during training is the loss, as it is evaluated on the individual batches during the forward pass. Below is a cartoon diagram showing the loss over time, and especially what the shape might tell you about the learning rate:\n\n\n\n  \n\n  \n\n  \n\n    \nLeft:\n A cartoon depicting the effects of different learning rates. With low learning rates the improvements will be linear. With high learning rates they will start to look more exponential. Higher learning rates will decay the loss faster, but they get stuck at worse values of loss (green line). This is because there is too much \"energy\" in the optimization and the parameters are bouncing around chaotically, unable to settle in a nice spot in the optimization landscape. \nRight:\n An example of a typical loss function over time, while training a small network on CIFAR-10 dataset. This loss function looks reasonable (it might indicate a slightly too small learning rate based on its speed of decay, but it's hard to say), and also indicates that the batch size might be a little too low (since the cost is a little too noisy).\n  \n\n\n\n\n\nThe amount of \"wiggle\" in the loss is related to the batch size. When the batch size is 1, the wiggle will be relatively high. When the batch size is the full dataset, the wiggle will be minimal because every gradient update should be improving the loss function monotonically (unless the learning rate is set too high).\n\n\nSome people prefer to plot their loss functions in the log domain. Since learning progress generally takes an exponential form shape, the plot appears as a slightly more interpretable straight line, rather than a hockey stick. Additionally, if multiple cross-validated models are plotted on the same loss graph, the differences between them become more apparent.\n\n\nSometimes loss functions can look funny \nlossfunctions.tumblr.com\n.\n\n\n\n\nTrain/Val accuracy\n\n\nThe second important quantity to track while training a classifier is the validation/training accuracy. This plot can give you valuable insights into the amount of overfitting in your model:\n\n\n\n  \n\n  \n\n    The gap between the training and validation accuracy indicates the amount of overfitting. Two possible cases are shown in the diagram on the left. The blue validation error curve shows very small validation accuracy compared to the training accuracy, indicating strong overfitting (note, it's possible for the validation accuracy to even start to go down after some point). When you see this in practice you probably want to increase regularization (stronger L2 weight penalty, more dropout, etc.) or collect more data. The other possible case is when the validation accuracy tracks the training accuracy fairly well. This case indicates that your model capacity is not high enough: make the model larger by increasing the number of parameters.\n  \n\n  \n\n\n\n\n\n\n\nRatio of weights:updates\n\n\nThe last quantity you might want to track is the ratio of the update magnitudes to the value magnitudes. Note: \nupdates\n, not the raw gradients (e.g. in vanilla sgd this would be the gradient multiplied by the learning rate). You might want to evaluate and track this ratio for every set of parameters independently. A rough heuristic is that this ratio should be somewhere around 1e-3. If it is lower than this then the learning rate might be too low. If it is higher then the learning rate is likely too high. Here is a specific example:\n\n\n# assume parameter vector W and its gradient vector dW\n\n\nparam_scale\n \n=\n \nnp\n.\nlinalg\n.\nnorm\n(\nW\n.\nravel\n())\n\n\nupdate\n \n=\n \n-\nlearning_rate\n*\ndW\n \n# simple SGD update\n\n\nupdate_scale\n \n=\n \nnp\n.\nlinalg\n.\nnorm\n(\nupdate\n.\nravel\n())\n\n\nW\n \n+=\n \nupdate\n \n# the actual update\n\n\nprint\n \nupdate_scale\n \n/\n \nparam_scale\n \n# want ~1e-3\n\n\n\n\n\nInstead of tracking the min or the max, some people prefer to compute and track the norm of the gradients and their updates instead. These metrics are usually correlated and often give approximately the same results.\n\n\n\n\nActivation / Gradient distributions per layer\n\n\nAn incorrect initialization can slow down or even completely stall the learning process. Luckily, this issue can be diagnosed relatively easily. One way to do so is to plot activation/gradient histograms for all layers of the network. Intuitively, it is not a good sign to see any strange distributions - e.g. with tanh neurons we would like to see a distribution of neuron activations between the full range of [-1,1], instead of seeing all neurons outputting zero, or all neurons being completely saturated at either -1 or 1.\n\n\n\nFirst-layer Visualizations\n\n\nLastly, when one is working with image pixels it can be helpful and satisfying to plot the first-layer features visually:\n\n\n\n  \n\n  \n\n  \n\n    Examples of visualized weights for the first layer of a neural network. \nLeft\n: Noisy features indicate could be a symptom: Unconverged network, improperly set learning rate, very low weight regularization penalty. \nRight:\n Nice, smooth, clean and diverse features are a good indication that the training is proceeding well.\n  \n\n\n\n\n\n\n\nParameter updates\n\n\nOnce the analytic gradient is computed with backpropagation, the gradients are used to perform a parameter update. There are several approaches for performing the update, which we discuss next.\n\n\nWe note that optimization for deep networks is currently a very active area of research. In this section we highlight some established and common techniques you may see in practice, briefly describe their intuition, but leave a detailed analysis outside of the scope of the class. We provide some further pointers for an interested reader.\n\n\n\n\nGD and bells and whistles\n\n\nVanilla update\n. The simplest form of update is to change the parameters along the negative gradient direction (since the gradient indicates the direction of increase, but we usually wish to minimize a loss function). Assuming a vector of parameters \nx\n and the gradient \ndx\n, the simplest update has the form:", 
            "title": "test"
        }, 
        {
            "location": "/\u65e5\u5e38/test/testtest/#learning", 
            "text": "In the previous sections we've discussed the static parts of a Neural Networks: how we can set up the network connectivity, the data, and the loss function. This section is devoted to the dynamics, or in other words, the process of learning the parameters and finding good hyperparameters.", 
            "title": "Learning"
        }, 
        {
            "location": "/\u65e5\u5e38/test/testtest/#gradient-checks", 
            "text": "In theory, performing a gradient check is as simple as comparing the analytic gradient to the numerical gradient. In practice, the process is much more involved and error prone. Here are some tips, tricks, and issues to watch out for:  Use the centered formula . The formula you may have seen for the finite difference approximation when evaluating the numerical gradient looks as follows:   \n\\frac{df(x)}{dx} = \\frac{f(x + h) - f(x)}{h} \\hspace{0.1in} \\text{(bad, do not use)}  \n\\frac{df(x)}{dx} = \\frac{f(x + h) - f(x)}{h} \\hspace{0.1in} \\text{(bad, do not use)}   where  h h  is a very small number, in practice approximately 1e-5 or so. In practice, it turns out that it is much better to use the  centered  difference formula of the form:   \n\\frac{df(x)}{dx} = \\frac{f(x + h) - f(x - h)}{2h} \\hspace{0.1in} \\text{(use instead)}  \n\\frac{df(x)}{dx} = \\frac{f(x + h) - f(x - h)}{2h} \\hspace{0.1in} \\text{(use instead)}   This requires you to evaluate the loss function twice to check every single dimension of the gradient (so it is about 2 times as expensive), but the gradient approximation turns out to be much more precise. To see this, you can use Taylor expansion of  f(x+h) f(x+h)  and  f(x-h) f(x-h)  and verify that the first formula has an error on order of  O(h) O(h) , while the second formula only has error terms on order of  O(h^2) O(h^2)  (i.e. it is a second order approximation).  Use relative error for the comparison . What are the details of comparing the numerical gradient  f'_n f'_n  and analytic gradient  f'_a f'_a ? That is, how do we know if the two are not compatible? You might be temped to keep track of the difference $\\mid f'_a - f'_n \\mid $ or its square and define the gradient check as failed if that difference is above a threshold. However, this is problematic. For example, consider the case where their difference is 1e-4. This seems like a very appropriate difference if the two gradients are about 1.0, so we'd consider the two gradients to match. But if the gradients were both on order of 1e-5 or lower, then we'd consider 1e-4 to be a huge difference and likely a failure. Hence, it is always more appropriate to consider the  relative error :   \n\\frac{\\mid f'_a - f'_n \\mid}{\\max(\\mid f'_a \\mid, \\mid f'_n \\mid)}  \n\\frac{\\mid f'_a - f'_n \\mid}{\\max(\\mid f'_a \\mid, \\mid f'_n \\mid)}   which considers their ratio of the differences to the ratio of the absolute values of both gradients. Notice that normally the relative error formula only includes one of the two terms (either one), but I prefer to max (or add) both to make it symmetric and to prevent dividing by zero in the case where one of the two is zero (which can often happen, especially with ReLUs). However, one must explicitly keep track of the case where both are zero and pass the gradient check in that edge case. In practice:   relative error   1e-2 usually means the gradient is probably wrong  1e-2   relative error   1e-4 should make you feel uncomfortable  1e-4   relative error is usually okay for objectives with kinks. But if there are no kinks (e.g. use of tanh nonlinearities and softmax), then 1e-4 is too high.  1e-7 and less you should be happy.   Also keep in mind that the deeper the network, the higher the relative errors will be. So if you are gradient checking the input data for a 10-layer network, a relative error of 1e-2 might be okay because the errors build up on the way. Conversely, an error of 1e-2 for a single differentiable function likely indicates incorrect gradient.  Use double precision . A common pitfall is using single precision floating point to compute gradient check. It is often that case that you might get high relative errors (as high as 1e-2) even with a correct gradient implementation. In my experience I've sometimes seen my relative errors plummet from 1e-2 to 1e-8 by switching to double precision.  Stick around active range of floating point . It's a good idea to read through  \"What Every Computer Scientist Should Know About Floating-Point Arithmetic\" , as it may demystify your errors and enable you to write more careful code. For example, in neural nets it can be common to normalize the loss function over the batch. However, if your gradients per datapoint are very small, then  additionally  dividing them by the number of data points is starting to give very small numbers, which in turn will lead to more numerical issues. This is why I like to always print the raw numerical/analytic gradient, and make sure that the numbers you are comparing are not extremely small (e.g. roughly 1e-10 and smaller in absolute value is worrying). If they are you may want to temporarily scale your loss function up by a constant to bring them to a \"nicer\" range where floats are more dense - ideally on the order of 1.0, where your float exponent is 0.  Kinks in the objective . One source of inaccuracy to be aware of during gradient checking is the problem of  kinks . Kinks refer to non-differentiable parts of an objective function, introduced by functions such as ReLU ( max(0,x) max(0,x) ), or the SVM loss, Maxout neurons, etc. Consider gradient checking the ReLU function at  x = -1e6 x = -1e6 . Since  x   0 x < 0 , the analytic gradient at this point is exactly zero. However, the numerical gradient would suddenly compute a non-zero gradient because  f(x+h) f(x+h)  might cross over the kink (e.g. if  h   1e-6 h > 1e-6 ) and introduce a non-zero contribution. You might think that this is a pathological case, but in fact this case can be very common. For example, an SVM for CIFAR-10 contains up to 450,000  max(0,x) max(0,x)  terms because there are 50,000 examples and each example yields 9 terms to the objective. Moreover, a Neural Network with an SVM classifier will contain many more kinks due to ReLUs.  Note that it is possible to know if a kink was crossed in the evaluation of the loss. This can be done by keeping track of the identities of all \"winners\" in a function of form  max(x,y) max(x,y) ; That is, was x or y higher during the forward pass. If the identity of at least one winner changes when evaluating  f(x+h) f(x+h)  and then  f(x-h) f(x-h) , then a kink was crossed and the numerical gradient will not be exact.  Use only few datapoints . One fix to the above problem of kinks is to use fewer datapoints, since loss functions that contain kinks (e.g. due to use of ReLUs or margin losses etc.) will have fewer kinks with fewer datapoints, so it is less likely for you to cross one when you perform the finite different approximation. Moreover, if your gradcheck for only ~2 or 3 datapoints then you would almost certainly gradcheck for an entire batch. Using very few datapoints also makes your gradient check faster and more efficient.  Be careful with the step size h . It is not necessarily the case that smaller is better, because when  h h  is much smaller, you may start running into numerical precision problems. Sometimes when the gradient doesn't check, it is possible that you change  h h  to be 1e-4 or 1e-6 and suddenly the gradient will be correct. This  wikipedia article  contains a chart that plots the value of  h  on the x-axis and the numerical gradient error on the y-axis.  Gradcheck during a \"characteristic\" mode of operation . It is important to realize that a gradient check is performed at a particular (and usually random), single point in the space of parameters. Even if the gradient check succeeds at that point, it is not immediately certain that the gradient is correctly implemented globally. Additionally, a random initialization might not be the most \"characteristic\" point in the space of parameters and may in fact introduce pathological situations where the gradient seems to be correctly implemented but isn't. For instance, an SVM with very small weight initialization will assign almost exactly zero scores to all datapoints and the gradients will exhibit a particular pattern across all datapoints. An incorrect implementation of the gradient could still produce this pattern and not generalize to a more characteristic mode of operation where some scores are larger than others. Therefore, to be safe it is best to use a short  burn-in  time during which the network is allowed to learn and perform the gradient check after the loss starts to go down. The danger of performing it at the first iteration is that this could introduce pathological edge cases and mask an incorrect implementation of the gradient.  Don't let the regularization overwhelm the data . It is often the case that a loss function is a sum of the data loss and the regularization loss (e.g. L2 penalty on weights). One danger to be aware of is that the regularization loss may overwhelm the data loss, in which case the gradients will be primarily coming from the regularization term (which usually has a much simpler gradient expression). This can mask an incorrect implementation of the data loss gradient. Therefore, it is recommended to turn off regularization and check the data loss alone first, and then the regularization term second and independently. One way to perform the latter is to hack the code to remove the data loss contribution. Another way is to increase the regularization strength so as to ensure that its effect is non-negligible in the gradient check, and that an incorrect implementation would be spotted.  Remember to turn off dropout/augmentations . When performing gradient check, remember to turn off any non-deterministic effects in the network, such as dropout, random data augmentations, etc. Otherwise these can clearly introduce huge errors when estimating the numerical gradient. The downside of turning off these effects is that you wouldn't be gradient checking them (e.g. it might be that dropout isn't backpropagated correctly). Therefore, a better solution might be to force a particular random seed before evaluating both  f(x+h) f(x+h)  and  f(x-h) f(x-h) , and when evaluating the analytic gradient.  Check only few dimensions . In practice the gradients can have sizes of million parameters. In these cases it is only practical to check some of the dimensions of the gradient and assume that the others are correct.  Be careful : One issue to be careful with is to make sure to gradient check a few dimensions for every separate parameter. In some applications, people combine the parameters into a single large parameter vector for convenience. In these cases, for example, the biases could only take up a tiny number of parameters from the whole vector, so it is important to not sample at random but to take this into account and check that all parameters receive the correct gradients.", 
            "title": "Gradient Checks"
        }, 
        {
            "location": "/\u65e5\u5e38/test/testtest/#before-learning-sanity-checks-tipstricks", 
            "text": "Here are a few sanity checks you might consider running before you plunge into expensive optimization:   Look for correct loss at chance performance.  Make sure you're getting the loss you expect when you initialize with small parameters. It's best to first check the data loss alone (so set regularization strength to zero). For example, for CIFAR-10 with a Softmax classifier we would expect the initial loss to be 2.302, because we expect a diffuse probability of 0.1 for each class (since there are 10 classes), and Softmax loss is the negative log probability of the correct class so: -ln(0.1) = 2.302. For The Weston Watkins SVM, we expect all desired margins to be violated (since all scores are approximately zero), and hence expect a loss of 9 (since margin is 1 for each wrong class). If you're not seeing these losses there might be issue with initialization.  As a second sanity check, increasing the regularization strength should increase the loss  Overfit a tiny subset of data . Lastly and most importantly, before training on the full dataset try to train on a tiny portion (e.g. 20 examples) of your data and make sure you can achieve zero cost. For this experiment it's also best to set regularization to zero, otherwise this can prevent you from getting zero cost. Unless you pass this sanity check with a small dataset it is not worth proceeding to the full dataset. Note that it may happen that you can overfit very small dataset but still have an incorrect implementation. For instance, if your datapoints' features are random due to some bug, then it will be possible to overfit your small training set but you will never notice any generalization when you fold it your full dataset.", 
            "title": "Before learning: sanity checks Tips/Tricks"
        }, 
        {
            "location": "/\u65e5\u5e38/test/testtest/#babysitting-the-learning-process", 
            "text": "There are multiple useful quantities you should monitor during training of a neural network. These plots are the window into the training process and should be utilized to get intuitions about different hyperparameter settings and how they should be changed for more efficient learning.   The x-axis of the plots below are always in units of epochs, which measure how many times every example has been seen during training in expectation (e.g. one epoch means that every example has been seen once). It is preferable to track epochs rather than iterations since the number of iterations depends on the arbitrary setting of batch size.", 
            "title": "Babysitting the learning process"
        }, 
        {
            "location": "/\u65e5\u5e38/test/testtest/#loss-function", 
            "text": "The first quantity that is useful to track during training is the loss, as it is evaluated on the individual batches during the forward pass. Below is a cartoon diagram showing the loss over time, and especially what the shape might tell you about the learning rate:  \n   \n   \n   \n     Left:  A cartoon depicting the effects of different learning rates. With low learning rates the improvements will be linear. With high learning rates they will start to look more exponential. Higher learning rates will decay the loss faster, but they get stuck at worse values of loss (green line). This is because there is too much \"energy\" in the optimization and the parameters are bouncing around chaotically, unable to settle in a nice spot in the optimization landscape.  Right:  An example of a typical loss function over time, while training a small network on CIFAR-10 dataset. This loss function looks reasonable (it might indicate a slightly too small learning rate based on its speed of decay, but it's hard to say), and also indicates that the batch size might be a little too low (since the cost is a little too noisy).\n     The amount of \"wiggle\" in the loss is related to the batch size. When the batch size is 1, the wiggle will be relatively high. When the batch size is the full dataset, the wiggle will be minimal because every gradient update should be improving the loss function monotonically (unless the learning rate is set too high).  Some people prefer to plot their loss functions in the log domain. Since learning progress generally takes an exponential form shape, the plot appears as a slightly more interpretable straight line, rather than a hockey stick. Additionally, if multiple cross-validated models are plotted on the same loss graph, the differences between them become more apparent.  Sometimes loss functions can look funny  lossfunctions.tumblr.com .", 
            "title": "Loss function"
        }, 
        {
            "location": "/\u65e5\u5e38/test/testtest/#trainval-accuracy", 
            "text": "The second important quantity to track while training a classifier is the validation/training accuracy. This plot can give you valuable insights into the amount of overfitting in your model:  \n   \n   \n    The gap between the training and validation accuracy indicates the amount of overfitting. Two possible cases are shown in the diagram on the left. The blue validation error curve shows very small validation accuracy compared to the training accuracy, indicating strong overfitting (note, it's possible for the validation accuracy to even start to go down after some point). When you see this in practice you probably want to increase regularization (stronger L2 weight penalty, more dropout, etc.) or collect more data. The other possible case is when the validation accuracy tracks the training accuracy fairly well. This case indicates that your model capacity is not high enough: make the model larger by increasing the number of parameters.", 
            "title": "Train/Val accuracy"
        }, 
        {
            "location": "/\u65e5\u5e38/test/testtest/#ratio-of-weightsupdates", 
            "text": "The last quantity you might want to track is the ratio of the update magnitudes to the value magnitudes. Note:  updates , not the raw gradients (e.g. in vanilla sgd this would be the gradient multiplied by the learning rate). You might want to evaluate and track this ratio for every set of parameters independently. A rough heuristic is that this ratio should be somewhere around 1e-3. If it is lower than this then the learning rate might be too low. If it is higher then the learning rate is likely too high. Here is a specific example:  # assume parameter vector W and its gradient vector dW  param_scale   =   np . linalg . norm ( W . ravel ())  update   =   - learning_rate * dW   # simple SGD update  update_scale   =   np . linalg . norm ( update . ravel ())  W   +=   update   # the actual update  print   update_scale   /   param_scale   # want ~1e-3   Instead of tracking the min or the max, some people prefer to compute and track the norm of the gradients and their updates instead. These metrics are usually correlated and often give approximately the same results.", 
            "title": "Ratio of weights:updates"
        }, 
        {
            "location": "/\u65e5\u5e38/test/testtest/#activation-gradient-distributions-per-layer", 
            "text": "An incorrect initialization can slow down or even completely stall the learning process. Luckily, this issue can be diagnosed relatively easily. One way to do so is to plot activation/gradient histograms for all layers of the network. Intuitively, it is not a good sign to see any strange distributions - e.g. with tanh neurons we would like to see a distribution of neuron activations between the full range of [-1,1], instead of seeing all neurons outputting zero, or all neurons being completely saturated at either -1 or 1.", 
            "title": "Activation / Gradient distributions per layer"
        }, 
        {
            "location": "/\u65e5\u5e38/test/testtest/#first-layer-visualizations", 
            "text": "Lastly, when one is working with image pixels it can be helpful and satisfying to plot the first-layer features visually:  \n   \n   \n   \n    Examples of visualized weights for the first layer of a neural network.  Left : Noisy features indicate could be a symptom: Unconverged network, improperly set learning rate, very low weight regularization penalty.  Right:  Nice, smooth, clean and diverse features are a good indication that the training is proceeding well.", 
            "title": "First-layer Visualizations"
        }, 
        {
            "location": "/\u65e5\u5e38/test/testtest/#parameter-updates", 
            "text": "Once the analytic gradient is computed with backpropagation, the gradients are used to perform a parameter update. There are several approaches for performing the update, which we discuss next.  We note that optimization for deep networks is currently a very active area of research. In this section we highlight some established and common techniques you may see in practice, briefly describe their intuition, but leave a detailed analysis outside of the scope of the class. We provide some further pointers for an interested reader.   GD and bells and whistles  Vanilla update . The simplest form of update is to change the parameters along the negative gradient direction (since the gradient indicates the direction of increase, but we usually wish to minimize a loss function). Assuming a vector of parameters  x  and the gradient  dx , the simplest update has the form:", 
            "title": "Parameter updates"
        }, 
        {
            "location": "/\u65e5\u5e38/\u5e38\u7528/latex\u8bed\u6cd5/", 
            "text": "\u51fd\u6570\u3001\u7b26\u53f7\u53ca\u7279\u6b8a\u5b57\u7b26\n\n\n\u58f0\u8c03\n\n\n\n\n\n\n\n\n\u8bed\u6cd5\n\n\n\u6548\u679c\n\n\n\u8bed\u6cd5\n\n\n\u6548\u679c\n\n\n\n\n\n\n\n\n\n\n\\bar{x}\n\n\n\\bar{x}\n\\bar{x}\n\n\n\\acute{\\eta}\n\n\n\\acute{\\eta}\n\\acute{\\eta}\n\n\n\n\n\n\n\\check{\\alpha}\n\n\n\\check{\\alpha}\n\\check{\\alpha}\n\n\n\\breve{a}\n\n\n$ \\breve{a}$\n\n\n\n\n\n\n\\grave{\\eta}\n\n\n\\grave{\\eta}\n\\grave{\\eta}\n\n\n\\ddot{y}\n\n\n\\ddot{y}\n\\ddot{y}\n\n\n\n\n\n\n\\dot{x}\n\n\n$\\dot{x} $\n\n\n\\hat{\\alpha}\n\n\n\\hat{\\alpha}\n\\hat{\\alpha}\n\n\n\n\n\n\n\\tilde{\\iota}\n\n\n\\tilde{\\iota}\n\\tilde{\\iota}\n\n\n\n\n$$\n\n\n\n\n\n\n\n\n\u51fd\u6570\n\n\n\n\n\n\n\n\n\u8bed\u6cd5\n\n\n\u6548\u679c\n\n\n\u8bed\u6cd5\n\n\n\u6548\u679c\n\n\n\u8bed\u6cd5\n\n\n\u6548\u679c\n\n\n\n\n\n\n\n\n\n\n\\sin\\theta\n\n\n\\sin\\theta\n\\sin\\theta\n\n\n\\cos\\theta\n\n\n\\cos\\theta\n\\cos\\theta\n\n\n\\tan\\theta\n\n\n\\tan\\theta\n\\tan\\theta\n\n\n\n\n\n\n\\arcsin\\frac{L}{r}\n\n\n\\arcsin\\frac{L}{r}\n\\arcsin\\frac{L}{r}\n\n\n\\arccos\\frac{T}{r}\n\n\n\\arccos\\frac{T}{r}\n\\arccos\\frac{T}{r}\n\n\n\\arctan\\frac{L}{T}\n\n\n\\arctan\\frac{L}{T}\n\\arctan\\frac{L}{T}\n\n\n\n\n\n\n\\sinh g\n\n\n\\sinh g\n\\sinh g\n\n\n\\cosh h\n\n\n\\cosh h\n\\cosh h\n\n\n\\tanh i\n\n\n\\tanh i\n\\tanh i\n\n\n\n\n\n\n\\operatorname{sh}j\n\n\n\\operatorname{sh}j\n\\operatorname{sh}j\n\n\n\\operatorname{argsh}k\n\n\n\\operatorname{argsh}k\n\\operatorname{argsh}k\n\n\n\n\n\n\n\n\n\n\n\\operatorname{ch}h\n\n\n\\operatorname{ch}h\n\\operatorname{ch}h\n\n\n\\operatorname{argch}l\n\n\n\\operatorname{argch}l\n\\operatorname{argch}l\n\n\n\n\n\n\n\n\n\n\n\\operatorname{th}i\n\n\n\\operatorname{th}i\n\\operatorname{th}i\n\n\n\\operatorname{argth}m\n\n\n\\operatorname{argth}m\n\\operatorname{argth}m\n\n\n\n\n\n\n\n\n\n\n\\limsup S\n\n\n\\limsup S\n\\limsup S\n\n\n\\liminf I\n\n\n\\liminf I\n\\liminf I\n\n\n\\lim_{t\\to n}T\n\n\n\\lim_{t\\to n}T\n\\lim_{t\\to n}T\n\n\n\n\n\n\n\\max H\n\n\n\\max H\n\\max H\n\n\n\\min L\n\n\n\\min L\n\\min L\n\n\n\n\n\n\n\n\n\n\n\\inf s\n\n\n\\inf s\n\\inf s\n\n\n\\sup t\n\n\n\\sup t\n\\sup t\n\n\n\n\n\n\n\n\n\n\n\\exp!t\n\n\n\\exp\\!t\n\\exp\\!t\n\n\n\\ln!X\n\n\n\\ln\\!X\n\\ln\\!X\n\n\n\n\n\n\n\n\n\n\n\\lg X\n\n\n\\lg X\n\\lg X\n\n\n\\log X\n\n\n\\log X\n\\log X\n\n\n\\log_\\alpha X\n\n\n\\log_\\alpha X\n\\log_\\alpha X\n\n\n\n\n\n\n\\ker x\n\n\n\\ker x\n\\ker x\n\n\n\\deg x\n\n\n\\deg x\n\\deg x\n\n\n\\gcd(T,U,V,W,X)\n\n\n\\gcd(T,U,V,W,X)\n\\gcd(T,U,V,W,X)\n\n\n\n\n\n\n\\Pr x\n\n\n\\Pr x\n\\Pr x\n\n\n\\det x\n\n\n\\det x\n\\det x\n\n\n\\hom x\n\n\n\\hom x\n\\hom x\n\n\n\n\n\n\n\\arg x\n\n\n\\arg x\n\\arg x\n\n\n\\dim x\n\n\n\\dim x\n\\dim x\n\n\n\n\n\n\n\n\n\n\n\n\n\u5b9e\u4f8b\n\n\n\n\n\n\n\n\n\u8bed\u6cd5\n\n\n\u6548\u679c\n\n\n\n\n\n\n\n\n\n\nk'(x)=\\lim_{\\Delta x\\to 0}\\frac{k(x)-k(x-\\Delta x)}{\\Delta x}\n\n\nk'(x)=\\lim_{\\Delta x\\to 0}\\frac{k(x)-k(x-\\Delta x)}{\\Delta x}\nk'(x)=\\lim_{\\Delta x\\to 0}\\frac{k(x)-k(x-\\Delta x)}{\\Delta x}\n\n\n\n\n\n\n\n\n\u540c\u4f59\n\n\n\n\n\n\n\n\n\u8bed\u6cd5\n\n\n\u6548\u679c\n\n\n\u8bed\u6cd5\n\n\n\u6548\u679c\n\n\n\n\n\n\n\n\n\n\n\\pmod{m}\n\n\n\\pmod{m}\n\\pmod{m}\n\n\na \\bmod b\n\n\na \\bmod b\na \\bmod b\n\n\n\n\n\n\n\n\n\u5fae\u5206\n\n\n\n\n\n\n\n\n\u8bed\u6cd5\n\n\n\u6548\u679c\n\n\n\u8bed\u6cd5\n\n\n\u6548\u679c\n\n\n\u8bed\u6cd5\n\n\n\u6548\u679c\n\n\n\n\n\n\n\n\n\n\n\\nabla\n\n\n\\nabla\n\\nabla\n\n\n\\partial x\n\n\n\\partial x\n\\partial x\n\n\n\\mathrm{d}x\\\n\n\n\\mathrm{d}x\n\\mathrm{d}x\n\n\n\n\n\n\n\\dot x\n\n\n\\dot x\n\\dot x\n\n\n\\ddot y\n\n\n\\ddot y\n\\ddot y\n\n\n\\dddot z\n\n\n\\dddot z\n\\dddot z\n\n\n\n\n\n\n\n\n\u96c6\u5408\n\n\n\n\n\n\n\n\n\u8bed\u6cd5\n\n\n\u6548\u679c\n\n\n\u8bed\u6cd5\n\n\n\u6548\u679c\n\n\n\u8bed\u6cd5\n\n\n\u6548\u679c\n\n\n\n\n\n\n\n\n\n\n\\forall\n\n\n\\forall\n\\forall\n\n\n\\exists\n\n\n\\exists\n\\exists\n\n\n\n\n\n\n\n\n\n\n\\emptyset\n\n\n\\emptyset\n\\emptyset\n\n\n\\varnothing\n\n\n\\varnothing\n\\varnothing\n\n\n\n\n\n\n\n\n\n\n\\in\n\n\n\\in\n\\in\n\n\n\\not\\in\n\n\n\\not\\in\n\\not\\in\n\n\n\\notin\n\n\n\\notin\n\\notin\n\n\n\n\n\n\n\\subset\n\n\n\\subset\n\\subset\n\n\n\\subseteq\n\n\n\\subseteq\n\\subseteq\n\n\n\n\n\n\n\n\n\n\n\\supset\n\n\n\\supset\n\\supset\n\n\n\\supseteq\n\n\n\\supseteq\n\\supseteq\n\n\n\n\n\n\n\n\n\n\n\\cap\n\n\n\\cap\n\\cap\n\n\n\\bigcap\n\n\n\\bigcap\n\\bigcap\n\n\n\n\n\n\n\n\n\n\n\\cup\n\n\n\\cup\n\\cup\n\n\n\\bigcup\n\n\n\\bigcup\n\\bigcup\n\n\n\n\n\n\n\n\n\n\n\\biguplus\n\n\n\\biguplus\n\\biguplus\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\\sqsubset\n\n\n\\sqsubset\n\\sqsubset\n\n\n\\sqsubseteq\n\n\n\\sqsubseteq\n\\sqsubseteq\n\n\n\n\n\n\n\n\n\n\n\\sqsupset\n\n\n\\sqsupset\n\\sqsupset\n\n\n\\sqsupseteq\n\n\n\\sqsupseteq\n\\sqsupseteq\n\n\n\n\n\n\n\n\n\n\n\\sqcup\n\n\n\\sqcup\n\\sqcup\n\n\n\\bigsqcup\n\n\n\\bigsqcup\n\\bigsqcup\n\n\n\n\n\n\n\n\n\n\n\\sqcap\n\n\n\\sqcap\n\\sqcap\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\u903b\u8f91\n\n\n\n\n\n\n\n\n\u8bed\u6cd5\n\n\n\u6548\u679c\n\n\n\u8bed\u6cd5\n\n\n\u6548\u679c\n\n\n\u8bed\u6cd5\n\n\n\u6548\u679c\n\n\n\n\n\n\n\n\n\n\nq\n\n\nq\nq\n\n\n\\bar{q} \\to p\n\n\n\\bar{q} \\to p\n\\bar{q} \\to p\n\n\n\n\n\n\n\n\n\n\n\\land\n\n\n\\land\n\\land\n\n\n\\wedge\n\n\n\\wedge\n\\wedge\n\n\n\\bigwedge\n\n\n\\bigwedge\n\\bigwedge\n\n\n\n\n\n\n\\lor\n\n\n\\lor\n\\lor\n\n\n\\vee\n\n\n\\vee\n\\vee\n\n\n\\bigvee\n\n\n\\bigvee\n\\bigvee\n\n\n\n\n\n\n\\lnot q\n\n\n\\lnot q\n\\lnot q\n\n\n\\neg q\n\n\n\\neg q\n\\neg q\n\n\n\n\n\n\n\n\n\n\n\\setminus\n\n\n\\setminus\n\\setminus\n\n\n\\smallsetminus\n\n\n\\smallsetminus\n\\smallsetminus\n\n\n\n\n\n\n\n\n\n\n\\sqrt{3}\n\n\n\\sqrt{3}\n\\sqrt{3}\n\n\n\\sqrt[n]{3}\n\n\n\\sqrt[n]{3}\n\\sqrt[n]{3}\n\n\n\n\n\n\n\n\n\n\n\n\n\u5173\u7cfb\u7b26\u53f7\n\n\n\n\n\n\n\n\n\u8bed\u6cd5\n\n\n\u6548\u679c\n\n\n\u8bed\u6cd5\n\n\n\u6548\u679c\n\n\n\u8bed\u6cd5\n\n\n\u6548\u679c\n\n\n\n\n\n\n\n\n\n\n\\sim\n\n\n\\sim\n\\sim\n\n\n\\approx\n\n\n\\approx\n\\approx\n\n\n\n\n\n\n\n\n\n\n\\simeq\n\n\n\\simeq\n\\simeq\n\n\n\\cong\n\n\n\\cong\n\\cong\n\n\n\\dot=\n\n\n\\dot=\n\\dot=\n\n\n\n\n\n\n\\lll\n\n\n\\lll\n\\lll\n\n\n\\ll\n\n\n\\ll\n\\ll\n\n\n=\n\n\n=\\,\n=\\,\n\n\n\n\n\n\n\\ggg\n\n\n\\ggg\n\\ggg\n\n\n\\gg\n\n\n\\gg\n\\gg\n\n\n\n\n\n\n\n\n\n\n\\geq\n\n\n\\geq\n\\geq\n\n\n\\geqq\n\n\n\\geqq\n\\geqq\n\n\n\n\n\\,\n>\\,\n\n\n\n\n\n\n\\leq\n\n\n\\leq\n\\leq\n\n\n\\leqq\n\n\n\\leqq\n\\leqq\n\n\n\n\n\\,\n<\\,\n\n\n\n\n\n\n\\equiv\n\n\n\\equiv\n\\equiv\n\n\n\\not\\equiv\n\n\n\\not\\equiv\n\\not\\equiv\n\n\n\\gtrless\n\n\n\\gtrless\n\\gtrless\n\n\n\n\n\n\n\\ne\n\n\n\\ne\n\\ne\n\n\n\\neq\n\n\n\\neq\n\\neq\n\n\n\n\n\n\n\n\n\n\n\\propto\n\n\n\\propto\n\\propto\n\n\n\n\n$$\n\n\n\n\n\n\n\n\n\n\n\\pm\n\n\n\\pm\n\\pm\n\n\n\\mp\n\n\n\\mp\n\\mp\n\n\n\n\n\n\n\n\n\n\n\\because\n\n\n\\because\n\\because\n\n\n\\therefore\n\n\n\\therefore\n\\therefore\n\n\n\n\n\n\n\n\n\n\n\n\n\u5b9e\u4f8b\n\n\n\n\n\n\n\n\n\u8bed\u6cd5\n\n\n\u6548\u679c\n\n\n\n\n\n\n\n\n\n\n\\Delta ABC\\sim\\Delta XYZ\n\n\n\\Delta ABC\\sim\\Delta XYZ\n\\Delta ABC\\sim\\Delta XYZ\n\n\n\n\n\n\n\\sqrt{3}\\approx1.732050808\\ldots\n\n\n\\sqrt{3}\\approx1.732050808\\ldots\n\\sqrt{3}\\approx1.732050808\\ldots\n\n\n\n\n\n\n\\acute{a}\n\n\n\\acute{a}\n\\acute{a}\n\n\n\n\n\n\n\n\n$$\n\n\n\n\n\n\n\n\n\n\n\\begin{align}\n    \\because\\begin{cases}\n        a_1x^2+bx^2+c \\gtrless 0 \\gtrless a_2x^2+bx^2+c\n        \\\\\n        a_1 \n 0 \n a_2\n    \\end{cases}\n\\\\\n    \\therefore\n        \\frac{-b\\pm\\sqrt{b^2-4a_1c}}{2a_1}{}\n        _\\lessgtr^\\gtrless x_\\lessgtr^\\gtrless\n        \\frac{-b\\pm\\sqrt{b^2-4a_2c}}{2a_2}\n\\end{align}\n\n\n\\begin{align}\n    \\because\\begin{cases}\n        a_1x^2+bx^2+c \\gtrless 0 \\gtrless a_2x^2+bx^2+c\n        \\\\\n        a_1 > 0 > a_2\n    \\end{cases}\n\\\\\n    \\therefore\n        \\frac{-b\\pm\\sqrt{b^2-4a_1c}}{2a_1}{}\n        _\\lessgtr^\\gtrless x_\\lessgtr^\\gtrless\n        \\frac{-b\\pm\\sqrt{b^2-4a_2c}}{2a_2}\n\\end{align}\n\n\n\n\n\u56fe\u5f62\n\n\n\n\n\n\n\n\n\u8bed\u6cd5\n\n\n\u8bed\u6cd5\n\n\n\u6548\u679c\n\n\n\n\n\n\n\n\n\n\n\u83f1\u5f62\n\n\n\\Diamond\n\n\n\\Diamond\n\\Diamond\n\n\n\n\n\n\n\u6b63\u65b9\u5f62\n\n\n\\Box\n\n\n\\Box\n\\Box\n\n\n\n\n\n\n\u4e09\u89d2\u5f62\n\n\n\\Delta\n\n\n\\Delta\n\\Delta\n\n\n\n\n\n\n\u56fe\u578b\n\n\n\\triangle\n\n\n\\triangle\n\\triangle\n\n\n\n\n\n\n\u89d2\u540d\n\n\n\\angle\\alpha\\beta\\gamma\n\n\n\\angle\\alpha\\beta \\gamma\n\\angle\\alpha\\beta \\gamma\n\n\n\n\n\n\n\u5782\u76f4\n\n\n\\perp\n\n\n\\perp\n\\perp\n\n\n\n\n\n\n\n\n\u7bad\u5934\n\n\n\n\n\n\n\n\n\u8bed\u6cd5\n\n\n\u6548\u679c\n\n\n\u8bed\u6cd5\n\n\n\u6548\u679c\n\n\n\u8bed\u6cd5\n\n\n\u6548\u679c\n\n\n\n\n\n\n\n\n\n\n\n\n$$\n\n\n\n\n$$\n\n\n\n\n$$\n\n\n\n\n\n\n\n\n$$\n\n\n\n\n$$\n\n\n\n\n$$\n\n\n\n\n\n\n\\leftarrow\n\n\n\\leftarrow\n\\leftarrow\n\n\n\\gets\n\n\n\\gets\n\\gets\n\n\n\\rightarrow\n\n\n\\rightarrow\n\\rightarrow\n\n\n\n\n\n\n\\to\n\n\n\\to\n\\to\n\n\n\\leftrightarrow\n\n\n\\leftrightarrow\n\\leftrightarrow\n\n\n\\longleftarrow\n\n\n\\longleftarrow\n\\longleftarrow\n\n\n\n\n\n\n\\longrightarrow\n\n\n\\longrightarrow\n\\longrightarrow\n\n\n\\mapsto\n\n\n\\mapsto\n\\mapsto\n\n\n\\longmapsto\n\n\n\\longmapsto\n\\longmapsto\n\n\n\n\n\n\n\\hookrightarrow\n\n\n\\hookrightarrow\n\\hookrightarrow\n\n\n\\hookleftarrow\n\n\n\\hookleftarrow\n\\hookleftarrow\n\n\n\\nearrow\n\n\n\\nearrow\n\\nearrow\n\n\n\n\n\n\n\\searrow\n\n\n\\searrow\n\\searrow\n\n\n\\swarrow\n\n\n\\swarrow\n\\swarrow\n\n\n\\nwarrow\n\n\n\\nwarrow\n\\nwarrow\n\n\n\n\n\n\n\\uparrow\n\n\n\\uparrow\n\\uparrow\n\n\n\\downarrow\n\n\n\\downarrow\n\\downarrow\n\n\n\\updownarrow\n\n\n\\updownarrow\n\\updownarrow\n\n\n\n\n\n\n\\rightharpoonup\n\n\n\\rightharpoonup\n\\rightharpoonup\n\n\n\\rightharpoondown\n\n\n\\rightharpoondown\n\\rightharpoondown\n\n\n\n\n\n\n\n\n\n\n\\leftharpoonup\n\n\n\\leftharpoonup\n\\leftharpoonup\n\n\n\\leftharpoondown\n\n\n\\leftharpoondown\n\\leftharpoondown\n\n\n\n\n\n\n\n\n\n\n\\upharpoonleft\n\n\n\\upharpoonleft\n\\upharpoonleft\n\n\n\\upharpoonright\n\n\n\\upharpoonright\n\\upharpoonright\n\n\n\n\n\n\n\n\n\n\n\\downharpoonleft\n\n\n\\downharpoonleft\n\\downharpoonleft\n\n\n\\downharpoonright\n\n\n\\downharpoonright\n\\downharpoonright\n\n\n\n\n\n\n\n\n\n\n\\Leftarrow\n\n\n\\Leftarrow\n\\Leftarrow\n\n\n\\Rightarrow\n\n\n\\Rightarrow\n\\Rightarrow\n\n\n\\Leftrightarrow\n\n\n\\Leftrightarrow\n\\Leftrightarrow\n\n\n\n\n\n\n\\Longleftarrow\n\n\n\\Longleftarrow\n\\Longleftarrow\n\n\n\\Longrightarrow\n\n\n\\Longrightarrow\n\\Longrightarrow\n\n\n\\Longleftrightarrow (or \\iff)\n\n\n\\Longleftrightarrow\n\\Longleftrightarrow\n\n\n\n\n\n\n\\Uparrow\n\n\n\\Uparrow\n\\Uparrow\n\n\n\\Downarrow\n\n\n\\Downarrow\n\\Downarrow\n\n\n\\Updownarrow\n\n\n\\Updownarrow\n\\Updownarrow\n\n\n\n\n\n\n\n\n\u7279\u6b8a\u7b26\u53f7\n\n\n\n\n\n\n\n\n\u8bed\u6cd5\n\n\n\u6548\u679c\n\n\n\u8bed\u6cd5\n\n\n\u6548\u679c\n\n\n\u8bed\u6cd5\n\n\n\u6548\u679c\n\n\n\n\n\n\n\n\n\n\n\\eth\n\n\n\\eth\n\\eth\n\n\n\\S\n\n\n\\S\n\\S\n\n\n\\P\n\n\n\\\\P\n\\\\P\n\n\n\n\n\n\n\\%\n\n\n\\%\n\\%\n\n\n\\dagger\n\n\n\\dagger\n\\dagger\n\n\n\\ddagger\n\n\n\\ddagger\n\\ddagger\n\n\n\n\n\n\n\\star\n\n\n\\star\n\\star\n\n\n*\n\n\n*\n*\n\n\n\\ldots\n\n\n\\ldots\n\\ldots\n\n\n\n\n\n\n\\smile\n\n\n\\smile\n\\smile\n\n\n\\frown\n\n\n\\frown\n\\frown\n\n\n\\wr\n\n\n\\wr\n\\wr\n\n\n\n\n\n\n\\oplus\n\n\n\\oplus\n\\oplus\n\n\n\\bigoplus\n\n\n\\bigoplus\n\\bigoplus\n\n\n\\otimes\n\n\n\\otimes\n\\otimes\n\n\n\n\n\n\n\\bigotimes\n\n\n\\bigotimes\n\\bigotimes\n\n\n\\times\n\n\n\\times\n\\times\n\n\n\\cdot\n\n\n\\cdot\n\\cdot\n\n\n\n\n\n\n\\div\n\n\n\\div\n\\div\n\n\n\\circ\n\n\n\\circ\n\\circ\n\n\n\\bullet\n\n\n\\bullet\n\\bullet\n\n\n\n\n\n\n\\bigodot\n\n\n\\bigodot\n\\bigodot\n\n\n\\boxtimes\n\n\n\\boxtimes\n\\boxtimes\n\n\n\\boxplus\n\n\n\\boxplus\n\\boxplus\n\n\n\n\n\n\n\\triangleleft\n\n\n\\triangleleft\n\\triangleleft\n\n\n\\triangleright\n\n\n\\triangleright\n\\triangleright\n\n\n\\infty\n\n\n\\infty\n\\infty\n\n\n\n\n\n\n\\bot\n\n\n\\bot\n\\bot\n\n\n\\top\n\n\n\\top\n\\top\n\n\n\\vdash\n\n\n\\vdash\n\\vdash\n\n\n\n\n\n\n\\vDash\n\n\n\\vDash\n\\vDash\n\n\n\\Vdash\n\n\n\\Vdash\n\\Vdash\n\n\n\\models\n\n\n\\models\n\\models\n\n\n\n\n\n\n\\lVert\n\n\n\\lVert\n\\lVert\n\n\n\\rVert\n\n\n\\rVert\n\\rVert\n\n\n\n\n\n\n\n\n\n\n\\imath\n\n\n\\imath\n\\imath\n\n\n\\hbar\n\n\n\\hbar\n\\hbar\n\n\n\\ell\n\n\n\\ell\n\\ell\n\n\n\n\n\n\n\\mho\n\n\n\\mho\n\\mho\n\n\n\\Finv\n\n\n\\Finv\n\\Finv\n\n\n\\Re\n\n\n\\Re\n\\Re\n\n\n\n\n\n\n\\Im\n\n\n\\Im\n\\Im\n\n\n\\wp\n\n\n\\wp\n\\wp\n\n\n\\complement\n\n\n\\complement\n\\complement\n\n\n\n\n\n\n\\diamondsuit\n\n\n\\diamondsuit\n\\diamondsuit\n\n\n\\heartsuit\n\n\n\\heartsuit\n\\heartsuit\n\n\n\n\n\n\n\n\n\n\n\\clubsuit\n\n\n\\clubsuit\n\\clubsuit\n\n\n\\spadesuit\n\n\n\\spadesuit\n\\spadesuit\n\n\n\n\n\n\n\n\n\n\n\\Game\n\n\n\\Game\n\\Game\n\n\n\\flat\n\n\n\\flat\n\\flat\n\n\n\\natural\n\n\n\\natural\n\\natural\n\n\n\n\n\n\n\n\n### \u5b9e\u4f8b\n  | \u8bed\u6cd5    | \u6548\u679c    |  \u8bed\u6cd5  |  \u6548\u679c |  \u8bed\u6cd5  |  \u6548\u679c |\n  | :----:  |  :---:  | :----: |  :--: | :----: |  :--: | \n  |  | $$ |  | $$ |  | $$ |\n  |  | $$ |  | $$ |  | $$ |\n  ###\u5b9e\u4f8b2\n  | \u8bed\u6cd5    | \u6548\u679c    | \u8bed\u6cd5    | \u6548\u679c    |\n\n  | :----:  |  :---:  | :--: | :--:|\n  |  | $$ |  | $$ |  \n\n\n### \u5b9e\u4f8b\n  | \u8bed\u6cd5    | \u6548\u679c    |\n\n  | :----:  |  :---:  |\n\n  |  | $$ |  \n\n\n\u4e0a\u6807\u3001\u4e0b\u6807\u53ca\u79ef\u5206\u7b49\n\n\n\n\n\n\n\n\n\u529f\u80fd\n\n\n\u8bed\u6cd5\n\n\n\u6548\u679c\n\n\n\n\n\n\n\n\n\n\n\u4e0a\u6807\n\n\na^2\n\n\na^2\na^2\n\n\n\n\n\n\n\u4e0b\u6807\n\n\na_2\n\n\na_2\na_2\n\n\n\n\n\n\n\u7ec4\u5408\n\n\na^{2+2}\n\n\na^{2+2}\na^{2+2}\n\n\n\n\n\n\n\u7ec4\u5408\n\n\na_{i,j}\n\n\na_{i,j}\na_{i,j}\n\n\n\n\n\n\n\u7ed3\u5408\u4e0a\u4e0b\u6807\n\n\nx_2^3\n\n\n$ x_2^3$\n\n\n\n\n\n\n\u524d\u7f6e\u4e0a\u4e0b\u6807\n\n\n{}_1\n2X_3\n4\n\n\n{}_1^2X_3^4\n{}_1^2X_3^4\n\n\n\n\n\n\n\u5bfc\u6570\uff08HTML\uff09\n\n\nx'\n\n\n$ x'$\n\n\n\n\n\n\n\u5bfc\u6570\uff08PNG\uff09\n\n\nx^\\prime\n\n\nx^\\prime\nx^\\prime\n\n\n\n\n\n\n\u5bfc\u6570\uff08\u9519\u8bef\uff09\n\n\nx\\prime\n\n\nx\\prime\nx\\prime\n\n\n\n\n\n\n\u5bfc\u6570\u70b9\n\n\n\\dot{x}\n\n\n\\dot{x}\n\\dot{x}\n\n\n\n\n\n\n\u5bfc\u6570\u70b9\n\n\n\\ddot{y}\n\n\n\\ddot{y}\n\\ddot{y}\n\n\n\n\n\n\n\u5411\u91cf\n\n\n\\vec{c}\n\n\n\\vec{c}\n\\vec{c}\n\n\n\n\n\n\n\n\n\\overleftarrow{a b}\n\n\n\\overleftarrow{a b}\n\\overleftarrow{a b}\n\n\n\n\n\n\n\n\n\\overrightarrow{c d}\n\n\n\\overrightarrow{c d}\n\\overrightarrow{c d}\n\n\n\n\n\n\n\n\n\\widehat{e f g}\n\n\n\\widehat{e f g}\n\\widehat{e f g}\n\n\n\n\n\n\n\u4e0a\u5f27 (\u6ce8: \u6b63\u786e\u5e94\u8be5\u7528 \\overarc, \u4f46\u5728\u8fd9\u91cc\u884c\u4e0d\u901a\u3002\u8981\u7528\u5efa\u8bae\u7684\u8bed\u6cd5\u4f5c\u4e3a\u89e3\u51b3\u529e\u6cd5)\n\n\n\\overset{\\frown} {AB}\n\n\n\\overset{\\frown} {AB}\n\\overset{\\frown} {AB}\n\n\n\n\n\n\n\u4e0a\u5212\u7ebf\n\n\n\\overline{h i j}\n\n\n\\overline{h i j}\n\\overline{h i j}\n\n\n\n\n\n\n\u4e0b\u5212\u7ebf\n\n\n\\underline{k l m}\n\n\n\\underline{k l m}\n\\underline{k l m}\n\n\n\n\n\n\n\u4e0a\u62ec\u53f7\n\n\n\\overbrace{1+2+\\cdots+100}\n\n\n\\overbrace{1+2+\\cdots+100}\n\\overbrace{1+2+\\cdots+100}\n\n\n\n\n\n\n\n\n\\begin{matrix} 5050 \\ \\overbrace{ 1+2+\\cdots+100 } \\end{matrix}\n\n\n\\begin{matrix} 5050 \\ \\overbrace{ 1+2+\\cdots+100 } \\end{matrix}\n\n\n\n\n\n\n\u4e0b\u62ec\u53f7\n\n\n\\underbrace{a+b+\\cdots+z}\n\n\n\\underbrace{a+b+\\cdots+z}\n\\underbrace{a+b+\\cdots+z}\n\n\n\n\n\n\n\n\n\\begin{matrix} \\underbrace{ a+b+\\cdots+z } \\ 26 \\end{matrix}\n\n\n\\begin{matrix} \\underbrace{ a+b+\\cdots+z } \\ 26 \\end{matrix}\n\n\n\n\n\n\n\u6c42\u548c\n\n\n\\sum_{k=1}^N k^2\n\n\n\\sum_{k=1}^N k^2\n\\sum_{k=1}^N k^2\n\n\n\n\n\n\n\n\n\\begin{matrix} \\sum_{k=1}^N k^2 \\end{matrix}\n\n\n\\begin{matrix} \\sum_{k=1}^N k^2 \\end{matrix}\n\n\n\n\n\n\n\u6c42\u79ef\n\n\n\\prod_{i=1}^N x_i\n\n\n\\prod_{i=1}^N x_i\n\\prod_{i=1}^N x_i\n\n\n\n\n\n\n\n\n\\begin{matrix} \\prod_{i=1}^N x_i \\end{matrix}\n\n\n\\begin{matrix} \\prod_{i=1}^N x_i \\end{matrix}\n\n\n\n\n\n\n\u4e0a\u79ef\n\n\n\\coprod_{i=1}^N x_i\n\n\n\\coprod_{i=1}^N x_i\n\\coprod_{i=1}^N x_i\n\n\n\n\n\n\n\n\n\\begin{matrix} \\coprod_{i=1}^N x_i \\end{matrix}\n\n\n\\begin{matrix} \\coprod_{i=1}^N x_i \\end{matrix}\n\n\n\n\n\n\n\u6781\u9650\n\n\n\\lim_{n \\to \\infty}x_n\n\n\n\\lim_{n \\to \\infty}x_n\n\\lim_{n \\to \\infty}x_n\n\n\n\n\n\n\n\n\n\\begin{matrix} \\lim_{n \\to \\infty}x_n \\end{matrix}\n\n\n\\begin{matrix} \\lim_{n \\to \\infty}x_n \\end{matrix}\n\n\n\n\n\n\n\u79ef\u5206\n\n\n\\int_{-N}^{N} e^x\\, dx\n\n\n\\int_{-N}^{N} e^x\\, dx\n\\int_{-N}^{N} e^x\\, dx\n\n\n\n\n\n\n\n\n\\begin{matrix} \\int_{-N}^{N} e^x\\, dx \\end{matrix}\n\n\n\\begin{matrix} \\int_{-N}^{N} e^x\\, dx \\end{matrix}\n\n\n\n\n\n\n\u53cc\u91cd\u79ef\u5206\n\n\n\\iint_{D}^{W} \\, dx\\,dy\n\n\n\\iint_{D}^{W} \\, dx\\,dy\n\\iint_{D}^{W} \\, dx\\,dy\n\n\n\n\n\n\n\u4e09\u91cd\u79ef\u5206\n\n\n\\iiint_{E}^{V} \\, dx\\,dy\\,dz\n\n\n\\iiint_{E}^{V} \\, dx\\,dy\\,dz\n\\iiint_{E}^{V} \\, dx\\,dy\\,dz\n\n\n\n\n\n\n\u56db\u91cd\u79ef\u5206\n\n\n\\iiiint_{F}^{U} \\, dx\\,dy\\,dz\\,dt\n\n\n$ \\iiiint_{F}^{U} \\, dx\\,dy\\,dz\\,dt$\n\n\n\n\n\n\n\u95ed\u5408\u7684\u66f2\u7ebf\u3001\u66f2\u9762\u79ef\u5206\n\n\n\\oint_{C} x^3\\, dx + 4y^2\\, dy\n\n\n\\oint_{C} x^3\\, dx + 4y^2\\, dy\n\\oint_{C} x^3\\, dx + 4y^2\\, dy\n\n\n\n\n\n\n\u4ea4\u96c6\n\n\n\\bigcap_1^{n} p\n\n\n\\bigcap_1^{n} p\n\\bigcap_1^{n} p\n\n\n\n\n\n\n\u5e76\u96c6\n\n\n\\bigcup_1^{k} p\n\n\n\\bigcup_1^{k} p\n\\bigcup_1^{k} p\n\n\n\n\n\n\n\u5206\u6570\n\n\n\\frac{2}{4}=0.5\n\n\n\\frac{2}{4}=0.5\n\\frac{2}{4}=0.5\n\n\n\n\n\n\n\u5c0f\u578b\u5206\u6570\n\n\n\\tfrac{2}{4} = 0.5\n\n\n\\tfrac{2}{4} = 0.5\n\\tfrac{2}{4} = 0.5\n\n\n\n\n\n\n\u5927\u578b\u5206\u6570\uff08\u5d4c\u5957\uff09\n\n\n\\cfrac{2}{c + \\cfrac{2}{d + \\cfrac{2}{4}}} = a\n\n\n\\cfrac{2}{c + \\cfrac{2}{d + \\cfrac{2}{4}}} = a\n\\cfrac{2}{c + \\cfrac{2}{d + \\cfrac{2}{4}}} = a\n\n\n\n\n\n\n\u5927\u578b\u5206\u6570\uff08\u4e0d\u5d4c\u5957\uff09\n\n\n\\dfrac{2}{4} = 0.5 \\qquad \\dfrac{2}{c + \\dfrac{2}{d + \\dfrac{2}{4}}} = a\n\n\n\\dfrac{2}{4} = 0.5 \\qquad \\dfrac{2}{c + \\dfrac{2}{d + \\dfrac{2}{4}}} = a\n\\dfrac{2}{4} = 0.5 \\qquad \\dfrac{2}{c + \\dfrac{2}{d + \\dfrac{2}{4}}} = a\n\n\n\n\n\n\n\u4e8c\u9879\u5f0f\u7cfb\u6570\n\n\n\\dbinom{n}{r}=\\binom{n}{n-r}=C\nn_r=C\nn_{n-r}\n\n\n\\dbinom{n}{r}=\\binom{n}{n-r}=C^n_r=C^n_{n-r}\n\\dbinom{n}{r}=\\binom{n}{n-r}=C^n_r=C^n_{n-r}\n\n\n\n\n\n\n\u5c0f\u578b\u4e8c\u9879\u5f0f\u7cfb\u6570\n\n\n\\tbinom{n}{r}=\\tbinom{n}{n-r}=C\nn_r=C\nn_{n-r}\n\n\n\\tbinom{n}{r}=\\tbinom{n}{n-r}=C^n_r=C^n_{n-r}\n\\tbinom{n}{r}=\\tbinom{n}{n-r}=C^n_r=C^n_{n-r}\n\n\n\n\n\n\n\u5927\u578b\u4e8c\u9879\u5f0f\u7cfb\u6570\n\n\n\\binom{n}{r}=\\dbinom{n}{n-r}=C\nn_r=C\nn_{n-r}\n\n\n\\binom{n}{r}=\\dbinom{n}{n-r}=C^n_r=C^n_{n-r}\n\\binom{n}{r}=\\dbinom{n}{n-r}=C^n_r=C^n_{n-r}\n\n\n\n\n\n\n\u77e9\u9635\n\n\n\\begin{matrix} x \n y \\ z \n v \\end{matrix}\n\n\n\\begin{matrix} x \n y \\ z \n v \\end{matrix}\n\n\n\n\n\n\n\n\n\\begin{vmatrix} x \n y \\ z \n v \\end{vmatrix}\n\n\n\\begin{vmatrix} x \n y \\ z \n v \\end{vmatrix}\n\n\n\n\n\n\n\n\n\\begin{Vmatrix} x \n y \\ z \n v \\end{Vmatrix}\n\n\n\\begin{Vmatrix} x \n y \\ z \n v \\end{Vmatrix}\n\n\n\n\n\n\n\n\n\\begin{bmatrix} 0 \n \\cdots \n 0 \\ \\vdots \n \\ddots \n \\vdots \\ 0 \n \\cdots \n 0 \\end{bmatrix}\n\n\n\\begin{bmatrix} 0 \n \\cdots \n 0 \\ \\vdots \n \\ddots \n \\vdots \\ 0 \n \\cdots \n 0\\end{bmatrix}\n\n\n\n\n\n\n\n\n\\begin{Bmatrix} x \n y \\ z \n v \\end{Bmatrix}\n\n\n\\begin{Bmatrix} x \n y \\ z \n v \\end{Bmatrix}\n\n\n\n\n\n\n\n\n\\begin{pmatrix} x \n y \\ z \n v \\end{pmatrix}\n\n\n\\begin{pmatrix} x \n y \\ z \n v \\end{pmatrix}\n\n\n\n\n\n\n\n\n\\bigl( \\begin{smallmatrix} a\nb\\ c\nd \\end{smallmatrix} \\bigr)\n\n\n\\bigl( \\begin{smallmatrix} a\nb\\ c\nd \\end{smallmatrix} \\bigr)\n\n\n\n\n\n\n\u6761\u4ef6\u5b9a\u4e49\n\n\nf(n) = \\begin{cases} n/2, \n \\mbox{if }n\\mbox{ is even} \\ 3n+1, \n \\mbox{if }n\\mbox{ is odd} \\end{cases}\n\n\nf(n) = \\begin{cases} n/2, \n \\mbox{if }n\\mbox{ is even} \\ 3n+1, \n \\mbox{if }n\\mbox{ is odd} \\end{cases}\n\n\n\n\n\n\n\u591a\u884c\u7b49\u5f0f\n\n\n\\begin{align} f(x) \n = (m+n)^2 \\ \n = m\n2+2mn+n\n2 \\ \\end{align}\n\n\n\\begin{align} f(x) \n = (m+n)^2 \\ \n = m\n2+2mn+n\n2  \\end{align}\n\n\n\n\n\n\n\n\n\\begin{alignat}{2} f(x) \n = (m-n)^2 \\ f(x) \n = (-m+n)^2 \\ \n = m\n2-2mn+n\n2 \\ \\end{alignat}\n\n\n\\begin{alignat}{2} f(x) \n = (m-n)^2 \\ f(x) \n = (-m+n)^2 \\ \n = m\n2-2mn+n\n2  \\end{alignat}\n\n\n\n\n\n\n\u591a\u884c\u7b49\u5f0f\uff08\u5de6\u5bf9\u9f50\uff09\n\n\n\\begin{array}{lcl} z \n = \n a \\ f(x,y,z) \n = \n x + y + z \\end{array}\n\n\n\\begin{array}{lcl} z \n = \n a \\ f(x,y,z) \n = \n x + y + z \\end{array}\n\n\n\n\n\n\n\u591a\u884c\u7b49\u5f0f\uff08\u53f3\u5bf9\u9f50\uff09\n\n\n\\begin{array}{lcr} z \n = \n a \\ f(x,y,z) \n = \n x + y + z \\end{array}\n\n\n\\begin{array}{lcr} z \n = \n a \\ f(x,y,z) \n = \n x + y + z \\end{array}\n\n\n\n\n\n\n\u957f\u516c\u5f0f\u6362\u884c\n\n\nf(x) \\,!= \\sum_{n=0}^\\infty a_n x^n \\ = a_0 +a_1x+a_2x^2+\\cdots\n\n\nf(x) \\,\\!= \\sum_{n=0}^\\infty a_n x^n \\\\\\ = a_0 +a_1x+a_2x^2+\\cdots\nf(x) \\,\\!= \\sum_{n=0}^\\infty a_n x^n \\\\\\ = a_0 +a_1x+a_2x^2+\\cdots\n\n\n\n\n\n\n\u65b9\u7a0b\u7ec4\n\n\n\\begin{cases} 3x + 5y + z \\ 7x - 2y + 4z \\ -6x + 3y + 2z \\end{cases}\n\n\n\\begin{cases} 3x + 5y + z \\ 7x - 2y + 4z \\ -6x + 3y + 2z \\end{cases}\n\n\n\n\n\n\n\n\n\u5b57\u4f53\n\n\n\n\n\n\n\n\n\u5e8f\u53f7\n\n\n\u5c0f\u5199\n\n\n\u5c0f\u5199\n\n\n\u5c0f\u5199\u7c97\u4f53\n\n\n\u5927\u5199\n\n\n\u5927\u5199\n\n\n\u5927\u5199\u7c97\u4f53\n\n\n\n\n\n\n\n\n\n\n\n\n1\n\n\n\\alpha\n\n\n\\alpha\n\\alpha\n\n\n\\boldsymbol{\\alpha}\n\\boldsymbol{\\alpha}\n\n\n-\n\n\n\n\n\n\n\n\n\n\n2\n\n\n\\beta\n\n\n\\beta\n\\beta\n\n\n\\boldsymbol{\\beta}\n\\boldsymbol{\\beta}\n\n\n-\n\n\n\n\n\n\n\n\n\n\n3\n\n\n\\gamma\n\n\n\\gamma\n\\gamma\n\n\n\\boldsymbol{\\gamma}\n\\boldsymbol{\\gamma}\n\n\n\\Gamma\n\n\n\\Gamma\n\\Gamma\n\n\n\n\n\n\n\n\n4\n\n\n\\delta\n\n\n\\delta\n\\delta\n\n\n\\boldsymbol{\\delta}\n\\boldsymbol{\\delta}\n\n\n\\Delta\n\n\n\\Delta\n\\Delta\n\n\n\n\n\n\n\n\n5\n\n\n\\epsilon\n\n\n\\epsilon\n\\epsilon\n\n\n\\boldsymbol{\\epsilon}\n\\boldsymbol{\\epsilon}\n\n\n-\n\n\n\n\n\n\n\n\n\n\n6\n\n\n\\varepsilon\n\n\n\\varepsilon\n\\varepsilon\n\n\n\\boldsymbol{\\varepsilon}\n\\boldsymbol{\\varepsilon}\n\n\n-\n\n\n\n\n\n\n\n\n\n\n7\n\n\n\\zeta\n\n\n\\zeta\n\\zeta\n\n\n\\boldsymbol{\\zeta}\n\\boldsymbol{\\zeta}\n\n\n-\n\n\n\n\n\n\n\n\n\n\n8\n\n\n\\eta\n\n\n\\eta\n\\eta\n\n\n\\boldsymbol{\\eta}\n\\boldsymbol{\\eta}\n\n\n-\n\n\n\n\n\n\n\n\n\n\n9\n\n\n\\theta\n\n\n\\theta\n\\theta\n\n\n\\boldsymbol{\\theta}\n\\boldsymbol{\\theta}\n\n\n\\Theta\n\n\n\\Theta\n\\Theta\n\n\n\n\n\n\n\n\n10\n\n\n\\vartheta\n\n\n\\vartheta\n\\vartheta\n\n\n\\boldsymbol{\\vartheta}\n\\boldsymbol{\\vartheta}\n\n\n\\varTheta\n\n\n\\varTheta\n\\varTheta\n\n\n\n\n\n\n\n\n11\n\n\n\\iota\n\n\n\\iota\n\\iota\n\n\n\\boldsymbol{\\iota}\n\\boldsymbol{\\iota}\n\n\n-\n\n\n\n\n\n\n\n\n\n\n12\n\n\n\\lambda\n\n\n\\lambda\n\\lambda\n\n\n\\boldsymbol{\\lambda}\n\\boldsymbol{\\lambda}\n\n\n\\Lambda\n\n\n\\Lambda\n\\Lambda\n\n\n\n\n\n\n\n\n13\n\n\n\\kappa\n\n\n\\kappa\n\\kappa\n\n\n\\boldsymbol{\\kappa}\n\\boldsymbol{\\kappa}\n\n\n-\n\n\n\n\n\n\n\n\n\n\n14\n\n\n\\varkappa\n\n\n\\varkappa\n\\varkappa\n\n\n\\boldsymbol{\\varkappa}\n\\boldsymbol{\\varkappa}\n\n\n-\n\n\n\n\n\n\n\n\n\n\n15\n\n\n\\mu\n\n\n\\mu\n\\mu\n\n\n\\boldsymbol{\\mu}\n\\boldsymbol{\\mu}\n\n\n-\n\n\n\n\n\n\n\n\n\n\n16\n\n\n\\nu\n\n\n\\nu\n\\nu\n\n\n\\boldsymbol{\\nu}\n\\boldsymbol{\\nu}\n\n\n-\n\n\n\n\n\n\n\n\n\n\n17\n\n\n\\xi\n\n\n\\xi\n\\xi\n\n\n\\boldsymbol{\\xi}\n\\boldsymbol{\\xi}\n\n\n\\Xi\n\n\n\\Xi\n\\Xi\n\n\n\n\n\n\n\n\n18\n\n\n\\omicron\n\n\n\\omicron\n\\omicron\n\n\n\\boldsymbol{\\omicron}\n\\boldsymbol{\\omicron}\n\n\n-\n\n\n\n\n\n\n\n\n\n\n19\n\n\n\\pi\n\n\n\\pi\n\\pi\n\n\n\\boldsymbol{\\pi}\n\\boldsymbol{\\pi}\n\n\n\\Pi\n\n\n\\Pi\n\\Pi\n\n\n\n\n\n\n\n\n20\n\n\n\\varpi\n\n\n\\varpi\n\\varpi\n\n\n\\boldsymbol{\\varpi}\n\\boldsymbol{\\varpi}\n\n\n\\varPi\n\n\n\\varPi\n\\varPi\n\n\n\n\n\n\n\n\n21\n\n\n\\rho\n\n\n\\rho\n\\rho\n\n\n\\boldsymbol{\\rho}\n\\boldsymbol{\\rho}\n\n\n-\n\n\n\n\n\n\n\n\n\n\n22\n\n\n\\varrho\n\n\n\\varrho\n\\varrho\n\n\n\\boldsymbol{\\varrho}\n\\boldsymbol{\\varrho}\n\n\n-\n\n\n\n\n\n\n\n\n\n\n23\n\n\n\\sigma\n\n\n\\sigma\n\\sigma\n\n\n\\boldsymbol{\\sigma}\n\\boldsymbol{\\sigma}\n\n\n\\Sigma\n\n\n\\Sigma\n\\Sigma\n\n\n\n\n\n\n\n\n24\n\n\n\\varsigma\n\n\n\\varsigma\n\\varsigma\n\n\n\\boldsymbol{\\varsigma}\n\\boldsymbol{\\varsigma}\n\n\n\\varSigma\n\n\n\\varSigma\n\\varSigma\n\n\n\n\n\n\n\n\n25\n\n\n\\tau\n\n\n\\tau\n\\tau\n\n\n\\boldsymbol{\\tau}\n\\boldsymbol{\\tau}\n\n\n-\n\n\n\n\n\n\n\n\n\n\n26\n\n\n\\upsilon\n\n\n\\upsilon\n\\upsilon\n\n\n\\boldsymbol{\\upsilon}\n\\boldsymbol{\\upsilon}\n\n\n\\Upsilon\n\n\n\\Upsilon\n\\Upsilon\n\n\n\n\n\n\n\n\n27\n\n\n\\phi\n\n\n\\phi\n\\phi\n\n\n\\boldsymbol{\\phi}\n\\boldsymbol{\\phi}\n\n\n\\Phi\n\n\n\\Phi\n\\Phi\n\n\n\n\n\n\n\n\n28\n\n\n\\varphi\n\n\n\\varphi\n\\varphi\n\n\n\\boldsymbol{\\varphi}\n\\boldsymbol{\\varphi}\n\n\n\\varPhi\n\n\n\\varPhi\n\\varPhi\n\n\n\n\n\n\n\n\n29\n\n\n\\chi\n\n\n\\chi\n\\chi\n\n\n\\boldsymbol{\\chi}\n\\boldsymbol{\\chi}\n\n\n-\n\n\n\n\n\n\n\n\n\n\n30\n\n\n\\psi\n\n\n\\psi\n\\psi\n\n\n\\boldsymbol{\\psi}\n\\boldsymbol{\\psi}\n\n\n\\Psi\n\n\n\\Psi\n\\Psi\n\n\n\n\n\n\n\n\n31\n\n\n\\omega\n\n\n\\omega\n\\omega\n\n\n\\boldsymbol{\\omega}\n\\boldsymbol{\\omega}\n\n\n\\Omega\n\n\n\\Omega\n\\Omega\n\n\n\n\n\n\n\n\n# \u5b57\u4f53\u96c6\u5408\n ## \u5b57\u4f53\u96c6\n\n\n| \u5e8f\u53f7 | \u5b57\u4f53 | \u8bed\u6cd5 | \u5b9e\u4f8b |\n| :----: | :----: | :----: | :----: | :----: | :----: | :----: | :----:\n| 1 | \u6b63\u4f53 | 012,abc,ABC | \n012,abc,ABC\n012,abc,ABC\n | \n| 2 | \u6b63\u7c97\u4f53|  \\mathbf{012,abc,ABC} | \n\\mathbf{012,abc,ABC}\n\\mathbf{012,abc,ABC}\n | \n| 3 | \u659c\u4f53 | \\mathit{012,abc,ABC} | \n\\mathit{012,abc,ABC}\n\\mathit{012,abc,ABC}\n | \n| 4 | \u659c\u7c97\u4f53 | \\boldsymbol{012,abc,ABC} | \n\\boldsymbol{012,abc,ABC}\n\\boldsymbol{012,abc,ABC}\n | \n| 5 | \u9ed1\u677f\u4f53 | \\mathbb{012,abc,ABC} | \n\\mathbb{012,abc,ABC}\n\\mathbb{012,abc,ABC}\n | \n| 6 |\u54e5\u7279\u4f53 | \\mathfrak{012,abc,ABC} | \n\\mathfrak{012,abc,ABC}\n\\mathfrak{012,abc,ABC}\n | \n| 7 | \u624b\u5199\u4f53 | \\mathcal{012,abc,ABC} | \n\\mathcal{012,abc,ABC}\n\\mathcal{012,abc,ABC}\n | \n\n\n##\u6570\u5b57\u5b57\u6bcd\u5b57\u4f53\u96c6\n\n\n\n\n\n\n\n\n\u5e8f\u53f7\n\n\n\u6b63\u4f53\n\n\n\u6b63\u7c97\u4f53bf\n\n\n\u659c\u4f53it\n\n\n\u659c\u7c97\u4f53\n\n\n\u9ed1\u677f\u5b57\u4f53bb\n\n\n\u54e5\u7279\u4f53frak\n\n\n\u624b\u5199\u4f53cal\n\n\n\n\n\n\n\n\n\n\n\n\n1\n\n\n0\n\n\n\\mathbf{0}\n\\mathbf{0}\n\n\n\\mathit{0}\n\\mathit{0}\n\n\n\\boldsymbol{0}\n\\boldsymbol{0}\n\n\n\\mathbb{0}\n\\mathbb{0}\n\n\n\\mathfrak{0}\n\\mathfrak{0}\n\n\n\n\n\n\n\n\n2\n\n\n1\n\n\n\\mathbf{1}\n\\mathbf{1}\n\n\n\\mathit{1}\n\\mathit{1}\n\n\n\\boldsymbol{1}\n\\boldsymbol{1}\n\n\n\\mathbb{1}\n\\mathbb{1}\n\n\n\\mathfrak{1}\n\\mathfrak{1}\n\n\n\n\n\n\n\n\n3\n\n\n2\n\n\n\\mathbf{2}\n\\mathbf{2}\n\n\n\\mathit{2}\n\\mathit{2}\n\n\n\\boldsymbol{2}\n\\boldsymbol{2}\n\n\n\\mathbb{2}\n\\mathbb{2}\n\n\n\\mathfrak{2}\n\\mathfrak{2}\n\n\n\n\n\n\n\n\n4\n\n\n3\n\n\n\\mathbf{3}\n\\mathbf{3}\n\n\n\\mathit{3}\n\\mathit{3}\n\n\n\\boldsymbol{3}\n\\boldsymbol{3}\n\n\n\\mathbb{3}\n\\mathbb{3}\n\n\n\\mathfrak{3}\n\\mathfrak{3}\n\n\n\n\n\n\n\n\n5\n\n\n4\n\n\n\\mathbf{4}\n\\mathbf{4}\n\n\n\\mathit{4}\n\\mathit{4}\n\n\n\\boldsymbol{4}\n\\boldsymbol{4}\n\n\n\\mathbb{4}\n\\mathbb{4}\n\n\n\\mathfrak{4}\n\\mathfrak{4}\n\n\n\n\n\n\n\n\n6\n\n\n5\n\n\n\\mathbf{5}\n\\mathbf{5}\n\n\n\\mathit{5}\n\\mathit{5}\n\n\n\\boldsymbol{5}\n\\boldsymbol{5}\n\n\n\\mathbb{5}\n\\mathbb{5}\n\n\n\\mathfrak{5}\n\\mathfrak{5}\n\n\n\n\n\n\n\n\n7\n\n\n6\n\n\n\\mathbf{6}\n\\mathbf{6}\n\n\n\\mathit{6}\n\\mathit{6}\n\n\n\\boldsymbol{6}\n\\boldsymbol{6}\n\n\n\\mathbb{6}\n\\mathbb{6}\n\n\n\\mathfrak{6}\n\\mathfrak{6}\n\n\n\n\n\n\n\n\n8\n\n\n7\n\n\n\\mathbf{7}\n\\mathbf{7}\n\n\n\\mathit{7}\n\\mathit{7}\n\n\n\\boldsymbol{7}\n\\boldsymbol{7}\n\n\n\\mathbb{7}\n\\mathbb{7}\n\n\n\\mathfrak{7}\n\\mathfrak{7}\n\n\n\n\n\n\n\n\n9\n\n\n8\n\n\n\\mathbf{8}\n\\mathbf{8}\n\n\n\\mathit{8}\n\\mathit{8}\n\n\n\\boldsymbol{8}\n\\boldsymbol{8}\n\n\n\\mathbb{8}\n\\mathbb{8}\n\n\n\\mathfrak{8}\n\\mathfrak{8}\n\n\n\n\n\n\n\n\n10\n\n\n9\n\n\n\\mathbf{9}\n\\mathbf{9}\n\n\n\\mathit{9}\n\\mathit{9}\n\n\n\\boldsymbol{9}\n\\boldsymbol{9}\n\n\n\\mathbb{9}\n\\mathbb{9}\n\n\n\\mathfrak{9}\n\\mathfrak{9}\n\n\n\n\n\n\n\n\n11\n\n\na\n\n\n\\mathbf{a}\n\\mathbf{a}\n\n\n\\mathit{a}\n\\mathit{a}\n\n\n\\boldsymbol{a}\n\\boldsymbol{a}\n\n\n\\mathbb{a}\n\\mathbb{a}\n\n\n\\mathfrak{a}\n\\mathfrak{a}\n\n\n\n\n\n\n\n\n12\n\n\nb\n\n\n\\mathbf{b}\n\\mathbf{b}\n\n\n\\mathit{b}\n\\mathit{b}\n\n\n\\boldsymbol{b}\n\\boldsymbol{b}\n\n\n\\mathbb{b}\n\\mathbb{b}\n\n\n\\mathfrak{b}\n\\mathfrak{b}\n\n\n\n\n\n\n\n\n13\n\n\nc\n\n\n\\mathbf{c}\n\\mathbf{c}\n\n\n\\mathit{c}\n\\mathit{c}\n\n\n\\boldsymbol{c}\n\\boldsymbol{c}\n\n\n\\mathbb{c}\n\\mathbb{c}\n\n\n\\mathfrak{c}\n\\mathfrak{c}\n\n\n\n\n\n\n\n\n14\n\n\nd\n\n\n\\mathbf{d}\n\\mathbf{d}\n\n\n\\mathit{d}\n\\mathit{d}\n\n\n\\boldsymbol{d}\n\\boldsymbol{d}\n\n\n\\mathbb{d}\n\\mathbb{d}\n\n\n\\mathfrak{d}\n\\mathfrak{d}\n\n\n\n\n\n\n\n\n15\n\n\ne\n\n\n\\mathbf{e}\n\\mathbf{e}\n\n\n\\mathit{e}\n\\mathit{e}\n\n\n\\boldsymbol{e}\n\\boldsymbol{e}\n\n\n\\mathbb{e}\n\\mathbb{e}\n\n\n\\mathfrak{e}\n\\mathfrak{e}\n\n\n\n\n\n\n\n\n16\n\n\nf\n\n\n\\mathbf{f}\n\\mathbf{f}\n\n\n\\mathit{f}\n\\mathit{f}\n\n\n\\boldsymbol{f}\n\\boldsymbol{f}\n\n\n\\mathbb{f}\n\\mathbb{f}\n\n\n\\mathfrak{f}\n\\mathfrak{f}\n\n\n\n\n\n\n\n\n17\n\n\ng\n\n\n\\mathbf{g}\n\\mathbf{g}\n\n\n\\mathit{g}\n\\mathit{g}\n\n\n\\boldsymbol{g}\n\\boldsymbol{g}\n\n\n\\mathbb{g}\n\\mathbb{g}\n\n\n\\mathfrak{g}\n\\mathfrak{g}\n\n\n\n\n\n\n\n\n18\n\n\nh\n\n\n\\mathbf{h}\n\\mathbf{h}\n\n\n\\mathit{h}\n\\mathit{h}\n\n\n\\boldsymbol{h}\n\\boldsymbol{h}\n\n\n\\mathbb{h}\n\\mathbb{h}\n\n\n\\mathfrak{h}\n\\mathfrak{h}\n\n\n\n\n\n\n\n\n19\n\n\ni\n\n\n\\mathbf{i}\n\\mathbf{i}\n\n\n\\mathit{i}\n\\mathit{i}\n\n\n\\boldsymbol{i}\n\\boldsymbol{i}\n\n\n\\mathbb{i}\n\\mathbb{i}\n\n\n\\mathfrak{i}\n\\mathfrak{i}\n\n\n\n\n\n\n\n\n20\n\n\nj\n\n\n\\mathbf{j}\n\\mathbf{j}\n\n\n\\mathit{j}\n\\mathit{j}\n\n\n\\boldsymbol{j}\n\\boldsymbol{j}\n\n\n\\mathbb{j}\n\\mathbb{j}\n\n\n\\mathfrak{j}\n\\mathfrak{j}\n\n\n\n\n\n\n\n\n21\n\n\nk\n\n\n\\mathbf{k}\n\\mathbf{k}\n\n\n\\mathit{k}\n\\mathit{k}\n\n\n\\boldsymbol{k}\n\\boldsymbol{k}\n\n\n\\mathbb{k}\n\\mathbb{k}\n\n\n\\mathfrak{k}\n\\mathfrak{k}\n\n\n\n\n\n\n\n\n22\n\n\nl\n\n\n\\mathbf{l}\n\\mathbf{l}\n\n\n\\mathit{l}\n\\mathit{l}\n\n\n\\boldsymbol{l}\n\\boldsymbol{l}\n\n\n\\mathbb{l}\n\\mathbb{l}\n\n\n\\mathfrak{l}\n\\mathfrak{l}\n\n\n\n\n\n\n\n\n23\n\n\nm\n\n\n\\mathbf{m}\n\\mathbf{m}\n\n\n\\mathit{m}\n\\mathit{m}\n\n\n\\boldsymbol{m}\n\\boldsymbol{m}\n\n\n\\mathbb{m}\n\\mathbb{m}\n\n\n\\mathfrak{m}\n\\mathfrak{m}\n\n\n\n\n\n\n\n\n24\n\n\nn\n\n\n\\mathbf{n}\n\\mathbf{n}\n\n\n\\mathit{n}\n\\mathit{n}\n\n\n\\boldsymbol{n}\n\\boldsymbol{n}\n\n\n\\mathbb{n}\n\\mathbb{n}\n\n\n\\mathfrak{n}\n\\mathfrak{n}\n\n\n\n\n\n\n\n\n25\n\n\no\n\n\n\\mathbf{o}\n\\mathbf{o}\n\n\n\\mathit{o}\n\\mathit{o}\n\n\n\\boldsymbol{o}\n\\boldsymbol{o}\n\n\n\\mathbb{o}\n\\mathbb{o}\n\n\n\\mathfrak{o}\n\\mathfrak{o}\n\n\n\n\n\n\n\n\n26\n\n\np\n\n\n\\mathbf{p}\n\\mathbf{p}\n\n\n\\mathit{p}\n\\mathit{p}\n\n\n\\boldsymbol{p}\n\\boldsymbol{p}\n\n\n\\mathbb{p}\n\\mathbb{p}\n\n\n\\mathfrak{p}\n\\mathfrak{p}\n\n\n\n\n\n\n\n\n27\n\n\nq\n\n\n\\mathbf{q}\n\\mathbf{q}\n\n\n\\mathit{q}\n\\mathit{q}\n\n\n\\boldsymbol{q}\n\\boldsymbol{q}\n\n\n\\mathbb{q}\n\\mathbb{q}\n\n\n\\mathfrak{q}\n\\mathfrak{q}\n\n\n\n\n\n\n\n\n28\n\n\nr\n\n\n\\mathbf{r}\n\\mathbf{r}\n\n\n\\mathit{r}\n\\mathit{r}\n\n\n\\boldsymbol{r}\n\\boldsymbol{r}\n\n\n\\mathbb{r}\n\\mathbb{r}\n\n\n\\mathfrak{r}\n\\mathfrak{r}\n\n\n\n\n\n\n\n\n29\n\n\ns\n\n\n\\mathbf{s}\n\\mathbf{s}\n\n\n\\mathit{s}\n\\mathit{s}\n\n\n\\boldsymbol{s}\n\\boldsymbol{s}\n\n\n\\mathbb{s}\n\\mathbb{s}\n\n\n\\mathfrak{s}\n\\mathfrak{s}\n\n\n\n\n\n\n\n\n30\n\n\nt\n\n\n\\mathbf{t}\n\\mathbf{t}\n\n\n\\mathit{t}\n\\mathit{t}\n\n\n\\boldsymbol{t}\n\\boldsymbol{t}\n\n\n\\mathbb{t}\n\\mathbb{t}\n\n\n\\mathfrak{t}\n\\mathfrak{t}\n\n\n\n\n\n\n\n\n31\n\n\nu\n\n\n\\mathbf{u}\n\\mathbf{u}\n\n\n\\mathit{u}\n\\mathit{u}\n\n\n\\boldsymbol{u}\n\\boldsymbol{u}\n\n\n\\mathbb{u}\n\\mathbb{u}\n\n\n\\mathfrak{u}\n\\mathfrak{u}\n\n\n\n\n\n\n\n\n32\n\n\nv\n\n\n\\mathbf{v}\n\\mathbf{v}\n\n\n\\mathit{v}\n\\mathit{v}\n\n\n\\boldsymbol{v}\n\\boldsymbol{v}\n\n\n\\mathbb{v}\n\\mathbb{v}\n\n\n\\mathfrak{v}\n\\mathfrak{v}\n\n\n\n\n\n\n\n\n33\n\n\nw\n\n\n\\mathbf{w}\n\\mathbf{w}\n\n\n\\mathit{w}\n\\mathit{w}\n\n\n\\boldsymbol{w}\n\\boldsymbol{w}\n\n\n\\mathbb{w}\n\\mathbb{w}\n\n\n\\mathfrak{w}\n\\mathfrak{w}\n\n\n\n\n\n\n\n\n34\n\n\nx\n\n\n\\mathbf{x}\n\\mathbf{x}\n\n\n\\mathit{x}\n\\mathit{x}\n\n\n\\boldsymbol{x}\n\\boldsymbol{x}\n\n\n\\mathbb{x}\n\\mathbb{x}\n\n\n\\mathfrak{x}\n\\mathfrak{x}\n\n\n\n\n\n\n\n\n35\n\n\ny\n\n\n\\mathbf{y}\n\\mathbf{y}\n\n\n\\mathit{y}\n\\mathit{y}\n\n\n\\boldsymbol{y}\n\\boldsymbol{y}\n\n\n\\mathbb{y}\n\\mathbb{y}\n\n\n\\mathfrak{y}\n\\mathfrak{y}\n\n\n\n\n\n\n\n\n36\n\n\nz\n\n\n\\mathbf{z}\n\\mathbf{z}\n\n\n\\mathit{z}\n\\mathit{z}\n\n\n\\boldsymbol{z}\n\\boldsymbol{z}\n\n\n\\mathbb{z}\n\\mathbb{z}\n\n\n\\mathfrak{z}\n\\mathfrak{z}\n\n\n\n\n\n\n\n\n37\n\n\nA\n\n\n\\mathbf{A}\n\\mathbf{A}\n\n\n\\mathit{A}\n\\mathit{A}\n\n\n\\boldsymbol{A}\n\\boldsymbol{A}\n\n\n\\mathbb{A}\n\\mathbb{A}\n\n\n\\mathfrak{A}\n\\mathfrak{A}\n\n\n\n\n\n\n\n\n38\n\n\nB\n\n\n\\mathbf{B}\n\\mathbf{B}\n\n\n\\mathit{B}\n\\mathit{B}\n\n\n\\boldsymbol{B}\n\\boldsymbol{B}\n\n\n\\mathbb{B}\n\\mathbb{B}\n\n\n\\mathfrak{B}\n\\mathfrak{B}\n\n\n\n\n\n\n\n\n39\n\n\nC\n\n\n\\mathbf{C}\n\\mathbf{C}\n\n\n\\mathit{C}\n\\mathit{C}\n\n\n\\boldsymbol{C}\n\\boldsymbol{C}\n\n\n\\mathbb{C}\n\\mathbb{C}\n\n\n\\mathfrak{C}\n\\mathfrak{C}\n\n\n\n\n\n\n\n\n40\n\n\nD\n\n\n\\mathbf{D}\n\\mathbf{D}\n\n\n\\mathit{D}\n\\mathit{D}\n\n\n\\boldsymbol{D}\n\\boldsymbol{D}\n\n\n\\mathbb{D}\n\\mathbb{D}\n\n\n\\mathfrak{D}\n\\mathfrak{D}\n\n\n\n\n\n\n\n\n41\n\n\nE\n\n\n\\mathbf{E}\n\\mathbf{E}\n\n\n\\mathit{E}\n\\mathit{E}\n\n\n\\boldsymbol{E}\n\\boldsymbol{E}\n\n\n\\mathbb{E}\n\\mathbb{E}\n\n\n\\mathfrak{E}\n\\mathfrak{E}\n\n\n\n\n\n\n\n\n42\n\n\nF\n\n\n\\mathbf{F}\n\\mathbf{F}\n\n\n\\mathit{F}\n\\mathit{F}\n\n\n\\boldsymbol{F}\n\\boldsymbol{F}\n\n\n\\mathbb{F}\n\\mathbb{F}\n\n\n\\mathfrak{F}\n\\mathfrak{F}\n\n\n\n\n\n\n\n\n43\n\n\nG\n\n\n\\mathbf{G}\n\\mathbf{G}\n\n\n\\mathit{G}\n\\mathit{G}\n\n\n\\boldsymbol{G}\n\\boldsymbol{G}\n\n\n\\mathbb{G}\n\\mathbb{G}\n\n\n\\mathfrak{G}\n\\mathfrak{G}\n\n\n\n\n\n\n\n\n44\n\n\nH\n\n\n\\mathbf{H}\n\\mathbf{H}\n\n\n\\mathit{H}\n\\mathit{H}\n\n\n\\boldsymbol{H}\n\\boldsymbol{H}\n\n\n\\mathbb{H}\n\\mathbb{H}\n\n\n\\mathfrak{H}\n\\mathfrak{H}\n\n\n\n\n\n\n\n\n45\n\n\nI\n\n\n\\mathbf{I}\n\\mathbf{I}\n\n\n\\mathit{I}\n\\mathit{I}\n\n\n\\boldsymbol{I}\n\\boldsymbol{I}\n\n\n\\mathbb{I}\n\\mathbb{I}\n\n\n\\mathfrak{I}\n\\mathfrak{I}\n\n\n\n\n\n\n\n\n46\n\n\nJ\n\n\n\\mathbf{J}\n\\mathbf{J}\n\n\n\\mathit{J}\n\\mathit{J}\n\n\n\\boldsymbol{J}\n\\boldsymbol{J}\n\n\n\\mathbb{J}\n\\mathbb{J}\n\n\n\\mathfrak{J}\n\\mathfrak{J}\n\n\n\n\n\n\n\n\n47\n\n\nK\n\n\n\\mathbf{K}\n\\mathbf{K}\n\n\n\\mathit{K}\n\\mathit{K}\n\n\n\\boldsymbol{K}\n\\boldsymbol{K}\n\n\n\\mathbb{K}\n\\mathbb{K}\n\n\n\\mathfrak{K}\n\\mathfrak{K}\n\n\n\n\n\n\n\n\n48\n\n\nL\n\n\n\\mathbf{L}\n\\mathbf{L}\n\n\n\\mathit{L}\n\\mathit{L}\n\n\n\\boldsymbol{L}\n\\boldsymbol{L}\n\n\n\\mathbb{L}\n\\mathbb{L}\n\n\n\\mathfrak{L}\n\\mathfrak{L}\n\n\n\n\n\n\n\n\n49\n\n\nM\n\n\n\\mathbf{M}\n\\mathbf{M}\n\n\n\\mathit{M}\n\\mathit{M}\n\n\n\\boldsymbol{M}\n\\boldsymbol{M}\n\n\n\\mathbb{M}\n\\mathbb{M}\n\n\n\\mathfrak{M}\n\\mathfrak{M}\n\n\n\n\n\n\n\n\n50\n\n\nN\n\n\n\\mathbf{N}\n\\mathbf{N}\n\n\n\\mathit{N}\n\\mathit{N}\n\n\n\\boldsymbol{N}\n\\boldsymbol{N}\n\n\n\\mathbb{N}\n\\mathbb{N}\n\n\n\\mathfrak{N}\n\\mathfrak{N}\n\n\n\n\n\n\n\n\n51\n\n\nO\n\n\n\\mathbf{O}\n\\mathbf{O}\n\n\n\\mathit{O}\n\\mathit{O}\n\n\n\\boldsymbol{O}\n\\boldsymbol{O}\n\n\n\\mathbb{O}\n\\mathbb{O}\n\n\n\\mathfrak{O}\n\\mathfrak{O}\n\n\n\n\n\n\n\n\n52\n\n\nP\n\n\n\\mathbf{P}\n\\mathbf{P}\n\n\n\\mathit{P}\n\\mathit{P}\n\n\n\\boldsymbol{P}\n\\boldsymbol{P}\n\n\n\\mathbb{P}\n\\mathbb{P}\n\n\n\\mathfrak{P}\n\\mathfrak{P}\n\n\n\n\n\n\n\n\n53\n\n\nQ\n\n\n\\mathbf{Q}\n\\mathbf{Q}\n\n\n\\mathit{Q}\n\\mathit{Q}\n\n\n\\boldsymbol{Q}\n\\boldsymbol{Q}\n\n\n\\mathbb{Q}\n\\mathbb{Q}\n\n\n\\mathfrak{Q}\n\\mathfrak{Q}\n\n\n\n\n\n\n\n\n54\n\n\nR\n\n\n\\mathbf{R}\n\\mathbf{R}\n\n\n\\mathit{R}\n\\mathit{R}\n\n\n\\boldsymbol{R}\n\\boldsymbol{R}\n\n\n\\mathbb{R}\n\\mathbb{R}\n\n\n\\mathfrak{R}\n\\mathfrak{R}\n\n\n\n\n\n\n\n\n55\n\n\nS\n\n\n\\mathbf{S}\n\\mathbf{S}\n\n\n\\mathit{S}\n\\mathit{S}\n\n\n\\boldsymbol{S}\n\\boldsymbol{S}\n\n\n\\mathbb{S}\n\\mathbb{S}\n\n\n\\mathfrak{S}\n\\mathfrak{S}\n\n\n\n\n\n\n\n\n56\n\n\nT\n\n\n\\mathbf{T}\n\\mathbf{T}\n\n\n\\mathit{T}\n\\mathit{T}\n\n\n\\boldsymbol{T}\n\\boldsymbol{T}\n\n\n\\mathbb{T}\n\\mathbb{T}\n\n\n\\mathfrak{T}\n\\mathfrak{T}\n\n\n\n\n\n\n\n\n57\n\n\nU\n\n\n\\mathbf{U}\n\\mathbf{U}\n\n\n\\mathit{U}\n\\mathit{U}\n\n\n\\boldsymbol{U}\n\\boldsymbol{U}\n\n\n\\mathbb{U}\n\\mathbb{U}\n\n\n\\mathfrak{U}\n\\mathfrak{U}\n\n\n\n\n\n\n\n\n58\n\n\nV\n\n\n\\mathbf{V}\n\\mathbf{V}\n\n\n\\mathit{V}\n\\mathit{V}\n\n\n\\boldsymbol{V}\n\\boldsymbol{V}\n\n\n\\mathbb{V}\n\\mathbb{V}\n\n\n\\mathfrak{V}\n\\mathfrak{V}\n\n\n\n\n\n\n\n\n59\n\n\nW\n\n\n\\mathbf{W}\n\\mathbf{W}\n\n\n\\mathit{W}\n\\mathit{W}\n\n\n\\boldsymbol{W}\n\\boldsymbol{W}\n\n\n\\mathbb{W}\n\\mathbb{W}\n\n\n\\mathfrak{W}\n\\mathfrak{W}\n\n\n\n\n\n\n\n\n60\n\n\nX\n\n\n\\mathbf{X}\n\\mathbf{X}\n\n\n\\mathit{X}\n\\mathit{X}\n\n\n\\boldsymbol{X}\n\\boldsymbol{X}\n\n\n\\mathbb{X}\n\\mathbb{X}\n\n\n\\mathfrak{X}\n\\mathfrak{X}\n\n\n\n\n\n\n\n\n61\n\n\nY\n\n\n\\mathbf{Y}\n\\mathbf{Y}\n\n\n\\mathit{Y}\n\\mathit{Y}\n\n\n\\boldsymbol{Y}\n\\boldsymbol{Y}\n\n\n\\mathbb{Y}\n\\mathbb{Y}\n\n\n\\mathfrak{Y}\n\\mathfrak{Y}\n\n\n\n\n\n\n\n\n62\n\n\nZ\n\n\n\\mathbf{Z}\n\\mathbf{Z}\n\n\n\\mathit{Z}\n\\mathit{Z}\n\n\n\\boldsymbol{Z}\n\\boldsymbol{Z}\n\n\n\\mathbb{Z}\n\\mathbb{Z}\n\n\n\\mathfrak{Z}\n\\mathfrak{Z}\n\n\n\n\n\n\n\n\n\u5e0c\u4f2f\u6765\u5b57\u6bcd\n\n\n\u8bed\u6cd5\n\\aleph\\beth\\gimel\\daleth\n\u6548\u679c\n\n\\aleph\\beth\\gimel\\daleth\n\\aleph\\beth\\gimel\\daleth\n\n\n\u62ec\u53f7\n\n\n\n\n\n\n\n\n\u529f\u80fd\n\n\n\u8bed\u6cd5\n\n\n\u663e\u793a\n\n\n\n\n\n\n\n\n\n\n\u5706\u62ec\u53f7-\u5c0f\u62ec\u53f7\n\n\n\\left( \\frac{a}{b} \\right)\n\n\n\\left( \\frac{a}{b} \\right)\n\\left( \\frac{a}{b} \\right)\n\n\n\n\n\n\n\u65b9\u62ec\u53f7-\u4e2d\u62ec\u53f7\n\n\n\\left[ \\frac{a}{b} \\right]\n\n\n\\left[ \\frac{a}{b} \\right]\n\\left[ \\frac{a}{b} \\right]\n\n\n\n\n\n\n\u82b1\u62ec\u53f7\uff0c\u5927\u62ec\u53f7\n\n\n\\left{ \\frac{a}{b} \\right}\n\n\n\\left\\{ \\frac{a}{b} \\right\\}\n\\left\\{ \\frac{a}{b} \\right\\}\n\n\n\n\n\n\n\u89d2\u62ec\u53f7\n\n\n\\left \\langle \\frac{a}{b} \\right \\rangle\n\n\n\\left\\langle \\frac{a}{b} \\right \\rangle\n\\left\\langle \\frac{a}{b} \\right \\rangle\n\n\n\n\n\n\n\u5355\u7ad6\u7ebf-\u7edd\u5bf9\u503c\n\n\n\\left| \\frac{a}{b} \\right|\n\n\n\\left\\| \\frac{a}{b} \\right\\|\n\\left\\| \\frac{a}{b} \\right\\|\n\n\n\n\n\n\n\u53cc\u7ad6\u7ebf-\u8303\n\n\n\\left| \\frac{a}{b} \\right|\n\n\n$ \\left | \\frac{a}{b} \\right | $\n\n\n\n\n\n\n\u53d6\u6574\n\n\n\\left \\lfloor \\frac{a}{b} \\right \\rfloor\n\n\n\\left \\lfloor \\frac{a}{b} \\right \\rfloor\n\\left \\lfloor \\frac{a}{b} \\right \\rfloor\n\n\n\n\n\n\n\u53d6\u9876\n\n\n\\left \\lceil \\frac{c}{d} \\right \\rceil\n\n\n\\left \\lceil \\frac{c}{d} \\right \\rceil\n\\left \\lceil \\frac{c}{d} \\right \\rceil\n\n\n\n\n\n\n\u659c\u7ebf\u4e0e\u53cd\u659c\u7ebf\n\n\n\\left / \\frac{a}{b} \\right \\backslash\n\n\n$ \\left / \\frac{a}{b} \\right \\backslash $\n\n\n\n\n\n\n\u4e0a\u4e0b\u7bad\u5934\n\n\n\\left \\uparrow \\frac{a}{b} \\right \\downarrow\n\n\n\\left \\uparrow \\frac{a}{b} \\right \\downarrow\n\\left \\uparrow \\frac{a}{b} \\right \\downarrow\n\n\n\n\n\n\n\n\n\\left \\Uparrow \\frac{a}{b} \\right \\Downarrow\n\n\n\\left \\Uparrow \\frac{a}{b} \\right \\Downarrow\n\\left \\Uparrow \\frac{a}{b} \\right \\Downarrow\n\n\n\n\n\n\n\n\n\\left \\updownarrow \\frac{a}{b} \\right \\Updownarrow\n\n\n\\left \\updownarrow \\frac{a}{b} \\right \\Updownarrow\n\\left \\updownarrow \\frac{a}{b} \\right \\Updownarrow\n\n\n\n\n\n\n\u6df7\u5408\u62ec\u53f7\n\n\n\\left [ 0,1 \\right )\n\n\n$ \\left [ 0,1 \\right )  $\n\n\n\n\n\n\n\u5355\u5de6\u62ec\u53f7\n\n\n\\left { \\frac{a}{b} \\right .\n\n\n\\left \\{ \\frac{a}{b} \\right .\n\\left \\{ \\frac{a}{b} \\right .\n\n\n\n\n\n\n\u5355\u53f3\u62ec\u53f7\n\n\n\\left . \\frac{a}{b} \\right }\n\n\n\\left . \\frac{a}{b} \\right \\}\n\\left . \\frac{a}{b} \\right \\}\n\n\n\n\n\n\n\n\n\u5907\u6ce8\uff1a\n\u53ef\u4ee5\u4f7f\u7528 \\big, \\Big, \\bigg, \\Bigg \u63a7\u5236\u62ec\u53f7\u7684\u5927\u5c0f\uff0c\u6bd4\u5982\u4ee3\u7801\n\\Bigg ( \\bigg [ \\Big { \\big \\langle \\left | | \\frac{a}{b} | \\right | \\big\\rangle \\Big } \\bigg ] \\Bigg )\n\u3000\u663e\u793a\ufe30\n\n\\Bigg ( \\bigg [ \\Big \\{ \\big \\langle \\left | \\| x \\| \\right | \\big \\rangle \\Big \\} \\bigg ] \\Bigg )\n\\Bigg ( \\bigg [ \\Big \\{ \\big \\langle \\left | \\| x \\| \\right | \\big \\rangle \\Big \\} \\bigg ] \\Bigg )\n\n\n\u7a7a\u683c\n\n\n\u6ce8\u610fTEX\u80fd\u591f\u81ea\u52a8\u5904\u7406\u5927\u591a\u6570\u7684\u7a7a\u683c\uff0c\u4f46\u662f\u60a8\u6709\u65f6\u5019\u9700\u8981\u81ea\u5df1\u6765\u63a7\u5236\u3002\n\n\n\n\n\n\n\n\n\u529f\u80fd\n\n\n\u8bed\u6cd5\n\n\n\u663e\u793a\n\n\n\n\n\n\n\n\n\n\n2\u4e2aquad\u7a7a\u683c\n\n\n\\alpha\\qquad\\beta\n\n\n$\\alpha\\qquad\\beta 2m $\n\n\n\n\n\n\nquad\u7a7a\u683c\n\n\n\\alpha\\quad\\beta\n\n\n$\\alpha\\quad\\beta  m $\n\n\n\n\n\n\n\u5927\u7a7a\u683c\n\n\n\\alpha \\beta\n\n\n\\alpha\\ \\beta \\frac{m}{3}\n\\alpha\\ \\beta \\frac{m}{3}\n\n\n\n\n\n\n\u4e2d\u7b49\u7a7a\u683c\n\n\n\\alpha\\;\\beta\n\n\n\\alpha\\;\\beta \\frac{2m}{7}\n\\alpha\\;\\beta \\frac{2m}{7}\n\n\n\n\n\n\n\u5c0f\u7a7a\u683c\n\n\n\\alpha\\,\\beta\n\n\n\\alpha\\,\\beta \\frac{m}{6}\n\\alpha\\,\\beta \\frac{m}{6}\n\n\n\n\n\n\n\u6ca1\u6709\u7a7a\u683c\n\n\n\\alpha\\beta\n\n\n$\\alpha\\beta  0 $\n\n\n\n\n\n\n\u7d27\u8d34\n\n\n\\alpha!\\beta\n\n\n\\alpha\\!\\beta -\\frac{m}{6}\n\\alpha\\!\\beta -\\frac{m}{6}\n\n\n\n\n\n\n\n\n\u5c0f\u578b\u6570\u5b66\u516c\u5f0f\n\u5f53\u8981\u628a\u5206\u6570\u7b49\u516c\u5f0f\u653e\u8fdb\u6587\u5b57\u4e2d\u7684\u65f6\u5019\uff0c\u6211\u4eec\u9700\u8981\u4f7f\u7528\u5c0f\u578b\u7684\u6570\u5b66\u516c\u5f0f\u3002\n\u82f9\u679c\u539f\u4ea7\u4e8e\u6b27\u6d32\u548c\u4e2d\u4e9a\u7ec6\u4e9a\u3002\u54c8\u8428\u514b\u7684\u963f\u62c9\u6728\u56fe\u4e0e\u65b0\u7586\u963f\u529b\u9ebb\u91cc\u6709\u82f9\u679c\u57ce\u7684\u7f8e\u8a89\u3002\u4e2d\u56fd\u53e4\u4ee3\u7684\u6797\u6a8e\u3001\u67f0\u3001\u82b1\u7ea2\u7b49\u6c34\u679c\u88ab\u8ba4\u4e3a\u662f\u4e2d\u56fd\u571f\u751f\u82f9\u679c\u54c1\u79cd\u6216\u4e0e\u82f9\u679c\u76f8\u4f3c\u7684\u6c34\u679c\u3002\u82f9\u679c\u5728\u4e2d\u56fd\u7684\u683d\u57f9\u8bb0\u5f55\u53ef\u4ee5\u8ffd\u6eaf\u81f3\u897f\u6c49\u65f6\u671f\uff0c\u6c49\u6b66\u5e1d\u65f6\uff0c10 \u7684 f(x)=5+\\frac{1}{5} \u662f 2\u3002\u4e0a\u6797\u82d1\u4e2d\u66fe\u683d\u57f9\u6797\u6a8e\u548c\u67f0\uff0c\u5f53\u65f6\u591a\u7528\u4e8e\u85b0\u9999\u8863\u88f3\u7b49\uff0c\u4ea6\u6709\u7f6e\u4e8e\u5e8a\u5934\u5f53\u9999\u718f\u6216\u7f6e\u4e8e\u8863\u670d\u521d\u4f5c\u4e3a\u9999\u56ca\uff0c\u603b\u4e4b\u4e00\u822c\u4e0d\u98df\u7528\u3002\u4f46\u4e5f\u6709\u770b\u6cd5\u8ba4\u4e3a\uff0c\u6797\u6a8e\u548c\u67f0\u662f\u73b0\u5728\u7684\u6c99\u679c\uff0c\u66fe\u88ab\u8bef\u8ba4\u4e3a\u82f9\u679c\uff0c\u771f\u6b63\u610f\u4e49\u4e0a\u7684\u82f9\u679c\u662f\u5143\u671d\u65f6\u671f\u4ece\u4e2d\u4e9a\u5730\u533a\u4f20\u5165\u4e2d\u56fd\uff0c\u5f53\u65f6\u53ea\u6709\u5728\u5bab\u5ef7\u624d\u53ef\u4eab\u7528\u3002\n\u2717\u5e76\u4e0d\u597d\u770b\u3002\n\u82f9\u679c\u539f\u4ea7\u4e8e\u6b27\u6d32\u548c\u4e2d\u4e9a\u7ec6\u4e9a\u3002\u54c8\u8428\u514b\u7684\u963f\u62c9\u6728\u56fe\u4e0e\u65b0\u7586\u963f\u529b\u9ebb\u91cc\u6709\u82f9\u679c\u57ce\u7684\u7f8e\u8a89\u3002\u4e2d\u56fd\u53e4\u4ee3\u7684\u6797\u6a8e\u3001\u67f0\u3001\u82b1\u7ea2\u7b49\u6c34\u679c\u88ab\u8ba4\u4e3a\u662f\u4e2d\u56fd\u571f\u751f\u82f9\u679c\u54c1\u79cd\u6216\u4e0e\u82f9\u679c\u76f8\u4f3c\u7684\u6c34\u679c\u3002\u82f9\u679c\u5728\u4e2d\u56fd\u7684\u683d\u57f9\u8bb0\u5f55\u53ef\u4ee5\u8ffd\u6eaf\u81f3\u897f\u6c49\u65f6\u671f\uff0c\u6c49\u6b66\u5e1d\u65f6\uff0c10 \u7684 \\begin{smallmatrix} f(x)=5+\\frac{1}{5} \\end{smallmatrix}  \u662f 2\u3002\u4e0a\u6797\u82d1\u4e2d\u66fe\u683d\u57f9\u6797\u6a8e\u548c\u67f0\uff0c\u5f53\u65f6\u591a\u7528\u4e8e\u85b0\u9999\u8863\u88f3\u7b49\uff0c\u4ea6\u6709\u7f6e\u4e8e\u5e8a\u5934\u5f53\u9999\u718f\u6216\u7f6e\u4e8e\u8863\u670d\u521d\u4f5c\u4e3a\u9999\u56ca\uff0c\u603b\u4e4b\u4e00\u822c\u4e0d\u98df\u7528\u3002\u4f46\u4e5f\u6709\u770b\u6cd5\u8ba4\u4e3a\uff0c\u6797\u6a8e\u548c\u67f0\u662f\u73b0\u5728\u7684\u6c99\u679c\uff0c\u66fe\u88ab\u8bef\u8ba4\u4e3a\u82f9\u679c\uff0c\u771f\u6b63\u610f\u4e49\u4e0a\u7684\u82f9\u679c\u662f\u5143\u671d\u65f6\u671f\u4ece\u4e2d\u4e9a\u5730\u533a\u4f20\u5165\u4e2d\u56fd\uff0c\u5f53\u65f6\u53ea\u6709\u5728\u5bab\u5ef7\u624d\u53ef\u4eab\u7528\u3002\n\u2713\u597d\u770b\u4e9b\u4e86\u3002\n\u53ef\u4ee5\u4f7f\u7528\n\\begin{smallmatrix}...\\end{smallmatrix}", 
            "title": "latex\u8bed\u6cd5"
        }, 
        {
            "location": "/\u65e5\u5e38/\u5e38\u7528/latex\u8bed\u6cd5/#_1", 
            "text": "\u8bed\u6cd5  \u6548\u679c  \u8bed\u6cd5  \u6548\u679c      \\bar{x}  \\bar{x} \\bar{x}  \\acute{\\eta}  \\acute{\\eta} \\acute{\\eta}    \\check{\\alpha}  \\check{\\alpha} \\check{\\alpha}  \\breve{a}  $ \\breve{a}$    \\grave{\\eta}  \\grave{\\eta} \\grave{\\eta}  \\ddot{y}  \\ddot{y} \\ddot{y}    \\dot{x}  $\\dot{x} $  \\hat{\\alpha}  \\hat{\\alpha} \\hat{\\alpha}    \\tilde{\\iota}  \\tilde{\\iota} \\tilde{\\iota}   $$", 
            "title": "\u58f0\u8c03"
        }, 
        {
            "location": "/\u65e5\u5e38/\u5e38\u7528/latex\u8bed\u6cd5/#_2", 
            "text": "\u8bed\u6cd5  \u6548\u679c  \u8bed\u6cd5  \u6548\u679c  \u8bed\u6cd5  \u6548\u679c      \\sin\\theta  \\sin\\theta \\sin\\theta  \\cos\\theta  \\cos\\theta \\cos\\theta  \\tan\\theta  \\tan\\theta \\tan\\theta    \\arcsin\\frac{L}{r}  \\arcsin\\frac{L}{r} \\arcsin\\frac{L}{r}  \\arccos\\frac{T}{r}  \\arccos\\frac{T}{r} \\arccos\\frac{T}{r}  \\arctan\\frac{L}{T}  \\arctan\\frac{L}{T} \\arctan\\frac{L}{T}    \\sinh g  \\sinh g \\sinh g  \\cosh h  \\cosh h \\cosh h  \\tanh i  \\tanh i \\tanh i    \\operatorname{sh}j  \\operatorname{sh}j \\operatorname{sh}j  \\operatorname{argsh}k  \\operatorname{argsh}k \\operatorname{argsh}k      \\operatorname{ch}h  \\operatorname{ch}h \\operatorname{ch}h  \\operatorname{argch}l  \\operatorname{argch}l \\operatorname{argch}l      \\operatorname{th}i  \\operatorname{th}i \\operatorname{th}i  \\operatorname{argth}m  \\operatorname{argth}m \\operatorname{argth}m      \\limsup S  \\limsup S \\limsup S  \\liminf I  \\liminf I \\liminf I  \\lim_{t\\to n}T  \\lim_{t\\to n}T \\lim_{t\\to n}T    \\max H  \\max H \\max H  \\min L  \\min L \\min L      \\inf s  \\inf s \\inf s  \\sup t  \\sup t \\sup t      \\exp!t  \\exp\\!t \\exp\\!t  \\ln!X  \\ln\\!X \\ln\\!X      \\lg X  \\lg X \\lg X  \\log X  \\log X \\log X  \\log_\\alpha X  \\log_\\alpha X \\log_\\alpha X    \\ker x  \\ker x \\ker x  \\deg x  \\deg x \\deg x  \\gcd(T,U,V,W,X)  \\gcd(T,U,V,W,X) \\gcd(T,U,V,W,X)    \\Pr x  \\Pr x \\Pr x  \\det x  \\det x \\det x  \\hom x  \\hom x \\hom x    \\arg x  \\arg x \\arg x  \\dim x  \\dim x \\dim x", 
            "title": "\u51fd\u6570"
        }, 
        {
            "location": "/\u65e5\u5e38/\u5e38\u7528/latex\u8bed\u6cd5/#_3", 
            "text": "\u8bed\u6cd5  \u6548\u679c      k'(x)=\\lim_{\\Delta x\\to 0}\\frac{k(x)-k(x-\\Delta x)}{\\Delta x}  k'(x)=\\lim_{\\Delta x\\to 0}\\frac{k(x)-k(x-\\Delta x)}{\\Delta x} k'(x)=\\lim_{\\Delta x\\to 0}\\frac{k(x)-k(x-\\Delta x)}{\\Delta x}", 
            "title": "\u5b9e\u4f8b"
        }, 
        {
            "location": "/\u65e5\u5e38/\u5e38\u7528/latex\u8bed\u6cd5/#_4", 
            "text": "\u8bed\u6cd5  \u6548\u679c  \u8bed\u6cd5  \u6548\u679c      \\pmod{m}  \\pmod{m} \\pmod{m}  a \\bmod b  a \\bmod b a \\bmod b", 
            "title": "\u540c\u4f59"
        }, 
        {
            "location": "/\u65e5\u5e38/\u5e38\u7528/latex\u8bed\u6cd5/#_5", 
            "text": "\u8bed\u6cd5  \u6548\u679c  \u8bed\u6cd5  \u6548\u679c  \u8bed\u6cd5  \u6548\u679c      \\nabla  \\nabla \\nabla  \\partial x  \\partial x \\partial x  \\mathrm{d}x\\  \\mathrm{d}x \\mathrm{d}x    \\dot x  \\dot x \\dot x  \\ddot y  \\ddot y \\ddot y  \\dddot z  \\dddot z \\dddot z", 
            "title": "\u5fae\u5206"
        }, 
        {
            "location": "/\u65e5\u5e38/\u5e38\u7528/latex\u8bed\u6cd5/#_6", 
            "text": "\u8bed\u6cd5  \u6548\u679c  \u8bed\u6cd5  \u6548\u679c  \u8bed\u6cd5  \u6548\u679c      \\forall  \\forall \\forall  \\exists  \\exists \\exists      \\emptyset  \\emptyset \\emptyset  \\varnothing  \\varnothing \\varnothing      \\in  \\in \\in  \\not\\in  \\not\\in \\not\\in  \\notin  \\notin \\notin    \\subset  \\subset \\subset  \\subseteq  \\subseteq \\subseteq      \\supset  \\supset \\supset  \\supseteq  \\supseteq \\supseteq      \\cap  \\cap \\cap  \\bigcap  \\bigcap \\bigcap      \\cup  \\cup \\cup  \\bigcup  \\bigcup \\bigcup      \\biguplus  \\biguplus \\biguplus        \\sqsubset  \\sqsubset \\sqsubset  \\sqsubseteq  \\sqsubseteq \\sqsubseteq      \\sqsupset  \\sqsupset \\sqsupset  \\sqsupseteq  \\sqsupseteq \\sqsupseteq      \\sqcup  \\sqcup \\sqcup  \\bigsqcup  \\bigsqcup \\bigsqcup      \\sqcap  \\sqcap \\sqcap", 
            "title": "\u96c6\u5408"
        }, 
        {
            "location": "/\u65e5\u5e38/\u5e38\u7528/latex\u8bed\u6cd5/#_7", 
            "text": "\u8bed\u6cd5  \u6548\u679c  \u8bed\u6cd5  \u6548\u679c  \u8bed\u6cd5  \u6548\u679c      q  q q  \\bar{q} \\to p  \\bar{q} \\to p \\bar{q} \\to p      \\land  \\land \\land  \\wedge  \\wedge \\wedge  \\bigwedge  \\bigwedge \\bigwedge    \\lor  \\lor \\lor  \\vee  \\vee \\vee  \\bigvee  \\bigvee \\bigvee    \\lnot q  \\lnot q \\lnot q  \\neg q  \\neg q \\neg q      \\setminus  \\setminus \\setminus  \\smallsetminus  \\smallsetminus \\smallsetminus      \\sqrt{3}  \\sqrt{3} \\sqrt{3}  \\sqrt[n]{3}  \\sqrt[n]{3} \\sqrt[n]{3}", 
            "title": "\u903b\u8f91"
        }, 
        {
            "location": "/\u65e5\u5e38/\u5e38\u7528/latex\u8bed\u6cd5/#_8", 
            "text": "\u8bed\u6cd5  \u6548\u679c  \u8bed\u6cd5  \u6548\u679c  \u8bed\u6cd5  \u6548\u679c      \\sim  \\sim \\sim  \\approx  \\approx \\approx      \\simeq  \\simeq \\simeq  \\cong  \\cong \\cong  \\dot=  \\dot= \\dot=    \\lll  \\lll \\lll  \\ll  \\ll \\ll  =  =\\, =\\,    \\ggg  \\ggg \\ggg  \\gg  \\gg \\gg      \\geq  \\geq \\geq  \\geqq  \\geqq \\geqq   \\, >\\,    \\leq  \\leq \\leq  \\leqq  \\leqq \\leqq   \\, <\\,    \\equiv  \\equiv \\equiv  \\not\\equiv  \\not\\equiv \\not\\equiv  \\gtrless  \\gtrless \\gtrless    \\ne  \\ne \\ne  \\neq  \\neq \\neq      \\propto  \\propto \\propto   $$      \\pm  \\pm \\pm  \\mp  \\mp \\mp      \\because  \\because \\because  \\therefore  \\therefore \\therefore", 
            "title": "\u5173\u7cfb\u7b26\u53f7"
        }, 
        {
            "location": "/\u65e5\u5e38/\u5e38\u7528/latex\u8bed\u6cd5/#_9", 
            "text": "\u8bed\u6cd5  \u6548\u679c      \\Delta ABC\\sim\\Delta XYZ  \\Delta ABC\\sim\\Delta XYZ \\Delta ABC\\sim\\Delta XYZ    \\sqrt{3}\\approx1.732050808\\ldots  \\sqrt{3}\\approx1.732050808\\ldots \\sqrt{3}\\approx1.732050808\\ldots    \\acute{a}  \\acute{a} \\acute{a}     $$      \\begin{align}\n    \\because\\begin{cases}\n        a_1x^2+bx^2+c \\gtrless 0 \\gtrless a_2x^2+bx^2+c\n        \\\\\n        a_1   0   a_2\n    \\end{cases}\n\\\\\n    \\therefore\n        \\frac{-b\\pm\\sqrt{b^2-4a_1c}}{2a_1}{}\n        _\\lessgtr^\\gtrless x_\\lessgtr^\\gtrless\n        \\frac{-b\\pm\\sqrt{b^2-4a_2c}}{2a_2}\n\\end{align}  \\begin{align}\n    \\because\\begin{cases}\n        a_1x^2+bx^2+c \\gtrless 0 \\gtrless a_2x^2+bx^2+c\n        \\\\\n        a_1 > 0 > a_2\n    \\end{cases}\n\\\\\n    \\therefore\n        \\frac{-b\\pm\\sqrt{b^2-4a_1c}}{2a_1}{}\n        _\\lessgtr^\\gtrless x_\\lessgtr^\\gtrless\n        \\frac{-b\\pm\\sqrt{b^2-4a_2c}}{2a_2}\n\\end{align}", 
            "title": "\u5b9e\u4f8b"
        }, 
        {
            "location": "/\u65e5\u5e38/\u5e38\u7528/latex\u8bed\u6cd5/#_10", 
            "text": "\u8bed\u6cd5  \u8bed\u6cd5  \u6548\u679c      \u83f1\u5f62  \\Diamond  \\Diamond \\Diamond    \u6b63\u65b9\u5f62  \\Box  \\Box \\Box    \u4e09\u89d2\u5f62  \\Delta  \\Delta \\Delta    \u56fe\u578b  \\triangle  \\triangle \\triangle    \u89d2\u540d  \\angle\\alpha\\beta\\gamma  \\angle\\alpha\\beta \\gamma \\angle\\alpha\\beta \\gamma    \u5782\u76f4  \\perp  \\perp \\perp", 
            "title": "\u56fe\u5f62"
        }, 
        {
            "location": "/\u65e5\u5e38/\u5e38\u7528/latex\u8bed\u6cd5/#_11", 
            "text": "\u8bed\u6cd5  \u6548\u679c  \u8bed\u6cd5  \u6548\u679c  \u8bed\u6cd5  \u6548\u679c       $$   $$   $$     $$   $$   $$    \\leftarrow  \\leftarrow \\leftarrow  \\gets  \\gets \\gets  \\rightarrow  \\rightarrow \\rightarrow    \\to  \\to \\to  \\leftrightarrow  \\leftrightarrow \\leftrightarrow  \\longleftarrow  \\longleftarrow \\longleftarrow    \\longrightarrow  \\longrightarrow \\longrightarrow  \\mapsto  \\mapsto \\mapsto  \\longmapsto  \\longmapsto \\longmapsto    \\hookrightarrow  \\hookrightarrow \\hookrightarrow  \\hookleftarrow  \\hookleftarrow \\hookleftarrow  \\nearrow  \\nearrow \\nearrow    \\searrow  \\searrow \\searrow  \\swarrow  \\swarrow \\swarrow  \\nwarrow  \\nwarrow \\nwarrow    \\uparrow  \\uparrow \\uparrow  \\downarrow  \\downarrow \\downarrow  \\updownarrow  \\updownarrow \\updownarrow    \\rightharpoonup  \\rightharpoonup \\rightharpoonup  \\rightharpoondown  \\rightharpoondown \\rightharpoondown      \\leftharpoonup  \\leftharpoonup \\leftharpoonup  \\leftharpoondown  \\leftharpoondown \\leftharpoondown      \\upharpoonleft  \\upharpoonleft \\upharpoonleft  \\upharpoonright  \\upharpoonright \\upharpoonright      \\downharpoonleft  \\downharpoonleft \\downharpoonleft  \\downharpoonright  \\downharpoonright \\downharpoonright      \\Leftarrow  \\Leftarrow \\Leftarrow  \\Rightarrow  \\Rightarrow \\Rightarrow  \\Leftrightarrow  \\Leftrightarrow \\Leftrightarrow    \\Longleftarrow  \\Longleftarrow \\Longleftarrow  \\Longrightarrow  \\Longrightarrow \\Longrightarrow  \\Longleftrightarrow (or \\iff)  \\Longleftrightarrow \\Longleftrightarrow    \\Uparrow  \\Uparrow \\Uparrow  \\Downarrow  \\Downarrow \\Downarrow  \\Updownarrow  \\Updownarrow \\Updownarrow", 
            "title": "\u7bad\u5934"
        }, 
        {
            "location": "/\u65e5\u5e38/\u5e38\u7528/latex\u8bed\u6cd5/#_12", 
            "text": "\u8bed\u6cd5  \u6548\u679c  \u8bed\u6cd5  \u6548\u679c  \u8bed\u6cd5  \u6548\u679c      \\eth  \\eth \\eth  \\S  \\S \\S  \\P  \\\\P \\\\P    \\%  \\% \\%  \\dagger  \\dagger \\dagger  \\ddagger  \\ddagger \\ddagger    \\star  \\star \\star  *  * *  \\ldots  \\ldots \\ldots    \\smile  \\smile \\smile  \\frown  \\frown \\frown  \\wr  \\wr \\wr    \\oplus  \\oplus \\oplus  \\bigoplus  \\bigoplus \\bigoplus  \\otimes  \\otimes \\otimes    \\bigotimes  \\bigotimes \\bigotimes  \\times  \\times \\times  \\cdot  \\cdot \\cdot    \\div  \\div \\div  \\circ  \\circ \\circ  \\bullet  \\bullet \\bullet    \\bigodot  \\bigodot \\bigodot  \\boxtimes  \\boxtimes \\boxtimes  \\boxplus  \\boxplus \\boxplus    \\triangleleft  \\triangleleft \\triangleleft  \\triangleright  \\triangleright \\triangleright  \\infty  \\infty \\infty    \\bot  \\bot \\bot  \\top  \\top \\top  \\vdash  \\vdash \\vdash    \\vDash  \\vDash \\vDash  \\Vdash  \\Vdash \\Vdash  \\models  \\models \\models    \\lVert  \\lVert \\lVert  \\rVert  \\rVert \\rVert      \\imath  \\imath \\imath  \\hbar  \\hbar \\hbar  \\ell  \\ell \\ell    \\mho  \\mho \\mho  \\Finv  \\Finv \\Finv  \\Re  \\Re \\Re    \\Im  \\Im \\Im  \\wp  \\wp \\wp  \\complement  \\complement \\complement    \\diamondsuit  \\diamondsuit \\diamondsuit  \\heartsuit  \\heartsuit \\heartsuit      \\clubsuit  \\clubsuit \\clubsuit  \\spadesuit  \\spadesuit \\spadesuit      \\Game  \\Game \\Game  \\flat  \\flat \\flat  \\natural  \\natural \\natural     ### \u5b9e\u4f8b\n  | \u8bed\u6cd5    | \u6548\u679c    |  \u8bed\u6cd5  |  \u6548\u679c |  \u8bed\u6cd5  |  \u6548\u679c |\n  | :----:  |  :---:  | :----: |  :--: | :----: |  :--: | \n  |  | $$ |  | $$ |  | $$ |\n  |  | $$ |  | $$ |  | $$ |\n  ###\u5b9e\u4f8b2\n  | \u8bed\u6cd5    | \u6548\u679c    | \u8bed\u6cd5    | \u6548\u679c    | \n  | :----:  |  :---:  | :--: | :--:|\n  |  | $$ |  | $$ |    ### \u5b9e\u4f8b\n  | \u8bed\u6cd5    | \u6548\u679c    | \n  | :----:  |  :---:  | \n  |  | $$ |", 
            "title": "\u7279\u6b8a\u7b26\u53f7"
        }, 
        {
            "location": "/\u65e5\u5e38/\u5e38\u7528/latex\u8bed\u6cd5/#_13", 
            "text": "\u529f\u80fd  \u8bed\u6cd5  \u6548\u679c      \u4e0a\u6807  a^2  a^2 a^2    \u4e0b\u6807  a_2  a_2 a_2    \u7ec4\u5408  a^{2+2}  a^{2+2} a^{2+2}    \u7ec4\u5408  a_{i,j}  a_{i,j} a_{i,j}    \u7ed3\u5408\u4e0a\u4e0b\u6807  x_2^3  $ x_2^3$    \u524d\u7f6e\u4e0a\u4e0b\u6807  {}_1 2X_3 4  {}_1^2X_3^4 {}_1^2X_3^4    \u5bfc\u6570\uff08HTML\uff09  x'  $ x'$    \u5bfc\u6570\uff08PNG\uff09  x^\\prime  x^\\prime x^\\prime    \u5bfc\u6570\uff08\u9519\u8bef\uff09  x\\prime  x\\prime x\\prime    \u5bfc\u6570\u70b9  \\dot{x}  \\dot{x} \\dot{x}    \u5bfc\u6570\u70b9  \\ddot{y}  \\ddot{y} \\ddot{y}    \u5411\u91cf  \\vec{c}  \\vec{c} \\vec{c}     \\overleftarrow{a b}  \\overleftarrow{a b} \\overleftarrow{a b}     \\overrightarrow{c d}  \\overrightarrow{c d} \\overrightarrow{c d}     \\widehat{e f g}  \\widehat{e f g} \\widehat{e f g}    \u4e0a\u5f27 (\u6ce8: \u6b63\u786e\u5e94\u8be5\u7528 \\overarc, \u4f46\u5728\u8fd9\u91cc\u884c\u4e0d\u901a\u3002\u8981\u7528\u5efa\u8bae\u7684\u8bed\u6cd5\u4f5c\u4e3a\u89e3\u51b3\u529e\u6cd5)  \\overset{\\frown} {AB}  \\overset{\\frown} {AB} \\overset{\\frown} {AB}    \u4e0a\u5212\u7ebf  \\overline{h i j}  \\overline{h i j} \\overline{h i j}    \u4e0b\u5212\u7ebf  \\underline{k l m}  \\underline{k l m} \\underline{k l m}    \u4e0a\u62ec\u53f7  \\overbrace{1+2+\\cdots+100}  \\overbrace{1+2+\\cdots+100} \\overbrace{1+2+\\cdots+100}     \\begin{matrix} 5050 \\ \\overbrace{ 1+2+\\cdots+100 } \\end{matrix}  \\begin{matrix} 5050 \\ \\overbrace{ 1+2+\\cdots+100 } \\end{matrix}    \u4e0b\u62ec\u53f7  \\underbrace{a+b+\\cdots+z}  \\underbrace{a+b+\\cdots+z} \\underbrace{a+b+\\cdots+z}     \\begin{matrix} \\underbrace{ a+b+\\cdots+z } \\ 26 \\end{matrix}  \\begin{matrix} \\underbrace{ a+b+\\cdots+z } \\ 26 \\end{matrix}    \u6c42\u548c  \\sum_{k=1}^N k^2  \\sum_{k=1}^N k^2 \\sum_{k=1}^N k^2     \\begin{matrix} \\sum_{k=1}^N k^2 \\end{matrix}  \\begin{matrix} \\sum_{k=1}^N k^2 \\end{matrix}    \u6c42\u79ef  \\prod_{i=1}^N x_i  \\prod_{i=1}^N x_i \\prod_{i=1}^N x_i     \\begin{matrix} \\prod_{i=1}^N x_i \\end{matrix}  \\begin{matrix} \\prod_{i=1}^N x_i \\end{matrix}    \u4e0a\u79ef  \\coprod_{i=1}^N x_i  \\coprod_{i=1}^N x_i \\coprod_{i=1}^N x_i     \\begin{matrix} \\coprod_{i=1}^N x_i \\end{matrix}  \\begin{matrix} \\coprod_{i=1}^N x_i \\end{matrix}    \u6781\u9650  \\lim_{n \\to \\infty}x_n  \\lim_{n \\to \\infty}x_n \\lim_{n \\to \\infty}x_n     \\begin{matrix} \\lim_{n \\to \\infty}x_n \\end{matrix}  \\begin{matrix} \\lim_{n \\to \\infty}x_n \\end{matrix}    \u79ef\u5206  \\int_{-N}^{N} e^x\\, dx  \\int_{-N}^{N} e^x\\, dx \\int_{-N}^{N} e^x\\, dx     \\begin{matrix} \\int_{-N}^{N} e^x\\, dx \\end{matrix}  \\begin{matrix} \\int_{-N}^{N} e^x\\, dx \\end{matrix}    \u53cc\u91cd\u79ef\u5206  \\iint_{D}^{W} \\, dx\\,dy  \\iint_{D}^{W} \\, dx\\,dy \\iint_{D}^{W} \\, dx\\,dy    \u4e09\u91cd\u79ef\u5206  \\iiint_{E}^{V} \\, dx\\,dy\\,dz  \\iiint_{E}^{V} \\, dx\\,dy\\,dz \\iiint_{E}^{V} \\, dx\\,dy\\,dz    \u56db\u91cd\u79ef\u5206  \\iiiint_{F}^{U} \\, dx\\,dy\\,dz\\,dt  $ \\iiiint_{F}^{U} \\, dx\\,dy\\,dz\\,dt$    \u95ed\u5408\u7684\u66f2\u7ebf\u3001\u66f2\u9762\u79ef\u5206  \\oint_{C} x^3\\, dx + 4y^2\\, dy  \\oint_{C} x^3\\, dx + 4y^2\\, dy \\oint_{C} x^3\\, dx + 4y^2\\, dy    \u4ea4\u96c6  \\bigcap_1^{n} p  \\bigcap_1^{n} p \\bigcap_1^{n} p    \u5e76\u96c6  \\bigcup_1^{k} p  \\bigcup_1^{k} p \\bigcup_1^{k} p    \u5206\u6570  \\frac{2}{4}=0.5  \\frac{2}{4}=0.5 \\frac{2}{4}=0.5    \u5c0f\u578b\u5206\u6570  \\tfrac{2}{4} = 0.5  \\tfrac{2}{4} = 0.5 \\tfrac{2}{4} = 0.5    \u5927\u578b\u5206\u6570\uff08\u5d4c\u5957\uff09  \\cfrac{2}{c + \\cfrac{2}{d + \\cfrac{2}{4}}} = a  \\cfrac{2}{c + \\cfrac{2}{d + \\cfrac{2}{4}}} = a \\cfrac{2}{c + \\cfrac{2}{d + \\cfrac{2}{4}}} = a    \u5927\u578b\u5206\u6570\uff08\u4e0d\u5d4c\u5957\uff09  \\dfrac{2}{4} = 0.5 \\qquad \\dfrac{2}{c + \\dfrac{2}{d + \\dfrac{2}{4}}} = a  \\dfrac{2}{4} = 0.5 \\qquad \\dfrac{2}{c + \\dfrac{2}{d + \\dfrac{2}{4}}} = a \\dfrac{2}{4} = 0.5 \\qquad \\dfrac{2}{c + \\dfrac{2}{d + \\dfrac{2}{4}}} = a    \u4e8c\u9879\u5f0f\u7cfb\u6570  \\dbinom{n}{r}=\\binom{n}{n-r}=C n_r=C n_{n-r}  \\dbinom{n}{r}=\\binom{n}{n-r}=C^n_r=C^n_{n-r} \\dbinom{n}{r}=\\binom{n}{n-r}=C^n_r=C^n_{n-r}    \u5c0f\u578b\u4e8c\u9879\u5f0f\u7cfb\u6570  \\tbinom{n}{r}=\\tbinom{n}{n-r}=C n_r=C n_{n-r}  \\tbinom{n}{r}=\\tbinom{n}{n-r}=C^n_r=C^n_{n-r} \\tbinom{n}{r}=\\tbinom{n}{n-r}=C^n_r=C^n_{n-r}    \u5927\u578b\u4e8c\u9879\u5f0f\u7cfb\u6570  \\binom{n}{r}=\\dbinom{n}{n-r}=C n_r=C n_{n-r}  \\binom{n}{r}=\\dbinom{n}{n-r}=C^n_r=C^n_{n-r} \\binom{n}{r}=\\dbinom{n}{n-r}=C^n_r=C^n_{n-r}    \u77e9\u9635  \\begin{matrix} x   y \\ z   v \\end{matrix}  \\begin{matrix} x   y \\ z   v \\end{matrix}     \\begin{vmatrix} x   y \\ z   v \\end{vmatrix}  \\begin{vmatrix} x   y \\ z   v \\end{vmatrix}     \\begin{Vmatrix} x   y \\ z   v \\end{Vmatrix}  \\begin{Vmatrix} x   y \\ z   v \\end{Vmatrix}     \\begin{bmatrix} 0   \\cdots   0 \\ \\vdots   \\ddots   \\vdots \\ 0   \\cdots   0 \\end{bmatrix}  \\begin{bmatrix} 0   \\cdots   0 \\ \\vdots   \\ddots   \\vdots \\ 0   \\cdots   0\\end{bmatrix}     \\begin{Bmatrix} x   y \\ z   v \\end{Bmatrix}  \\begin{Bmatrix} x   y \\ z   v \\end{Bmatrix}     \\begin{pmatrix} x   y \\ z   v \\end{pmatrix}  \\begin{pmatrix} x   y \\ z   v \\end{pmatrix}     \\bigl( \\begin{smallmatrix} a b\\ c d \\end{smallmatrix} \\bigr)  \\bigl( \\begin{smallmatrix} a b\\ c d \\end{smallmatrix} \\bigr)    \u6761\u4ef6\u5b9a\u4e49  f(n) = \\begin{cases} n/2,   \\mbox{if }n\\mbox{ is even} \\ 3n+1,   \\mbox{if }n\\mbox{ is odd} \\end{cases}  f(n) = \\begin{cases} n/2,   \\mbox{if }n\\mbox{ is even} \\ 3n+1,   \\mbox{if }n\\mbox{ is odd} \\end{cases}    \u591a\u884c\u7b49\u5f0f  \\begin{align} f(x)   = (m+n)^2 \\   = m 2+2mn+n 2 \\ \\end{align}  \\begin{align} f(x)   = (m+n)^2 \\   = m 2+2mn+n 2  \\end{align}     \\begin{alignat}{2} f(x)   = (m-n)^2 \\ f(x)   = (-m+n)^2 \\   = m 2-2mn+n 2 \\ \\end{alignat}  \\begin{alignat}{2} f(x)   = (m-n)^2 \\ f(x)   = (-m+n)^2 \\   = m 2-2mn+n 2  \\end{alignat}    \u591a\u884c\u7b49\u5f0f\uff08\u5de6\u5bf9\u9f50\uff09  \\begin{array}{lcl} z   =   a \\ f(x,y,z)   =   x + y + z \\end{array}  \\begin{array}{lcl} z   =   a \\ f(x,y,z)   =   x + y + z \\end{array}    \u591a\u884c\u7b49\u5f0f\uff08\u53f3\u5bf9\u9f50\uff09  \\begin{array}{lcr} z   =   a \\ f(x,y,z)   =   x + y + z \\end{array}  \\begin{array}{lcr} z   =   a \\ f(x,y,z)   =   x + y + z \\end{array}    \u957f\u516c\u5f0f\u6362\u884c  f(x) \\,!= \\sum_{n=0}^\\infty a_n x^n \\ = a_0 +a_1x+a_2x^2+\\cdots  f(x) \\,\\!= \\sum_{n=0}^\\infty a_n x^n \\\\\\ = a_0 +a_1x+a_2x^2+\\cdots f(x) \\,\\!= \\sum_{n=0}^\\infty a_n x^n \\\\\\ = a_0 +a_1x+a_2x^2+\\cdots    \u65b9\u7a0b\u7ec4  \\begin{cases} 3x + 5y + z \\ 7x - 2y + 4z \\ -6x + 3y + 2z \\end{cases}  \\begin{cases} 3x + 5y + z \\ 7x - 2y + 4z \\ -6x + 3y + 2z \\end{cases}", 
            "title": "\u4e0a\u6807\u3001\u4e0b\u6807\u53ca\u79ef\u5206\u7b49"
        }, 
        {
            "location": "/\u65e5\u5e38/\u5e38\u7528/latex\u8bed\u6cd5/#_14", 
            "text": "\u5e8f\u53f7  \u5c0f\u5199  \u5c0f\u5199  \u5c0f\u5199\u7c97\u4f53  \u5927\u5199  \u5927\u5199  \u5927\u5199\u7c97\u4f53       1  \\alpha  \\alpha \\alpha  \\boldsymbol{\\alpha} \\boldsymbol{\\alpha}  -      2  \\beta  \\beta \\beta  \\boldsymbol{\\beta} \\boldsymbol{\\beta}  -      3  \\gamma  \\gamma \\gamma  \\boldsymbol{\\gamma} \\boldsymbol{\\gamma}  \\Gamma  \\Gamma \\Gamma     4  \\delta  \\delta \\delta  \\boldsymbol{\\delta} \\boldsymbol{\\delta}  \\Delta  \\Delta \\Delta     5  \\epsilon  \\epsilon \\epsilon  \\boldsymbol{\\epsilon} \\boldsymbol{\\epsilon}  -      6  \\varepsilon  \\varepsilon \\varepsilon  \\boldsymbol{\\varepsilon} \\boldsymbol{\\varepsilon}  -      7  \\zeta  \\zeta \\zeta  \\boldsymbol{\\zeta} \\boldsymbol{\\zeta}  -      8  \\eta  \\eta \\eta  \\boldsymbol{\\eta} \\boldsymbol{\\eta}  -      9  \\theta  \\theta \\theta  \\boldsymbol{\\theta} \\boldsymbol{\\theta}  \\Theta  \\Theta \\Theta     10  \\vartheta  \\vartheta \\vartheta  \\boldsymbol{\\vartheta} \\boldsymbol{\\vartheta}  \\varTheta  \\varTheta \\varTheta     11  \\iota  \\iota \\iota  \\boldsymbol{\\iota} \\boldsymbol{\\iota}  -      12  \\lambda  \\lambda \\lambda  \\boldsymbol{\\lambda} \\boldsymbol{\\lambda}  \\Lambda  \\Lambda \\Lambda     13  \\kappa  \\kappa \\kappa  \\boldsymbol{\\kappa} \\boldsymbol{\\kappa}  -      14  \\varkappa  \\varkappa \\varkappa  \\boldsymbol{\\varkappa} \\boldsymbol{\\varkappa}  -      15  \\mu  \\mu \\mu  \\boldsymbol{\\mu} \\boldsymbol{\\mu}  -      16  \\nu  \\nu \\nu  \\boldsymbol{\\nu} \\boldsymbol{\\nu}  -      17  \\xi  \\xi \\xi  \\boldsymbol{\\xi} \\boldsymbol{\\xi}  \\Xi  \\Xi \\Xi     18  \\omicron  \\omicron \\omicron  \\boldsymbol{\\omicron} \\boldsymbol{\\omicron}  -      19  \\pi  \\pi \\pi  \\boldsymbol{\\pi} \\boldsymbol{\\pi}  \\Pi  \\Pi \\Pi     20  \\varpi  \\varpi \\varpi  \\boldsymbol{\\varpi} \\boldsymbol{\\varpi}  \\varPi  \\varPi \\varPi     21  \\rho  \\rho \\rho  \\boldsymbol{\\rho} \\boldsymbol{\\rho}  -      22  \\varrho  \\varrho \\varrho  \\boldsymbol{\\varrho} \\boldsymbol{\\varrho}  -      23  \\sigma  \\sigma \\sigma  \\boldsymbol{\\sigma} \\boldsymbol{\\sigma}  \\Sigma  \\Sigma \\Sigma     24  \\varsigma  \\varsigma \\varsigma  \\boldsymbol{\\varsigma} \\boldsymbol{\\varsigma}  \\varSigma  \\varSigma \\varSigma     25  \\tau  \\tau \\tau  \\boldsymbol{\\tau} \\boldsymbol{\\tau}  -      26  \\upsilon  \\upsilon \\upsilon  \\boldsymbol{\\upsilon} \\boldsymbol{\\upsilon}  \\Upsilon  \\Upsilon \\Upsilon     27  \\phi  \\phi \\phi  \\boldsymbol{\\phi} \\boldsymbol{\\phi}  \\Phi  \\Phi \\Phi     28  \\varphi  \\varphi \\varphi  \\boldsymbol{\\varphi} \\boldsymbol{\\varphi}  \\varPhi  \\varPhi \\varPhi     29  \\chi  \\chi \\chi  \\boldsymbol{\\chi} \\boldsymbol{\\chi}  -      30  \\psi  \\psi \\psi  \\boldsymbol{\\psi} \\boldsymbol{\\psi}  \\Psi  \\Psi \\Psi     31  \\omega  \\omega \\omega  \\boldsymbol{\\omega} \\boldsymbol{\\omega}  \\Omega  \\Omega \\Omega     # \u5b57\u4f53\u96c6\u5408\n ## \u5b57\u4f53\u96c6  | \u5e8f\u53f7 | \u5b57\u4f53 | \u8bed\u6cd5 | \u5b9e\u4f8b |\n| :----: | :----: | :----: | :----: | :----: | :----: | :----: | :----:\n| 1 | \u6b63\u4f53 | 012,abc,ABC |  012,abc,ABC 012,abc,ABC  | \n| 2 | \u6b63\u7c97\u4f53|  \\mathbf{012,abc,ABC} |  \\mathbf{012,abc,ABC} \\mathbf{012,abc,ABC}  | \n| 3 | \u659c\u4f53 | \\mathit{012,abc,ABC} |  \\mathit{012,abc,ABC} \\mathit{012,abc,ABC}  | \n| 4 | \u659c\u7c97\u4f53 | \\boldsymbol{012,abc,ABC} |  \\boldsymbol{012,abc,ABC} \\boldsymbol{012,abc,ABC}  | \n| 5 | \u9ed1\u677f\u4f53 | \\mathbb{012,abc,ABC} |  \\mathbb{012,abc,ABC} \\mathbb{012,abc,ABC}  | \n| 6 |\u54e5\u7279\u4f53 | \\mathfrak{012,abc,ABC} |  \\mathfrak{012,abc,ABC} \\mathfrak{012,abc,ABC}  | \n| 7 | \u624b\u5199\u4f53 | \\mathcal{012,abc,ABC} |  \\mathcal{012,abc,ABC} \\mathcal{012,abc,ABC}  |   ##\u6570\u5b57\u5b57\u6bcd\u5b57\u4f53\u96c6     \u5e8f\u53f7  \u6b63\u4f53  \u6b63\u7c97\u4f53bf  \u659c\u4f53it  \u659c\u7c97\u4f53  \u9ed1\u677f\u5b57\u4f53bb  \u54e5\u7279\u4f53frak  \u624b\u5199\u4f53cal       1  0  \\mathbf{0} \\mathbf{0}  \\mathit{0} \\mathit{0}  \\boldsymbol{0} \\boldsymbol{0}  \\mathbb{0} \\mathbb{0}  \\mathfrak{0} \\mathfrak{0}     2  1  \\mathbf{1} \\mathbf{1}  \\mathit{1} \\mathit{1}  \\boldsymbol{1} \\boldsymbol{1}  \\mathbb{1} \\mathbb{1}  \\mathfrak{1} \\mathfrak{1}     3  2  \\mathbf{2} \\mathbf{2}  \\mathit{2} \\mathit{2}  \\boldsymbol{2} \\boldsymbol{2}  \\mathbb{2} \\mathbb{2}  \\mathfrak{2} \\mathfrak{2}     4  3  \\mathbf{3} \\mathbf{3}  \\mathit{3} \\mathit{3}  \\boldsymbol{3} \\boldsymbol{3}  \\mathbb{3} \\mathbb{3}  \\mathfrak{3} \\mathfrak{3}     5  4  \\mathbf{4} \\mathbf{4}  \\mathit{4} \\mathit{4}  \\boldsymbol{4} \\boldsymbol{4}  \\mathbb{4} \\mathbb{4}  \\mathfrak{4} \\mathfrak{4}     6  5  \\mathbf{5} \\mathbf{5}  \\mathit{5} \\mathit{5}  \\boldsymbol{5} \\boldsymbol{5}  \\mathbb{5} \\mathbb{5}  \\mathfrak{5} \\mathfrak{5}     7  6  \\mathbf{6} \\mathbf{6}  \\mathit{6} \\mathit{6}  \\boldsymbol{6} \\boldsymbol{6}  \\mathbb{6} \\mathbb{6}  \\mathfrak{6} \\mathfrak{6}     8  7  \\mathbf{7} \\mathbf{7}  \\mathit{7} \\mathit{7}  \\boldsymbol{7} \\boldsymbol{7}  \\mathbb{7} \\mathbb{7}  \\mathfrak{7} \\mathfrak{7}     9  8  \\mathbf{8} \\mathbf{8}  \\mathit{8} \\mathit{8}  \\boldsymbol{8} \\boldsymbol{8}  \\mathbb{8} \\mathbb{8}  \\mathfrak{8} \\mathfrak{8}     10  9  \\mathbf{9} \\mathbf{9}  \\mathit{9} \\mathit{9}  \\boldsymbol{9} \\boldsymbol{9}  \\mathbb{9} \\mathbb{9}  \\mathfrak{9} \\mathfrak{9}     11  a  \\mathbf{a} \\mathbf{a}  \\mathit{a} \\mathit{a}  \\boldsymbol{a} \\boldsymbol{a}  \\mathbb{a} \\mathbb{a}  \\mathfrak{a} \\mathfrak{a}     12  b  \\mathbf{b} \\mathbf{b}  \\mathit{b} \\mathit{b}  \\boldsymbol{b} \\boldsymbol{b}  \\mathbb{b} \\mathbb{b}  \\mathfrak{b} \\mathfrak{b}     13  c  \\mathbf{c} \\mathbf{c}  \\mathit{c} \\mathit{c}  \\boldsymbol{c} \\boldsymbol{c}  \\mathbb{c} \\mathbb{c}  \\mathfrak{c} \\mathfrak{c}     14  d  \\mathbf{d} \\mathbf{d}  \\mathit{d} \\mathit{d}  \\boldsymbol{d} \\boldsymbol{d}  \\mathbb{d} \\mathbb{d}  \\mathfrak{d} \\mathfrak{d}     15  e  \\mathbf{e} \\mathbf{e}  \\mathit{e} \\mathit{e}  \\boldsymbol{e} \\boldsymbol{e}  \\mathbb{e} \\mathbb{e}  \\mathfrak{e} \\mathfrak{e}     16  f  \\mathbf{f} \\mathbf{f}  \\mathit{f} \\mathit{f}  \\boldsymbol{f} \\boldsymbol{f}  \\mathbb{f} \\mathbb{f}  \\mathfrak{f} \\mathfrak{f}     17  g  \\mathbf{g} \\mathbf{g}  \\mathit{g} \\mathit{g}  \\boldsymbol{g} \\boldsymbol{g}  \\mathbb{g} \\mathbb{g}  \\mathfrak{g} \\mathfrak{g}     18  h  \\mathbf{h} \\mathbf{h}  \\mathit{h} \\mathit{h}  \\boldsymbol{h} \\boldsymbol{h}  \\mathbb{h} \\mathbb{h}  \\mathfrak{h} \\mathfrak{h}     19  i  \\mathbf{i} \\mathbf{i}  \\mathit{i} \\mathit{i}  \\boldsymbol{i} \\boldsymbol{i}  \\mathbb{i} \\mathbb{i}  \\mathfrak{i} \\mathfrak{i}     20  j  \\mathbf{j} \\mathbf{j}  \\mathit{j} \\mathit{j}  \\boldsymbol{j} \\boldsymbol{j}  \\mathbb{j} \\mathbb{j}  \\mathfrak{j} \\mathfrak{j}     21  k  \\mathbf{k} \\mathbf{k}  \\mathit{k} \\mathit{k}  \\boldsymbol{k} \\boldsymbol{k}  \\mathbb{k} \\mathbb{k}  \\mathfrak{k} \\mathfrak{k}     22  l  \\mathbf{l} \\mathbf{l}  \\mathit{l} \\mathit{l}  \\boldsymbol{l} \\boldsymbol{l}  \\mathbb{l} \\mathbb{l}  \\mathfrak{l} \\mathfrak{l}     23  m  \\mathbf{m} \\mathbf{m}  \\mathit{m} \\mathit{m}  \\boldsymbol{m} \\boldsymbol{m}  \\mathbb{m} \\mathbb{m}  \\mathfrak{m} \\mathfrak{m}     24  n  \\mathbf{n} \\mathbf{n}  \\mathit{n} \\mathit{n}  \\boldsymbol{n} \\boldsymbol{n}  \\mathbb{n} \\mathbb{n}  \\mathfrak{n} \\mathfrak{n}     25  o  \\mathbf{o} \\mathbf{o}  \\mathit{o} \\mathit{o}  \\boldsymbol{o} \\boldsymbol{o}  \\mathbb{o} \\mathbb{o}  \\mathfrak{o} \\mathfrak{o}     26  p  \\mathbf{p} \\mathbf{p}  \\mathit{p} \\mathit{p}  \\boldsymbol{p} \\boldsymbol{p}  \\mathbb{p} \\mathbb{p}  \\mathfrak{p} \\mathfrak{p}     27  q  \\mathbf{q} \\mathbf{q}  \\mathit{q} \\mathit{q}  \\boldsymbol{q} \\boldsymbol{q}  \\mathbb{q} \\mathbb{q}  \\mathfrak{q} \\mathfrak{q}     28  r  \\mathbf{r} \\mathbf{r}  \\mathit{r} \\mathit{r}  \\boldsymbol{r} \\boldsymbol{r}  \\mathbb{r} \\mathbb{r}  \\mathfrak{r} \\mathfrak{r}     29  s  \\mathbf{s} \\mathbf{s}  \\mathit{s} \\mathit{s}  \\boldsymbol{s} \\boldsymbol{s}  \\mathbb{s} \\mathbb{s}  \\mathfrak{s} \\mathfrak{s}     30  t  \\mathbf{t} \\mathbf{t}  \\mathit{t} \\mathit{t}  \\boldsymbol{t} \\boldsymbol{t}  \\mathbb{t} \\mathbb{t}  \\mathfrak{t} \\mathfrak{t}     31  u  \\mathbf{u} \\mathbf{u}  \\mathit{u} \\mathit{u}  \\boldsymbol{u} \\boldsymbol{u}  \\mathbb{u} \\mathbb{u}  \\mathfrak{u} \\mathfrak{u}     32  v  \\mathbf{v} \\mathbf{v}  \\mathit{v} \\mathit{v}  \\boldsymbol{v} \\boldsymbol{v}  \\mathbb{v} \\mathbb{v}  \\mathfrak{v} \\mathfrak{v}     33  w  \\mathbf{w} \\mathbf{w}  \\mathit{w} \\mathit{w}  \\boldsymbol{w} \\boldsymbol{w}  \\mathbb{w} \\mathbb{w}  \\mathfrak{w} \\mathfrak{w}     34  x  \\mathbf{x} \\mathbf{x}  \\mathit{x} \\mathit{x}  \\boldsymbol{x} \\boldsymbol{x}  \\mathbb{x} \\mathbb{x}  \\mathfrak{x} \\mathfrak{x}     35  y  \\mathbf{y} \\mathbf{y}  \\mathit{y} \\mathit{y}  \\boldsymbol{y} \\boldsymbol{y}  \\mathbb{y} \\mathbb{y}  \\mathfrak{y} \\mathfrak{y}     36  z  \\mathbf{z} \\mathbf{z}  \\mathit{z} \\mathit{z}  \\boldsymbol{z} \\boldsymbol{z}  \\mathbb{z} \\mathbb{z}  \\mathfrak{z} \\mathfrak{z}     37  A  \\mathbf{A} \\mathbf{A}  \\mathit{A} \\mathit{A}  \\boldsymbol{A} \\boldsymbol{A}  \\mathbb{A} \\mathbb{A}  \\mathfrak{A} \\mathfrak{A}     38  B  \\mathbf{B} \\mathbf{B}  \\mathit{B} \\mathit{B}  \\boldsymbol{B} \\boldsymbol{B}  \\mathbb{B} \\mathbb{B}  \\mathfrak{B} \\mathfrak{B}     39  C  \\mathbf{C} \\mathbf{C}  \\mathit{C} \\mathit{C}  \\boldsymbol{C} \\boldsymbol{C}  \\mathbb{C} \\mathbb{C}  \\mathfrak{C} \\mathfrak{C}     40  D  \\mathbf{D} \\mathbf{D}  \\mathit{D} \\mathit{D}  \\boldsymbol{D} \\boldsymbol{D}  \\mathbb{D} \\mathbb{D}  \\mathfrak{D} \\mathfrak{D}     41  E  \\mathbf{E} \\mathbf{E}  \\mathit{E} \\mathit{E}  \\boldsymbol{E} \\boldsymbol{E}  \\mathbb{E} \\mathbb{E}  \\mathfrak{E} \\mathfrak{E}     42  F  \\mathbf{F} \\mathbf{F}  \\mathit{F} \\mathit{F}  \\boldsymbol{F} \\boldsymbol{F}  \\mathbb{F} \\mathbb{F}  \\mathfrak{F} \\mathfrak{F}     43  G  \\mathbf{G} \\mathbf{G}  \\mathit{G} \\mathit{G}  \\boldsymbol{G} \\boldsymbol{G}  \\mathbb{G} \\mathbb{G}  \\mathfrak{G} \\mathfrak{G}     44  H  \\mathbf{H} \\mathbf{H}  \\mathit{H} \\mathit{H}  \\boldsymbol{H} \\boldsymbol{H}  \\mathbb{H} \\mathbb{H}  \\mathfrak{H} \\mathfrak{H}     45  I  \\mathbf{I} \\mathbf{I}  \\mathit{I} \\mathit{I}  \\boldsymbol{I} \\boldsymbol{I}  \\mathbb{I} \\mathbb{I}  \\mathfrak{I} \\mathfrak{I}     46  J  \\mathbf{J} \\mathbf{J}  \\mathit{J} \\mathit{J}  \\boldsymbol{J} \\boldsymbol{J}  \\mathbb{J} \\mathbb{J}  \\mathfrak{J} \\mathfrak{J}     47  K  \\mathbf{K} \\mathbf{K}  \\mathit{K} \\mathit{K}  \\boldsymbol{K} \\boldsymbol{K}  \\mathbb{K} \\mathbb{K}  \\mathfrak{K} \\mathfrak{K}     48  L  \\mathbf{L} \\mathbf{L}  \\mathit{L} \\mathit{L}  \\boldsymbol{L} \\boldsymbol{L}  \\mathbb{L} \\mathbb{L}  \\mathfrak{L} \\mathfrak{L}     49  M  \\mathbf{M} \\mathbf{M}  \\mathit{M} \\mathit{M}  \\boldsymbol{M} \\boldsymbol{M}  \\mathbb{M} \\mathbb{M}  \\mathfrak{M} \\mathfrak{M}     50  N  \\mathbf{N} \\mathbf{N}  \\mathit{N} \\mathit{N}  \\boldsymbol{N} \\boldsymbol{N}  \\mathbb{N} \\mathbb{N}  \\mathfrak{N} \\mathfrak{N}     51  O  \\mathbf{O} \\mathbf{O}  \\mathit{O} \\mathit{O}  \\boldsymbol{O} \\boldsymbol{O}  \\mathbb{O} \\mathbb{O}  \\mathfrak{O} \\mathfrak{O}     52  P  \\mathbf{P} \\mathbf{P}  \\mathit{P} \\mathit{P}  \\boldsymbol{P} \\boldsymbol{P}  \\mathbb{P} \\mathbb{P}  \\mathfrak{P} \\mathfrak{P}     53  Q  \\mathbf{Q} \\mathbf{Q}  \\mathit{Q} \\mathit{Q}  \\boldsymbol{Q} \\boldsymbol{Q}  \\mathbb{Q} \\mathbb{Q}  \\mathfrak{Q} \\mathfrak{Q}     54  R  \\mathbf{R} \\mathbf{R}  \\mathit{R} \\mathit{R}  \\boldsymbol{R} \\boldsymbol{R}  \\mathbb{R} \\mathbb{R}  \\mathfrak{R} \\mathfrak{R}     55  S  \\mathbf{S} \\mathbf{S}  \\mathit{S} \\mathit{S}  \\boldsymbol{S} \\boldsymbol{S}  \\mathbb{S} \\mathbb{S}  \\mathfrak{S} \\mathfrak{S}     56  T  \\mathbf{T} \\mathbf{T}  \\mathit{T} \\mathit{T}  \\boldsymbol{T} \\boldsymbol{T}  \\mathbb{T} \\mathbb{T}  \\mathfrak{T} \\mathfrak{T}     57  U  \\mathbf{U} \\mathbf{U}  \\mathit{U} \\mathit{U}  \\boldsymbol{U} \\boldsymbol{U}  \\mathbb{U} \\mathbb{U}  \\mathfrak{U} \\mathfrak{U}     58  V  \\mathbf{V} \\mathbf{V}  \\mathit{V} \\mathit{V}  \\boldsymbol{V} \\boldsymbol{V}  \\mathbb{V} \\mathbb{V}  \\mathfrak{V} \\mathfrak{V}     59  W  \\mathbf{W} \\mathbf{W}  \\mathit{W} \\mathit{W}  \\boldsymbol{W} \\boldsymbol{W}  \\mathbb{W} \\mathbb{W}  \\mathfrak{W} \\mathfrak{W}     60  X  \\mathbf{X} \\mathbf{X}  \\mathit{X} \\mathit{X}  \\boldsymbol{X} \\boldsymbol{X}  \\mathbb{X} \\mathbb{X}  \\mathfrak{X} \\mathfrak{X}     61  Y  \\mathbf{Y} \\mathbf{Y}  \\mathit{Y} \\mathit{Y}  \\boldsymbol{Y} \\boldsymbol{Y}  \\mathbb{Y} \\mathbb{Y}  \\mathfrak{Y} \\mathfrak{Y}     62  Z  \\mathbf{Z} \\mathbf{Z}  \\mathit{Z} \\mathit{Z}  \\boldsymbol{Z} \\boldsymbol{Z}  \\mathbb{Z} \\mathbb{Z}  \\mathfrak{Z} \\mathfrak{Z}", 
            "title": "\u5b57\u4f53"
        }, 
        {
            "location": "/\u65e5\u5e38/\u5e38\u7528/latex\u8bed\u6cd5/#_15", 
            "text": "\u8bed\u6cd5\n\\aleph\\beth\\gimel\\daleth\n\u6548\u679c \\aleph\\beth\\gimel\\daleth \\aleph\\beth\\gimel\\daleth", 
            "title": "\u5e0c\u4f2f\u6765\u5b57\u6bcd"
        }, 
        {
            "location": "/\u65e5\u5e38/\u5e38\u7528/latex\u8bed\u6cd5/#_16", 
            "text": "\u529f\u80fd  \u8bed\u6cd5  \u663e\u793a      \u5706\u62ec\u53f7-\u5c0f\u62ec\u53f7  \\left( \\frac{a}{b} \\right)  \\left( \\frac{a}{b} \\right) \\left( \\frac{a}{b} \\right)    \u65b9\u62ec\u53f7-\u4e2d\u62ec\u53f7  \\left[ \\frac{a}{b} \\right]  \\left[ \\frac{a}{b} \\right] \\left[ \\frac{a}{b} \\right]    \u82b1\u62ec\u53f7\uff0c\u5927\u62ec\u53f7  \\left{ \\frac{a}{b} \\right}  \\left\\{ \\frac{a}{b} \\right\\} \\left\\{ \\frac{a}{b} \\right\\}    \u89d2\u62ec\u53f7  \\left \\langle \\frac{a}{b} \\right \\rangle  \\left\\langle \\frac{a}{b} \\right \\rangle \\left\\langle \\frac{a}{b} \\right \\rangle    \u5355\u7ad6\u7ebf-\u7edd\u5bf9\u503c  \\left| \\frac{a}{b} \\right|  \\left\\| \\frac{a}{b} \\right\\| \\left\\| \\frac{a}{b} \\right\\|    \u53cc\u7ad6\u7ebf-\u8303  \\left| \\frac{a}{b} \\right|  $ \\left | \\frac{a}{b} \\right | $    \u53d6\u6574  \\left \\lfloor \\frac{a}{b} \\right \\rfloor  \\left \\lfloor \\frac{a}{b} \\right \\rfloor \\left \\lfloor \\frac{a}{b} \\right \\rfloor    \u53d6\u9876  \\left \\lceil \\frac{c}{d} \\right \\rceil  \\left \\lceil \\frac{c}{d} \\right \\rceil \\left \\lceil \\frac{c}{d} \\right \\rceil    \u659c\u7ebf\u4e0e\u53cd\u659c\u7ebf  \\left / \\frac{a}{b} \\right \\backslash  $ \\left / \\frac{a}{b} \\right \\backslash $    \u4e0a\u4e0b\u7bad\u5934  \\left \\uparrow \\frac{a}{b} \\right \\downarrow  \\left \\uparrow \\frac{a}{b} \\right \\downarrow \\left \\uparrow \\frac{a}{b} \\right \\downarrow     \\left \\Uparrow \\frac{a}{b} \\right \\Downarrow  \\left \\Uparrow \\frac{a}{b} \\right \\Downarrow \\left \\Uparrow \\frac{a}{b} \\right \\Downarrow     \\left \\updownarrow \\frac{a}{b} \\right \\Updownarrow  \\left \\updownarrow \\frac{a}{b} \\right \\Updownarrow \\left \\updownarrow \\frac{a}{b} \\right \\Updownarrow    \u6df7\u5408\u62ec\u53f7  \\left [ 0,1 \\right )  $ \\left [ 0,1 \\right )  $    \u5355\u5de6\u62ec\u53f7  \\left { \\frac{a}{b} \\right .  \\left \\{ \\frac{a}{b} \\right . \\left \\{ \\frac{a}{b} \\right .    \u5355\u53f3\u62ec\u53f7  \\left . \\frac{a}{b} \\right }  \\left . \\frac{a}{b} \\right \\} \\left . \\frac{a}{b} \\right \\}     \u5907\u6ce8\uff1a\n\u53ef\u4ee5\u4f7f\u7528 \\big, \\Big, \\bigg, \\Bigg \u63a7\u5236\u62ec\u53f7\u7684\u5927\u5c0f\uff0c\u6bd4\u5982\u4ee3\u7801\n\\Bigg ( \\bigg [ \\Big { \\big \\langle \\left | | \\frac{a}{b} | \\right | \\big\\rangle \\Big } \\bigg ] \\Bigg )\n\u3000\u663e\u793a\ufe30 \\Bigg ( \\bigg [ \\Big \\{ \\big \\langle \\left | \\| x \\| \\right | \\big \\rangle \\Big \\} \\bigg ] \\Bigg ) \\Bigg ( \\bigg [ \\Big \\{ \\big \\langle \\left | \\| x \\| \\right | \\big \\rangle \\Big \\} \\bigg ] \\Bigg )", 
            "title": "\u62ec\u53f7"
        }, 
        {
            "location": "/\u65e5\u5e38/\u5e38\u7528/latex\u8bed\u6cd5/#_17", 
            "text": "\u6ce8\u610fTEX\u80fd\u591f\u81ea\u52a8\u5904\u7406\u5927\u591a\u6570\u7684\u7a7a\u683c\uff0c\u4f46\u662f\u60a8\u6709\u65f6\u5019\u9700\u8981\u81ea\u5df1\u6765\u63a7\u5236\u3002     \u529f\u80fd  \u8bed\u6cd5  \u663e\u793a      2\u4e2aquad\u7a7a\u683c  \\alpha\\qquad\\beta  $\\alpha\\qquad\\beta 2m $    quad\u7a7a\u683c  \\alpha\\quad\\beta  $\\alpha\\quad\\beta  m $    \u5927\u7a7a\u683c  \\alpha \\beta  \\alpha\\ \\beta \\frac{m}{3} \\alpha\\ \\beta \\frac{m}{3}    \u4e2d\u7b49\u7a7a\u683c  \\alpha\\;\\beta  \\alpha\\;\\beta \\frac{2m}{7} \\alpha\\;\\beta \\frac{2m}{7}    \u5c0f\u7a7a\u683c  \\alpha\\,\\beta  \\alpha\\,\\beta \\frac{m}{6} \\alpha\\,\\beta \\frac{m}{6}    \u6ca1\u6709\u7a7a\u683c  \\alpha\\beta  $\\alpha\\beta  0 $    \u7d27\u8d34  \\alpha!\\beta  \\alpha\\!\\beta -\\frac{m}{6} \\alpha\\!\\beta -\\frac{m}{6}     \u5c0f\u578b\u6570\u5b66\u516c\u5f0f\n\u5f53\u8981\u628a\u5206\u6570\u7b49\u516c\u5f0f\u653e\u8fdb\u6587\u5b57\u4e2d\u7684\u65f6\u5019\uff0c\u6211\u4eec\u9700\u8981\u4f7f\u7528\u5c0f\u578b\u7684\u6570\u5b66\u516c\u5f0f\u3002\n\u82f9\u679c\u539f\u4ea7\u4e8e\u6b27\u6d32\u548c\u4e2d\u4e9a\u7ec6\u4e9a\u3002\u54c8\u8428\u514b\u7684\u963f\u62c9\u6728\u56fe\u4e0e\u65b0\u7586\u963f\u529b\u9ebb\u91cc\u6709\u82f9\u679c\u57ce\u7684\u7f8e\u8a89\u3002\u4e2d\u56fd\u53e4\u4ee3\u7684\u6797\u6a8e\u3001\u67f0\u3001\u82b1\u7ea2\u7b49\u6c34\u679c\u88ab\u8ba4\u4e3a\u662f\u4e2d\u56fd\u571f\u751f\u82f9\u679c\u54c1\u79cd\u6216\u4e0e\u82f9\u679c\u76f8\u4f3c\u7684\u6c34\u679c\u3002\u82f9\u679c\u5728\u4e2d\u56fd\u7684\u683d\u57f9\u8bb0\u5f55\u53ef\u4ee5\u8ffd\u6eaf\u81f3\u897f\u6c49\u65f6\u671f\uff0c\u6c49\u6b66\u5e1d\u65f6\uff0c10 \u7684 f(x)=5+\\frac{1}{5} \u662f 2\u3002\u4e0a\u6797\u82d1\u4e2d\u66fe\u683d\u57f9\u6797\u6a8e\u548c\u67f0\uff0c\u5f53\u65f6\u591a\u7528\u4e8e\u85b0\u9999\u8863\u88f3\u7b49\uff0c\u4ea6\u6709\u7f6e\u4e8e\u5e8a\u5934\u5f53\u9999\u718f\u6216\u7f6e\u4e8e\u8863\u670d\u521d\u4f5c\u4e3a\u9999\u56ca\uff0c\u603b\u4e4b\u4e00\u822c\u4e0d\u98df\u7528\u3002\u4f46\u4e5f\u6709\u770b\u6cd5\u8ba4\u4e3a\uff0c\u6797\u6a8e\u548c\u67f0\u662f\u73b0\u5728\u7684\u6c99\u679c\uff0c\u66fe\u88ab\u8bef\u8ba4\u4e3a\u82f9\u679c\uff0c\u771f\u6b63\u610f\u4e49\u4e0a\u7684\u82f9\u679c\u662f\u5143\u671d\u65f6\u671f\u4ece\u4e2d\u4e9a\u5730\u533a\u4f20\u5165\u4e2d\u56fd\uff0c\u5f53\u65f6\u53ea\u6709\u5728\u5bab\u5ef7\u624d\u53ef\u4eab\u7528\u3002\n\u2717\u5e76\u4e0d\u597d\u770b\u3002\n\u82f9\u679c\u539f\u4ea7\u4e8e\u6b27\u6d32\u548c\u4e2d\u4e9a\u7ec6\u4e9a\u3002\u54c8\u8428\u514b\u7684\u963f\u62c9\u6728\u56fe\u4e0e\u65b0\u7586\u963f\u529b\u9ebb\u91cc\u6709\u82f9\u679c\u57ce\u7684\u7f8e\u8a89\u3002\u4e2d\u56fd\u53e4\u4ee3\u7684\u6797\u6a8e\u3001\u67f0\u3001\u82b1\u7ea2\u7b49\u6c34\u679c\u88ab\u8ba4\u4e3a\u662f\u4e2d\u56fd\u571f\u751f\u82f9\u679c\u54c1\u79cd\u6216\u4e0e\u82f9\u679c\u76f8\u4f3c\u7684\u6c34\u679c\u3002\u82f9\u679c\u5728\u4e2d\u56fd\u7684\u683d\u57f9\u8bb0\u5f55\u53ef\u4ee5\u8ffd\u6eaf\u81f3\u897f\u6c49\u65f6\u671f\uff0c\u6c49\u6b66\u5e1d\u65f6\uff0c10 \u7684 \\begin{smallmatrix} f(x)=5+\\frac{1}{5} \\end{smallmatrix}  \u662f 2\u3002\u4e0a\u6797\u82d1\u4e2d\u66fe\u683d\u57f9\u6797\u6a8e\u548c\u67f0\uff0c\u5f53\u65f6\u591a\u7528\u4e8e\u85b0\u9999\u8863\u88f3\u7b49\uff0c\u4ea6\u6709\u7f6e\u4e8e\u5e8a\u5934\u5f53\u9999\u718f\u6216\u7f6e\u4e8e\u8863\u670d\u521d\u4f5c\u4e3a\u9999\u56ca\uff0c\u603b\u4e4b\u4e00\u822c\u4e0d\u98df\u7528\u3002\u4f46\u4e5f\u6709\u770b\u6cd5\u8ba4\u4e3a\uff0c\u6797\u6a8e\u548c\u67f0\u662f\u73b0\u5728\u7684\u6c99\u679c\uff0c\u66fe\u88ab\u8bef\u8ba4\u4e3a\u82f9\u679c\uff0c\u771f\u6b63\u610f\u4e49\u4e0a\u7684\u82f9\u679c\u662f\u5143\u671d\u65f6\u671f\u4ece\u4e2d\u4e9a\u5730\u533a\u4f20\u5165\u4e2d\u56fd\uff0c\u5f53\u65f6\u53ea\u6709\u5728\u5bab\u5ef7\u624d\u53ef\u4eab\u7528\u3002\n\u2713\u597d\u770b\u4e9b\u4e86\u3002\n\u53ef\u4ee5\u4f7f\u7528\n\\begin{smallmatrix}...\\end{smallmatrix}", 
            "title": "\u7a7a\u683c"
        }, 
        {
            "location": "/\u65e5\u5e38/\u5e38\u7528\u5de5\u5177/10\u5206\u949f\u4e0a\u624bPandas/", 
            "text": "\u6765\u81ea\u5b98\u7f51\u5341\u5206\u949f\u6559\u5b66\n \nPandas\u7684\u4e3b\u8981\u6570\u636e\u7ed3\u6784\uff1a\n\n\nDimensionsNameDescription1Series1D labeled homogeneously-typed array2DataFrameGeneral 2D labeled, size-mutable tabular structure with potentially heterogeneously-typed columns3PanelGeneral 3D labeled, also size-mutable array\n\n\n\u4e00\u3001\u5f15\u5165\n\n\nimport\n \npandas\n \nas\n \npd\n   \n#\u6570\u636e\u5206\u6790\uff0c\u4ee3\u7801\u57fa\u4e8enumpy\n\n\nimport\n \nnumpy\n \nas\n \nnp\n    \n#\u5904\u7406\u6570\u636e\uff0c\u4ee3\u7801\u57fa\u4e8endarray\n\n\nimport\n \nmatplotlib.pyplot\n \nas\n \nplt\n      \n#\u753b\u56fe\n\n\n\n\n\nmatplotlib\u56fe\u5e93\u5177\u6709\u5927\u91cf\u4ee3\u7801\u6848\u4f8b\uff0c\u53ef\u76f4\u63a5\u4f7f\u7528\n \n\npandas \u5b98\u7f51\u6559\u7a0b\n\n\n\u4e8c\u3001\u521b\u5efa\u5bf9\u8c61\n\n\n\n\n\n\nSeries\u5b57\u5178\u5bf9\u8c61\n\n\n\n\n\n\ns\n \n=\n \npd\n.\nSeries\n([\n1\n,\n3\n,\n5\n,\nnp\n.\nnan\n,\n6\n,\n8\n])\n   \n#\u9ed8\u8ba4\u4ee5\u6570\u5b57\u4ece0\u5f00\u59cb\u4f5c\u4e3a\u952e\u503c,\u4f7f\u7528np.nan\u8868\u793a\u4e0d\u53c2\u4e0e\u8ba1\u7b97\n\n\ns\n\n\n0\n    \n1.0\n\n\n1\n    \n3.0\n\n\n2\n    \n5.0\n\n\n3\n    \nNaN\n\n\n4\n    \n6.0\n\n\n5\n    \n8.0\n\n\ndtype\n:\n \nfloat64\n\n\n\n\n\n \ns\n \n=\n \npd\n.\nSeries\n(\ndata\n=\n[\n1\n,\n2\n,\n3\n,\n4\n],\nindex\n \n=\n \n[\na\n,\nb\n,\nc\n,\nd\n])\n  \n#\u4f20\u5165\u952e\u548c\u503c\u65b9\u5f0f\n\n\n \ns\n\n\na\n    \n1\n\n\nb\n    \n2\n\n\nc\n    \n3\n\n\nd\n    \n4\n\n\ndtype\n:\n \nint64\n\n\n \ns\n.\nindex\n    \n#\u83b7\u53d6\u952e\u5217\u8868\n\n\nIndex\n([\na\n,\n \nb\n,\n \nc\n,\n \nd\n],\n \ndtype\n=\nobject\n)\n\n\n \ns\n.\nvalues\n    \n#\u83b7\u53d6\u503c\u5217\u8868\n\n\narray\n([\n1\n,\n \n2\n,\n \n3\n,\n \n4\n],\n \ndtype\n=\nint64\n)\n\n\n\n\n\n\n\n\n\nDataFrame\u8868\u683c\u5bf9\u8c61\n\n\n\n\n\n\nIn\n \n[\n10\n]:\n \ndf2\n \n=\n \npd\n.\nDataFrame\n({\n \nA\n \n:\n \n1.\n,\n\n                     \nB\n \n:\n \npd\n.\nTimestamp\n(\n20130102\n),\n\n                     \nC\n \n:\n \npd\n.\nSeries\n(\n1\n,\nindex\n=\nlist\n(\nrange\n(\n4\n)),\ndtype\n=\nfloat32\n),\n   \n#\u751f\u6210Series\u5bf9\u8c61,\u53d6\u7684\u662fvalue\n\n                     \nD\n \n:\n \nnp\n.\narray\n([\n3\n]\n \n*\n \n4\n,\ndtype\n=\nint32\n),\n  \n#\u751f\u6210numpy\u5bf9\u8c61\n\n                     \nE\n \n:\n \npd\n.\nCategorical\n([\ntest\n,\ntrain\n,\ntest\n,\ntrain\n]),\n\n                     \nF\n \n:\n \nfoo\n \n})\n  \n\n\nIn\n \n[\n11\n]:\n \ndf2\n\n\nOut\n[\n11\n]:\n          \n# \u9ed8\u8ba4\u4ee5\u6570\u5b57\u4ece0\u5f00\u59cb\u4f5c\u4e3a\u884c\u952e,\u4ee5\u5b57\u5178\u952e\u4e3a\u5217\u952e\n\n     \nA\n          \nB\n    \nC\n  \nD\n      \nE\n    \nF\n\n\n0\n  \n1.0\n \n2013\n-\n01\n-\n02\n  \n1.0\n  \n3\n   \ntest\n  \nfoo\n\n\n1\n  \n1.0\n \n2013\n-\n01\n-\n02\n  \n1.0\n  \n3\n  \ntrain\n  \nfoo\n\n\n2\n  \n1.0\n \n2013\n-\n01\n-\n02\n  \n1.0\n  \n3\n   \ntest\n  \nfoo\n\n\n3\n  \n1.0\n \n2013\n-\n01\n-\n02\n  \n1.0\n  \n3\n  \ntrain\n  \nfoo\n\n\n\n\n\nIn\n \n[\n6\n]:\n \ndates\n \n=\n \npd\n.\ndate_range\n(\n20130101\n,\n \nperiods\n=\n6\n)\n\n\n\nIn\n \n[\n7\n]:\n \ndates\n\n\nOut\n[\n7\n]:\n \n\nDatetimeIndex\n([\n2013-01-01\n,\n \n2013-01-02\n,\n \n2013-01-03\n,\n \n2013-01-04\n,\n\n               \n2013-01-05\n,\n \n2013-01-06\n],\n\n              \ndtype\n=\ndatetime64[ns]\n,\n \nfreq\n=\nD\n)\n\n\n\nIn\n \n[\n8\n]:\n \ndf\n \n=\n \npd\n.\nDataFrame\n(\nnp\n.\nrandom\n.\nrandn\n(\n6\n,\n4\n),\n \nindex\n=\ndates\n,\n \ncolumns\n=\nlist\n(\nABCD\n))\n    \n#np.random.randn(6,4)\u8fd4\u56de\u4e00\u4e2a\u6837\u672c\uff0c\u5177\u6709\u6807\u51c6\u6b63\u6001\u5206\u5e03\n\n\n\nIn\n \n[\n9\n]:\n \ndf\n\n\nOut\n[\n9\n]:\n          \n# \u6307\u5b9adates\u4e3a\u884c\u952e\uff0ccolumns\u4e3a\u5217\u952e\n\n                   \nA\n         \nB\n         \nC\n         \nD\n\n\n2013\n-\n01\n-\n01\n  \n0.469112\n \n-\n0.282863\n \n-\n1.509059\n \n-\n1.135632\n\n\n2013\n-\n01\n-\n02\n  \n1.212112\n \n-\n0.173215\n  \n0.119209\n \n-\n1.044236\n\n\n2013\n-\n01\n-\n03\n \n-\n0.861849\n \n-\n2.104569\n \n-\n0.494929\n  \n1.071804\n\n\n2013\n-\n01\n-\n04\n  \n0.721555\n \n-\n0.706771\n \n-\n1.039575\n  \n0.271860\n\n\n2013\n-\n01\n-\n05\n \n-\n0.424972\n  \n0.567020\n  \n0.276232\n \n-\n1.087401\n\n\n2013\n-\n01\n-\n06\n \n-\n0.673690\n  \n0.113648\n \n-\n1.478427\n  \n0.524988\n\n\n\nIn\n \n[\n12\n]:\n \ndf2\n.\ndtypes\n    \n#\u67e5\u770b\u5217\u6570\u636e\u7c7b\u578b\n\n\nOut\n[\n12\n]:\n \n\nA\n           \nfloat64\n\n\nB\n    \ndatetime64\n[\nns\n]\n\n\nC\n           \nfloat32\n\n\nD\n             \nint32\n\n\nE\n          \ncategory\n\n\nF\n            \nobject\n\n\ndtype\n:\n \nobject\n\n\n\n\n\n\u4e09\u3001\u67e5\u770b\u6570\u636e\n\n\n\n\n\n\n\u67e5\u770b\u5934\u5c3e\u6570\u636e\uff1a\n\n\n\n\n\n\nIn\n \n[\n14\n]:\n \ndf\n.\nhead\n()\n    \n#\u9ed8\u8ba4\u503c5\n\n\nOut\n[\n14\n]:\n \n                   \nA\n         \nB\n         \nC\n         \nD\n\n\n2013\n-\n01\n-\n01\n  \n0.469112\n \n-\n0.282863\n \n-\n1.509059\n \n-\n1.135632\n\n\n2013\n-\n01\n-\n02\n  \n1.212112\n \n-\n0.173215\n  \n0.119209\n \n-\n1.044236\n\n\n2013\n-\n01\n-\n03\n \n-\n0.861849\n \n-\n2.104569\n \n-\n0.494929\n  \n1.071804\n\n\n2013\n-\n01\n-\n04\n  \n0.721555\n \n-\n0.706771\n \n-\n1.039575\n  \n0.271860\n\n\n2013\n-\n01\n-\n05\n \n-\n0.424972\n  \n0.567020\n  \n0.276232\n \n-\n1.087401\n\n\n\nIn\n \n[\n15\n]:\n \ndf\n.\ntail\n(\n3\n)\n     \n#\u9ed8\u8ba4\u503c5\n\n\nOut\n[\n15\n]:\n  \n                   \nA\n         \nB\n         \nC\n         \nD\n\n\n2013\n-\n01\n-\n04\n  \n0.721555\n \n-\n0.706771\n \n-\n1.039575\n  \n0.271860\n\n\n2013\n-\n01\n-\n05\n \n-\n0.424972\n  \n0.567020\n  \n0.276232\n \n-\n1.087401\n\n\n2013\n-\n01\n-\n06\n \n-\n0.673690\n  \n0.113648\n \n-\n1.478427\n  \n0.524988\n\n\n\n\n\n\n\n\n\n\u67e5\u770b\u884c\u952e\u3001\u5217\u952e\u3001\u6570\u636e\uff1a\n\n\n\n\n\n\nIn\n \n[\n16\n]:\n \ndf\n.\nindex\n\n\nOut\n[\n16\n]:\n \n\nDatetimeIndex\n([\n2013-01-01\n,\n \n2013-01-02\n,\n \n2013-01-03\n,\n \n2013-01-04\n,\n\n               \n2013-01-05\n,\n \n2013-01-06\n],\n\n              \ndtype\n=\ndatetime64[ns]\n,\n \nfreq\n=\nD\n)\n\n\n\nIn\n \n[\n17\n]:\n \ndf\n.\ncolumns\n\n\nOut\n[\n17\n]:\n \nIndex\n([\nu\nA\n,\n \nu\nB\n,\n \nu\nC\n,\n \nu\nD\n],\n \ndtype\n=\nobject\n)\n\n\n\nIn\n \n[\n18\n]:\n \ndf\n.\nvalues\n\n\nOut\n[\n18\n]:\n \n\narray\n([[\n \n0.4691\n,\n \n-\n0.2829\n,\n \n-\n1.5091\n,\n \n-\n1.1356\n],\n\n       \n[\n \n1.2121\n,\n \n-\n0.1732\n,\n  \n0.1192\n,\n \n-\n1.0442\n],\n\n       \n[\n-\n0.8618\n,\n \n-\n2.1046\n,\n \n-\n0.4949\n,\n  \n1.0718\n],\n\n       \n[\n \n0.7216\n,\n \n-\n0.7068\n,\n \n-\n1.0396\n,\n  \n0.2719\n],\n\n       \n[\n-\n0.425\n \n,\n  \n0.567\n \n,\n  \n0.2762\n,\n \n-\n1.0874\n],\n\n       \n[\n-\n0.6737\n,\n  \n0.1136\n,\n \n-\n1.4784\n,\n  \n0.525\n \n]])\n\n\n\n\n\n\n\n\n\n\u67e5\u770b\u6570\u636e\u6574\u4f53\u6982\u51b5\uff0c\u548c\u3001\u5e73\u5747\u503c\u3001\u6700\u5927\u3001\u6700\u5c0f\u7b49\uff1a\n\n\n\n\n\n\nIn\n \n[\n19\n]:\n \ndf\n.\ndescribe\n()\n\n\nOut\n[\n19\n]:\n \n              \nA\n         \nB\n         \nC\n         \nD\n\n\ncount\n  \n6.000000\n  \n6.000000\n  \n6.000000\n  \n6.000000\n\n\nmean\n   \n0.073711\n \n-\n0.431125\n \n-\n0.687758\n \n-\n0.233103\n\n\nstd\n    \n0.843157\n  \n0.922818\n  \n0.779887\n  \n0.973118\n\n\nmin\n   \n-\n0.861849\n \n-\n2.104569\n \n-\n1.509059\n \n-\n1.135632\n\n\n25\n%\n   \n-\n0.611510\n \n-\n0.600794\n \n-\n1.368714\n \n-\n1.076610\n\n\n50\n%\n    \n0.022070\n \n-\n0.228039\n \n-\n0.767252\n \n-\n0.386188\n\n\n75\n%\n    \n0.658444\n  \n0.041933\n \n-\n0.034326\n  \n0.461706\n\n\nmax\n    \n1.212112\n  \n0.567020\n  \n0.276232\n  \n1.071804\n\n\n\n\n\ntrain_df\n.\ninfo\n()\n\n\nprint\n(\n\\_\n*\n40\n)\n\n\nclass\n \npandas\n.\ncore\n.\nframe\n.\nDataFrame\n\\\n\n\nRangeIndex\n:\n \n891\n \nentries\n,\n \n0\n \nto\n \n890\n\n\nData\n \ncolumns\n \n(\ntotal\n \n12\n \ncolumns\n):\n\n\nPassengerId\n    \n891\n \nnon\n-\nnull\n \nint64\n\n\nSurvived\n       \n891\n \nnon\n-\nnull\n \nint64\n\n\nPclass\n \n891\n \nnon\n-\nnull\n \nint64\n\n\nName\n           \n891\n \nnon\n-\nnull\n \nobject\n\n\nSex\n            \n891\n \nnon\n-\nnull\n \nobject\n\n\nAge\n            \n714\n \nnon\n-\nnull\n \nfloat64\n\n\nSibSp\n          \n891\n \nnon\n-\nnull\n \nint64\n\n\nParch\n          \n891\n \nnon\n-\nnull\n \nint64\n\n\nTicket\n         \n891\n \nnon\n-\nnull\n \nobject\n\n\nFare\n           \n891\n \nnon\n-\nnull\n \nfloat64\n\n\nCabin\n          \n204\n \nnon\n-\nnull\n \nobject\n\n\nEmbarked\n       \n889\n \nnon\n-\nnull\n \nobject\n\n\ndtypes\n:\n \nfloat64\n(\n2\n),\n \nint64\n(\n5\n),\n \nobject\n(\n5\n)\n\n\nmemory\n \nusage\n:\n \n83.6\n+\n \nKB\n\n\n________________________________________\n\n\n\n\n\ntrain_df\n.\ndescribe\n(\ninclude\n=\n[\nO\n])\n\n\n\nName\n    \nSex\n \nTicket\n  \nCabin\n   \nEmbarked\n\n\ncount\n   \n891\n \n891\n \n891\n \n204\n \n889\n\n\nunique\n  \n891\n \n2\n   \n681\n \n147\n \n3\n\n\ntop\n \nChronopoulos\n,\n \nMr\n.\n \nApostolos\n \nmale\n    \nCA\n.\n \n2343\n    \nG6\n  \nS\n\n\nfreq\n    \n1\n   \n577\n \n7\n   \n4\n   \n644\n\n\n\n\n\n\n\n\n\n\u884c\u6216\u5217\u5e73\u5747\u503c\uff1a\n\n\n\n\n\n\nIn\n \n[\n61\n]:\n \ndf\n.\nmean\n()\n\n\nOut\n[\n61\n]:\n \n\nA\n   \n-\n0.004474\n\n\nB\n   \n-\n0.383981\n\n\nC\n   \n-\n0.687758\n\n\nD\n    \n5.000000\n\n\nF\n    \n3.000000\n\n\ndtype\n:\n \nfloat64\n\n\n\n\n\nIn\n \n[\n62\n]:\n \ndf\n.\nmean\n(\n1\n)\n\n\nOut\n[\n62\n]:\n \n\n2013\n-\n01\n-\n01\n    \n0.872735\n\n\n2013\n-\n01\n-\n02\n    \n1.431621\n\n\n2013\n-\n01\n-\n03\n    \n0.707731\n\n\n2013\n-\n01\n-\n04\n    \n1.395042\n\n\n2013\n-\n01\n-\n05\n    \n1.883656\n\n\n2013\n-\n01\n-\n06\n    \n1.592306\n\n\nFreq\n:\n \nD\n,\n \ndtype\n:\n \nfloat64\n\n\n\n\n\n\n\n\n\n\u8f6c\u7f6e\uff1a\n\n\n\n\n\n\nIn\n \n[\n20\n]:\n \ndf\n.\nT\n\n\nOut\n[\n20\n]:\n \n   \n2013\n-\n01\n-\n01\n  \n2013\n-\n01\n-\n02\n  \n2013\n-\n01\n-\n03\n  \n2013\n-\n01\n-\n04\n  \n2013\n-\n01\n-\n05\n  \n2013\n-\n01\n-\n06\n\n\nA\n    \n0.469112\n    \n1.212112\n   \n-\n0.861849\n    \n0.721555\n   \n-\n0.424972\n   \n-\n0.673690\n\n\nB\n   \n-\n0.282863\n   \n-\n0.173215\n   \n-\n2.104569\n   \n-\n0.706771\n    \n0.567020\n    \n0.113648\n\n\nC\n   \n-\n1.509059\n    \n0.119209\n   \n-\n0.494929\n   \n-\n1.039575\n    \n0.276232\n   \n-\n1.478427\n\n\nD\n   \n-\n1.135632\n   \n-\n1.044236\n    \n1.071804\n    \n0.271860\n   \n-\n1.087401\n    \n0.524988\n\n\n\n\n\n\n\n\n\n\u6839\u636e\u884c\u3001\u5217\u6392\u5e8f\uff1a\n\n\n\n\n\n\nIn\n \n[\n21\n]:\n \ndf\n.\nsort_index\n(\naxis\n=\n1\n,\n \nascending\n=\nFalse\n)\n    \n#\u6839\u636e\u8f74\uff0c\u53ef\u4ee5.sort_index(axis=0, by=None, ascending=True)\u3002by\u53c2\u6570\u53ea\u80fd\u5bf9\u5217\n\n\nOut\n[\n21\n]:\n \n                   \nD\n         \nC\n         \nB\n         \nA\n\n\n2013\n-\n01\n-\n01\n \n-\n1.135632\n \n-\n1.509059\n \n-\n0.282863\n  \n0.469112\n\n\n2013\n-\n01\n-\n02\n \n-\n1.044236\n  \n0.119209\n \n-\n0.173215\n  \n1.212112\n\n\n2013\n-\n01\n-\n03\n  \n1.071804\n \n-\n0.494929\n \n-\n2.104569\n \n-\n0.861849\n\n\n2013\n-\n01\n-\n04\n  \n0.271860\n \n-\n1.039575\n \n-\n0.706771\n  \n0.721555\n\n\n2013\n-\n01\n-\n05\n \n-\n1.087401\n  \n0.276232\n  \n0.567020\n \n-\n0.424972\n\n\n2013\n-\n01\n-\n06\n  \n0.524988\n \n-\n1.478427\n  \n0.113648\n \n-\n0.673690\n\n\nSorting\n \nby\n \nvalues\n\n\n\nIn\n \n[\n22\n]:\n \ndf\n.\nsort_values\n(\nby\n=\nB\n)\n       \n#\u6839\u636e\u503c\n\n\nOut\n[\n22\n]:\n \n                   \nA\n         \nB\n         \nC\n         \nD\n\n\n2013\n-\n01\n-\n03\n \n-\n0.861849\n \n-\n2.104569\n \n-\n0.494929\n  \n1.071804\n\n\n2013\n-\n01\n-\n04\n  \n0.721555\n \n-\n0.706771\n \n-\n1.039575\n  \n0.271860\n\n\n2013\n-\n01\n-\n01\n  \n0.469112\n \n-\n0.282863\n \n-\n1.509059\n \n-\n1.135632\n\n\n2013\n-\n01\n-\n02\n  \n1.212112\n \n-\n0.173215\n  \n0.119209\n \n-\n1.044236\n\n\n2013\n-\n01\n-\n06\n \n-\n0.673690\n  \n0.113648\n \n-\n1.478427\n  \n0.524988\n\n\n2013\n-\n01\n-\n05\n \n-\n0.424972\n  \n0.567020\n  \n0.276232\n \n-\n1.087401\n\n\n\n\n\n\u56db\u3001\u9009\u62e9\u6570\u636e\n\n\n\n\n\n\n\u9009\u62e9\u5355\u5217\uff1a\n\n\n\n\n\n\nIn\n \n[\n23\n]:\n \ndf\n[\nA\n]\n  \n#\u53ef\u4f7f\u7528df.A\n\n\nOut\n[\n23\n]:\n \n\n2013\n-\n01\n-\n01\n    \n0.469112\n\n\n2013\n-\n01\n-\n02\n    \n1.212112\n\n\n2013\n-\n01\n-\n03\n   \n-\n0.861849\n\n\n2013\n-\n01\n-\n04\n    \n0.721555\n\n\n2013\n-\n01\n-\n05\n   \n-\n0.424972\n\n\n2013\n-\n01\n-\n06\n   \n-\n0.673690\n\n\nFreq\n:\n \nD\n,\n \nName\n:\n \nA\n,\n \ndtype\n:\n \nfloat64\n\n\n\n\n\n\n\n\n\n\u9009\u62e9\u5c40\u90e8\uff1a\n\n\n\n\n\n\nIn\n \n[\n24\n]:\n \ndf\n[\n0\n:\n3\n]\n\n\nOut\n[\n24\n]:\n \n                   \nA\n         \nB\n         \nC\n         \nD\n\n\n2013\n-\n01\n-\n01\n  \n0.469112\n \n-\n0.282863\n \n-\n1.509059\n \n-\n1.135632\n\n\n2013\n-\n01\n-\n02\n  \n1.212112\n \n-\n0.173215\n  \n0.119209\n \n-\n1.044236\n\n\n2013\n-\n01\n-\n03\n \n-\n0.861849\n \n-\n2.104569\n \n-\n0.494929\n  \n1.071804\n\n\n\nIn\n \n[\n25\n]:\n \ndf\n[\n20130102\n:\n20130104\n]\n\n\nOut\n[\n25\n]:\n \n                   \nA\n         \nB\n         \nC\n         \nD\n\n\n2013\n-\n01\n-\n02\n  \n1.212112\n \n-\n0.173215\n  \n0.119209\n \n-\n1.044236\n\n\n2013\n-\n01\n-\n03\n \n-\n0.861849\n \n-\n2.104569\n \n-\n0.494929\n  \n1.071804\n\n\n2013\n-\n01\n-\n04\n  \n0.721555\n \n-\n0.706771\n \n-\n1.039575\n  \n0.271860\n\n\n\n\n\n\n\n\n\n\u6807\u7b7e\u9009\u62e9\uff1a\n\n\u901a\u8fc7\u884c\u952e\uff0c\u5217\u952e\n\n\n\n\nIn\n \n[\n26\n]:\n \ndf\n.\nloc\n[\ndates\n[\n0\n]]\n        \n#\u9009\u62e9\u4e00\u884c\uff0c\u4f1a\u964d\u7ef4\n\n\nOut\n[\n26\n]:\n \n\nA\n    \n0.469112\n\n\nB\n   \n-\n0.282863\n\n\nC\n   \n-\n1.509059\n\n\nD\n   \n-\n1.135632\n\n\nName\n:\n \n2013\n-\n01\n-\n01\n \n00\n:\n00\n:\n00\n,\n \ndtype\n:\n \nfloat64\n\n\n\n\n\nIn\n \n[\n27\n]:\n \ndf\n.\nloc\n[:,[\nA\n,\nB\n]]\n  \n#\u5c40\u90e8\u9009\u62e9\n\n\nOut\n[\n27\n]:\n \n                   \nA\n         \nB\n\n\n2013\n-\n01\n-\n01\n  \n0.469112\n \n-\n0.282863\n\n\n2013\n-\n01\n-\n02\n  \n1.212112\n \n-\n0.173215\n\n\n2013\n-\n01\n-\n03\n \n-\n0.861849\n \n-\n2.104569\n\n\n2013\n-\n01\n-\n04\n  \n0.721555\n \n-\n0.706771\n\n\n2013\n-\n01\n-\n05\n \n-\n0.424972\n  \n0.567020\n\n\n2013\n-\n01\n-\n06\n \n-\n0.673690\n  \n0.113648\n\n\n\n\n\nIn\n \n[\n28\n]:\n \ndf\n.\nloc\n[\n20130102\n:\n20130104\n,[\nA\n,\nB\n]]\n    \n#\u5c40\u90e8\u9009\u62e9\n\n\nOut\n[\n28\n]:\n \n                   \nA\n         \nB\n\n\n2013\n-\n01\n-\n02\n  \n1.212112\n \n-\n0.173215\n\n\n2013\n-\n01\n-\n03\n \n-\n0.861849\n \n-\n2.104569\n\n\n2013\n-\n01\n-\n04\n  \n0.721555\n \n-\n0.706771\n\n\n\n\n\nIn\n \n[\n29\n]:\n \ndf\n.\nloc\n[\n20130102\n,[\nA\n,\nB\n]]\n   \n#\u9009\u62e9\u4e00\u884c\uff0c\u4f1a\u964d\u7ef4\n\n\nOut\n[\n29\n]:\n \n\nA\n    \n1.212112\n\n\nB\n   \n-\n0.173215\n\n\nName\n:\n \n2013\n-\n01\n-\n02\n \n00\n:\n00\n:\n00\n,\n \ndtype\n:\n \nfloat64\n\n\n\n\n\nIn\n \n[\n30\n]:\n \ndf\n.\nloc\n[\ndates\n[\n0\n],\nA\n]\n   \n#\u9009\u62e9\u5177\u4f53\u67d0\u4e2a\u5143\u7d20\uff0c\u4f1a\u964d\u7ef4\n\n\nOut\n[\n30\n]:\n \n0.46911229990718628\n\n\n\n\n\nIn\n \n[\n31\n]:\n \ndf\n.\nat\n[\ndates\n[\n0\n],\nA\n]\n     \n#\u9009\u62e9\u5177\u4f53\u67d0\u4e2a\u5143\u7d20\uff0c\u4f1a\u964d\u7ef4\n\n\nOut\n[\n31\n]:\n \n0.46911229990718628\n\n\n\n\n\n\n\n\n\n\u4f4d\u7f6e\u9009\u62e9\uff1a\n\n\u5b58\u5728\u4e00\u4e2a\u4ece0\u5f00\u59cb\u7c7b\u4f3c\u4e8e\u6570\u7ec4\n\n\n\n\nIn\n \n[\n32\n]:\n \ndf\n.\niloc\n[\n3\n]\n\n\nOut\n[\n32\n]:\n \n\nA\n    \n0.721555\n\n\nB\n   \n-\n0.706771\n\n\nC\n   \n-\n1.039575\n\n\nD\n    \n0.271860\n\n\nName\n:\n \n2013\n-\n01\n-\n04\n \n00\n:\n00\n:\n00\n,\n \ndtype\n:\n \nfloat64\n\n\n\n\n\nIn\n \n[\n33\n]:\n \ndf\n.\niloc\n[\n3\n:\n5\n,\n0\n:\n2\n]\n\n\nOut\n[\n33\n]:\n \n                   \nA\n         \nB\n\n\n2013\n-\n01\n-\n04\n  \n0.721555\n \n-\n0.706771\n\n\n2013\n-\n01\n-\n05\n \n-\n0.424972\n  \n0.567020\n\n\n\n\n\nIn\n \n[\n34\n]:\n \ndf\n.\niloc\n[[\n1\n,\n2\n,\n4\n],[\n0\n,\n2\n]]\n\n\nOut\n[\n34\n]:\n \n                   \nA\n         \nC\n\n\n2013\n-\n01\n-\n02\n  \n1.212112\n  \n0.119209\n\n\n2013\n-\n01\n-\n03\n \n-\n0.861849\n \n-\n0.494929\n\n\n2013\n-\n01\n-\n05\n \n-\n0.424972\n  \n0.276232\n\n\n\n\n\nIn\n \n[\n35\n]:\n \ndf\n.\niloc\n[\n1\n:\n3\n,:]\n\n\nOut\n[\n35\n]:\n \n                   \nA\n         \nB\n         \nC\n         \nD\n\n\n2013\n-\n01\n-\n02\n  \n1.212112\n \n-\n0.173215\n  \n0.119209\n \n-\n1.044236\n\n\n2013\n-\n01\n-\n03\n \n-\n0.861849\n \n-\n2.104569\n \n-\n0.494929\n  \n1.071804\n\n\n\n\n\nIn\n \n[\n36\n]:\n \ndf\n.\niloc\n[:,\n1\n:\n3\n]\n\n\nOut\n[\n36\n]:\n \n                   \nB\n         \nC\n\n\n2013\n-\n01\n-\n01\n \n-\n0.282863\n \n-\n1.509059\n\n\n2013\n-\n01\n-\n02\n \n-\n0.173215\n  \n0.119209\n\n\n2013\n-\n01\n-\n03\n \n-\n2.104569\n \n-\n0.494929\n\n\n2013\n-\n01\n-\n04\n \n-\n0.706771\n \n-\n1.039575\n\n\n2013\n-\n01\n-\n05\n  \n0.567020\n  \n0.276232\n\n\n2013\n-\n01\n-\n06\n  \n0.113648\n \n-\n1.478427\n\n\n\n\n\nIn\n \n[\n37\n]:\n \ndf\n.\niloc\n[\n1\n,\n1\n]\n\n\nOut\n[\n37\n]:\n \n-\n0.17321464905330858\n\n\n\n\n\nIn\n \n[\n38\n]:\n \ndf\n.\niat\n[\n1\n,\n1\n]\n\n\nOut\n[\n38\n]:\n \n-\n0.17321464905330858\n\n\n\n\n\n\n\n\n\n\u5e03\u5c14\u7d22\u5f15\uff1a\n\n\n\n\n\n\nIn\n \n[\n39\n]:\n \ndf\n[\ndf\n.\nA\n \n \n0\n]\n\n\nOut\n[\n39\n]:\n \n                   \nA\n         \nB\n         \nC\n         \nD\n\n\n2013\n-\n01\n-\n01\n  \n0.469112\n \n-\n0.282863\n \n-\n1.509059\n \n-\n1.135632\n\n\n2013\n-\n01\n-\n02\n  \n1.212112\n \n-\n0.173215\n  \n0.119209\n \n-\n1.044236\n\n\n2013\n-\n01\n-\n04\n  \n0.721555\n \n-\n0.706771\n \n-\n1.039575\n  \n0.271860\n\n\n\n\n\nIn\n \n[\n40\n]:\n \ndf\n[\ndf\n \n \n0\n]\n\n\nOut\n[\n40\n]:\n \n                   \nA\n         \nB\n         \nC\n         \nD\n\n\n2013\n-\n01\n-\n01\n  \n0.469112\n       \nNaN\n       \nNaN\n       \nNaN\n\n\n2013\n-\n01\n-\n02\n  \n1.212112\n       \nNaN\n  \n0.119209\n       \nNaN\n\n\n2013\n-\n01\n-\n03\n       \nNaN\n       \nNaN\n       \nNaN\n  \n1.071804\n\n\n2013\n-\n01\n-\n04\n  \n0.721555\n       \nNaN\n       \nNaN\n  \n0.271860\n\n\n2013\n-\n01\n-\n05\n       \nNaN\n  \n0.567020\n  \n0.276232\n       \nNaN\n\n\n2013\n-\n01\n-\n06\n       \nNaN\n  \n0.113648\n       \nNaN\n  \n0.524988\n\n\n\n\n\nIn\n \n[\n41\n]:\n \ndf2\n \n=\n \ndf\n.\ncopy\n()\n\n\n\nIn\n \n[\n42\n]:\n \ndf2\n[\nE\n]\n \n=\n \n[\none\n,\n \none\n,\ntwo\n,\nthree\n,\nfour\n,\nthree\n]\n\n\n\nIn\n \n[\n43\n]:\n \ndf2\n\n\nOut\n[\n43\n]:\n \n                   \nA\n         \nB\n         \nC\n         \nD\n      \nE\n\n\n2013\n-\n01\n-\n01\n  \n0.469112\n \n-\n0.282863\n \n-\n1.509059\n \n-\n1.135632\n    \none\n\n\n2013\n-\n01\n-\n02\n  \n1.212112\n \n-\n0.173215\n  \n0.119209\n \n-\n1.044236\n    \none\n\n\n2013\n-\n01\n-\n03\n \n-\n0.861849\n \n-\n2.104569\n \n-\n0.494929\n  \n1.071804\n    \ntwo\n\n\n2013\n-\n01\n-\n04\n  \n0.721555\n \n-\n0.706771\n \n-\n1.039575\n  \n0.271860\n  \nthree\n\n\n2013\n-\n01\n-\n05\n \n-\n0.424972\n  \n0.567020\n  \n0.276232\n \n-\n1.087401\n   \nfour\n\n\n2013\n-\n01\n-\n06\n \n-\n0.673690\n  \n0.113648\n \n-\n1.478427\n  \n0.524988\n  \nthree\n\n\n\nIn\n \n[\n44\n]:\n \ndf2\n[\ndf2\n[\nE\n]\n.\nisin\n([\ntwo\n,\nfour\n])]\n\n\nOut\n[\n44\n]:\n \n                   \nA\n         \nB\n         \nC\n         \nD\n     \nE\n\n\n2013\n-\n01\n-\n03\n \n-\n0.861849\n \n-\n2.104569\n \n-\n0.494929\n  \n1.071804\n   \ntwo\n\n\n2013\n-\n01\n-\n05\n \n-\n0.424972\n  \n0.567020\n  \n0.276232\n \n-\n1.087401\n  \nfour\n\n\n\n\n\n\u4e94\u3001\u4fee\u6539\u6570\u636e\n\n\n\n\n\n\n\u8bfb\u53d6\u65f6\u5c06\u591a\u5217\u5e76\u6210\u4e00\u5217\uff1a\n\n\n\n\n\n\ndef\n \nparse\n(\nx\n):\n\n    \nreturn\n \ndatetime\n.\nstrptime\n(\nx\n,\n \n%Y %m \n%d\n %H\n)\n\n\ndataset\n \n=\n \nread_csv\n(\nraw.csv\n,\n  \nparse_dates\n \n=\n \n[[\nyear\n,\n \nmonth\n,\n \nday\n,\n \nhour\n]],\n \nindex_col\n=\n0\n,\n \ndate_parser\n=\nparse\n)\n\n\n\n\n\n\n\n\n\nSeries\u8d4b\u503c\u5217\uff1a\n\n\n\n\n\n\nIn\n \n[\n45\n]:\n \ns1\n \n=\n \npd\n.\nSeries\n([\n1\n,\n2\n,\n3\n,\n4\n,\n5\n,\n6\n],\n \nindex\n=\npd\n.\ndate_range\n(\n20130102\n,\n \nperiods\n=\n6\n))\n\n\n\nIn\n \n[\n46\n]:\n \ns1\n\n\nOut\n[\n46\n]:\n \n\n2013\n-\n01\n-\n02\n    \n1\n\n\n2013\n-\n01\n-\n03\n    \n2\n\n\n2013\n-\n01\n-\n04\n    \n3\n\n\n2013\n-\n01\n-\n05\n    \n4\n\n\n2013\n-\n01\n-\n06\n    \n5\n\n\n2013\n-\n01\n-\n07\n    \n6\n\n\nFreq\n:\n \nD\n,\n \ndtype\n:\n \nint64\n\n\n\nIn\n \n[\n47\n]:\n \ndf\n[\nF\n]\n \n=\n \ns1\n     \n#\u901a\u8fc7Series\u8d4b\u503c\u5217\n\n\n\n\n\n\n\n\n\n\u8d4b\u503c\u5355\u4e2a\u5143\u7d20\uff1a\n\n\n\n\n\n\ndf\n.\nat\n[\ndates\n[\n0\n],\nA\n]\n \n=\n \n0\n\n\ndf\n.\niat\n[\n0\n,\n1\n]\n \n=\n \n0\n\n\n\n\n\ndf\n.\nloc\n[:,\nD\n]\n \n=\n \nnp\n.\narray\n([\n5\n]\n \n*\n \nlen\n(\ndf\n))\n   \n#\u901a\u8fc7numpy\u8d4b\u503c\u5217\n\n\nIn\n \n[\n51\n]:\n \ndf\n\n\nOut\n[\n51\n]:\n \n                   \nA\n         \nB\n         \nC\n  \nD\n    \nF\n\n\n2013\n-\n01\n-\n01\n  \n0.000000\n  \n0.000000\n \n-\n1.509059\n  \n5\n  \nNaN\n\n\n2013\n-\n01\n-\n02\n  \n1.212112\n \n-\n0.173215\n  \n0.119209\n  \n5\n  \n1.0\n\n\n2013\n-\n01\n-\n03\n \n-\n0.861849\n \n-\n2.104569\n \n-\n0.494929\n  \n5\n  \n2.0\n\n\n2013\n-\n01\n-\n04\n  \n0.721555\n \n-\n0.706771\n \n-\n1.039575\n  \n5\n  \n3.0\n\n\n2013\n-\n01\n-\n05\n \n-\n0.424972\n  \n0.567020\n  \n0.276232\n  \n5\n  \n4.0\n\n\n2013\n-\n01\n-\n06\n \n-\n0.673690\n  \n0.113648\n \n-\n1.478427\n  \n5\n  \n5.0\n\n\n\n\n\nIn\n \n[\n52\n]:\n \ndf2\n \n=\n \ndf\n.\ncopy\n()\n\n\n\nIn\n \n[\n53\n]:\n \ndf2\n[\ndf2\n \n \n0\n]\n \n=\n \n-\ndf2\n    \n#\u4e3a\u6bcf\u4e2a\u6570\u636e\u8d4b\u503c\n\n\n\nIn\n \n[\n54\n]:\n \ndf2\n\n\nOut\n[\n54\n]:\n \n                   \nA\n         \nB\n         \nC\n  \nD\n    \nF\n\n\n2013\n-\n01\n-\n01\n  \n0.000000\n  \n0.000000\n \n-\n1.509059\n \n-\n5\n  \nNaN\n\n\n2013\n-\n01\n-\n02\n \n-\n1.212112\n \n-\n0.173215\n \n-\n0.119209\n \n-\n5\n \n-\n1.0\n\n\n2013\n-\n01\n-\n03\n \n-\n0.861849\n \n-\n2.104569\n \n-\n0.494929\n \n-\n5\n \n-\n2.0\n\n\n2013\n-\n01\n-\n04\n \n-\n0.721555\n \n-\n0.706771\n \n-\n1.039575\n \n-\n5\n \n-\n3.0\n\n\n2013\n-\n01\n-\n05\n \n-\n0.424972\n \n-\n0.567020\n \n-\n0.276232\n \n-\n5\n \n-\n4.0\n\n\n2013\n-\n01\n-\n06\n \n-\n0.673690\n \n-\n0.113648\n \n-\n1.478427\n \n-\n5\n \n-\n5.0\n\n\n\n\n\n\n\n\n\n\u4fee\u6539\u7d22\u5f15\uff1a\n\n\n\n\n\n\nIn\n \n[\n55\n]:\n \ndf1\n \n=\n \ndf\n.\nreindex\n(\nindex\n=\ndates\n[\n0\n:\n4\n],\n \ncolumns\n=\nlist\n(\ndf\n.\ncolumns\n)\n \n+\n \n[\nE\n])\n   \n#\u4fee\u6539DataFrame\u7684\u952e\n\n\n\nIn\n \n[\n56\n]:\n \ndf1\n.\nloc\n[\ndates\n[\n0\n]:\ndates\n[\n1\n],\nE\n]\n \n=\n \n1\n\n\n\nIn\n \n[\n57\n]:\n \ndf1\n\n\nOut\n[\n57\n]:\n \n                   \nA\n         \nB\n         \nC\n  \nD\n    \nF\n    \nE\n\n\n2013\n-\n01\n-\n01\n  \n0.000000\n  \n0.000000\n \n-\n1.509059\n  \n5\n  \nNaN\n  \n1.0\n\n\n2013\n-\n01\n-\n02\n  \n1.212112\n \n-\n0.173215\n  \n0.119209\n  \n5\n  \n1.0\n  \n1.0\n\n\n2013\n-\n01\n-\n03\n \n-\n0.861849\n \n-\n2.104569\n \n-\n0.494929\n  \n5\n  \n2.0\n  \nNaN\n\n\n2013\n-\n01\n-\n04\n  \n0.721555\n \n-\n0.706771\n \n-\n1.039575\n  \n5\n  \n3.0\n  \nNaN\n\n\n\n\n\n\u516d\u3001\u7f3a\u5931\u503c\u5904\u7406\n\n\npandas\u7528numpy.nan\u8868\u793a\u7f3a\u5931\u503c\uff0c\u4e0d\u53c2\u4e0e\u8ba1\u7b97\u3002 \n+ ## \u53bb\u6389\u7f3a\u5931\u884c\uff1a\n\n\nIn\n \n[\n58\n]:\n \ndf1\n.\ndropna\n(\nhow\n=\nany\n)\n\n\nOut\n[\n58\n]:\n \n                   \nA\n         \nB\n         \nC\n  \nD\n    \nF\n    \nE\n\n\n2013\n-\n01\n-\n02\n  \n1.212112\n \n-\n0.173215\n  \n0.119209\n  \n5\n  \n1.0\n  \n1.0\n\n\n\n\n\n\n\n\n\n\u586b\u5145\u7f3a\u5931\u503c\uff1a\n\n\n\n\n\n\nIn\n \n[\n59\n]:\n \ndf1\n.\nfillna\n(\nvalue\n=\n5\n)\n   \n#\u5bf9\u7f3a\u5931\u503c\u5904\u8fdb\u884c\u586b\u5145\n\n\nOut\n[\n59\n]:\n \n                   \nA\n         \nB\n         \nC\n  \nD\n    \nF\n    \nE\n\n\n2013\n-\n01\n-\n01\n  \n0.000000\n  \n0.000000\n \n-\n1.509059\n  \n5\n  \n5.0\n  \n1.0\n\n\n2013\n-\n01\n-\n02\n  \n1.212112\n \n-\n0.173215\n  \n0.119209\n  \n5\n  \n1.0\n  \n1.0\n\n\n2013\n-\n01\n-\n03\n \n-\n0.861849\n \n-\n2.104569\n \n-\n0.494929\n  \n5\n  \n2.0\n  \n5.0\n\n\n2013\n-\n01\n-\n04\n  \n0.721555\n \n-\n0.706771\n \n-\n1.039575\n  \n5\n  \n3.0\n  \n5.0\n\n\n\n\n\n\n\n\n\n\u5224\u65ad\u4f55\u5904\u7f3a\u5931\uff1a\n\n\n\n\n\n\nIn\n \n[\n60\n]:\n \npd\n.\nisnull\n(\ndf1\n)\n    \n#\u5224\u65ad\u4f4d\u7f6e\u5143\u7d20\u662f\u5426\u4e3a\u7f3a\u5931\u503c\n\n\nOut\n[\n60\n]:\n \n                \nA\n      \nB\n      \nC\n      \nD\n      \nF\n      \nE\n\n\n2013\n-\n01\n-\n01\n  \nFalse\n  \nFalse\n  \nFalse\n  \nFalse\n   \nTrue\n  \nFalse\n\n\n2013\n-\n01\n-\n02\n  \nFalse\n  \nFalse\n  \nFalse\n  \nFalse\n  \nFalse\n  \nFalse\n\n\n2013\n-\n01\n-\n03\n  \nFalse\n  \nFalse\n  \nFalse\n  \nFalse\n  \nFalse\n   \nTrue\n\n\n2013\n-\n01\n-\n04\n  \nFalse\n  \nFalse\n  \nFalse\n  \nFalse\n  \nFalse\n   \nTrue\n\n\n\n\n\n\u4e03\u3001\u64cd\u4f5c\n\n\n\n\n\n\n\u504f\u79fb\uff08\u5bf9\u9f50\uff09\u5143\u7d20\uff1a\n\n\n\n\n\n\nIn\n \n[\n63\n]:\n \ns\n \n=\n \npd\n.\nSeries\n([\n1\n,\n3\n,\n5\n,\nnp\n.\nnan\n,\n6\n,\n8\n],\n \nindex\n=\ndates\n)\n.\nshift\n(\n2\n)\n                   \n#\u5e8f\u5217\u5143\u7d20\u504f\u79fb\u4e24\u4f4d\n\n\n\nIn\n \n[\n64\n]:\n \ns\n\n\nOut\n[\n64\n]:\n \n\n2013\n-\n01\n-\n01\n    \nNaN\n\n\n2013\n-\n01\n-\n02\n    \nNaN\n\n\n2013\n-\n01\n-\n03\n    \n1.0\n\n\n2013\n-\n01\n-\n04\n    \n3.0\n\n\n2013\n-\n01\n-\n05\n    \n5.0\n\n\n2013\n-\n01\n-\n06\n    \nNaN\n\n\nFreq\n:\n \nD\n,\n \ndtype\n:\n \nfloat64\n\n\n\nIn\n \n[\n65\n]:\n \ndf\n.\nsub\n(\ns\n,\n \naxis\n=\nindex\n)\n\n\nOut\n[\n65\n]:\n \n                   \nA\n         \nB\n         \nC\n    \nD\n    \nF\n\n\n2013\n-\n01\n-\n01\n       \nNaN\n       \nNaN\n       \nNaN\n  \nNaN\n  \nNaN\n\n\n2013\n-\n01\n-\n02\n       \nNaN\n       \nNaN\n       \nNaN\n  \nNaN\n  \nNaN\n\n\n2013\n-\n01\n-\n03\n \n-\n1.861849\n \n-\n3.104569\n \n-\n1.494929\n  \n4.0\n  \n1.0\n\n\n2013\n-\n01\n-\n04\n \n-\n2.278445\n \n-\n3.706771\n \n-\n4.039575\n  \n2.0\n  \n0.0\n\n\n2013\n-\n01\n-\n05\n \n-\n5.424972\n \n-\n4.432980\n \n-\n4.723768\n  \n0.0\n \n-\n1.0\n\n\n2013\n-\n01\n-\n06\n       \nNaN\n       \nNaN\n       \nNaN\n  \nNaN\n  \nNaN\n\n\n\n\n\n\n\n\n\n\u5bf9\u5143\u7d20\u5e94\u7528\u51fd\u6570\uff1a\n\n\n\n\n\n\nIn\n \n[\n66\n]:\n \ndf\n.\napply\n(\nnp\n.\ncumsum\n)\n    \n#\u5bf9\u5bf9\u8c61\u6bcf\u4e2a\u5143\u7d20\u5e94\u7528\u51fd\u6570\n\n\nOut\n[\n66\n]:\n \n                   \nA\n         \nB\n         \nC\n   \nD\n     \nF\n\n\n2013\n-\n01\n-\n01\n  \n0.000000\n  \n0.000000\n \n-\n1.509059\n   \n5\n   \nNaN\n\n\n2013\n-\n01\n-\n02\n  \n1.212112\n \n-\n0.173215\n \n-\n1.389850\n  \n10\n   \n1.0\n\n\n2013\n-\n01\n-\n03\n  \n0.350263\n \n-\n2.277784\n \n-\n1.884779\n  \n15\n   \n3.0\n\n\n2013\n-\n01\n-\n04\n  \n1.071818\n \n-\n2.984555\n \n-\n2.924354\n  \n20\n   \n6.0\n\n\n2013\n-\n01\n-\n05\n  \n0.646846\n \n-\n2.417535\n \n-\n2.648122\n  \n25\n  \n10.0\n\n\n2013\n-\n01\n-\n06\n \n-\n0.026844\n \n-\n2.303886\n \n-\n4.126549\n  \n30\n  \n15.0\n\n\n\nIn\n \n[\n67\n]:\n \ndf\n.\napply\n(\nlambda\n \nx\n:\n \nx\n.\nmax\n()\n \n-\n \nx\n.\nmin\n())\n\n\nOut\n[\n67\n]:\n \n\nA\n    \n2.073961\n\n\nB\n    \n2.671590\n\n\nC\n    \n1.785291\n\n\nD\n    \n0.000000\n\n\nF\n    \n4.000000\n\n\ndtype\n:\n \nfloat64\n\n\n\n\n\n\n\n\n\n\u76f4\u65b9\u56fe\uff1a\n\n\n\n\n\n\nIn\n \n[\n68\n]:\n \ns\n \n=\n \npd\n.\nSeries\n(\nnp\n.\nrandom\n.\nrandint\n(\n0\n,\n \n7\n,\n \nsize\n=\n10\n))\n\n\n\nIn\n \n[\n69\n]:\n \ns\n\n\nOut\n[\n69\n]:\n \n\n0\n    \n4\n\n\n1\n    \n2\n\n\n2\n    \n1\n\n\n3\n    \n2\n\n\n4\n    \n6\n\n\n5\n    \n4\n\n\n6\n    \n4\n\n\n7\n    \n6\n\n\n8\n    \n4\n\n\n9\n    \n4\n\n\ndtype\n:\n \nint64\n\n\n\nIn\n \n[\n70\n]:\n \ns\n.\nvalue_counts\n()\n   \n#\u7edf\u8ba1\u503c\u4ee5\u6570\u5b57\u683c\u5f0f\u663e\u793a\u76f4\u65b9\u56fe\n\n\nOut\n[\n70\n]:\n \n\n4\n    \n5\n\n\n6\n    \n2\n\n\n2\n    \n2\n\n\n1\n    \n1\n\n\ndtype\n:\n \nint64\n\n\n\n\n\n\n\n\n\n\u5b57\u7b26\u4e32\u64cd\u4f5c\uff1a\n\n\n\n\n\n\nIn\n \n[\n71\n]:\n \ns\n \n=\n \npd\n.\nSeries\n([\nA\n,\n \nB\n,\n \nC\n,\n \nAaba\n,\n \nBaca\n,\n \nnp\n.\nnan\n,\n \nCABA\n,\n \ndog\n,\n \ncat\n])\n\n\n\nIn\n \n[\n72\n]:\n \ns\n.\nstr\n.\nlower\n()\n   \n#\u5e8f\u5217\u5b57\u7b26\u4e32\u8f6c\u6210\u5c0f\u5199\u5b57\u6bcd\n\n\nOut\n[\n72\n]:\n \n\n0\n       \na\n\n\n1\n       \nb\n\n\n2\n       \nc\n\n\n3\n    \naaba\n\n\n4\n    \nbaca\n\n\n5\n     \nNaN\n\n\n6\n    \ncaba\n\n\n7\n     \ndog\n\n\n8\n     \ncat\n\n\ndtype\n:\n \nobject\n\n\n\n\n\n\u516b\u3001\u5408\u5e76\n\n\n\n\n\n\nComcat\uff1a\n\n\n\n\n\n\nIn\n \n[\n73\n]:\n \ndf\n \n=\n \npd\n.\nDataFrame\n(\nnp\n.\nrandom\n.\nrandn\n(\n10\n,\n \n4\n))\n\n\n\nIn\n \n[\n74\n]:\n \ndf\n\n\nOut\n[\n74\n]:\n \n          \n0\n         \n1\n         \n2\n         \n3\n\n\n0\n \n-\n0.548702\n  \n1.467327\n \n-\n1.015962\n \n-\n0.483075\n\n\n1\n  \n1.637550\n \n-\n1.217659\n \n-\n0.291519\n \n-\n1.745505\n\n\n2\n \n-\n0.263952\n  \n0.991460\n \n-\n0.919069\n  \n0.266046\n\n\n3\n \n-\n0.709661\n  \n1.669052\n  \n1.037882\n \n-\n1.705775\n\n\n4\n \n-\n0.919854\n \n-\n0.042379\n  \n1.247642\n \n-\n0.009920\n\n\n5\n  \n0.290213\n  \n0.495767\n  \n0.362949\n  \n1.548106\n\n\n6\n \n-\n1.131345\n \n-\n0.089329\n  \n0.337863\n \n-\n0.945867\n\n\n7\n \n-\n0.932132\n  \n1.956030\n  \n0.017587\n \n-\n0.016692\n\n\n8\n \n-\n0.575247\n  \n0.254161\n \n-\n1.143704\n  \n0.215897\n\n\n9\n  \n1.193555\n \n-\n0.077118\n \n-\n0.408530\n \n-\n0.862495\n\n\n\\\n# break it into pieces\n\n\nIn\n \n[\n75\n]:\n \npieces\n \n=\n \n[\ndf\n[:\n3\n],\n \ndf\n[\n3\n:\n7\n],\n \ndf\n[\n7\n:]]\n\n\n\nIn\n \n[\n76\n]:\n \npd\n.\nconcat\n(\npieces\n)\n\n\nOut\n[\n76\n]:\n \n          \n0\n         \n1\n         \n2\n         \n3\n\n\n0\n \n-\n0.548702\n  \n1.467327\n \n-\n1.015962\n \n-\n0.483075\n\n\n1\n  \n1.637550\n \n-\n1.217659\n \n-\n0.291519\n \n-\n1.745505\n\n\n2\n \n-\n0.263952\n  \n0.991460\n \n-\n0.919069\n  \n0.266046\n\n\n3\n \n-\n0.709661\n  \n1.669052\n  \n1.037882\n \n-\n1.705775\n\n\n4\n \n-\n0.919854\n \n-\n0.042379\n  \n1.247642\n \n-\n0.009920\n\n\n5\n  \n0.290213\n  \n0.495767\n  \n0.362949\n  \n1.548106\n\n\n6\n \n-\n1.131345\n \n-\n0.089329\n  \n0.337863\n \n-\n0.945867\n\n\n7\n \n-\n0.932132\n  \n1.956030\n  \n0.017587\n \n-\n0.016692\n\n\n8\n \n-\n0.575247\n  \n0.254161\n \n-\n1.143704\n  \n0.215897\n\n\n9\n  \n1.193555\n \n-\n0.077118\n \n-\n0.408530\n \n-\n0.862495\n\n\n\n\n\n\n\n\n\nJoin\uff1a\n\n\n\n\n\n\nIn\n \n[\n78\n]:\n \nright\n \n=\n \npd\n.\nDataFrame\n({\nkey\n:\n \n[\nfoo\n,\n \nfoo\n],\n \nrval\n:\n \n[\n4\n,\n \n5\n]})\n\n\n\nIn\n \n[\n79\n]:\n \nleft\n\n\nOut\n[\n79\n]:\n \n   \nkey\n  \nlval\n\n\n0\n  \nfoo\n     \n1\n\n\n1\n  \nfoo\n     \n2\n\n\n\nIn\n \n[\n80\n]:\n \nright\n\n\nOut\n[\n80\n]:\n \n   \nkey\n  \nrval\n\n\n0\n  \nfoo\n     \n4\n\n\n1\n  \nfoo\n     \n5\n\n\n\nIn\n \n[\n81\n]:\n \npd\n.\nmerge\n(\nleft\n,\n \nright\n,\n \non\n=\nkey\n)\n\n\nOut\n[\n81\n]:\n \n   \nkey\n  \nlval\n  \nrval\n\n\n0\n  \nfoo\n     \n1\n     \n4\n\n\n1\n  \nfoo\n     \n1\n     \n5\n\n\n2\n  \nfoo\n     \n2\n     \n4\n\n\n3\n  \nfoo\n     \n2\n     \n5\n\n\n\n\n\nIn\n \n[\n82\n]:\n \nleft\n \n=\n \npd\n.\nDataFrame\n({\nkey\n:\n \n[\nfoo\n,\n \nbar\n],\n \nlval\n:\n \n[\n1\n,\n \n2\n]})\n\n\n\nIn\n \n[\n83\n]:\n \nright\n \n=\n \npd\n.\nDataFrame\n({\nkey\n:\n \n[\nfoo\n,\n \nbar\n],\n \nrval\n:\n \n[\n4\n,\n \n5\n]})\n\n\n\nIn\n \n[\n84\n]:\n \nleft\n\n\nOut\n[\n84\n]:\n \n   \nkey\n  \nlval\n\n\n0\n  \nfoo\n     \n1\n\n\n1\n  \nbar\n     \n2\n\n\n\nIn\n \n[\n85\n]:\n \nright\n\n\nOut\n[\n85\n]:\n \n   \nkey\n  \nrval\n\n\n0\n  \nfoo\n     \n4\n\n\n1\n  \nbar\n     \n5\n\n\n\nIn\n \n[\n86\n]:\n \npd\n.\nmerge\n(\nleft\n,\n \nright\n,\n \non\n=\nkey\n)\n\n\nOut\n[\n86\n]:\n \n   \nkey\n  \nlval\n  \nrval\n\n\n0\n  \nfoo\n     \n1\n     \n4\n\n\n1\n  \nbar\n     \n2\n     \n5\n\n\n\n\n\n\n\n\n\nAppend\uff1a\n\n\n\n\n\n\nIn\n \n[\n87\n]:\n \ndf\n \n=\n \npd\n.\nDataFrame\n(\nnp\n.\nrandom\n.\nrandn\n(\n8\n,\n \n4\n),\n \ncolumns\n=\n[\nA\n,\nB\n,\nC\n,\nD\n])\n\n\n\nIn\n \n[\n88\n]:\n \ndf\n\n\nOut\n[\n88\n]:\n \n          \nA\n         \nB\n         \nC\n         \nD\n\n\n0\n  \n1.346061\n  \n1.511763\n  \n1.627081\n \n-\n0.990582\n\n\n1\n \n-\n0.441652\n  \n1.211526\n  \n0.268520\n  \n0.024580\n\n\n2\n \n-\n1.577585\n  \n0.396823\n \n-\n0.105381\n \n-\n0.532532\n\n\n3\n  \n1.453749\n  \n1.208843\n \n-\n0.080952\n \n-\n0.264610\n\n\n4\n \n-\n0.727965\n \n-\n0.589346\n  \n0.339969\n \n-\n0.693205\n\n\n5\n \n-\n0.339355\n  \n0.593616\n  \n0.884345\n  \n1.591431\n\n\n6\n  \n0.141809\n  \n0.220390\n  \n0.435589\n  \n0.192451\n\n\n7\n \n-\n0.096701\n  \n0.803351\n  \n1.715071\n \n-\n0.708758\n\n\n\nIn\n \n[\n89\n]:\n \ns\n \n=\n \ndf\n.\niloc\n[\n3\n]\n\n\n\nIn\n \n[\n90\n]:\n \ndf\n.\nappend\n(\ns\n,\n \nignore_index\n=\nTrue\n)\n\n\nOut\n[\n90\n]:\n \n          \nA\n         \nB\n         \nC\n         \nD\n\n\n0\n  \n1.346061\n  \n1.511763\n  \n1.627081\n \n-\n0.990582\n\n\n1\n \n-\n0.441652\n  \n1.211526\n  \n0.268520\n  \n0.024580\n\n\n2\n \n-\n1.577585\n  \n0.396823\n \n-\n0.105381\n \n-\n0.532532\n\n\n3\n  \n1.453749\n  \n1.208843\n \n-\n0.080952\n \n-\n0.264610\n\n\n4\n \n-\n0.727965\n \n-\n0.589346\n  \n0.339969\n \n-\n0.693205\n\n\n5\n \n-\n0.339355\n  \n0.593616\n  \n0.884345\n  \n1.591431\n\n\n6\n  \n0.141809\n  \n0.220390\n  \n0.435589\n  \n0.192451\n\n\n7\n \n-\n0.096701\n  \n0.803351\n  \n1.715071\n \n-\n0.708758\n\n\n8\n  \n1.453749\n  \n1.208843\n \n-\n0.080952\n \n-\n0.264610\n\n\n\n\n\n\u4e5d\u3001\u5206\u7ec4\n\n\nIn\n \n[\n91\n]:\n \ndf\n \n=\n \npd\n.\nDataFrame\n({\nA\n \n:\n \n[\nfoo\n,\n \nbar\n,\n \nfoo\n,\n \nbar\n,\n\n   \n....\n:\n                           \nfoo\n,\n \nbar\n,\n \nfoo\n,\n \nfoo\n],\n\n   \n....\n:\n                    \nB\n \n:\n \n[\none\n,\n \none\n,\n \ntwo\n,\n \nthree\n,\n\n   \n....\n:\n                           \ntwo\n,\n \ntwo\n,\n \none\n,\n \nthree\n],\n\n   \n....\n:\n                    \nC\n \n:\n \nnp\n.\nrandom\n.\nrandn\n(\n8\n),\n\n   \n....\n:\n                    \nD\n \n:\n \nnp\n.\nrandom\n.\nrandn\n(\n8\n)})\n\n   \n....\n:\n \n\n\nIn\n \n[\n92\n]:\n \ndf\n\n\nOut\n[\n92\n]:\n \n     \nA\n      \nB\n         \nC\n         \nD\n\n\n0\n  \nfoo\n    \none\n \n-\n1.202872\n \n-\n0.055224\n\n\n1\n  \nbar\n    \none\n \n-\n1.814470\n  \n2.395985\n\n\n2\n  \nfoo\n    \ntwo\n  \n1.018601\n  \n1.552825\n\n\n3\n  \nbar\n  \nthree\n \n-\n0.595447\n  \n0.166599\n\n\n4\n  \nfoo\n    \ntwo\n  \n1.395433\n  \n0.047609\n\n\n5\n  \nbar\n    \ntwo\n \n-\n0.392670\n \n-\n0.136473\n\n\n6\n  \nfoo\n    \none\n  \n0.007207\n \n-\n0.561757\n\n\n7\n  \nfoo\n  \nthree\n  \n1.928123\n \n-\n1.623033\n\n\n\nIn\n \n[\n93\n]:\n \ndf\n.\ngroupby\n(\nA\n)\n.\nsum\n()\n  \n#\u5bf9\u952eindex A\u5206\u7ec4\u8fdb\u884c\u5e76\u5bf9\u6bcf\u4e2a\u7ec4\u6267\u884csum\u51fd\u6570\n\n\nOut\n[\n93\n]:\n \n            \nC\n        \nD\n\n\nA\n                     \n\nbar\n \n-\n2.802588\n  \n2.42611\n\n\nfoo\n  \n3.146492\n \n-\n0.63958\n\n\n\n\n\nIn\n \n[\n94\n]:\n \ndf\n.\ngroupby\n([\nA\n,\nB\n])\n.\nsum\n()\n   \n#\u5bf9index A B\u8fdb\u884c\u5206\u7ec4\u5e76\u5bf9\u6bcf\u4e2a\u7ec4\u6267\u884csum\u51fd\u6570\n\n\nOut\n[\n94\n]:\n \n                  \nC\n         \nD\n\n\nA\n   \nB\n                        \n\nbar\n \none\n   \n-\n1.814470\n  \n2.395985\n\n    \nthree\n \n-\n0.595447\n  \n0.166599\n\n    \ntwo\n   \n-\n0.392670\n \n-\n0.136473\n\n\nfoo\n \none\n   \n-\n1.195665\n \n-\n0.616981\n\n    \nthree\n  \n1.928123\n \n-\n1.623033\n\n    \ntwo\n    \n2.414034\n  \n1.600434\n\n\n\n\n\n\u5341\u3001\u91cd\u5207\u7247\n\n\n\n\n\n\nstack\uff1a\u538b\u7f29DataFrame\u5217\n\n\n\n\n\n\nIn\n \n[\n99\n]:\n \ndf2\n\n\nOut\n[\n99\n]:\n \n                     \nA\n         \nB\n\n\nfirst\n \nsecond\n                    \n\nbar\n   \none\n     \n0.029399\n \n-\n0.542108\n\n      \ntwo\n     \n0.282696\n \n-\n0.087302\n\n\nbaz\n   \none\n    \n-\n1.575170\n  \n1.771208\n\n      \ntwo\n     \n0.816482\n  \n1.100230\n\n\nIn\n \n[\n100\n]:\n \nstacked\n \n=\n \ndf2\n.\nstack\n()\n\n\n\nIn\n \n[\n101\n]:\n \nstacked\n  \n=\n \ndf2\n.\nstack\n()\n\n\nOut\n[\n101\n]:\n \nstacked\n\n\nfirst\n  \nsecond\n   \n\nbar\n    \none\n     \nA\n    \n0.029399\n\n               \nB\n   \n-\n0.542108\n\n       \ntwo\n     \nA\n    \n0.282696\n\n               \nB\n   \n-\n0.087302\n\n\nbaz\n    \none\n     \nA\n   \n-\n1.575170\n\n               \nB\n    \n1.771208\n\n       \ntwo\n     \nA\n    \n0.816482\n\n               \nB\n    \n1.100230\n\n\ndtype\n:\n \nfloat64\n\n\n\n\n\n\n\n\n\nunstack\u53cd\u89e3\u538b\u5230\u4e0a\u4e00\u5c42\uff0c\u4e0d\u540c\u53c2\u6570\u89e3\u538b\u5c42\u4e0d\u540c\n\n\n\n\n\n\nIn\n \n[\n102\n]:\n \nstacked\n.\nunstack\n()\n\n\nOut\n[\n102\n]:\n \n                     \nA\n         \nB\n\n\nfirst\n \nsecond\n                    \n\nbar\n   \none\n     \n0.029399\n \n-\n0.542108\n\n      \ntwo\n     \n0.282696\n \n-\n0.087302\n\n\nbaz\n   \none\n    \n-\n1.575170\n  \n1.771208\n\n      \ntwo\n     \n0.816482\n  \n1.100230\n\n\n\nIn\n \n[\n103\n]:\n \nstacked\n.\nunstack\n(\n1\n)\n\n\nOut\n[\n103\n]:\n \n\nsecond\n        \none\n       \ntwo\n\n\nfirst\n                      \n\nbar\n   \nA\n  \n0.029399\n  \n0.282696\n\n      \nB\n \n-\n0.542108\n \n-\n0.087302\n\n\nbaz\n   \nA\n \n-\n1.575170\n  \n0.816482\n\n      \nB\n  \n1.771208\n  \n1.100230\n\n\n\nIn\n \n[\n104\n]:\n \nstacked\n.\nunstack\n(\n0\n)\n\n\nOut\n[\n104\n]:\n \n\nfirst\n          \nbar\n       \nbaz\n\n\nsecond\n                      \n\none\n    \nA\n  \n0.029399\n \n-\n1.575170\n\n       \nB\n \n-\n0.542108\n  \n1.771208\n\n\ntwo\n    \nA\n  \n0.282696\n  \n0.816482\n\n\n\n\n\n\n\n\n\n\u900f\u89c6Pivot\u8868\uff1a\n\n\n\n\n\n\nIn\n \n[\n106\n]:\n \ndf\n\n\nOut\n[\n106\n]:\n \n        \nA\n  \nB\n    \nC\n         \nD\n         \nE\n\n\n0\n     \none\n  \nA\n  \nfoo\n  \n1.418757\n \n-\n0.179666\n\n\n1\n     \none\n  \nB\n  \nfoo\n \n-\n1.879024\n  \n1.291836\n\n\n2\n     \ntwo\n  \nC\n  \nfoo\n  \n0.536826\n \n-\n0.009614\n\n\n3\n   \nthree\n  \nA\n  \nbar\n  \n1.006160\n  \n0.392149\n\n\n4\n     \none\n  \nB\n  \nbar\n \n-\n0.029716\n  \n0.264599\n\n\n5\n     \none\n  \nC\n  \nbar\n \n-\n1.146178\n \n-\n0.057409\n\n\n6\n     \ntwo\n  \nA\n  \nfoo\n  \n0.100900\n \n-\n1.425638\n\n\n7\n   \nthree\n  \nB\n  \nfoo\n \n-\n1.035018\n  \n1.024098\n\n\n8\n     \none\n  \nC\n  \nfoo\n  \n0.314665\n \n-\n0.106062\n\n\n9\n     \none\n  \nA\n  \nbar\n \n-\n0.773723\n  \n1.824375\n\n\n10\n    \ntwo\n  \nB\n  \nbar\n \n-\n1.170653\n  \n0.595974\n\n\n11\n  \nthree\n  \nC\n  \nbar\n  \n0.648740\n  \n1.167115\n\n\nIn\n \n[\n107\n]:\n \npd\n.\npivot_table\n(\ndf\n,\n \nvalues\n=\nD\n,\n \nindex\n=\n[\nA\n,\n \nB\n],\n \ncolumns\n=\n[\nC\n])\n\n\nOut\n[\n107\n]:\n \n\nC\n             \nbar\n       \nfoo\n\n\nA\n     \nB\n                    \n\none\n   \nA\n \n-\n0.773723\n  \n1.418757\n\n      \nB\n \n-\n0.029716\n \n-\n1.879024\n\n      \nC\n \n-\n1.146178\n  \n0.314665\n\n\nthree\n \nA\n  \n1.006160\n       \nNaN\n\n      \nB\n       \nNaN\n \n-\n1.035018\n\n      \nC\n  \n0.648740\n       \nNaN\n\n\ntwo\n   \nA\n       \nNaN\n  \n0.100900\n\n      \nB\n \n-\n1.170653\n       \nNaN\n\n      \nC\n       \nNaN\n  \n0.536826\n\n\n\n\n\n\u5341\u4e00\u3001\u65f6\u95f4\u5e8f\u5217\n\n\n\n\n\n\n\u751f\u6210\uff1a\n\n\n\n\n\n\nIn\n \n[\n108\n]:\n \nrng\n \n=\n \npd\n.\ndate_range\n(\n1/1/2012\n,\n \nperiods\n=\n100\n,\n \nfreq\n=\nS\n)\n\n\n\nIn\n \n[\n109\n]:\n \nts\n \n=\n \npd\n.\nSeries\n(\nnp\n.\nrandom\n.\nrandint\n(\n0\n,\n \n500\n,\n \nlen\n(\nrng\n)),\n \nindex\n=\nrng\n)\n\n\n\nIn\n \n[\n110\n]:\n \nts\n.\nresample\n(\n5Min\n)\n.\nsum\n()\n\n\nOut\n[\n110\n]:\n \n\n2012\n-\n01\n-\n01\n    \n25083\n\n\nFreq\n:\n \n5\nT\n,\n \ndtype\n:\n \nint64\n\n\n\n\n\nIn\n \n[\n111\n]:\n \nrng\n \n=\n \npd\n.\ndate_range\n(\n3/6/2012 00:00\n,\n \nperiods\n=\n5\n,\n \nfreq\n=\nD\n)\n\n\n\nIn\n \n[\n112\n]:\n \nts\n \n=\n \npd\n.\nSeries\n(\nnp\n.\nrandom\n.\nrandn\n(\nlen\n(\nrng\n)),\n \nrng\n)\n\n\n\nIn\n \n[\n113\n]:\n \nts\n\n\nOut\n[\n113\n]:\n \n\n2012\n-\n03\n-\n06\n    \n0.464000\n\n\n2012\n-\n03\n-\n07\n    \n0.227371\n\n\n2012\n-\n03\n-\n08\n   \n-\n0.496922\n\n\n2012\n-\n03\n-\n09\n    \n0.306389\n\n\n2012\n-\n03\n-\n10\n   \n-\n2.290613\n\n\nFreq\n:\n \nD\n,\n \ndtype\n:\n \nfloat64\n\n\n\nIn\n \n[\n114\n]:\n \nts_utc\n \n=\n \nts\n.\ntz_localize\n(\nUTC\n)\n\n\n\nIn\n \n[\n115\n]:\n \nts_utc\n\n\nOut\n[\n115\n]:\n \n\n2012\n-\n03\n-\n06\n \n00\n:\n00\n:\n00\n+\n00\n:\n00\n    \n0.464000\n\n\n2012\n-\n03\n-\n07\n \n00\n:\n00\n:\n00\n+\n00\n:\n00\n    \n0.227371\n\n\n2012\n-\n03\n-\n08\n \n00\n:\n00\n:\n00\n+\n00\n:\n00\n   \n-\n0.496922\n\n\n2012\n-\n03\n-\n09\n \n00\n:\n00\n:\n00\n+\n00\n:\n00\n    \n0.306389\n\n\n2012\n-\n03\n-\n10\n \n00\n:\n00\n:\n00\n+\n00\n:\n00\n   \n-\n2.290613\n\n\nFreq\n:\n \nD\n,\n \ndtype\n:\n \nfloat64\n\n\n\n\n\n\n\n\n\n\u8f6c\u6362\u65f6\u95f4\u533a\uff1a\n\n\n\n\n\n\nIn\n \n[\n116\n]:\n \nts_utc\n.\ntz_convert\n(\nUS/Eastern\n)\n\n\nOut\n[\n116\n]:\n \n\n2012\n-\n03\n-\n05\n \n19\n:\n00\n:\n00\n-\n05\n:\n00\n    \n0.464000\n\n\n2012\n-\n03\n-\n06\n \n19\n:\n00\n:\n00\n-\n05\n:\n00\n    \n0.227371\n\n\n2012\n-\n03\n-\n07\n \n19\n:\n00\n:\n00\n-\n05\n:\n00\n   \n-\n0.496922\n\n\n2012\n-\n03\n-\n08\n \n19\n:\n00\n:\n00\n-\n05\n:\n00\n    \n0.306389\n\n\n2012\n-\n03\n-\n09\n \n19\n:\n00\n:\n00\n-\n05\n:\n00\n   \n-\n2.290613\n\n\nFreq\n:\n \nD\n,\n \ndtype\n:\n \nfloat64\n\n\n\n\n\n\n\n\n\n\u663e\u793a\u683c\u5f0f\u8f6c\u6362\uff1a\n\n\n\n\n\n\nIn\n \n[\n117\n]:\n \nrng\n \n=\n \npd\n.\ndate_range\n(\n1/1/2012\n,\n \nperiods\n=\n5\n,\n \nfreq\n=\nM\n)\n\n\n\nIn\n \n[\n118\n]:\n \nts\n \n=\n \npd\n.\nSeries\n(\nnp\n.\nrandom\n.\nrandn\n(\nlen\n(\nrng\n)),\n \nindex\n=\nrng\n)\n\n\n\nIn\n \n[\n119\n]:\n \nts\n\n\nOut\n[\n119\n]:\n \n\n2012\n-\n01\n-\n31\n   \n-\n1.134623\n\n\n2012\n-\n02\n-\n29\n   \n-\n1.561819\n\n\n2012\n-\n03\n-\n31\n   \n-\n0.260838\n\n\n2012\n-\n04\n-\n30\n    \n0.281957\n\n\n2012\n-\n05\n-\n31\n    \n1.523962\n\n\nFreq\n:\n \nM\n,\n \ndtype\n:\n \nfloat64\n\n\n\nIn\n \n[\n120\n]:\n \nps\n \n=\n \nts\n.\nto_period\n()\n\n\n\nIn\n \n[\n121\n]:\n \nps\n\n\nOut\n[\n121\n]:\n \n\n2012\n-\n01\n   \n-\n1.134623\n\n\n2012\n-\n02\n   \n-\n1.561819\n\n\n2012\n-\n03\n   \n-\n0.260838\n\n\n2012\n-\n04\n    \n0.281957\n\n\n2012\n-\n05\n    \n1.523962\n\n\nFreq\n:\n \nM\n,\n \ndtype\n:\n \nfloat64\n\n\n\nIn\n \n[\n122\n]:\n \nps\n.\nto_timestamp\n()\n\n\nOut\n[\n122\n]:\n \n\n2012\n-\n01\n-\n01\n   \n-\n1.134623\n\n\n2012\n-\n02\n-\n01\n   \n-\n1.561819\n\n\n2012\n-\n03\n-\n01\n   \n-\n0.260838\n\n\n2012\n-\n04\n-\n01\n    \n0.281957\n\n\n2012\n-\n05\n-\n01\n    \n1.523962\n\n\nFreq\n:\n \nMS\n,\n \ndtype\n:\n \nfloat64\n\n\n\n\n\nIn\n \n[\n123\n]:\n \nprng\n \n=\n \npd\n.\nperiod_range\n(\n1990Q1\n,\n \n2000Q4\n,\n \nfreq\n=\nQ-NOV\n)\n\n\n\nIn\n \n[\n124\n]:\n \nts\n \n=\n \npd\n.\nSeries\n(\nnp\n.\nrandom\n.\nrandn\n(\nlen\n(\nprng\n)),\n \nprng\n)\n\n\n\nIn\n \n[\n125\n]:\n \nts\n.\nindex\n \n=\n \n(\nprng\n.\nasfreq\n(\nM\n,\n \ne\n)\n \n+\n \n1\n)\n.\nasfreq\n(\nH\n,\n \ns\n)\n \n+\n \n9\n\n\n\nIn\n \n[\n126\n]:\n \nts\n.\nhead\n()\n\n\nOut\n[\n126\n]:\n \n\n1990\n-\n03\n-\n01\n \n09\n:\n00\n   \n-\n0.902937\n\n\n1990\n-\n06\n-\n01\n \n09\n:\n00\n    \n0.068159\n\n\n1990\n-\n09\n-\n01\n \n09\n:\n00\n   \n-\n0.057873\n\n\n1990\n-\n12\n-\n01\n \n09\n:\n00\n   \n-\n0.368204\n\n\n1991\n-\n03\n-\n01\n \n09\n:\n00\n   \n-\n1.144073\n\n\nFreq\n:\n \nH\n,\n \ndtype\n:\n \nfloat64\n\n\n\n\n\n\u5341\u4e8c\u3001categoricals\n\n\nversion 0.15\u540eDataFrame\u80fd\u591f\u5305\u542bcategorical\n\n\nIn\n \n[\n127\n]:\n \ndf\n \n=\n \npd\n.\nDataFrame\n({\nid\n:[\n1\n,\n2\n,\n3\n,\n4\n,\n5\n,\n6\n],\n \nraw\\_grade\n:[\na\n,\n \nb\n,\n \nb\n,\n \na\n,\n \na\n,\n \ne\n]})\n\n\nIn\n \n[\n128\n]:\n \ndf\n[\ngrade\n]\n \n=\n \ndf\n[\nraw\\_grade\n]\n.\nastype\n(\ncategory\n)\n\n\n\nIn\n \n[\n129\n]:\n \ndf\n[\ngrade\n]\n\n\nOut\n[\n129\n]:\n \n\n0\n    \na\n\n\n1\n    \nb\n\n\n2\n    \nb\n\n\n3\n    \na\n\n\n4\n    \na\n\n\n5\n    \ne\n\n\nName\n:\n \ngrade\n,\n \ndtype\n:\n \ncategory\n\n\nCategories\n \n(\n3\n,\n \nobject\n):\n \n[\na\n,\n \nb\n,\n \ne\n]\n\n\n\n\n\n\n\n\n\n\u91cd\u547d\u540dcategorical\uff1a\n\n\n\n\n\n\ndf\n[\ngrade\n]\n.\ncat\n.\ncategories\n \n=\n \n[\nvery good\n,\n \ngood\n,\n \nvery bad\n]\n\n\n\n\n\n\n\n\n\n\u91cd\u6392categorical\u5e76\u52a0\u5165\u7f3a\u5931categorical\uff1a\n\n\n\n\n\n\nIn\n \n[\n131\n]:\n \ndf\n[\ngrade\n]\n \n=\n \ndf\n[\ngrade\n]\n.\ncat\n.\nset_categories\n([\nvery bad\n,\n \nbad\n,\n \nmedium\n,\n \ngood\n,\n \nvery good\n])\n\n\n\nIn\n \n[\n132\n]:\n \ndf\n[\ngrade\n]\n\n\nOut\n[\n132\n]:\n \n\n0\n    \nvery\n \ngood\n\n\n1\n         \ngood\n\n\n2\n         \ngood\n\n\n3\n    \nvery\n \ngood\n\n\n4\n    \nvery\n \ngood\n\n\n5\n     \nvery\n \nbad\n\n\nName\n:\n \ngrade\n,\n \ndtype\n:\n \ncategory\n\n\nCategories\n \n(\n5\n,\n \nobject\n):\n \n[\nvery\n \nbad\n,\n \nbad\n,\n \nmedium\n,\n \ngood\n,\n \nvery\n \ngood\n]\n\n\n\n\n\n\n\n\n\n\u6839\u636ecategorical\u6392\u5e8f\uff1a\n\n\n\n\n\n\nIn\n \n[\n133\n]:\n \ndf\n.\nsort_values\n(\nby\n=\ngrade\n)\n\n\nOut\n[\n133\n]:\n \n   \nid\n \nraw_grade\n      \ngrade\n\n\n5\n   \n6\n         \ne\n   \nvery\n \nbad\n\n\n1\n   \n2\n         \nb\n       \ngood\n\n\n2\n   \n3\n         \nb\n       \ngood\n\n\n0\n   \n1\n         \na\n  \nvery\n \ngood\n\n\n3\n   \n4\n         \na\n  \nvery\n \ngood\n\n\n\n\n\n\n\n\n\n\u5206\u7ec4categorical\uff1a\n\n\n\n\n\n\nIn\n \n[\n134\n]:\n \ndf\n.\ngroupby\n(\ngrade\n)\n.\nsize\n()\n\n\nOut\n[\n134\n]:\n \n\ngrade\n\n\nvery\n \nbad\n     \n1\n\n\nbad\n          \n0\n\n\nmedium\n       \n0\n\n\ngood\n         \n2\n\n\nvery\n \ngood\n    \n3\n\n\ndtype\n:\n \nint64\n\n\n\n\n\n\u5341\u4e09\u3001\u753b\u56fe\n\n\n\u5b98\u65b9\u6587\u6863\n \n\u4e00\u822c\u4e0d\u4f7f\u7528pandas\u7684\u753b\u56fe\u529f\u80fd\uff0c\u800c\u4f7f\u7528\u5176\u4ed6\u5982matplotlib\u7b49\u3002\n\n\n\u5341\u56db\u3001\u8bfb\u53d6\u5b58\u50a8\n\n\n\n\n\n\nCSV\uff1a\n\n\n\n\n\n\n\u5199\u5165\uff1a\n\n \ndf\n.\nto_csv\n(\nfoo.csv\n)\n\n\n\u8bfb\u53d6\uff1a\n\n \nIn\n \n[\n142\n]:\n \npd\n.\nread_csv\n(\nfoo.csv\n)\n\n\nOut\n[\n142\n]:\n \n     \nUnnamed\n:\n \n0\n          \nA\n          \nB\n         \nC\n          \nD\n\n\n0\n    \n2000\n-\n01\n-\n01\n   \n0.266457\n  \n-\n0.399641\n \n-\n0.219582\n   \n1.186860\n\n\n1\n    \n2000\n-\n01\n-\n02\n  \n-\n1.170732\n  \n-\n0.345873\n  \n1.653061\n  \n-\n0.282953\n\n\n2\n    \n2000\n-\n01\n-\n03\n  \n-\n1.734933\n   \n0.530468\n  \n2.060811\n  \n-\n0.515536\n\n\n3\n    \n2000\n-\n01\n-\n04\n  \n-\n1.555121\n   \n1.452620\n  \n0.239859\n  \n-\n1.156896\n\n\n4\n    \n2000\n-\n01\n-\n05\n   \n0.578117\n   \n0.511371\n  \n0.103552\n  \n-\n2.428202\n\n\n5\n    \n2000\n-\n01\n-\n06\n   \n0.478344\n   \n0.449933\n \n-\n0.741620\n  \n-\n1.962409\n\n\n6\n    \n2000\n-\n01\n-\n07\n   \n1.235339\n  \n-\n0.091757\n \n-\n1.543861\n  \n-\n1.084753\n\n\n..\n          \n...\n        \n...\n        \n...\n       \n...\n        \n...\n\n\n993\n  \n2002\n-\n09\n-\n20\n \n-\n10.628548\n  \n-\n9.153563\n \n-\n7.883146\n  \n28.313940\n\n\n994\n  \n2002\n-\n09\n-\n21\n \n-\n10.390377\n  \n-\n8.727491\n \n-\n6.399645\n  \n30.914107\n\n\n995\n  \n2002\n-\n09\n-\n22\n  \n-\n8.985362\n  \n-\n8.485624\n \n-\n4.669462\n  \n31.367740\n\n\n996\n  \n2002\n-\n09\n-\n23\n  \n-\n9.558560\n  \n-\n8.781216\n \n-\n4.499815\n  \n30.518439\n\n\n997\n  \n2002\n-\n09\n-\n24\n  \n-\n9.902058\n  \n-\n9.340490\n \n-\n4.386639\n  \n30.105593\n\n\n998\n  \n2002\n-\n09\n-\n25\n \n-\n10.216020\n  \n-\n9.480682\n \n-\n3.933802\n  \n29.758560\n\n\n999\n  \n2002\n-\n09\n-\n26\n \n-\n11.856774\n \n-\n10.671012\n \n-\n3.216025\n  \n29.369368\n\n\n\n[\n1000\n \nrows\n \nx\n \n5\n \ncolumns\n]\n\n\n\n\n\n\n\n\n\nHDF5\uff1a\n\n\n\n\n\n\ndf\n.\nto_hdf\n(\nfoo.h5\n,\ndf\n)\n\n\nIn\n \n[\n144\n]:\n \npd\n.\nread_hdf\n(\nfoo.h5\n,\ndf\n)\n\n\nOut\n[\n144\n]:\n \n                    \nA\n          \nB\n         \nC\n          \nD\n\n\n2000\n-\n01\n-\n01\n   \n0.266457\n  \n-\n0.399641\n \n-\n0.219582\n   \n1.186860\n\n\n2000\n-\n01\n-\n02\n  \n-\n1.170732\n  \n-\n0.345873\n  \n1.653061\n  \n-\n0.282953\n\n\n2000\n-\n01\n-\n03\n  \n-\n1.734933\n   \n0.530468\n  \n2.060811\n  \n-\n0.515536\n\n\n2000\n-\n01\n-\n04\n  \n-\n1.555121\n   \n1.452620\n  \n0.239859\n  \n-\n1.156896\n\n\n2000\n-\n01\n-\n05\n   \n0.578117\n   \n0.511371\n  \n0.103552\n  \n-\n2.428202\n\n\n2000\n-\n01\n-\n06\n   \n0.478344\n   \n0.449933\n \n-\n0.741620\n  \n-\n1.962409\n\n\n2000\n-\n01\n-\n07\n   \n1.235339\n  \n-\n0.091757\n \n-\n1.543861\n  \n-\n1.084753\n\n\n...\n               \n...\n        \n...\n       \n...\n        \n...\n\n\n2002\n-\n09\n-\n20\n \n-\n10.628548\n  \n-\n9.153563\n \n-\n7.883146\n  \n28.313940\n\n\n2002\n-\n09\n-\n21\n \n-\n10.390377\n  \n-\n8.727491\n \n-\n6.399645\n  \n30.914107\n\n\n2002\n-\n09\n-\n22\n  \n-\n8.985362\n  \n-\n8.485624\n \n-\n4.669462\n  \n31.367740\n\n\n2002\n-\n09\n-\n23\n  \n-\n9.558560\n  \n-\n8.781216\n \n-\n4.499815\n  \n30.518439\n\n\n2002\n-\n09\n-\n24\n  \n-\n9.902058\n  \n-\n9.340490\n \n-\n4.386639\n  \n30.105593\n\n\n2002\n-\n09\n-\n25\n \n-\n10.216020\n  \n-\n9.480682\n \n-\n3.933802\n  \n29.758560\n\n\n2002\n-\n09\n-\n26\n \n-\n11.856774\n \n-\n10.671012\n \n-\n3.216025\n  \n29.369368\n\n\n\n[\n1000\n \nrows\n \nx\n \n4\n \ncolumns\n]\n\n\n\n\n\n\n\n\n\nEXCEL\uff1a\n\n\n\n\n\n\ndf\n.\nto_excel\n(\nfoo.xlsx\n,\n \nsheet_name\n=\nSheet1\n)\n\n\nIn\n \n[\n146\n]:\n \npd\n.\nread_excel\n(\nfoo.xlsx\n,\n \nSheet1\n,\n \nindex_col\n=\nNone\n,\n \nna_values\n=\n[\nNA\n])\n\n\nOut\n[\n146\n]:\n \n                    \nA\n          \nB\n         \nC\n          \nD\n\n\n2000\n-\n01\n-\n01\n   \n0.266457\n  \n-\n0.399641\n \n-\n0.219582\n   \n1.186860\n\n\n2000\n-\n01\n-\n02\n  \n-\n1.170732\n  \n-\n0.345873\n  \n1.653061\n  \n-\n0.282953\n\n\n2000\n-\n01\n-\n03\n  \n-\n1.734933\n   \n0.530468\n  \n2.060811\n  \n-\n0.515536\n\n\n2000\n-\n01\n-\n04\n  \n-\n1.555121\n   \n1.452620\n  \n0.239859\n  \n-\n1.156896\n\n\n2000\n-\n01\n-\n05\n   \n0.578117\n   \n0.511371\n  \n0.103552\n  \n-\n2.428202\n\n\n2000\n-\n01\n-\n06\n   \n0.478344\n   \n0.449933\n \n-\n0.741620\n  \n-\n1.962409\n\n\n2000\n-\n01\n-\n07\n   \n1.235339\n  \n-\n0.091757\n \n-\n1.543861\n  \n-\n1.084753\n\n\n...\n               \n...\n        \n...\n       \n...\n        \n...\n\n\n2002\n-\n09\n-\n20\n \n-\n10.628548\n  \n-\n9.153563\n \n-\n7.883146\n  \n28.313940\n\n\n2002\n-\n09\n-\n21\n \n-\n10.390377\n  \n-\n8.727491\n \n-\n6.399645\n  \n30.914107\n\n\n2002\n-\n09\n-\n22\n  \n-\n8.985362\n  \n-\n8.485624\n \n-\n4.669462\n  \n31.367740\n\n\n2002\n-\n09\n-\n23\n  \n-\n9.558560\n  \n-\n8.781216\n \n-\n4.499815\n  \n30.518439\n\n\n2002\n-\n09\n-\n24\n  \n-\n9.902058\n  \n-\n9.340490\n \n-\n4.386639\n  \n30.105593\n\n\n2002\n-\n09\n-\n25\n \n-\n10.216020\n  \n-\n9.480682\n \n-\n3.933802\n  \n29.758560\n\n\n2002\n-\n09\n-\n26\n \n-\n11.856774\n \n-\n10.671012\n \n-\n3.216025\n  \n29.369368\n\n\n\n[\n1000\n \nrows\n \nx\n \n4\n \ncolumns\n]", 
            "title": "10\u5206\u949f\u4e0a\u624bPandas"
        }, 
        {
            "location": "/\u65e5\u5e38/\u5e38\u7528\u5de5\u5177/10\u5206\u949f\u4e0a\u624bPandas/#_1", 
            "text": "import   pandas   as   pd     #\u6570\u636e\u5206\u6790\uff0c\u4ee3\u7801\u57fa\u4e8enumpy  import   numpy   as   np      #\u5904\u7406\u6570\u636e\uff0c\u4ee3\u7801\u57fa\u4e8endarray  import   matplotlib.pyplot   as   plt        #\u753b\u56fe   matplotlib\u56fe\u5e93\u5177\u6709\u5927\u91cf\u4ee3\u7801\u6848\u4f8b\uff0c\u53ef\u76f4\u63a5\u4f7f\u7528   pandas \u5b98\u7f51\u6559\u7a0b", 
            "title": "\u4e00\u3001\u5f15\u5165"
        }, 
        {
            "location": "/\u65e5\u5e38/\u5e38\u7528\u5de5\u5177/10\u5206\u949f\u4e0a\u624bPandas/#_2", 
            "text": "", 
            "title": "\u4e8c\u3001\u521b\u5efa\u5bf9\u8c61"
        }, 
        {
            "location": "/\u65e5\u5e38/\u5e38\u7528\u5de5\u5177/10\u5206\u949f\u4e0a\u624bPandas/#series", 
            "text": "s   =   pd . Series ([ 1 , 3 , 5 , np . nan , 6 , 8 ])     #\u9ed8\u8ba4\u4ee5\u6570\u5b57\u4ece0\u5f00\u59cb\u4f5c\u4e3a\u952e\u503c,\u4f7f\u7528np.nan\u8868\u793a\u4e0d\u53c2\u4e0e\u8ba1\u7b97  s  0      1.0  1      3.0  2      5.0  3      NaN  4      6.0  5      8.0  dtype :   float64     s   =   pd . Series ( data = [ 1 , 2 , 3 , 4 ], index   =   [ a , b , c , d ])    #\u4f20\u5165\u952e\u548c\u503c\u65b9\u5f0f    s  a      1  b      2  c      3  d      4  dtype :   int64    s . index      #\u83b7\u53d6\u952e\u5217\u8868  Index ([ a ,   b ,   c ,   d ],   dtype = object )    s . values      #\u83b7\u53d6\u503c\u5217\u8868  array ([ 1 ,   2 ,   3 ,   4 ],   dtype = int64 )", 
            "title": "Series\u5b57\u5178\u5bf9\u8c61"
        }, 
        {
            "location": "/\u65e5\u5e38/\u5e38\u7528\u5de5\u5177/10\u5206\u949f\u4e0a\u624bPandas/#dataframe", 
            "text": "In   [ 10 ]:   df2   =   pd . DataFrame ({   A   :   1. , \n                      B   :   pd . Timestamp ( 20130102 ), \n                      C   :   pd . Series ( 1 , index = list ( range ( 4 )), dtype = float32 ),     #\u751f\u6210Series\u5bf9\u8c61,\u53d6\u7684\u662fvalue \n                      D   :   np . array ([ 3 ]   *   4 , dtype = int32 ),    #\u751f\u6210numpy\u5bf9\u8c61 \n                      E   :   pd . Categorical ([ test , train , test , train ]), \n                      F   :   foo   })    In   [ 11 ]:   df2  Out [ 11 ]:            # \u9ed8\u8ba4\u4ee5\u6570\u5b57\u4ece0\u5f00\u59cb\u4f5c\u4e3a\u884c\u952e,\u4ee5\u5b57\u5178\u952e\u4e3a\u5217\u952e \n      A            B      C    D        E      F  0    1.0   2013 - 01 - 02    1.0    3     test    foo  1    1.0   2013 - 01 - 02    1.0    3    train    foo  2    1.0   2013 - 01 - 02    1.0    3     test    foo  3    1.0   2013 - 01 - 02    1.0    3    train    foo   In   [ 6 ]:   dates   =   pd . date_range ( 20130101 ,   periods = 6 )  In   [ 7 ]:   dates  Out [ 7 ]:   DatetimeIndex ([ 2013-01-01 ,   2013-01-02 ,   2013-01-03 ,   2013-01-04 , \n                2013-01-05 ,   2013-01-06 ], \n               dtype = datetime64[ns] ,   freq = D )  In   [ 8 ]:   df   =   pd . DataFrame ( np . random . randn ( 6 , 4 ),   index = dates ,   columns = list ( ABCD ))      #np.random.randn(6,4)\u8fd4\u56de\u4e00\u4e2a\u6837\u672c\uff0c\u5177\u6709\u6807\u51c6\u6b63\u6001\u5206\u5e03  In   [ 9 ]:   df  Out [ 9 ]:            # \u6307\u5b9adates\u4e3a\u884c\u952e\uff0ccolumns\u4e3a\u5217\u952e \n                    A           B           C           D  2013 - 01 - 01    0.469112   - 0.282863   - 1.509059   - 1.135632  2013 - 01 - 02    1.212112   - 0.173215    0.119209   - 1.044236  2013 - 01 - 03   - 0.861849   - 2.104569   - 0.494929    1.071804  2013 - 01 - 04    0.721555   - 0.706771   - 1.039575    0.271860  2013 - 01 - 05   - 0.424972    0.567020    0.276232   - 1.087401  2013 - 01 - 06   - 0.673690    0.113648   - 1.478427    0.524988  In   [ 12 ]:   df2 . dtypes      #\u67e5\u770b\u5217\u6570\u636e\u7c7b\u578b  Out [ 12 ]:   A             float64  B      datetime64 [ ns ]  C             float32  D               int32  E            category  F              object  dtype :   object", 
            "title": "DataFrame\u8868\u683c\u5bf9\u8c61"
        }, 
        {
            "location": "/\u65e5\u5e38/\u5e38\u7528\u5de5\u5177/10\u5206\u949f\u4e0a\u624bPandas/#_3", 
            "text": "", 
            "title": "\u4e09\u3001\u67e5\u770b\u6570\u636e"
        }, 
        {
            "location": "/\u65e5\u5e38/\u5e38\u7528\u5de5\u5177/10\u5206\u949f\u4e0a\u624bPandas/#_4", 
            "text": "In   [ 14 ]:   df . head ()      #\u9ed8\u8ba4\u503c5  Out [ 14 ]:  \n                    A           B           C           D  2013 - 01 - 01    0.469112   - 0.282863   - 1.509059   - 1.135632  2013 - 01 - 02    1.212112   - 0.173215    0.119209   - 1.044236  2013 - 01 - 03   - 0.861849   - 2.104569   - 0.494929    1.071804  2013 - 01 - 04    0.721555   - 0.706771   - 1.039575    0.271860  2013 - 01 - 05   - 0.424972    0.567020    0.276232   - 1.087401  In   [ 15 ]:   df . tail ( 3 )       #\u9ed8\u8ba4\u503c5  Out [ 15 ]:   \n                    A           B           C           D  2013 - 01 - 04    0.721555   - 0.706771   - 1.039575    0.271860  2013 - 01 - 05   - 0.424972    0.567020    0.276232   - 1.087401  2013 - 01 - 06   - 0.673690    0.113648   - 1.478427    0.524988", 
            "title": "\u67e5\u770b\u5934\u5c3e\u6570\u636e\uff1a"
        }, 
        {
            "location": "/\u65e5\u5e38/\u5e38\u7528\u5de5\u5177/10\u5206\u949f\u4e0a\u624bPandas/#_5", 
            "text": "In   [ 16 ]:   df . index  Out [ 16 ]:   DatetimeIndex ([ 2013-01-01 ,   2013-01-02 ,   2013-01-03 ,   2013-01-04 , \n                2013-01-05 ,   2013-01-06 ], \n               dtype = datetime64[ns] ,   freq = D )  In   [ 17 ]:   df . columns  Out [ 17 ]:   Index ([ u A ,   u B ,   u C ,   u D ],   dtype = object )  In   [ 18 ]:   df . values  Out [ 18 ]:   array ([[   0.4691 ,   - 0.2829 ,   - 1.5091 ,   - 1.1356 ], \n        [   1.2121 ,   - 0.1732 ,    0.1192 ,   - 1.0442 ], \n        [ - 0.8618 ,   - 2.1046 ,   - 0.4949 ,    1.0718 ], \n        [   0.7216 ,   - 0.7068 ,   - 1.0396 ,    0.2719 ], \n        [ - 0.425   ,    0.567   ,    0.2762 ,   - 1.0874 ], \n        [ - 0.6737 ,    0.1136 ,   - 1.4784 ,    0.525   ]])", 
            "title": "\u67e5\u770b\u884c\u952e\u3001\u5217\u952e\u3001\u6570\u636e\uff1a"
        }, 
        {
            "location": "/\u65e5\u5e38/\u5e38\u7528\u5de5\u5177/10\u5206\u949f\u4e0a\u624bPandas/#_6", 
            "text": "In   [ 19 ]:   df . describe ()  Out [ 19 ]:  \n               A           B           C           D  count    6.000000    6.000000    6.000000    6.000000  mean     0.073711   - 0.431125   - 0.687758   - 0.233103  std      0.843157    0.922818    0.779887    0.973118  min     - 0.861849   - 2.104569   - 1.509059   - 1.135632  25 %     - 0.611510   - 0.600794   - 1.368714   - 1.076610  50 %      0.022070   - 0.228039   - 0.767252   - 0.386188  75 %      0.658444    0.041933   - 0.034326    0.461706  max      1.212112    0.567020    0.276232    1.071804   train_df . info ()  print ( \\_ * 40 )  class   pandas . core . frame . DataFrame \\  RangeIndex :   891   entries ,   0   to   890  Data   columns   ( total   12   columns ):  PassengerId      891   non - null   int64  Survived         891   non - null   int64  Pclass   891   non - null   int64  Name             891   non - null   object  Sex              891   non - null   object  Age              714   non - null   float64  SibSp            891   non - null   int64  Parch            891   non - null   int64  Ticket           891   non - null   object  Fare             891   non - null   float64  Cabin            204   non - null   object  Embarked         889   non - null   object  dtypes :   float64 ( 2 ),   int64 ( 5 ),   object ( 5 )  memory   usage :   83.6 +   KB  ________________________________________   train_df . describe ( include = [ O ])  Name      Sex   Ticket    Cabin     Embarked  count     891   891   891   204   889  unique    891   2     681   147   3  top   Chronopoulos ,   Mr .   Apostolos   male      CA .   2343      G6    S  freq      1     577   7     4     644", 
            "title": "\u67e5\u770b\u6570\u636e\u6574\u4f53\u6982\u51b5\uff0c\u548c\u3001\u5e73\u5747\u503c\u3001\u6700\u5927\u3001\u6700\u5c0f\u7b49\uff1a"
        }, 
        {
            "location": "/\u65e5\u5e38/\u5e38\u7528\u5de5\u5177/10\u5206\u949f\u4e0a\u624bPandas/#_7", 
            "text": "In   [ 61 ]:   df . mean ()  Out [ 61 ]:   A     - 0.004474  B     - 0.383981  C     - 0.687758  D      5.000000  F      3.000000  dtype :   float64   In   [ 62 ]:   df . mean ( 1 )  Out [ 62 ]:   2013 - 01 - 01      0.872735  2013 - 01 - 02      1.431621  2013 - 01 - 03      0.707731  2013 - 01 - 04      1.395042  2013 - 01 - 05      1.883656  2013 - 01 - 06      1.592306  Freq :   D ,   dtype :   float64", 
            "title": "\u884c\u6216\u5217\u5e73\u5747\u503c\uff1a"
        }, 
        {
            "location": "/\u65e5\u5e38/\u5e38\u7528\u5de5\u5177/10\u5206\u949f\u4e0a\u624bPandas/#_8", 
            "text": "In   [ 20 ]:   df . T  Out [ 20 ]:  \n    2013 - 01 - 01    2013 - 01 - 02    2013 - 01 - 03    2013 - 01 - 04    2013 - 01 - 05    2013 - 01 - 06  A      0.469112      1.212112     - 0.861849      0.721555     - 0.424972     - 0.673690  B     - 0.282863     - 0.173215     - 2.104569     - 0.706771      0.567020      0.113648  C     - 1.509059      0.119209     - 0.494929     - 1.039575      0.276232     - 1.478427  D     - 1.135632     - 1.044236      1.071804      0.271860     - 1.087401      0.524988", 
            "title": "\u8f6c\u7f6e\uff1a"
        }, 
        {
            "location": "/\u65e5\u5e38/\u5e38\u7528\u5de5\u5177/10\u5206\u949f\u4e0a\u624bPandas/#_9", 
            "text": "In   [ 21 ]:   df . sort_index ( axis = 1 ,   ascending = False )      #\u6839\u636e\u8f74\uff0c\u53ef\u4ee5.sort_index(axis=0, by=None, ascending=True)\u3002by\u53c2\u6570\u53ea\u80fd\u5bf9\u5217  Out [ 21 ]:  \n                    D           C           B           A  2013 - 01 - 01   - 1.135632   - 1.509059   - 0.282863    0.469112  2013 - 01 - 02   - 1.044236    0.119209   - 0.173215    1.212112  2013 - 01 - 03    1.071804   - 0.494929   - 2.104569   - 0.861849  2013 - 01 - 04    0.271860   - 1.039575   - 0.706771    0.721555  2013 - 01 - 05   - 1.087401    0.276232    0.567020   - 0.424972  2013 - 01 - 06    0.524988   - 1.478427    0.113648   - 0.673690  Sorting   by   values  In   [ 22 ]:   df . sort_values ( by = B )         #\u6839\u636e\u503c  Out [ 22 ]:  \n                    A           B           C           D  2013 - 01 - 03   - 0.861849   - 2.104569   - 0.494929    1.071804  2013 - 01 - 04    0.721555   - 0.706771   - 1.039575    0.271860  2013 - 01 - 01    0.469112   - 0.282863   - 1.509059   - 1.135632  2013 - 01 - 02    1.212112   - 0.173215    0.119209   - 1.044236  2013 - 01 - 06   - 0.673690    0.113648   - 1.478427    0.524988  2013 - 01 - 05   - 0.424972    0.567020    0.276232   - 1.087401", 
            "title": "\u6839\u636e\u884c\u3001\u5217\u6392\u5e8f\uff1a"
        }, 
        {
            "location": "/\u65e5\u5e38/\u5e38\u7528\u5de5\u5177/10\u5206\u949f\u4e0a\u624bPandas/#_10", 
            "text": "", 
            "title": "\u56db\u3001\u9009\u62e9\u6570\u636e"
        }, 
        {
            "location": "/\u65e5\u5e38/\u5e38\u7528\u5de5\u5177/10\u5206\u949f\u4e0a\u624bPandas/#_11", 
            "text": "In   [ 23 ]:   df [ A ]    #\u53ef\u4f7f\u7528df.A  Out [ 23 ]:   2013 - 01 - 01      0.469112  2013 - 01 - 02      1.212112  2013 - 01 - 03     - 0.861849  2013 - 01 - 04      0.721555  2013 - 01 - 05     - 0.424972  2013 - 01 - 06     - 0.673690  Freq :   D ,   Name :   A ,   dtype :   float64", 
            "title": "\u9009\u62e9\u5355\u5217\uff1a"
        }, 
        {
            "location": "/\u65e5\u5e38/\u5e38\u7528\u5de5\u5177/10\u5206\u949f\u4e0a\u624bPandas/#_12", 
            "text": "In   [ 24 ]:   df [ 0 : 3 ]  Out [ 24 ]:  \n                    A           B           C           D  2013 - 01 - 01    0.469112   - 0.282863   - 1.509059   - 1.135632  2013 - 01 - 02    1.212112   - 0.173215    0.119209   - 1.044236  2013 - 01 - 03   - 0.861849   - 2.104569   - 0.494929    1.071804  In   [ 25 ]:   df [ 20130102 : 20130104 ]  Out [ 25 ]:  \n                    A           B           C           D  2013 - 01 - 02    1.212112   - 0.173215    0.119209   - 1.044236  2013 - 01 - 03   - 0.861849   - 2.104569   - 0.494929    1.071804  2013 - 01 - 04    0.721555   - 0.706771   - 1.039575    0.271860", 
            "title": "\u9009\u62e9\u5c40\u90e8\uff1a"
        }, 
        {
            "location": "/\u65e5\u5e38/\u5e38\u7528\u5de5\u5177/10\u5206\u949f\u4e0a\u624bPandas/#_13", 
            "text": "\u901a\u8fc7\u884c\u952e\uff0c\u5217\u952e   In   [ 26 ]:   df . loc [ dates [ 0 ]]          #\u9009\u62e9\u4e00\u884c\uff0c\u4f1a\u964d\u7ef4  Out [ 26 ]:   A      0.469112  B     - 0.282863  C     - 1.509059  D     - 1.135632  Name :   2013 - 01 - 01   00 : 00 : 00 ,   dtype :   float64   In   [ 27 ]:   df . loc [:,[ A , B ]]    #\u5c40\u90e8\u9009\u62e9  Out [ 27 ]:  \n                    A           B  2013 - 01 - 01    0.469112   - 0.282863  2013 - 01 - 02    1.212112   - 0.173215  2013 - 01 - 03   - 0.861849   - 2.104569  2013 - 01 - 04    0.721555   - 0.706771  2013 - 01 - 05   - 0.424972    0.567020  2013 - 01 - 06   - 0.673690    0.113648   In   [ 28 ]:   df . loc [ 20130102 : 20130104 ,[ A , B ]]      #\u5c40\u90e8\u9009\u62e9  Out [ 28 ]:  \n                    A           B  2013 - 01 - 02    1.212112   - 0.173215  2013 - 01 - 03   - 0.861849   - 2.104569  2013 - 01 - 04    0.721555   - 0.706771   In   [ 29 ]:   df . loc [ 20130102 ,[ A , B ]]     #\u9009\u62e9\u4e00\u884c\uff0c\u4f1a\u964d\u7ef4  Out [ 29 ]:   A      1.212112  B     - 0.173215  Name :   2013 - 01 - 02   00 : 00 : 00 ,   dtype :   float64   In   [ 30 ]:   df . loc [ dates [ 0 ], A ]     #\u9009\u62e9\u5177\u4f53\u67d0\u4e2a\u5143\u7d20\uff0c\u4f1a\u964d\u7ef4  Out [ 30 ]:   0.46911229990718628   In   [ 31 ]:   df . at [ dates [ 0 ], A ]       #\u9009\u62e9\u5177\u4f53\u67d0\u4e2a\u5143\u7d20\uff0c\u4f1a\u964d\u7ef4  Out [ 31 ]:   0.46911229990718628", 
            "title": "\u6807\u7b7e\u9009\u62e9\uff1a"
        }, 
        {
            "location": "/\u65e5\u5e38/\u5e38\u7528\u5de5\u5177/10\u5206\u949f\u4e0a\u624bPandas/#_14", 
            "text": "\u5b58\u5728\u4e00\u4e2a\u4ece0\u5f00\u59cb\u7c7b\u4f3c\u4e8e\u6570\u7ec4   In   [ 32 ]:   df . iloc [ 3 ]  Out [ 32 ]:   A      0.721555  B     - 0.706771  C     - 1.039575  D      0.271860  Name :   2013 - 01 - 04   00 : 00 : 00 ,   dtype :   float64   In   [ 33 ]:   df . iloc [ 3 : 5 , 0 : 2 ]  Out [ 33 ]:  \n                    A           B  2013 - 01 - 04    0.721555   - 0.706771  2013 - 01 - 05   - 0.424972    0.567020   In   [ 34 ]:   df . iloc [[ 1 , 2 , 4 ],[ 0 , 2 ]]  Out [ 34 ]:  \n                    A           C  2013 - 01 - 02    1.212112    0.119209  2013 - 01 - 03   - 0.861849   - 0.494929  2013 - 01 - 05   - 0.424972    0.276232   In   [ 35 ]:   df . iloc [ 1 : 3 ,:]  Out [ 35 ]:  \n                    A           B           C           D  2013 - 01 - 02    1.212112   - 0.173215    0.119209   - 1.044236  2013 - 01 - 03   - 0.861849   - 2.104569   - 0.494929    1.071804   In   [ 36 ]:   df . iloc [:, 1 : 3 ]  Out [ 36 ]:  \n                    B           C  2013 - 01 - 01   - 0.282863   - 1.509059  2013 - 01 - 02   - 0.173215    0.119209  2013 - 01 - 03   - 2.104569   - 0.494929  2013 - 01 - 04   - 0.706771   - 1.039575  2013 - 01 - 05    0.567020    0.276232  2013 - 01 - 06    0.113648   - 1.478427   In   [ 37 ]:   df . iloc [ 1 , 1 ]  Out [ 37 ]:   - 0.17321464905330858   In   [ 38 ]:   df . iat [ 1 , 1 ]  Out [ 38 ]:   - 0.17321464905330858", 
            "title": "\u4f4d\u7f6e\u9009\u62e9\uff1a"
        }, 
        {
            "location": "/\u65e5\u5e38/\u5e38\u7528\u5de5\u5177/10\u5206\u949f\u4e0a\u624bPandas/#_15", 
            "text": "In   [ 39 ]:   df [ df . A     0 ]  Out [ 39 ]:  \n                    A           B           C           D  2013 - 01 - 01    0.469112   - 0.282863   - 1.509059   - 1.135632  2013 - 01 - 02    1.212112   - 0.173215    0.119209   - 1.044236  2013 - 01 - 04    0.721555   - 0.706771   - 1.039575    0.271860   In   [ 40 ]:   df [ df     0 ]  Out [ 40 ]:  \n                    A           B           C           D  2013 - 01 - 01    0.469112         NaN         NaN         NaN  2013 - 01 - 02    1.212112         NaN    0.119209         NaN  2013 - 01 - 03         NaN         NaN         NaN    1.071804  2013 - 01 - 04    0.721555         NaN         NaN    0.271860  2013 - 01 - 05         NaN    0.567020    0.276232         NaN  2013 - 01 - 06         NaN    0.113648         NaN    0.524988   In   [ 41 ]:   df2   =   df . copy ()  In   [ 42 ]:   df2 [ E ]   =   [ one ,   one , two , three , four , three ]  In   [ 43 ]:   df2  Out [ 43 ]:  \n                    A           B           C           D        E  2013 - 01 - 01    0.469112   - 0.282863   - 1.509059   - 1.135632      one  2013 - 01 - 02    1.212112   - 0.173215    0.119209   - 1.044236      one  2013 - 01 - 03   - 0.861849   - 2.104569   - 0.494929    1.071804      two  2013 - 01 - 04    0.721555   - 0.706771   - 1.039575    0.271860    three  2013 - 01 - 05   - 0.424972    0.567020    0.276232   - 1.087401     four  2013 - 01 - 06   - 0.673690    0.113648   - 1.478427    0.524988    three  In   [ 44 ]:   df2 [ df2 [ E ] . isin ([ two , four ])]  Out [ 44 ]:  \n                    A           B           C           D       E  2013 - 01 - 03   - 0.861849   - 2.104569   - 0.494929    1.071804     two  2013 - 01 - 05   - 0.424972    0.567020    0.276232   - 1.087401    four", 
            "title": "\u5e03\u5c14\u7d22\u5f15\uff1a"
        }, 
        {
            "location": "/\u65e5\u5e38/\u5e38\u7528\u5de5\u5177/10\u5206\u949f\u4e0a\u624bPandas/#_16", 
            "text": "", 
            "title": "\u4e94\u3001\u4fee\u6539\u6570\u636e"
        }, 
        {
            "location": "/\u65e5\u5e38/\u5e38\u7528\u5de5\u5177/10\u5206\u949f\u4e0a\u624bPandas/#_17", 
            "text": "def   parse ( x ): \n     return   datetime . strptime ( x ,   %Y %m  %d  %H )  dataset   =   read_csv ( raw.csv ,    parse_dates   =   [[ year ,   month ,   day ,   hour ]],   index_col = 0 ,   date_parser = parse )", 
            "title": "\u8bfb\u53d6\u65f6\u5c06\u591a\u5217\u5e76\u6210\u4e00\u5217\uff1a"
        }, 
        {
            "location": "/\u65e5\u5e38/\u5e38\u7528\u5de5\u5177/10\u5206\u949f\u4e0a\u624bPandas/#series_1", 
            "text": "In   [ 45 ]:   s1   =   pd . Series ([ 1 , 2 , 3 , 4 , 5 , 6 ],   index = pd . date_range ( 20130102 ,   periods = 6 ))  In   [ 46 ]:   s1  Out [ 46 ]:   2013 - 01 - 02      1  2013 - 01 - 03      2  2013 - 01 - 04      3  2013 - 01 - 05      4  2013 - 01 - 06      5  2013 - 01 - 07      6  Freq :   D ,   dtype :   int64  In   [ 47 ]:   df [ F ]   =   s1       #\u901a\u8fc7Series\u8d4b\u503c\u5217", 
            "title": "Series\u8d4b\u503c\u5217\uff1a"
        }, 
        {
            "location": "/\u65e5\u5e38/\u5e38\u7528\u5de5\u5177/10\u5206\u949f\u4e0a\u624bPandas/#_18", 
            "text": "df . at [ dates [ 0 ], A ]   =   0  df . iat [ 0 , 1 ]   =   0   df . loc [:, D ]   =   np . array ([ 5 ]   *   len ( df ))     #\u901a\u8fc7numpy\u8d4b\u503c\u5217  In   [ 51 ]:   df  Out [ 51 ]:  \n                    A           B           C    D      F  2013 - 01 - 01    0.000000    0.000000   - 1.509059    5    NaN  2013 - 01 - 02    1.212112   - 0.173215    0.119209    5    1.0  2013 - 01 - 03   - 0.861849   - 2.104569   - 0.494929    5    2.0  2013 - 01 - 04    0.721555   - 0.706771   - 1.039575    5    3.0  2013 - 01 - 05   - 0.424972    0.567020    0.276232    5    4.0  2013 - 01 - 06   - 0.673690    0.113648   - 1.478427    5    5.0   In   [ 52 ]:   df2   =   df . copy ()  In   [ 53 ]:   df2 [ df2     0 ]   =   - df2      #\u4e3a\u6bcf\u4e2a\u6570\u636e\u8d4b\u503c  In   [ 54 ]:   df2  Out [ 54 ]:  \n                    A           B           C    D      F  2013 - 01 - 01    0.000000    0.000000   - 1.509059   - 5    NaN  2013 - 01 - 02   - 1.212112   - 0.173215   - 0.119209   - 5   - 1.0  2013 - 01 - 03   - 0.861849   - 2.104569   - 0.494929   - 5   - 2.0  2013 - 01 - 04   - 0.721555   - 0.706771   - 1.039575   - 5   - 3.0  2013 - 01 - 05   - 0.424972   - 0.567020   - 0.276232   - 5   - 4.0  2013 - 01 - 06   - 0.673690   - 0.113648   - 1.478427   - 5   - 5.0", 
            "title": "\u8d4b\u503c\u5355\u4e2a\u5143\u7d20\uff1a"
        }, 
        {
            "location": "/\u65e5\u5e38/\u5e38\u7528\u5de5\u5177/10\u5206\u949f\u4e0a\u624bPandas/#_19", 
            "text": "In   [ 55 ]:   df1   =   df . reindex ( index = dates [ 0 : 4 ],   columns = list ( df . columns )   +   [ E ])     #\u4fee\u6539DataFrame\u7684\u952e  In   [ 56 ]:   df1 . loc [ dates [ 0 ]: dates [ 1 ], E ]   =   1  In   [ 57 ]:   df1  Out [ 57 ]:  \n                    A           B           C    D      F      E  2013 - 01 - 01    0.000000    0.000000   - 1.509059    5    NaN    1.0  2013 - 01 - 02    1.212112   - 0.173215    0.119209    5    1.0    1.0  2013 - 01 - 03   - 0.861849   - 2.104569   - 0.494929    5    2.0    NaN  2013 - 01 - 04    0.721555   - 0.706771   - 1.039575    5    3.0    NaN", 
            "title": "\u4fee\u6539\u7d22\u5f15\uff1a"
        }, 
        {
            "location": "/\u65e5\u5e38/\u5e38\u7528\u5de5\u5177/10\u5206\u949f\u4e0a\u624bPandas/#_20", 
            "text": "pandas\u7528numpy.nan\u8868\u793a\u7f3a\u5931\u503c\uff0c\u4e0d\u53c2\u4e0e\u8ba1\u7b97\u3002 \n+ ## \u53bb\u6389\u7f3a\u5931\u884c\uff1a  In   [ 58 ]:   df1 . dropna ( how = any )  Out [ 58 ]:  \n                    A           B           C    D      F      E  2013 - 01 - 02    1.212112   - 0.173215    0.119209    5    1.0    1.0", 
            "title": "\u516d\u3001\u7f3a\u5931\u503c\u5904\u7406"
        }, 
        {
            "location": "/\u65e5\u5e38/\u5e38\u7528\u5de5\u5177/10\u5206\u949f\u4e0a\u624bPandas/#_21", 
            "text": "In   [ 59 ]:   df1 . fillna ( value = 5 )     #\u5bf9\u7f3a\u5931\u503c\u5904\u8fdb\u884c\u586b\u5145  Out [ 59 ]:  \n                    A           B           C    D      F      E  2013 - 01 - 01    0.000000    0.000000   - 1.509059    5    5.0    1.0  2013 - 01 - 02    1.212112   - 0.173215    0.119209    5    1.0    1.0  2013 - 01 - 03   - 0.861849   - 2.104569   - 0.494929    5    2.0    5.0  2013 - 01 - 04    0.721555   - 0.706771   - 1.039575    5    3.0    5.0", 
            "title": "\u586b\u5145\u7f3a\u5931\u503c\uff1a"
        }, 
        {
            "location": "/\u65e5\u5e38/\u5e38\u7528\u5de5\u5177/10\u5206\u949f\u4e0a\u624bPandas/#_22", 
            "text": "In   [ 60 ]:   pd . isnull ( df1 )      #\u5224\u65ad\u4f4d\u7f6e\u5143\u7d20\u662f\u5426\u4e3a\u7f3a\u5931\u503c  Out [ 60 ]:  \n                 A        B        C        D        F        E  2013 - 01 - 01    False    False    False    False     True    False  2013 - 01 - 02    False    False    False    False    False    False  2013 - 01 - 03    False    False    False    False    False     True  2013 - 01 - 04    False    False    False    False    False     True", 
            "title": "\u5224\u65ad\u4f55\u5904\u7f3a\u5931\uff1a"
        }, 
        {
            "location": "/\u65e5\u5e38/\u5e38\u7528\u5de5\u5177/10\u5206\u949f\u4e0a\u624bPandas/#_23", 
            "text": "", 
            "title": "\u4e03\u3001\u64cd\u4f5c"
        }, 
        {
            "location": "/\u65e5\u5e38/\u5e38\u7528\u5de5\u5177/10\u5206\u949f\u4e0a\u624bPandas/#_24", 
            "text": "In   [ 63 ]:   s   =   pd . Series ([ 1 , 3 , 5 , np . nan , 6 , 8 ],   index = dates ) . shift ( 2 )                     #\u5e8f\u5217\u5143\u7d20\u504f\u79fb\u4e24\u4f4d  In   [ 64 ]:   s  Out [ 64 ]:   2013 - 01 - 01      NaN  2013 - 01 - 02      NaN  2013 - 01 - 03      1.0  2013 - 01 - 04      3.0  2013 - 01 - 05      5.0  2013 - 01 - 06      NaN  Freq :   D ,   dtype :   float64  In   [ 65 ]:   df . sub ( s ,   axis = index )  Out [ 65 ]:  \n                    A           B           C      D      F  2013 - 01 - 01         NaN         NaN         NaN    NaN    NaN  2013 - 01 - 02         NaN         NaN         NaN    NaN    NaN  2013 - 01 - 03   - 1.861849   - 3.104569   - 1.494929    4.0    1.0  2013 - 01 - 04   - 2.278445   - 3.706771   - 4.039575    2.0    0.0  2013 - 01 - 05   - 5.424972   - 4.432980   - 4.723768    0.0   - 1.0  2013 - 01 - 06         NaN         NaN         NaN    NaN    NaN", 
            "title": "\u504f\u79fb\uff08\u5bf9\u9f50\uff09\u5143\u7d20\uff1a"
        }, 
        {
            "location": "/\u65e5\u5e38/\u5e38\u7528\u5de5\u5177/10\u5206\u949f\u4e0a\u624bPandas/#_25", 
            "text": "In   [ 66 ]:   df . apply ( np . cumsum )      #\u5bf9\u5bf9\u8c61\u6bcf\u4e2a\u5143\u7d20\u5e94\u7528\u51fd\u6570  Out [ 66 ]:  \n                    A           B           C     D       F  2013 - 01 - 01    0.000000    0.000000   - 1.509059     5     NaN  2013 - 01 - 02    1.212112   - 0.173215   - 1.389850    10     1.0  2013 - 01 - 03    0.350263   - 2.277784   - 1.884779    15     3.0  2013 - 01 - 04    1.071818   - 2.984555   - 2.924354    20     6.0  2013 - 01 - 05    0.646846   - 2.417535   - 2.648122    25    10.0  2013 - 01 - 06   - 0.026844   - 2.303886   - 4.126549    30    15.0  In   [ 67 ]:   df . apply ( lambda   x :   x . max ()   -   x . min ())  Out [ 67 ]:   A      2.073961  B      2.671590  C      1.785291  D      0.000000  F      4.000000  dtype :   float64", 
            "title": "\u5bf9\u5143\u7d20\u5e94\u7528\u51fd\u6570\uff1a"
        }, 
        {
            "location": "/\u65e5\u5e38/\u5e38\u7528\u5de5\u5177/10\u5206\u949f\u4e0a\u624bPandas/#_26", 
            "text": "In   [ 68 ]:   s   =   pd . Series ( np . random . randint ( 0 ,   7 ,   size = 10 ))  In   [ 69 ]:   s  Out [ 69 ]:   0      4  1      2  2      1  3      2  4      6  5      4  6      4  7      6  8      4  9      4  dtype :   int64  In   [ 70 ]:   s . value_counts ()     #\u7edf\u8ba1\u503c\u4ee5\u6570\u5b57\u683c\u5f0f\u663e\u793a\u76f4\u65b9\u56fe  Out [ 70 ]:   4      5  6      2  2      2  1      1  dtype :   int64", 
            "title": "\u76f4\u65b9\u56fe\uff1a"
        }, 
        {
            "location": "/\u65e5\u5e38/\u5e38\u7528\u5de5\u5177/10\u5206\u949f\u4e0a\u624bPandas/#_27", 
            "text": "In   [ 71 ]:   s   =   pd . Series ([ A ,   B ,   C ,   Aaba ,   Baca ,   np . nan ,   CABA ,   dog ,   cat ])  In   [ 72 ]:   s . str . lower ()     #\u5e8f\u5217\u5b57\u7b26\u4e32\u8f6c\u6210\u5c0f\u5199\u5b57\u6bcd  Out [ 72 ]:   0         a  1         b  2         c  3      aaba  4      baca  5       NaN  6      caba  7       dog  8       cat  dtype :   object", 
            "title": "\u5b57\u7b26\u4e32\u64cd\u4f5c\uff1a"
        }, 
        {
            "location": "/\u65e5\u5e38/\u5e38\u7528\u5de5\u5177/10\u5206\u949f\u4e0a\u624bPandas/#_28", 
            "text": "", 
            "title": "\u516b\u3001\u5408\u5e76"
        }, 
        {
            "location": "/\u65e5\u5e38/\u5e38\u7528\u5de5\u5177/10\u5206\u949f\u4e0a\u624bPandas/#comcat", 
            "text": "In   [ 73 ]:   df   =   pd . DataFrame ( np . random . randn ( 10 ,   4 ))  In   [ 74 ]:   df  Out [ 74 ]:  \n           0           1           2           3  0   - 0.548702    1.467327   - 1.015962   - 0.483075  1    1.637550   - 1.217659   - 0.291519   - 1.745505  2   - 0.263952    0.991460   - 0.919069    0.266046  3   - 0.709661    1.669052    1.037882   - 1.705775  4   - 0.919854   - 0.042379    1.247642   - 0.009920  5    0.290213    0.495767    0.362949    1.548106  6   - 1.131345   - 0.089329    0.337863   - 0.945867  7   - 0.932132    1.956030    0.017587   - 0.016692  8   - 0.575247    0.254161   - 1.143704    0.215897  9    1.193555   - 0.077118   - 0.408530   - 0.862495 \n\n\\ # break it into pieces  In   [ 75 ]:   pieces   =   [ df [: 3 ],   df [ 3 : 7 ],   df [ 7 :]]  In   [ 76 ]:   pd . concat ( pieces )  Out [ 76 ]:  \n           0           1           2           3  0   - 0.548702    1.467327   - 1.015962   - 0.483075  1    1.637550   - 1.217659   - 0.291519   - 1.745505  2   - 0.263952    0.991460   - 0.919069    0.266046  3   - 0.709661    1.669052    1.037882   - 1.705775  4   - 0.919854   - 0.042379    1.247642   - 0.009920  5    0.290213    0.495767    0.362949    1.548106  6   - 1.131345   - 0.089329    0.337863   - 0.945867  7   - 0.932132    1.956030    0.017587   - 0.016692  8   - 0.575247    0.254161   - 1.143704    0.215897  9    1.193555   - 0.077118   - 0.408530   - 0.862495", 
            "title": "Comcat\uff1a"
        }, 
        {
            "location": "/\u65e5\u5e38/\u5e38\u7528\u5de5\u5177/10\u5206\u949f\u4e0a\u624bPandas/#join", 
            "text": "In   [ 78 ]:   right   =   pd . DataFrame ({ key :   [ foo ,   foo ],   rval :   [ 4 ,   5 ]})  In   [ 79 ]:   left  Out [ 79 ]:  \n    key    lval  0    foo       1  1    foo       2  In   [ 80 ]:   right  Out [ 80 ]:  \n    key    rval  0    foo       4  1    foo       5  In   [ 81 ]:   pd . merge ( left ,   right ,   on = key )  Out [ 81 ]:  \n    key    lval    rval  0    foo       1       4  1    foo       1       5  2    foo       2       4  3    foo       2       5   In   [ 82 ]:   left   =   pd . DataFrame ({ key :   [ foo ,   bar ],   lval :   [ 1 ,   2 ]})  In   [ 83 ]:   right   =   pd . DataFrame ({ key :   [ foo ,   bar ],   rval :   [ 4 ,   5 ]})  In   [ 84 ]:   left  Out [ 84 ]:  \n    key    lval  0    foo       1  1    bar       2  In   [ 85 ]:   right  Out [ 85 ]:  \n    key    rval  0    foo       4  1    bar       5  In   [ 86 ]:   pd . merge ( left ,   right ,   on = key )  Out [ 86 ]:  \n    key    lval    rval  0    foo       1       4  1    bar       2       5", 
            "title": "Join\uff1a"
        }, 
        {
            "location": "/\u65e5\u5e38/\u5e38\u7528\u5de5\u5177/10\u5206\u949f\u4e0a\u624bPandas/#append", 
            "text": "In   [ 87 ]:   df   =   pd . DataFrame ( np . random . randn ( 8 ,   4 ),   columns = [ A , B , C , D ])  In   [ 88 ]:   df  Out [ 88 ]:  \n           A           B           C           D  0    1.346061    1.511763    1.627081   - 0.990582  1   - 0.441652    1.211526    0.268520    0.024580  2   - 1.577585    0.396823   - 0.105381   - 0.532532  3    1.453749    1.208843   - 0.080952   - 0.264610  4   - 0.727965   - 0.589346    0.339969   - 0.693205  5   - 0.339355    0.593616    0.884345    1.591431  6    0.141809    0.220390    0.435589    0.192451  7   - 0.096701    0.803351    1.715071   - 0.708758  In   [ 89 ]:   s   =   df . iloc [ 3 ]  In   [ 90 ]:   df . append ( s ,   ignore_index = True )  Out [ 90 ]:  \n           A           B           C           D  0    1.346061    1.511763    1.627081   - 0.990582  1   - 0.441652    1.211526    0.268520    0.024580  2   - 1.577585    0.396823   - 0.105381   - 0.532532  3    1.453749    1.208843   - 0.080952   - 0.264610  4   - 0.727965   - 0.589346    0.339969   - 0.693205  5   - 0.339355    0.593616    0.884345    1.591431  6    0.141809    0.220390    0.435589    0.192451  7   - 0.096701    0.803351    1.715071   - 0.708758  8    1.453749    1.208843   - 0.080952   - 0.264610", 
            "title": "Append\uff1a"
        }, 
        {
            "location": "/\u65e5\u5e38/\u5e38\u7528\u5de5\u5177/10\u5206\u949f\u4e0a\u624bPandas/#_29", 
            "text": "In   [ 91 ]:   df   =   pd . DataFrame ({ A   :   [ foo ,   bar ,   foo ,   bar , \n    .... :                             foo ,   bar ,   foo ,   foo ], \n    .... :                      B   :   [ one ,   one ,   two ,   three , \n    .... :                             two ,   two ,   one ,   three ], \n    .... :                      C   :   np . random . randn ( 8 ), \n    .... :                      D   :   np . random . randn ( 8 )}) \n    .... :   In   [ 92 ]:   df  Out [ 92 ]:  \n      A        B           C           D  0    foo      one   - 1.202872   - 0.055224  1    bar      one   - 1.814470    2.395985  2    foo      two    1.018601    1.552825  3    bar    three   - 0.595447    0.166599  4    foo      two    1.395433    0.047609  5    bar      two   - 0.392670   - 0.136473  6    foo      one    0.007207   - 0.561757  7    foo    three    1.928123   - 1.623033  In   [ 93 ]:   df . groupby ( A ) . sum ()    #\u5bf9\u952eindex A\u5206\u7ec4\u8fdb\u884c\u5e76\u5bf9\u6bcf\u4e2a\u7ec4\u6267\u884csum\u51fd\u6570  Out [ 93 ]:  \n             C          D  A                       bar   - 2.802588    2.42611  foo    3.146492   - 0.63958   In   [ 94 ]:   df . groupby ([ A , B ]) . sum ()     #\u5bf9index A B\u8fdb\u884c\u5206\u7ec4\u5e76\u5bf9\u6bcf\u4e2a\u7ec4\u6267\u884csum\u51fd\u6570  Out [ 94 ]:  \n                   C           D  A     B                          bar   one     - 1.814470    2.395985 \n     three   - 0.595447    0.166599 \n     two     - 0.392670   - 0.136473  foo   one     - 1.195665   - 0.616981 \n     three    1.928123   - 1.623033 \n     two      2.414034    1.600434", 
            "title": "\u4e5d\u3001\u5206\u7ec4"
        }, 
        {
            "location": "/\u65e5\u5e38/\u5e38\u7528\u5de5\u5177/10\u5206\u949f\u4e0a\u624bPandas/#_30", 
            "text": "", 
            "title": "\u5341\u3001\u91cd\u5207\u7247"
        }, 
        {
            "location": "/\u65e5\u5e38/\u5e38\u7528\u5de5\u5177/10\u5206\u949f\u4e0a\u624bPandas/#stackdataframe", 
            "text": "In   [ 99 ]:   df2  Out [ 99 ]:  \n                      A           B  first   second                      bar     one       0.029399   - 0.542108 \n       two       0.282696   - 0.087302  baz     one      - 1.575170    1.771208 \n       two       0.816482    1.100230  In   [ 100 ]:   stacked   =   df2 . stack ()  In   [ 101 ]:   stacked    =   df2 . stack ()  Out [ 101 ]:   stacked  first    second     bar      one       A      0.029399 \n                B     - 0.542108 \n        two       A      0.282696 \n                B     - 0.087302  baz      one       A     - 1.575170 \n                B      1.771208 \n        two       A      0.816482 \n                B      1.100230  dtype :   float64", 
            "title": "stack\uff1a\u538b\u7f29DataFrame\u5217"
        }, 
        {
            "location": "/\u65e5\u5e38/\u5e38\u7528\u5de5\u5177/10\u5206\u949f\u4e0a\u624bPandas/#unstack", 
            "text": "In   [ 102 ]:   stacked . unstack ()  Out [ 102 ]:  \n                      A           B  first   second                      bar     one       0.029399   - 0.542108 \n       two       0.282696   - 0.087302  baz     one      - 1.575170    1.771208 \n       two       0.816482    1.100230  In   [ 103 ]:   stacked . unstack ( 1 )  Out [ 103 ]:   second          one         two  first                        bar     A    0.029399    0.282696 \n       B   - 0.542108   - 0.087302  baz     A   - 1.575170    0.816482 \n       B    1.771208    1.100230  In   [ 104 ]:   stacked . unstack ( 0 )  Out [ 104 ]:   first            bar         baz  second                        one      A    0.029399   - 1.575170 \n        B   - 0.542108    1.771208  two      A    0.282696    0.816482", 
            "title": "unstack\u53cd\u89e3\u538b\u5230\u4e0a\u4e00\u5c42\uff0c\u4e0d\u540c\u53c2\u6570\u89e3\u538b\u5c42\u4e0d\u540c"
        }, 
        {
            "location": "/\u65e5\u5e38/\u5e38\u7528\u5de5\u5177/10\u5206\u949f\u4e0a\u624bPandas/#pivot", 
            "text": "In   [ 106 ]:   df  Out [ 106 ]:  \n         A    B      C           D           E  0       one    A    foo    1.418757   - 0.179666  1       one    B    foo   - 1.879024    1.291836  2       two    C    foo    0.536826   - 0.009614  3     three    A    bar    1.006160    0.392149  4       one    B    bar   - 0.029716    0.264599  5       one    C    bar   - 1.146178   - 0.057409  6       two    A    foo    0.100900   - 1.425638  7     three    B    foo   - 1.035018    1.024098  8       one    C    foo    0.314665   - 0.106062  9       one    A    bar   - 0.773723    1.824375  10      two    B    bar   - 1.170653    0.595974  11    three    C    bar    0.648740    1.167115  In   [ 107 ]:   pd . pivot_table ( df ,   values = D ,   index = [ A ,   B ],   columns = [ C ])  Out [ 107 ]:   C               bar         foo  A       B                      one     A   - 0.773723    1.418757 \n       B   - 0.029716   - 1.879024 \n       C   - 1.146178    0.314665  three   A    1.006160         NaN \n       B         NaN   - 1.035018 \n       C    0.648740         NaN  two     A         NaN    0.100900 \n       B   - 1.170653         NaN \n       C         NaN    0.536826", 
            "title": "\u900f\u89c6Pivot\u8868\uff1a"
        }, 
        {
            "location": "/\u65e5\u5e38/\u5e38\u7528\u5de5\u5177/10\u5206\u949f\u4e0a\u624bPandas/#_31", 
            "text": "", 
            "title": "\u5341\u4e00\u3001\u65f6\u95f4\u5e8f\u5217"
        }, 
        {
            "location": "/\u65e5\u5e38/\u5e38\u7528\u5de5\u5177/10\u5206\u949f\u4e0a\u624bPandas/#_32", 
            "text": "In   [ 108 ]:   rng   =   pd . date_range ( 1/1/2012 ,   periods = 100 ,   freq = S )  In   [ 109 ]:   ts   =   pd . Series ( np . random . randint ( 0 ,   500 ,   len ( rng )),   index = rng )  In   [ 110 ]:   ts . resample ( 5Min ) . sum ()  Out [ 110 ]:   2012 - 01 - 01      25083  Freq :   5 T ,   dtype :   int64   In   [ 111 ]:   rng   =   pd . date_range ( 3/6/2012 00:00 ,   periods = 5 ,   freq = D )  In   [ 112 ]:   ts   =   pd . Series ( np . random . randn ( len ( rng )),   rng )  In   [ 113 ]:   ts  Out [ 113 ]:   2012 - 03 - 06      0.464000  2012 - 03 - 07      0.227371  2012 - 03 - 08     - 0.496922  2012 - 03 - 09      0.306389  2012 - 03 - 10     - 2.290613  Freq :   D ,   dtype :   float64  In   [ 114 ]:   ts_utc   =   ts . tz_localize ( UTC )  In   [ 115 ]:   ts_utc  Out [ 115 ]:   2012 - 03 - 06   00 : 00 : 00 + 00 : 00      0.464000  2012 - 03 - 07   00 : 00 : 00 + 00 : 00      0.227371  2012 - 03 - 08   00 : 00 : 00 + 00 : 00     - 0.496922  2012 - 03 - 09   00 : 00 : 00 + 00 : 00      0.306389  2012 - 03 - 10   00 : 00 : 00 + 00 : 00     - 2.290613  Freq :   D ,   dtype :   float64", 
            "title": "\u751f\u6210\uff1a"
        }, 
        {
            "location": "/\u65e5\u5e38/\u5e38\u7528\u5de5\u5177/10\u5206\u949f\u4e0a\u624bPandas/#_33", 
            "text": "In   [ 116 ]:   ts_utc . tz_convert ( US/Eastern )  Out [ 116 ]:   2012 - 03 - 05   19 : 00 : 00 - 05 : 00      0.464000  2012 - 03 - 06   19 : 00 : 00 - 05 : 00      0.227371  2012 - 03 - 07   19 : 00 : 00 - 05 : 00     - 0.496922  2012 - 03 - 08   19 : 00 : 00 - 05 : 00      0.306389  2012 - 03 - 09   19 : 00 : 00 - 05 : 00     - 2.290613  Freq :   D ,   dtype :   float64", 
            "title": "\u8f6c\u6362\u65f6\u95f4\u533a\uff1a"
        }, 
        {
            "location": "/\u65e5\u5e38/\u5e38\u7528\u5de5\u5177/10\u5206\u949f\u4e0a\u624bPandas/#_34", 
            "text": "In   [ 117 ]:   rng   =   pd . date_range ( 1/1/2012 ,   periods = 5 ,   freq = M )  In   [ 118 ]:   ts   =   pd . Series ( np . random . randn ( len ( rng )),   index = rng )  In   [ 119 ]:   ts  Out [ 119 ]:   2012 - 01 - 31     - 1.134623  2012 - 02 - 29     - 1.561819  2012 - 03 - 31     - 0.260838  2012 - 04 - 30      0.281957  2012 - 05 - 31      1.523962  Freq :   M ,   dtype :   float64  In   [ 120 ]:   ps   =   ts . to_period ()  In   [ 121 ]:   ps  Out [ 121 ]:   2012 - 01     - 1.134623  2012 - 02     - 1.561819  2012 - 03     - 0.260838  2012 - 04      0.281957  2012 - 05      1.523962  Freq :   M ,   dtype :   float64  In   [ 122 ]:   ps . to_timestamp ()  Out [ 122 ]:   2012 - 01 - 01     - 1.134623  2012 - 02 - 01     - 1.561819  2012 - 03 - 01     - 0.260838  2012 - 04 - 01      0.281957  2012 - 05 - 01      1.523962  Freq :   MS ,   dtype :   float64   In   [ 123 ]:   prng   =   pd . period_range ( 1990Q1 ,   2000Q4 ,   freq = Q-NOV )  In   [ 124 ]:   ts   =   pd . Series ( np . random . randn ( len ( prng )),   prng )  In   [ 125 ]:   ts . index   =   ( prng . asfreq ( M ,   e )   +   1 ) . asfreq ( H ,   s )   +   9  In   [ 126 ]:   ts . head ()  Out [ 126 ]:   1990 - 03 - 01   09 : 00     - 0.902937  1990 - 06 - 01   09 : 00      0.068159  1990 - 09 - 01   09 : 00     - 0.057873  1990 - 12 - 01   09 : 00     - 0.368204  1991 - 03 - 01   09 : 00     - 1.144073  Freq :   H ,   dtype :   float64", 
            "title": "\u663e\u793a\u683c\u5f0f\u8f6c\u6362\uff1a"
        }, 
        {
            "location": "/\u65e5\u5e38/\u5e38\u7528\u5de5\u5177/10\u5206\u949f\u4e0a\u624bPandas/#categoricals", 
            "text": "version 0.15\u540eDataFrame\u80fd\u591f\u5305\u542bcategorical  In   [ 127 ]:   df   =   pd . DataFrame ({ id :[ 1 , 2 , 3 , 4 , 5 , 6 ],   raw\\_grade :[ a ,   b ,   b ,   a ,   a ,   e ]})  In   [ 128 ]:   df [ grade ]   =   df [ raw\\_grade ] . astype ( category )  In   [ 129 ]:   df [ grade ]  Out [ 129 ]:   0      a  1      b  2      b  3      a  4      a  5      e  Name :   grade ,   dtype :   category  Categories   ( 3 ,   object ):   [ a ,   b ,   e ]", 
            "title": "\u5341\u4e8c\u3001categoricals"
        }, 
        {
            "location": "/\u65e5\u5e38/\u5e38\u7528\u5de5\u5177/10\u5206\u949f\u4e0a\u624bPandas/#categorical", 
            "text": "df [ grade ] . cat . categories   =   [ very good ,   good ,   very bad ]", 
            "title": "\u91cd\u547d\u540dcategorical\uff1a"
        }, 
        {
            "location": "/\u65e5\u5e38/\u5e38\u7528\u5de5\u5177/10\u5206\u949f\u4e0a\u624bPandas/#categoricalcategorical", 
            "text": "In   [ 131 ]:   df [ grade ]   =   df [ grade ] . cat . set_categories ([ very bad ,   bad ,   medium ,   good ,   very good ])  In   [ 132 ]:   df [ grade ]  Out [ 132 ]:   0      very   good  1           good  2           good  3      very   good  4      very   good  5       very   bad  Name :   grade ,   dtype :   category  Categories   ( 5 ,   object ):   [ very   bad ,   bad ,   medium ,   good ,   very   good ]", 
            "title": "\u91cd\u6392categorical\u5e76\u52a0\u5165\u7f3a\u5931categorical\uff1a"
        }, 
        {
            "location": "/\u65e5\u5e38/\u5e38\u7528\u5de5\u5177/10\u5206\u949f\u4e0a\u624bPandas/#categorical_1", 
            "text": "In   [ 133 ]:   df . sort_values ( by = grade )  Out [ 133 ]:  \n    id   raw_grade        grade  5     6           e     very   bad  1     2           b         good  2     3           b         good  0     1           a    very   good  3     4           a    very   good", 
            "title": "\u6839\u636ecategorical\u6392\u5e8f\uff1a"
        }, 
        {
            "location": "/\u65e5\u5e38/\u5e38\u7528\u5de5\u5177/10\u5206\u949f\u4e0a\u624bPandas/#categorical_2", 
            "text": "In   [ 134 ]:   df . groupby ( grade ) . size ()  Out [ 134 ]:   grade  very   bad       1  bad            0  medium         0  good           2  very   good      3  dtype :   int64", 
            "title": "\u5206\u7ec4categorical\uff1a"
        }, 
        {
            "location": "/\u65e5\u5e38/\u5e38\u7528\u5de5\u5177/10\u5206\u949f\u4e0a\u624bPandas/#_35", 
            "text": "\u5b98\u65b9\u6587\u6863  \n\u4e00\u822c\u4e0d\u4f7f\u7528pandas\u7684\u753b\u56fe\u529f\u80fd\uff0c\u800c\u4f7f\u7528\u5176\u4ed6\u5982matplotlib\u7b49\u3002", 
            "title": "\u5341\u4e09\u3001\u753b\u56fe"
        }, 
        {
            "location": "/\u65e5\u5e38/\u5e38\u7528\u5de5\u5177/10\u5206\u949f\u4e0a\u624bPandas/#_36", 
            "text": "", 
            "title": "\u5341\u56db\u3001\u8bfb\u53d6\u5b58\u50a8"
        }, 
        {
            "location": "/\u65e5\u5e38/\u5e38\u7528\u5de5\u5177/10\u5206\u949f\u4e0a\u624bPandas/#csv", 
            "text": "\u5199\u5165\uff1a \n  df . to_csv ( foo.csv )  \u8bfb\u53d6\uff1a \n  In   [ 142 ]:   pd . read_csv ( foo.csv )  Out [ 142 ]:  \n      Unnamed :   0            A            B           C            D  0      2000 - 01 - 01     0.266457    - 0.399641   - 0.219582     1.186860  1      2000 - 01 - 02    - 1.170732    - 0.345873    1.653061    - 0.282953  2      2000 - 01 - 03    - 1.734933     0.530468    2.060811    - 0.515536  3      2000 - 01 - 04    - 1.555121     1.452620    0.239859    - 1.156896  4      2000 - 01 - 05     0.578117     0.511371    0.103552    - 2.428202  5      2000 - 01 - 06     0.478344     0.449933   - 0.741620    - 1.962409  6      2000 - 01 - 07     1.235339    - 0.091757   - 1.543861    - 1.084753  ..            ...          ...          ...         ...          ...  993    2002 - 09 - 20   - 10.628548    - 9.153563   - 7.883146    28.313940  994    2002 - 09 - 21   - 10.390377    - 8.727491   - 6.399645    30.914107  995    2002 - 09 - 22    - 8.985362    - 8.485624   - 4.669462    31.367740  996    2002 - 09 - 23    - 9.558560    - 8.781216   - 4.499815    30.518439  997    2002 - 09 - 24    - 9.902058    - 9.340490   - 4.386639    30.105593  998    2002 - 09 - 25   - 10.216020    - 9.480682   - 3.933802    29.758560  999    2002 - 09 - 26   - 11.856774   - 10.671012   - 3.216025    29.369368  [ 1000   rows   x   5   columns ]", 
            "title": "CSV\uff1a"
        }, 
        {
            "location": "/\u65e5\u5e38/\u5e38\u7528\u5de5\u5177/10\u5206\u949f\u4e0a\u624bPandas/#hdf5", 
            "text": "df . to_hdf ( foo.h5 , df )  In   [ 144 ]:   pd . read_hdf ( foo.h5 , df )  Out [ 144 ]:  \n                     A            B           C            D  2000 - 01 - 01     0.266457    - 0.399641   - 0.219582     1.186860  2000 - 01 - 02    - 1.170732    - 0.345873    1.653061    - 0.282953  2000 - 01 - 03    - 1.734933     0.530468    2.060811    - 0.515536  2000 - 01 - 04    - 1.555121     1.452620    0.239859    - 1.156896  2000 - 01 - 05     0.578117     0.511371    0.103552    - 2.428202  2000 - 01 - 06     0.478344     0.449933   - 0.741620    - 1.962409  2000 - 01 - 07     1.235339    - 0.091757   - 1.543861    - 1.084753  ...                 ...          ...         ...          ...  2002 - 09 - 20   - 10.628548    - 9.153563   - 7.883146    28.313940  2002 - 09 - 21   - 10.390377    - 8.727491   - 6.399645    30.914107  2002 - 09 - 22    - 8.985362    - 8.485624   - 4.669462    31.367740  2002 - 09 - 23    - 9.558560    - 8.781216   - 4.499815    30.518439  2002 - 09 - 24    - 9.902058    - 9.340490   - 4.386639    30.105593  2002 - 09 - 25   - 10.216020    - 9.480682   - 3.933802    29.758560  2002 - 09 - 26   - 11.856774   - 10.671012   - 3.216025    29.369368  [ 1000   rows   x   4   columns ]", 
            "title": "HDF5\uff1a"
        }, 
        {
            "location": "/\u65e5\u5e38/\u5e38\u7528\u5de5\u5177/10\u5206\u949f\u4e0a\u624bPandas/#excel", 
            "text": "df . to_excel ( foo.xlsx ,   sheet_name = Sheet1 )  In   [ 146 ]:   pd . read_excel ( foo.xlsx ,   Sheet1 ,   index_col = None ,   na_values = [ NA ])  Out [ 146 ]:  \n                     A            B           C            D  2000 - 01 - 01     0.266457    - 0.399641   - 0.219582     1.186860  2000 - 01 - 02    - 1.170732    - 0.345873    1.653061    - 0.282953  2000 - 01 - 03    - 1.734933     0.530468    2.060811    - 0.515536  2000 - 01 - 04    - 1.555121     1.452620    0.239859    - 1.156896  2000 - 01 - 05     0.578117     0.511371    0.103552    - 2.428202  2000 - 01 - 06     0.478344     0.449933   - 0.741620    - 1.962409  2000 - 01 - 07     1.235339    - 0.091757   - 1.543861    - 1.084753  ...                 ...          ...         ...          ...  2002 - 09 - 20   - 10.628548    - 9.153563   - 7.883146    28.313940  2002 - 09 - 21   - 10.390377    - 8.727491   - 6.399645    30.914107  2002 - 09 - 22    - 8.985362    - 8.485624   - 4.669462    31.367740  2002 - 09 - 23    - 9.558560    - 8.781216   - 4.499815    30.518439  2002 - 09 - 24    - 9.902058    - 9.340490   - 4.386639    30.105593  2002 - 09 - 25   - 10.216020    - 9.480682   - 3.933802    29.758560  2002 - 09 - 26   - 11.856774   - 10.671012   - 3.216025    29.369368  [ 1000   rows   x   4   columns ]", 
            "title": "EXCEL\uff1a"
        }
    ]
}